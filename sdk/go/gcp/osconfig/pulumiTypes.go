// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package osconfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GuestPoliciesAssignment struct {
	// Targets instances matching at least one of these label sets. This allows an assignment to target disparate groups,
	// for example "env=prod or env=staging".
	// Structure is documented below.
	GroupLabels []GuestPoliciesAssignmentGroupLabel `pulumi:"groupLabels"`
	// Targets VM instances whose name starts with one of these prefixes.
	// Like labels, this is another way to group VM instances when targeting configs,
	// for example prefix="prod-".
	// Only supported for project-level policies.
	InstanceNamePrefixes []string `pulumi:"instanceNamePrefixes"`
	// Targets any of the instances specified. Instances are specified by their URI in the form
	// zones/[ZONE]/instances/[INSTANCE_NAME].
	// Instance targeting is uncommon and is supported to facilitate the management of changes
	// by the instance or to target specific VM instances for development and testing.
	// Only supported for project-level policies and must reference instances within this project.
	Instances []string `pulumi:"instances"`
	// Targets VM instances matching at least one of the following OS types.
	// VM instances must match all supplied criteria for a given OsType to be included.
	// Structure is documented below.
	OsTypes []GuestPoliciesAssignmentOsType `pulumi:"osTypes"`
	// Targets instances in any of these zones. Leave empty to target instances in any zone.
	// Zonal targeting is uncommon and is supported to facilitate the management of changes by zone.
	Zones []string `pulumi:"zones"`
}

// GuestPoliciesAssignmentInput is an input type that accepts GuestPoliciesAssignmentArgs and GuestPoliciesAssignmentOutput values.
// You can construct a concrete instance of `GuestPoliciesAssignmentInput` via:
//
//	GuestPoliciesAssignmentArgs{...}
type GuestPoliciesAssignmentInput interface {
	pulumi.Input

	ToGuestPoliciesAssignmentOutput() GuestPoliciesAssignmentOutput
	ToGuestPoliciesAssignmentOutputWithContext(context.Context) GuestPoliciesAssignmentOutput
}

type GuestPoliciesAssignmentArgs struct {
	// Targets instances matching at least one of these label sets. This allows an assignment to target disparate groups,
	// for example "env=prod or env=staging".
	// Structure is documented below.
	GroupLabels GuestPoliciesAssignmentGroupLabelArrayInput `pulumi:"groupLabels"`
	// Targets VM instances whose name starts with one of these prefixes.
	// Like labels, this is another way to group VM instances when targeting configs,
	// for example prefix="prod-".
	// Only supported for project-level policies.
	InstanceNamePrefixes pulumi.StringArrayInput `pulumi:"instanceNamePrefixes"`
	// Targets any of the instances specified. Instances are specified by their URI in the form
	// zones/[ZONE]/instances/[INSTANCE_NAME].
	// Instance targeting is uncommon and is supported to facilitate the management of changes
	// by the instance or to target specific VM instances for development and testing.
	// Only supported for project-level policies and must reference instances within this project.
	Instances pulumi.StringArrayInput `pulumi:"instances"`
	// Targets VM instances matching at least one of the following OS types.
	// VM instances must match all supplied criteria for a given OsType to be included.
	// Structure is documented below.
	OsTypes GuestPoliciesAssignmentOsTypeArrayInput `pulumi:"osTypes"`
	// Targets instances in any of these zones. Leave empty to target instances in any zone.
	// Zonal targeting is uncommon and is supported to facilitate the management of changes by zone.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (GuestPoliciesAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesAssignment)(nil)).Elem()
}

func (i GuestPoliciesAssignmentArgs) ToGuestPoliciesAssignmentOutput() GuestPoliciesAssignmentOutput {
	return i.ToGuestPoliciesAssignmentOutputWithContext(context.Background())
}

func (i GuestPoliciesAssignmentArgs) ToGuestPoliciesAssignmentOutputWithContext(ctx context.Context) GuestPoliciesAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesAssignmentOutput)
}

func (i GuestPoliciesAssignmentArgs) ToGuestPoliciesAssignmentPtrOutput() GuestPoliciesAssignmentPtrOutput {
	return i.ToGuestPoliciesAssignmentPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesAssignmentArgs) ToGuestPoliciesAssignmentPtrOutputWithContext(ctx context.Context) GuestPoliciesAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesAssignmentOutput).ToGuestPoliciesAssignmentPtrOutputWithContext(ctx)
}

// GuestPoliciesAssignmentPtrInput is an input type that accepts GuestPoliciesAssignmentArgs, GuestPoliciesAssignmentPtr and GuestPoliciesAssignmentPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesAssignmentPtrInput` via:
//
//	        GuestPoliciesAssignmentArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesAssignmentPtrInput interface {
	pulumi.Input

	ToGuestPoliciesAssignmentPtrOutput() GuestPoliciesAssignmentPtrOutput
	ToGuestPoliciesAssignmentPtrOutputWithContext(context.Context) GuestPoliciesAssignmentPtrOutput
}

type guestPoliciesAssignmentPtrType GuestPoliciesAssignmentArgs

func GuestPoliciesAssignmentPtr(v *GuestPoliciesAssignmentArgs) GuestPoliciesAssignmentPtrInput {
	return (*guestPoliciesAssignmentPtrType)(v)
}

func (*guestPoliciesAssignmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesAssignment)(nil)).Elem()
}

func (i *guestPoliciesAssignmentPtrType) ToGuestPoliciesAssignmentPtrOutput() GuestPoliciesAssignmentPtrOutput {
	return i.ToGuestPoliciesAssignmentPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesAssignmentPtrType) ToGuestPoliciesAssignmentPtrOutputWithContext(ctx context.Context) GuestPoliciesAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesAssignmentPtrOutput)
}

type GuestPoliciesAssignmentOutput struct{ *pulumi.OutputState }

func (GuestPoliciesAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesAssignment)(nil)).Elem()
}

func (o GuestPoliciesAssignmentOutput) ToGuestPoliciesAssignmentOutput() GuestPoliciesAssignmentOutput {
	return o
}

func (o GuestPoliciesAssignmentOutput) ToGuestPoliciesAssignmentOutputWithContext(ctx context.Context) GuestPoliciesAssignmentOutput {
	return o
}

func (o GuestPoliciesAssignmentOutput) ToGuestPoliciesAssignmentPtrOutput() GuestPoliciesAssignmentPtrOutput {
	return o.ToGuestPoliciesAssignmentPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesAssignmentOutput) ToGuestPoliciesAssignmentPtrOutputWithContext(ctx context.Context) GuestPoliciesAssignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesAssignment) *GuestPoliciesAssignment {
		return &v
	}).(GuestPoliciesAssignmentPtrOutput)
}

// Targets instances matching at least one of these label sets. This allows an assignment to target disparate groups,
// for example "env=prod or env=staging".
// Structure is documented below.
func (o GuestPoliciesAssignmentOutput) GroupLabels() GuestPoliciesAssignmentGroupLabelArrayOutput {
	return o.ApplyT(func(v GuestPoliciesAssignment) []GuestPoliciesAssignmentGroupLabel { return v.GroupLabels }).(GuestPoliciesAssignmentGroupLabelArrayOutput)
}

// Targets VM instances whose name starts with one of these prefixes.
// Like labels, this is another way to group VM instances when targeting configs,
// for example prefix="prod-".
// Only supported for project-level policies.
func (o GuestPoliciesAssignmentOutput) InstanceNamePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesAssignment) []string { return v.InstanceNamePrefixes }).(pulumi.StringArrayOutput)
}

// Targets any of the instances specified. Instances are specified by their URI in the form
// zones/[ZONE]/instances/[INSTANCE_NAME].
// Instance targeting is uncommon and is supported to facilitate the management of changes
// by the instance or to target specific VM instances for development and testing.
// Only supported for project-level policies and must reference instances within this project.
func (o GuestPoliciesAssignmentOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesAssignment) []string { return v.Instances }).(pulumi.StringArrayOutput)
}

// Targets VM instances matching at least one of the following OS types.
// VM instances must match all supplied criteria for a given OsType to be included.
// Structure is documented below.
func (o GuestPoliciesAssignmentOutput) OsTypes() GuestPoliciesAssignmentOsTypeArrayOutput {
	return o.ApplyT(func(v GuestPoliciesAssignment) []GuestPoliciesAssignmentOsType { return v.OsTypes }).(GuestPoliciesAssignmentOsTypeArrayOutput)
}

// Targets instances in any of these zones. Leave empty to target instances in any zone.
// Zonal targeting is uncommon and is supported to facilitate the management of changes by zone.
func (o GuestPoliciesAssignmentOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesAssignment) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type GuestPoliciesAssignmentPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesAssignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesAssignment)(nil)).Elem()
}

func (o GuestPoliciesAssignmentPtrOutput) ToGuestPoliciesAssignmentPtrOutput() GuestPoliciesAssignmentPtrOutput {
	return o
}

func (o GuestPoliciesAssignmentPtrOutput) ToGuestPoliciesAssignmentPtrOutputWithContext(ctx context.Context) GuestPoliciesAssignmentPtrOutput {
	return o
}

func (o GuestPoliciesAssignmentPtrOutput) Elem() GuestPoliciesAssignmentOutput {
	return o.ApplyT(func(v *GuestPoliciesAssignment) GuestPoliciesAssignment {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesAssignment
		return ret
	}).(GuestPoliciesAssignmentOutput)
}

// Targets instances matching at least one of these label sets. This allows an assignment to target disparate groups,
// for example "env=prod or env=staging".
// Structure is documented below.
func (o GuestPoliciesAssignmentPtrOutput) GroupLabels() GuestPoliciesAssignmentGroupLabelArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesAssignment) []GuestPoliciesAssignmentGroupLabel {
		if v == nil {
			return nil
		}
		return v.GroupLabels
	}).(GuestPoliciesAssignmentGroupLabelArrayOutput)
}

// Targets VM instances whose name starts with one of these prefixes.
// Like labels, this is another way to group VM instances when targeting configs,
// for example prefix="prod-".
// Only supported for project-level policies.
func (o GuestPoliciesAssignmentPtrOutput) InstanceNamePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesAssignment) []string {
		if v == nil {
			return nil
		}
		return v.InstanceNamePrefixes
	}).(pulumi.StringArrayOutput)
}

// Targets any of the instances specified. Instances are specified by their URI in the form
// zones/[ZONE]/instances/[INSTANCE_NAME].
// Instance targeting is uncommon and is supported to facilitate the management of changes
// by the instance or to target specific VM instances for development and testing.
// Only supported for project-level policies and must reference instances within this project.
func (o GuestPoliciesAssignmentPtrOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesAssignment) []string {
		if v == nil {
			return nil
		}
		return v.Instances
	}).(pulumi.StringArrayOutput)
}

// Targets VM instances matching at least one of the following OS types.
// VM instances must match all supplied criteria for a given OsType to be included.
// Structure is documented below.
func (o GuestPoliciesAssignmentPtrOutput) OsTypes() GuestPoliciesAssignmentOsTypeArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesAssignment) []GuestPoliciesAssignmentOsType {
		if v == nil {
			return nil
		}
		return v.OsTypes
	}).(GuestPoliciesAssignmentOsTypeArrayOutput)
}

// Targets instances in any of these zones. Leave empty to target instances in any zone.
// Zonal targeting is uncommon and is supported to facilitate the management of changes by zone.
func (o GuestPoliciesAssignmentPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesAssignment) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type GuestPoliciesAssignmentGroupLabel struct {
	// Google Compute Engine instance labels that must be present for an instance to be included in this assignment group.
	Labels map[string]string `pulumi:"labels"`
}

// GuestPoliciesAssignmentGroupLabelInput is an input type that accepts GuestPoliciesAssignmentGroupLabelArgs and GuestPoliciesAssignmentGroupLabelOutput values.
// You can construct a concrete instance of `GuestPoliciesAssignmentGroupLabelInput` via:
//
//	GuestPoliciesAssignmentGroupLabelArgs{...}
type GuestPoliciesAssignmentGroupLabelInput interface {
	pulumi.Input

	ToGuestPoliciesAssignmentGroupLabelOutput() GuestPoliciesAssignmentGroupLabelOutput
	ToGuestPoliciesAssignmentGroupLabelOutputWithContext(context.Context) GuestPoliciesAssignmentGroupLabelOutput
}

type GuestPoliciesAssignmentGroupLabelArgs struct {
	// Google Compute Engine instance labels that must be present for an instance to be included in this assignment group.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (GuestPoliciesAssignmentGroupLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesAssignmentGroupLabel)(nil)).Elem()
}

func (i GuestPoliciesAssignmentGroupLabelArgs) ToGuestPoliciesAssignmentGroupLabelOutput() GuestPoliciesAssignmentGroupLabelOutput {
	return i.ToGuestPoliciesAssignmentGroupLabelOutputWithContext(context.Background())
}

func (i GuestPoliciesAssignmentGroupLabelArgs) ToGuestPoliciesAssignmentGroupLabelOutputWithContext(ctx context.Context) GuestPoliciesAssignmentGroupLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesAssignmentGroupLabelOutput)
}

// GuestPoliciesAssignmentGroupLabelArrayInput is an input type that accepts GuestPoliciesAssignmentGroupLabelArray and GuestPoliciesAssignmentGroupLabelArrayOutput values.
// You can construct a concrete instance of `GuestPoliciesAssignmentGroupLabelArrayInput` via:
//
//	GuestPoliciesAssignmentGroupLabelArray{ GuestPoliciesAssignmentGroupLabelArgs{...} }
type GuestPoliciesAssignmentGroupLabelArrayInput interface {
	pulumi.Input

	ToGuestPoliciesAssignmentGroupLabelArrayOutput() GuestPoliciesAssignmentGroupLabelArrayOutput
	ToGuestPoliciesAssignmentGroupLabelArrayOutputWithContext(context.Context) GuestPoliciesAssignmentGroupLabelArrayOutput
}

type GuestPoliciesAssignmentGroupLabelArray []GuestPoliciesAssignmentGroupLabelInput

func (GuestPoliciesAssignmentGroupLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesAssignmentGroupLabel)(nil)).Elem()
}

func (i GuestPoliciesAssignmentGroupLabelArray) ToGuestPoliciesAssignmentGroupLabelArrayOutput() GuestPoliciesAssignmentGroupLabelArrayOutput {
	return i.ToGuestPoliciesAssignmentGroupLabelArrayOutputWithContext(context.Background())
}

func (i GuestPoliciesAssignmentGroupLabelArray) ToGuestPoliciesAssignmentGroupLabelArrayOutputWithContext(ctx context.Context) GuestPoliciesAssignmentGroupLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesAssignmentGroupLabelArrayOutput)
}

type GuestPoliciesAssignmentGroupLabelOutput struct{ *pulumi.OutputState }

func (GuestPoliciesAssignmentGroupLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesAssignmentGroupLabel)(nil)).Elem()
}

func (o GuestPoliciesAssignmentGroupLabelOutput) ToGuestPoliciesAssignmentGroupLabelOutput() GuestPoliciesAssignmentGroupLabelOutput {
	return o
}

func (o GuestPoliciesAssignmentGroupLabelOutput) ToGuestPoliciesAssignmentGroupLabelOutputWithContext(ctx context.Context) GuestPoliciesAssignmentGroupLabelOutput {
	return o
}

// Google Compute Engine instance labels that must be present for an instance to be included in this assignment group.
func (o GuestPoliciesAssignmentGroupLabelOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GuestPoliciesAssignmentGroupLabel) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type GuestPoliciesAssignmentGroupLabelArrayOutput struct{ *pulumi.OutputState }

func (GuestPoliciesAssignmentGroupLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesAssignmentGroupLabel)(nil)).Elem()
}

func (o GuestPoliciesAssignmentGroupLabelArrayOutput) ToGuestPoliciesAssignmentGroupLabelArrayOutput() GuestPoliciesAssignmentGroupLabelArrayOutput {
	return o
}

func (o GuestPoliciesAssignmentGroupLabelArrayOutput) ToGuestPoliciesAssignmentGroupLabelArrayOutputWithContext(ctx context.Context) GuestPoliciesAssignmentGroupLabelArrayOutput {
	return o
}

func (o GuestPoliciesAssignmentGroupLabelArrayOutput) Index(i pulumi.IntInput) GuestPoliciesAssignmentGroupLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuestPoliciesAssignmentGroupLabel {
		return vs[0].([]GuestPoliciesAssignmentGroupLabel)[vs[1].(int)]
	}).(GuestPoliciesAssignmentGroupLabelOutput)
}

type GuestPoliciesAssignmentOsType struct {
	// Targets VM instances with OS Inventory enabled and having the following OS architecture.
	OsArchitecture *string `pulumi:"osArchitecture"`
	// Targets VM instances with OS Inventory enabled and having the following OS short name, for example "debian" or "windows".
	OsShortName *string `pulumi:"osShortName"`
	// Targets VM instances with OS Inventory enabled and having the following following OS version.
	OsVersion *string `pulumi:"osVersion"`
}

// GuestPoliciesAssignmentOsTypeInput is an input type that accepts GuestPoliciesAssignmentOsTypeArgs and GuestPoliciesAssignmentOsTypeOutput values.
// You can construct a concrete instance of `GuestPoliciesAssignmentOsTypeInput` via:
//
//	GuestPoliciesAssignmentOsTypeArgs{...}
type GuestPoliciesAssignmentOsTypeInput interface {
	pulumi.Input

	ToGuestPoliciesAssignmentOsTypeOutput() GuestPoliciesAssignmentOsTypeOutput
	ToGuestPoliciesAssignmentOsTypeOutputWithContext(context.Context) GuestPoliciesAssignmentOsTypeOutput
}

type GuestPoliciesAssignmentOsTypeArgs struct {
	// Targets VM instances with OS Inventory enabled and having the following OS architecture.
	OsArchitecture pulumi.StringPtrInput `pulumi:"osArchitecture"`
	// Targets VM instances with OS Inventory enabled and having the following OS short name, for example "debian" or "windows".
	OsShortName pulumi.StringPtrInput `pulumi:"osShortName"`
	// Targets VM instances with OS Inventory enabled and having the following following OS version.
	OsVersion pulumi.StringPtrInput `pulumi:"osVersion"`
}

func (GuestPoliciesAssignmentOsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesAssignmentOsType)(nil)).Elem()
}

func (i GuestPoliciesAssignmentOsTypeArgs) ToGuestPoliciesAssignmentOsTypeOutput() GuestPoliciesAssignmentOsTypeOutput {
	return i.ToGuestPoliciesAssignmentOsTypeOutputWithContext(context.Background())
}

func (i GuestPoliciesAssignmentOsTypeArgs) ToGuestPoliciesAssignmentOsTypeOutputWithContext(ctx context.Context) GuestPoliciesAssignmentOsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesAssignmentOsTypeOutput)
}

// GuestPoliciesAssignmentOsTypeArrayInput is an input type that accepts GuestPoliciesAssignmentOsTypeArray and GuestPoliciesAssignmentOsTypeArrayOutput values.
// You can construct a concrete instance of `GuestPoliciesAssignmentOsTypeArrayInput` via:
//
//	GuestPoliciesAssignmentOsTypeArray{ GuestPoliciesAssignmentOsTypeArgs{...} }
type GuestPoliciesAssignmentOsTypeArrayInput interface {
	pulumi.Input

	ToGuestPoliciesAssignmentOsTypeArrayOutput() GuestPoliciesAssignmentOsTypeArrayOutput
	ToGuestPoliciesAssignmentOsTypeArrayOutputWithContext(context.Context) GuestPoliciesAssignmentOsTypeArrayOutput
}

type GuestPoliciesAssignmentOsTypeArray []GuestPoliciesAssignmentOsTypeInput

func (GuestPoliciesAssignmentOsTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesAssignmentOsType)(nil)).Elem()
}

func (i GuestPoliciesAssignmentOsTypeArray) ToGuestPoliciesAssignmentOsTypeArrayOutput() GuestPoliciesAssignmentOsTypeArrayOutput {
	return i.ToGuestPoliciesAssignmentOsTypeArrayOutputWithContext(context.Background())
}

func (i GuestPoliciesAssignmentOsTypeArray) ToGuestPoliciesAssignmentOsTypeArrayOutputWithContext(ctx context.Context) GuestPoliciesAssignmentOsTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesAssignmentOsTypeArrayOutput)
}

type GuestPoliciesAssignmentOsTypeOutput struct{ *pulumi.OutputState }

func (GuestPoliciesAssignmentOsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesAssignmentOsType)(nil)).Elem()
}

func (o GuestPoliciesAssignmentOsTypeOutput) ToGuestPoliciesAssignmentOsTypeOutput() GuestPoliciesAssignmentOsTypeOutput {
	return o
}

func (o GuestPoliciesAssignmentOsTypeOutput) ToGuestPoliciesAssignmentOsTypeOutputWithContext(ctx context.Context) GuestPoliciesAssignmentOsTypeOutput {
	return o
}

// Targets VM instances with OS Inventory enabled and having the following OS architecture.
func (o GuestPoliciesAssignmentOsTypeOutput) OsArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesAssignmentOsType) *string { return v.OsArchitecture }).(pulumi.StringPtrOutput)
}

// Targets VM instances with OS Inventory enabled and having the following OS short name, for example "debian" or "windows".
func (o GuestPoliciesAssignmentOsTypeOutput) OsShortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesAssignmentOsType) *string { return v.OsShortName }).(pulumi.StringPtrOutput)
}

// Targets VM instances with OS Inventory enabled and having the following following OS version.
func (o GuestPoliciesAssignmentOsTypeOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesAssignmentOsType) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

type GuestPoliciesAssignmentOsTypeArrayOutput struct{ *pulumi.OutputState }

func (GuestPoliciesAssignmentOsTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesAssignmentOsType)(nil)).Elem()
}

func (o GuestPoliciesAssignmentOsTypeArrayOutput) ToGuestPoliciesAssignmentOsTypeArrayOutput() GuestPoliciesAssignmentOsTypeArrayOutput {
	return o
}

func (o GuestPoliciesAssignmentOsTypeArrayOutput) ToGuestPoliciesAssignmentOsTypeArrayOutputWithContext(ctx context.Context) GuestPoliciesAssignmentOsTypeArrayOutput {
	return o
}

func (o GuestPoliciesAssignmentOsTypeArrayOutput) Index(i pulumi.IntInput) GuestPoliciesAssignmentOsTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuestPoliciesAssignmentOsType {
		return vs[0].([]GuestPoliciesAssignmentOsType)[vs[1].(int)]
	}).(GuestPoliciesAssignmentOsTypeOutput)
}

type GuestPoliciesPackage struct {
	// Default is INSTALLED. The desired state the agent should maintain for this recipe.
	// INSTALLED: The software recipe is installed on the instance but won't be updated to new versions.
	// INSTALLED_KEEP_UPDATED: The software recipe is installed on the instance. The recipe is updated to a higher version,
	// if a higher version of the recipe is assigned to this instance.
	// REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state is rejected.
	// Default value is `INSTALLED`.
	// Possible values are `INSTALLED`, `UPDATED`, and `REMOVED`.
	DesiredState *string `pulumi:"desiredState"`
	// Type of package manager that can be used to install this package. If a system does not have the package manager,
	// the package is not installed or removed no error message is returned. By default, or if you specify ANY,
	// the agent attempts to install and remove this package using the default package manager.
	// This is useful when creating a policy that applies to different types of systems.
	// The default behavior is ANY.
	// Default value is `ANY`.
	// Possible values are `ANY`, `APT`, `YUM`, `ZYPPER`, and `GOO`.
	Manager *string `pulumi:"manager"`
	// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
	// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
	// This means that requests to create multiple recipes with the same name and version are rejected since they
	// could potentially have conflicting assignments.
	Name string `pulumi:"name"`
}

// GuestPoliciesPackageInput is an input type that accepts GuestPoliciesPackageArgs and GuestPoliciesPackageOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageInput` via:
//
//	GuestPoliciesPackageArgs{...}
type GuestPoliciesPackageInput interface {
	pulumi.Input

	ToGuestPoliciesPackageOutput() GuestPoliciesPackageOutput
	ToGuestPoliciesPackageOutputWithContext(context.Context) GuestPoliciesPackageOutput
}

type GuestPoliciesPackageArgs struct {
	// Default is INSTALLED. The desired state the agent should maintain for this recipe.
	// INSTALLED: The software recipe is installed on the instance but won't be updated to new versions.
	// INSTALLED_KEEP_UPDATED: The software recipe is installed on the instance. The recipe is updated to a higher version,
	// if a higher version of the recipe is assigned to this instance.
	// REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state is rejected.
	// Default value is `INSTALLED`.
	// Possible values are `INSTALLED`, `UPDATED`, and `REMOVED`.
	DesiredState pulumi.StringPtrInput `pulumi:"desiredState"`
	// Type of package manager that can be used to install this package. If a system does not have the package manager,
	// the package is not installed or removed no error message is returned. By default, or if you specify ANY,
	// the agent attempts to install and remove this package using the default package manager.
	// This is useful when creating a policy that applies to different types of systems.
	// The default behavior is ANY.
	// Default value is `ANY`.
	// Possible values are `ANY`, `APT`, `YUM`, `ZYPPER`, and `GOO`.
	Manager pulumi.StringPtrInput `pulumi:"manager"`
	// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
	// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
	// This means that requests to create multiple recipes with the same name and version are rejected since they
	// could potentially have conflicting assignments.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GuestPoliciesPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackage)(nil)).Elem()
}

func (i GuestPoliciesPackageArgs) ToGuestPoliciesPackageOutput() GuestPoliciesPackageOutput {
	return i.ToGuestPoliciesPackageOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageArgs) ToGuestPoliciesPackageOutputWithContext(ctx context.Context) GuestPoliciesPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageOutput)
}

// GuestPoliciesPackageArrayInput is an input type that accepts GuestPoliciesPackageArray and GuestPoliciesPackageArrayOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageArrayInput` via:
//
//	GuestPoliciesPackageArray{ GuestPoliciesPackageArgs{...} }
type GuestPoliciesPackageArrayInput interface {
	pulumi.Input

	ToGuestPoliciesPackageArrayOutput() GuestPoliciesPackageArrayOutput
	ToGuestPoliciesPackageArrayOutputWithContext(context.Context) GuestPoliciesPackageArrayOutput
}

type GuestPoliciesPackageArray []GuestPoliciesPackageInput

func (GuestPoliciesPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesPackage)(nil)).Elem()
}

func (i GuestPoliciesPackageArray) ToGuestPoliciesPackageArrayOutput() GuestPoliciesPackageArrayOutput {
	return i.ToGuestPoliciesPackageArrayOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageArray) ToGuestPoliciesPackageArrayOutputWithContext(ctx context.Context) GuestPoliciesPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageArrayOutput)
}

type GuestPoliciesPackageOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackage)(nil)).Elem()
}

func (o GuestPoliciesPackageOutput) ToGuestPoliciesPackageOutput() GuestPoliciesPackageOutput {
	return o
}

func (o GuestPoliciesPackageOutput) ToGuestPoliciesPackageOutputWithContext(ctx context.Context) GuestPoliciesPackageOutput {
	return o
}

// Default is INSTALLED. The desired state the agent should maintain for this recipe.
// INSTALLED: The software recipe is installed on the instance but won't be updated to new versions.
// INSTALLED_KEEP_UPDATED: The software recipe is installed on the instance. The recipe is updated to a higher version,
// if a higher version of the recipe is assigned to this instance.
// REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state is rejected.
// Default value is `INSTALLED`.
// Possible values are `INSTALLED`, `UPDATED`, and `REMOVED`.
func (o GuestPoliciesPackageOutput) DesiredState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackage) *string { return v.DesiredState }).(pulumi.StringPtrOutput)
}

// Type of package manager that can be used to install this package. If a system does not have the package manager,
// the package is not installed or removed no error message is returned. By default, or if you specify ANY,
// the agent attempts to install and remove this package using the default package manager.
// This is useful when creating a policy that applies to different types of systems.
// The default behavior is ANY.
// Default value is `ANY`.
// Possible values are `ANY`, `APT`, `YUM`, `ZYPPER`, and `GOO`.
func (o GuestPoliciesPackageOutput) Manager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackage) *string { return v.Manager }).(pulumi.StringPtrOutput)
}

// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
// This means that requests to create multiple recipes with the same name and version are rejected since they
// could potentially have conflicting assignments.
func (o GuestPoliciesPackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesPackage) string { return v.Name }).(pulumi.StringOutput)
}

type GuestPoliciesPackageArrayOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesPackage)(nil)).Elem()
}

func (o GuestPoliciesPackageArrayOutput) ToGuestPoliciesPackageArrayOutput() GuestPoliciesPackageArrayOutput {
	return o
}

func (o GuestPoliciesPackageArrayOutput) ToGuestPoliciesPackageArrayOutputWithContext(ctx context.Context) GuestPoliciesPackageArrayOutput {
	return o
}

func (o GuestPoliciesPackageArrayOutput) Index(i pulumi.IntInput) GuestPoliciesPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuestPoliciesPackage {
		return vs[0].([]GuestPoliciesPackage)[vs[1].(int)]
	}).(GuestPoliciesPackageOutput)
}

type GuestPoliciesPackageRepository struct {
	// An Apt Repository.
	// Structure is documented below.
	Apt *GuestPoliciesPackageRepositoryApt `pulumi:"apt"`
	// A Goo Repository.
	// Structure is documented below.
	Goo *GuestPoliciesPackageRepositoryGoo `pulumi:"goo"`
	// A Yum Repository.
	// Structure is documented below.
	Yum *GuestPoliciesPackageRepositoryYum `pulumi:"yum"`
	// A Zypper Repository.
	// Structure is documented below.
	Zypper *GuestPoliciesPackageRepositoryZypper `pulumi:"zypper"`
}

// GuestPoliciesPackageRepositoryInput is an input type that accepts GuestPoliciesPackageRepositoryArgs and GuestPoliciesPackageRepositoryOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryInput` via:
//
//	GuestPoliciesPackageRepositoryArgs{...}
type GuestPoliciesPackageRepositoryInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryOutput() GuestPoliciesPackageRepositoryOutput
	ToGuestPoliciesPackageRepositoryOutputWithContext(context.Context) GuestPoliciesPackageRepositoryOutput
}

type GuestPoliciesPackageRepositoryArgs struct {
	// An Apt Repository.
	// Structure is documented below.
	Apt GuestPoliciesPackageRepositoryAptPtrInput `pulumi:"apt"`
	// A Goo Repository.
	// Structure is documented below.
	Goo GuestPoliciesPackageRepositoryGooPtrInput `pulumi:"goo"`
	// A Yum Repository.
	// Structure is documented below.
	Yum GuestPoliciesPackageRepositoryYumPtrInput `pulumi:"yum"`
	// A Zypper Repository.
	// Structure is documented below.
	Zypper GuestPoliciesPackageRepositoryZypperPtrInput `pulumi:"zypper"`
}

func (GuestPoliciesPackageRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepository)(nil)).Elem()
}

func (i GuestPoliciesPackageRepositoryArgs) ToGuestPoliciesPackageRepositoryOutput() GuestPoliciesPackageRepositoryOutput {
	return i.ToGuestPoliciesPackageRepositoryOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryArgs) ToGuestPoliciesPackageRepositoryOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryOutput)
}

// GuestPoliciesPackageRepositoryArrayInput is an input type that accepts GuestPoliciesPackageRepositoryArray and GuestPoliciesPackageRepositoryArrayOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryArrayInput` via:
//
//	GuestPoliciesPackageRepositoryArray{ GuestPoliciesPackageRepositoryArgs{...} }
type GuestPoliciesPackageRepositoryArrayInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryArrayOutput() GuestPoliciesPackageRepositoryArrayOutput
	ToGuestPoliciesPackageRepositoryArrayOutputWithContext(context.Context) GuestPoliciesPackageRepositoryArrayOutput
}

type GuestPoliciesPackageRepositoryArray []GuestPoliciesPackageRepositoryInput

func (GuestPoliciesPackageRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesPackageRepository)(nil)).Elem()
}

func (i GuestPoliciesPackageRepositoryArray) ToGuestPoliciesPackageRepositoryArrayOutput() GuestPoliciesPackageRepositoryArrayOutput {
	return i.ToGuestPoliciesPackageRepositoryArrayOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryArray) ToGuestPoliciesPackageRepositoryArrayOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryArrayOutput)
}

type GuestPoliciesPackageRepositoryOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepository)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryOutput) ToGuestPoliciesPackageRepositoryOutput() GuestPoliciesPackageRepositoryOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryOutput) ToGuestPoliciesPackageRepositoryOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryOutput {
	return o
}

// An Apt Repository.
// Structure is documented below.
func (o GuestPoliciesPackageRepositoryOutput) Apt() GuestPoliciesPackageRepositoryAptPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepository) *GuestPoliciesPackageRepositoryApt { return v.Apt }).(GuestPoliciesPackageRepositoryAptPtrOutput)
}

// A Goo Repository.
// Structure is documented below.
func (o GuestPoliciesPackageRepositoryOutput) Goo() GuestPoliciesPackageRepositoryGooPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepository) *GuestPoliciesPackageRepositoryGoo { return v.Goo }).(GuestPoliciesPackageRepositoryGooPtrOutput)
}

// A Yum Repository.
// Structure is documented below.
func (o GuestPoliciesPackageRepositoryOutput) Yum() GuestPoliciesPackageRepositoryYumPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepository) *GuestPoliciesPackageRepositoryYum { return v.Yum }).(GuestPoliciesPackageRepositoryYumPtrOutput)
}

// A Zypper Repository.
// Structure is documented below.
func (o GuestPoliciesPackageRepositoryOutput) Zypper() GuestPoliciesPackageRepositoryZypperPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepository) *GuestPoliciesPackageRepositoryZypper { return v.Zypper }).(GuestPoliciesPackageRepositoryZypperPtrOutput)
}

type GuestPoliciesPackageRepositoryArrayOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesPackageRepository)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryArrayOutput) ToGuestPoliciesPackageRepositoryArrayOutput() GuestPoliciesPackageRepositoryArrayOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryArrayOutput) ToGuestPoliciesPackageRepositoryArrayOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryArrayOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryArrayOutput) Index(i pulumi.IntInput) GuestPoliciesPackageRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuestPoliciesPackageRepository {
		return vs[0].([]GuestPoliciesPackageRepository)[vs[1].(int)]
	}).(GuestPoliciesPackageRepositoryOutput)
}

type GuestPoliciesPackageRepositoryApt struct {
	// Type of archive files in this repository. The default behavior is DEB.
	// Default value is `DEB`.
	// Possible values are `DEB` and `DEB_SRC`.
	ArchiveType *string `pulumi:"archiveType"`
	// List of components for this repository. Must contain at least one item.
	Components []string `pulumi:"components"`
	// Distribution of this repository.
	Distribution string `pulumi:"distribution"`
	// URI of the key file for this repository. The agent maintains a keyring at
	// /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg containing all the keys in any applied guest policy.
	GpgKey *string `pulumi:"gpgKey"`
	// URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	Uri string `pulumi:"uri"`
}

// GuestPoliciesPackageRepositoryAptInput is an input type that accepts GuestPoliciesPackageRepositoryAptArgs and GuestPoliciesPackageRepositoryAptOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryAptInput` via:
//
//	GuestPoliciesPackageRepositoryAptArgs{...}
type GuestPoliciesPackageRepositoryAptInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryAptOutput() GuestPoliciesPackageRepositoryAptOutput
	ToGuestPoliciesPackageRepositoryAptOutputWithContext(context.Context) GuestPoliciesPackageRepositoryAptOutput
}

type GuestPoliciesPackageRepositoryAptArgs struct {
	// Type of archive files in this repository. The default behavior is DEB.
	// Default value is `DEB`.
	// Possible values are `DEB` and `DEB_SRC`.
	ArchiveType pulumi.StringPtrInput `pulumi:"archiveType"`
	// List of components for this repository. Must contain at least one item.
	Components pulumi.StringArrayInput `pulumi:"components"`
	// Distribution of this repository.
	Distribution pulumi.StringInput `pulumi:"distribution"`
	// URI of the key file for this repository. The agent maintains a keyring at
	// /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg containing all the keys in any applied guest policy.
	GpgKey pulumi.StringPtrInput `pulumi:"gpgKey"`
	// URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GuestPoliciesPackageRepositoryAptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepositoryApt)(nil)).Elem()
}

func (i GuestPoliciesPackageRepositoryAptArgs) ToGuestPoliciesPackageRepositoryAptOutput() GuestPoliciesPackageRepositoryAptOutput {
	return i.ToGuestPoliciesPackageRepositoryAptOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryAptArgs) ToGuestPoliciesPackageRepositoryAptOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryAptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryAptOutput)
}

func (i GuestPoliciesPackageRepositoryAptArgs) ToGuestPoliciesPackageRepositoryAptPtrOutput() GuestPoliciesPackageRepositoryAptPtrOutput {
	return i.ToGuestPoliciesPackageRepositoryAptPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryAptArgs) ToGuestPoliciesPackageRepositoryAptPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryAptOutput).ToGuestPoliciesPackageRepositoryAptPtrOutputWithContext(ctx)
}

// GuestPoliciesPackageRepositoryAptPtrInput is an input type that accepts GuestPoliciesPackageRepositoryAptArgs, GuestPoliciesPackageRepositoryAptPtr and GuestPoliciesPackageRepositoryAptPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryAptPtrInput` via:
//
//	        GuestPoliciesPackageRepositoryAptArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesPackageRepositoryAptPtrInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryAptPtrOutput() GuestPoliciesPackageRepositoryAptPtrOutput
	ToGuestPoliciesPackageRepositoryAptPtrOutputWithContext(context.Context) GuestPoliciesPackageRepositoryAptPtrOutput
}

type guestPoliciesPackageRepositoryAptPtrType GuestPoliciesPackageRepositoryAptArgs

func GuestPoliciesPackageRepositoryAptPtr(v *GuestPoliciesPackageRepositoryAptArgs) GuestPoliciesPackageRepositoryAptPtrInput {
	return (*guestPoliciesPackageRepositoryAptPtrType)(v)
}

func (*guestPoliciesPackageRepositoryAptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesPackageRepositoryApt)(nil)).Elem()
}

func (i *guestPoliciesPackageRepositoryAptPtrType) ToGuestPoliciesPackageRepositoryAptPtrOutput() GuestPoliciesPackageRepositoryAptPtrOutput {
	return i.ToGuestPoliciesPackageRepositoryAptPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesPackageRepositoryAptPtrType) ToGuestPoliciesPackageRepositoryAptPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryAptPtrOutput)
}

type GuestPoliciesPackageRepositoryAptOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryAptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepositoryApt)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryAptOutput) ToGuestPoliciesPackageRepositoryAptOutput() GuestPoliciesPackageRepositoryAptOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryAptOutput) ToGuestPoliciesPackageRepositoryAptOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryAptOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryAptOutput) ToGuestPoliciesPackageRepositoryAptPtrOutput() GuestPoliciesPackageRepositoryAptPtrOutput {
	return o.ToGuestPoliciesPackageRepositoryAptPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesPackageRepositoryAptOutput) ToGuestPoliciesPackageRepositoryAptPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryAptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesPackageRepositoryApt) *GuestPoliciesPackageRepositoryApt {
		return &v
	}).(GuestPoliciesPackageRepositoryAptPtrOutput)
}

// Type of archive files in this repository. The default behavior is DEB.
// Default value is `DEB`.
// Possible values are `DEB` and `DEB_SRC`.
func (o GuestPoliciesPackageRepositoryAptOutput) ArchiveType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryApt) *string { return v.ArchiveType }).(pulumi.StringPtrOutput)
}

// List of components for this repository. Must contain at least one item.
func (o GuestPoliciesPackageRepositoryAptOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryApt) []string { return v.Components }).(pulumi.StringArrayOutput)
}

// Distribution of this repository.
func (o GuestPoliciesPackageRepositoryAptOutput) Distribution() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryApt) string { return v.Distribution }).(pulumi.StringOutput)
}

// URI of the key file for this repository. The agent maintains a keyring at
// /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg containing all the keys in any applied guest policy.
func (o GuestPoliciesPackageRepositoryAptOutput) GpgKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryApt) *string { return v.GpgKey }).(pulumi.StringPtrOutput)
}

// URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
func (o GuestPoliciesPackageRepositoryAptOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryApt) string { return v.Uri }).(pulumi.StringOutput)
}

type GuestPoliciesPackageRepositoryAptPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryAptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesPackageRepositoryApt)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryAptPtrOutput) ToGuestPoliciesPackageRepositoryAptPtrOutput() GuestPoliciesPackageRepositoryAptPtrOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryAptPtrOutput) ToGuestPoliciesPackageRepositoryAptPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryAptPtrOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryAptPtrOutput) Elem() GuestPoliciesPackageRepositoryAptOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryApt) GuestPoliciesPackageRepositoryApt {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesPackageRepositoryApt
		return ret
	}).(GuestPoliciesPackageRepositoryAptOutput)
}

// Type of archive files in this repository. The default behavior is DEB.
// Default value is `DEB`.
// Possible values are `DEB` and `DEB_SRC`.
func (o GuestPoliciesPackageRepositoryAptPtrOutput) ArchiveType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryApt) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveType
	}).(pulumi.StringPtrOutput)
}

// List of components for this repository. Must contain at least one item.
func (o GuestPoliciesPackageRepositoryAptPtrOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryApt) []string {
		if v == nil {
			return nil
		}
		return v.Components
	}).(pulumi.StringArrayOutput)
}

// Distribution of this repository.
func (o GuestPoliciesPackageRepositoryAptPtrOutput) Distribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryApt) *string {
		if v == nil {
			return nil
		}
		return &v.Distribution
	}).(pulumi.StringPtrOutput)
}

// URI of the key file for this repository. The agent maintains a keyring at
// /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg containing all the keys in any applied guest policy.
func (o GuestPoliciesPackageRepositoryAptPtrOutput) GpgKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryApt) *string {
		if v == nil {
			return nil
		}
		return v.GpgKey
	}).(pulumi.StringPtrOutput)
}

// URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
func (o GuestPoliciesPackageRepositoryAptPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryApt) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesPackageRepositoryGoo struct {
	// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
	// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
	// This means that requests to create multiple recipes with the same name and version are rejected since they
	// could potentially have conflicting assignments.
	Name string `pulumi:"name"`
	// The url of the repository.
	Url string `pulumi:"url"`
}

// GuestPoliciesPackageRepositoryGooInput is an input type that accepts GuestPoliciesPackageRepositoryGooArgs and GuestPoliciesPackageRepositoryGooOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryGooInput` via:
//
//	GuestPoliciesPackageRepositoryGooArgs{...}
type GuestPoliciesPackageRepositoryGooInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryGooOutput() GuestPoliciesPackageRepositoryGooOutput
	ToGuestPoliciesPackageRepositoryGooOutputWithContext(context.Context) GuestPoliciesPackageRepositoryGooOutput
}

type GuestPoliciesPackageRepositoryGooArgs struct {
	// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
	// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
	// This means that requests to create multiple recipes with the same name and version are rejected since they
	// could potentially have conflicting assignments.
	Name pulumi.StringInput `pulumi:"name"`
	// The url of the repository.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GuestPoliciesPackageRepositoryGooArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepositoryGoo)(nil)).Elem()
}

func (i GuestPoliciesPackageRepositoryGooArgs) ToGuestPoliciesPackageRepositoryGooOutput() GuestPoliciesPackageRepositoryGooOutput {
	return i.ToGuestPoliciesPackageRepositoryGooOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryGooArgs) ToGuestPoliciesPackageRepositoryGooOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryGooOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryGooOutput)
}

func (i GuestPoliciesPackageRepositoryGooArgs) ToGuestPoliciesPackageRepositoryGooPtrOutput() GuestPoliciesPackageRepositoryGooPtrOutput {
	return i.ToGuestPoliciesPackageRepositoryGooPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryGooArgs) ToGuestPoliciesPackageRepositoryGooPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryGooPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryGooOutput).ToGuestPoliciesPackageRepositoryGooPtrOutputWithContext(ctx)
}

// GuestPoliciesPackageRepositoryGooPtrInput is an input type that accepts GuestPoliciesPackageRepositoryGooArgs, GuestPoliciesPackageRepositoryGooPtr and GuestPoliciesPackageRepositoryGooPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryGooPtrInput` via:
//
//	        GuestPoliciesPackageRepositoryGooArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesPackageRepositoryGooPtrInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryGooPtrOutput() GuestPoliciesPackageRepositoryGooPtrOutput
	ToGuestPoliciesPackageRepositoryGooPtrOutputWithContext(context.Context) GuestPoliciesPackageRepositoryGooPtrOutput
}

type guestPoliciesPackageRepositoryGooPtrType GuestPoliciesPackageRepositoryGooArgs

func GuestPoliciesPackageRepositoryGooPtr(v *GuestPoliciesPackageRepositoryGooArgs) GuestPoliciesPackageRepositoryGooPtrInput {
	return (*guestPoliciesPackageRepositoryGooPtrType)(v)
}

func (*guestPoliciesPackageRepositoryGooPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesPackageRepositoryGoo)(nil)).Elem()
}

func (i *guestPoliciesPackageRepositoryGooPtrType) ToGuestPoliciesPackageRepositoryGooPtrOutput() GuestPoliciesPackageRepositoryGooPtrOutput {
	return i.ToGuestPoliciesPackageRepositoryGooPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesPackageRepositoryGooPtrType) ToGuestPoliciesPackageRepositoryGooPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryGooPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryGooPtrOutput)
}

type GuestPoliciesPackageRepositoryGooOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryGooOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepositoryGoo)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryGooOutput) ToGuestPoliciesPackageRepositoryGooOutput() GuestPoliciesPackageRepositoryGooOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryGooOutput) ToGuestPoliciesPackageRepositoryGooOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryGooOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryGooOutput) ToGuestPoliciesPackageRepositoryGooPtrOutput() GuestPoliciesPackageRepositoryGooPtrOutput {
	return o.ToGuestPoliciesPackageRepositoryGooPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesPackageRepositoryGooOutput) ToGuestPoliciesPackageRepositoryGooPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryGooPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesPackageRepositoryGoo) *GuestPoliciesPackageRepositoryGoo {
		return &v
	}).(GuestPoliciesPackageRepositoryGooPtrOutput)
}

// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
// This means that requests to create multiple recipes with the same name and version are rejected since they
// could potentially have conflicting assignments.
func (o GuestPoliciesPackageRepositoryGooOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryGoo) string { return v.Name }).(pulumi.StringOutput)
}

// The url of the repository.
func (o GuestPoliciesPackageRepositoryGooOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryGoo) string { return v.Url }).(pulumi.StringOutput)
}

type GuestPoliciesPackageRepositoryGooPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryGooPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesPackageRepositoryGoo)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryGooPtrOutput) ToGuestPoliciesPackageRepositoryGooPtrOutput() GuestPoliciesPackageRepositoryGooPtrOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryGooPtrOutput) ToGuestPoliciesPackageRepositoryGooPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryGooPtrOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryGooPtrOutput) Elem() GuestPoliciesPackageRepositoryGooOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryGoo) GuestPoliciesPackageRepositoryGoo {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesPackageRepositoryGoo
		return ret
	}).(GuestPoliciesPackageRepositoryGooOutput)
}

// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
// This means that requests to create multiple recipes with the same name and version are rejected since they
// could potentially have conflicting assignments.
func (o GuestPoliciesPackageRepositoryGooPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryGoo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The url of the repository.
func (o GuestPoliciesPackageRepositoryGooPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryGoo) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesPackageRepositoryYum struct {
	// The location of the repository directory.
	BaseUrl string `pulumi:"baseUrl"`
	// The display name of the repository.
	DisplayName *string `pulumi:"displayName"`
	// URIs of GPG keys.
	GpgKeys []string `pulumi:"gpgKeys"`
	// Id of the artifact, which the installation and update steps of this recipe can reference.
	// Artifacts in a recipe cannot have the same id.
	Id string `pulumi:"id"`
}

// GuestPoliciesPackageRepositoryYumInput is an input type that accepts GuestPoliciesPackageRepositoryYumArgs and GuestPoliciesPackageRepositoryYumOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryYumInput` via:
//
//	GuestPoliciesPackageRepositoryYumArgs{...}
type GuestPoliciesPackageRepositoryYumInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryYumOutput() GuestPoliciesPackageRepositoryYumOutput
	ToGuestPoliciesPackageRepositoryYumOutputWithContext(context.Context) GuestPoliciesPackageRepositoryYumOutput
}

type GuestPoliciesPackageRepositoryYumArgs struct {
	// The location of the repository directory.
	BaseUrl pulumi.StringInput `pulumi:"baseUrl"`
	// The display name of the repository.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// URIs of GPG keys.
	GpgKeys pulumi.StringArrayInput `pulumi:"gpgKeys"`
	// Id of the artifact, which the installation and update steps of this recipe can reference.
	// Artifacts in a recipe cannot have the same id.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GuestPoliciesPackageRepositoryYumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepositoryYum)(nil)).Elem()
}

func (i GuestPoliciesPackageRepositoryYumArgs) ToGuestPoliciesPackageRepositoryYumOutput() GuestPoliciesPackageRepositoryYumOutput {
	return i.ToGuestPoliciesPackageRepositoryYumOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryYumArgs) ToGuestPoliciesPackageRepositoryYumOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryYumOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryYumOutput)
}

func (i GuestPoliciesPackageRepositoryYumArgs) ToGuestPoliciesPackageRepositoryYumPtrOutput() GuestPoliciesPackageRepositoryYumPtrOutput {
	return i.ToGuestPoliciesPackageRepositoryYumPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryYumArgs) ToGuestPoliciesPackageRepositoryYumPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryYumOutput).ToGuestPoliciesPackageRepositoryYumPtrOutputWithContext(ctx)
}

// GuestPoliciesPackageRepositoryYumPtrInput is an input type that accepts GuestPoliciesPackageRepositoryYumArgs, GuestPoliciesPackageRepositoryYumPtr and GuestPoliciesPackageRepositoryYumPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryYumPtrInput` via:
//
//	        GuestPoliciesPackageRepositoryYumArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesPackageRepositoryYumPtrInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryYumPtrOutput() GuestPoliciesPackageRepositoryYumPtrOutput
	ToGuestPoliciesPackageRepositoryYumPtrOutputWithContext(context.Context) GuestPoliciesPackageRepositoryYumPtrOutput
}

type guestPoliciesPackageRepositoryYumPtrType GuestPoliciesPackageRepositoryYumArgs

func GuestPoliciesPackageRepositoryYumPtr(v *GuestPoliciesPackageRepositoryYumArgs) GuestPoliciesPackageRepositoryYumPtrInput {
	return (*guestPoliciesPackageRepositoryYumPtrType)(v)
}

func (*guestPoliciesPackageRepositoryYumPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesPackageRepositoryYum)(nil)).Elem()
}

func (i *guestPoliciesPackageRepositoryYumPtrType) ToGuestPoliciesPackageRepositoryYumPtrOutput() GuestPoliciesPackageRepositoryYumPtrOutput {
	return i.ToGuestPoliciesPackageRepositoryYumPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesPackageRepositoryYumPtrType) ToGuestPoliciesPackageRepositoryYumPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryYumPtrOutput)
}

type GuestPoliciesPackageRepositoryYumOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryYumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepositoryYum)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryYumOutput) ToGuestPoliciesPackageRepositoryYumOutput() GuestPoliciesPackageRepositoryYumOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryYumOutput) ToGuestPoliciesPackageRepositoryYumOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryYumOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryYumOutput) ToGuestPoliciesPackageRepositoryYumPtrOutput() GuestPoliciesPackageRepositoryYumPtrOutput {
	return o.ToGuestPoliciesPackageRepositoryYumPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesPackageRepositoryYumOutput) ToGuestPoliciesPackageRepositoryYumPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryYumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesPackageRepositoryYum) *GuestPoliciesPackageRepositoryYum {
		return &v
	}).(GuestPoliciesPackageRepositoryYumPtrOutput)
}

// The location of the repository directory.
func (o GuestPoliciesPackageRepositoryYumOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryYum) string { return v.BaseUrl }).(pulumi.StringOutput)
}

// The display name of the repository.
func (o GuestPoliciesPackageRepositoryYumOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryYum) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// URIs of GPG keys.
func (o GuestPoliciesPackageRepositoryYumOutput) GpgKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryYum) []string { return v.GpgKeys }).(pulumi.StringArrayOutput)
}

// Id of the artifact, which the installation and update steps of this recipe can reference.
// Artifacts in a recipe cannot have the same id.
func (o GuestPoliciesPackageRepositoryYumOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryYum) string { return v.Id }).(pulumi.StringOutput)
}

type GuestPoliciesPackageRepositoryYumPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryYumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesPackageRepositoryYum)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryYumPtrOutput) ToGuestPoliciesPackageRepositoryYumPtrOutput() GuestPoliciesPackageRepositoryYumPtrOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryYumPtrOutput) ToGuestPoliciesPackageRepositoryYumPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryYumPtrOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryYumPtrOutput) Elem() GuestPoliciesPackageRepositoryYumOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryYum) GuestPoliciesPackageRepositoryYum {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesPackageRepositoryYum
		return ret
	}).(GuestPoliciesPackageRepositoryYumOutput)
}

// The location of the repository directory.
func (o GuestPoliciesPackageRepositoryYumPtrOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryYum) *string {
		if v == nil {
			return nil
		}
		return &v.BaseUrl
	}).(pulumi.StringPtrOutput)
}

// The display name of the repository.
func (o GuestPoliciesPackageRepositoryYumPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryYum) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// URIs of GPG keys.
func (o GuestPoliciesPackageRepositoryYumPtrOutput) GpgKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryYum) []string {
		if v == nil {
			return nil
		}
		return v.GpgKeys
	}).(pulumi.StringArrayOutput)
}

// Id of the artifact, which the installation and update steps of this recipe can reference.
// Artifacts in a recipe cannot have the same id.
func (o GuestPoliciesPackageRepositoryYumPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryYum) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesPackageRepositoryZypper struct {
	// The location of the repository directory.
	BaseUrl string `pulumi:"baseUrl"`
	// The display name of the repository.
	DisplayName *string `pulumi:"displayName"`
	// URIs of GPG keys.
	GpgKeys []string `pulumi:"gpgKeys"`
	// Id of the artifact, which the installation and update steps of this recipe can reference.
	// Artifacts in a recipe cannot have the same id.
	Id string `pulumi:"id"`
}

// GuestPoliciesPackageRepositoryZypperInput is an input type that accepts GuestPoliciesPackageRepositoryZypperArgs and GuestPoliciesPackageRepositoryZypperOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryZypperInput` via:
//
//	GuestPoliciesPackageRepositoryZypperArgs{...}
type GuestPoliciesPackageRepositoryZypperInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryZypperOutput() GuestPoliciesPackageRepositoryZypperOutput
	ToGuestPoliciesPackageRepositoryZypperOutputWithContext(context.Context) GuestPoliciesPackageRepositoryZypperOutput
}

type GuestPoliciesPackageRepositoryZypperArgs struct {
	// The location of the repository directory.
	BaseUrl pulumi.StringInput `pulumi:"baseUrl"`
	// The display name of the repository.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// URIs of GPG keys.
	GpgKeys pulumi.StringArrayInput `pulumi:"gpgKeys"`
	// Id of the artifact, which the installation and update steps of this recipe can reference.
	// Artifacts in a recipe cannot have the same id.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GuestPoliciesPackageRepositoryZypperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepositoryZypper)(nil)).Elem()
}

func (i GuestPoliciesPackageRepositoryZypperArgs) ToGuestPoliciesPackageRepositoryZypperOutput() GuestPoliciesPackageRepositoryZypperOutput {
	return i.ToGuestPoliciesPackageRepositoryZypperOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryZypperArgs) ToGuestPoliciesPackageRepositoryZypperOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryZypperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryZypperOutput)
}

func (i GuestPoliciesPackageRepositoryZypperArgs) ToGuestPoliciesPackageRepositoryZypperPtrOutput() GuestPoliciesPackageRepositoryZypperPtrOutput {
	return i.ToGuestPoliciesPackageRepositoryZypperPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesPackageRepositoryZypperArgs) ToGuestPoliciesPackageRepositoryZypperPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryZypperOutput).ToGuestPoliciesPackageRepositoryZypperPtrOutputWithContext(ctx)
}

// GuestPoliciesPackageRepositoryZypperPtrInput is an input type that accepts GuestPoliciesPackageRepositoryZypperArgs, GuestPoliciesPackageRepositoryZypperPtr and GuestPoliciesPackageRepositoryZypperPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesPackageRepositoryZypperPtrInput` via:
//
//	        GuestPoliciesPackageRepositoryZypperArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesPackageRepositoryZypperPtrInput interface {
	pulumi.Input

	ToGuestPoliciesPackageRepositoryZypperPtrOutput() GuestPoliciesPackageRepositoryZypperPtrOutput
	ToGuestPoliciesPackageRepositoryZypperPtrOutputWithContext(context.Context) GuestPoliciesPackageRepositoryZypperPtrOutput
}

type guestPoliciesPackageRepositoryZypperPtrType GuestPoliciesPackageRepositoryZypperArgs

func GuestPoliciesPackageRepositoryZypperPtr(v *GuestPoliciesPackageRepositoryZypperArgs) GuestPoliciesPackageRepositoryZypperPtrInput {
	return (*guestPoliciesPackageRepositoryZypperPtrType)(v)
}

func (*guestPoliciesPackageRepositoryZypperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesPackageRepositoryZypper)(nil)).Elem()
}

func (i *guestPoliciesPackageRepositoryZypperPtrType) ToGuestPoliciesPackageRepositoryZypperPtrOutput() GuestPoliciesPackageRepositoryZypperPtrOutput {
	return i.ToGuestPoliciesPackageRepositoryZypperPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesPackageRepositoryZypperPtrType) ToGuestPoliciesPackageRepositoryZypperPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesPackageRepositoryZypperPtrOutput)
}

type GuestPoliciesPackageRepositoryZypperOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryZypperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesPackageRepositoryZypper)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryZypperOutput) ToGuestPoliciesPackageRepositoryZypperOutput() GuestPoliciesPackageRepositoryZypperOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryZypperOutput) ToGuestPoliciesPackageRepositoryZypperOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryZypperOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryZypperOutput) ToGuestPoliciesPackageRepositoryZypperPtrOutput() GuestPoliciesPackageRepositoryZypperPtrOutput {
	return o.ToGuestPoliciesPackageRepositoryZypperPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesPackageRepositoryZypperOutput) ToGuestPoliciesPackageRepositoryZypperPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryZypperPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesPackageRepositoryZypper) *GuestPoliciesPackageRepositoryZypper {
		return &v
	}).(GuestPoliciesPackageRepositoryZypperPtrOutput)
}

// The location of the repository directory.
func (o GuestPoliciesPackageRepositoryZypperOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryZypper) string { return v.BaseUrl }).(pulumi.StringOutput)
}

// The display name of the repository.
func (o GuestPoliciesPackageRepositoryZypperOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryZypper) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// URIs of GPG keys.
func (o GuestPoliciesPackageRepositoryZypperOutput) GpgKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryZypper) []string { return v.GpgKeys }).(pulumi.StringArrayOutput)
}

// Id of the artifact, which the installation and update steps of this recipe can reference.
// Artifacts in a recipe cannot have the same id.
func (o GuestPoliciesPackageRepositoryZypperOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesPackageRepositoryZypper) string { return v.Id }).(pulumi.StringOutput)
}

type GuestPoliciesPackageRepositoryZypperPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesPackageRepositoryZypperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesPackageRepositoryZypper)(nil)).Elem()
}

func (o GuestPoliciesPackageRepositoryZypperPtrOutput) ToGuestPoliciesPackageRepositoryZypperPtrOutput() GuestPoliciesPackageRepositoryZypperPtrOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryZypperPtrOutput) ToGuestPoliciesPackageRepositoryZypperPtrOutputWithContext(ctx context.Context) GuestPoliciesPackageRepositoryZypperPtrOutput {
	return o
}

func (o GuestPoliciesPackageRepositoryZypperPtrOutput) Elem() GuestPoliciesPackageRepositoryZypperOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryZypper) GuestPoliciesPackageRepositoryZypper {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesPackageRepositoryZypper
		return ret
	}).(GuestPoliciesPackageRepositoryZypperOutput)
}

// The location of the repository directory.
func (o GuestPoliciesPackageRepositoryZypperPtrOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryZypper) *string {
		if v == nil {
			return nil
		}
		return &v.BaseUrl
	}).(pulumi.StringPtrOutput)
}

// The display name of the repository.
func (o GuestPoliciesPackageRepositoryZypperPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryZypper) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// URIs of GPG keys.
func (o GuestPoliciesPackageRepositoryZypperPtrOutput) GpgKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryZypper) []string {
		if v == nil {
			return nil
		}
		return v.GpgKeys
	}).(pulumi.StringArrayOutput)
}

// Id of the artifact, which the installation and update steps of this recipe can reference.
// Artifacts in a recipe cannot have the same id.
func (o GuestPoliciesPackageRepositoryZypperPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesPackageRepositoryZypper) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipe struct {
	// Resources available to be used in the steps in the recipe.
	// Structure is documented below.
	Artifacts []GuestPoliciesRecipeArtifact `pulumi:"artifacts"`
	// Default is INSTALLED. The desired state the agent should maintain for this recipe.
	// INSTALLED: The software recipe is installed on the instance but won't be updated to new versions.
	// INSTALLED_KEEP_UPDATED: The software recipe is installed on the instance. The recipe is updated to a higher version,
	// if a higher version of the recipe is assigned to this instance.
	// REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state is rejected.
	// Default value is `INSTALLED`.
	// Possible values are `INSTALLED`, `UPDATED`, and `REMOVED`.
	DesiredState *string `pulumi:"desiredState"`
	// Actions to be taken for installing this recipe. On failure it stops executing steps and does not attempt another installation.
	// Any steps taken (including partially completed steps) are not rolled back.
	// Structure is documented below.
	InstallSteps []GuestPoliciesRecipeInstallStep `pulumi:"installSteps"`
	// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
	// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
	// This means that requests to create multiple recipes with the same name and version are rejected since they
	// could potentially have conflicting assignments.
	Name string `pulumi:"name"`
	// Actions to be taken for updating this recipe. On failure it stops executing steps and does not attempt another update for this recipe.
	// Any steps taken (including partially completed steps) are not rolled back.
	// Structure is documented below.
	UpdateSteps []GuestPoliciesRecipeUpdateStep `pulumi:"updateSteps"`
	// The version of this software recipe. Version can be up to 4 period separated numbers (e.g. 12.34.56.78).
	Version *string `pulumi:"version"`
}

// GuestPoliciesRecipeInput is an input type that accepts GuestPoliciesRecipeArgs and GuestPoliciesRecipeOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInput` via:
//
//	GuestPoliciesRecipeArgs{...}
type GuestPoliciesRecipeInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeOutput() GuestPoliciesRecipeOutput
	ToGuestPoliciesRecipeOutputWithContext(context.Context) GuestPoliciesRecipeOutput
}

type GuestPoliciesRecipeArgs struct {
	// Resources available to be used in the steps in the recipe.
	// Structure is documented below.
	Artifacts GuestPoliciesRecipeArtifactArrayInput `pulumi:"artifacts"`
	// Default is INSTALLED. The desired state the agent should maintain for this recipe.
	// INSTALLED: The software recipe is installed on the instance but won't be updated to new versions.
	// INSTALLED_KEEP_UPDATED: The software recipe is installed on the instance. The recipe is updated to a higher version,
	// if a higher version of the recipe is assigned to this instance.
	// REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state is rejected.
	// Default value is `INSTALLED`.
	// Possible values are `INSTALLED`, `UPDATED`, and `REMOVED`.
	DesiredState pulumi.StringPtrInput `pulumi:"desiredState"`
	// Actions to be taken for installing this recipe. On failure it stops executing steps and does not attempt another installation.
	// Any steps taken (including partially completed steps) are not rolled back.
	// Structure is documented below.
	InstallSteps GuestPoliciesRecipeInstallStepArrayInput `pulumi:"installSteps"`
	// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
	// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
	// This means that requests to create multiple recipes with the same name and version are rejected since they
	// could potentially have conflicting assignments.
	Name pulumi.StringInput `pulumi:"name"`
	// Actions to be taken for updating this recipe. On failure it stops executing steps and does not attempt another update for this recipe.
	// Any steps taken (including partially completed steps) are not rolled back.
	// Structure is documented below.
	UpdateSteps GuestPoliciesRecipeUpdateStepArrayInput `pulumi:"updateSteps"`
	// The version of this software recipe. Version can be up to 4 period separated numbers (e.g. 12.34.56.78).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GuestPoliciesRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipe)(nil)).Elem()
}

func (i GuestPoliciesRecipeArgs) ToGuestPoliciesRecipeOutput() GuestPoliciesRecipeOutput {
	return i.ToGuestPoliciesRecipeOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeArgs) ToGuestPoliciesRecipeOutputWithContext(ctx context.Context) GuestPoliciesRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeOutput)
}

// GuestPoliciesRecipeArrayInput is an input type that accepts GuestPoliciesRecipeArray and GuestPoliciesRecipeArrayOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeArrayInput` via:
//
//	GuestPoliciesRecipeArray{ GuestPoliciesRecipeArgs{...} }
type GuestPoliciesRecipeArrayInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeArrayOutput() GuestPoliciesRecipeArrayOutput
	ToGuestPoliciesRecipeArrayOutputWithContext(context.Context) GuestPoliciesRecipeArrayOutput
}

type GuestPoliciesRecipeArray []GuestPoliciesRecipeInput

func (GuestPoliciesRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesRecipe)(nil)).Elem()
}

func (i GuestPoliciesRecipeArray) ToGuestPoliciesRecipeArrayOutput() GuestPoliciesRecipeArrayOutput {
	return i.ToGuestPoliciesRecipeArrayOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeArray) ToGuestPoliciesRecipeArrayOutputWithContext(ctx context.Context) GuestPoliciesRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeArrayOutput)
}

type GuestPoliciesRecipeOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipe)(nil)).Elem()
}

func (o GuestPoliciesRecipeOutput) ToGuestPoliciesRecipeOutput() GuestPoliciesRecipeOutput {
	return o
}

func (o GuestPoliciesRecipeOutput) ToGuestPoliciesRecipeOutputWithContext(ctx context.Context) GuestPoliciesRecipeOutput {
	return o
}

// Resources available to be used in the steps in the recipe.
// Structure is documented below.
func (o GuestPoliciesRecipeOutput) Artifacts() GuestPoliciesRecipeArtifactArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipe) []GuestPoliciesRecipeArtifact { return v.Artifacts }).(GuestPoliciesRecipeArtifactArrayOutput)
}

// Default is INSTALLED. The desired state the agent should maintain for this recipe.
// INSTALLED: The software recipe is installed on the instance but won't be updated to new versions.
// INSTALLED_KEEP_UPDATED: The software recipe is installed on the instance. The recipe is updated to a higher version,
// if a higher version of the recipe is assigned to this instance.
// REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state is rejected.
// Default value is `INSTALLED`.
// Possible values are `INSTALLED`, `UPDATED`, and `REMOVED`.
func (o GuestPoliciesRecipeOutput) DesiredState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipe) *string { return v.DesiredState }).(pulumi.StringPtrOutput)
}

// Actions to be taken for installing this recipe. On failure it stops executing steps and does not attempt another installation.
// Any steps taken (including partially completed steps) are not rolled back.
// Structure is documented below.
func (o GuestPoliciesRecipeOutput) InstallSteps() GuestPoliciesRecipeInstallStepArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipe) []GuestPoliciesRecipeInstallStep { return v.InstallSteps }).(GuestPoliciesRecipeInstallStepArrayOutput)
}

// Unique identifier for the recipe. Only one recipe with a given name is installed on an instance.
// Names are also used to identify resources which helps to determine whether guest policies have conflicts.
// This means that requests to create multiple recipes with the same name and version are rejected since they
// could potentially have conflicting assignments.
func (o GuestPoliciesRecipeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipe) string { return v.Name }).(pulumi.StringOutput)
}

// Actions to be taken for updating this recipe. On failure it stops executing steps and does not attempt another update for this recipe.
// Any steps taken (including partially completed steps) are not rolled back.
// Structure is documented below.
func (o GuestPoliciesRecipeOutput) UpdateSteps() GuestPoliciesRecipeUpdateStepArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipe) []GuestPoliciesRecipeUpdateStep { return v.UpdateSteps }).(GuestPoliciesRecipeUpdateStepArrayOutput)
}

// The version of this software recipe. Version can be up to 4 period separated numbers (e.g. 12.34.56.78).
func (o GuestPoliciesRecipeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipe) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeArrayOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesRecipe)(nil)).Elem()
}

func (o GuestPoliciesRecipeArrayOutput) ToGuestPoliciesRecipeArrayOutput() GuestPoliciesRecipeArrayOutput {
	return o
}

func (o GuestPoliciesRecipeArrayOutput) ToGuestPoliciesRecipeArrayOutputWithContext(ctx context.Context) GuestPoliciesRecipeArrayOutput {
	return o
}

func (o GuestPoliciesRecipeArrayOutput) Index(i pulumi.IntInput) GuestPoliciesRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuestPoliciesRecipe {
		return vs[0].([]GuestPoliciesRecipe)[vs[1].(int)]
	}).(GuestPoliciesRecipeOutput)
}

type GuestPoliciesRecipeArtifact struct {
	// Defaults to false. When false, recipes are subject to validations based on the artifact type:
	// Remote: A checksum must be specified, and only protocols with transport-layer security are permitted.
	// GCS: An object generation number must be specified.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// A Google Cloud Storage artifact.
	// Structure is documented below.
	Gcs *GuestPoliciesRecipeArtifactGcs `pulumi:"gcs"`
	// Id of the artifact, which the installation and update steps of this recipe can reference.
	// Artifacts in a recipe cannot have the same id.
	Id string `pulumi:"id"`
	// A generic remote artifact.
	// Structure is documented below.
	Remote *GuestPoliciesRecipeArtifactRemote `pulumi:"remote"`
}

// GuestPoliciesRecipeArtifactInput is an input type that accepts GuestPoliciesRecipeArtifactArgs and GuestPoliciesRecipeArtifactOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeArtifactInput` via:
//
//	GuestPoliciesRecipeArtifactArgs{...}
type GuestPoliciesRecipeArtifactInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeArtifactOutput() GuestPoliciesRecipeArtifactOutput
	ToGuestPoliciesRecipeArtifactOutputWithContext(context.Context) GuestPoliciesRecipeArtifactOutput
}

type GuestPoliciesRecipeArtifactArgs struct {
	// Defaults to false. When false, recipes are subject to validations based on the artifact type:
	// Remote: A checksum must be specified, and only protocols with transport-layer security are permitted.
	// GCS: An object generation number must be specified.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// A Google Cloud Storage artifact.
	// Structure is documented below.
	Gcs GuestPoliciesRecipeArtifactGcsPtrInput `pulumi:"gcs"`
	// Id of the artifact, which the installation and update steps of this recipe can reference.
	// Artifacts in a recipe cannot have the same id.
	Id pulumi.StringInput `pulumi:"id"`
	// A generic remote artifact.
	// Structure is documented below.
	Remote GuestPoliciesRecipeArtifactRemotePtrInput `pulumi:"remote"`
}

func (GuestPoliciesRecipeArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeArtifact)(nil)).Elem()
}

func (i GuestPoliciesRecipeArtifactArgs) ToGuestPoliciesRecipeArtifactOutput() GuestPoliciesRecipeArtifactOutput {
	return i.ToGuestPoliciesRecipeArtifactOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeArtifactArgs) ToGuestPoliciesRecipeArtifactOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeArtifactOutput)
}

// GuestPoliciesRecipeArtifactArrayInput is an input type that accepts GuestPoliciesRecipeArtifactArray and GuestPoliciesRecipeArtifactArrayOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeArtifactArrayInput` via:
//
//	GuestPoliciesRecipeArtifactArray{ GuestPoliciesRecipeArtifactArgs{...} }
type GuestPoliciesRecipeArtifactArrayInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeArtifactArrayOutput() GuestPoliciesRecipeArtifactArrayOutput
	ToGuestPoliciesRecipeArtifactArrayOutputWithContext(context.Context) GuestPoliciesRecipeArtifactArrayOutput
}

type GuestPoliciesRecipeArtifactArray []GuestPoliciesRecipeArtifactInput

func (GuestPoliciesRecipeArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesRecipeArtifact)(nil)).Elem()
}

func (i GuestPoliciesRecipeArtifactArray) ToGuestPoliciesRecipeArtifactArrayOutput() GuestPoliciesRecipeArtifactArrayOutput {
	return i.ToGuestPoliciesRecipeArtifactArrayOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeArtifactArray) ToGuestPoliciesRecipeArtifactArrayOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeArtifactArrayOutput)
}

type GuestPoliciesRecipeArtifactOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeArtifact)(nil)).Elem()
}

func (o GuestPoliciesRecipeArtifactOutput) ToGuestPoliciesRecipeArtifactOutput() GuestPoliciesRecipeArtifactOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactOutput) ToGuestPoliciesRecipeArtifactOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactOutput {
	return o
}

// Defaults to false. When false, recipes are subject to validations based on the artifact type:
// Remote: A checksum must be specified, and only protocols with transport-layer security are permitted.
// GCS: An object generation number must be specified.
func (o GuestPoliciesRecipeArtifactOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeArtifact) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// A Google Cloud Storage artifact.
// Structure is documented below.
func (o GuestPoliciesRecipeArtifactOutput) Gcs() GuestPoliciesRecipeArtifactGcsPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeArtifact) *GuestPoliciesRecipeArtifactGcs { return v.Gcs }).(GuestPoliciesRecipeArtifactGcsPtrOutput)
}

// Id of the artifact, which the installation and update steps of this recipe can reference.
// Artifacts in a recipe cannot have the same id.
func (o GuestPoliciesRecipeArtifactOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeArtifact) string { return v.Id }).(pulumi.StringOutput)
}

// A generic remote artifact.
// Structure is documented below.
func (o GuestPoliciesRecipeArtifactOutput) Remote() GuestPoliciesRecipeArtifactRemotePtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeArtifact) *GuestPoliciesRecipeArtifactRemote { return v.Remote }).(GuestPoliciesRecipeArtifactRemotePtrOutput)
}

type GuestPoliciesRecipeArtifactArrayOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesRecipeArtifact)(nil)).Elem()
}

func (o GuestPoliciesRecipeArtifactArrayOutput) ToGuestPoliciesRecipeArtifactArrayOutput() GuestPoliciesRecipeArtifactArrayOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactArrayOutput) ToGuestPoliciesRecipeArtifactArrayOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactArrayOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactArrayOutput) Index(i pulumi.IntInput) GuestPoliciesRecipeArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuestPoliciesRecipeArtifact {
		return vs[0].([]GuestPoliciesRecipeArtifact)[vs[1].(int)]
	}).(GuestPoliciesRecipeArtifactOutput)
}

type GuestPoliciesRecipeArtifactGcs struct {
	// Bucket of the Google Cloud Storage object. Given an example URL: https://storage.googleapis.com/my-bucket/foo/bar#1234567
	// this value would be my-bucket.
	Bucket *string `pulumi:"bucket"`
	// Must be provided if allowInsecure is false. Generation number of the Google Cloud Storage object.
	// https://storage.googleapis.com/my-bucket/foo/bar#1234567 this value would be 1234567.
	Generation *int `pulumi:"generation"`
	// Name of the Google Cloud Storage object. Given an example URL: https://storage.googleapis.com/my-bucket/foo/bar#1234567
	// this value would be foo/bar.
	Object *string `pulumi:"object"`
}

// GuestPoliciesRecipeArtifactGcsInput is an input type that accepts GuestPoliciesRecipeArtifactGcsArgs and GuestPoliciesRecipeArtifactGcsOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeArtifactGcsInput` via:
//
//	GuestPoliciesRecipeArtifactGcsArgs{...}
type GuestPoliciesRecipeArtifactGcsInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeArtifactGcsOutput() GuestPoliciesRecipeArtifactGcsOutput
	ToGuestPoliciesRecipeArtifactGcsOutputWithContext(context.Context) GuestPoliciesRecipeArtifactGcsOutput
}

type GuestPoliciesRecipeArtifactGcsArgs struct {
	// Bucket of the Google Cloud Storage object. Given an example URL: https://storage.googleapis.com/my-bucket/foo/bar#1234567
	// this value would be my-bucket.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Must be provided if allowInsecure is false. Generation number of the Google Cloud Storage object.
	// https://storage.googleapis.com/my-bucket/foo/bar#1234567 this value would be 1234567.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Name of the Google Cloud Storage object. Given an example URL: https://storage.googleapis.com/my-bucket/foo/bar#1234567
	// this value would be foo/bar.
	Object pulumi.StringPtrInput `pulumi:"object"`
}

func (GuestPoliciesRecipeArtifactGcsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeArtifactGcs)(nil)).Elem()
}

func (i GuestPoliciesRecipeArtifactGcsArgs) ToGuestPoliciesRecipeArtifactGcsOutput() GuestPoliciesRecipeArtifactGcsOutput {
	return i.ToGuestPoliciesRecipeArtifactGcsOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeArtifactGcsArgs) ToGuestPoliciesRecipeArtifactGcsOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactGcsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeArtifactGcsOutput)
}

func (i GuestPoliciesRecipeArtifactGcsArgs) ToGuestPoliciesRecipeArtifactGcsPtrOutput() GuestPoliciesRecipeArtifactGcsPtrOutput {
	return i.ToGuestPoliciesRecipeArtifactGcsPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeArtifactGcsArgs) ToGuestPoliciesRecipeArtifactGcsPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeArtifactGcsOutput).ToGuestPoliciesRecipeArtifactGcsPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeArtifactGcsPtrInput is an input type that accepts GuestPoliciesRecipeArtifactGcsArgs, GuestPoliciesRecipeArtifactGcsPtr and GuestPoliciesRecipeArtifactGcsPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeArtifactGcsPtrInput` via:
//
//	        GuestPoliciesRecipeArtifactGcsArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeArtifactGcsPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeArtifactGcsPtrOutput() GuestPoliciesRecipeArtifactGcsPtrOutput
	ToGuestPoliciesRecipeArtifactGcsPtrOutputWithContext(context.Context) GuestPoliciesRecipeArtifactGcsPtrOutput
}

type guestPoliciesRecipeArtifactGcsPtrType GuestPoliciesRecipeArtifactGcsArgs

func GuestPoliciesRecipeArtifactGcsPtr(v *GuestPoliciesRecipeArtifactGcsArgs) GuestPoliciesRecipeArtifactGcsPtrInput {
	return (*guestPoliciesRecipeArtifactGcsPtrType)(v)
}

func (*guestPoliciesRecipeArtifactGcsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeArtifactGcs)(nil)).Elem()
}

func (i *guestPoliciesRecipeArtifactGcsPtrType) ToGuestPoliciesRecipeArtifactGcsPtrOutput() GuestPoliciesRecipeArtifactGcsPtrOutput {
	return i.ToGuestPoliciesRecipeArtifactGcsPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeArtifactGcsPtrType) ToGuestPoliciesRecipeArtifactGcsPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeArtifactGcsPtrOutput)
}

type GuestPoliciesRecipeArtifactGcsOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeArtifactGcsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeArtifactGcs)(nil)).Elem()
}

func (o GuestPoliciesRecipeArtifactGcsOutput) ToGuestPoliciesRecipeArtifactGcsOutput() GuestPoliciesRecipeArtifactGcsOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactGcsOutput) ToGuestPoliciesRecipeArtifactGcsOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactGcsOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactGcsOutput) ToGuestPoliciesRecipeArtifactGcsPtrOutput() GuestPoliciesRecipeArtifactGcsPtrOutput {
	return o.ToGuestPoliciesRecipeArtifactGcsPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeArtifactGcsOutput) ToGuestPoliciesRecipeArtifactGcsPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactGcsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeArtifactGcs) *GuestPoliciesRecipeArtifactGcs {
		return &v
	}).(GuestPoliciesRecipeArtifactGcsPtrOutput)
}

// Bucket of the Google Cloud Storage object. Given an example URL: https://storage.googleapis.com/my-bucket/foo/bar#1234567
// this value would be my-bucket.
func (o GuestPoliciesRecipeArtifactGcsOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeArtifactGcs) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Must be provided if allowInsecure is false. Generation number of the Google Cloud Storage object.
// https://storage.googleapis.com/my-bucket/foo/bar#1234567 this value would be 1234567.
func (o GuestPoliciesRecipeArtifactGcsOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeArtifactGcs) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Name of the Google Cloud Storage object. Given an example URL: https://storage.googleapis.com/my-bucket/foo/bar#1234567
// this value would be foo/bar.
func (o GuestPoliciesRecipeArtifactGcsOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeArtifactGcs) *string { return v.Object }).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeArtifactGcsPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeArtifactGcsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeArtifactGcs)(nil)).Elem()
}

func (o GuestPoliciesRecipeArtifactGcsPtrOutput) ToGuestPoliciesRecipeArtifactGcsPtrOutput() GuestPoliciesRecipeArtifactGcsPtrOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactGcsPtrOutput) ToGuestPoliciesRecipeArtifactGcsPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactGcsPtrOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactGcsPtrOutput) Elem() GuestPoliciesRecipeArtifactGcsOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeArtifactGcs) GuestPoliciesRecipeArtifactGcs {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeArtifactGcs
		return ret
	}).(GuestPoliciesRecipeArtifactGcsOutput)
}

// Bucket of the Google Cloud Storage object. Given an example URL: https://storage.googleapis.com/my-bucket/foo/bar#1234567
// this value would be my-bucket.
func (o GuestPoliciesRecipeArtifactGcsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeArtifactGcs) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Must be provided if allowInsecure is false. Generation number of the Google Cloud Storage object.
// https://storage.googleapis.com/my-bucket/foo/bar#1234567 this value would be 1234567.
func (o GuestPoliciesRecipeArtifactGcsPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeArtifactGcs) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Name of the Google Cloud Storage object. Given an example URL: https://storage.googleapis.com/my-bucket/foo/bar#1234567
// this value would be foo/bar.
func (o GuestPoliciesRecipeArtifactGcsPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeArtifactGcs) *string {
		if v == nil {
			return nil
		}
		return v.Object
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeArtifactRemote struct {
	// Must be provided if allowInsecure is false. SHA256 checksum in hex format, to compare to the checksum of the artifact.
	// If the checksum is not empty and it doesn't match the artifact then the recipe installation fails before running any
	// of the steps.
	CheckSum *string `pulumi:"checkSum"`
	// URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	Uri *string `pulumi:"uri"`
}

// GuestPoliciesRecipeArtifactRemoteInput is an input type that accepts GuestPoliciesRecipeArtifactRemoteArgs and GuestPoliciesRecipeArtifactRemoteOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeArtifactRemoteInput` via:
//
//	GuestPoliciesRecipeArtifactRemoteArgs{...}
type GuestPoliciesRecipeArtifactRemoteInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeArtifactRemoteOutput() GuestPoliciesRecipeArtifactRemoteOutput
	ToGuestPoliciesRecipeArtifactRemoteOutputWithContext(context.Context) GuestPoliciesRecipeArtifactRemoteOutput
}

type GuestPoliciesRecipeArtifactRemoteArgs struct {
	// Must be provided if allowInsecure is false. SHA256 checksum in hex format, to compare to the checksum of the artifact.
	// If the checksum is not empty and it doesn't match the artifact then the recipe installation fails before running any
	// of the steps.
	CheckSum pulumi.StringPtrInput `pulumi:"checkSum"`
	// URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (GuestPoliciesRecipeArtifactRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeArtifactRemote)(nil)).Elem()
}

func (i GuestPoliciesRecipeArtifactRemoteArgs) ToGuestPoliciesRecipeArtifactRemoteOutput() GuestPoliciesRecipeArtifactRemoteOutput {
	return i.ToGuestPoliciesRecipeArtifactRemoteOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeArtifactRemoteArgs) ToGuestPoliciesRecipeArtifactRemoteOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeArtifactRemoteOutput)
}

func (i GuestPoliciesRecipeArtifactRemoteArgs) ToGuestPoliciesRecipeArtifactRemotePtrOutput() GuestPoliciesRecipeArtifactRemotePtrOutput {
	return i.ToGuestPoliciesRecipeArtifactRemotePtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeArtifactRemoteArgs) ToGuestPoliciesRecipeArtifactRemotePtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeArtifactRemoteOutput).ToGuestPoliciesRecipeArtifactRemotePtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeArtifactRemotePtrInput is an input type that accepts GuestPoliciesRecipeArtifactRemoteArgs, GuestPoliciesRecipeArtifactRemotePtr and GuestPoliciesRecipeArtifactRemotePtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeArtifactRemotePtrInput` via:
//
//	        GuestPoliciesRecipeArtifactRemoteArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeArtifactRemotePtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeArtifactRemotePtrOutput() GuestPoliciesRecipeArtifactRemotePtrOutput
	ToGuestPoliciesRecipeArtifactRemotePtrOutputWithContext(context.Context) GuestPoliciesRecipeArtifactRemotePtrOutput
}

type guestPoliciesRecipeArtifactRemotePtrType GuestPoliciesRecipeArtifactRemoteArgs

func GuestPoliciesRecipeArtifactRemotePtr(v *GuestPoliciesRecipeArtifactRemoteArgs) GuestPoliciesRecipeArtifactRemotePtrInput {
	return (*guestPoliciesRecipeArtifactRemotePtrType)(v)
}

func (*guestPoliciesRecipeArtifactRemotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeArtifactRemote)(nil)).Elem()
}

func (i *guestPoliciesRecipeArtifactRemotePtrType) ToGuestPoliciesRecipeArtifactRemotePtrOutput() GuestPoliciesRecipeArtifactRemotePtrOutput {
	return i.ToGuestPoliciesRecipeArtifactRemotePtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeArtifactRemotePtrType) ToGuestPoliciesRecipeArtifactRemotePtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeArtifactRemotePtrOutput)
}

type GuestPoliciesRecipeArtifactRemoteOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeArtifactRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeArtifactRemote)(nil)).Elem()
}

func (o GuestPoliciesRecipeArtifactRemoteOutput) ToGuestPoliciesRecipeArtifactRemoteOutput() GuestPoliciesRecipeArtifactRemoteOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactRemoteOutput) ToGuestPoliciesRecipeArtifactRemoteOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactRemoteOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactRemoteOutput) ToGuestPoliciesRecipeArtifactRemotePtrOutput() GuestPoliciesRecipeArtifactRemotePtrOutput {
	return o.ToGuestPoliciesRecipeArtifactRemotePtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeArtifactRemoteOutput) ToGuestPoliciesRecipeArtifactRemotePtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactRemotePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeArtifactRemote) *GuestPoliciesRecipeArtifactRemote {
		return &v
	}).(GuestPoliciesRecipeArtifactRemotePtrOutput)
}

// Must be provided if allowInsecure is false. SHA256 checksum in hex format, to compare to the checksum of the artifact.
// If the checksum is not empty and it doesn't match the artifact then the recipe installation fails before running any
// of the steps.
func (o GuestPoliciesRecipeArtifactRemoteOutput) CheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeArtifactRemote) *string { return v.CheckSum }).(pulumi.StringPtrOutput)
}

// URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
func (o GuestPoliciesRecipeArtifactRemoteOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeArtifactRemote) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeArtifactRemotePtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeArtifactRemotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeArtifactRemote)(nil)).Elem()
}

func (o GuestPoliciesRecipeArtifactRemotePtrOutput) ToGuestPoliciesRecipeArtifactRemotePtrOutput() GuestPoliciesRecipeArtifactRemotePtrOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactRemotePtrOutput) ToGuestPoliciesRecipeArtifactRemotePtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeArtifactRemotePtrOutput {
	return o
}

func (o GuestPoliciesRecipeArtifactRemotePtrOutput) Elem() GuestPoliciesRecipeArtifactRemoteOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeArtifactRemote) GuestPoliciesRecipeArtifactRemote {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeArtifactRemote
		return ret
	}).(GuestPoliciesRecipeArtifactRemoteOutput)
}

// Must be provided if allowInsecure is false. SHA256 checksum in hex format, to compare to the checksum of the artifact.
// If the checksum is not empty and it doesn't match the artifact then the recipe installation fails before running any
// of the steps.
func (o GuestPoliciesRecipeArtifactRemotePtrOutput) CheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeArtifactRemote) *string {
		if v == nil {
			return nil
		}
		return v.CheckSum
	}).(pulumi.StringPtrOutput)
}

// URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
func (o GuestPoliciesRecipeArtifactRemotePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeArtifactRemote) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeInstallStep struct {
	// Extracts an archive into the specified directory.
	// Structure is documented below.
	ArchiveExtraction *GuestPoliciesRecipeInstallStepArchiveExtraction `pulumi:"archiveExtraction"`
	// Installs a deb file via dpkg.
	// Structure is documented below.
	DpkgInstallation *GuestPoliciesRecipeInstallStepDpkgInstallation `pulumi:"dpkgInstallation"`
	// Copies a file onto the instance.
	// Structure is documented below.
	FileCopy *GuestPoliciesRecipeInstallStepFileCopy `pulumi:"fileCopy"`
	// Executes an artifact or local file.
	// Structure is documented below.
	FileExec *GuestPoliciesRecipeInstallStepFileExec `pulumi:"fileExec"`
	// Installs an MSI file.
	// Structure is documented below.
	MsiInstallation *GuestPoliciesRecipeInstallStepMsiInstallation `pulumi:"msiInstallation"`
	// Installs an rpm file via the rpm utility.
	// Structure is documented below.
	RpmInstallation *GuestPoliciesRecipeInstallStepRpmInstallation `pulumi:"rpmInstallation"`
	// Runs commands in a shell.
	// Structure is documented below.
	ScriptRun *GuestPoliciesRecipeInstallStepScriptRun `pulumi:"scriptRun"`
}

// GuestPoliciesRecipeInstallStepInput is an input type that accepts GuestPoliciesRecipeInstallStepArgs and GuestPoliciesRecipeInstallStepOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepInput` via:
//
//	GuestPoliciesRecipeInstallStepArgs{...}
type GuestPoliciesRecipeInstallStepInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepOutput() GuestPoliciesRecipeInstallStepOutput
	ToGuestPoliciesRecipeInstallStepOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepOutput
}

type GuestPoliciesRecipeInstallStepArgs struct {
	// Extracts an archive into the specified directory.
	// Structure is documented below.
	ArchiveExtraction GuestPoliciesRecipeInstallStepArchiveExtractionPtrInput `pulumi:"archiveExtraction"`
	// Installs a deb file via dpkg.
	// Structure is documented below.
	DpkgInstallation GuestPoliciesRecipeInstallStepDpkgInstallationPtrInput `pulumi:"dpkgInstallation"`
	// Copies a file onto the instance.
	// Structure is documented below.
	FileCopy GuestPoliciesRecipeInstallStepFileCopyPtrInput `pulumi:"fileCopy"`
	// Executes an artifact or local file.
	// Structure is documented below.
	FileExec GuestPoliciesRecipeInstallStepFileExecPtrInput `pulumi:"fileExec"`
	// Installs an MSI file.
	// Structure is documented below.
	MsiInstallation GuestPoliciesRecipeInstallStepMsiInstallationPtrInput `pulumi:"msiInstallation"`
	// Installs an rpm file via the rpm utility.
	// Structure is documented below.
	RpmInstallation GuestPoliciesRecipeInstallStepRpmInstallationPtrInput `pulumi:"rpmInstallation"`
	// Runs commands in a shell.
	// Structure is documented below.
	ScriptRun GuestPoliciesRecipeInstallStepScriptRunPtrInput `pulumi:"scriptRun"`
}

func (GuestPoliciesRecipeInstallStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStep)(nil)).Elem()
}

func (i GuestPoliciesRecipeInstallStepArgs) ToGuestPoliciesRecipeInstallStepOutput() GuestPoliciesRecipeInstallStepOutput {
	return i.ToGuestPoliciesRecipeInstallStepOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepArgs) ToGuestPoliciesRecipeInstallStepOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepOutput)
}

// GuestPoliciesRecipeInstallStepArrayInput is an input type that accepts GuestPoliciesRecipeInstallStepArray and GuestPoliciesRecipeInstallStepArrayOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepArrayInput` via:
//
//	GuestPoliciesRecipeInstallStepArray{ GuestPoliciesRecipeInstallStepArgs{...} }
type GuestPoliciesRecipeInstallStepArrayInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepArrayOutput() GuestPoliciesRecipeInstallStepArrayOutput
	ToGuestPoliciesRecipeInstallStepArrayOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepArrayOutput
}

type GuestPoliciesRecipeInstallStepArray []GuestPoliciesRecipeInstallStepInput

func (GuestPoliciesRecipeInstallStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesRecipeInstallStep)(nil)).Elem()
}

func (i GuestPoliciesRecipeInstallStepArray) ToGuestPoliciesRecipeInstallStepArrayOutput() GuestPoliciesRecipeInstallStepArrayOutput {
	return i.ToGuestPoliciesRecipeInstallStepArrayOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepArray) ToGuestPoliciesRecipeInstallStepArrayOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepArrayOutput)
}

type GuestPoliciesRecipeInstallStepOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStep)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepOutput) ToGuestPoliciesRecipeInstallStepOutput() GuestPoliciesRecipeInstallStepOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepOutput) ToGuestPoliciesRecipeInstallStepOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepOutput {
	return o
}

// Extracts an archive into the specified directory.
// Structure is documented below.
func (o GuestPoliciesRecipeInstallStepOutput) ArchiveExtraction() GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStep) *GuestPoliciesRecipeInstallStepArchiveExtraction {
		return v.ArchiveExtraction
	}).(GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput)
}

// Installs a deb file via dpkg.
// Structure is documented below.
func (o GuestPoliciesRecipeInstallStepOutput) DpkgInstallation() GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStep) *GuestPoliciesRecipeInstallStepDpkgInstallation {
		return v.DpkgInstallation
	}).(GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput)
}

// Copies a file onto the instance.
// Structure is documented below.
func (o GuestPoliciesRecipeInstallStepOutput) FileCopy() GuestPoliciesRecipeInstallStepFileCopyPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStep) *GuestPoliciesRecipeInstallStepFileCopy { return v.FileCopy }).(GuestPoliciesRecipeInstallStepFileCopyPtrOutput)
}

// Executes an artifact or local file.
// Structure is documented below.
func (o GuestPoliciesRecipeInstallStepOutput) FileExec() GuestPoliciesRecipeInstallStepFileExecPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStep) *GuestPoliciesRecipeInstallStepFileExec { return v.FileExec }).(GuestPoliciesRecipeInstallStepFileExecPtrOutput)
}

// Installs an MSI file.
// Structure is documented below.
func (o GuestPoliciesRecipeInstallStepOutput) MsiInstallation() GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStep) *GuestPoliciesRecipeInstallStepMsiInstallation {
		return v.MsiInstallation
	}).(GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput)
}

// Installs an rpm file via the rpm utility.
// Structure is documented below.
func (o GuestPoliciesRecipeInstallStepOutput) RpmInstallation() GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStep) *GuestPoliciesRecipeInstallStepRpmInstallation {
		return v.RpmInstallation
	}).(GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput)
}

// Runs commands in a shell.
// Structure is documented below.
func (o GuestPoliciesRecipeInstallStepOutput) ScriptRun() GuestPoliciesRecipeInstallStepScriptRunPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStep) *GuestPoliciesRecipeInstallStepScriptRun { return v.ScriptRun }).(GuestPoliciesRecipeInstallStepScriptRunPtrOutput)
}

type GuestPoliciesRecipeInstallStepArrayOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesRecipeInstallStep)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepArrayOutput) ToGuestPoliciesRecipeInstallStepArrayOutput() GuestPoliciesRecipeInstallStepArrayOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepArrayOutput) ToGuestPoliciesRecipeInstallStepArrayOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepArrayOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepArrayOutput) Index(i pulumi.IntInput) GuestPoliciesRecipeInstallStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuestPoliciesRecipeInstallStep {
		return vs[0].([]GuestPoliciesRecipeInstallStep)[vs[1].(int)]
	}).(GuestPoliciesRecipeInstallStepOutput)
}

type GuestPoliciesRecipeInstallStepArchiveExtraction struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
	// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
	Destination *string `pulumi:"destination"`
	// The type of the archive to extract.
	// Possible values are `TAR`, `TAR_GZIP`, `TAR_BZIP`, `TAR_LZMA`, `TAR_XZ`, and `ZIP`.
	Type string `pulumi:"type"`
}

// GuestPoliciesRecipeInstallStepArchiveExtractionInput is an input type that accepts GuestPoliciesRecipeInstallStepArchiveExtractionArgs and GuestPoliciesRecipeInstallStepArchiveExtractionOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepArchiveExtractionInput` via:
//
//	GuestPoliciesRecipeInstallStepArchiveExtractionArgs{...}
type GuestPoliciesRecipeInstallStepArchiveExtractionInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepArchiveExtractionOutput() GuestPoliciesRecipeInstallStepArchiveExtractionOutput
	ToGuestPoliciesRecipeInstallStepArchiveExtractionOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepArchiveExtractionOutput
}

type GuestPoliciesRecipeInstallStepArchiveExtractionArgs struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	// The type of the archive to extract.
	// Possible values are `TAR`, `TAR_GZIP`, `TAR_BZIP`, `TAR_LZMA`, `TAR_XZ`, and `ZIP`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GuestPoliciesRecipeInstallStepArchiveExtractionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepArchiveExtraction)(nil)).Elem()
}

func (i GuestPoliciesRecipeInstallStepArchiveExtractionArgs) ToGuestPoliciesRecipeInstallStepArchiveExtractionOutput() GuestPoliciesRecipeInstallStepArchiveExtractionOutput {
	return i.ToGuestPoliciesRecipeInstallStepArchiveExtractionOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepArchiveExtractionArgs) ToGuestPoliciesRecipeInstallStepArchiveExtractionOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepArchiveExtractionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepArchiveExtractionOutput)
}

func (i GuestPoliciesRecipeInstallStepArchiveExtractionArgs) ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput() GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepArchiveExtractionArgs) ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepArchiveExtractionOutput).ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeInstallStepArchiveExtractionPtrInput is an input type that accepts GuestPoliciesRecipeInstallStepArchiveExtractionArgs, GuestPoliciesRecipeInstallStepArchiveExtractionPtr and GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepArchiveExtractionPtrInput` via:
//
//	        GuestPoliciesRecipeInstallStepArchiveExtractionArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeInstallStepArchiveExtractionPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput() GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput
	ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput
}

type guestPoliciesRecipeInstallStepArchiveExtractionPtrType GuestPoliciesRecipeInstallStepArchiveExtractionArgs

func GuestPoliciesRecipeInstallStepArchiveExtractionPtr(v *GuestPoliciesRecipeInstallStepArchiveExtractionArgs) GuestPoliciesRecipeInstallStepArchiveExtractionPtrInput {
	return (*guestPoliciesRecipeInstallStepArchiveExtractionPtrType)(v)
}

func (*guestPoliciesRecipeInstallStepArchiveExtractionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepArchiveExtraction)(nil)).Elem()
}

func (i *guestPoliciesRecipeInstallStepArchiveExtractionPtrType) ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput() GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeInstallStepArchiveExtractionPtrType) ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput)
}

type GuestPoliciesRecipeInstallStepArchiveExtractionOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepArchiveExtractionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepArchiveExtraction)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepArchiveExtractionOutput) ToGuestPoliciesRecipeInstallStepArchiveExtractionOutput() GuestPoliciesRecipeInstallStepArchiveExtractionOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepArchiveExtractionOutput) ToGuestPoliciesRecipeInstallStepArchiveExtractionOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepArchiveExtractionOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepArchiveExtractionOutput) ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput() GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput {
	return o.ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeInstallStepArchiveExtractionOutput) ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeInstallStepArchiveExtraction) *GuestPoliciesRecipeInstallStepArchiveExtraction {
		return &v
	}).(GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepArchiveExtractionOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepArchiveExtraction) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
func (o GuestPoliciesRecipeInstallStepArchiveExtractionOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepArchiveExtraction) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// The type of the archive to extract.
// Possible values are `TAR`, `TAR_GZIP`, `TAR_BZIP`, `TAR_LZMA`, `TAR_XZ`, and `ZIP`.
func (o GuestPoliciesRecipeInstallStepArchiveExtractionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepArchiveExtraction) string { return v.Type }).(pulumi.StringOutput)
}

type GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepArchiveExtraction)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput) ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput() GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput) ToGuestPoliciesRecipeInstallStepArchiveExtractionPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput) Elem() GuestPoliciesRecipeInstallStepArchiveExtractionOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepArchiveExtraction) GuestPoliciesRecipeInstallStepArchiveExtraction {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeInstallStepArchiveExtraction
		return ret
	}).(GuestPoliciesRecipeInstallStepArchiveExtractionOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepArchiveExtraction) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
func (o GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepArchiveExtraction) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

// The type of the archive to extract.
// Possible values are `TAR`, `TAR_GZIP`, `TAR_BZIP`, `TAR_LZMA`, `TAR_XZ`, and `ZIP`.
func (o GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepArchiveExtraction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeInstallStepDpkgInstallation struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
}

// GuestPoliciesRecipeInstallStepDpkgInstallationInput is an input type that accepts GuestPoliciesRecipeInstallStepDpkgInstallationArgs and GuestPoliciesRecipeInstallStepDpkgInstallationOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepDpkgInstallationInput` via:
//
//	GuestPoliciesRecipeInstallStepDpkgInstallationArgs{...}
type GuestPoliciesRecipeInstallStepDpkgInstallationInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepDpkgInstallationOutput() GuestPoliciesRecipeInstallStepDpkgInstallationOutput
	ToGuestPoliciesRecipeInstallStepDpkgInstallationOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepDpkgInstallationOutput
}

type GuestPoliciesRecipeInstallStepDpkgInstallationArgs struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
}

func (GuestPoliciesRecipeInstallStepDpkgInstallationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepDpkgInstallation)(nil)).Elem()
}

func (i GuestPoliciesRecipeInstallStepDpkgInstallationArgs) ToGuestPoliciesRecipeInstallStepDpkgInstallationOutput() GuestPoliciesRecipeInstallStepDpkgInstallationOutput {
	return i.ToGuestPoliciesRecipeInstallStepDpkgInstallationOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepDpkgInstallationArgs) ToGuestPoliciesRecipeInstallStepDpkgInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepDpkgInstallationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepDpkgInstallationOutput)
}

func (i GuestPoliciesRecipeInstallStepDpkgInstallationArgs) ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput() GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepDpkgInstallationArgs) ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepDpkgInstallationOutput).ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeInstallStepDpkgInstallationPtrInput is an input type that accepts GuestPoliciesRecipeInstallStepDpkgInstallationArgs, GuestPoliciesRecipeInstallStepDpkgInstallationPtr and GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepDpkgInstallationPtrInput` via:
//
//	        GuestPoliciesRecipeInstallStepDpkgInstallationArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeInstallStepDpkgInstallationPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput() GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput
	ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput
}

type guestPoliciesRecipeInstallStepDpkgInstallationPtrType GuestPoliciesRecipeInstallStepDpkgInstallationArgs

func GuestPoliciesRecipeInstallStepDpkgInstallationPtr(v *GuestPoliciesRecipeInstallStepDpkgInstallationArgs) GuestPoliciesRecipeInstallStepDpkgInstallationPtrInput {
	return (*guestPoliciesRecipeInstallStepDpkgInstallationPtrType)(v)
}

func (*guestPoliciesRecipeInstallStepDpkgInstallationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepDpkgInstallation)(nil)).Elem()
}

func (i *guestPoliciesRecipeInstallStepDpkgInstallationPtrType) ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput() GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeInstallStepDpkgInstallationPtrType) ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput)
}

type GuestPoliciesRecipeInstallStepDpkgInstallationOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepDpkgInstallationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepDpkgInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepDpkgInstallationOutput) ToGuestPoliciesRecipeInstallStepDpkgInstallationOutput() GuestPoliciesRecipeInstallStepDpkgInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepDpkgInstallationOutput) ToGuestPoliciesRecipeInstallStepDpkgInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepDpkgInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepDpkgInstallationOutput) ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput() GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput {
	return o.ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeInstallStepDpkgInstallationOutput) ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeInstallStepDpkgInstallation) *GuestPoliciesRecipeInstallStepDpkgInstallation {
		return &v
	}).(GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepDpkgInstallationOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepDpkgInstallation) string { return v.ArtifactId }).(pulumi.StringOutput)
}

type GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepDpkgInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput) ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput() GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput) ToGuestPoliciesRecipeInstallStepDpkgInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput) Elem() GuestPoliciesRecipeInstallStepDpkgInstallationOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepDpkgInstallation) GuestPoliciesRecipeInstallStepDpkgInstallation {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeInstallStepDpkgInstallation
		return ret
	}).(GuestPoliciesRecipeInstallStepDpkgInstallationOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepDpkgInstallation) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeInstallStepFileCopy struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
	// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
	Destination string `pulumi:"destination"`
	// Whether to allow this step to overwrite existing files.If this is false and the file already exists the file
	// is not overwritten and the step is considered a success. Defaults to false.
	Overwrite *bool `pulumi:"overwrite"`
	// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users
	// for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit
	// number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one
	// bit corresponds to the execute permission. Default behavior is 755.
	// Below are some examples of permissions and their associated values:
	// read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
	Permissions *string `pulumi:"permissions"`
}

// GuestPoliciesRecipeInstallStepFileCopyInput is an input type that accepts GuestPoliciesRecipeInstallStepFileCopyArgs and GuestPoliciesRecipeInstallStepFileCopyOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepFileCopyInput` via:
//
//	GuestPoliciesRecipeInstallStepFileCopyArgs{...}
type GuestPoliciesRecipeInstallStepFileCopyInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepFileCopyOutput() GuestPoliciesRecipeInstallStepFileCopyOutput
	ToGuestPoliciesRecipeInstallStepFileCopyOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepFileCopyOutput
}

type GuestPoliciesRecipeInstallStepFileCopyArgs struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
	Destination pulumi.StringInput `pulumi:"destination"`
	// Whether to allow this step to overwrite existing files.If this is false and the file already exists the file
	// is not overwritten and the step is considered a success. Defaults to false.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users
	// for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit
	// number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one
	// bit corresponds to the execute permission. Default behavior is 755.
	// Below are some examples of permissions and their associated values:
	// read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
}

func (GuestPoliciesRecipeInstallStepFileCopyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepFileCopy)(nil)).Elem()
}

func (i GuestPoliciesRecipeInstallStepFileCopyArgs) ToGuestPoliciesRecipeInstallStepFileCopyOutput() GuestPoliciesRecipeInstallStepFileCopyOutput {
	return i.ToGuestPoliciesRecipeInstallStepFileCopyOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepFileCopyArgs) ToGuestPoliciesRecipeInstallStepFileCopyOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileCopyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepFileCopyOutput)
}

func (i GuestPoliciesRecipeInstallStepFileCopyArgs) ToGuestPoliciesRecipeInstallStepFileCopyPtrOutput() GuestPoliciesRecipeInstallStepFileCopyPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepFileCopyPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepFileCopyArgs) ToGuestPoliciesRecipeInstallStepFileCopyPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileCopyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepFileCopyOutput).ToGuestPoliciesRecipeInstallStepFileCopyPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeInstallStepFileCopyPtrInput is an input type that accepts GuestPoliciesRecipeInstallStepFileCopyArgs, GuestPoliciesRecipeInstallStepFileCopyPtr and GuestPoliciesRecipeInstallStepFileCopyPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepFileCopyPtrInput` via:
//
//	        GuestPoliciesRecipeInstallStepFileCopyArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeInstallStepFileCopyPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepFileCopyPtrOutput() GuestPoliciesRecipeInstallStepFileCopyPtrOutput
	ToGuestPoliciesRecipeInstallStepFileCopyPtrOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepFileCopyPtrOutput
}

type guestPoliciesRecipeInstallStepFileCopyPtrType GuestPoliciesRecipeInstallStepFileCopyArgs

func GuestPoliciesRecipeInstallStepFileCopyPtr(v *GuestPoliciesRecipeInstallStepFileCopyArgs) GuestPoliciesRecipeInstallStepFileCopyPtrInput {
	return (*guestPoliciesRecipeInstallStepFileCopyPtrType)(v)
}

func (*guestPoliciesRecipeInstallStepFileCopyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepFileCopy)(nil)).Elem()
}

func (i *guestPoliciesRecipeInstallStepFileCopyPtrType) ToGuestPoliciesRecipeInstallStepFileCopyPtrOutput() GuestPoliciesRecipeInstallStepFileCopyPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepFileCopyPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeInstallStepFileCopyPtrType) ToGuestPoliciesRecipeInstallStepFileCopyPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileCopyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepFileCopyPtrOutput)
}

type GuestPoliciesRecipeInstallStepFileCopyOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepFileCopyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepFileCopy)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepFileCopyOutput) ToGuestPoliciesRecipeInstallStepFileCopyOutput() GuestPoliciesRecipeInstallStepFileCopyOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepFileCopyOutput) ToGuestPoliciesRecipeInstallStepFileCopyOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileCopyOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepFileCopyOutput) ToGuestPoliciesRecipeInstallStepFileCopyPtrOutput() GuestPoliciesRecipeInstallStepFileCopyPtrOutput {
	return o.ToGuestPoliciesRecipeInstallStepFileCopyPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeInstallStepFileCopyOutput) ToGuestPoliciesRecipeInstallStepFileCopyPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileCopyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeInstallStepFileCopy) *GuestPoliciesRecipeInstallStepFileCopy {
		return &v
	}).(GuestPoliciesRecipeInstallStepFileCopyPtrOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepFileCopyOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepFileCopy) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
func (o GuestPoliciesRecipeInstallStepFileCopyOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepFileCopy) string { return v.Destination }).(pulumi.StringOutput)
}

// Whether to allow this step to overwrite existing files.If this is false and the file already exists the file
// is not overwritten and the step is considered a success. Defaults to false.
func (o GuestPoliciesRecipeInstallStepFileCopyOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepFileCopy) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users
// for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit
// number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one
// bit corresponds to the execute permission. Default behavior is 755.
// Below are some examples of permissions and their associated values:
// read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
func (o GuestPoliciesRecipeInstallStepFileCopyOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepFileCopy) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeInstallStepFileCopyPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepFileCopyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepFileCopy)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepFileCopyPtrOutput) ToGuestPoliciesRecipeInstallStepFileCopyPtrOutput() GuestPoliciesRecipeInstallStepFileCopyPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepFileCopyPtrOutput) ToGuestPoliciesRecipeInstallStepFileCopyPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileCopyPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepFileCopyPtrOutput) Elem() GuestPoliciesRecipeInstallStepFileCopyOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileCopy) GuestPoliciesRecipeInstallStepFileCopy {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeInstallStepFileCopy
		return ret
	}).(GuestPoliciesRecipeInstallStepFileCopyOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepFileCopyPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileCopy) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
func (o GuestPoliciesRecipeInstallStepFileCopyPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileCopy) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

// Whether to allow this step to overwrite existing files.If this is false and the file already exists the file
// is not overwritten and the step is considered a success. Defaults to false.
func (o GuestPoliciesRecipeInstallStepFileCopyPtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileCopy) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users
// for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit
// number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one
// bit corresponds to the execute permission. Default behavior is 755.
// Below are some examples of permissions and their associated values:
// read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
func (o GuestPoliciesRecipeInstallStepFileCopyPtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileCopy) *string {
		if v == nil {
			return nil
		}
		return v.Permissions
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeInstallStepFileExec struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes *string `pulumi:"allowedExitCodes"`
	// Arguments to be passed to the provided executable.
	Args []string `pulumi:"args"`
	// The id of the relevant artifact in the recipe.
	ArtifactId *string `pulumi:"artifactId"`
	// The absolute path of the file on the local filesystem.
	LocalPath *string `pulumi:"localPath"`
}

// GuestPoliciesRecipeInstallStepFileExecInput is an input type that accepts GuestPoliciesRecipeInstallStepFileExecArgs and GuestPoliciesRecipeInstallStepFileExecOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepFileExecInput` via:
//
//	GuestPoliciesRecipeInstallStepFileExecArgs{...}
type GuestPoliciesRecipeInstallStepFileExecInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepFileExecOutput() GuestPoliciesRecipeInstallStepFileExecOutput
	ToGuestPoliciesRecipeInstallStepFileExecOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepFileExecOutput
}

type GuestPoliciesRecipeInstallStepFileExecArgs struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes pulumi.StringPtrInput `pulumi:"allowedExitCodes"`
	// Arguments to be passed to the provided executable.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringPtrInput `pulumi:"artifactId"`
	// The absolute path of the file on the local filesystem.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (GuestPoliciesRecipeInstallStepFileExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepFileExec)(nil)).Elem()
}

func (i GuestPoliciesRecipeInstallStepFileExecArgs) ToGuestPoliciesRecipeInstallStepFileExecOutput() GuestPoliciesRecipeInstallStepFileExecOutput {
	return i.ToGuestPoliciesRecipeInstallStepFileExecOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepFileExecArgs) ToGuestPoliciesRecipeInstallStepFileExecOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepFileExecOutput)
}

func (i GuestPoliciesRecipeInstallStepFileExecArgs) ToGuestPoliciesRecipeInstallStepFileExecPtrOutput() GuestPoliciesRecipeInstallStepFileExecPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepFileExecPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepFileExecArgs) ToGuestPoliciesRecipeInstallStepFileExecPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepFileExecOutput).ToGuestPoliciesRecipeInstallStepFileExecPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeInstallStepFileExecPtrInput is an input type that accepts GuestPoliciesRecipeInstallStepFileExecArgs, GuestPoliciesRecipeInstallStepFileExecPtr and GuestPoliciesRecipeInstallStepFileExecPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepFileExecPtrInput` via:
//
//	        GuestPoliciesRecipeInstallStepFileExecArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeInstallStepFileExecPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepFileExecPtrOutput() GuestPoliciesRecipeInstallStepFileExecPtrOutput
	ToGuestPoliciesRecipeInstallStepFileExecPtrOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepFileExecPtrOutput
}

type guestPoliciesRecipeInstallStepFileExecPtrType GuestPoliciesRecipeInstallStepFileExecArgs

func GuestPoliciesRecipeInstallStepFileExecPtr(v *GuestPoliciesRecipeInstallStepFileExecArgs) GuestPoliciesRecipeInstallStepFileExecPtrInput {
	return (*guestPoliciesRecipeInstallStepFileExecPtrType)(v)
}

func (*guestPoliciesRecipeInstallStepFileExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepFileExec)(nil)).Elem()
}

func (i *guestPoliciesRecipeInstallStepFileExecPtrType) ToGuestPoliciesRecipeInstallStepFileExecPtrOutput() GuestPoliciesRecipeInstallStepFileExecPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepFileExecPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeInstallStepFileExecPtrType) ToGuestPoliciesRecipeInstallStepFileExecPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepFileExecPtrOutput)
}

type GuestPoliciesRecipeInstallStepFileExecOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepFileExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepFileExec)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepFileExecOutput) ToGuestPoliciesRecipeInstallStepFileExecOutput() GuestPoliciesRecipeInstallStepFileExecOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepFileExecOutput) ToGuestPoliciesRecipeInstallStepFileExecOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileExecOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepFileExecOutput) ToGuestPoliciesRecipeInstallStepFileExecPtrOutput() GuestPoliciesRecipeInstallStepFileExecPtrOutput {
	return o.ToGuestPoliciesRecipeInstallStepFileExecPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeInstallStepFileExecOutput) ToGuestPoliciesRecipeInstallStepFileExecPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeInstallStepFileExec) *GuestPoliciesRecipeInstallStepFileExec {
		return &v
	}).(GuestPoliciesRecipeInstallStepFileExecPtrOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeInstallStepFileExecOutput) AllowedExitCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepFileExec) *string { return v.AllowedExitCodes }).(pulumi.StringPtrOutput)
}

// Arguments to be passed to the provided executable.
func (o GuestPoliciesRecipeInstallStepFileExecOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepFileExec) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepFileExecOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepFileExec) *string { return v.ArtifactId }).(pulumi.StringPtrOutput)
}

// The absolute path of the file on the local filesystem.
func (o GuestPoliciesRecipeInstallStepFileExecOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepFileExec) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeInstallStepFileExecPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepFileExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepFileExec)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepFileExecPtrOutput) ToGuestPoliciesRecipeInstallStepFileExecPtrOutput() GuestPoliciesRecipeInstallStepFileExecPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepFileExecPtrOutput) ToGuestPoliciesRecipeInstallStepFileExecPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepFileExecPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepFileExecPtrOutput) Elem() GuestPoliciesRecipeInstallStepFileExecOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileExec) GuestPoliciesRecipeInstallStepFileExec {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeInstallStepFileExec
		return ret
	}).(GuestPoliciesRecipeInstallStepFileExecOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeInstallStepFileExecPtrOutput) AllowedExitCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileExec) *string {
		if v == nil {
			return nil
		}
		return v.AllowedExitCodes
	}).(pulumi.StringPtrOutput)
}

// Arguments to be passed to the provided executable.
func (o GuestPoliciesRecipeInstallStepFileExecPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileExec) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepFileExecPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileExec) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

// The absolute path of the file on the local filesystem.
func (o GuestPoliciesRecipeInstallStepFileExecPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepFileExec) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeInstallStepMsiInstallation struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes []int `pulumi:"allowedExitCodes"`
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
	// The flags to use when installing the MSI. Defaults to the install flag.
	Flags []string `pulumi:"flags"`
}

// GuestPoliciesRecipeInstallStepMsiInstallationInput is an input type that accepts GuestPoliciesRecipeInstallStepMsiInstallationArgs and GuestPoliciesRecipeInstallStepMsiInstallationOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepMsiInstallationInput` via:
//
//	GuestPoliciesRecipeInstallStepMsiInstallationArgs{...}
type GuestPoliciesRecipeInstallStepMsiInstallationInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepMsiInstallationOutput() GuestPoliciesRecipeInstallStepMsiInstallationOutput
	ToGuestPoliciesRecipeInstallStepMsiInstallationOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepMsiInstallationOutput
}

type GuestPoliciesRecipeInstallStepMsiInstallationArgs struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes pulumi.IntArrayInput `pulumi:"allowedExitCodes"`
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// The flags to use when installing the MSI. Defaults to the install flag.
	Flags pulumi.StringArrayInput `pulumi:"flags"`
}

func (GuestPoliciesRecipeInstallStepMsiInstallationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepMsiInstallation)(nil)).Elem()
}

func (i GuestPoliciesRecipeInstallStepMsiInstallationArgs) ToGuestPoliciesRecipeInstallStepMsiInstallationOutput() GuestPoliciesRecipeInstallStepMsiInstallationOutput {
	return i.ToGuestPoliciesRecipeInstallStepMsiInstallationOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepMsiInstallationArgs) ToGuestPoliciesRecipeInstallStepMsiInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepMsiInstallationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepMsiInstallationOutput)
}

func (i GuestPoliciesRecipeInstallStepMsiInstallationArgs) ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutput() GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepMsiInstallationArgs) ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepMsiInstallationOutput).ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeInstallStepMsiInstallationPtrInput is an input type that accepts GuestPoliciesRecipeInstallStepMsiInstallationArgs, GuestPoliciesRecipeInstallStepMsiInstallationPtr and GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepMsiInstallationPtrInput` via:
//
//	        GuestPoliciesRecipeInstallStepMsiInstallationArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeInstallStepMsiInstallationPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutput() GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput
	ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput
}

type guestPoliciesRecipeInstallStepMsiInstallationPtrType GuestPoliciesRecipeInstallStepMsiInstallationArgs

func GuestPoliciesRecipeInstallStepMsiInstallationPtr(v *GuestPoliciesRecipeInstallStepMsiInstallationArgs) GuestPoliciesRecipeInstallStepMsiInstallationPtrInput {
	return (*guestPoliciesRecipeInstallStepMsiInstallationPtrType)(v)
}

func (*guestPoliciesRecipeInstallStepMsiInstallationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepMsiInstallation)(nil)).Elem()
}

func (i *guestPoliciesRecipeInstallStepMsiInstallationPtrType) ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutput() GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeInstallStepMsiInstallationPtrType) ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput)
}

type GuestPoliciesRecipeInstallStepMsiInstallationOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepMsiInstallationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepMsiInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepMsiInstallationOutput) ToGuestPoliciesRecipeInstallStepMsiInstallationOutput() GuestPoliciesRecipeInstallStepMsiInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepMsiInstallationOutput) ToGuestPoliciesRecipeInstallStepMsiInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepMsiInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepMsiInstallationOutput) ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutput() GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput {
	return o.ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeInstallStepMsiInstallationOutput) ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeInstallStepMsiInstallation) *GuestPoliciesRecipeInstallStepMsiInstallation {
		return &v
	}).(GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeInstallStepMsiInstallationOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepMsiInstallation) []int { return v.AllowedExitCodes }).(pulumi.IntArrayOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepMsiInstallationOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepMsiInstallation) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// The flags to use when installing the MSI. Defaults to the install flag.
func (o GuestPoliciesRecipeInstallStepMsiInstallationOutput) Flags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepMsiInstallation) []string { return v.Flags }).(pulumi.StringArrayOutput)
}

type GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepMsiInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput) ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutput() GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput) ToGuestPoliciesRecipeInstallStepMsiInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput) Elem() GuestPoliciesRecipeInstallStepMsiInstallationOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepMsiInstallation) GuestPoliciesRecipeInstallStepMsiInstallation {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeInstallStepMsiInstallation
		return ret
	}).(GuestPoliciesRecipeInstallStepMsiInstallationOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepMsiInstallation) []int {
		if v == nil {
			return nil
		}
		return v.AllowedExitCodes
	}).(pulumi.IntArrayOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepMsiInstallation) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

// The flags to use when installing the MSI. Defaults to the install flag.
func (o GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput) Flags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepMsiInstallation) []string {
		if v == nil {
			return nil
		}
		return v.Flags
	}).(pulumi.StringArrayOutput)
}

type GuestPoliciesRecipeInstallStepRpmInstallation struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
}

// GuestPoliciesRecipeInstallStepRpmInstallationInput is an input type that accepts GuestPoliciesRecipeInstallStepRpmInstallationArgs and GuestPoliciesRecipeInstallStepRpmInstallationOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepRpmInstallationInput` via:
//
//	GuestPoliciesRecipeInstallStepRpmInstallationArgs{...}
type GuestPoliciesRecipeInstallStepRpmInstallationInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepRpmInstallationOutput() GuestPoliciesRecipeInstallStepRpmInstallationOutput
	ToGuestPoliciesRecipeInstallStepRpmInstallationOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepRpmInstallationOutput
}

type GuestPoliciesRecipeInstallStepRpmInstallationArgs struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
}

func (GuestPoliciesRecipeInstallStepRpmInstallationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepRpmInstallation)(nil)).Elem()
}

func (i GuestPoliciesRecipeInstallStepRpmInstallationArgs) ToGuestPoliciesRecipeInstallStepRpmInstallationOutput() GuestPoliciesRecipeInstallStepRpmInstallationOutput {
	return i.ToGuestPoliciesRecipeInstallStepRpmInstallationOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepRpmInstallationArgs) ToGuestPoliciesRecipeInstallStepRpmInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepRpmInstallationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepRpmInstallationOutput)
}

func (i GuestPoliciesRecipeInstallStepRpmInstallationArgs) ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutput() GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepRpmInstallationArgs) ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepRpmInstallationOutput).ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeInstallStepRpmInstallationPtrInput is an input type that accepts GuestPoliciesRecipeInstallStepRpmInstallationArgs, GuestPoliciesRecipeInstallStepRpmInstallationPtr and GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepRpmInstallationPtrInput` via:
//
//	        GuestPoliciesRecipeInstallStepRpmInstallationArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeInstallStepRpmInstallationPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutput() GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput
	ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput
}

type guestPoliciesRecipeInstallStepRpmInstallationPtrType GuestPoliciesRecipeInstallStepRpmInstallationArgs

func GuestPoliciesRecipeInstallStepRpmInstallationPtr(v *GuestPoliciesRecipeInstallStepRpmInstallationArgs) GuestPoliciesRecipeInstallStepRpmInstallationPtrInput {
	return (*guestPoliciesRecipeInstallStepRpmInstallationPtrType)(v)
}

func (*guestPoliciesRecipeInstallStepRpmInstallationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepRpmInstallation)(nil)).Elem()
}

func (i *guestPoliciesRecipeInstallStepRpmInstallationPtrType) ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutput() GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeInstallStepRpmInstallationPtrType) ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput)
}

type GuestPoliciesRecipeInstallStepRpmInstallationOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepRpmInstallationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepRpmInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepRpmInstallationOutput) ToGuestPoliciesRecipeInstallStepRpmInstallationOutput() GuestPoliciesRecipeInstallStepRpmInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepRpmInstallationOutput) ToGuestPoliciesRecipeInstallStepRpmInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepRpmInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepRpmInstallationOutput) ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutput() GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput {
	return o.ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeInstallStepRpmInstallationOutput) ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeInstallStepRpmInstallation) *GuestPoliciesRecipeInstallStepRpmInstallation {
		return &v
	}).(GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepRpmInstallationOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepRpmInstallation) string { return v.ArtifactId }).(pulumi.StringOutput)
}

type GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepRpmInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput) ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutput() GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput) ToGuestPoliciesRecipeInstallStepRpmInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput) Elem() GuestPoliciesRecipeInstallStepRpmInstallationOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepRpmInstallation) GuestPoliciesRecipeInstallStepRpmInstallation {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeInstallStepRpmInstallation
		return ret
	}).(GuestPoliciesRecipeInstallStepRpmInstallationOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepRpmInstallation) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeInstallStepScriptRun struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes []int `pulumi:"allowedExitCodes"`
	// The script interpreter to use to run the script. If no interpreter is specified the script is executed directly,
	// which likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter *string `pulumi:"interpreter"`
	// The shell script to be executed.
	Script string `pulumi:"script"`
}

// GuestPoliciesRecipeInstallStepScriptRunInput is an input type that accepts GuestPoliciesRecipeInstallStepScriptRunArgs and GuestPoliciesRecipeInstallStepScriptRunOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepScriptRunInput` via:
//
//	GuestPoliciesRecipeInstallStepScriptRunArgs{...}
type GuestPoliciesRecipeInstallStepScriptRunInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepScriptRunOutput() GuestPoliciesRecipeInstallStepScriptRunOutput
	ToGuestPoliciesRecipeInstallStepScriptRunOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepScriptRunOutput
}

type GuestPoliciesRecipeInstallStepScriptRunArgs struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes pulumi.IntArrayInput `pulumi:"allowedExitCodes"`
	// The script interpreter to use to run the script. If no interpreter is specified the script is executed directly,
	// which likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// The shell script to be executed.
	Script pulumi.StringInput `pulumi:"script"`
}

func (GuestPoliciesRecipeInstallStepScriptRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepScriptRun)(nil)).Elem()
}

func (i GuestPoliciesRecipeInstallStepScriptRunArgs) ToGuestPoliciesRecipeInstallStepScriptRunOutput() GuestPoliciesRecipeInstallStepScriptRunOutput {
	return i.ToGuestPoliciesRecipeInstallStepScriptRunOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepScriptRunArgs) ToGuestPoliciesRecipeInstallStepScriptRunOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepScriptRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepScriptRunOutput)
}

func (i GuestPoliciesRecipeInstallStepScriptRunArgs) ToGuestPoliciesRecipeInstallStepScriptRunPtrOutput() GuestPoliciesRecipeInstallStepScriptRunPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepScriptRunPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeInstallStepScriptRunArgs) ToGuestPoliciesRecipeInstallStepScriptRunPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepScriptRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepScriptRunOutput).ToGuestPoliciesRecipeInstallStepScriptRunPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeInstallStepScriptRunPtrInput is an input type that accepts GuestPoliciesRecipeInstallStepScriptRunArgs, GuestPoliciesRecipeInstallStepScriptRunPtr and GuestPoliciesRecipeInstallStepScriptRunPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeInstallStepScriptRunPtrInput` via:
//
//	        GuestPoliciesRecipeInstallStepScriptRunArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeInstallStepScriptRunPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeInstallStepScriptRunPtrOutput() GuestPoliciesRecipeInstallStepScriptRunPtrOutput
	ToGuestPoliciesRecipeInstallStepScriptRunPtrOutputWithContext(context.Context) GuestPoliciesRecipeInstallStepScriptRunPtrOutput
}

type guestPoliciesRecipeInstallStepScriptRunPtrType GuestPoliciesRecipeInstallStepScriptRunArgs

func GuestPoliciesRecipeInstallStepScriptRunPtr(v *GuestPoliciesRecipeInstallStepScriptRunArgs) GuestPoliciesRecipeInstallStepScriptRunPtrInput {
	return (*guestPoliciesRecipeInstallStepScriptRunPtrType)(v)
}

func (*guestPoliciesRecipeInstallStepScriptRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepScriptRun)(nil)).Elem()
}

func (i *guestPoliciesRecipeInstallStepScriptRunPtrType) ToGuestPoliciesRecipeInstallStepScriptRunPtrOutput() GuestPoliciesRecipeInstallStepScriptRunPtrOutput {
	return i.ToGuestPoliciesRecipeInstallStepScriptRunPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeInstallStepScriptRunPtrType) ToGuestPoliciesRecipeInstallStepScriptRunPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepScriptRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeInstallStepScriptRunPtrOutput)
}

type GuestPoliciesRecipeInstallStepScriptRunOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepScriptRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeInstallStepScriptRun)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepScriptRunOutput) ToGuestPoliciesRecipeInstallStepScriptRunOutput() GuestPoliciesRecipeInstallStepScriptRunOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepScriptRunOutput) ToGuestPoliciesRecipeInstallStepScriptRunOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepScriptRunOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepScriptRunOutput) ToGuestPoliciesRecipeInstallStepScriptRunPtrOutput() GuestPoliciesRecipeInstallStepScriptRunPtrOutput {
	return o.ToGuestPoliciesRecipeInstallStepScriptRunPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeInstallStepScriptRunOutput) ToGuestPoliciesRecipeInstallStepScriptRunPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepScriptRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeInstallStepScriptRun) *GuestPoliciesRecipeInstallStepScriptRun {
		return &v
	}).(GuestPoliciesRecipeInstallStepScriptRunPtrOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeInstallStepScriptRunOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepScriptRun) []int { return v.AllowedExitCodes }).(pulumi.IntArrayOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script is executed directly,
// which likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o GuestPoliciesRecipeInstallStepScriptRunOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepScriptRun) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// The shell script to be executed.
func (o GuestPoliciesRecipeInstallStepScriptRunOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeInstallStepScriptRun) string { return v.Script }).(pulumi.StringOutput)
}

type GuestPoliciesRecipeInstallStepScriptRunPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeInstallStepScriptRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeInstallStepScriptRun)(nil)).Elem()
}

func (o GuestPoliciesRecipeInstallStepScriptRunPtrOutput) ToGuestPoliciesRecipeInstallStepScriptRunPtrOutput() GuestPoliciesRecipeInstallStepScriptRunPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepScriptRunPtrOutput) ToGuestPoliciesRecipeInstallStepScriptRunPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeInstallStepScriptRunPtrOutput {
	return o
}

func (o GuestPoliciesRecipeInstallStepScriptRunPtrOutput) Elem() GuestPoliciesRecipeInstallStepScriptRunOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepScriptRun) GuestPoliciesRecipeInstallStepScriptRun {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeInstallStepScriptRun
		return ret
	}).(GuestPoliciesRecipeInstallStepScriptRunOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeInstallStepScriptRunPtrOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepScriptRun) []int {
		if v == nil {
			return nil
		}
		return v.AllowedExitCodes
	}).(pulumi.IntArrayOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script is executed directly,
// which likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o GuestPoliciesRecipeInstallStepScriptRunPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepScriptRun) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// The shell script to be executed.
func (o GuestPoliciesRecipeInstallStepScriptRunPtrOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeInstallStepScriptRun) *string {
		if v == nil {
			return nil
		}
		return &v.Script
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeUpdateStep struct {
	// Extracts an archive into the specified directory.
	// Structure is documented below.
	ArchiveExtraction *GuestPoliciesRecipeUpdateStepArchiveExtraction `pulumi:"archiveExtraction"`
	// Installs a deb file via dpkg.
	// Structure is documented below.
	DpkgInstallation *GuestPoliciesRecipeUpdateStepDpkgInstallation `pulumi:"dpkgInstallation"`
	// Copies a file onto the instance.
	// Structure is documented below.
	FileCopy *GuestPoliciesRecipeUpdateStepFileCopy `pulumi:"fileCopy"`
	// Executes an artifact or local file.
	// Structure is documented below.
	FileExec *GuestPoliciesRecipeUpdateStepFileExec `pulumi:"fileExec"`
	// Installs an MSI file.
	// Structure is documented below.
	MsiInstallation *GuestPoliciesRecipeUpdateStepMsiInstallation `pulumi:"msiInstallation"`
	// Installs an rpm file via the rpm utility.
	// Structure is documented below.
	RpmInstallation *GuestPoliciesRecipeUpdateStepRpmInstallation `pulumi:"rpmInstallation"`
	// Runs commands in a shell.
	// Structure is documented below.
	ScriptRun *GuestPoliciesRecipeUpdateStepScriptRun `pulumi:"scriptRun"`
}

// GuestPoliciesRecipeUpdateStepInput is an input type that accepts GuestPoliciesRecipeUpdateStepArgs and GuestPoliciesRecipeUpdateStepOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepInput` via:
//
//	GuestPoliciesRecipeUpdateStepArgs{...}
type GuestPoliciesRecipeUpdateStepInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepOutput() GuestPoliciesRecipeUpdateStepOutput
	ToGuestPoliciesRecipeUpdateStepOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepOutput
}

type GuestPoliciesRecipeUpdateStepArgs struct {
	// Extracts an archive into the specified directory.
	// Structure is documented below.
	ArchiveExtraction GuestPoliciesRecipeUpdateStepArchiveExtractionPtrInput `pulumi:"archiveExtraction"`
	// Installs a deb file via dpkg.
	// Structure is documented below.
	DpkgInstallation GuestPoliciesRecipeUpdateStepDpkgInstallationPtrInput `pulumi:"dpkgInstallation"`
	// Copies a file onto the instance.
	// Structure is documented below.
	FileCopy GuestPoliciesRecipeUpdateStepFileCopyPtrInput `pulumi:"fileCopy"`
	// Executes an artifact or local file.
	// Structure is documented below.
	FileExec GuestPoliciesRecipeUpdateStepFileExecPtrInput `pulumi:"fileExec"`
	// Installs an MSI file.
	// Structure is documented below.
	MsiInstallation GuestPoliciesRecipeUpdateStepMsiInstallationPtrInput `pulumi:"msiInstallation"`
	// Installs an rpm file via the rpm utility.
	// Structure is documented below.
	RpmInstallation GuestPoliciesRecipeUpdateStepRpmInstallationPtrInput `pulumi:"rpmInstallation"`
	// Runs commands in a shell.
	// Structure is documented below.
	ScriptRun GuestPoliciesRecipeUpdateStepScriptRunPtrInput `pulumi:"scriptRun"`
}

func (GuestPoliciesRecipeUpdateStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStep)(nil)).Elem()
}

func (i GuestPoliciesRecipeUpdateStepArgs) ToGuestPoliciesRecipeUpdateStepOutput() GuestPoliciesRecipeUpdateStepOutput {
	return i.ToGuestPoliciesRecipeUpdateStepOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepArgs) ToGuestPoliciesRecipeUpdateStepOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepOutput)
}

// GuestPoliciesRecipeUpdateStepArrayInput is an input type that accepts GuestPoliciesRecipeUpdateStepArray and GuestPoliciesRecipeUpdateStepArrayOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepArrayInput` via:
//
//	GuestPoliciesRecipeUpdateStepArray{ GuestPoliciesRecipeUpdateStepArgs{...} }
type GuestPoliciesRecipeUpdateStepArrayInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepArrayOutput() GuestPoliciesRecipeUpdateStepArrayOutput
	ToGuestPoliciesRecipeUpdateStepArrayOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepArrayOutput
}

type GuestPoliciesRecipeUpdateStepArray []GuestPoliciesRecipeUpdateStepInput

func (GuestPoliciesRecipeUpdateStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesRecipeUpdateStep)(nil)).Elem()
}

func (i GuestPoliciesRecipeUpdateStepArray) ToGuestPoliciesRecipeUpdateStepArrayOutput() GuestPoliciesRecipeUpdateStepArrayOutput {
	return i.ToGuestPoliciesRecipeUpdateStepArrayOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepArray) ToGuestPoliciesRecipeUpdateStepArrayOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepArrayOutput)
}

type GuestPoliciesRecipeUpdateStepOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStep)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepOutput) ToGuestPoliciesRecipeUpdateStepOutput() GuestPoliciesRecipeUpdateStepOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepOutput) ToGuestPoliciesRecipeUpdateStepOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepOutput {
	return o
}

// Extracts an archive into the specified directory.
// Structure is documented below.
func (o GuestPoliciesRecipeUpdateStepOutput) ArchiveExtraction() GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStep) *GuestPoliciesRecipeUpdateStepArchiveExtraction {
		return v.ArchiveExtraction
	}).(GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput)
}

// Installs a deb file via dpkg.
// Structure is documented below.
func (o GuestPoliciesRecipeUpdateStepOutput) DpkgInstallation() GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStep) *GuestPoliciesRecipeUpdateStepDpkgInstallation {
		return v.DpkgInstallation
	}).(GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput)
}

// Copies a file onto the instance.
// Structure is documented below.
func (o GuestPoliciesRecipeUpdateStepOutput) FileCopy() GuestPoliciesRecipeUpdateStepFileCopyPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStep) *GuestPoliciesRecipeUpdateStepFileCopy { return v.FileCopy }).(GuestPoliciesRecipeUpdateStepFileCopyPtrOutput)
}

// Executes an artifact or local file.
// Structure is documented below.
func (o GuestPoliciesRecipeUpdateStepOutput) FileExec() GuestPoliciesRecipeUpdateStepFileExecPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStep) *GuestPoliciesRecipeUpdateStepFileExec { return v.FileExec }).(GuestPoliciesRecipeUpdateStepFileExecPtrOutput)
}

// Installs an MSI file.
// Structure is documented below.
func (o GuestPoliciesRecipeUpdateStepOutput) MsiInstallation() GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStep) *GuestPoliciesRecipeUpdateStepMsiInstallation {
		return v.MsiInstallation
	}).(GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput)
}

// Installs an rpm file via the rpm utility.
// Structure is documented below.
func (o GuestPoliciesRecipeUpdateStepOutput) RpmInstallation() GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStep) *GuestPoliciesRecipeUpdateStepRpmInstallation {
		return v.RpmInstallation
	}).(GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput)
}

// Runs commands in a shell.
// Structure is documented below.
func (o GuestPoliciesRecipeUpdateStepOutput) ScriptRun() GuestPoliciesRecipeUpdateStepScriptRunPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStep) *GuestPoliciesRecipeUpdateStepScriptRun { return v.ScriptRun }).(GuestPoliciesRecipeUpdateStepScriptRunPtrOutput)
}

type GuestPoliciesRecipeUpdateStepArrayOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestPoliciesRecipeUpdateStep)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepArrayOutput) ToGuestPoliciesRecipeUpdateStepArrayOutput() GuestPoliciesRecipeUpdateStepArrayOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepArrayOutput) ToGuestPoliciesRecipeUpdateStepArrayOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepArrayOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepArrayOutput) Index(i pulumi.IntInput) GuestPoliciesRecipeUpdateStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuestPoliciesRecipeUpdateStep {
		return vs[0].([]GuestPoliciesRecipeUpdateStep)[vs[1].(int)]
	}).(GuestPoliciesRecipeUpdateStepOutput)
}

type GuestPoliciesRecipeUpdateStepArchiveExtraction struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
	// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
	Destination *string `pulumi:"destination"`
	// The type of the archive to extract.
	// Possible values are `TAR`, `TAR_GZIP`, `TAR_BZIP`, `TAR_LZMA`, `TAR_XZ`, and `ZIP`.
	Type string `pulumi:"type"`
}

// GuestPoliciesRecipeUpdateStepArchiveExtractionInput is an input type that accepts GuestPoliciesRecipeUpdateStepArchiveExtractionArgs and GuestPoliciesRecipeUpdateStepArchiveExtractionOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepArchiveExtractionInput` via:
//
//	GuestPoliciesRecipeUpdateStepArchiveExtractionArgs{...}
type GuestPoliciesRecipeUpdateStepArchiveExtractionInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepArchiveExtractionOutput() GuestPoliciesRecipeUpdateStepArchiveExtractionOutput
	ToGuestPoliciesRecipeUpdateStepArchiveExtractionOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepArchiveExtractionOutput
}

type GuestPoliciesRecipeUpdateStepArchiveExtractionArgs struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	// The type of the archive to extract.
	// Possible values are `TAR`, `TAR_GZIP`, `TAR_BZIP`, `TAR_LZMA`, `TAR_XZ`, and `ZIP`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GuestPoliciesRecipeUpdateStepArchiveExtractionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepArchiveExtraction)(nil)).Elem()
}

func (i GuestPoliciesRecipeUpdateStepArchiveExtractionArgs) ToGuestPoliciesRecipeUpdateStepArchiveExtractionOutput() GuestPoliciesRecipeUpdateStepArchiveExtractionOutput {
	return i.ToGuestPoliciesRecipeUpdateStepArchiveExtractionOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepArchiveExtractionArgs) ToGuestPoliciesRecipeUpdateStepArchiveExtractionOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepArchiveExtractionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepArchiveExtractionOutput)
}

func (i GuestPoliciesRecipeUpdateStepArchiveExtractionArgs) ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput() GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepArchiveExtractionArgs) ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepArchiveExtractionOutput).ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeUpdateStepArchiveExtractionPtrInput is an input type that accepts GuestPoliciesRecipeUpdateStepArchiveExtractionArgs, GuestPoliciesRecipeUpdateStepArchiveExtractionPtr and GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepArchiveExtractionPtrInput` via:
//
//	        GuestPoliciesRecipeUpdateStepArchiveExtractionArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeUpdateStepArchiveExtractionPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput() GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput
	ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput
}

type guestPoliciesRecipeUpdateStepArchiveExtractionPtrType GuestPoliciesRecipeUpdateStepArchiveExtractionArgs

func GuestPoliciesRecipeUpdateStepArchiveExtractionPtr(v *GuestPoliciesRecipeUpdateStepArchiveExtractionArgs) GuestPoliciesRecipeUpdateStepArchiveExtractionPtrInput {
	return (*guestPoliciesRecipeUpdateStepArchiveExtractionPtrType)(v)
}

func (*guestPoliciesRecipeUpdateStepArchiveExtractionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepArchiveExtraction)(nil)).Elem()
}

func (i *guestPoliciesRecipeUpdateStepArchiveExtractionPtrType) ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput() GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeUpdateStepArchiveExtractionPtrType) ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput)
}

type GuestPoliciesRecipeUpdateStepArchiveExtractionOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepArchiveExtractionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepArchiveExtraction)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepArchiveExtractionOutput) ToGuestPoliciesRecipeUpdateStepArchiveExtractionOutput() GuestPoliciesRecipeUpdateStepArchiveExtractionOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepArchiveExtractionOutput) ToGuestPoliciesRecipeUpdateStepArchiveExtractionOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepArchiveExtractionOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepArchiveExtractionOutput) ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput() GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput {
	return o.ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeUpdateStepArchiveExtractionOutput) ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeUpdateStepArchiveExtraction) *GuestPoliciesRecipeUpdateStepArchiveExtraction {
		return &v
	}).(GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepArchiveExtractionOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepArchiveExtraction) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
func (o GuestPoliciesRecipeUpdateStepArchiveExtractionOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepArchiveExtraction) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// The type of the archive to extract.
// Possible values are `TAR`, `TAR_GZIP`, `TAR_BZIP`, `TAR_LZMA`, `TAR_XZ`, and `ZIP`.
func (o GuestPoliciesRecipeUpdateStepArchiveExtractionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepArchiveExtraction) string { return v.Type }).(pulumi.StringOutput)
}

type GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepArchiveExtraction)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput) ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput() GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput) ToGuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput) Elem() GuestPoliciesRecipeUpdateStepArchiveExtractionOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepArchiveExtraction) GuestPoliciesRecipeUpdateStepArchiveExtraction {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeUpdateStepArchiveExtraction
		return ret
	}).(GuestPoliciesRecipeUpdateStepArchiveExtractionOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepArchiveExtraction) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
func (o GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepArchiveExtraction) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

// The type of the archive to extract.
// Possible values are `TAR`, `TAR_GZIP`, `TAR_BZIP`, `TAR_LZMA`, `TAR_XZ`, and `ZIP`.
func (o GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepArchiveExtraction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeUpdateStepDpkgInstallation struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
}

// GuestPoliciesRecipeUpdateStepDpkgInstallationInput is an input type that accepts GuestPoliciesRecipeUpdateStepDpkgInstallationArgs and GuestPoliciesRecipeUpdateStepDpkgInstallationOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepDpkgInstallationInput` via:
//
//	GuestPoliciesRecipeUpdateStepDpkgInstallationArgs{...}
type GuestPoliciesRecipeUpdateStepDpkgInstallationInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepDpkgInstallationOutput() GuestPoliciesRecipeUpdateStepDpkgInstallationOutput
	ToGuestPoliciesRecipeUpdateStepDpkgInstallationOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepDpkgInstallationOutput
}

type GuestPoliciesRecipeUpdateStepDpkgInstallationArgs struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
}

func (GuestPoliciesRecipeUpdateStepDpkgInstallationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepDpkgInstallation)(nil)).Elem()
}

func (i GuestPoliciesRecipeUpdateStepDpkgInstallationArgs) ToGuestPoliciesRecipeUpdateStepDpkgInstallationOutput() GuestPoliciesRecipeUpdateStepDpkgInstallationOutput {
	return i.ToGuestPoliciesRecipeUpdateStepDpkgInstallationOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepDpkgInstallationArgs) ToGuestPoliciesRecipeUpdateStepDpkgInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepDpkgInstallationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepDpkgInstallationOutput)
}

func (i GuestPoliciesRecipeUpdateStepDpkgInstallationArgs) ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput() GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepDpkgInstallationArgs) ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepDpkgInstallationOutput).ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeUpdateStepDpkgInstallationPtrInput is an input type that accepts GuestPoliciesRecipeUpdateStepDpkgInstallationArgs, GuestPoliciesRecipeUpdateStepDpkgInstallationPtr and GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepDpkgInstallationPtrInput` via:
//
//	        GuestPoliciesRecipeUpdateStepDpkgInstallationArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeUpdateStepDpkgInstallationPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput() GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput
	ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput
}

type guestPoliciesRecipeUpdateStepDpkgInstallationPtrType GuestPoliciesRecipeUpdateStepDpkgInstallationArgs

func GuestPoliciesRecipeUpdateStepDpkgInstallationPtr(v *GuestPoliciesRecipeUpdateStepDpkgInstallationArgs) GuestPoliciesRecipeUpdateStepDpkgInstallationPtrInput {
	return (*guestPoliciesRecipeUpdateStepDpkgInstallationPtrType)(v)
}

func (*guestPoliciesRecipeUpdateStepDpkgInstallationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepDpkgInstallation)(nil)).Elem()
}

func (i *guestPoliciesRecipeUpdateStepDpkgInstallationPtrType) ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput() GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeUpdateStepDpkgInstallationPtrType) ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput)
}

type GuestPoliciesRecipeUpdateStepDpkgInstallationOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepDpkgInstallationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepDpkgInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepDpkgInstallationOutput) ToGuestPoliciesRecipeUpdateStepDpkgInstallationOutput() GuestPoliciesRecipeUpdateStepDpkgInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepDpkgInstallationOutput) ToGuestPoliciesRecipeUpdateStepDpkgInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepDpkgInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepDpkgInstallationOutput) ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput() GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput {
	return o.ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeUpdateStepDpkgInstallationOutput) ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeUpdateStepDpkgInstallation) *GuestPoliciesRecipeUpdateStepDpkgInstallation {
		return &v
	}).(GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepDpkgInstallationOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepDpkgInstallation) string { return v.ArtifactId }).(pulumi.StringOutput)
}

type GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepDpkgInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput) ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput() GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput) ToGuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput) Elem() GuestPoliciesRecipeUpdateStepDpkgInstallationOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepDpkgInstallation) GuestPoliciesRecipeUpdateStepDpkgInstallation {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeUpdateStepDpkgInstallation
		return ret
	}).(GuestPoliciesRecipeUpdateStepDpkgInstallationOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepDpkgInstallation) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeUpdateStepFileCopy struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
	// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
	Destination string `pulumi:"destination"`
	// Whether to allow this step to overwrite existing files.If this is false and the file already exists the file
	// is not overwritten and the step is considered a success. Defaults to false.
	Overwrite *bool `pulumi:"overwrite"`
	// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users
	// for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit
	// number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one
	// bit corresponds to the execute permission. Default behavior is 755.
	// Below are some examples of permissions and their associated values:
	// read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
	Permissions *string `pulumi:"permissions"`
}

// GuestPoliciesRecipeUpdateStepFileCopyInput is an input type that accepts GuestPoliciesRecipeUpdateStepFileCopyArgs and GuestPoliciesRecipeUpdateStepFileCopyOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepFileCopyInput` via:
//
//	GuestPoliciesRecipeUpdateStepFileCopyArgs{...}
type GuestPoliciesRecipeUpdateStepFileCopyInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepFileCopyOutput() GuestPoliciesRecipeUpdateStepFileCopyOutput
	ToGuestPoliciesRecipeUpdateStepFileCopyOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepFileCopyOutput
}

type GuestPoliciesRecipeUpdateStepFileCopyArgs struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
	Destination pulumi.StringInput `pulumi:"destination"`
	// Whether to allow this step to overwrite existing files.If this is false and the file already exists the file
	// is not overwritten and the step is considered a success. Defaults to false.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users
	// for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit
	// number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one
	// bit corresponds to the execute permission. Default behavior is 755.
	// Below are some examples of permissions and their associated values:
	// read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
}

func (GuestPoliciesRecipeUpdateStepFileCopyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepFileCopy)(nil)).Elem()
}

func (i GuestPoliciesRecipeUpdateStepFileCopyArgs) ToGuestPoliciesRecipeUpdateStepFileCopyOutput() GuestPoliciesRecipeUpdateStepFileCopyOutput {
	return i.ToGuestPoliciesRecipeUpdateStepFileCopyOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepFileCopyArgs) ToGuestPoliciesRecipeUpdateStepFileCopyOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileCopyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepFileCopyOutput)
}

func (i GuestPoliciesRecipeUpdateStepFileCopyArgs) ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutput() GuestPoliciesRecipeUpdateStepFileCopyPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepFileCopyArgs) ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileCopyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepFileCopyOutput).ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeUpdateStepFileCopyPtrInput is an input type that accepts GuestPoliciesRecipeUpdateStepFileCopyArgs, GuestPoliciesRecipeUpdateStepFileCopyPtr and GuestPoliciesRecipeUpdateStepFileCopyPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepFileCopyPtrInput` via:
//
//	        GuestPoliciesRecipeUpdateStepFileCopyArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeUpdateStepFileCopyPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutput() GuestPoliciesRecipeUpdateStepFileCopyPtrOutput
	ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepFileCopyPtrOutput
}

type guestPoliciesRecipeUpdateStepFileCopyPtrType GuestPoliciesRecipeUpdateStepFileCopyArgs

func GuestPoliciesRecipeUpdateStepFileCopyPtr(v *GuestPoliciesRecipeUpdateStepFileCopyArgs) GuestPoliciesRecipeUpdateStepFileCopyPtrInput {
	return (*guestPoliciesRecipeUpdateStepFileCopyPtrType)(v)
}

func (*guestPoliciesRecipeUpdateStepFileCopyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepFileCopy)(nil)).Elem()
}

func (i *guestPoliciesRecipeUpdateStepFileCopyPtrType) ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutput() GuestPoliciesRecipeUpdateStepFileCopyPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeUpdateStepFileCopyPtrType) ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileCopyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepFileCopyPtrOutput)
}

type GuestPoliciesRecipeUpdateStepFileCopyOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepFileCopyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepFileCopy)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepFileCopyOutput) ToGuestPoliciesRecipeUpdateStepFileCopyOutput() GuestPoliciesRecipeUpdateStepFileCopyOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepFileCopyOutput) ToGuestPoliciesRecipeUpdateStepFileCopyOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileCopyOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepFileCopyOutput) ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutput() GuestPoliciesRecipeUpdateStepFileCopyPtrOutput {
	return o.ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeUpdateStepFileCopyOutput) ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileCopyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeUpdateStepFileCopy) *GuestPoliciesRecipeUpdateStepFileCopy {
		return &v
	}).(GuestPoliciesRecipeUpdateStepFileCopyPtrOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepFileCopyOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepFileCopy) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
func (o GuestPoliciesRecipeUpdateStepFileCopyOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepFileCopy) string { return v.Destination }).(pulumi.StringOutput)
}

// Whether to allow this step to overwrite existing files.If this is false and the file already exists the file
// is not overwritten and the step is considered a success. Defaults to false.
func (o GuestPoliciesRecipeUpdateStepFileCopyOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepFileCopy) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users
// for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit
// number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one
// bit corresponds to the execute permission. Default behavior is 755.
// Below are some examples of permissions and their associated values:
// read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
func (o GuestPoliciesRecipeUpdateStepFileCopyOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepFileCopy) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeUpdateStepFileCopyPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepFileCopyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepFileCopy)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepFileCopyPtrOutput) ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutput() GuestPoliciesRecipeUpdateStepFileCopyPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepFileCopyPtrOutput) ToGuestPoliciesRecipeUpdateStepFileCopyPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileCopyPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepFileCopyPtrOutput) Elem() GuestPoliciesRecipeUpdateStepFileCopyOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileCopy) GuestPoliciesRecipeUpdateStepFileCopy {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeUpdateStepFileCopy
		return ret
	}).(GuestPoliciesRecipeUpdateStepFileCopyOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepFileCopyPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileCopy) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

// Directory to extract archive to. Defaults to / on Linux or C:\ on Windows.
func (o GuestPoliciesRecipeUpdateStepFileCopyPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileCopy) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

// Whether to allow this step to overwrite existing files.If this is false and the file already exists the file
// is not overwritten and the step is considered a success. Defaults to false.
func (o GuestPoliciesRecipeUpdateStepFileCopyPtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileCopy) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users
// for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit
// number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one
// bit corresponds to the execute permission. Default behavior is 755.
// Below are some examples of permissions and their associated values:
// read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
func (o GuestPoliciesRecipeUpdateStepFileCopyPtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileCopy) *string {
		if v == nil {
			return nil
		}
		return v.Permissions
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeUpdateStepFileExec struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes []int `pulumi:"allowedExitCodes"`
	// Arguments to be passed to the provided executable.
	Args []string `pulumi:"args"`
	// The id of the relevant artifact in the recipe.
	ArtifactId *string `pulumi:"artifactId"`
	// The absolute path of the file on the local filesystem.
	LocalPath *string `pulumi:"localPath"`
}

// GuestPoliciesRecipeUpdateStepFileExecInput is an input type that accepts GuestPoliciesRecipeUpdateStepFileExecArgs and GuestPoliciesRecipeUpdateStepFileExecOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepFileExecInput` via:
//
//	GuestPoliciesRecipeUpdateStepFileExecArgs{...}
type GuestPoliciesRecipeUpdateStepFileExecInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepFileExecOutput() GuestPoliciesRecipeUpdateStepFileExecOutput
	ToGuestPoliciesRecipeUpdateStepFileExecOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepFileExecOutput
}

type GuestPoliciesRecipeUpdateStepFileExecArgs struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes pulumi.IntArrayInput `pulumi:"allowedExitCodes"`
	// Arguments to be passed to the provided executable.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringPtrInput `pulumi:"artifactId"`
	// The absolute path of the file on the local filesystem.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (GuestPoliciesRecipeUpdateStepFileExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepFileExec)(nil)).Elem()
}

func (i GuestPoliciesRecipeUpdateStepFileExecArgs) ToGuestPoliciesRecipeUpdateStepFileExecOutput() GuestPoliciesRecipeUpdateStepFileExecOutput {
	return i.ToGuestPoliciesRecipeUpdateStepFileExecOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepFileExecArgs) ToGuestPoliciesRecipeUpdateStepFileExecOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepFileExecOutput)
}

func (i GuestPoliciesRecipeUpdateStepFileExecArgs) ToGuestPoliciesRecipeUpdateStepFileExecPtrOutput() GuestPoliciesRecipeUpdateStepFileExecPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepFileExecPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepFileExecArgs) ToGuestPoliciesRecipeUpdateStepFileExecPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepFileExecOutput).ToGuestPoliciesRecipeUpdateStepFileExecPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeUpdateStepFileExecPtrInput is an input type that accepts GuestPoliciesRecipeUpdateStepFileExecArgs, GuestPoliciesRecipeUpdateStepFileExecPtr and GuestPoliciesRecipeUpdateStepFileExecPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepFileExecPtrInput` via:
//
//	        GuestPoliciesRecipeUpdateStepFileExecArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeUpdateStepFileExecPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepFileExecPtrOutput() GuestPoliciesRecipeUpdateStepFileExecPtrOutput
	ToGuestPoliciesRecipeUpdateStepFileExecPtrOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepFileExecPtrOutput
}

type guestPoliciesRecipeUpdateStepFileExecPtrType GuestPoliciesRecipeUpdateStepFileExecArgs

func GuestPoliciesRecipeUpdateStepFileExecPtr(v *GuestPoliciesRecipeUpdateStepFileExecArgs) GuestPoliciesRecipeUpdateStepFileExecPtrInput {
	return (*guestPoliciesRecipeUpdateStepFileExecPtrType)(v)
}

func (*guestPoliciesRecipeUpdateStepFileExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepFileExec)(nil)).Elem()
}

func (i *guestPoliciesRecipeUpdateStepFileExecPtrType) ToGuestPoliciesRecipeUpdateStepFileExecPtrOutput() GuestPoliciesRecipeUpdateStepFileExecPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepFileExecPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeUpdateStepFileExecPtrType) ToGuestPoliciesRecipeUpdateStepFileExecPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepFileExecPtrOutput)
}

type GuestPoliciesRecipeUpdateStepFileExecOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepFileExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepFileExec)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepFileExecOutput) ToGuestPoliciesRecipeUpdateStepFileExecOutput() GuestPoliciesRecipeUpdateStepFileExecOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepFileExecOutput) ToGuestPoliciesRecipeUpdateStepFileExecOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileExecOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepFileExecOutput) ToGuestPoliciesRecipeUpdateStepFileExecPtrOutput() GuestPoliciesRecipeUpdateStepFileExecPtrOutput {
	return o.ToGuestPoliciesRecipeUpdateStepFileExecPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeUpdateStepFileExecOutput) ToGuestPoliciesRecipeUpdateStepFileExecPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeUpdateStepFileExec) *GuestPoliciesRecipeUpdateStepFileExec {
		return &v
	}).(GuestPoliciesRecipeUpdateStepFileExecPtrOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeUpdateStepFileExecOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepFileExec) []int { return v.AllowedExitCodes }).(pulumi.IntArrayOutput)
}

// Arguments to be passed to the provided executable.
func (o GuestPoliciesRecipeUpdateStepFileExecOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepFileExec) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepFileExecOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepFileExec) *string { return v.ArtifactId }).(pulumi.StringPtrOutput)
}

// The absolute path of the file on the local filesystem.
func (o GuestPoliciesRecipeUpdateStepFileExecOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepFileExec) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeUpdateStepFileExecPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepFileExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepFileExec)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepFileExecPtrOutput) ToGuestPoliciesRecipeUpdateStepFileExecPtrOutput() GuestPoliciesRecipeUpdateStepFileExecPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepFileExecPtrOutput) ToGuestPoliciesRecipeUpdateStepFileExecPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepFileExecPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepFileExecPtrOutput) Elem() GuestPoliciesRecipeUpdateStepFileExecOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileExec) GuestPoliciesRecipeUpdateStepFileExec {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeUpdateStepFileExec
		return ret
	}).(GuestPoliciesRecipeUpdateStepFileExecOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeUpdateStepFileExecPtrOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileExec) []int {
		if v == nil {
			return nil
		}
		return v.AllowedExitCodes
	}).(pulumi.IntArrayOutput)
}

// Arguments to be passed to the provided executable.
func (o GuestPoliciesRecipeUpdateStepFileExecPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileExec) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepFileExecPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileExec) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

// The absolute path of the file on the local filesystem.
func (o GuestPoliciesRecipeUpdateStepFileExecPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepFileExec) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeUpdateStepMsiInstallation struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes []int `pulumi:"allowedExitCodes"`
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
	// The flags to use when installing the MSI. Defaults to the install flag.
	Flags []string `pulumi:"flags"`
}

// GuestPoliciesRecipeUpdateStepMsiInstallationInput is an input type that accepts GuestPoliciesRecipeUpdateStepMsiInstallationArgs and GuestPoliciesRecipeUpdateStepMsiInstallationOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepMsiInstallationInput` via:
//
//	GuestPoliciesRecipeUpdateStepMsiInstallationArgs{...}
type GuestPoliciesRecipeUpdateStepMsiInstallationInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepMsiInstallationOutput() GuestPoliciesRecipeUpdateStepMsiInstallationOutput
	ToGuestPoliciesRecipeUpdateStepMsiInstallationOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepMsiInstallationOutput
}

type GuestPoliciesRecipeUpdateStepMsiInstallationArgs struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes pulumi.IntArrayInput `pulumi:"allowedExitCodes"`
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// The flags to use when installing the MSI. Defaults to the install flag.
	Flags pulumi.StringArrayInput `pulumi:"flags"`
}

func (GuestPoliciesRecipeUpdateStepMsiInstallationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepMsiInstallation)(nil)).Elem()
}

func (i GuestPoliciesRecipeUpdateStepMsiInstallationArgs) ToGuestPoliciesRecipeUpdateStepMsiInstallationOutput() GuestPoliciesRecipeUpdateStepMsiInstallationOutput {
	return i.ToGuestPoliciesRecipeUpdateStepMsiInstallationOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepMsiInstallationArgs) ToGuestPoliciesRecipeUpdateStepMsiInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepMsiInstallationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepMsiInstallationOutput)
}

func (i GuestPoliciesRecipeUpdateStepMsiInstallationArgs) ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput() GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepMsiInstallationArgs) ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepMsiInstallationOutput).ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeUpdateStepMsiInstallationPtrInput is an input type that accepts GuestPoliciesRecipeUpdateStepMsiInstallationArgs, GuestPoliciesRecipeUpdateStepMsiInstallationPtr and GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepMsiInstallationPtrInput` via:
//
//	        GuestPoliciesRecipeUpdateStepMsiInstallationArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeUpdateStepMsiInstallationPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput() GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput
	ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput
}

type guestPoliciesRecipeUpdateStepMsiInstallationPtrType GuestPoliciesRecipeUpdateStepMsiInstallationArgs

func GuestPoliciesRecipeUpdateStepMsiInstallationPtr(v *GuestPoliciesRecipeUpdateStepMsiInstallationArgs) GuestPoliciesRecipeUpdateStepMsiInstallationPtrInput {
	return (*guestPoliciesRecipeUpdateStepMsiInstallationPtrType)(v)
}

func (*guestPoliciesRecipeUpdateStepMsiInstallationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepMsiInstallation)(nil)).Elem()
}

func (i *guestPoliciesRecipeUpdateStepMsiInstallationPtrType) ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput() GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeUpdateStepMsiInstallationPtrType) ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput)
}

type GuestPoliciesRecipeUpdateStepMsiInstallationOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepMsiInstallationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepMsiInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepMsiInstallationOutput) ToGuestPoliciesRecipeUpdateStepMsiInstallationOutput() GuestPoliciesRecipeUpdateStepMsiInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepMsiInstallationOutput) ToGuestPoliciesRecipeUpdateStepMsiInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepMsiInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepMsiInstallationOutput) ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput() GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput {
	return o.ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeUpdateStepMsiInstallationOutput) ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeUpdateStepMsiInstallation) *GuestPoliciesRecipeUpdateStepMsiInstallation {
		return &v
	}).(GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeUpdateStepMsiInstallationOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepMsiInstallation) []int { return v.AllowedExitCodes }).(pulumi.IntArrayOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepMsiInstallationOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepMsiInstallation) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// The flags to use when installing the MSI. Defaults to the install flag.
func (o GuestPoliciesRecipeUpdateStepMsiInstallationOutput) Flags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepMsiInstallation) []string { return v.Flags }).(pulumi.StringArrayOutput)
}

type GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepMsiInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput) ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput() GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput) ToGuestPoliciesRecipeUpdateStepMsiInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput) Elem() GuestPoliciesRecipeUpdateStepMsiInstallationOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepMsiInstallation) GuestPoliciesRecipeUpdateStepMsiInstallation {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeUpdateStepMsiInstallation
		return ret
	}).(GuestPoliciesRecipeUpdateStepMsiInstallationOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepMsiInstallation) []int {
		if v == nil {
			return nil
		}
		return v.AllowedExitCodes
	}).(pulumi.IntArrayOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepMsiInstallation) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

// The flags to use when installing the MSI. Defaults to the install flag.
func (o GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput) Flags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepMsiInstallation) []string {
		if v == nil {
			return nil
		}
		return v.Flags
	}).(pulumi.StringArrayOutput)
}

type GuestPoliciesRecipeUpdateStepRpmInstallation struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId string `pulumi:"artifactId"`
}

// GuestPoliciesRecipeUpdateStepRpmInstallationInput is an input type that accepts GuestPoliciesRecipeUpdateStepRpmInstallationArgs and GuestPoliciesRecipeUpdateStepRpmInstallationOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepRpmInstallationInput` via:
//
//	GuestPoliciesRecipeUpdateStepRpmInstallationArgs{...}
type GuestPoliciesRecipeUpdateStepRpmInstallationInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepRpmInstallationOutput() GuestPoliciesRecipeUpdateStepRpmInstallationOutput
	ToGuestPoliciesRecipeUpdateStepRpmInstallationOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepRpmInstallationOutput
}

type GuestPoliciesRecipeUpdateStepRpmInstallationArgs struct {
	// The id of the relevant artifact in the recipe.
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
}

func (GuestPoliciesRecipeUpdateStepRpmInstallationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepRpmInstallation)(nil)).Elem()
}

func (i GuestPoliciesRecipeUpdateStepRpmInstallationArgs) ToGuestPoliciesRecipeUpdateStepRpmInstallationOutput() GuestPoliciesRecipeUpdateStepRpmInstallationOutput {
	return i.ToGuestPoliciesRecipeUpdateStepRpmInstallationOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepRpmInstallationArgs) ToGuestPoliciesRecipeUpdateStepRpmInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepRpmInstallationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepRpmInstallationOutput)
}

func (i GuestPoliciesRecipeUpdateStepRpmInstallationArgs) ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput() GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepRpmInstallationArgs) ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepRpmInstallationOutput).ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeUpdateStepRpmInstallationPtrInput is an input type that accepts GuestPoliciesRecipeUpdateStepRpmInstallationArgs, GuestPoliciesRecipeUpdateStepRpmInstallationPtr and GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepRpmInstallationPtrInput` via:
//
//	        GuestPoliciesRecipeUpdateStepRpmInstallationArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeUpdateStepRpmInstallationPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput() GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput
	ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput
}

type guestPoliciesRecipeUpdateStepRpmInstallationPtrType GuestPoliciesRecipeUpdateStepRpmInstallationArgs

func GuestPoliciesRecipeUpdateStepRpmInstallationPtr(v *GuestPoliciesRecipeUpdateStepRpmInstallationArgs) GuestPoliciesRecipeUpdateStepRpmInstallationPtrInput {
	return (*guestPoliciesRecipeUpdateStepRpmInstallationPtrType)(v)
}

func (*guestPoliciesRecipeUpdateStepRpmInstallationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepRpmInstallation)(nil)).Elem()
}

func (i *guestPoliciesRecipeUpdateStepRpmInstallationPtrType) ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput() GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeUpdateStepRpmInstallationPtrType) ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput)
}

type GuestPoliciesRecipeUpdateStepRpmInstallationOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepRpmInstallationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepRpmInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepRpmInstallationOutput) ToGuestPoliciesRecipeUpdateStepRpmInstallationOutput() GuestPoliciesRecipeUpdateStepRpmInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepRpmInstallationOutput) ToGuestPoliciesRecipeUpdateStepRpmInstallationOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepRpmInstallationOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepRpmInstallationOutput) ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput() GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput {
	return o.ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeUpdateStepRpmInstallationOutput) ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeUpdateStepRpmInstallation) *GuestPoliciesRecipeUpdateStepRpmInstallation {
		return &v
	}).(GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepRpmInstallationOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepRpmInstallation) string { return v.ArtifactId }).(pulumi.StringOutput)
}

type GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepRpmInstallation)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput) ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput() GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput) ToGuestPoliciesRecipeUpdateStepRpmInstallationPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput) Elem() GuestPoliciesRecipeUpdateStepRpmInstallationOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepRpmInstallation) GuestPoliciesRecipeUpdateStepRpmInstallation {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeUpdateStepRpmInstallation
		return ret
	}).(GuestPoliciesRecipeUpdateStepRpmInstallationOutput)
}

// The id of the relevant artifact in the recipe.
func (o GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput) ArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepRpmInstallation) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactId
	}).(pulumi.StringPtrOutput)
}

type GuestPoliciesRecipeUpdateStepScriptRun struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes []int `pulumi:"allowedExitCodes"`
	// The script interpreter to use to run the script. If no interpreter is specified the script is executed directly,
	// which likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter *string `pulumi:"interpreter"`
	// The shell script to be executed.
	Script string `pulumi:"script"`
}

// GuestPoliciesRecipeUpdateStepScriptRunInput is an input type that accepts GuestPoliciesRecipeUpdateStepScriptRunArgs and GuestPoliciesRecipeUpdateStepScriptRunOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepScriptRunInput` via:
//
//	GuestPoliciesRecipeUpdateStepScriptRunArgs{...}
type GuestPoliciesRecipeUpdateStepScriptRunInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepScriptRunOutput() GuestPoliciesRecipeUpdateStepScriptRunOutput
	ToGuestPoliciesRecipeUpdateStepScriptRunOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepScriptRunOutput
}

type GuestPoliciesRecipeUpdateStepScriptRunArgs struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes pulumi.IntArrayInput `pulumi:"allowedExitCodes"`
	// The script interpreter to use to run the script. If no interpreter is specified the script is executed directly,
	// which likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// The shell script to be executed.
	Script pulumi.StringInput `pulumi:"script"`
}

func (GuestPoliciesRecipeUpdateStepScriptRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepScriptRun)(nil)).Elem()
}

func (i GuestPoliciesRecipeUpdateStepScriptRunArgs) ToGuestPoliciesRecipeUpdateStepScriptRunOutput() GuestPoliciesRecipeUpdateStepScriptRunOutput {
	return i.ToGuestPoliciesRecipeUpdateStepScriptRunOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepScriptRunArgs) ToGuestPoliciesRecipeUpdateStepScriptRunOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepScriptRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepScriptRunOutput)
}

func (i GuestPoliciesRecipeUpdateStepScriptRunArgs) ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutput() GuestPoliciesRecipeUpdateStepScriptRunPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutputWithContext(context.Background())
}

func (i GuestPoliciesRecipeUpdateStepScriptRunArgs) ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepScriptRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepScriptRunOutput).ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutputWithContext(ctx)
}

// GuestPoliciesRecipeUpdateStepScriptRunPtrInput is an input type that accepts GuestPoliciesRecipeUpdateStepScriptRunArgs, GuestPoliciesRecipeUpdateStepScriptRunPtr and GuestPoliciesRecipeUpdateStepScriptRunPtrOutput values.
// You can construct a concrete instance of `GuestPoliciesRecipeUpdateStepScriptRunPtrInput` via:
//
//	        GuestPoliciesRecipeUpdateStepScriptRunArgs{...}
//
//	or:
//
//	        nil
type GuestPoliciesRecipeUpdateStepScriptRunPtrInput interface {
	pulumi.Input

	ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutput() GuestPoliciesRecipeUpdateStepScriptRunPtrOutput
	ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutputWithContext(context.Context) GuestPoliciesRecipeUpdateStepScriptRunPtrOutput
}

type guestPoliciesRecipeUpdateStepScriptRunPtrType GuestPoliciesRecipeUpdateStepScriptRunArgs

func GuestPoliciesRecipeUpdateStepScriptRunPtr(v *GuestPoliciesRecipeUpdateStepScriptRunArgs) GuestPoliciesRecipeUpdateStepScriptRunPtrInput {
	return (*guestPoliciesRecipeUpdateStepScriptRunPtrType)(v)
}

func (*guestPoliciesRecipeUpdateStepScriptRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepScriptRun)(nil)).Elem()
}

func (i *guestPoliciesRecipeUpdateStepScriptRunPtrType) ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutput() GuestPoliciesRecipeUpdateStepScriptRunPtrOutput {
	return i.ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutputWithContext(context.Background())
}

func (i *guestPoliciesRecipeUpdateStepScriptRunPtrType) ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepScriptRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestPoliciesRecipeUpdateStepScriptRunPtrOutput)
}

type GuestPoliciesRecipeUpdateStepScriptRunOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepScriptRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestPoliciesRecipeUpdateStepScriptRun)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepScriptRunOutput) ToGuestPoliciesRecipeUpdateStepScriptRunOutput() GuestPoliciesRecipeUpdateStepScriptRunOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepScriptRunOutput) ToGuestPoliciesRecipeUpdateStepScriptRunOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepScriptRunOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepScriptRunOutput) ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutput() GuestPoliciesRecipeUpdateStepScriptRunPtrOutput {
	return o.ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutputWithContext(context.Background())
}

func (o GuestPoliciesRecipeUpdateStepScriptRunOutput) ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepScriptRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestPoliciesRecipeUpdateStepScriptRun) *GuestPoliciesRecipeUpdateStepScriptRun {
		return &v
	}).(GuestPoliciesRecipeUpdateStepScriptRunPtrOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeUpdateStepScriptRunOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepScriptRun) []int { return v.AllowedExitCodes }).(pulumi.IntArrayOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script is executed directly,
// which likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o GuestPoliciesRecipeUpdateStepScriptRunOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepScriptRun) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// The shell script to be executed.
func (o GuestPoliciesRecipeUpdateStepScriptRunOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v GuestPoliciesRecipeUpdateStepScriptRun) string { return v.Script }).(pulumi.StringOutput)
}

type GuestPoliciesRecipeUpdateStepScriptRunPtrOutput struct{ *pulumi.OutputState }

func (GuestPoliciesRecipeUpdateStepScriptRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestPoliciesRecipeUpdateStepScriptRun)(nil)).Elem()
}

func (o GuestPoliciesRecipeUpdateStepScriptRunPtrOutput) ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutput() GuestPoliciesRecipeUpdateStepScriptRunPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepScriptRunPtrOutput) ToGuestPoliciesRecipeUpdateStepScriptRunPtrOutputWithContext(ctx context.Context) GuestPoliciesRecipeUpdateStepScriptRunPtrOutput {
	return o
}

func (o GuestPoliciesRecipeUpdateStepScriptRunPtrOutput) Elem() GuestPoliciesRecipeUpdateStepScriptRunOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepScriptRun) GuestPoliciesRecipeUpdateStepScriptRun {
		if v != nil {
			return *v
		}
		var ret GuestPoliciesRecipeUpdateStepScriptRun
		return ret
	}).(GuestPoliciesRecipeUpdateStepScriptRunOutput)
}

// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
func (o GuestPoliciesRecipeUpdateStepScriptRunPtrOutput) AllowedExitCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepScriptRun) []int {
		if v == nil {
			return nil
		}
		return v.AllowedExitCodes
	}).(pulumi.IntArrayOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script is executed directly,
// which likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o GuestPoliciesRecipeUpdateStepScriptRunPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepScriptRun) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// The shell script to be executed.
func (o GuestPoliciesRecipeUpdateStepScriptRunPtrOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestPoliciesRecipeUpdateStepScriptRun) *string {
		if v == nil {
			return nil
		}
		return &v.Script
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentInstanceFilter struct {
	// Target all VMs in the project. If true, no other criteria is permitted.
	All *bool `pulumi:"all"`
	// List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
	ExclusionLabels []OsPolicyAssignmentInstanceFilterExclusionLabel `pulumi:"exclusionLabels"`
	// List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
	InclusionLabels []OsPolicyAssignmentInstanceFilterInclusionLabel `pulumi:"inclusionLabels"`
	// List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
	Inventories []OsPolicyAssignmentInstanceFilterInventory `pulumi:"inventories"`
}

// OsPolicyAssignmentInstanceFilterInput is an input type that accepts OsPolicyAssignmentInstanceFilterArgs and OsPolicyAssignmentInstanceFilterOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentInstanceFilterInput` via:
//
//	OsPolicyAssignmentInstanceFilterArgs{...}
type OsPolicyAssignmentInstanceFilterInput interface {
	pulumi.Input

	ToOsPolicyAssignmentInstanceFilterOutput() OsPolicyAssignmentInstanceFilterOutput
	ToOsPolicyAssignmentInstanceFilterOutputWithContext(context.Context) OsPolicyAssignmentInstanceFilterOutput
}

type OsPolicyAssignmentInstanceFilterArgs struct {
	// Target all VMs in the project. If true, no other criteria is permitted.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
	ExclusionLabels OsPolicyAssignmentInstanceFilterExclusionLabelArrayInput `pulumi:"exclusionLabels"`
	// List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
	InclusionLabels OsPolicyAssignmentInstanceFilterInclusionLabelArrayInput `pulumi:"inclusionLabels"`
	// List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
	Inventories OsPolicyAssignmentInstanceFilterInventoryArrayInput `pulumi:"inventories"`
}

func (OsPolicyAssignmentInstanceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentInstanceFilter)(nil)).Elem()
}

func (i OsPolicyAssignmentInstanceFilterArgs) ToOsPolicyAssignmentInstanceFilterOutput() OsPolicyAssignmentInstanceFilterOutput {
	return i.ToOsPolicyAssignmentInstanceFilterOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentInstanceFilterArgs) ToOsPolicyAssignmentInstanceFilterOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentInstanceFilterOutput)
}

func (i OsPolicyAssignmentInstanceFilterArgs) ToOsPolicyAssignmentInstanceFilterPtrOutput() OsPolicyAssignmentInstanceFilterPtrOutput {
	return i.ToOsPolicyAssignmentInstanceFilterPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentInstanceFilterArgs) ToOsPolicyAssignmentInstanceFilterPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentInstanceFilterOutput).ToOsPolicyAssignmentInstanceFilterPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentInstanceFilterPtrInput is an input type that accepts OsPolicyAssignmentInstanceFilterArgs, OsPolicyAssignmentInstanceFilterPtr and OsPolicyAssignmentInstanceFilterPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentInstanceFilterPtrInput` via:
//
//	        OsPolicyAssignmentInstanceFilterArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentInstanceFilterPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentInstanceFilterPtrOutput() OsPolicyAssignmentInstanceFilterPtrOutput
	ToOsPolicyAssignmentInstanceFilterPtrOutputWithContext(context.Context) OsPolicyAssignmentInstanceFilterPtrOutput
}

type osPolicyAssignmentInstanceFilterPtrType OsPolicyAssignmentInstanceFilterArgs

func OsPolicyAssignmentInstanceFilterPtr(v *OsPolicyAssignmentInstanceFilterArgs) OsPolicyAssignmentInstanceFilterPtrInput {
	return (*osPolicyAssignmentInstanceFilterPtrType)(v)
}

func (*osPolicyAssignmentInstanceFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentInstanceFilter)(nil)).Elem()
}

func (i *osPolicyAssignmentInstanceFilterPtrType) ToOsPolicyAssignmentInstanceFilterPtrOutput() OsPolicyAssignmentInstanceFilterPtrOutput {
	return i.ToOsPolicyAssignmentInstanceFilterPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentInstanceFilterPtrType) ToOsPolicyAssignmentInstanceFilterPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentInstanceFilterPtrOutput)
}

type OsPolicyAssignmentInstanceFilterOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentInstanceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentInstanceFilter)(nil)).Elem()
}

func (o OsPolicyAssignmentInstanceFilterOutput) ToOsPolicyAssignmentInstanceFilterOutput() OsPolicyAssignmentInstanceFilterOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterOutput) ToOsPolicyAssignmentInstanceFilterOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterOutput) ToOsPolicyAssignmentInstanceFilterPtrOutput() OsPolicyAssignmentInstanceFilterPtrOutput {
	return o.ToOsPolicyAssignmentInstanceFilterPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentInstanceFilterOutput) ToOsPolicyAssignmentInstanceFilterPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentInstanceFilter) *OsPolicyAssignmentInstanceFilter {
		return &v
	}).(OsPolicyAssignmentInstanceFilterPtrOutput)
}

// Target all VMs in the project. If true, no other criteria is permitted.
func (o OsPolicyAssignmentInstanceFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentInstanceFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
func (o OsPolicyAssignmentInstanceFilterOutput) ExclusionLabels() OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentInstanceFilter) []OsPolicyAssignmentInstanceFilterExclusionLabel {
		return v.ExclusionLabels
	}).(OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput)
}

// List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
func (o OsPolicyAssignmentInstanceFilterOutput) InclusionLabels() OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentInstanceFilter) []OsPolicyAssignmentInstanceFilterInclusionLabel {
		return v.InclusionLabels
	}).(OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput)
}

// List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
func (o OsPolicyAssignmentInstanceFilterOutput) Inventories() OsPolicyAssignmentInstanceFilterInventoryArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentInstanceFilter) []OsPolicyAssignmentInstanceFilterInventory {
		return v.Inventories
	}).(OsPolicyAssignmentInstanceFilterInventoryArrayOutput)
}

type OsPolicyAssignmentInstanceFilterPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentInstanceFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentInstanceFilter)(nil)).Elem()
}

func (o OsPolicyAssignmentInstanceFilterPtrOutput) ToOsPolicyAssignmentInstanceFilterPtrOutput() OsPolicyAssignmentInstanceFilterPtrOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterPtrOutput) ToOsPolicyAssignmentInstanceFilterPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterPtrOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterPtrOutput) Elem() OsPolicyAssignmentInstanceFilterOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentInstanceFilter) OsPolicyAssignmentInstanceFilter {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentInstanceFilter
		return ret
	}).(OsPolicyAssignmentInstanceFilterOutput)
}

// Target all VMs in the project. If true, no other criteria is permitted.
func (o OsPolicyAssignmentInstanceFilterPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentInstanceFilter) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
func (o OsPolicyAssignmentInstanceFilterPtrOutput) ExclusionLabels() OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentInstanceFilter) []OsPolicyAssignmentInstanceFilterExclusionLabel {
		if v == nil {
			return nil
		}
		return v.ExclusionLabels
	}).(OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput)
}

// List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
func (o OsPolicyAssignmentInstanceFilterPtrOutput) InclusionLabels() OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentInstanceFilter) []OsPolicyAssignmentInstanceFilterInclusionLabel {
		if v == nil {
			return nil
		}
		return v.InclusionLabels
	}).(OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput)
}

// List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
func (o OsPolicyAssignmentInstanceFilterPtrOutput) Inventories() OsPolicyAssignmentInstanceFilterInventoryArrayOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentInstanceFilter) []OsPolicyAssignmentInstanceFilterInventory {
		if v == nil {
			return nil
		}
		return v.Inventories
	}).(OsPolicyAssignmentInstanceFilterInventoryArrayOutput)
}

type OsPolicyAssignmentInstanceFilterExclusionLabel struct {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	Labels map[string]string `pulumi:"labels"`
}

// OsPolicyAssignmentInstanceFilterExclusionLabelInput is an input type that accepts OsPolicyAssignmentInstanceFilterExclusionLabelArgs and OsPolicyAssignmentInstanceFilterExclusionLabelOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentInstanceFilterExclusionLabelInput` via:
//
//	OsPolicyAssignmentInstanceFilterExclusionLabelArgs{...}
type OsPolicyAssignmentInstanceFilterExclusionLabelInput interface {
	pulumi.Input

	ToOsPolicyAssignmentInstanceFilterExclusionLabelOutput() OsPolicyAssignmentInstanceFilterExclusionLabelOutput
	ToOsPolicyAssignmentInstanceFilterExclusionLabelOutputWithContext(context.Context) OsPolicyAssignmentInstanceFilterExclusionLabelOutput
}

type OsPolicyAssignmentInstanceFilterExclusionLabelArgs struct {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (OsPolicyAssignmentInstanceFilterExclusionLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentInstanceFilterExclusionLabel)(nil)).Elem()
}

func (i OsPolicyAssignmentInstanceFilterExclusionLabelArgs) ToOsPolicyAssignmentInstanceFilterExclusionLabelOutput() OsPolicyAssignmentInstanceFilterExclusionLabelOutput {
	return i.ToOsPolicyAssignmentInstanceFilterExclusionLabelOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentInstanceFilterExclusionLabelArgs) ToOsPolicyAssignmentInstanceFilterExclusionLabelOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterExclusionLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentInstanceFilterExclusionLabelOutput)
}

// OsPolicyAssignmentInstanceFilterExclusionLabelArrayInput is an input type that accepts OsPolicyAssignmentInstanceFilterExclusionLabelArray and OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentInstanceFilterExclusionLabelArrayInput` via:
//
//	OsPolicyAssignmentInstanceFilterExclusionLabelArray{ OsPolicyAssignmentInstanceFilterExclusionLabelArgs{...} }
type OsPolicyAssignmentInstanceFilterExclusionLabelArrayInput interface {
	pulumi.Input

	ToOsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput() OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput
	ToOsPolicyAssignmentInstanceFilterExclusionLabelArrayOutputWithContext(context.Context) OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput
}

type OsPolicyAssignmentInstanceFilterExclusionLabelArray []OsPolicyAssignmentInstanceFilterExclusionLabelInput

func (OsPolicyAssignmentInstanceFilterExclusionLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentInstanceFilterExclusionLabel)(nil)).Elem()
}

func (i OsPolicyAssignmentInstanceFilterExclusionLabelArray) ToOsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput() OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput {
	return i.ToOsPolicyAssignmentInstanceFilterExclusionLabelArrayOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentInstanceFilterExclusionLabelArray) ToOsPolicyAssignmentInstanceFilterExclusionLabelArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput)
}

type OsPolicyAssignmentInstanceFilterExclusionLabelOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentInstanceFilterExclusionLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentInstanceFilterExclusionLabel)(nil)).Elem()
}

func (o OsPolicyAssignmentInstanceFilterExclusionLabelOutput) ToOsPolicyAssignmentInstanceFilterExclusionLabelOutput() OsPolicyAssignmentInstanceFilterExclusionLabelOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterExclusionLabelOutput) ToOsPolicyAssignmentInstanceFilterExclusionLabelOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterExclusionLabelOutput {
	return o
}

// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
func (o OsPolicyAssignmentInstanceFilterExclusionLabelOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v OsPolicyAssignmentInstanceFilterExclusionLabel) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentInstanceFilterExclusionLabel)(nil)).Elem()
}

func (o OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput) ToOsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput() OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput) ToOsPolicyAssignmentInstanceFilterExclusionLabelArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput) Index(i pulumi.IntInput) OsPolicyAssignmentInstanceFilterExclusionLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OsPolicyAssignmentInstanceFilterExclusionLabel {
		return vs[0].([]OsPolicyAssignmentInstanceFilterExclusionLabel)[vs[1].(int)]
	}).(OsPolicyAssignmentInstanceFilterExclusionLabelOutput)
}

type OsPolicyAssignmentInstanceFilterInclusionLabel struct {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	Labels map[string]string `pulumi:"labels"`
}

// OsPolicyAssignmentInstanceFilterInclusionLabelInput is an input type that accepts OsPolicyAssignmentInstanceFilterInclusionLabelArgs and OsPolicyAssignmentInstanceFilterInclusionLabelOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentInstanceFilterInclusionLabelInput` via:
//
//	OsPolicyAssignmentInstanceFilterInclusionLabelArgs{...}
type OsPolicyAssignmentInstanceFilterInclusionLabelInput interface {
	pulumi.Input

	ToOsPolicyAssignmentInstanceFilterInclusionLabelOutput() OsPolicyAssignmentInstanceFilterInclusionLabelOutput
	ToOsPolicyAssignmentInstanceFilterInclusionLabelOutputWithContext(context.Context) OsPolicyAssignmentInstanceFilterInclusionLabelOutput
}

type OsPolicyAssignmentInstanceFilterInclusionLabelArgs struct {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (OsPolicyAssignmentInstanceFilterInclusionLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentInstanceFilterInclusionLabel)(nil)).Elem()
}

func (i OsPolicyAssignmentInstanceFilterInclusionLabelArgs) ToOsPolicyAssignmentInstanceFilterInclusionLabelOutput() OsPolicyAssignmentInstanceFilterInclusionLabelOutput {
	return i.ToOsPolicyAssignmentInstanceFilterInclusionLabelOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentInstanceFilterInclusionLabelArgs) ToOsPolicyAssignmentInstanceFilterInclusionLabelOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterInclusionLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentInstanceFilterInclusionLabelOutput)
}

// OsPolicyAssignmentInstanceFilterInclusionLabelArrayInput is an input type that accepts OsPolicyAssignmentInstanceFilterInclusionLabelArray and OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentInstanceFilterInclusionLabelArrayInput` via:
//
//	OsPolicyAssignmentInstanceFilterInclusionLabelArray{ OsPolicyAssignmentInstanceFilterInclusionLabelArgs{...} }
type OsPolicyAssignmentInstanceFilterInclusionLabelArrayInput interface {
	pulumi.Input

	ToOsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput() OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput
	ToOsPolicyAssignmentInstanceFilterInclusionLabelArrayOutputWithContext(context.Context) OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput
}

type OsPolicyAssignmentInstanceFilterInclusionLabelArray []OsPolicyAssignmentInstanceFilterInclusionLabelInput

func (OsPolicyAssignmentInstanceFilterInclusionLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentInstanceFilterInclusionLabel)(nil)).Elem()
}

func (i OsPolicyAssignmentInstanceFilterInclusionLabelArray) ToOsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput() OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput {
	return i.ToOsPolicyAssignmentInstanceFilterInclusionLabelArrayOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentInstanceFilterInclusionLabelArray) ToOsPolicyAssignmentInstanceFilterInclusionLabelArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput)
}

type OsPolicyAssignmentInstanceFilterInclusionLabelOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentInstanceFilterInclusionLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentInstanceFilterInclusionLabel)(nil)).Elem()
}

func (o OsPolicyAssignmentInstanceFilterInclusionLabelOutput) ToOsPolicyAssignmentInstanceFilterInclusionLabelOutput() OsPolicyAssignmentInstanceFilterInclusionLabelOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterInclusionLabelOutput) ToOsPolicyAssignmentInstanceFilterInclusionLabelOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterInclusionLabelOutput {
	return o
}

// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
func (o OsPolicyAssignmentInstanceFilterInclusionLabelOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v OsPolicyAssignmentInstanceFilterInclusionLabel) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentInstanceFilterInclusionLabel)(nil)).Elem()
}

func (o OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput) ToOsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput() OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput) ToOsPolicyAssignmentInstanceFilterInclusionLabelArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput) Index(i pulumi.IntInput) OsPolicyAssignmentInstanceFilterInclusionLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OsPolicyAssignmentInstanceFilterInclusionLabel {
		return vs[0].([]OsPolicyAssignmentInstanceFilterInclusionLabel)[vs[1].(int)]
	}).(OsPolicyAssignmentInstanceFilterInclusionLabelOutput)
}

type OsPolicyAssignmentInstanceFilterInventory struct {
	// Required. The OS short name
	OsShortName string `pulumi:"osShortName"`
	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.
	OsVersion *string `pulumi:"osVersion"`
}

// OsPolicyAssignmentInstanceFilterInventoryInput is an input type that accepts OsPolicyAssignmentInstanceFilterInventoryArgs and OsPolicyAssignmentInstanceFilterInventoryOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentInstanceFilterInventoryInput` via:
//
//	OsPolicyAssignmentInstanceFilterInventoryArgs{...}
type OsPolicyAssignmentInstanceFilterInventoryInput interface {
	pulumi.Input

	ToOsPolicyAssignmentInstanceFilterInventoryOutput() OsPolicyAssignmentInstanceFilterInventoryOutput
	ToOsPolicyAssignmentInstanceFilterInventoryOutputWithContext(context.Context) OsPolicyAssignmentInstanceFilterInventoryOutput
}

type OsPolicyAssignmentInstanceFilterInventoryArgs struct {
	// Required. The OS short name
	OsShortName pulumi.StringInput `pulumi:"osShortName"`
	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.
	OsVersion pulumi.StringPtrInput `pulumi:"osVersion"`
}

func (OsPolicyAssignmentInstanceFilterInventoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentInstanceFilterInventory)(nil)).Elem()
}

func (i OsPolicyAssignmentInstanceFilterInventoryArgs) ToOsPolicyAssignmentInstanceFilterInventoryOutput() OsPolicyAssignmentInstanceFilterInventoryOutput {
	return i.ToOsPolicyAssignmentInstanceFilterInventoryOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentInstanceFilterInventoryArgs) ToOsPolicyAssignmentInstanceFilterInventoryOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterInventoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentInstanceFilterInventoryOutput)
}

// OsPolicyAssignmentInstanceFilterInventoryArrayInput is an input type that accepts OsPolicyAssignmentInstanceFilterInventoryArray and OsPolicyAssignmentInstanceFilterInventoryArrayOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentInstanceFilterInventoryArrayInput` via:
//
//	OsPolicyAssignmentInstanceFilterInventoryArray{ OsPolicyAssignmentInstanceFilterInventoryArgs{...} }
type OsPolicyAssignmentInstanceFilterInventoryArrayInput interface {
	pulumi.Input

	ToOsPolicyAssignmentInstanceFilterInventoryArrayOutput() OsPolicyAssignmentInstanceFilterInventoryArrayOutput
	ToOsPolicyAssignmentInstanceFilterInventoryArrayOutputWithContext(context.Context) OsPolicyAssignmentInstanceFilterInventoryArrayOutput
}

type OsPolicyAssignmentInstanceFilterInventoryArray []OsPolicyAssignmentInstanceFilterInventoryInput

func (OsPolicyAssignmentInstanceFilterInventoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentInstanceFilterInventory)(nil)).Elem()
}

func (i OsPolicyAssignmentInstanceFilterInventoryArray) ToOsPolicyAssignmentInstanceFilterInventoryArrayOutput() OsPolicyAssignmentInstanceFilterInventoryArrayOutput {
	return i.ToOsPolicyAssignmentInstanceFilterInventoryArrayOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentInstanceFilterInventoryArray) ToOsPolicyAssignmentInstanceFilterInventoryArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterInventoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentInstanceFilterInventoryArrayOutput)
}

type OsPolicyAssignmentInstanceFilterInventoryOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentInstanceFilterInventoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentInstanceFilterInventory)(nil)).Elem()
}

func (o OsPolicyAssignmentInstanceFilterInventoryOutput) ToOsPolicyAssignmentInstanceFilterInventoryOutput() OsPolicyAssignmentInstanceFilterInventoryOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterInventoryOutput) ToOsPolicyAssignmentInstanceFilterInventoryOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterInventoryOutput {
	return o
}

// Required. The OS short name
func (o OsPolicyAssignmentInstanceFilterInventoryOutput) OsShortName() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentInstanceFilterInventory) string { return v.OsShortName }).(pulumi.StringOutput)
}

// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.
func (o OsPolicyAssignmentInstanceFilterInventoryOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentInstanceFilterInventory) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentInstanceFilterInventoryArrayOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentInstanceFilterInventoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentInstanceFilterInventory)(nil)).Elem()
}

func (o OsPolicyAssignmentInstanceFilterInventoryArrayOutput) ToOsPolicyAssignmentInstanceFilterInventoryArrayOutput() OsPolicyAssignmentInstanceFilterInventoryArrayOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterInventoryArrayOutput) ToOsPolicyAssignmentInstanceFilterInventoryArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentInstanceFilterInventoryArrayOutput {
	return o
}

func (o OsPolicyAssignmentInstanceFilterInventoryArrayOutput) Index(i pulumi.IntInput) OsPolicyAssignmentInstanceFilterInventoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OsPolicyAssignmentInstanceFilterInventory {
		return vs[0].([]OsPolicyAssignmentInstanceFilterInventory)[vs[1].(int)]
	}).(OsPolicyAssignmentInstanceFilterInventoryOutput)
}

type OsPolicyAssignmentOsPolicy struct {
	// This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
	AllowNoResourceGroupMatch *bool `pulumi:"allowNoResourceGroupMatch"`
	// OS policy assignment description. Length of the description is limited to 1024 characters.
	Description *string `pulumi:"description"`
	// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	Id string `pulumi:"id"`
	// Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
	Mode string `pulumi:"mode"`
	// Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allowNoResourceGroupMatch`
	ResourceGroups []OsPolicyAssignmentOsPolicyResourceGroup `pulumi:"resourceGroups"`
}

// OsPolicyAssignmentOsPolicyInput is an input type that accepts OsPolicyAssignmentOsPolicyArgs and OsPolicyAssignmentOsPolicyOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyInput` via:
//
//	OsPolicyAssignmentOsPolicyArgs{...}
type OsPolicyAssignmentOsPolicyInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyOutput() OsPolicyAssignmentOsPolicyOutput
	ToOsPolicyAssignmentOsPolicyOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyOutput
}

type OsPolicyAssignmentOsPolicyArgs struct {
	// This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
	AllowNoResourceGroupMatch pulumi.BoolPtrInput `pulumi:"allowNoResourceGroupMatch"`
	// OS policy assignment description. Length of the description is limited to 1024 characters.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	Id pulumi.StringInput `pulumi:"id"`
	// Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
	Mode pulumi.StringInput `pulumi:"mode"`
	// Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allowNoResourceGroupMatch`
	ResourceGroups OsPolicyAssignmentOsPolicyResourceGroupArrayInput `pulumi:"resourceGroups"`
}

func (OsPolicyAssignmentOsPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicy)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyArgs) ToOsPolicyAssignmentOsPolicyOutput() OsPolicyAssignmentOsPolicyOutput {
	return i.ToOsPolicyAssignmentOsPolicyOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyArgs) ToOsPolicyAssignmentOsPolicyOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyOutput)
}

// OsPolicyAssignmentOsPolicyArrayInput is an input type that accepts OsPolicyAssignmentOsPolicyArray and OsPolicyAssignmentOsPolicyArrayOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyArrayInput` via:
//
//	OsPolicyAssignmentOsPolicyArray{ OsPolicyAssignmentOsPolicyArgs{...} }
type OsPolicyAssignmentOsPolicyArrayInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyArrayOutput() OsPolicyAssignmentOsPolicyArrayOutput
	ToOsPolicyAssignmentOsPolicyArrayOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyArrayOutput
}

type OsPolicyAssignmentOsPolicyArray []OsPolicyAssignmentOsPolicyInput

func (OsPolicyAssignmentOsPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentOsPolicy)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyArray) ToOsPolicyAssignmentOsPolicyArrayOutput() OsPolicyAssignmentOsPolicyArrayOutput {
	return i.ToOsPolicyAssignmentOsPolicyArrayOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyArray) ToOsPolicyAssignmentOsPolicyArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyArrayOutput)
}

type OsPolicyAssignmentOsPolicyOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicy)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyOutput) ToOsPolicyAssignmentOsPolicyOutput() OsPolicyAssignmentOsPolicyOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyOutput) ToOsPolicyAssignmentOsPolicyOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyOutput {
	return o
}

// This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
func (o OsPolicyAssignmentOsPolicyOutput) AllowNoResourceGroupMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicy) *bool { return v.AllowNoResourceGroupMatch }).(pulumi.BoolPtrOutput)
}

// OS policy assignment description. Length of the description is limited to 1024 characters.
func (o OsPolicyAssignmentOsPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
func (o OsPolicyAssignmentOsPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
func (o OsPolicyAssignmentOsPolicyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicy) string { return v.Mode }).(pulumi.StringOutput)
}

// Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allowNoResourceGroupMatch`
func (o OsPolicyAssignmentOsPolicyOutput) ResourceGroups() OsPolicyAssignmentOsPolicyResourceGroupArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicy) []OsPolicyAssignmentOsPolicyResourceGroup { return v.ResourceGroups }).(OsPolicyAssignmentOsPolicyResourceGroupArrayOutput)
}

type OsPolicyAssignmentOsPolicyArrayOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentOsPolicy)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyArrayOutput) ToOsPolicyAssignmentOsPolicyArrayOutput() OsPolicyAssignmentOsPolicyArrayOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyArrayOutput) ToOsPolicyAssignmentOsPolicyArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyArrayOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyArrayOutput) Index(i pulumi.IntInput) OsPolicyAssignmentOsPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OsPolicyAssignmentOsPolicy {
		return vs[0].([]OsPolicyAssignmentOsPolicy)[vs[1].(int)]
	}).(OsPolicyAssignmentOsPolicyOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroup struct {
	// List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either `RHEL` or `CentOS` operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally.
	InventoryFilters []OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter `pulumi:"inventoryFilters"`
	// Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.
	Resources []OsPolicyAssignmentOsPolicyResourceGroupResource `pulumi:"resources"`
}

// OsPolicyAssignmentOsPolicyResourceGroupInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupArgs and OsPolicyAssignmentOsPolicyResourceGroupOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupOutput() OsPolicyAssignmentOsPolicyResourceGroupOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupArgs struct {
	// List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either `RHEL` or `CentOS` operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally.
	InventoryFilters OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayInput `pulumi:"inventoryFilters"`
	// Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.
	Resources OsPolicyAssignmentOsPolicyResourceGroupResourceArrayInput `pulumi:"resources"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroup)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupArgs) ToOsPolicyAssignmentOsPolicyResourceGroupOutput() OsPolicyAssignmentOsPolicyResourceGroupOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupArgs) ToOsPolicyAssignmentOsPolicyResourceGroupOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupOutput)
}

// OsPolicyAssignmentOsPolicyResourceGroupArrayInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupArray and OsPolicyAssignmentOsPolicyResourceGroupArrayOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupArrayInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupArray{ OsPolicyAssignmentOsPolicyResourceGroupArgs{...} }
type OsPolicyAssignmentOsPolicyResourceGroupArrayInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupArrayOutput() OsPolicyAssignmentOsPolicyResourceGroupArrayOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupArrayOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupArrayOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupArray []OsPolicyAssignmentOsPolicyResourceGroupInput

func (OsPolicyAssignmentOsPolicyResourceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentOsPolicyResourceGroup)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupArray) ToOsPolicyAssignmentOsPolicyResourceGroupArrayOutput() OsPolicyAssignmentOsPolicyResourceGroupArrayOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupArrayOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupArray) ToOsPolicyAssignmentOsPolicyResourceGroupArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupArrayOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroup)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupOutput) ToOsPolicyAssignmentOsPolicyResourceGroupOutput() OsPolicyAssignmentOsPolicyResourceGroupOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupOutput) ToOsPolicyAssignmentOsPolicyResourceGroupOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupOutput {
	return o
}

// List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either `RHEL` or `CentOS` operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally.
func (o OsPolicyAssignmentOsPolicyResourceGroupOutput) InventoryFilters() OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroup) []OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter {
		return v.InventoryFilters
	}).(OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput)
}

// Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.
func (o OsPolicyAssignmentOsPolicyResourceGroupOutput) Resources() OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroup) []OsPolicyAssignmentOsPolicyResourceGroupResource {
		return v.Resources
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupArrayOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentOsPolicyResourceGroup)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupArrayOutput) ToOsPolicyAssignmentOsPolicyResourceGroupArrayOutput() OsPolicyAssignmentOsPolicyResourceGroupArrayOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupArrayOutput) ToOsPolicyAssignmentOsPolicyResourceGroupArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupArrayOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupArrayOutput) Index(i pulumi.IntInput) OsPolicyAssignmentOsPolicyResourceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OsPolicyAssignmentOsPolicyResourceGroup {
		return vs[0].([]OsPolicyAssignmentOsPolicyResourceGroup)[vs[1].(int)]
	}).(OsPolicyAssignmentOsPolicyResourceGroupOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter struct {
	// Required. The OS short name
	OsShortName string `pulumi:"osShortName"`
	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.
	OsVersion *string `pulumi:"osVersion"`
}

// OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArgs and OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput() OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArgs struct {
	// Required. The OS short name
	OsShortName pulumi.StringInput `pulumi:"osShortName"`
	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.
	OsVersion pulumi.StringPtrInput `pulumi:"osVersion"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArgs) ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput() OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArgs) ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput)
}

// OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArray and OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArray{ OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArgs{...} }
type OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput() OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArray []OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterInput

func (OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArray) ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput() OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArray) ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput) ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput() OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput) ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput {
	return o
}

// Required. The OS short name
func (o OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput) OsShortName() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter) string { return v.OsShortName }).(pulumi.StringOutput)
}

// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.
func (o OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput) ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput() OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput) ToOsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput) Index(i pulumi.IntInput) OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter {
		return vs[0].([]OsPolicyAssignmentOsPolicyResourceGroupInventoryFilter)[vs[1].(int)]
	}).(OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResource struct {
	// Exec resource
	Exec *OsPolicyAssignmentOsPolicyResourceGroupResourceExec `pulumi:"exec"`
	// A remote or local source.
	File *OsPolicyAssignmentOsPolicyResourceGroupResourceFile `pulumi:"file"`
	// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	Id string `pulumi:"id"`
	// Package resource
	Pkg *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg `pulumi:"pkg"`
	// Package repository resource
	Repository *OsPolicyAssignmentOsPolicyResourceGroupResourceRepository `pulumi:"repository"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceArgs struct {
	// Exec resource
	Exec OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrInput `pulumi:"exec"`
	// A remote or local source.
	File OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrInput `pulumi:"file"`
	// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	Id pulumi.StringInput `pulumi:"id"`
	// Package resource
	Pkg OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrInput `pulumi:"pkg"`
	// Package repository resource
	Repository OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrInput `pulumi:"repository"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResource)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceOutput)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceArrayInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceArray and OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceArrayInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceArray{ OsPolicyAssignmentOsPolicyResourceGroupResourceArgs{...} }
type OsPolicyAssignmentOsPolicyResourceGroupResourceArrayInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceArray []OsPolicyAssignmentOsPolicyResourceGroupResourceInput

func (OsPolicyAssignmentOsPolicyResourceGroupResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentOsPolicyResourceGroupResource)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceArray) ToOsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceArray) ToOsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResource)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceOutput {
	return o
}

// Exec resource
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceOutput) Exec() OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResource) *OsPolicyAssignmentOsPolicyResourceGroupResourceExec {
		return v.Exec
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput)
}

// A remote or local source.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceOutput) File() OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResource) *OsPolicyAssignmentOsPolicyResourceGroupResourceFile {
		return v.File
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput)
}

// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResource) string { return v.Id }).(pulumi.StringOutput)
}

// Package resource
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceOutput) Pkg() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg {
		return v.Pkg
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput)
}

// Package repository resource
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceOutput) Repository() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResource) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepository {
		return v.Repository
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OsPolicyAssignmentOsPolicyResourceGroupResource)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput) Index(i pulumi.IntInput) OsPolicyAssignmentOsPolicyResourceGroupResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OsPolicyAssignmentOsPolicyResourceGroupResource {
		return vs[0].([]OsPolicyAssignmentOsPolicyResourceGroupResource)[vs[1].(int)]
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExec struct {
	// What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.
	Enforce *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce `pulumi:"enforce"`
	// Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.
	Validate OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate `pulumi:"validate"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs struct {
	// What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.
	Enforce OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrInput `pulumi:"enforce"`
	// Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.
	Validate OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateInput `pulumi:"validate"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExec)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtr and OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceExecPtrType OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceExecPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExec)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExec)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceExec) *OsPolicyAssignmentOsPolicyResourceGroupResourceExec {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput)
}

// What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput) Enforce() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExec) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce {
		return v.Enforce
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput)
}

// Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput) Validate() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExec) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate {
		return v.Validate
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExec)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExec) OsPolicyAssignmentOsPolicyResourceGroupResourceExec {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceExec
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput)
}

// What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput) Enforce() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExec) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce {
		if v == nil {
			return nil
		}
		return v.Enforce
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput)
}

// Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput) Validate() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExec) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate {
		if v == nil {
			return nil
		}
		return &v.Validate
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce struct {
	// Optional arguments to pass to the source during execution.
	Args []string `pulumi:"args"`
	// A remote or local source.
	File *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile `pulumi:"file"`
	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	Interpreter string `pulumi:"interpreter"`
	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	OutputFilePath *string `pulumi:"outputFilePath"`
	// An inline script. The size of the script is limited to 1024 characters.
	Script *string `pulumi:"script"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs struct {
	// Optional arguments to pass to the source during execution.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// A remote or local source.
	File OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrInput `pulumi:"file"`
	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	Interpreter pulumi.StringInput `pulumi:"interpreter"`
	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	OutputFilePath pulumi.StringPtrInput `pulumi:"outputFilePath"`
	// An inline script. The size of the script is limited to 1024 characters.
	Script pulumi.StringPtrInput `pulumi:"script"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtr and OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrType OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput)
}

// Optional arguments to pass to the source during execution.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// A remote or local source.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) File() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile {
		return v.File
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput)
}

// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) Interpreter() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) string { return v.Interpreter }).(pulumi.StringOutput)
}

// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) OutputFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) *string { return v.OutputFilePath }).(pulumi.StringPtrOutput)
}

// An inline script. The size of the script is limited to 1024 characters.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) *string { return v.Script }).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput)
}

// Optional arguments to pass to the source during execution.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// A remote or local source.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput) File() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput)
}

// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) *string {
		if v == nil {
			return nil
		}
		return &v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput) OutputFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) *string {
		if v == nil {
			return nil
		}
		return v.OutputFilePath
	}).(pulumi.StringPtrOutput)
}

// An inline script. The size of the script is limited to 1024 characters.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforce) *string {
		if v == nil {
			return nil
		}
		return v.Script
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath *string `pulumi:"localPath"`
	// A generic remote file.
	Remote *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote `pulumi:"remote"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrInput `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
	// A generic remote file.
	Remote OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrInput `pulumi:"remote"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtr and OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrType OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs {
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote {
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs {
		if v == nil {
			return nil
		}
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote {
		if v == nil {
			return nil
		}
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation *int `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtr and OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrType OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs) string { return v.Object }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri string `pulumi:"uri"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum pulumi.StringPtrInput `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtr and OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrType OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote) *string {
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote) string { return v.Uri }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote) OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote) *string {
		if v == nil {
			return nil
		}
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemote) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate struct {
	// Optional arguments to pass to the source during execution.
	Args []string `pulumi:"args"`
	// A remote or local source.
	File *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile `pulumi:"file"`
	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	Interpreter string `pulumi:"interpreter"`
	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	OutputFilePath *string `pulumi:"outputFilePath"`
	// An inline script. The size of the script is limited to 1024 characters.
	Script *string `pulumi:"script"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs struct {
	// Optional arguments to pass to the source during execution.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// A remote or local source.
	File OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrInput `pulumi:"file"`
	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	Interpreter pulumi.StringInput `pulumi:"interpreter"`
	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	OutputFilePath pulumi.StringPtrInput `pulumi:"outputFilePath"`
	// An inline script. The size of the script is limited to 1024 characters.
	Script pulumi.StringPtrInput `pulumi:"script"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtr and OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrType OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput)
}

// Optional arguments to pass to the source during execution.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// A remote or local source.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) File() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile {
		return v.File
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput)
}

// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) Interpreter() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) string { return v.Interpreter }).(pulumi.StringOutput)
}

// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) OutputFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) *string { return v.OutputFilePath }).(pulumi.StringPtrOutput)
}

// An inline script. The size of the script is limited to 1024 characters.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) *string { return v.Script }).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput)
}

// Optional arguments to pass to the source during execution.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// A remote or local source.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput) File() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput)
}

// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) *string {
		if v == nil {
			return nil
		}
		return &v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput) OutputFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) *string {
		if v == nil {
			return nil
		}
		return v.OutputFilePath
	}).(pulumi.StringPtrOutput)
}

// An inline script. The size of the script is limited to 1024 characters.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidate) *string {
		if v == nil {
			return nil
		}
		return v.Script
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath *string `pulumi:"localPath"`
	// A generic remote file.
	Remote *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote `pulumi:"remote"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrInput `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
	// A generic remote file.
	Remote OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrInput `pulumi:"remote"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtr and OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrType OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs {
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote {
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs {
		if v == nil {
			return nil
		}
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote {
		if v == nil {
			return nil
		}
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation *int `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtr and OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrType OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs) string { return v.Object }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri string `pulumi:"uri"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum pulumi.StringPtrInput `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtr and OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrType OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote) *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote) *string {
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote) string { return v.Uri }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote) OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote) *string {
		if v == nil {
			return nil
		}
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemote) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFile struct {
	// A a file with this content. The size of the content is limited to 1024 characters.
	Content *string `pulumi:"content"`
	// A remote or local source.
	File *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile `pulumi:"file"`
	// Required. The absolute path of the file within the VM.
	Path string `pulumi:"path"`
	// -
	// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
	Permissions *string `pulumi:"permissions"`
	// Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
	State string `pulumi:"state"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceFileInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceFileInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceFileInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs struct {
	// A a file with this content. The size of the content is limited to 1024 characters.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// A remote or local source.
	File OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrInput `pulumi:"file"`
	// Required. The absolute path of the file within the VM.
	Path pulumi.StringInput `pulumi:"path"`
	// -
	// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
	// Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
	State pulumi.StringInput `pulumi:"state"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFile)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtr and OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceFilePtrType OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceFilePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceFile)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceFilePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceFilePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFile)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceFile {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput)
}

// A a file with this content. The size of the content is limited to 1024 characters.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFile) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// A remote or local source.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) File() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile {
		return v.File
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput)
}

// Required. The absolute path of the file within the VM.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFile) string { return v.Path }).(pulumi.StringOutput)
}

// -
// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFile) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

// Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFile) string { return v.State }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceFile)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFile) OsPolicyAssignmentOsPolicyResourceGroupResourceFile {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceFile
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput)
}

// A a file with this content. The size of the content is limited to 1024 characters.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFile) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// A remote or local source.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput) File() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput)
}

// Required. The absolute path of the file within the VM.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFile) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// -
// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFile) *string {
		if v == nil {
			return nil
		}
		return v.Permissions
	}).(pulumi.StringPtrOutput)
}

// Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFile) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath *string `pulumi:"localPath"`
	// A generic remote file.
	Remote *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote `pulumi:"remote"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrInput `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
	// A generic remote file.
	Remote OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrInput `pulumi:"remote"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtr and OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrType OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs {
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote {
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs {
		if v == nil {
			return nil
		}
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFile) *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote {
		if v == nil {
			return nil
		}
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation *int `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtr and OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrType OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs) *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs) string { return v.Object }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri string `pulumi:"uri"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum pulumi.StringPtrInput `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtr and OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrType OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote) *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote) *string { return v.Sha256Checksum }).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote) string { return v.Uri }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote) OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote) *string {
		if v == nil {
			return nil
		}
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemote) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkg struct {
	// An Apt Repository.
	Apt *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt `pulumi:"apt"`
	// A deb package file.
	Deb *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb `pulumi:"deb"`
	// Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
	DesiredState string `pulumi:"desiredState"`
	// A package managed by GooGet.
	Googet *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget `pulumi:"googet"`
	// An MSI package.
	Msi *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi `pulumi:"msi"`
	// An rpm package file.
	Rpm *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm `pulumi:"rpm"`
	// A Yum Repository.
	Yum *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum `pulumi:"yum"`
	// A Zypper Repository.
	Zypper *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper `pulumi:"zypper"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs struct {
	// An Apt Repository.
	Apt OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrInput `pulumi:"apt"`
	// A deb package file.
	Deb OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrInput `pulumi:"deb"`
	// Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
	DesiredState pulumi.StringInput `pulumi:"desiredState"`
	// A package managed by GooGet.
	Googet OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrInput `pulumi:"googet"`
	// An MSI package.
	Msi OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrInput `pulumi:"msi"`
	// An rpm package file.
	Rpm OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrInput `pulumi:"rpm"`
	// A Yum Repository.
	Yum OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrInput `pulumi:"yum"`
	// A Zypper Repository.
	Zypper OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrInput `pulumi:"zypper"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkg)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkg)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkg)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput)
}

// An Apt Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) Apt() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt {
		return v.Apt
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput)
}

// A deb package file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) Deb() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb {
		return v.Deb
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput)
}

// Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) DesiredState() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) string { return v.DesiredState }).(pulumi.StringOutput)
}

// A package managed by GooGet.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) Googet() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget {
		return v.Googet
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput)
}

// An MSI package.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) Msi() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi {
		return v.Msi
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput)
}

// An rpm package file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) Rpm() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm {
		return v.Rpm
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput)
}

// A Yum Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) Yum() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum {
		return v.Yum
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput)
}

// A Zypper Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput) Zypper() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper {
		return v.Zypper
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkg)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) OsPolicyAssignmentOsPolicyResourceGroupResourcePkg {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkg
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput)
}

// An Apt Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) Apt() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt {
		if v == nil {
			return nil
		}
		return v.Apt
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput)
}

// A deb package file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) Deb() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb {
		if v == nil {
			return nil
		}
		return v.Deb
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput)
}

// Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) DesiredState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *string {
		if v == nil {
			return nil
		}
		return &v.DesiredState
	}).(pulumi.StringPtrOutput)
}

// A package managed by GooGet.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) Googet() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget {
		if v == nil {
			return nil
		}
		return v.Googet
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput)
}

// An MSI package.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) Msi() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi {
		if v == nil {
			return nil
		}
		return v.Msi
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput)
}

// An rpm package file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) Rpm() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm {
		if v == nil {
			return nil
		}
		return v.Rpm
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput)
}

// A Yum Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) Yum() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum {
		if v == nil {
			return nil
		}
		return v.Yum
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput)
}

// A Zypper Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput) Zypper() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkg) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper {
		if v == nil {
			return nil
		}
		return v.Zypper
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt struct {
	// Required. The name of the repository.
	Name string `pulumi:"name"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs struct {
	// Required. The name of the repository.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt) string { return v.Name }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgApt) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb struct {
	// Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`
	PullDeps *bool `pulumi:"pullDeps"`
	// Required. An rpm package.
	Source OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource `pulumi:"source"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs struct {
	// Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`
	PullDeps pulumi.BoolPtrInput `pulumi:"pullDeps"`
	// Required. An rpm package.
	Source OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceInput `pulumi:"source"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput)
}

// Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput) PullDeps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb) *bool { return v.PullDeps }).(pulumi.BoolPtrOutput)
}

// Required. An rpm package.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput) Source() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource {
		return v.Source
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput)
}

// Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput) PullDeps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb) *bool {
		if v == nil {
			return nil
		}
		return v.PullDeps
	}).(pulumi.BoolPtrOutput)
}

// Required. An rpm package.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput) Source() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDeb) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath *string `pulumi:"localPath"`
	// A generic remote file.
	Remote *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote `pulumi:"remote"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrInput `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
	// A generic remote file.
	Remote OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrInput `pulumi:"remote"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs {
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote {
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs {
		if v == nil {
			return nil
		}
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote {
		if v == nil {
			return nil
		}
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation *int `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs) string { return v.Object }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri string `pulumi:"uri"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum pulumi.StringPtrInput `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote) *string {
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote) string { return v.Uri }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote) *string {
		if v == nil {
			return nil
		}
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemote) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget struct {
	// Required. The name of the repository.
	Name string `pulumi:"name"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs struct {
	// Required. The name of the repository.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget) string { return v.Name }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGooget) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi struct {
	// Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`.
	Properties []string `pulumi:"properties"`
	// Required. An rpm package.
	Source OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource `pulumi:"source"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs struct {
	// Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`.
	Properties pulumi.StringArrayInput `pulumi:"properties"`
	// Required. An rpm package.
	Source OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceInput `pulumi:"source"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput)
}

// Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput) Properties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi) []string { return v.Properties }).(pulumi.StringArrayOutput)
}

// Required. An rpm package.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput) Source() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource {
		return v.Source
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput)
}

// Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput) Properties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi) []string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringArrayOutput)
}

// Required. An rpm package.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput) Source() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsi) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath *string `pulumi:"localPath"`
	// A generic remote file.
	Remote *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote `pulumi:"remote"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrInput `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
	// A generic remote file.
	Remote OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrInput `pulumi:"remote"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs {
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote {
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs {
		if v == nil {
			return nil
		}
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote {
		if v == nil {
			return nil
		}
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation *int `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs) string { return v.Object }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri string `pulumi:"uri"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum pulumi.StringPtrInput `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote) *string {
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote) string { return v.Uri }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote) *string {
		if v == nil {
			return nil
		}
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemote) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm struct {
	// Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`
	PullDeps *bool `pulumi:"pullDeps"`
	// Required. An rpm package.
	Source OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource `pulumi:"source"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs struct {
	// Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`
	PullDeps pulumi.BoolPtrInput `pulumi:"pullDeps"`
	// Required. An rpm package.
	Source OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceInput `pulumi:"source"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput)
}

// Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput) PullDeps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm) *bool { return v.PullDeps }).(pulumi.BoolPtrOutput)
}

// Required. An rpm package.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput) Source() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource {
		return v.Source
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput)
}

// Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput) PullDeps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm) *bool {
		if v == nil {
			return nil
		}
		return v.PullDeps
	}).(pulumi.BoolPtrOutput)
}

// Required. An rpm package.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput) Source() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpm) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath *string `pulumi:"localPath"`
	// A generic remote file.
	Remote *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote `pulumi:"remote"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs struct {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// A Cloud Storage object.
	Gcs OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrInput `pulumi:"gcs"`
	// A local path within the VM to use.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
	// A generic remote file.
	Remote OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrInput `pulumi:"remote"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs {
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote {
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput)
}

// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// A Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput) Gcs() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs {
		if v == nil {
			return nil
		}
		return v.Gcs
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput)
}

// A local path within the VM to use.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// A generic remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput) Remote() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSource) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote {
		if v == nil {
			return nil
		}
		return v.Remote
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation *int `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs struct {
	// Required. Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Required. Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs) string { return v.Object }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput)
}

// Required. Bucket of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Required. Name of the Cloud Storage object.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum *string `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri string `pulumi:"uri"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs struct {
	// SHA256 checksum of the remote file.
	Sha256Checksum pulumi.StringPtrInput `pulumi:"sha256Checksum"`
	// Required. URI for this repository.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote) *string {
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote) string { return v.Uri }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput)
}

// SHA256 checksum of the remote file.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput) Sha256Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote) *string {
		if v == nil {
			return nil
		}
		return v.Sha256Checksum
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemote) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum struct {
	// Required. The name of the repository.
	Name string `pulumi:"name"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs struct {
	// Required. The name of the repository.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum) string { return v.Name }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYum) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper struct {
	// Required. The name of the repository.
	Name string `pulumi:"name"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs struct {
	// Required. The name of the repository.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs, OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtr and OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrType OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper) *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper) string { return v.Name }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper) OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypper) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepository struct {
	// An Apt Repository.
	Apt *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt `pulumi:"apt"`
	// A Goo Repository.
	Goo *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo `pulumi:"goo"`
	// A Yum Repository.
	Yum *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum `pulumi:"yum"`
	// A Zypper Repository.
	Zypper *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper `pulumi:"zypper"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs struct {
	// An Apt Repository.
	Apt OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrInput `pulumi:"apt"`
	// A Goo Repository.
	Goo OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrInput `pulumi:"goo"`
	// A Yum Repository.
	Yum OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrInput `pulumi:"yum"`
	// A Zypper Repository.
	Zypper OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrInput `pulumi:"zypper"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepository)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtr and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrType OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepository)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepository)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepository {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput)
}

// An Apt Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput) Apt() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt {
		return v.Apt
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput)
}

// A Goo Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput) Goo() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo {
		return v.Goo
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput)
}

// A Yum Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput) Yum() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum {
		return v.Yum
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput)
}

// A Zypper Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput) Zypper() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper {
		return v.Zypper
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepository)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) OsPolicyAssignmentOsPolicyResourceGroupResourceRepository {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceRepository
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput)
}

// An Apt Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput) Apt() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt {
		if v == nil {
			return nil
		}
		return v.Apt
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput)
}

// A Goo Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput) Goo() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo {
		if v == nil {
			return nil
		}
		return v.Goo
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput)
}

// A Yum Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput) Yum() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum {
		if v == nil {
			return nil
		}
		return v.Yum
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput)
}

// A Zypper Repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput) Zypper() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepository) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper {
		if v == nil {
			return nil
		}
		return v.Zypper
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt struct {
	// Required. Type of archive files in this repository. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC
	ArchiveType string `pulumi:"archiveType"`
	// Required. List of components for this repository. Must contain at least one item.
	Components []string `pulumi:"components"`
	// Required. Distribution of this repository.
	Distribution string `pulumi:"distribution"`
	// URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
	GpgKey *string `pulumi:"gpgKey"`
	// Required. URI for this repository.
	Uri string `pulumi:"uri"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs struct {
	// Required. Type of archive files in this repository. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC
	ArchiveType pulumi.StringInput `pulumi:"archiveType"`
	// Required. List of components for this repository. Must contain at least one item.
	Components pulumi.StringArrayInput `pulumi:"components"`
	// Required. Distribution of this repository.
	Distribution pulumi.StringInput `pulumi:"distribution"`
	// URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
	GpgKey pulumi.StringPtrInput `pulumi:"gpgKey"`
	// Required. URI for this repository.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtr and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrType OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput)
}

// Required. Type of archive files in this repository. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) ArchiveType() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) string { return v.ArchiveType }).(pulumi.StringOutput)
}

// Required. List of components for this repository. Must contain at least one item.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) []string { return v.Components }).(pulumi.StringArrayOutput)
}

// Required. Distribution of this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) Distribution() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) string { return v.Distribution }).(pulumi.StringOutput)
}

// URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) GpgKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) *string { return v.GpgKey }).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) string { return v.Uri }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput)
}

// Required. Type of archive files in this repository. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput) ArchiveType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) *string {
		if v == nil {
			return nil
		}
		return &v.ArchiveType
	}).(pulumi.StringPtrOutput)
}

// Required. List of components for this repository. Must contain at least one item.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) []string {
		if v == nil {
			return nil
		}
		return v.Components
	}).(pulumi.StringArrayOutput)
}

// Required. Distribution of this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput) Distribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) *string {
		if v == nil {
			return nil
		}
		return &v.Distribution
	}).(pulumi.StringPtrOutput)
}

// URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput) GpgKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) *string {
		if v == nil {
			return nil
		}
		return v.GpgKey
	}).(pulumi.StringPtrOutput)
}

// Required. URI for this repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryApt) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo struct {
	// Required. The name of the repository.
	Name string `pulumi:"name"`
	// Required. The url of the repository.
	Url string `pulumi:"url"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs struct {
	// Required. The name of the repository.
	Name pulumi.StringInput `pulumi:"name"`
	// Required. The url of the repository.
	Url pulumi.StringInput `pulumi:"url"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtr and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrType OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo) string { return v.Name }).(pulumi.StringOutput)
}

// Required. The url of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo) string { return v.Url }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput)
}

// Required. The name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Required. The url of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGoo) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum struct {
	// Required. The location of the repository directory.
	BaseUrl string `pulumi:"baseUrl"`
	// The display name of the repository.
	DisplayName *string `pulumi:"displayName"`
	// URIs of GPG keys.
	GpgKeys []string `pulumi:"gpgKeys"`
	// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	Id string `pulumi:"id"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs struct {
	// Required. The location of the repository directory.
	BaseUrl pulumi.StringInput `pulumi:"baseUrl"`
	// The display name of the repository.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// URIs of GPG keys.
	GpgKeys pulumi.StringArrayInput `pulumi:"gpgKeys"`
	// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	Id pulumi.StringInput `pulumi:"id"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtr and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrType OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput)
}

// Required. The location of the repository directory.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) string { return v.BaseUrl }).(pulumi.StringOutput)
}

// The display name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// URIs of GPG keys.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput) GpgKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) []string { return v.GpgKeys }).(pulumi.StringArrayOutput)
}

// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) string { return v.Id }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput)
}

// Required. The location of the repository directory.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) *string {
		if v == nil {
			return nil
		}
		return &v.BaseUrl
	}).(pulumi.StringPtrOutput)
}

// The display name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// URIs of GPG keys.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput) GpgKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) []string {
		if v == nil {
			return nil
		}
		return v.GpgKeys
	}).(pulumi.StringArrayOutput)
}

// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYum) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper struct {
	// Required. The location of the repository directory.
	BaseUrl string `pulumi:"baseUrl"`
	// The display name of the repository.
	DisplayName *string `pulumi:"displayName"`
	// URIs of GPG keys.
	GpgKeys []string `pulumi:"gpgKeys"`
	// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	Id string `pulumi:"id"`
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperInput` via:
//
//	OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs{...}
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs struct {
	// Required. The location of the repository directory.
	BaseUrl pulumi.StringInput `pulumi:"baseUrl"`
	// The display name of the repository.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// URIs of GPG keys.
	GpgKeys pulumi.StringArrayInput `pulumi:"gpgKeys"`
	// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	Id pulumi.StringInput `pulumi:"id"`
}

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper)(nil)).Elem()
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput)
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput).ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrInput is an input type that accepts OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs, OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtr and OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrInput` via:
//
//	        OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput
	ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutputWithContext(context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput
}

type osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrType OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs

func OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtr(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrInput {
	return (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrType)(v)
}

func (*osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper)(nil)).Elem()
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return i.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrType) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return o.ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper {
		return &v
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput)
}

// Required. The location of the repository directory.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) string { return v.BaseUrl }).(pulumi.StringOutput)
}

// The display name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// URIs of GPG keys.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput) GpgKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) []string { return v.GpgKeys }).(pulumi.StringArrayOutput)
}

// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) string { return v.Id }).(pulumi.StringOutput)
}

type OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper)(nil)).Elem()
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput) ToOsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput {
	return o
}

func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput) Elem() OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper
		return ret
	}).(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput)
}

// Required. The location of the repository directory.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) *string {
		if v == nil {
			return nil
		}
		return &v.BaseUrl
	}).(pulumi.StringPtrOutput)
}

// The display name of the repository.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// URIs of GPG keys.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput) GpgKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) []string {
		if v == nil {
			return nil
		}
		return v.GpgKeys
	}).(pulumi.StringArrayOutput)
}

// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `displayName` if `displayName` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
func (o OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypper) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentRollout struct {
	// Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
	DisruptionBudget OsPolicyAssignmentRolloutDisruptionBudget `pulumi:"disruptionBudget"`
	// Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruptionBudget` at least until this duration of time has passed after configuration changes are applied.
	MinWaitDuration string `pulumi:"minWaitDuration"`
}

// OsPolicyAssignmentRolloutInput is an input type that accepts OsPolicyAssignmentRolloutArgs and OsPolicyAssignmentRolloutOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentRolloutInput` via:
//
//	OsPolicyAssignmentRolloutArgs{...}
type OsPolicyAssignmentRolloutInput interface {
	pulumi.Input

	ToOsPolicyAssignmentRolloutOutput() OsPolicyAssignmentRolloutOutput
	ToOsPolicyAssignmentRolloutOutputWithContext(context.Context) OsPolicyAssignmentRolloutOutput
}

type OsPolicyAssignmentRolloutArgs struct {
	// Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
	DisruptionBudget OsPolicyAssignmentRolloutDisruptionBudgetInput `pulumi:"disruptionBudget"`
	// Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruptionBudget` at least until this duration of time has passed after configuration changes are applied.
	MinWaitDuration pulumi.StringInput `pulumi:"minWaitDuration"`
}

func (OsPolicyAssignmentRolloutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentRollout)(nil)).Elem()
}

func (i OsPolicyAssignmentRolloutArgs) ToOsPolicyAssignmentRolloutOutput() OsPolicyAssignmentRolloutOutput {
	return i.ToOsPolicyAssignmentRolloutOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentRolloutArgs) ToOsPolicyAssignmentRolloutOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentRolloutOutput)
}

func (i OsPolicyAssignmentRolloutArgs) ToOsPolicyAssignmentRolloutPtrOutput() OsPolicyAssignmentRolloutPtrOutput {
	return i.ToOsPolicyAssignmentRolloutPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentRolloutArgs) ToOsPolicyAssignmentRolloutPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentRolloutOutput).ToOsPolicyAssignmentRolloutPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentRolloutPtrInput is an input type that accepts OsPolicyAssignmentRolloutArgs, OsPolicyAssignmentRolloutPtr and OsPolicyAssignmentRolloutPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentRolloutPtrInput` via:
//
//	        OsPolicyAssignmentRolloutArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentRolloutPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentRolloutPtrOutput() OsPolicyAssignmentRolloutPtrOutput
	ToOsPolicyAssignmentRolloutPtrOutputWithContext(context.Context) OsPolicyAssignmentRolloutPtrOutput
}

type osPolicyAssignmentRolloutPtrType OsPolicyAssignmentRolloutArgs

func OsPolicyAssignmentRolloutPtr(v *OsPolicyAssignmentRolloutArgs) OsPolicyAssignmentRolloutPtrInput {
	return (*osPolicyAssignmentRolloutPtrType)(v)
}

func (*osPolicyAssignmentRolloutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentRollout)(nil)).Elem()
}

func (i *osPolicyAssignmentRolloutPtrType) ToOsPolicyAssignmentRolloutPtrOutput() OsPolicyAssignmentRolloutPtrOutput {
	return i.ToOsPolicyAssignmentRolloutPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentRolloutPtrType) ToOsPolicyAssignmentRolloutPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentRolloutPtrOutput)
}

type OsPolicyAssignmentRolloutOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentRolloutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentRollout)(nil)).Elem()
}

func (o OsPolicyAssignmentRolloutOutput) ToOsPolicyAssignmentRolloutOutput() OsPolicyAssignmentRolloutOutput {
	return o
}

func (o OsPolicyAssignmentRolloutOutput) ToOsPolicyAssignmentRolloutOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutOutput {
	return o
}

func (o OsPolicyAssignmentRolloutOutput) ToOsPolicyAssignmentRolloutPtrOutput() OsPolicyAssignmentRolloutPtrOutput {
	return o.ToOsPolicyAssignmentRolloutPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentRolloutOutput) ToOsPolicyAssignmentRolloutPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentRollout) *OsPolicyAssignmentRollout {
		return &v
	}).(OsPolicyAssignmentRolloutPtrOutput)
}

// Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
func (o OsPolicyAssignmentRolloutOutput) DisruptionBudget() OsPolicyAssignmentRolloutDisruptionBudgetOutput {
	return o.ApplyT(func(v OsPolicyAssignmentRollout) OsPolicyAssignmentRolloutDisruptionBudget { return v.DisruptionBudget }).(OsPolicyAssignmentRolloutDisruptionBudgetOutput)
}

// Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruptionBudget` at least until this duration of time has passed after configuration changes are applied.
func (o OsPolicyAssignmentRolloutOutput) MinWaitDuration() pulumi.StringOutput {
	return o.ApplyT(func(v OsPolicyAssignmentRollout) string { return v.MinWaitDuration }).(pulumi.StringOutput)
}

type OsPolicyAssignmentRolloutPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentRolloutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentRollout)(nil)).Elem()
}

func (o OsPolicyAssignmentRolloutPtrOutput) ToOsPolicyAssignmentRolloutPtrOutput() OsPolicyAssignmentRolloutPtrOutput {
	return o
}

func (o OsPolicyAssignmentRolloutPtrOutput) ToOsPolicyAssignmentRolloutPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutPtrOutput {
	return o
}

func (o OsPolicyAssignmentRolloutPtrOutput) Elem() OsPolicyAssignmentRolloutOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentRollout) OsPolicyAssignmentRollout {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentRollout
		return ret
	}).(OsPolicyAssignmentRolloutOutput)
}

// Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
func (o OsPolicyAssignmentRolloutPtrOutput) DisruptionBudget() OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentRollout) *OsPolicyAssignmentRolloutDisruptionBudget {
		if v == nil {
			return nil
		}
		return &v.DisruptionBudget
	}).(OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput)
}

// Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruptionBudget` at least until this duration of time has passed after configuration changes are applied.
func (o OsPolicyAssignmentRolloutPtrOutput) MinWaitDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentRollout) *string {
		if v == nil {
			return nil
		}
		return &v.MinWaitDuration
	}).(pulumi.StringPtrOutput)
}

type OsPolicyAssignmentRolloutDisruptionBudget struct {
	// Specifies a fixed value.
	Fixed *int `pulumi:"fixed"`
	// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
	Percent *int `pulumi:"percent"`
}

// OsPolicyAssignmentRolloutDisruptionBudgetInput is an input type that accepts OsPolicyAssignmentRolloutDisruptionBudgetArgs and OsPolicyAssignmentRolloutDisruptionBudgetOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentRolloutDisruptionBudgetInput` via:
//
//	OsPolicyAssignmentRolloutDisruptionBudgetArgs{...}
type OsPolicyAssignmentRolloutDisruptionBudgetInput interface {
	pulumi.Input

	ToOsPolicyAssignmentRolloutDisruptionBudgetOutput() OsPolicyAssignmentRolloutDisruptionBudgetOutput
	ToOsPolicyAssignmentRolloutDisruptionBudgetOutputWithContext(context.Context) OsPolicyAssignmentRolloutDisruptionBudgetOutput
}

type OsPolicyAssignmentRolloutDisruptionBudgetArgs struct {
	// Specifies a fixed value.
	Fixed pulumi.IntPtrInput `pulumi:"fixed"`
	// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
	Percent pulumi.IntPtrInput `pulumi:"percent"`
}

func (OsPolicyAssignmentRolloutDisruptionBudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentRolloutDisruptionBudget)(nil)).Elem()
}

func (i OsPolicyAssignmentRolloutDisruptionBudgetArgs) ToOsPolicyAssignmentRolloutDisruptionBudgetOutput() OsPolicyAssignmentRolloutDisruptionBudgetOutput {
	return i.ToOsPolicyAssignmentRolloutDisruptionBudgetOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentRolloutDisruptionBudgetArgs) ToOsPolicyAssignmentRolloutDisruptionBudgetOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutDisruptionBudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentRolloutDisruptionBudgetOutput)
}

func (i OsPolicyAssignmentRolloutDisruptionBudgetArgs) ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutput() OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput {
	return i.ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i OsPolicyAssignmentRolloutDisruptionBudgetArgs) ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentRolloutDisruptionBudgetOutput).ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutputWithContext(ctx)
}

// OsPolicyAssignmentRolloutDisruptionBudgetPtrInput is an input type that accepts OsPolicyAssignmentRolloutDisruptionBudgetArgs, OsPolicyAssignmentRolloutDisruptionBudgetPtr and OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput values.
// You can construct a concrete instance of `OsPolicyAssignmentRolloutDisruptionBudgetPtrInput` via:
//
//	        OsPolicyAssignmentRolloutDisruptionBudgetArgs{...}
//
//	or:
//
//	        nil
type OsPolicyAssignmentRolloutDisruptionBudgetPtrInput interface {
	pulumi.Input

	ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutput() OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput
	ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutputWithContext(context.Context) OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput
}

type osPolicyAssignmentRolloutDisruptionBudgetPtrType OsPolicyAssignmentRolloutDisruptionBudgetArgs

func OsPolicyAssignmentRolloutDisruptionBudgetPtr(v *OsPolicyAssignmentRolloutDisruptionBudgetArgs) OsPolicyAssignmentRolloutDisruptionBudgetPtrInput {
	return (*osPolicyAssignmentRolloutDisruptionBudgetPtrType)(v)
}

func (*osPolicyAssignmentRolloutDisruptionBudgetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentRolloutDisruptionBudget)(nil)).Elem()
}

func (i *osPolicyAssignmentRolloutDisruptionBudgetPtrType) ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutput() OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput {
	return i.ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i *osPolicyAssignmentRolloutDisruptionBudgetPtrType) ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput)
}

type OsPolicyAssignmentRolloutDisruptionBudgetOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentRolloutDisruptionBudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsPolicyAssignmentRolloutDisruptionBudget)(nil)).Elem()
}

func (o OsPolicyAssignmentRolloutDisruptionBudgetOutput) ToOsPolicyAssignmentRolloutDisruptionBudgetOutput() OsPolicyAssignmentRolloutDisruptionBudgetOutput {
	return o
}

func (o OsPolicyAssignmentRolloutDisruptionBudgetOutput) ToOsPolicyAssignmentRolloutDisruptionBudgetOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutDisruptionBudgetOutput {
	return o
}

func (o OsPolicyAssignmentRolloutDisruptionBudgetOutput) ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutput() OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput {
	return o.ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (o OsPolicyAssignmentRolloutDisruptionBudgetOutput) ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsPolicyAssignmentRolloutDisruptionBudget) *OsPolicyAssignmentRolloutDisruptionBudget {
		return &v
	}).(OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput)
}

// Specifies a fixed value.
func (o OsPolicyAssignmentRolloutDisruptionBudgetOutput) Fixed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentRolloutDisruptionBudget) *int { return v.Fixed }).(pulumi.IntPtrOutput)
}

// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
func (o OsPolicyAssignmentRolloutDisruptionBudgetOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OsPolicyAssignmentRolloutDisruptionBudget) *int { return v.Percent }).(pulumi.IntPtrOutput)
}

type OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput struct{ *pulumi.OutputState }

func (OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsPolicyAssignmentRolloutDisruptionBudget)(nil)).Elem()
}

func (o OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput) ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutput() OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput {
	return o
}

func (o OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput) ToOsPolicyAssignmentRolloutDisruptionBudgetPtrOutputWithContext(ctx context.Context) OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput {
	return o
}

func (o OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput) Elem() OsPolicyAssignmentRolloutDisruptionBudgetOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentRolloutDisruptionBudget) OsPolicyAssignmentRolloutDisruptionBudget {
		if v != nil {
			return *v
		}
		var ret OsPolicyAssignmentRolloutDisruptionBudget
		return ret
	}).(OsPolicyAssignmentRolloutDisruptionBudgetOutput)
}

// Specifies a fixed value.
func (o OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput) Fixed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentRolloutDisruptionBudget) *int {
		if v == nil {
			return nil
		}
		return v.Fixed
	}).(pulumi.IntPtrOutput)
}

// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
func (o OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OsPolicyAssignmentRolloutDisruptionBudget) *int {
		if v == nil {
			return nil
		}
		return v.Percent
	}).(pulumi.IntPtrOutput)
}

type PatchDeploymentInstanceFilter struct {
	// Target all VM instances in the project. If true, no other criteria is permitted.
	All *bool `pulumi:"all"`
	// Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.
	// Structure is documented below.
	GroupLabels []PatchDeploymentInstanceFilterGroupLabel `pulumi:"groupLabels"`
	// Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group
	// VMs when targeting configs, for example prefix="prod-".
	InstanceNamePrefixes []string `pulumi:"instanceNamePrefixes"`
	// Targets any of the VM instances specified. Instances are specified by their URI in the `form zones/{{zone}}/instances/{{instance_name}}`,
	// `projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`, or
	// `https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`
	Instances []string `pulumi:"instances"`
	// Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.
	Zones []string `pulumi:"zones"`
}

// PatchDeploymentInstanceFilterInput is an input type that accepts PatchDeploymentInstanceFilterArgs and PatchDeploymentInstanceFilterOutput values.
// You can construct a concrete instance of `PatchDeploymentInstanceFilterInput` via:
//
//	PatchDeploymentInstanceFilterArgs{...}
type PatchDeploymentInstanceFilterInput interface {
	pulumi.Input

	ToPatchDeploymentInstanceFilterOutput() PatchDeploymentInstanceFilterOutput
	ToPatchDeploymentInstanceFilterOutputWithContext(context.Context) PatchDeploymentInstanceFilterOutput
}

type PatchDeploymentInstanceFilterArgs struct {
	// Target all VM instances in the project. If true, no other criteria is permitted.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.
	// Structure is documented below.
	GroupLabels PatchDeploymentInstanceFilterGroupLabelArrayInput `pulumi:"groupLabels"`
	// Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group
	// VMs when targeting configs, for example prefix="prod-".
	InstanceNamePrefixes pulumi.StringArrayInput `pulumi:"instanceNamePrefixes"`
	// Targets any of the VM instances specified. Instances are specified by their URI in the `form zones/{{zone}}/instances/{{instance_name}}`,
	// `projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`, or
	// `https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`
	Instances pulumi.StringArrayInput `pulumi:"instances"`
	// Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PatchDeploymentInstanceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentInstanceFilter)(nil)).Elem()
}

func (i PatchDeploymentInstanceFilterArgs) ToPatchDeploymentInstanceFilterOutput() PatchDeploymentInstanceFilterOutput {
	return i.ToPatchDeploymentInstanceFilterOutputWithContext(context.Background())
}

func (i PatchDeploymentInstanceFilterArgs) ToPatchDeploymentInstanceFilterOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterOutput)
}

func (i PatchDeploymentInstanceFilterArgs) ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput {
	return i.ToPatchDeploymentInstanceFilterPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentInstanceFilterArgs) ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterOutput).ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx)
}

// PatchDeploymentInstanceFilterPtrInput is an input type that accepts PatchDeploymentInstanceFilterArgs, PatchDeploymentInstanceFilterPtr and PatchDeploymentInstanceFilterPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentInstanceFilterPtrInput` via:
//
//	        PatchDeploymentInstanceFilterArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentInstanceFilterPtrInput interface {
	pulumi.Input

	ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput
	ToPatchDeploymentInstanceFilterPtrOutputWithContext(context.Context) PatchDeploymentInstanceFilterPtrOutput
}

type patchDeploymentInstanceFilterPtrType PatchDeploymentInstanceFilterArgs

func PatchDeploymentInstanceFilterPtr(v *PatchDeploymentInstanceFilterArgs) PatchDeploymentInstanceFilterPtrInput {
	return (*patchDeploymentInstanceFilterPtrType)(v)
}

func (*patchDeploymentInstanceFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentInstanceFilter)(nil)).Elem()
}

func (i *patchDeploymentInstanceFilterPtrType) ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput {
	return i.ToPatchDeploymentInstanceFilterPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentInstanceFilterPtrType) ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterPtrOutput)
}

type PatchDeploymentInstanceFilterOutput struct{ *pulumi.OutputState }

func (PatchDeploymentInstanceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentInstanceFilter)(nil)).Elem()
}

func (o PatchDeploymentInstanceFilterOutput) ToPatchDeploymentInstanceFilterOutput() PatchDeploymentInstanceFilterOutput {
	return o
}

func (o PatchDeploymentInstanceFilterOutput) ToPatchDeploymentInstanceFilterOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterOutput {
	return o
}

func (o PatchDeploymentInstanceFilterOutput) ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput {
	return o.ToPatchDeploymentInstanceFilterPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentInstanceFilterOutput) ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentInstanceFilter) *PatchDeploymentInstanceFilter {
		return &v
	}).(PatchDeploymentInstanceFilterPtrOutput)
}

// Target all VM instances in the project. If true, no other criteria is permitted.
func (o PatchDeploymentInstanceFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.
// Structure is documented below.
func (o PatchDeploymentInstanceFilterOutput) GroupLabels() PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) []PatchDeploymentInstanceFilterGroupLabel { return v.GroupLabels }).(PatchDeploymentInstanceFilterGroupLabelArrayOutput)
}

// Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group
// VMs when targeting configs, for example prefix="prod-".
func (o PatchDeploymentInstanceFilterOutput) InstanceNamePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) []string { return v.InstanceNamePrefixes }).(pulumi.StringArrayOutput)
}

// Targets any of the VM instances specified. Instances are specified by their URI in the `form zones/{{zone}}/instances/{{instance_name}}`,
// `projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`, or
// `https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`
func (o PatchDeploymentInstanceFilterOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) []string { return v.Instances }).(pulumi.StringArrayOutput)
}

// Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.
func (o PatchDeploymentInstanceFilterOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PatchDeploymentInstanceFilterPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentInstanceFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentInstanceFilter)(nil)).Elem()
}

func (o PatchDeploymentInstanceFilterPtrOutput) ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput {
	return o
}

func (o PatchDeploymentInstanceFilterPtrOutput) ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterPtrOutput {
	return o
}

func (o PatchDeploymentInstanceFilterPtrOutput) Elem() PatchDeploymentInstanceFilterOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) PatchDeploymentInstanceFilter {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentInstanceFilter
		return ret
	}).(PatchDeploymentInstanceFilterOutput)
}

// Target all VM instances in the project. If true, no other criteria is permitted.
func (o PatchDeploymentInstanceFilterPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.
// Structure is documented below.
func (o PatchDeploymentInstanceFilterPtrOutput) GroupLabels() PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) []PatchDeploymentInstanceFilterGroupLabel {
		if v == nil {
			return nil
		}
		return v.GroupLabels
	}).(PatchDeploymentInstanceFilterGroupLabelArrayOutput)
}

// Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group
// VMs when targeting configs, for example prefix="prod-".
func (o PatchDeploymentInstanceFilterPtrOutput) InstanceNamePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) []string {
		if v == nil {
			return nil
		}
		return v.InstanceNamePrefixes
	}).(pulumi.StringArrayOutput)
}

// Targets any of the VM instances specified. Instances are specified by their URI in the `form zones/{{zone}}/instances/{{instance_name}}`,
// `projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`, or
// `https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`
func (o PatchDeploymentInstanceFilterPtrOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) []string {
		if v == nil {
			return nil
		}
		return v.Instances
	}).(pulumi.StringArrayOutput)
}

// Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.
func (o PatchDeploymentInstanceFilterPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type PatchDeploymentInstanceFilterGroupLabel struct {
	// Compute Engine instance labels that must be present for a VM instance to be targeted by this filter
	Labels map[string]string `pulumi:"labels"`
}

// PatchDeploymentInstanceFilterGroupLabelInput is an input type that accepts PatchDeploymentInstanceFilterGroupLabelArgs and PatchDeploymentInstanceFilterGroupLabelOutput values.
// You can construct a concrete instance of `PatchDeploymentInstanceFilterGroupLabelInput` via:
//
//	PatchDeploymentInstanceFilterGroupLabelArgs{...}
type PatchDeploymentInstanceFilterGroupLabelInput interface {
	pulumi.Input

	ToPatchDeploymentInstanceFilterGroupLabelOutput() PatchDeploymentInstanceFilterGroupLabelOutput
	ToPatchDeploymentInstanceFilterGroupLabelOutputWithContext(context.Context) PatchDeploymentInstanceFilterGroupLabelOutput
}

type PatchDeploymentInstanceFilterGroupLabelArgs struct {
	// Compute Engine instance labels that must be present for a VM instance to be targeted by this filter
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (PatchDeploymentInstanceFilterGroupLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentInstanceFilterGroupLabel)(nil)).Elem()
}

func (i PatchDeploymentInstanceFilterGroupLabelArgs) ToPatchDeploymentInstanceFilterGroupLabelOutput() PatchDeploymentInstanceFilterGroupLabelOutput {
	return i.ToPatchDeploymentInstanceFilterGroupLabelOutputWithContext(context.Background())
}

func (i PatchDeploymentInstanceFilterGroupLabelArgs) ToPatchDeploymentInstanceFilterGroupLabelOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterGroupLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterGroupLabelOutput)
}

// PatchDeploymentInstanceFilterGroupLabelArrayInput is an input type that accepts PatchDeploymentInstanceFilterGroupLabelArray and PatchDeploymentInstanceFilterGroupLabelArrayOutput values.
// You can construct a concrete instance of `PatchDeploymentInstanceFilterGroupLabelArrayInput` via:
//
//	PatchDeploymentInstanceFilterGroupLabelArray{ PatchDeploymentInstanceFilterGroupLabelArgs{...} }
type PatchDeploymentInstanceFilterGroupLabelArrayInput interface {
	pulumi.Input

	ToPatchDeploymentInstanceFilterGroupLabelArrayOutput() PatchDeploymentInstanceFilterGroupLabelArrayOutput
	ToPatchDeploymentInstanceFilterGroupLabelArrayOutputWithContext(context.Context) PatchDeploymentInstanceFilterGroupLabelArrayOutput
}

type PatchDeploymentInstanceFilterGroupLabelArray []PatchDeploymentInstanceFilterGroupLabelInput

func (PatchDeploymentInstanceFilterGroupLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchDeploymentInstanceFilterGroupLabel)(nil)).Elem()
}

func (i PatchDeploymentInstanceFilterGroupLabelArray) ToPatchDeploymentInstanceFilterGroupLabelArrayOutput() PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return i.ToPatchDeploymentInstanceFilterGroupLabelArrayOutputWithContext(context.Background())
}

func (i PatchDeploymentInstanceFilterGroupLabelArray) ToPatchDeploymentInstanceFilterGroupLabelArrayOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterGroupLabelArrayOutput)
}

type PatchDeploymentInstanceFilterGroupLabelOutput struct{ *pulumi.OutputState }

func (PatchDeploymentInstanceFilterGroupLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentInstanceFilterGroupLabel)(nil)).Elem()
}

func (o PatchDeploymentInstanceFilterGroupLabelOutput) ToPatchDeploymentInstanceFilterGroupLabelOutput() PatchDeploymentInstanceFilterGroupLabelOutput {
	return o
}

func (o PatchDeploymentInstanceFilterGroupLabelOutput) ToPatchDeploymentInstanceFilterGroupLabelOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterGroupLabelOutput {
	return o
}

// Compute Engine instance labels that must be present for a VM instance to be targeted by this filter
func (o PatchDeploymentInstanceFilterGroupLabelOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilterGroupLabel) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type PatchDeploymentInstanceFilterGroupLabelArrayOutput struct{ *pulumi.OutputState }

func (PatchDeploymentInstanceFilterGroupLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchDeploymentInstanceFilterGroupLabel)(nil)).Elem()
}

func (o PatchDeploymentInstanceFilterGroupLabelArrayOutput) ToPatchDeploymentInstanceFilterGroupLabelArrayOutput() PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return o
}

func (o PatchDeploymentInstanceFilterGroupLabelArrayOutput) ToPatchDeploymentInstanceFilterGroupLabelArrayOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return o
}

func (o PatchDeploymentInstanceFilterGroupLabelArrayOutput) Index(i pulumi.IntInput) PatchDeploymentInstanceFilterGroupLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchDeploymentInstanceFilterGroupLabel {
		return vs[0].([]PatchDeploymentInstanceFilterGroupLabel)[vs[1].(int)]
	}).(PatchDeploymentInstanceFilterGroupLabelOutput)
}

type PatchDeploymentOneTimeSchedule struct {
	// The desired patch job execution time. A timestamp in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	ExecuteTime string `pulumi:"executeTime"`
}

// PatchDeploymentOneTimeScheduleInput is an input type that accepts PatchDeploymentOneTimeScheduleArgs and PatchDeploymentOneTimeScheduleOutput values.
// You can construct a concrete instance of `PatchDeploymentOneTimeScheduleInput` via:
//
//	PatchDeploymentOneTimeScheduleArgs{...}
type PatchDeploymentOneTimeScheduleInput interface {
	pulumi.Input

	ToPatchDeploymentOneTimeScheduleOutput() PatchDeploymentOneTimeScheduleOutput
	ToPatchDeploymentOneTimeScheduleOutputWithContext(context.Context) PatchDeploymentOneTimeScheduleOutput
}

type PatchDeploymentOneTimeScheduleArgs struct {
	// The desired patch job execution time. A timestamp in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	ExecuteTime pulumi.StringInput `pulumi:"executeTime"`
}

func (PatchDeploymentOneTimeScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentOneTimeSchedule)(nil)).Elem()
}

func (i PatchDeploymentOneTimeScheduleArgs) ToPatchDeploymentOneTimeScheduleOutput() PatchDeploymentOneTimeScheduleOutput {
	return i.ToPatchDeploymentOneTimeScheduleOutputWithContext(context.Background())
}

func (i PatchDeploymentOneTimeScheduleArgs) ToPatchDeploymentOneTimeScheduleOutputWithContext(ctx context.Context) PatchDeploymentOneTimeScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentOneTimeScheduleOutput)
}

func (i PatchDeploymentOneTimeScheduleArgs) ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput {
	return i.ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(context.Background())
}

func (i PatchDeploymentOneTimeScheduleArgs) ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentOneTimeSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentOneTimeScheduleOutput).ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx)
}

// PatchDeploymentOneTimeSchedulePtrInput is an input type that accepts PatchDeploymentOneTimeScheduleArgs, PatchDeploymentOneTimeSchedulePtr and PatchDeploymentOneTimeSchedulePtrOutput values.
// You can construct a concrete instance of `PatchDeploymentOneTimeSchedulePtrInput` via:
//
//	        PatchDeploymentOneTimeScheduleArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentOneTimeSchedulePtrInput interface {
	pulumi.Input

	ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput
	ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(context.Context) PatchDeploymentOneTimeSchedulePtrOutput
}

type patchDeploymentOneTimeSchedulePtrType PatchDeploymentOneTimeScheduleArgs

func PatchDeploymentOneTimeSchedulePtr(v *PatchDeploymentOneTimeScheduleArgs) PatchDeploymentOneTimeSchedulePtrInput {
	return (*patchDeploymentOneTimeSchedulePtrType)(v)
}

func (*patchDeploymentOneTimeSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentOneTimeSchedule)(nil)).Elem()
}

func (i *patchDeploymentOneTimeSchedulePtrType) ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput {
	return i.ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(context.Background())
}

func (i *patchDeploymentOneTimeSchedulePtrType) ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentOneTimeSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentOneTimeSchedulePtrOutput)
}

type PatchDeploymentOneTimeScheduleOutput struct{ *pulumi.OutputState }

func (PatchDeploymentOneTimeScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentOneTimeSchedule)(nil)).Elem()
}

func (o PatchDeploymentOneTimeScheduleOutput) ToPatchDeploymentOneTimeScheduleOutput() PatchDeploymentOneTimeScheduleOutput {
	return o
}

func (o PatchDeploymentOneTimeScheduleOutput) ToPatchDeploymentOneTimeScheduleOutputWithContext(ctx context.Context) PatchDeploymentOneTimeScheduleOutput {
	return o
}

func (o PatchDeploymentOneTimeScheduleOutput) ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput {
	return o.ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(context.Background())
}

func (o PatchDeploymentOneTimeScheduleOutput) ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentOneTimeSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentOneTimeSchedule) *PatchDeploymentOneTimeSchedule {
		return &v
	}).(PatchDeploymentOneTimeSchedulePtrOutput)
}

// The desired patch job execution time. A timestamp in RFC3339 UTC "Zulu" format,
// accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentOneTimeScheduleOutput) ExecuteTime() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentOneTimeSchedule) string { return v.ExecuteTime }).(pulumi.StringOutput)
}

type PatchDeploymentOneTimeSchedulePtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentOneTimeSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentOneTimeSchedule)(nil)).Elem()
}

func (o PatchDeploymentOneTimeSchedulePtrOutput) ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput {
	return o
}

func (o PatchDeploymentOneTimeSchedulePtrOutput) ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentOneTimeSchedulePtrOutput {
	return o
}

func (o PatchDeploymentOneTimeSchedulePtrOutput) Elem() PatchDeploymentOneTimeScheduleOutput {
	return o.ApplyT(func(v *PatchDeploymentOneTimeSchedule) PatchDeploymentOneTimeSchedule {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentOneTimeSchedule
		return ret
	}).(PatchDeploymentOneTimeScheduleOutput)
}

// The desired patch job execution time. A timestamp in RFC3339 UTC "Zulu" format,
// accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentOneTimeSchedulePtrOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentOneTimeSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.ExecuteTime
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfig struct {
	// Apt update settings. Use this setting to override the default apt patch rules.
	// Structure is documented below.
	Apt *PatchDeploymentPatchConfigApt `pulumi:"apt"`
	// goo update settings. Use this setting to override the default goo patch rules.
	// Structure is documented below.
	Goo *PatchDeploymentPatchConfigGoo `pulumi:"goo"`
	// Allows the patch job to run on Managed instance groups (MIGs).
	MigInstancesAllowed *bool `pulumi:"migInstancesAllowed"`
	// The ExecStep to run after the patch update.
	// Structure is documented below.
	PostStep *PatchDeploymentPatchConfigPostStep `pulumi:"postStep"`
	// The ExecStep to run before the patch update.
	// Structure is documented below.
	PreStep *PatchDeploymentPatchConfigPreStep `pulumi:"preStep"`
	// Post-patch reboot settings.
	// Possible values are `DEFAULT`, `ALWAYS`, and `NEVER`.
	RebootConfig *string `pulumi:"rebootConfig"`
	// Windows update settings. Use this setting to override the default Windows patch rules.
	// Structure is documented below.
	WindowsUpdate *PatchDeploymentPatchConfigWindowsUpdate `pulumi:"windowsUpdate"`
	// Yum update settings. Use this setting to override the default yum patch rules.
	// Structure is documented below.
	Yum *PatchDeploymentPatchConfigYum `pulumi:"yum"`
	// zypper update settings. Use this setting to override the default zypper patch rules.
	// Structure is documented below.
	Zypper *PatchDeploymentPatchConfigZypper `pulumi:"zypper"`
}

// PatchDeploymentPatchConfigInput is an input type that accepts PatchDeploymentPatchConfigArgs and PatchDeploymentPatchConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigInput` via:
//
//	PatchDeploymentPatchConfigArgs{...}
type PatchDeploymentPatchConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigOutput() PatchDeploymentPatchConfigOutput
	ToPatchDeploymentPatchConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigOutput
}

type PatchDeploymentPatchConfigArgs struct {
	// Apt update settings. Use this setting to override the default apt patch rules.
	// Structure is documented below.
	Apt PatchDeploymentPatchConfigAptPtrInput `pulumi:"apt"`
	// goo update settings. Use this setting to override the default goo patch rules.
	// Structure is documented below.
	Goo PatchDeploymentPatchConfigGooPtrInput `pulumi:"goo"`
	// Allows the patch job to run on Managed instance groups (MIGs).
	MigInstancesAllowed pulumi.BoolPtrInput `pulumi:"migInstancesAllowed"`
	// The ExecStep to run after the patch update.
	// Structure is documented below.
	PostStep PatchDeploymentPatchConfigPostStepPtrInput `pulumi:"postStep"`
	// The ExecStep to run before the patch update.
	// Structure is documented below.
	PreStep PatchDeploymentPatchConfigPreStepPtrInput `pulumi:"preStep"`
	// Post-patch reboot settings.
	// Possible values are `DEFAULT`, `ALWAYS`, and `NEVER`.
	RebootConfig pulumi.StringPtrInput `pulumi:"rebootConfig"`
	// Windows update settings. Use this setting to override the default Windows patch rules.
	// Structure is documented below.
	WindowsUpdate PatchDeploymentPatchConfigWindowsUpdatePtrInput `pulumi:"windowsUpdate"`
	// Yum update settings. Use this setting to override the default yum patch rules.
	// Structure is documented below.
	Yum PatchDeploymentPatchConfigYumPtrInput `pulumi:"yum"`
	// zypper update settings. Use this setting to override the default zypper patch rules.
	// Structure is documented below.
	Zypper PatchDeploymentPatchConfigZypperPtrInput `pulumi:"zypper"`
}

func (PatchDeploymentPatchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigArgs) ToPatchDeploymentPatchConfigOutput() PatchDeploymentPatchConfigOutput {
	return i.ToPatchDeploymentPatchConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigArgs) ToPatchDeploymentPatchConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigOutput)
}

func (i PatchDeploymentPatchConfigArgs) ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigArgs) ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigOutput).ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigArgs, PatchDeploymentPatchConfigPtr and PatchDeploymentPatchConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPtrInput` via:
//
//	        PatchDeploymentPatchConfigArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput
	ToPatchDeploymentPatchConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPtrOutput
}

type patchDeploymentPatchConfigPtrType PatchDeploymentPatchConfigArgs

func PatchDeploymentPatchConfigPtr(v *PatchDeploymentPatchConfigArgs) PatchDeploymentPatchConfigPtrInput {
	return (*patchDeploymentPatchConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPtrType) ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPtrType) ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPtrOutput)
}

type PatchDeploymentPatchConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigOutput) ToPatchDeploymentPatchConfigOutput() PatchDeploymentPatchConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigOutput) ToPatchDeploymentPatchConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigOutput) ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigOutput) ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfig {
		return &v
	}).(PatchDeploymentPatchConfigPtrOutput)
}

// Apt update settings. Use this setting to override the default apt patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) Apt() PatchDeploymentPatchConfigAptPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigApt { return v.Apt }).(PatchDeploymentPatchConfigAptPtrOutput)
}

// goo update settings. Use this setting to override the default goo patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) Goo() PatchDeploymentPatchConfigGooPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigGoo { return v.Goo }).(PatchDeploymentPatchConfigGooPtrOutput)
}

// Allows the patch job to run on Managed instance groups (MIGs).
func (o PatchDeploymentPatchConfigOutput) MigInstancesAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *bool { return v.MigInstancesAllowed }).(pulumi.BoolPtrOutput)
}

// The ExecStep to run after the patch update.
// Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) PostStep() PatchDeploymentPatchConfigPostStepPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigPostStep { return v.PostStep }).(PatchDeploymentPatchConfigPostStepPtrOutput)
}

// The ExecStep to run before the patch update.
// Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) PreStep() PatchDeploymentPatchConfigPreStepPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigPreStep { return v.PreStep }).(PatchDeploymentPatchConfigPreStepPtrOutput)
}

// Post-patch reboot settings.
// Possible values are `DEFAULT`, `ALWAYS`, and `NEVER`.
func (o PatchDeploymentPatchConfigOutput) RebootConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *string { return v.RebootConfig }).(pulumi.StringPtrOutput)
}

// Windows update settings. Use this setting to override the default Windows patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) WindowsUpdate() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigWindowsUpdate { return v.WindowsUpdate }).(PatchDeploymentPatchConfigWindowsUpdatePtrOutput)
}

// Yum update settings. Use this setting to override the default yum patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) Yum() PatchDeploymentPatchConfigYumPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigYum { return v.Yum }).(PatchDeploymentPatchConfigYumPtrOutput)
}

// zypper update settings. Use this setting to override the default zypper patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) Zypper() PatchDeploymentPatchConfigZypperPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigZypper { return v.Zypper }).(PatchDeploymentPatchConfigZypperPtrOutput)
}

type PatchDeploymentPatchConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPtrOutput) ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPtrOutput) ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPtrOutput) Elem() PatchDeploymentPatchConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) PatchDeploymentPatchConfig {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfig
		return ret
	}).(PatchDeploymentPatchConfigOutput)
}

// Apt update settings. Use this setting to override the default apt patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) Apt() PatchDeploymentPatchConfigAptPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigApt {
		if v == nil {
			return nil
		}
		return v.Apt
	}).(PatchDeploymentPatchConfigAptPtrOutput)
}

// goo update settings. Use this setting to override the default goo patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) Goo() PatchDeploymentPatchConfigGooPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigGoo {
		if v == nil {
			return nil
		}
		return v.Goo
	}).(PatchDeploymentPatchConfigGooPtrOutput)
}

// Allows the patch job to run on Managed instance groups (MIGs).
func (o PatchDeploymentPatchConfigPtrOutput) MigInstancesAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *bool {
		if v == nil {
			return nil
		}
		return v.MigInstancesAllowed
	}).(pulumi.BoolPtrOutput)
}

// The ExecStep to run after the patch update.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) PostStep() PatchDeploymentPatchConfigPostStepPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigPostStep {
		if v == nil {
			return nil
		}
		return v.PostStep
	}).(PatchDeploymentPatchConfigPostStepPtrOutput)
}

// The ExecStep to run before the patch update.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) PreStep() PatchDeploymentPatchConfigPreStepPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigPreStep {
		if v == nil {
			return nil
		}
		return v.PreStep
	}).(PatchDeploymentPatchConfigPreStepPtrOutput)
}

// Post-patch reboot settings.
// Possible values are `DEFAULT`, `ALWAYS`, and `NEVER`.
func (o PatchDeploymentPatchConfigPtrOutput) RebootConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *string {
		if v == nil {
			return nil
		}
		return v.RebootConfig
	}).(pulumi.StringPtrOutput)
}

// Windows update settings. Use this setting to override the default Windows patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) WindowsUpdate() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigWindowsUpdate {
		if v == nil {
			return nil
		}
		return v.WindowsUpdate
	}).(PatchDeploymentPatchConfigWindowsUpdatePtrOutput)
}

// Yum update settings. Use this setting to override the default yum patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) Yum() PatchDeploymentPatchConfigYumPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigYum {
		if v == nil {
			return nil
		}
		return v.Yum
	}).(PatchDeploymentPatchConfigYumPtrOutput)
}

// zypper update settings. Use this setting to override the default zypper patch rules.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) Zypper() PatchDeploymentPatchConfigZypperPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigZypper {
		if v == nil {
			return nil
		}
		return v.Zypper
	}).(PatchDeploymentPatchConfigZypperPtrOutput)
}

type PatchDeploymentPatchConfigApt struct {
	// List of KBs to exclude from update.
	Excludes []string `pulumi:"excludes"`
	// An exclusive list of packages to be updated. These are the only packages that will be updated.
	// If these packages are not installed, they will be ignored. This field cannot be specified with
	// any other patch configuration fields.
	ExclusivePackages []string `pulumi:"exclusivePackages"`
	// By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead.
	// Possible values are `DIST` and `UPGRADE`.
	Type *string `pulumi:"type"`
}

// PatchDeploymentPatchConfigAptInput is an input type that accepts PatchDeploymentPatchConfigAptArgs and PatchDeploymentPatchConfigAptOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigAptInput` via:
//
//	PatchDeploymentPatchConfigAptArgs{...}
type PatchDeploymentPatchConfigAptInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigAptOutput() PatchDeploymentPatchConfigAptOutput
	ToPatchDeploymentPatchConfigAptOutputWithContext(context.Context) PatchDeploymentPatchConfigAptOutput
}

type PatchDeploymentPatchConfigAptArgs struct {
	// List of KBs to exclude from update.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// An exclusive list of packages to be updated. These are the only packages that will be updated.
	// If these packages are not installed, they will be ignored. This field cannot be specified with
	// any other patch configuration fields.
	ExclusivePackages pulumi.StringArrayInput `pulumi:"exclusivePackages"`
	// By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead.
	// Possible values are `DIST` and `UPGRADE`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PatchDeploymentPatchConfigAptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigApt)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigAptArgs) ToPatchDeploymentPatchConfigAptOutput() PatchDeploymentPatchConfigAptOutput {
	return i.ToPatchDeploymentPatchConfigAptOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigAptArgs) ToPatchDeploymentPatchConfigAptOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigAptOutput)
}

func (i PatchDeploymentPatchConfigAptArgs) ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput {
	return i.ToPatchDeploymentPatchConfigAptPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigAptArgs) ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigAptOutput).ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigAptPtrInput is an input type that accepts PatchDeploymentPatchConfigAptArgs, PatchDeploymentPatchConfigAptPtr and PatchDeploymentPatchConfigAptPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigAptPtrInput` via:
//
//	        PatchDeploymentPatchConfigAptArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigAptPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput
	ToPatchDeploymentPatchConfigAptPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigAptPtrOutput
}

type patchDeploymentPatchConfigAptPtrType PatchDeploymentPatchConfigAptArgs

func PatchDeploymentPatchConfigAptPtr(v *PatchDeploymentPatchConfigAptArgs) PatchDeploymentPatchConfigAptPtrInput {
	return (*patchDeploymentPatchConfigAptPtrType)(v)
}

func (*patchDeploymentPatchConfigAptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigApt)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigAptPtrType) ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput {
	return i.ToPatchDeploymentPatchConfigAptPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigAptPtrType) ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigAptPtrOutput)
}

type PatchDeploymentPatchConfigAptOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigAptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigApt)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigAptOutput) ToPatchDeploymentPatchConfigAptOutput() PatchDeploymentPatchConfigAptOutput {
	return o
}

func (o PatchDeploymentPatchConfigAptOutput) ToPatchDeploymentPatchConfigAptOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptOutput {
	return o
}

func (o PatchDeploymentPatchConfigAptOutput) ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput {
	return o.ToPatchDeploymentPatchConfigAptPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigAptOutput) ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigApt) *PatchDeploymentPatchConfigApt {
		return &v
	}).(PatchDeploymentPatchConfigAptPtrOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigAptOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigApt) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// An exclusive list of packages to be updated. These are the only packages that will be updated.
// If these packages are not installed, they will be ignored. This field cannot be specified with
// any other patch configuration fields.
func (o PatchDeploymentPatchConfigAptOutput) ExclusivePackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigApt) []string { return v.ExclusivePackages }).(pulumi.StringArrayOutput)
}

// By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead.
// Possible values are `DIST` and `UPGRADE`.
func (o PatchDeploymentPatchConfigAptOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigApt) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigAptPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigAptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigApt)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigAptPtrOutput) ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigAptPtrOutput) ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigAptPtrOutput) Elem() PatchDeploymentPatchConfigAptOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigApt) PatchDeploymentPatchConfigApt {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigApt
		return ret
	}).(PatchDeploymentPatchConfigAptOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigAptPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigApt) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// An exclusive list of packages to be updated. These are the only packages that will be updated.
// If these packages are not installed, they will be ignored. This field cannot be specified with
// any other patch configuration fields.
func (o PatchDeploymentPatchConfigAptPtrOutput) ExclusivePackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigApt) []string {
		if v == nil {
			return nil
		}
		return v.ExclusivePackages
	}).(pulumi.StringArrayOutput)
}

// By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead.
// Possible values are `DIST` and `UPGRADE`.
func (o PatchDeploymentPatchConfigAptPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigApt) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigGoo struct {
	// goo update settings. Use this setting to override the default goo patch rules.
	Enabled bool `pulumi:"enabled"`
}

// PatchDeploymentPatchConfigGooInput is an input type that accepts PatchDeploymentPatchConfigGooArgs and PatchDeploymentPatchConfigGooOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigGooInput` via:
//
//	PatchDeploymentPatchConfigGooArgs{...}
type PatchDeploymentPatchConfigGooInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigGooOutput() PatchDeploymentPatchConfigGooOutput
	ToPatchDeploymentPatchConfigGooOutputWithContext(context.Context) PatchDeploymentPatchConfigGooOutput
}

type PatchDeploymentPatchConfigGooArgs struct {
	// goo update settings. Use this setting to override the default goo patch rules.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (PatchDeploymentPatchConfigGooArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigGoo)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigGooArgs) ToPatchDeploymentPatchConfigGooOutput() PatchDeploymentPatchConfigGooOutput {
	return i.ToPatchDeploymentPatchConfigGooOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigGooArgs) ToPatchDeploymentPatchConfigGooOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigGooOutput)
}

func (i PatchDeploymentPatchConfigGooArgs) ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput {
	return i.ToPatchDeploymentPatchConfigGooPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigGooArgs) ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigGooOutput).ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigGooPtrInput is an input type that accepts PatchDeploymentPatchConfigGooArgs, PatchDeploymentPatchConfigGooPtr and PatchDeploymentPatchConfigGooPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigGooPtrInput` via:
//
//	        PatchDeploymentPatchConfigGooArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigGooPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput
	ToPatchDeploymentPatchConfigGooPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigGooPtrOutput
}

type patchDeploymentPatchConfigGooPtrType PatchDeploymentPatchConfigGooArgs

func PatchDeploymentPatchConfigGooPtr(v *PatchDeploymentPatchConfigGooArgs) PatchDeploymentPatchConfigGooPtrInput {
	return (*patchDeploymentPatchConfigGooPtrType)(v)
}

func (*patchDeploymentPatchConfigGooPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigGoo)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigGooPtrType) ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput {
	return i.ToPatchDeploymentPatchConfigGooPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigGooPtrType) ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigGooPtrOutput)
}

type PatchDeploymentPatchConfigGooOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigGooOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigGoo)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigGooOutput) ToPatchDeploymentPatchConfigGooOutput() PatchDeploymentPatchConfigGooOutput {
	return o
}

func (o PatchDeploymentPatchConfigGooOutput) ToPatchDeploymentPatchConfigGooOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooOutput {
	return o
}

func (o PatchDeploymentPatchConfigGooOutput) ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput {
	return o.ToPatchDeploymentPatchConfigGooPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigGooOutput) ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigGoo) *PatchDeploymentPatchConfigGoo {
		return &v
	}).(PatchDeploymentPatchConfigGooPtrOutput)
}

// goo update settings. Use this setting to override the default goo patch rules.
func (o PatchDeploymentPatchConfigGooOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigGoo) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type PatchDeploymentPatchConfigGooPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigGooPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigGoo)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigGooPtrOutput) ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigGooPtrOutput) ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigGooPtrOutput) Elem() PatchDeploymentPatchConfigGooOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigGoo) PatchDeploymentPatchConfigGoo {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigGoo
		return ret
	}).(PatchDeploymentPatchConfigGooOutput)
}

// goo update settings. Use this setting to override the default goo patch rules.
func (o PatchDeploymentPatchConfigGooPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigGoo) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type PatchDeploymentPatchConfigPostStep struct {
	// The ExecStepConfig for all Linux VMs targeted by the PatchJob.
	// Structure is documented below.
	LinuxExecStepConfig *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig `pulumi:"linuxExecStepConfig"`
	// The ExecStepConfig for all Windows VMs targeted by the PatchJob.
	// Structure is documented below.
	WindowsExecStepConfig *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig `pulumi:"windowsExecStepConfig"`
}

// PatchDeploymentPatchConfigPostStepInput is an input type that accepts PatchDeploymentPatchConfigPostStepArgs and PatchDeploymentPatchConfigPostStepOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepInput` via:
//
//	PatchDeploymentPatchConfigPostStepArgs{...}
type PatchDeploymentPatchConfigPostStepInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepOutput() PatchDeploymentPatchConfigPostStepOutput
	ToPatchDeploymentPatchConfigPostStepOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepOutput
}

type PatchDeploymentPatchConfigPostStepArgs struct {
	// The ExecStepConfig for all Linux VMs targeted by the PatchJob.
	// Structure is documented below.
	LinuxExecStepConfig PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput `pulumi:"linuxExecStepConfig"`
	// The ExecStepConfig for all Windows VMs targeted by the PatchJob.
	// Structure is documented below.
	WindowsExecStepConfig PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput `pulumi:"windowsExecStepConfig"`
}

func (PatchDeploymentPatchConfigPostStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStep)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepArgs) ToPatchDeploymentPatchConfigPostStepOutput() PatchDeploymentPatchConfigPostStepOutput {
	return i.ToPatchDeploymentPatchConfigPostStepOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepArgs) ToPatchDeploymentPatchConfigPostStepOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepOutput)
}

func (i PatchDeploymentPatchConfigPostStepArgs) ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepArgs) ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepOutput).ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepArgs, PatchDeploymentPatchConfigPostStepPtr and PatchDeploymentPatchConfigPostStepPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepPtrInput` via:
//
//	        PatchDeploymentPatchConfigPostStepArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPostStepPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput
	ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepPtrOutput
}

type patchDeploymentPatchConfigPostStepPtrType PatchDeploymentPatchConfigPostStepArgs

func PatchDeploymentPatchConfigPostStepPtr(v *PatchDeploymentPatchConfigPostStepArgs) PatchDeploymentPatchConfigPostStepPtrInput {
	return (*patchDeploymentPatchConfigPostStepPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStep)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepPtrType) ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepPtrType) ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepPtrOutput)
}

type PatchDeploymentPatchConfigPostStepOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStep)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepOutput) ToPatchDeploymentPatchConfigPostStepOutput() PatchDeploymentPatchConfigPostStepOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepOutput) ToPatchDeploymentPatchConfigPostStepOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepOutput) ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepOutput) ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStep {
		return &v
	}).(PatchDeploymentPatchConfigPostStepPtrOutput)
}

// The ExecStepConfig for all Linux VMs targeted by the PatchJob.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepOutput) LinuxExecStepConfig() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig {
		return v.LinuxExecStepConfig
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput)
}

// The ExecStepConfig for all Windows VMs targeted by the PatchJob.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepOutput) WindowsExecStepConfig() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig {
		return v.WindowsExecStepConfig
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPostStepPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStep)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepPtrOutput) ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepPtrOutput) ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepPtrOutput) Elem() PatchDeploymentPatchConfigPostStepOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStep) PatchDeploymentPatchConfigPostStep {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPostStep
		return ret
	}).(PatchDeploymentPatchConfigPostStepOutput)
}

// The ExecStepConfig for all Linux VMs targeted by the PatchJob.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepPtrOutput) LinuxExecStepConfig() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig {
		if v == nil {
			return nil
		}
		return v.LinuxExecStepConfig
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput)
}

// The ExecStepConfig for all Windows VMs targeted by the PatchJob.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepPtrOutput) WindowsExecStepConfig() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig {
		if v == nil {
			return nil
		}
		return v.WindowsExecStepConfig
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfig struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes []int `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.
	// Structure is documented below.
	GcsObject *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter *string `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath *string `pulumi:"localPath"`
}

// PatchDeploymentPatchConfigPostStepLinuxExecStepConfigInput is an input type that accepts PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs and PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepLinuxExecStepConfigInput` via:
//
//	PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs{...}
type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput
	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes pulumi.IntArrayInput `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.
	// Structure is documented below.
	GcsObject PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput)
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput).ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs, PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtr and PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput` via:
//
//	        PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput
	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput
}

type patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs

func PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtr(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput {
	return (*patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepLinuxExecStepConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig {
		return &v
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) []int { return v.AllowedSuccessCodes }).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) GcsObject() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject {
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepLinuxExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) Elem() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) PatchDeploymentPatchConfigPostStepLinuxExecStepConfig {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPostStepLinuxExecStepConfig
		return ret
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) []int {
		if v == nil {
			return nil
		}
		return v.AllowedSuccessCodes
	}).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) GcsObject() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject {
		if v == nil {
			return nil
		}
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject struct {
	// Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber string `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectInput is an input type that accepts PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs and PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectInput` via:
//
//	PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs{...}
type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput
	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs struct {
	// Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber pulumi.StringInput `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput)
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput).ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs, PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtr and PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput` via:
//
//	        PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput
	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput
}

type patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs

func PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtr(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput {
	return (*patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject {
		return &v
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) GenerationNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) string {
		return v.GenerationNumber
	}).(pulumi.StringOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) string { return v.Object }).(pulumi.StringOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) Elem() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject
		return ret
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) GenerationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.GenerationNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfig struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes []int `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.
	// Structure is documented below.
	GcsObject *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter *string `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath *string `pulumi:"localPath"`
}

// PatchDeploymentPatchConfigPostStepWindowsExecStepConfigInput is an input type that accepts PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs and PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepWindowsExecStepConfigInput` via:
//
//	PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs{...}
type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput
	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes pulumi.IntArrayInput `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.
	// Structure is documented below.
	GcsObject PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput)
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput).ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs, PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtr and PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput` via:
//
//	        PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput
	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput
}

type patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs

func PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtr(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput {
	return (*patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepWindowsExecStepConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig {
		return &v
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) []int { return v.AllowedSuccessCodes }).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) GcsObject() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject {
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepWindowsExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) Elem() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) PatchDeploymentPatchConfigPostStepWindowsExecStepConfig {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPostStepWindowsExecStepConfig
		return ret
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) []int {
		if v == nil {
			return nil
		}
		return v.AllowedSuccessCodes
	}).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) GcsObject() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject {
		if v == nil {
			return nil
		}
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject struct {
	// Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber string `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectInput is an input type that accepts PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs and PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectInput` via:
//
//	PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs{...}
type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput
	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs struct {
	// Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber pulumi.StringInput `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput)
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput).ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs, PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtr and PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput` via:
//
//	        PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput
	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput
}

type patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs

func PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtr(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput {
	return (*patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject {
		return &v
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) GenerationNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) string {
		return v.GenerationNumber
	}).(pulumi.StringOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) string { return v.Object }).(pulumi.StringOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) Elem() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject
		return ret
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) GenerationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.GenerationNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStep struct {
	// The ExecStepConfig for all Linux VMs targeted by the PatchJob.
	// Structure is documented below.
	LinuxExecStepConfig *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig `pulumi:"linuxExecStepConfig"`
	// The ExecStepConfig for all Windows VMs targeted by the PatchJob.
	// Structure is documented below.
	WindowsExecStepConfig *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig `pulumi:"windowsExecStepConfig"`
}

// PatchDeploymentPatchConfigPreStepInput is an input type that accepts PatchDeploymentPatchConfigPreStepArgs and PatchDeploymentPatchConfigPreStepOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepInput` via:
//
//	PatchDeploymentPatchConfigPreStepArgs{...}
type PatchDeploymentPatchConfigPreStepInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepOutput() PatchDeploymentPatchConfigPreStepOutput
	ToPatchDeploymentPatchConfigPreStepOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepOutput
}

type PatchDeploymentPatchConfigPreStepArgs struct {
	// The ExecStepConfig for all Linux VMs targeted by the PatchJob.
	// Structure is documented below.
	LinuxExecStepConfig PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput `pulumi:"linuxExecStepConfig"`
	// The ExecStepConfig for all Windows VMs targeted by the PatchJob.
	// Structure is documented below.
	WindowsExecStepConfig PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput `pulumi:"windowsExecStepConfig"`
}

func (PatchDeploymentPatchConfigPreStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStep)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepArgs) ToPatchDeploymentPatchConfigPreStepOutput() PatchDeploymentPatchConfigPreStepOutput {
	return i.ToPatchDeploymentPatchConfigPreStepOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepArgs) ToPatchDeploymentPatchConfigPreStepOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepOutput)
}

func (i PatchDeploymentPatchConfigPreStepArgs) ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepArgs) ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepOutput).ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepArgs, PatchDeploymentPatchConfigPreStepPtr and PatchDeploymentPatchConfigPreStepPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepPtrInput` via:
//
//	        PatchDeploymentPatchConfigPreStepArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPreStepPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput
	ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepPtrOutput
}

type patchDeploymentPatchConfigPreStepPtrType PatchDeploymentPatchConfigPreStepArgs

func PatchDeploymentPatchConfigPreStepPtr(v *PatchDeploymentPatchConfigPreStepArgs) PatchDeploymentPatchConfigPreStepPtrInput {
	return (*patchDeploymentPatchConfigPreStepPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStep)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepPtrType) ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepPtrType) ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepPtrOutput)
}

type PatchDeploymentPatchConfigPreStepOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStep)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepOutput) ToPatchDeploymentPatchConfigPreStepOutput() PatchDeploymentPatchConfigPreStepOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepOutput) ToPatchDeploymentPatchConfigPreStepOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepOutput) ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepOutput) ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStep {
		return &v
	}).(PatchDeploymentPatchConfigPreStepPtrOutput)
}

// The ExecStepConfig for all Linux VMs targeted by the PatchJob.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepOutput) LinuxExecStepConfig() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig {
		return v.LinuxExecStepConfig
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput)
}

// The ExecStepConfig for all Windows VMs targeted by the PatchJob.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepOutput) WindowsExecStepConfig() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig {
		return v.WindowsExecStepConfig
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPreStepPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStep)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepPtrOutput) ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepPtrOutput) ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepPtrOutput) Elem() PatchDeploymentPatchConfigPreStepOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStep) PatchDeploymentPatchConfigPreStep {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPreStep
		return ret
	}).(PatchDeploymentPatchConfigPreStepOutput)
}

// The ExecStepConfig for all Linux VMs targeted by the PatchJob.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepPtrOutput) LinuxExecStepConfig() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig {
		if v == nil {
			return nil
		}
		return v.LinuxExecStepConfig
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput)
}

// The ExecStepConfig for all Windows VMs targeted by the PatchJob.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepPtrOutput) WindowsExecStepConfig() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig {
		if v == nil {
			return nil
		}
		return v.WindowsExecStepConfig
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfig struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes []int `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.
	// Structure is documented below.
	GcsObject *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter *string `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath *string `pulumi:"localPath"`
}

// PatchDeploymentPatchConfigPreStepLinuxExecStepConfigInput is an input type that accepts PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs and PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepLinuxExecStepConfigInput` via:
//
//	PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs{...}
type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput
	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes pulumi.IntArrayInput `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.
	// Structure is documented below.
	GcsObject PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput)
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput).ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs, PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtr and PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput` via:
//
//	        PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput
	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput
}

type patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs

func PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtr(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput {
	return (*patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepLinuxExecStepConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig {
		return &v
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) []int { return v.AllowedSuccessCodes }).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) GcsObject() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject {
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepLinuxExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) Elem() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) PatchDeploymentPatchConfigPreStepLinuxExecStepConfig {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPreStepLinuxExecStepConfig
		return ret
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) []int {
		if v == nil {
			return nil
		}
		return v.AllowedSuccessCodes
	}).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) GcsObject() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject {
		if v == nil {
			return nil
		}
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject struct {
	// Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber string `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectInput is an input type that accepts PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs and PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectInput` via:
//
//	PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs{...}
type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput
	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs struct {
	// Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber pulumi.StringInput `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput)
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput).ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs, PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtr and PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput` via:
//
//	        PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput
	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput
}

type patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs

func PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtr(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput {
	return (*patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject {
		return &v
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) GenerationNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) string {
		return v.GenerationNumber
	}).(pulumi.StringOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) string { return v.Object }).(pulumi.StringOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) Elem() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject
		return ret
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) GenerationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.GenerationNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfig struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes []int `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.
	// Structure is documented below.
	GcsObject *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter *string `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath *string `pulumi:"localPath"`
}

// PatchDeploymentPatchConfigPreStepWindowsExecStepConfigInput is an input type that accepts PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs and PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepWindowsExecStepConfigInput` via:
//
//	PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs{...}
type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput
	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes pulumi.IntArrayInput `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.
	// Structure is documented below.
	GcsObject PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	// Possible values are `SHELL` and `POWERSHELL`.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput)
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput).ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs, PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtr and PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput` via:
//
//	        PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput
	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput
}

type patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs

func PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtr(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput {
	return (*patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepWindowsExecStepConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig {
		return &v
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) []int { return v.AllowedSuccessCodes }).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) GcsObject() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject {
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepWindowsExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) Elem() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) PatchDeploymentPatchConfigPreStepWindowsExecStepConfig {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPreStepWindowsExecStepConfig
		return ret
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) []int {
		if v == nil {
			return nil
		}
		return v.AllowedSuccessCodes
	}).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.
// Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) GcsObject() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject {
		if v == nil {
			return nil
		}
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
// Possible values are `SHELL` and `POWERSHELL`.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject struct {
	// Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber string `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectInput is an input type that accepts PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs and PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectInput` via:
//
//	PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs{...}
type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput
	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs struct {
	// Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber pulumi.StringInput `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput)
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput).ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs, PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtr and PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput` via:
//
//	        PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput
	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput
}

type patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs

func PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtr(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput {
	return (*patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject {
		return &v
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) GenerationNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) string {
		return v.GenerationNumber
	}).(pulumi.StringOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) string { return v.Object }).(pulumi.StringOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) Elem() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject
		return ret
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) GenerationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.GenerationNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigWindowsUpdate struct {
	// Only apply updates of these windows update classifications. If empty, all updates are applied.
	// Each value may be one of `CRITICAL`, `SECURITY`, `DEFINITION`, `DRIVER`, `FEATURE_PACK`, `SERVICE_PACK`, `TOOL`, `UPDATE_ROLLUP`, and `UPDATE`.
	Classifications []string `pulumi:"classifications"`
	// List of KBs to exclude from update.
	Excludes []string `pulumi:"excludes"`
	// An exclusive list of kbs to be updated. These are the only patches that will be updated.
	// This field must not be used with other patch configurations.
	ExclusivePatches []string `pulumi:"exclusivePatches"`
}

// PatchDeploymentPatchConfigWindowsUpdateInput is an input type that accepts PatchDeploymentPatchConfigWindowsUpdateArgs and PatchDeploymentPatchConfigWindowsUpdateOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigWindowsUpdateInput` via:
//
//	PatchDeploymentPatchConfigWindowsUpdateArgs{...}
type PatchDeploymentPatchConfigWindowsUpdateInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigWindowsUpdateOutput() PatchDeploymentPatchConfigWindowsUpdateOutput
	ToPatchDeploymentPatchConfigWindowsUpdateOutputWithContext(context.Context) PatchDeploymentPatchConfigWindowsUpdateOutput
}

type PatchDeploymentPatchConfigWindowsUpdateArgs struct {
	// Only apply updates of these windows update classifications. If empty, all updates are applied.
	// Each value may be one of `CRITICAL`, `SECURITY`, `DEFINITION`, `DRIVER`, `FEATURE_PACK`, `SERVICE_PACK`, `TOOL`, `UPDATE_ROLLUP`, and `UPDATE`.
	Classifications pulumi.StringArrayInput `pulumi:"classifications"`
	// List of KBs to exclude from update.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// An exclusive list of kbs to be updated. These are the only patches that will be updated.
	// This field must not be used with other patch configurations.
	ExclusivePatches pulumi.StringArrayInput `pulumi:"exclusivePatches"`
}

func (PatchDeploymentPatchConfigWindowsUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigWindowsUpdate)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigWindowsUpdateArgs) ToPatchDeploymentPatchConfigWindowsUpdateOutput() PatchDeploymentPatchConfigWindowsUpdateOutput {
	return i.ToPatchDeploymentPatchConfigWindowsUpdateOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigWindowsUpdateArgs) ToPatchDeploymentPatchConfigWindowsUpdateOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigWindowsUpdateOutput)
}

func (i PatchDeploymentPatchConfigWindowsUpdateArgs) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return i.ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigWindowsUpdateArgs) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigWindowsUpdateOutput).ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigWindowsUpdatePtrInput is an input type that accepts PatchDeploymentPatchConfigWindowsUpdateArgs, PatchDeploymentPatchConfigWindowsUpdatePtr and PatchDeploymentPatchConfigWindowsUpdatePtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigWindowsUpdatePtrInput` via:
//
//	        PatchDeploymentPatchConfigWindowsUpdateArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigWindowsUpdatePtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput
	ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput
}

type patchDeploymentPatchConfigWindowsUpdatePtrType PatchDeploymentPatchConfigWindowsUpdateArgs

func PatchDeploymentPatchConfigWindowsUpdatePtr(v *PatchDeploymentPatchConfigWindowsUpdateArgs) PatchDeploymentPatchConfigWindowsUpdatePtrInput {
	return (*patchDeploymentPatchConfigWindowsUpdatePtrType)(v)
}

func (*patchDeploymentPatchConfigWindowsUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigWindowsUpdate)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigWindowsUpdatePtrType) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return i.ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigWindowsUpdatePtrType) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigWindowsUpdatePtrOutput)
}

type PatchDeploymentPatchConfigWindowsUpdateOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigWindowsUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigWindowsUpdate)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ToPatchDeploymentPatchConfigWindowsUpdateOutput() PatchDeploymentPatchConfigWindowsUpdateOutput {
	return o
}

func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ToPatchDeploymentPatchConfigWindowsUpdateOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdateOutput {
	return o
}

func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o.ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigWindowsUpdate) *PatchDeploymentPatchConfigWindowsUpdate {
		return &v
	}).(PatchDeploymentPatchConfigWindowsUpdatePtrOutput)
}

// Only apply updates of these windows update classifications. If empty, all updates are applied.
// Each value may be one of `CRITICAL`, `SECURITY`, `DEFINITION`, `DRIVER`, `FEATURE_PACK`, `SERVICE_PACK`, `TOOL`, `UPDATE_ROLLUP`, and `UPDATE`.
func (o PatchDeploymentPatchConfigWindowsUpdateOutput) Classifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigWindowsUpdate) []string { return v.Classifications }).(pulumi.StringArrayOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigWindowsUpdateOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigWindowsUpdate) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// An exclusive list of kbs to be updated. These are the only patches that will be updated.
// This field must not be used with other patch configurations.
func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ExclusivePatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigWindowsUpdate) []string { return v.ExclusivePatches }).(pulumi.StringArrayOutput)
}

type PatchDeploymentPatchConfigWindowsUpdatePtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigWindowsUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigWindowsUpdate)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) Elem() PatchDeploymentPatchConfigWindowsUpdateOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigWindowsUpdate) PatchDeploymentPatchConfigWindowsUpdate {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigWindowsUpdate
		return ret
	}).(PatchDeploymentPatchConfigWindowsUpdateOutput)
}

// Only apply updates of these windows update classifications. If empty, all updates are applied.
// Each value may be one of `CRITICAL`, `SECURITY`, `DEFINITION`, `DRIVER`, `FEATURE_PACK`, `SERVICE_PACK`, `TOOL`, `UPDATE_ROLLUP`, and `UPDATE`.
func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) Classifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigWindowsUpdate) []string {
		if v == nil {
			return nil
		}
		return v.Classifications
	}).(pulumi.StringArrayOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigWindowsUpdate) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// An exclusive list of kbs to be updated. These are the only patches that will be updated.
// This field must not be used with other patch configurations.
func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) ExclusivePatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigWindowsUpdate) []string {
		if v == nil {
			return nil
		}
		return v.ExclusivePatches
	}).(pulumi.StringArrayOutput)
}

type PatchDeploymentPatchConfigYum struct {
	// List of KBs to exclude from update.
	Excludes []string `pulumi:"excludes"`
	// An exclusive list of packages to be updated. These are the only packages that will be updated.
	// If these packages are not installed, they will be ignored. This field cannot be specified with
	// any other patch configuration fields.
	ExclusivePackages []string `pulumi:"exclusivePackages"`
	// Will cause patch to run yum update-minimal instead.
	Minimal *bool `pulumi:"minimal"`
	// Adds the --security flag to yum update. Not supported on all platforms.
	Security *bool `pulumi:"security"`
}

// PatchDeploymentPatchConfigYumInput is an input type that accepts PatchDeploymentPatchConfigYumArgs and PatchDeploymentPatchConfigYumOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigYumInput` via:
//
//	PatchDeploymentPatchConfigYumArgs{...}
type PatchDeploymentPatchConfigYumInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigYumOutput() PatchDeploymentPatchConfigYumOutput
	ToPatchDeploymentPatchConfigYumOutputWithContext(context.Context) PatchDeploymentPatchConfigYumOutput
}

type PatchDeploymentPatchConfigYumArgs struct {
	// List of KBs to exclude from update.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// An exclusive list of packages to be updated. These are the only packages that will be updated.
	// If these packages are not installed, they will be ignored. This field cannot be specified with
	// any other patch configuration fields.
	ExclusivePackages pulumi.StringArrayInput `pulumi:"exclusivePackages"`
	// Will cause patch to run yum update-minimal instead.
	Minimal pulumi.BoolPtrInput `pulumi:"minimal"`
	// Adds the --security flag to yum update. Not supported on all platforms.
	Security pulumi.BoolPtrInput `pulumi:"security"`
}

func (PatchDeploymentPatchConfigYumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigYum)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigYumArgs) ToPatchDeploymentPatchConfigYumOutput() PatchDeploymentPatchConfigYumOutput {
	return i.ToPatchDeploymentPatchConfigYumOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigYumArgs) ToPatchDeploymentPatchConfigYumOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigYumOutput)
}

func (i PatchDeploymentPatchConfigYumArgs) ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput {
	return i.ToPatchDeploymentPatchConfigYumPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigYumArgs) ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigYumOutput).ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigYumPtrInput is an input type that accepts PatchDeploymentPatchConfigYumArgs, PatchDeploymentPatchConfigYumPtr and PatchDeploymentPatchConfigYumPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigYumPtrInput` via:
//
//	        PatchDeploymentPatchConfigYumArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigYumPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput
	ToPatchDeploymentPatchConfigYumPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigYumPtrOutput
}

type patchDeploymentPatchConfigYumPtrType PatchDeploymentPatchConfigYumArgs

func PatchDeploymentPatchConfigYumPtr(v *PatchDeploymentPatchConfigYumArgs) PatchDeploymentPatchConfigYumPtrInput {
	return (*patchDeploymentPatchConfigYumPtrType)(v)
}

func (*patchDeploymentPatchConfigYumPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigYum)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigYumPtrType) ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput {
	return i.ToPatchDeploymentPatchConfigYumPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigYumPtrType) ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigYumPtrOutput)
}

type PatchDeploymentPatchConfigYumOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigYumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigYum)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigYumOutput) ToPatchDeploymentPatchConfigYumOutput() PatchDeploymentPatchConfigYumOutput {
	return o
}

func (o PatchDeploymentPatchConfigYumOutput) ToPatchDeploymentPatchConfigYumOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumOutput {
	return o
}

func (o PatchDeploymentPatchConfigYumOutput) ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput {
	return o.ToPatchDeploymentPatchConfigYumPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigYumOutput) ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigYum) *PatchDeploymentPatchConfigYum {
		return &v
	}).(PatchDeploymentPatchConfigYumPtrOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigYumOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigYum) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// An exclusive list of packages to be updated. These are the only packages that will be updated.
// If these packages are not installed, they will be ignored. This field cannot be specified with
// any other patch configuration fields.
func (o PatchDeploymentPatchConfigYumOutput) ExclusivePackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigYum) []string { return v.ExclusivePackages }).(pulumi.StringArrayOutput)
}

// Will cause patch to run yum update-minimal instead.
func (o PatchDeploymentPatchConfigYumOutput) Minimal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigYum) *bool { return v.Minimal }).(pulumi.BoolPtrOutput)
}

// Adds the --security flag to yum update. Not supported on all platforms.
func (o PatchDeploymentPatchConfigYumOutput) Security() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigYum) *bool { return v.Security }).(pulumi.BoolPtrOutput)
}

type PatchDeploymentPatchConfigYumPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigYumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigYum)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigYumPtrOutput) ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigYumPtrOutput) ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigYumPtrOutput) Elem() PatchDeploymentPatchConfigYumOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) PatchDeploymentPatchConfigYum {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigYum
		return ret
	}).(PatchDeploymentPatchConfigYumOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigYumPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// An exclusive list of packages to be updated. These are the only packages that will be updated.
// If these packages are not installed, they will be ignored. This field cannot be specified with
// any other patch configuration fields.
func (o PatchDeploymentPatchConfigYumPtrOutput) ExclusivePackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) []string {
		if v == nil {
			return nil
		}
		return v.ExclusivePackages
	}).(pulumi.StringArrayOutput)
}

// Will cause patch to run yum update-minimal instead.
func (o PatchDeploymentPatchConfigYumPtrOutput) Minimal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) *bool {
		if v == nil {
			return nil
		}
		return v.Minimal
	}).(pulumi.BoolPtrOutput)
}

// Adds the --security flag to yum update. Not supported on all platforms.
func (o PatchDeploymentPatchConfigYumPtrOutput) Security() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) *bool {
		if v == nil {
			return nil
		}
		return v.Security
	}).(pulumi.BoolPtrOutput)
}

type PatchDeploymentPatchConfigZypper struct {
	// Install only patches with these categories. Common categories include security, recommended, and feature.
	Categories []string `pulumi:"categories"`
	// List of KBs to exclude from update.
	Excludes []string `pulumi:"excludes"`
	// An exclusive list of kbs to be updated. These are the only patches that will be updated.
	// This field must not be used with other patch configurations.
	ExclusivePatches []string `pulumi:"exclusivePatches"`
	// Install only patches with these severities. Common severities include critical, important, moderate, and low.
	Severities []string `pulumi:"severities"`
	// Adds the --with-optional flag to zypper patch.
	WithOptional *bool `pulumi:"withOptional"`
	// Adds the --with-update flag, to zypper patch.
	WithUpdate *bool `pulumi:"withUpdate"`
}

// PatchDeploymentPatchConfigZypperInput is an input type that accepts PatchDeploymentPatchConfigZypperArgs and PatchDeploymentPatchConfigZypperOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigZypperInput` via:
//
//	PatchDeploymentPatchConfigZypperArgs{...}
type PatchDeploymentPatchConfigZypperInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigZypperOutput() PatchDeploymentPatchConfigZypperOutput
	ToPatchDeploymentPatchConfigZypperOutputWithContext(context.Context) PatchDeploymentPatchConfigZypperOutput
}

type PatchDeploymentPatchConfigZypperArgs struct {
	// Install only patches with these categories. Common categories include security, recommended, and feature.
	Categories pulumi.StringArrayInput `pulumi:"categories"`
	// List of KBs to exclude from update.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// An exclusive list of kbs to be updated. These are the only patches that will be updated.
	// This field must not be used with other patch configurations.
	ExclusivePatches pulumi.StringArrayInput `pulumi:"exclusivePatches"`
	// Install only patches with these severities. Common severities include critical, important, moderate, and low.
	Severities pulumi.StringArrayInput `pulumi:"severities"`
	// Adds the --with-optional flag to zypper patch.
	WithOptional pulumi.BoolPtrInput `pulumi:"withOptional"`
	// Adds the --with-update flag, to zypper patch.
	WithUpdate pulumi.BoolPtrInput `pulumi:"withUpdate"`
}

func (PatchDeploymentPatchConfigZypperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigZypper)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigZypperArgs) ToPatchDeploymentPatchConfigZypperOutput() PatchDeploymentPatchConfigZypperOutput {
	return i.ToPatchDeploymentPatchConfigZypperOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigZypperArgs) ToPatchDeploymentPatchConfigZypperOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigZypperOutput)
}

func (i PatchDeploymentPatchConfigZypperArgs) ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput {
	return i.ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigZypperArgs) ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigZypperOutput).ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigZypperPtrInput is an input type that accepts PatchDeploymentPatchConfigZypperArgs, PatchDeploymentPatchConfigZypperPtr and PatchDeploymentPatchConfigZypperPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigZypperPtrInput` via:
//
//	        PatchDeploymentPatchConfigZypperArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentPatchConfigZypperPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput
	ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigZypperPtrOutput
}

type patchDeploymentPatchConfigZypperPtrType PatchDeploymentPatchConfigZypperArgs

func PatchDeploymentPatchConfigZypperPtr(v *PatchDeploymentPatchConfigZypperArgs) PatchDeploymentPatchConfigZypperPtrInput {
	return (*patchDeploymentPatchConfigZypperPtrType)(v)
}

func (*patchDeploymentPatchConfigZypperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigZypper)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigZypperPtrType) ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput {
	return i.ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigZypperPtrType) ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigZypperPtrOutput)
}

type PatchDeploymentPatchConfigZypperOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigZypperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigZypper)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigZypperOutput) ToPatchDeploymentPatchConfigZypperOutput() PatchDeploymentPatchConfigZypperOutput {
	return o
}

func (o PatchDeploymentPatchConfigZypperOutput) ToPatchDeploymentPatchConfigZypperOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperOutput {
	return o
}

func (o PatchDeploymentPatchConfigZypperOutput) ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput {
	return o.ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigZypperOutput) ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentPatchConfigZypper) *PatchDeploymentPatchConfigZypper {
		return &v
	}).(PatchDeploymentPatchConfigZypperPtrOutput)
}

// Install only patches with these categories. Common categories include security, recommended, and feature.
func (o PatchDeploymentPatchConfigZypperOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigZypperOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// An exclusive list of kbs to be updated. These are the only patches that will be updated.
// This field must not be used with other patch configurations.
func (o PatchDeploymentPatchConfigZypperOutput) ExclusivePatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) []string { return v.ExclusivePatches }).(pulumi.StringArrayOutput)
}

// Install only patches with these severities. Common severities include critical, important, moderate, and low.
func (o PatchDeploymentPatchConfigZypperOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) []string { return v.Severities }).(pulumi.StringArrayOutput)
}

// Adds the --with-optional flag to zypper patch.
func (o PatchDeploymentPatchConfigZypperOutput) WithOptional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) *bool { return v.WithOptional }).(pulumi.BoolPtrOutput)
}

// Adds the --with-update flag, to zypper patch.
func (o PatchDeploymentPatchConfigZypperOutput) WithUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) *bool { return v.WithUpdate }).(pulumi.BoolPtrOutput)
}

type PatchDeploymentPatchConfigZypperPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigZypperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigZypper)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigZypperPtrOutput) ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigZypperPtrOutput) ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigZypperPtrOutput) Elem() PatchDeploymentPatchConfigZypperOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) PatchDeploymentPatchConfigZypper {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentPatchConfigZypper
		return ret
	}).(PatchDeploymentPatchConfigZypperOutput)
}

// Install only patches with these categories. Common categories include security, recommended, and feature.
func (o PatchDeploymentPatchConfigZypperPtrOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) []string {
		if v == nil {
			return nil
		}
		return v.Categories
	}).(pulumi.StringArrayOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigZypperPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// An exclusive list of kbs to be updated. These are the only patches that will be updated.
// This field must not be used with other patch configurations.
func (o PatchDeploymentPatchConfigZypperPtrOutput) ExclusivePatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) []string {
		if v == nil {
			return nil
		}
		return v.ExclusivePatches
	}).(pulumi.StringArrayOutput)
}

// Install only patches with these severities. Common severities include critical, important, moderate, and low.
func (o PatchDeploymentPatchConfigZypperPtrOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) []string {
		if v == nil {
			return nil
		}
		return v.Severities
	}).(pulumi.StringArrayOutput)
}

// Adds the --with-optional flag to zypper patch.
func (o PatchDeploymentPatchConfigZypperPtrOutput) WithOptional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) *bool {
		if v == nil {
			return nil
		}
		return v.WithOptional
	}).(pulumi.BoolPtrOutput)
}

// Adds the --with-update flag, to zypper patch.
func (o PatchDeploymentPatchConfigZypperPtrOutput) WithUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) *bool {
		if v == nil {
			return nil
		}
		return v.WithUpdate
	}).(pulumi.BoolPtrOutput)
}

type PatchDeploymentRecurringSchedule struct {
	// The end time at which a recurring patch deployment schedule is no longer active.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	EndTime *string `pulumi:"endTime"`
	// -
	// The time the last patch job ran successfully.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	LastExecuteTime *string `pulumi:"lastExecuteTime"`
	// Schedule with monthly executions.
	// Structure is documented below.
	Monthly *PatchDeploymentRecurringScheduleMonthly `pulumi:"monthly"`
	// -
	// The time the next patch job is scheduled to run.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	NextExecuteTime *string `pulumi:"nextExecuteTime"`
	// The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	StartTime *string `pulumi:"startTime"`
	// Time of the day to run a recurring deployment.
	// Structure is documented below.
	TimeOfDay PatchDeploymentRecurringScheduleTimeOfDay `pulumi:"timeOfDay"`
	// Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
	// determined by the chosen time zone.
	// Structure is documented below.
	TimeZone PatchDeploymentRecurringScheduleTimeZone `pulumi:"timeZone"`
	// Schedule with weekly executions.
	// Structure is documented below.
	Weekly *PatchDeploymentRecurringScheduleWeekly `pulumi:"weekly"`
}

// PatchDeploymentRecurringScheduleInput is an input type that accepts PatchDeploymentRecurringScheduleArgs and PatchDeploymentRecurringScheduleOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleInput` via:
//
//	PatchDeploymentRecurringScheduleArgs{...}
type PatchDeploymentRecurringScheduleInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleOutput() PatchDeploymentRecurringScheduleOutput
	ToPatchDeploymentRecurringScheduleOutputWithContext(context.Context) PatchDeploymentRecurringScheduleOutput
}

type PatchDeploymentRecurringScheduleArgs struct {
	// The end time at which a recurring patch deployment schedule is no longer active.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// -
	// The time the last patch job ran successfully.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	LastExecuteTime pulumi.StringPtrInput `pulumi:"lastExecuteTime"`
	// Schedule with monthly executions.
	// Structure is documented below.
	Monthly PatchDeploymentRecurringScheduleMonthlyPtrInput `pulumi:"monthly"`
	// -
	// The time the next patch job is scheduled to run.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	NextExecuteTime pulumi.StringPtrInput `pulumi:"nextExecuteTime"`
	// The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Time of the day to run a recurring deployment.
	// Structure is documented below.
	TimeOfDay PatchDeploymentRecurringScheduleTimeOfDayInput `pulumi:"timeOfDay"`
	// Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
	// determined by the chosen time zone.
	// Structure is documented below.
	TimeZone PatchDeploymentRecurringScheduleTimeZoneInput `pulumi:"timeZone"`
	// Schedule with weekly executions.
	// Structure is documented below.
	Weekly PatchDeploymentRecurringScheduleWeeklyPtrInput `pulumi:"weekly"`
}

func (PatchDeploymentRecurringScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringSchedule)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleArgs) ToPatchDeploymentRecurringScheduleOutput() PatchDeploymentRecurringScheduleOutput {
	return i.ToPatchDeploymentRecurringScheduleOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleArgs) ToPatchDeploymentRecurringScheduleOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleOutput)
}

func (i PatchDeploymentRecurringScheduleArgs) ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput {
	return i.ToPatchDeploymentRecurringSchedulePtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleArgs) ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleOutput).ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringSchedulePtrInput is an input type that accepts PatchDeploymentRecurringScheduleArgs, PatchDeploymentRecurringSchedulePtr and PatchDeploymentRecurringSchedulePtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringSchedulePtrInput` via:
//
//	        PatchDeploymentRecurringScheduleArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentRecurringSchedulePtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput
	ToPatchDeploymentRecurringSchedulePtrOutputWithContext(context.Context) PatchDeploymentRecurringSchedulePtrOutput
}

type patchDeploymentRecurringSchedulePtrType PatchDeploymentRecurringScheduleArgs

func PatchDeploymentRecurringSchedulePtr(v *PatchDeploymentRecurringScheduleArgs) PatchDeploymentRecurringSchedulePtrInput {
	return (*patchDeploymentRecurringSchedulePtrType)(v)
}

func (*patchDeploymentRecurringSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringSchedule)(nil)).Elem()
}

func (i *patchDeploymentRecurringSchedulePtrType) ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput {
	return i.ToPatchDeploymentRecurringSchedulePtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringSchedulePtrType) ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringSchedulePtrOutput)
}

type PatchDeploymentRecurringScheduleOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringSchedule)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleOutput) ToPatchDeploymentRecurringScheduleOutput() PatchDeploymentRecurringScheduleOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleOutput) ToPatchDeploymentRecurringScheduleOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleOutput) ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput {
	return o.ToPatchDeploymentRecurringSchedulePtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleOutput) ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringSchedule {
		return &v
	}).(PatchDeploymentRecurringSchedulePtrOutput)
}

// The end time at which a recurring patch deployment schedule is no longer active.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// -
// The time the last patch job ran successfully.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringScheduleOutput) LastExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *string { return v.LastExecuteTime }).(pulumi.StringPtrOutput)
}

// Schedule with monthly executions.
// Structure is documented below.
func (o PatchDeploymentRecurringScheduleOutput) Monthly() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleMonthly { return v.Monthly }).(PatchDeploymentRecurringScheduleMonthlyPtrOutput)
}

// -
// The time the next patch job is scheduled to run.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringScheduleOutput) NextExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *string { return v.NextExecuteTime }).(pulumi.StringPtrOutput)
}

// The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Time of the day to run a recurring deployment.
// Structure is documented below.
func (o PatchDeploymentRecurringScheduleOutput) TimeOfDay() PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) PatchDeploymentRecurringScheduleTimeOfDay { return v.TimeOfDay }).(PatchDeploymentRecurringScheduleTimeOfDayOutput)
}

// Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
// determined by the chosen time zone.
// Structure is documented below.
func (o PatchDeploymentRecurringScheduleOutput) TimeZone() PatchDeploymentRecurringScheduleTimeZoneOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) PatchDeploymentRecurringScheduleTimeZone { return v.TimeZone }).(PatchDeploymentRecurringScheduleTimeZoneOutput)
}

// Schedule with weekly executions.
// Structure is documented below.
func (o PatchDeploymentRecurringScheduleOutput) Weekly() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleWeekly { return v.Weekly }).(PatchDeploymentRecurringScheduleWeeklyPtrOutput)
}

type PatchDeploymentRecurringSchedulePtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringSchedule)(nil)).Elem()
}

func (o PatchDeploymentRecurringSchedulePtrOutput) ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput {
	return o
}

func (o PatchDeploymentRecurringSchedulePtrOutput) ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringSchedulePtrOutput {
	return o
}

func (o PatchDeploymentRecurringSchedulePtrOutput) Elem() PatchDeploymentRecurringScheduleOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) PatchDeploymentRecurringSchedule {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentRecurringSchedule
		return ret
	}).(PatchDeploymentRecurringScheduleOutput)
}

// The end time at which a recurring patch deployment schedule is no longer active.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringSchedulePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// -
// The time the last patch job ran successfully.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringSchedulePtrOutput) LastExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *string {
		if v == nil {
			return nil
		}
		return v.LastExecuteTime
	}).(pulumi.StringPtrOutput)
}

// Schedule with monthly executions.
// Structure is documented below.
func (o PatchDeploymentRecurringSchedulePtrOutput) Monthly() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleMonthly {
		if v == nil {
			return nil
		}
		return v.Monthly
	}).(PatchDeploymentRecurringScheduleMonthlyPtrOutput)
}

// -
// The time the next patch job is scheduled to run.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringSchedulePtrOutput) NextExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *string {
		if v == nil {
			return nil
		}
		return v.NextExecuteTime
	}).(pulumi.StringPtrOutput)
}

// The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Time of the day to run a recurring deployment.
// Structure is documented below.
func (o PatchDeploymentRecurringSchedulePtrOutput) TimeOfDay() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleTimeOfDay {
		if v == nil {
			return nil
		}
		return &v.TimeOfDay
	}).(PatchDeploymentRecurringScheduleTimeOfDayPtrOutput)
}

// Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
// determined by the chosen time zone.
// Structure is documented below.
func (o PatchDeploymentRecurringSchedulePtrOutput) TimeZone() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleTimeZone {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(PatchDeploymentRecurringScheduleTimeZonePtrOutput)
}

// Schedule with weekly executions.
// Structure is documented below.
func (o PatchDeploymentRecurringSchedulePtrOutput) Weekly() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleWeekly {
		if v == nil {
			return nil
		}
		return v.Weekly
	}).(PatchDeploymentRecurringScheduleWeeklyPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthly struct {
	// One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month.
	// Months without the target day will be skipped. For example, a schedule to run "every month on the 31st"
	// will not run in February, April, June, etc.
	MonthDay *int `pulumi:"monthDay"`
	// Week day in a month.
	// Structure is documented below.
	WeekDayOfMonth *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth `pulumi:"weekDayOfMonth"`
}

// PatchDeploymentRecurringScheduleMonthlyInput is an input type that accepts PatchDeploymentRecurringScheduleMonthlyArgs and PatchDeploymentRecurringScheduleMonthlyOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleMonthlyInput` via:
//
//	PatchDeploymentRecurringScheduleMonthlyArgs{...}
type PatchDeploymentRecurringScheduleMonthlyInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleMonthlyOutput() PatchDeploymentRecurringScheduleMonthlyOutput
	ToPatchDeploymentRecurringScheduleMonthlyOutputWithContext(context.Context) PatchDeploymentRecurringScheduleMonthlyOutput
}

type PatchDeploymentRecurringScheduleMonthlyArgs struct {
	// One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month.
	// Months without the target day will be skipped. For example, a schedule to run "every month on the 31st"
	// will not run in February, April, June, etc.
	MonthDay pulumi.IntPtrInput `pulumi:"monthDay"`
	// Week day in a month.
	// Structure is documented below.
	WeekDayOfMonth PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput `pulumi:"weekDayOfMonth"`
}

func (PatchDeploymentRecurringScheduleMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthly)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleMonthlyArgs) ToPatchDeploymentRecurringScheduleMonthlyOutput() PatchDeploymentRecurringScheduleMonthlyOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleMonthlyArgs) ToPatchDeploymentRecurringScheduleMonthlyOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyOutput)
}

func (i PatchDeploymentRecurringScheduleMonthlyArgs) ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleMonthlyArgs) ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyOutput).ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleMonthlyPtrInput is an input type that accepts PatchDeploymentRecurringScheduleMonthlyArgs, PatchDeploymentRecurringScheduleMonthlyPtr and PatchDeploymentRecurringScheduleMonthlyPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleMonthlyPtrInput` via:
//
//	        PatchDeploymentRecurringScheduleMonthlyArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentRecurringScheduleMonthlyPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput
	ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput
}

type patchDeploymentRecurringScheduleMonthlyPtrType PatchDeploymentRecurringScheduleMonthlyArgs

func PatchDeploymentRecurringScheduleMonthlyPtr(v *PatchDeploymentRecurringScheduleMonthlyArgs) PatchDeploymentRecurringScheduleMonthlyPtrInput {
	return (*patchDeploymentRecurringScheduleMonthlyPtrType)(v)
}

func (*patchDeploymentRecurringScheduleMonthlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleMonthly)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleMonthlyPtrType) ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleMonthlyPtrType) ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthlyOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthly)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleMonthlyOutput) ToPatchDeploymentRecurringScheduleMonthlyOutput() PatchDeploymentRecurringScheduleMonthlyOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyOutput) ToPatchDeploymentRecurringScheduleMonthlyOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyOutput) ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o.ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleMonthlyOutput) ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentRecurringScheduleMonthly) *PatchDeploymentRecurringScheduleMonthly {
		return &v
	}).(PatchDeploymentRecurringScheduleMonthlyPtrOutput)
}

// One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month.
// Months without the target day will be skipped. For example, a schedule to run "every month on the 31st"
// will not run in February, April, June, etc.
func (o PatchDeploymentRecurringScheduleMonthlyOutput) MonthDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthly) *int { return v.MonthDay }).(pulumi.IntPtrOutput)
}

// Week day in a month.
// Structure is documented below.
func (o PatchDeploymentRecurringScheduleMonthlyOutput) WeekDayOfMonth() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthly) *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth {
		return v.WeekDayOfMonth
	}).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthlyPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleMonthlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleMonthly)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) Elem() PatchDeploymentRecurringScheduleMonthlyOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthly) PatchDeploymentRecurringScheduleMonthly {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentRecurringScheduleMonthly
		return ret
	}).(PatchDeploymentRecurringScheduleMonthlyOutput)
}

// One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month.
// Months without the target day will be skipped. For example, a schedule to run "every month on the 31st"
// will not run in February, April, June, etc.
func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) MonthDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthly) *int {
		if v == nil {
			return nil
		}
		return v.MonthDay
	}).(pulumi.IntPtrOutput)
}

// Week day in a month.
// Structure is documented below.
func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) WeekDayOfMonth() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthly) *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth {
		if v == nil {
			return nil
		}
		return v.WeekDayOfMonth
	}).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth struct {
	// A day of the week.
	// Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.
	WeekOrdinal int `pulumi:"weekOrdinal"`
}

// PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthInput is an input type that accepts PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs and PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthInput` via:
//
//	PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs{...}
type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput
	ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutputWithContext(context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput
}

type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs struct {
	// A day of the week.
	// Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.
	WeekOrdinal pulumi.IntInput `pulumi:"weekOrdinal"`
}

func (PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput)
}

func (i PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput).ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput is an input type that accepts PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs, PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtr and PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput` via:
//
//	        PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput
	ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput
}

type patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs

func PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtr(v *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput {
	return (*patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType)(v)
}

func (*patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o.ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth {
		return &v
	}).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput)
}

// A day of the week.
// Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.
func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) WeekOrdinal() pulumi.IntOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) int { return v.WeekOrdinal }).(pulumi.IntOutput)
}

type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) Elem() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth
		return ret
	}).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput)
}

// A day of the week.
// Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.
func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) WeekOrdinal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) *int {
		if v == nil {
			return nil
		}
		return &v.WeekOrdinal
	}).(pulumi.IntPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeOfDay struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// PatchDeploymentRecurringScheduleTimeOfDayInput is an input type that accepts PatchDeploymentRecurringScheduleTimeOfDayArgs and PatchDeploymentRecurringScheduleTimeOfDayOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleTimeOfDayInput` via:
//
//	PatchDeploymentRecurringScheduleTimeOfDayArgs{...}
type PatchDeploymentRecurringScheduleTimeOfDayInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleTimeOfDayOutput() PatchDeploymentRecurringScheduleTimeOfDayOutput
	ToPatchDeploymentRecurringScheduleTimeOfDayOutputWithContext(context.Context) PatchDeploymentRecurringScheduleTimeOfDayOutput
}

type PatchDeploymentRecurringScheduleTimeOfDayArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (PatchDeploymentRecurringScheduleTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeOfDay)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleTimeOfDayArgs) ToPatchDeploymentRecurringScheduleTimeOfDayOutput() PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeOfDayOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleTimeOfDayArgs) ToPatchDeploymentRecurringScheduleTimeOfDayOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeOfDayOutput)
}

func (i PatchDeploymentRecurringScheduleTimeOfDayArgs) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleTimeOfDayArgs) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeOfDayOutput).ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleTimeOfDayPtrInput is an input type that accepts PatchDeploymentRecurringScheduleTimeOfDayArgs, PatchDeploymentRecurringScheduleTimeOfDayPtr and PatchDeploymentRecurringScheduleTimeOfDayPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleTimeOfDayPtrInput` via:
//
//	        PatchDeploymentRecurringScheduleTimeOfDayArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentRecurringScheduleTimeOfDayPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput
	ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput
}

type patchDeploymentRecurringScheduleTimeOfDayPtrType PatchDeploymentRecurringScheduleTimeOfDayArgs

func PatchDeploymentRecurringScheduleTimeOfDayPtr(v *PatchDeploymentRecurringScheduleTimeOfDayArgs) PatchDeploymentRecurringScheduleTimeOfDayPtrInput {
	return (*patchDeploymentRecurringScheduleTimeOfDayPtrType)(v)
}

func (*patchDeploymentRecurringScheduleTimeOfDayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleTimeOfDay)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleTimeOfDayPtrType) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleTimeOfDayPtrType) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeOfDayPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeOfDayOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeOfDay)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) ToPatchDeploymentRecurringScheduleTimeOfDayOutput() PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) ToPatchDeploymentRecurringScheduleTimeOfDayOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o.ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentRecurringScheduleTimeOfDay) *PatchDeploymentRecurringScheduleTimeOfDay {
		return &v
	}).(PatchDeploymentRecurringScheduleTimeOfDayPtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeOfDay) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeOfDayPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleTimeOfDay)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Elem() PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) PatchDeploymentRecurringScheduleTimeOfDay {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentRecurringScheduleTimeOfDay
		return ret
	}).(PatchDeploymentRecurringScheduleTimeOfDayOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Nanos
	}).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Seconds
	}).(pulumi.IntPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeZone struct {
	// IANA Time Zone Database time zone, e.g. "America/New_York".
	Id string `pulumi:"id"`
	// IANA Time Zone Database version number, e.g. "2019a".
	Version *string `pulumi:"version"`
}

// PatchDeploymentRecurringScheduleTimeZoneInput is an input type that accepts PatchDeploymentRecurringScheduleTimeZoneArgs and PatchDeploymentRecurringScheduleTimeZoneOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleTimeZoneInput` via:
//
//	PatchDeploymentRecurringScheduleTimeZoneArgs{...}
type PatchDeploymentRecurringScheduleTimeZoneInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleTimeZoneOutput() PatchDeploymentRecurringScheduleTimeZoneOutput
	ToPatchDeploymentRecurringScheduleTimeZoneOutputWithContext(context.Context) PatchDeploymentRecurringScheduleTimeZoneOutput
}

type PatchDeploymentRecurringScheduleTimeZoneArgs struct {
	// IANA Time Zone Database time zone, e.g. "America/New_York".
	Id pulumi.StringInput `pulumi:"id"`
	// IANA Time Zone Database version number, e.g. "2019a".
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PatchDeploymentRecurringScheduleTimeZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeZone)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleTimeZoneArgs) ToPatchDeploymentRecurringScheduleTimeZoneOutput() PatchDeploymentRecurringScheduleTimeZoneOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeZoneOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleTimeZoneArgs) ToPatchDeploymentRecurringScheduleTimeZoneOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeZoneOutput)
}

func (i PatchDeploymentRecurringScheduleTimeZoneArgs) ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleTimeZoneArgs) ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeZoneOutput).ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleTimeZonePtrInput is an input type that accepts PatchDeploymentRecurringScheduleTimeZoneArgs, PatchDeploymentRecurringScheduleTimeZonePtr and PatchDeploymentRecurringScheduleTimeZonePtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleTimeZonePtrInput` via:
//
//	        PatchDeploymentRecurringScheduleTimeZoneArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentRecurringScheduleTimeZonePtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput
	ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput
}

type patchDeploymentRecurringScheduleTimeZonePtrType PatchDeploymentRecurringScheduleTimeZoneArgs

func PatchDeploymentRecurringScheduleTimeZonePtr(v *PatchDeploymentRecurringScheduleTimeZoneArgs) PatchDeploymentRecurringScheduleTimeZonePtrInput {
	return (*patchDeploymentRecurringScheduleTimeZonePtrType)(v)
}

func (*patchDeploymentRecurringScheduleTimeZonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleTimeZone)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleTimeZonePtrType) ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleTimeZonePtrType) ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeZonePtrOutput)
}

type PatchDeploymentRecurringScheduleTimeZoneOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleTimeZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeZone)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleTimeZoneOutput) ToPatchDeploymentRecurringScheduleTimeZoneOutput() PatchDeploymentRecurringScheduleTimeZoneOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeZoneOutput) ToPatchDeploymentRecurringScheduleTimeZoneOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZoneOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeZoneOutput) ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o.ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleTimeZoneOutput) ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentRecurringScheduleTimeZone) *PatchDeploymentRecurringScheduleTimeZone {
		return &v
	}).(PatchDeploymentRecurringScheduleTimeZonePtrOutput)
}

// IANA Time Zone Database time zone, e.g. "America/New_York".
func (o PatchDeploymentRecurringScheduleTimeZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeZone) string { return v.Id }).(pulumi.StringOutput)
}

// IANA Time Zone Database version number, e.g. "2019a".
func (o PatchDeploymentRecurringScheduleTimeZoneOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeZone) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeZonePtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleTimeZonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleTimeZone)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) Elem() PatchDeploymentRecurringScheduleTimeZoneOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeZone) PatchDeploymentRecurringScheduleTimeZone {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentRecurringScheduleTimeZone
		return ret
	}).(PatchDeploymentRecurringScheduleTimeZoneOutput)
}

// IANA Time Zone Database time zone, e.g. "America/New_York".
func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeZone) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// IANA Time Zone Database version number, e.g. "2019a".
func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeZone) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentRecurringScheduleWeekly struct {
	// A day of the week.
	// Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
	DayOfWeek string `pulumi:"dayOfWeek"`
}

// PatchDeploymentRecurringScheduleWeeklyInput is an input type that accepts PatchDeploymentRecurringScheduleWeeklyArgs and PatchDeploymentRecurringScheduleWeeklyOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleWeeklyInput` via:
//
//	PatchDeploymentRecurringScheduleWeeklyArgs{...}
type PatchDeploymentRecurringScheduleWeeklyInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleWeeklyOutput() PatchDeploymentRecurringScheduleWeeklyOutput
	ToPatchDeploymentRecurringScheduleWeeklyOutputWithContext(context.Context) PatchDeploymentRecurringScheduleWeeklyOutput
}

type PatchDeploymentRecurringScheduleWeeklyArgs struct {
	// A day of the week.
	// Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
}

func (PatchDeploymentRecurringScheduleWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleWeekly)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleWeeklyArgs) ToPatchDeploymentRecurringScheduleWeeklyOutput() PatchDeploymentRecurringScheduleWeeklyOutput {
	return i.ToPatchDeploymentRecurringScheduleWeeklyOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleWeeklyArgs) ToPatchDeploymentRecurringScheduleWeeklyOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleWeeklyOutput)
}

func (i PatchDeploymentRecurringScheduleWeeklyArgs) ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleWeeklyArgs) ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleWeeklyOutput).ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleWeeklyPtrInput is an input type that accepts PatchDeploymentRecurringScheduleWeeklyArgs, PatchDeploymentRecurringScheduleWeeklyPtr and PatchDeploymentRecurringScheduleWeeklyPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleWeeklyPtrInput` via:
//
//	        PatchDeploymentRecurringScheduleWeeklyArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentRecurringScheduleWeeklyPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput
	ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput
}

type patchDeploymentRecurringScheduleWeeklyPtrType PatchDeploymentRecurringScheduleWeeklyArgs

func PatchDeploymentRecurringScheduleWeeklyPtr(v *PatchDeploymentRecurringScheduleWeeklyArgs) PatchDeploymentRecurringScheduleWeeklyPtrInput {
	return (*patchDeploymentRecurringScheduleWeeklyPtrType)(v)
}

func (*patchDeploymentRecurringScheduleWeeklyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleWeekly)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleWeeklyPtrType) ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleWeeklyPtrType) ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleWeeklyPtrOutput)
}

type PatchDeploymentRecurringScheduleWeeklyOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleWeekly)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleWeeklyOutput) ToPatchDeploymentRecurringScheduleWeeklyOutput() PatchDeploymentRecurringScheduleWeeklyOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleWeeklyOutput) ToPatchDeploymentRecurringScheduleWeeklyOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleWeeklyOutput) ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o.ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleWeeklyOutput) ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentRecurringScheduleWeekly) *PatchDeploymentRecurringScheduleWeekly {
		return &v
	}).(PatchDeploymentRecurringScheduleWeeklyPtrOutput)
}

// A day of the week.
// Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
func (o PatchDeploymentRecurringScheduleWeeklyOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleWeekly) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

type PatchDeploymentRecurringScheduleWeeklyPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleWeeklyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleWeekly)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleWeeklyPtrOutput) ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleWeeklyPtrOutput) ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleWeeklyPtrOutput) Elem() PatchDeploymentRecurringScheduleWeeklyOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleWeekly) PatchDeploymentRecurringScheduleWeekly {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentRecurringScheduleWeekly
		return ret
	}).(PatchDeploymentRecurringScheduleWeeklyOutput)
}

// A day of the week.
// Possible values are `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, and `SUNDAY`.
func (o PatchDeploymentRecurringScheduleWeeklyPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleWeekly) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentRollout struct {
	// The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up.
	// During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps.
	// A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget.
	// For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone.
	// For example, if the disruption budget has a fixed value of 10, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.
	// Structure is documented below.
	DisruptionBudget PatchDeploymentRolloutDisruptionBudget `pulumi:"disruptionBudget"`
	// Mode of the patch rollout.
	// Possible values are `ZONE_BY_ZONE` and `CONCURRENT_ZONES`.
	Mode string `pulumi:"mode"`
}

// PatchDeploymentRolloutInput is an input type that accepts PatchDeploymentRolloutArgs and PatchDeploymentRolloutOutput values.
// You can construct a concrete instance of `PatchDeploymentRolloutInput` via:
//
//	PatchDeploymentRolloutArgs{...}
type PatchDeploymentRolloutInput interface {
	pulumi.Input

	ToPatchDeploymentRolloutOutput() PatchDeploymentRolloutOutput
	ToPatchDeploymentRolloutOutputWithContext(context.Context) PatchDeploymentRolloutOutput
}

type PatchDeploymentRolloutArgs struct {
	// The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up.
	// During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps.
	// A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget.
	// For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone.
	// For example, if the disruption budget has a fixed value of 10, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.
	// Structure is documented below.
	DisruptionBudget PatchDeploymentRolloutDisruptionBudgetInput `pulumi:"disruptionBudget"`
	// Mode of the patch rollout.
	// Possible values are `ZONE_BY_ZONE` and `CONCURRENT_ZONES`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (PatchDeploymentRolloutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRollout)(nil)).Elem()
}

func (i PatchDeploymentRolloutArgs) ToPatchDeploymentRolloutOutput() PatchDeploymentRolloutOutput {
	return i.ToPatchDeploymentRolloutOutputWithContext(context.Background())
}

func (i PatchDeploymentRolloutArgs) ToPatchDeploymentRolloutOutputWithContext(ctx context.Context) PatchDeploymentRolloutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRolloutOutput)
}

func (i PatchDeploymentRolloutArgs) ToPatchDeploymentRolloutPtrOutput() PatchDeploymentRolloutPtrOutput {
	return i.ToPatchDeploymentRolloutPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRolloutArgs) ToPatchDeploymentRolloutPtrOutputWithContext(ctx context.Context) PatchDeploymentRolloutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRolloutOutput).ToPatchDeploymentRolloutPtrOutputWithContext(ctx)
}

// PatchDeploymentRolloutPtrInput is an input type that accepts PatchDeploymentRolloutArgs, PatchDeploymentRolloutPtr and PatchDeploymentRolloutPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRolloutPtrInput` via:
//
//	        PatchDeploymentRolloutArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentRolloutPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRolloutPtrOutput() PatchDeploymentRolloutPtrOutput
	ToPatchDeploymentRolloutPtrOutputWithContext(context.Context) PatchDeploymentRolloutPtrOutput
}

type patchDeploymentRolloutPtrType PatchDeploymentRolloutArgs

func PatchDeploymentRolloutPtr(v *PatchDeploymentRolloutArgs) PatchDeploymentRolloutPtrInput {
	return (*patchDeploymentRolloutPtrType)(v)
}

func (*patchDeploymentRolloutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRollout)(nil)).Elem()
}

func (i *patchDeploymentRolloutPtrType) ToPatchDeploymentRolloutPtrOutput() PatchDeploymentRolloutPtrOutput {
	return i.ToPatchDeploymentRolloutPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRolloutPtrType) ToPatchDeploymentRolloutPtrOutputWithContext(ctx context.Context) PatchDeploymentRolloutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRolloutPtrOutput)
}

type PatchDeploymentRolloutOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRolloutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRollout)(nil)).Elem()
}

func (o PatchDeploymentRolloutOutput) ToPatchDeploymentRolloutOutput() PatchDeploymentRolloutOutput {
	return o
}

func (o PatchDeploymentRolloutOutput) ToPatchDeploymentRolloutOutputWithContext(ctx context.Context) PatchDeploymentRolloutOutput {
	return o
}

func (o PatchDeploymentRolloutOutput) ToPatchDeploymentRolloutPtrOutput() PatchDeploymentRolloutPtrOutput {
	return o.ToPatchDeploymentRolloutPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRolloutOutput) ToPatchDeploymentRolloutPtrOutputWithContext(ctx context.Context) PatchDeploymentRolloutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentRollout) *PatchDeploymentRollout {
		return &v
	}).(PatchDeploymentRolloutPtrOutput)
}

// The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up.
// During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps.
// A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget.
// For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone.
// For example, if the disruption budget has a fixed value of 10, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.
// Structure is documented below.
func (o PatchDeploymentRolloutOutput) DisruptionBudget() PatchDeploymentRolloutDisruptionBudgetOutput {
	return o.ApplyT(func(v PatchDeploymentRollout) PatchDeploymentRolloutDisruptionBudget { return v.DisruptionBudget }).(PatchDeploymentRolloutDisruptionBudgetOutput)
}

// Mode of the patch rollout.
// Possible values are `ZONE_BY_ZONE` and `CONCURRENT_ZONES`.
func (o PatchDeploymentRolloutOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentRollout) string { return v.Mode }).(pulumi.StringOutput)
}

type PatchDeploymentRolloutPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRolloutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRollout)(nil)).Elem()
}

func (o PatchDeploymentRolloutPtrOutput) ToPatchDeploymentRolloutPtrOutput() PatchDeploymentRolloutPtrOutput {
	return o
}

func (o PatchDeploymentRolloutPtrOutput) ToPatchDeploymentRolloutPtrOutputWithContext(ctx context.Context) PatchDeploymentRolloutPtrOutput {
	return o
}

func (o PatchDeploymentRolloutPtrOutput) Elem() PatchDeploymentRolloutOutput {
	return o.ApplyT(func(v *PatchDeploymentRollout) PatchDeploymentRollout {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentRollout
		return ret
	}).(PatchDeploymentRolloutOutput)
}

// The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up.
// During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps.
// A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget.
// For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone.
// For example, if the disruption budget has a fixed value of 10, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.
// Structure is documented below.
func (o PatchDeploymentRolloutPtrOutput) DisruptionBudget() PatchDeploymentRolloutDisruptionBudgetPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRollout) *PatchDeploymentRolloutDisruptionBudget {
		if v == nil {
			return nil
		}
		return &v.DisruptionBudget
	}).(PatchDeploymentRolloutDisruptionBudgetPtrOutput)
}

// Mode of the patch rollout.
// Possible values are `ZONE_BY_ZONE` and `CONCURRENT_ZONES`.
func (o PatchDeploymentRolloutPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRollout) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentRolloutDisruptionBudget struct {
	// Specifies a fixed value.
	Fixed *int `pulumi:"fixed"`
	// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
	Percentage *int `pulumi:"percentage"`
}

// PatchDeploymentRolloutDisruptionBudgetInput is an input type that accepts PatchDeploymentRolloutDisruptionBudgetArgs and PatchDeploymentRolloutDisruptionBudgetOutput values.
// You can construct a concrete instance of `PatchDeploymentRolloutDisruptionBudgetInput` via:
//
//	PatchDeploymentRolloutDisruptionBudgetArgs{...}
type PatchDeploymentRolloutDisruptionBudgetInput interface {
	pulumi.Input

	ToPatchDeploymentRolloutDisruptionBudgetOutput() PatchDeploymentRolloutDisruptionBudgetOutput
	ToPatchDeploymentRolloutDisruptionBudgetOutputWithContext(context.Context) PatchDeploymentRolloutDisruptionBudgetOutput
}

type PatchDeploymentRolloutDisruptionBudgetArgs struct {
	// Specifies a fixed value.
	Fixed pulumi.IntPtrInput `pulumi:"fixed"`
	// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
	Percentage pulumi.IntPtrInput `pulumi:"percentage"`
}

func (PatchDeploymentRolloutDisruptionBudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRolloutDisruptionBudget)(nil)).Elem()
}

func (i PatchDeploymentRolloutDisruptionBudgetArgs) ToPatchDeploymentRolloutDisruptionBudgetOutput() PatchDeploymentRolloutDisruptionBudgetOutput {
	return i.ToPatchDeploymentRolloutDisruptionBudgetOutputWithContext(context.Background())
}

func (i PatchDeploymentRolloutDisruptionBudgetArgs) ToPatchDeploymentRolloutDisruptionBudgetOutputWithContext(ctx context.Context) PatchDeploymentRolloutDisruptionBudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRolloutDisruptionBudgetOutput)
}

func (i PatchDeploymentRolloutDisruptionBudgetArgs) ToPatchDeploymentRolloutDisruptionBudgetPtrOutput() PatchDeploymentRolloutDisruptionBudgetPtrOutput {
	return i.ToPatchDeploymentRolloutDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRolloutDisruptionBudgetArgs) ToPatchDeploymentRolloutDisruptionBudgetPtrOutputWithContext(ctx context.Context) PatchDeploymentRolloutDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRolloutDisruptionBudgetOutput).ToPatchDeploymentRolloutDisruptionBudgetPtrOutputWithContext(ctx)
}

// PatchDeploymentRolloutDisruptionBudgetPtrInput is an input type that accepts PatchDeploymentRolloutDisruptionBudgetArgs, PatchDeploymentRolloutDisruptionBudgetPtr and PatchDeploymentRolloutDisruptionBudgetPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRolloutDisruptionBudgetPtrInput` via:
//
//	        PatchDeploymentRolloutDisruptionBudgetArgs{...}
//
//	or:
//
//	        nil
type PatchDeploymentRolloutDisruptionBudgetPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRolloutDisruptionBudgetPtrOutput() PatchDeploymentRolloutDisruptionBudgetPtrOutput
	ToPatchDeploymentRolloutDisruptionBudgetPtrOutputWithContext(context.Context) PatchDeploymentRolloutDisruptionBudgetPtrOutput
}

type patchDeploymentRolloutDisruptionBudgetPtrType PatchDeploymentRolloutDisruptionBudgetArgs

func PatchDeploymentRolloutDisruptionBudgetPtr(v *PatchDeploymentRolloutDisruptionBudgetArgs) PatchDeploymentRolloutDisruptionBudgetPtrInput {
	return (*patchDeploymentRolloutDisruptionBudgetPtrType)(v)
}

func (*patchDeploymentRolloutDisruptionBudgetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRolloutDisruptionBudget)(nil)).Elem()
}

func (i *patchDeploymentRolloutDisruptionBudgetPtrType) ToPatchDeploymentRolloutDisruptionBudgetPtrOutput() PatchDeploymentRolloutDisruptionBudgetPtrOutput {
	return i.ToPatchDeploymentRolloutDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRolloutDisruptionBudgetPtrType) ToPatchDeploymentRolloutDisruptionBudgetPtrOutputWithContext(ctx context.Context) PatchDeploymentRolloutDisruptionBudgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRolloutDisruptionBudgetPtrOutput)
}

type PatchDeploymentRolloutDisruptionBudgetOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRolloutDisruptionBudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRolloutDisruptionBudget)(nil)).Elem()
}

func (o PatchDeploymentRolloutDisruptionBudgetOutput) ToPatchDeploymentRolloutDisruptionBudgetOutput() PatchDeploymentRolloutDisruptionBudgetOutput {
	return o
}

func (o PatchDeploymentRolloutDisruptionBudgetOutput) ToPatchDeploymentRolloutDisruptionBudgetOutputWithContext(ctx context.Context) PatchDeploymentRolloutDisruptionBudgetOutput {
	return o
}

func (o PatchDeploymentRolloutDisruptionBudgetOutput) ToPatchDeploymentRolloutDisruptionBudgetPtrOutput() PatchDeploymentRolloutDisruptionBudgetPtrOutput {
	return o.ToPatchDeploymentRolloutDisruptionBudgetPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRolloutDisruptionBudgetOutput) ToPatchDeploymentRolloutDisruptionBudgetPtrOutputWithContext(ctx context.Context) PatchDeploymentRolloutDisruptionBudgetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchDeploymentRolloutDisruptionBudget) *PatchDeploymentRolloutDisruptionBudget {
		return &v
	}).(PatchDeploymentRolloutDisruptionBudgetPtrOutput)
}

// Specifies a fixed value.
func (o PatchDeploymentRolloutDisruptionBudgetOutput) Fixed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRolloutDisruptionBudget) *int { return v.Fixed }).(pulumi.IntPtrOutput)
}

// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
func (o PatchDeploymentRolloutDisruptionBudgetOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRolloutDisruptionBudget) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

type PatchDeploymentRolloutDisruptionBudgetPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRolloutDisruptionBudgetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRolloutDisruptionBudget)(nil)).Elem()
}

func (o PatchDeploymentRolloutDisruptionBudgetPtrOutput) ToPatchDeploymentRolloutDisruptionBudgetPtrOutput() PatchDeploymentRolloutDisruptionBudgetPtrOutput {
	return o
}

func (o PatchDeploymentRolloutDisruptionBudgetPtrOutput) ToPatchDeploymentRolloutDisruptionBudgetPtrOutputWithContext(ctx context.Context) PatchDeploymentRolloutDisruptionBudgetPtrOutput {
	return o
}

func (o PatchDeploymentRolloutDisruptionBudgetPtrOutput) Elem() PatchDeploymentRolloutDisruptionBudgetOutput {
	return o.ApplyT(func(v *PatchDeploymentRolloutDisruptionBudget) PatchDeploymentRolloutDisruptionBudget {
		if v != nil {
			return *v
		}
		var ret PatchDeploymentRolloutDisruptionBudget
		return ret
	}).(PatchDeploymentRolloutDisruptionBudgetOutput)
}

// Specifies a fixed value.
func (o PatchDeploymentRolloutDisruptionBudgetPtrOutput) Fixed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRolloutDisruptionBudget) *int {
		if v == nil {
			return nil
		}
		return v.Fixed
	}).(pulumi.IntPtrOutput)
}

// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
func (o PatchDeploymentRolloutDisruptionBudgetPtrOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRolloutDisruptionBudget) *int {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesAssignmentInput)(nil)).Elem(), GuestPoliciesAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesAssignmentPtrInput)(nil)).Elem(), GuestPoliciesAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesAssignmentGroupLabelInput)(nil)).Elem(), GuestPoliciesAssignmentGroupLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesAssignmentGroupLabelArrayInput)(nil)).Elem(), GuestPoliciesAssignmentGroupLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesAssignmentOsTypeInput)(nil)).Elem(), GuestPoliciesAssignmentOsTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesAssignmentOsTypeArrayInput)(nil)).Elem(), GuestPoliciesAssignmentOsTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageInput)(nil)).Elem(), GuestPoliciesPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageArrayInput)(nil)).Elem(), GuestPoliciesPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryInput)(nil)).Elem(), GuestPoliciesPackageRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryArrayInput)(nil)).Elem(), GuestPoliciesPackageRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryAptInput)(nil)).Elem(), GuestPoliciesPackageRepositoryAptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryAptPtrInput)(nil)).Elem(), GuestPoliciesPackageRepositoryAptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryGooInput)(nil)).Elem(), GuestPoliciesPackageRepositoryGooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryGooPtrInput)(nil)).Elem(), GuestPoliciesPackageRepositoryGooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryYumInput)(nil)).Elem(), GuestPoliciesPackageRepositoryYumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryYumPtrInput)(nil)).Elem(), GuestPoliciesPackageRepositoryYumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryZypperInput)(nil)).Elem(), GuestPoliciesPackageRepositoryZypperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesPackageRepositoryZypperPtrInput)(nil)).Elem(), GuestPoliciesPackageRepositoryZypperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInput)(nil)).Elem(), GuestPoliciesRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeArrayInput)(nil)).Elem(), GuestPoliciesRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeArtifactInput)(nil)).Elem(), GuestPoliciesRecipeArtifactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeArtifactArrayInput)(nil)).Elem(), GuestPoliciesRecipeArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeArtifactGcsInput)(nil)).Elem(), GuestPoliciesRecipeArtifactGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeArtifactGcsPtrInput)(nil)).Elem(), GuestPoliciesRecipeArtifactGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeArtifactRemoteInput)(nil)).Elem(), GuestPoliciesRecipeArtifactRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeArtifactRemotePtrInput)(nil)).Elem(), GuestPoliciesRecipeArtifactRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepArrayInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepArchiveExtractionInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepArchiveExtractionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepArchiveExtractionPtrInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepArchiveExtractionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepDpkgInstallationInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepDpkgInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepDpkgInstallationPtrInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepDpkgInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepFileCopyInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepFileCopyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepFileCopyPtrInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepFileCopyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepFileExecInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepFileExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepFileExecPtrInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepFileExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepMsiInstallationInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepMsiInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepMsiInstallationPtrInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepMsiInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepRpmInstallationInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepRpmInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepRpmInstallationPtrInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepRpmInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepScriptRunInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepScriptRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeInstallStepScriptRunPtrInput)(nil)).Elem(), GuestPoliciesRecipeInstallStepScriptRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepArrayInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepArchiveExtractionInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepArchiveExtractionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepArchiveExtractionPtrInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepArchiveExtractionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepDpkgInstallationInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepDpkgInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepDpkgInstallationPtrInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepDpkgInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepFileCopyInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepFileCopyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepFileCopyPtrInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepFileCopyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepFileExecInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepFileExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepFileExecPtrInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepFileExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepMsiInstallationInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepMsiInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepMsiInstallationPtrInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepMsiInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepRpmInstallationInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepRpmInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepRpmInstallationPtrInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepRpmInstallationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepScriptRunInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepScriptRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestPoliciesRecipeUpdateStepScriptRunPtrInput)(nil)).Elem(), GuestPoliciesRecipeUpdateStepScriptRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentInstanceFilterInput)(nil)).Elem(), OsPolicyAssignmentInstanceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentInstanceFilterPtrInput)(nil)).Elem(), OsPolicyAssignmentInstanceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentInstanceFilterExclusionLabelInput)(nil)).Elem(), OsPolicyAssignmentInstanceFilterExclusionLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentInstanceFilterExclusionLabelArrayInput)(nil)).Elem(), OsPolicyAssignmentInstanceFilterExclusionLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentInstanceFilterInclusionLabelInput)(nil)).Elem(), OsPolicyAssignmentInstanceFilterInclusionLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentInstanceFilterInclusionLabelArrayInput)(nil)).Elem(), OsPolicyAssignmentInstanceFilterInclusionLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentInstanceFilterInventoryInput)(nil)).Elem(), OsPolicyAssignmentInstanceFilterInventoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentInstanceFilterInventoryArrayInput)(nil)).Elem(), OsPolicyAssignmentInstanceFilterInventoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyArrayInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupArrayInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceArrayInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrInput)(nil)).Elem(), OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentRolloutInput)(nil)).Elem(), OsPolicyAssignmentRolloutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentRolloutPtrInput)(nil)).Elem(), OsPolicyAssignmentRolloutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentRolloutDisruptionBudgetInput)(nil)).Elem(), OsPolicyAssignmentRolloutDisruptionBudgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OsPolicyAssignmentRolloutDisruptionBudgetPtrInput)(nil)).Elem(), OsPolicyAssignmentRolloutDisruptionBudgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentInstanceFilterInput)(nil)).Elem(), PatchDeploymentInstanceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentInstanceFilterPtrInput)(nil)).Elem(), PatchDeploymentInstanceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentInstanceFilterGroupLabelInput)(nil)).Elem(), PatchDeploymentInstanceFilterGroupLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentInstanceFilterGroupLabelArrayInput)(nil)).Elem(), PatchDeploymentInstanceFilterGroupLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentOneTimeScheduleInput)(nil)).Elem(), PatchDeploymentOneTimeScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentOneTimeSchedulePtrInput)(nil)).Elem(), PatchDeploymentOneTimeScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigInput)(nil)).Elem(), PatchDeploymentPatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigAptInput)(nil)).Elem(), PatchDeploymentPatchConfigAptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigAptPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigAptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigGooInput)(nil)).Elem(), PatchDeploymentPatchConfigGooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigGooPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigGooArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfigInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfigInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfigInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfigInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigWindowsUpdateInput)(nil)).Elem(), PatchDeploymentPatchConfigWindowsUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigWindowsUpdatePtrInput)(nil)).Elem(), PatchDeploymentPatchConfigWindowsUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigYumInput)(nil)).Elem(), PatchDeploymentPatchConfigYumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigYumPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigYumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigZypperInput)(nil)).Elem(), PatchDeploymentPatchConfigZypperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentPatchConfigZypperPtrInput)(nil)).Elem(), PatchDeploymentPatchConfigZypperArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleInput)(nil)).Elem(), PatchDeploymentRecurringScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringSchedulePtrInput)(nil)).Elem(), PatchDeploymentRecurringScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthlyInput)(nil)).Elem(), PatchDeploymentRecurringScheduleMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthlyPtrInput)(nil)).Elem(), PatchDeploymentRecurringScheduleMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthInput)(nil)).Elem(), PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput)(nil)).Elem(), PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeOfDayInput)(nil)).Elem(), PatchDeploymentRecurringScheduleTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeOfDayPtrInput)(nil)).Elem(), PatchDeploymentRecurringScheduleTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeZoneInput)(nil)).Elem(), PatchDeploymentRecurringScheduleTimeZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeZonePtrInput)(nil)).Elem(), PatchDeploymentRecurringScheduleTimeZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleWeeklyInput)(nil)).Elem(), PatchDeploymentRecurringScheduleWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRecurringScheduleWeeklyPtrInput)(nil)).Elem(), PatchDeploymentRecurringScheduleWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRolloutInput)(nil)).Elem(), PatchDeploymentRolloutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRolloutPtrInput)(nil)).Elem(), PatchDeploymentRolloutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRolloutDisruptionBudgetInput)(nil)).Elem(), PatchDeploymentRolloutDisruptionBudgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchDeploymentRolloutDisruptionBudgetPtrInput)(nil)).Elem(), PatchDeploymentRolloutDisruptionBudgetArgs{})
	pulumi.RegisterOutputType(GuestPoliciesAssignmentOutput{})
	pulumi.RegisterOutputType(GuestPoliciesAssignmentPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesAssignmentGroupLabelOutput{})
	pulumi.RegisterOutputType(GuestPoliciesAssignmentGroupLabelArrayOutput{})
	pulumi.RegisterOutputType(GuestPoliciesAssignmentOsTypeOutput{})
	pulumi.RegisterOutputType(GuestPoliciesAssignmentOsTypeArrayOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageArrayOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryArrayOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryAptOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryAptPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryGooOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryGooPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryYumOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryYumPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryZypperOutput{})
	pulumi.RegisterOutputType(GuestPoliciesPackageRepositoryZypperPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeArrayOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeArtifactOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeArtifactArrayOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeArtifactGcsOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeArtifactGcsPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeArtifactRemoteOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeArtifactRemotePtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepArrayOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepArchiveExtractionOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepArchiveExtractionPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepDpkgInstallationOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepDpkgInstallationPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepFileCopyOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepFileCopyPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepFileExecOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepFileExecPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepMsiInstallationOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepMsiInstallationPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepRpmInstallationOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepRpmInstallationPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepScriptRunOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeInstallStepScriptRunPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepArrayOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepArchiveExtractionOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepArchiveExtractionPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepDpkgInstallationOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepDpkgInstallationPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepFileCopyOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepFileCopyPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepFileExecOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepFileExecPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepMsiInstallationOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepMsiInstallationPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepRpmInstallationOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepRpmInstallationPtrOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepScriptRunOutput{})
	pulumi.RegisterOutputType(GuestPoliciesRecipeUpdateStepScriptRunPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentInstanceFilterOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentInstanceFilterPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentInstanceFilterExclusionLabelOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentInstanceFilterExclusionLabelArrayOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentInstanceFilterInclusionLabelOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentInstanceFilterInclusionLabelArrayOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentInstanceFilterInventoryOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentInstanceFilterInventoryArrayOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyArrayOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupArrayOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupInventoryFilterArrayOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceArrayOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforcePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFilePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileGcsPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemoteOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecEnforceFileRemotePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidatePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFilePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileGcsPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemoteOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceExecValidateFileRemotePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceFileOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceFilePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFilePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileGcsPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemoteOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceFileFileRemotePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgAptPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourcePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceGcsPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemoteOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgDebSourceRemotePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgGoogetPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourcePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceGcsPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemoteOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgMsiSourceRemotePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourcePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceGcsPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemoteOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgRpmSourceRemotePtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgYumPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourcePkgZypperPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryAptPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryGooPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryYumPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentOsPolicyResourceGroupResourceRepositoryZypperPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentRolloutOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentRolloutPtrOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentRolloutDisruptionBudgetOutput{})
	pulumi.RegisterOutputType(OsPolicyAssignmentRolloutDisruptionBudgetPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentInstanceFilterOutput{})
	pulumi.RegisterOutputType(PatchDeploymentInstanceFilterPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentInstanceFilterGroupLabelOutput{})
	pulumi.RegisterOutputType(PatchDeploymentInstanceFilterGroupLabelArrayOutput{})
	pulumi.RegisterOutputType(PatchDeploymentOneTimeScheduleOutput{})
	pulumi.RegisterOutputType(PatchDeploymentOneTimeSchedulePtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigAptOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigAptPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigGooOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigGooPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigWindowsUpdateOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigWindowsUpdatePtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigYumOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigYumPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigZypperOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigZypperPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringSchedulePtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleMonthlyOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleMonthlyPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleTimeOfDayOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleTimeOfDayPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleTimeZoneOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleTimeZonePtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleWeeklyOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleWeeklyPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRolloutOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRolloutPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRolloutDisruptionBudgetOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRolloutDisruptionBudgetPtrOutput{})
}
