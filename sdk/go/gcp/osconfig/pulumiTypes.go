// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package osconfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PatchDeploymentInstanceFilter struct {
	// Target all VM instances in the project. If true, no other criteria is permitted.
	All *bool `pulumi:"all"`
	// Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.  Structure is documented below.
	GroupLabels []PatchDeploymentInstanceFilterGroupLabel `pulumi:"groupLabels"`
	// Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group
	// VMs when targeting configs, for example prefix="prod-".
	InstanceNamePrefixes []string `pulumi:"instanceNamePrefixes"`
	// Targets any of the VM instances specified. Instances are specified by their URI in the `form zones/{{zone}}/instances/{{instance_name}}`,
	// `projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`, or
	// `https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`
	Instances []string `pulumi:"instances"`
	// Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.
	Zones []string `pulumi:"zones"`
}

// PatchDeploymentInstanceFilterInput is an input type that accepts PatchDeploymentInstanceFilterArgs and PatchDeploymentInstanceFilterOutput values.
// You can construct a concrete instance of `PatchDeploymentInstanceFilterInput` via:
//
//          PatchDeploymentInstanceFilterArgs{...}
type PatchDeploymentInstanceFilterInput interface {
	pulumi.Input

	ToPatchDeploymentInstanceFilterOutput() PatchDeploymentInstanceFilterOutput
	ToPatchDeploymentInstanceFilterOutputWithContext(context.Context) PatchDeploymentInstanceFilterOutput
}

type PatchDeploymentInstanceFilterArgs struct {
	// Target all VM instances in the project. If true, no other criteria is permitted.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.  Structure is documented below.
	GroupLabels PatchDeploymentInstanceFilterGroupLabelArrayInput `pulumi:"groupLabels"`
	// Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group
	// VMs when targeting configs, for example prefix="prod-".
	InstanceNamePrefixes pulumi.StringArrayInput `pulumi:"instanceNamePrefixes"`
	// Targets any of the VM instances specified. Instances are specified by their URI in the `form zones/{{zone}}/instances/{{instance_name}}`,
	// `projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`, or
	// `https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`
	Instances pulumi.StringArrayInput `pulumi:"instances"`
	// Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PatchDeploymentInstanceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentInstanceFilter)(nil)).Elem()
}

func (i PatchDeploymentInstanceFilterArgs) ToPatchDeploymentInstanceFilterOutput() PatchDeploymentInstanceFilterOutput {
	return i.ToPatchDeploymentInstanceFilterOutputWithContext(context.Background())
}

func (i PatchDeploymentInstanceFilterArgs) ToPatchDeploymentInstanceFilterOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterOutput)
}

func (i PatchDeploymentInstanceFilterArgs) ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput {
	return i.ToPatchDeploymentInstanceFilterPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentInstanceFilterArgs) ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterOutput).ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx)
}

// PatchDeploymentInstanceFilterPtrInput is an input type that accepts PatchDeploymentInstanceFilterArgs, PatchDeploymentInstanceFilterPtr and PatchDeploymentInstanceFilterPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentInstanceFilterPtrInput` via:
//
//          PatchDeploymentInstanceFilterArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentInstanceFilterPtrInput interface {
	pulumi.Input

	ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput
	ToPatchDeploymentInstanceFilterPtrOutputWithContext(context.Context) PatchDeploymentInstanceFilterPtrOutput
}

type patchDeploymentInstanceFilterPtrType PatchDeploymentInstanceFilterArgs

func PatchDeploymentInstanceFilterPtr(v *PatchDeploymentInstanceFilterArgs) PatchDeploymentInstanceFilterPtrInput {
	return (*patchDeploymentInstanceFilterPtrType)(v)
}

func (*patchDeploymentInstanceFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentInstanceFilter)(nil)).Elem()
}

func (i *patchDeploymentInstanceFilterPtrType) ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput {
	return i.ToPatchDeploymentInstanceFilterPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentInstanceFilterPtrType) ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterPtrOutput)
}

type PatchDeploymentInstanceFilterOutput struct{ *pulumi.OutputState }

func (PatchDeploymentInstanceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentInstanceFilter)(nil)).Elem()
}

func (o PatchDeploymentInstanceFilterOutput) ToPatchDeploymentInstanceFilterOutput() PatchDeploymentInstanceFilterOutput {
	return o
}

func (o PatchDeploymentInstanceFilterOutput) ToPatchDeploymentInstanceFilterOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterOutput {
	return o
}

func (o PatchDeploymentInstanceFilterOutput) ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput {
	return o.ToPatchDeploymentInstanceFilterPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentInstanceFilterOutput) ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterPtrOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) *PatchDeploymentInstanceFilter {
		return &v
	}).(PatchDeploymentInstanceFilterPtrOutput)
}

// Target all VM instances in the project. If true, no other criteria is permitted.
func (o PatchDeploymentInstanceFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.  Structure is documented below.
func (o PatchDeploymentInstanceFilterOutput) GroupLabels() PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) []PatchDeploymentInstanceFilterGroupLabel { return v.GroupLabels }).(PatchDeploymentInstanceFilterGroupLabelArrayOutput)
}

// Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group
// VMs when targeting configs, for example prefix="prod-".
func (o PatchDeploymentInstanceFilterOutput) InstanceNamePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) []string { return v.InstanceNamePrefixes }).(pulumi.StringArrayOutput)
}

// Targets any of the VM instances specified. Instances are specified by their URI in the `form zones/{{zone}}/instances/{{instance_name}}`,
// `projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`, or
// `https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`
func (o PatchDeploymentInstanceFilterOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) []string { return v.Instances }).(pulumi.StringArrayOutput)
}

// Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.
func (o PatchDeploymentInstanceFilterOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilter) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PatchDeploymentInstanceFilterPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentInstanceFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentInstanceFilter)(nil)).Elem()
}

func (o PatchDeploymentInstanceFilterPtrOutput) ToPatchDeploymentInstanceFilterPtrOutput() PatchDeploymentInstanceFilterPtrOutput {
	return o
}

func (o PatchDeploymentInstanceFilterPtrOutput) ToPatchDeploymentInstanceFilterPtrOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterPtrOutput {
	return o
}

func (o PatchDeploymentInstanceFilterPtrOutput) Elem() PatchDeploymentInstanceFilterOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) PatchDeploymentInstanceFilter { return *v }).(PatchDeploymentInstanceFilterOutput)
}

// Target all VM instances in the project. If true, no other criteria is permitted.
func (o PatchDeploymentInstanceFilterPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.  Structure is documented below.
func (o PatchDeploymentInstanceFilterPtrOutput) GroupLabels() PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) []PatchDeploymentInstanceFilterGroupLabel {
		if v == nil {
			return nil
		}
		return v.GroupLabels
	}).(PatchDeploymentInstanceFilterGroupLabelArrayOutput)
}

// Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group
// VMs when targeting configs, for example prefix="prod-".
func (o PatchDeploymentInstanceFilterPtrOutput) InstanceNamePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) []string {
		if v == nil {
			return nil
		}
		return v.InstanceNamePrefixes
	}).(pulumi.StringArrayOutput)
}

// Targets any of the VM instances specified. Instances are specified by their URI in the `form zones/{{zone}}/instances/{{instance_name}}`,
// `projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`, or
// `https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}`
func (o PatchDeploymentInstanceFilterPtrOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) []string {
		if v == nil {
			return nil
		}
		return v.Instances
	}).(pulumi.StringArrayOutput)
}

// Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.
func (o PatchDeploymentInstanceFilterPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentInstanceFilter) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type PatchDeploymentInstanceFilterGroupLabel struct {
	// Compute Engine instance labels that must be present for a VM instance to be targeted by this filter
	Labels map[string]string `pulumi:"labels"`
}

// PatchDeploymentInstanceFilterGroupLabelInput is an input type that accepts PatchDeploymentInstanceFilterGroupLabelArgs and PatchDeploymentInstanceFilterGroupLabelOutput values.
// You can construct a concrete instance of `PatchDeploymentInstanceFilterGroupLabelInput` via:
//
//          PatchDeploymentInstanceFilterGroupLabelArgs{...}
type PatchDeploymentInstanceFilterGroupLabelInput interface {
	pulumi.Input

	ToPatchDeploymentInstanceFilterGroupLabelOutput() PatchDeploymentInstanceFilterGroupLabelOutput
	ToPatchDeploymentInstanceFilterGroupLabelOutputWithContext(context.Context) PatchDeploymentInstanceFilterGroupLabelOutput
}

type PatchDeploymentInstanceFilterGroupLabelArgs struct {
	// Compute Engine instance labels that must be present for a VM instance to be targeted by this filter
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (PatchDeploymentInstanceFilterGroupLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentInstanceFilterGroupLabel)(nil)).Elem()
}

func (i PatchDeploymentInstanceFilterGroupLabelArgs) ToPatchDeploymentInstanceFilterGroupLabelOutput() PatchDeploymentInstanceFilterGroupLabelOutput {
	return i.ToPatchDeploymentInstanceFilterGroupLabelOutputWithContext(context.Background())
}

func (i PatchDeploymentInstanceFilterGroupLabelArgs) ToPatchDeploymentInstanceFilterGroupLabelOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterGroupLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterGroupLabelOutput)
}

// PatchDeploymentInstanceFilterGroupLabelArrayInput is an input type that accepts PatchDeploymentInstanceFilterGroupLabelArray and PatchDeploymentInstanceFilterGroupLabelArrayOutput values.
// You can construct a concrete instance of `PatchDeploymentInstanceFilterGroupLabelArrayInput` via:
//
//          PatchDeploymentInstanceFilterGroupLabelArray{ PatchDeploymentInstanceFilterGroupLabelArgs{...} }
type PatchDeploymentInstanceFilterGroupLabelArrayInput interface {
	pulumi.Input

	ToPatchDeploymentInstanceFilterGroupLabelArrayOutput() PatchDeploymentInstanceFilterGroupLabelArrayOutput
	ToPatchDeploymentInstanceFilterGroupLabelArrayOutputWithContext(context.Context) PatchDeploymentInstanceFilterGroupLabelArrayOutput
}

type PatchDeploymentInstanceFilterGroupLabelArray []PatchDeploymentInstanceFilterGroupLabelInput

func (PatchDeploymentInstanceFilterGroupLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchDeploymentInstanceFilterGroupLabel)(nil)).Elem()
}

func (i PatchDeploymentInstanceFilterGroupLabelArray) ToPatchDeploymentInstanceFilterGroupLabelArrayOutput() PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return i.ToPatchDeploymentInstanceFilterGroupLabelArrayOutputWithContext(context.Background())
}

func (i PatchDeploymentInstanceFilterGroupLabelArray) ToPatchDeploymentInstanceFilterGroupLabelArrayOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentInstanceFilterGroupLabelArrayOutput)
}

type PatchDeploymentInstanceFilterGroupLabelOutput struct{ *pulumi.OutputState }

func (PatchDeploymentInstanceFilterGroupLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentInstanceFilterGroupLabel)(nil)).Elem()
}

func (o PatchDeploymentInstanceFilterGroupLabelOutput) ToPatchDeploymentInstanceFilterGroupLabelOutput() PatchDeploymentInstanceFilterGroupLabelOutput {
	return o
}

func (o PatchDeploymentInstanceFilterGroupLabelOutput) ToPatchDeploymentInstanceFilterGroupLabelOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterGroupLabelOutput {
	return o
}

// Compute Engine instance labels that must be present for a VM instance to be targeted by this filter
func (o PatchDeploymentInstanceFilterGroupLabelOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PatchDeploymentInstanceFilterGroupLabel) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type PatchDeploymentInstanceFilterGroupLabelArrayOutput struct{ *pulumi.OutputState }

func (PatchDeploymentInstanceFilterGroupLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchDeploymentInstanceFilterGroupLabel)(nil)).Elem()
}

func (o PatchDeploymentInstanceFilterGroupLabelArrayOutput) ToPatchDeploymentInstanceFilterGroupLabelArrayOutput() PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return o
}

func (o PatchDeploymentInstanceFilterGroupLabelArrayOutput) ToPatchDeploymentInstanceFilterGroupLabelArrayOutputWithContext(ctx context.Context) PatchDeploymentInstanceFilterGroupLabelArrayOutput {
	return o
}

func (o PatchDeploymentInstanceFilterGroupLabelArrayOutput) Index(i pulumi.IntInput) PatchDeploymentInstanceFilterGroupLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchDeploymentInstanceFilterGroupLabel {
		return vs[0].([]PatchDeploymentInstanceFilterGroupLabel)[vs[1].(int)]
	}).(PatchDeploymentInstanceFilterGroupLabelOutput)
}

type PatchDeploymentOneTimeSchedule struct {
	// The desired patch job execution time. A timestamp in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	ExecuteTime string `pulumi:"executeTime"`
}

// PatchDeploymentOneTimeScheduleInput is an input type that accepts PatchDeploymentOneTimeScheduleArgs and PatchDeploymentOneTimeScheduleOutput values.
// You can construct a concrete instance of `PatchDeploymentOneTimeScheduleInput` via:
//
//          PatchDeploymentOneTimeScheduleArgs{...}
type PatchDeploymentOneTimeScheduleInput interface {
	pulumi.Input

	ToPatchDeploymentOneTimeScheduleOutput() PatchDeploymentOneTimeScheduleOutput
	ToPatchDeploymentOneTimeScheduleOutputWithContext(context.Context) PatchDeploymentOneTimeScheduleOutput
}

type PatchDeploymentOneTimeScheduleArgs struct {
	// The desired patch job execution time. A timestamp in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	ExecuteTime pulumi.StringInput `pulumi:"executeTime"`
}

func (PatchDeploymentOneTimeScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentOneTimeSchedule)(nil)).Elem()
}

func (i PatchDeploymentOneTimeScheduleArgs) ToPatchDeploymentOneTimeScheduleOutput() PatchDeploymentOneTimeScheduleOutput {
	return i.ToPatchDeploymentOneTimeScheduleOutputWithContext(context.Background())
}

func (i PatchDeploymentOneTimeScheduleArgs) ToPatchDeploymentOneTimeScheduleOutputWithContext(ctx context.Context) PatchDeploymentOneTimeScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentOneTimeScheduleOutput)
}

func (i PatchDeploymentOneTimeScheduleArgs) ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput {
	return i.ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(context.Background())
}

func (i PatchDeploymentOneTimeScheduleArgs) ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentOneTimeSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentOneTimeScheduleOutput).ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx)
}

// PatchDeploymentOneTimeSchedulePtrInput is an input type that accepts PatchDeploymentOneTimeScheduleArgs, PatchDeploymentOneTimeSchedulePtr and PatchDeploymentOneTimeSchedulePtrOutput values.
// You can construct a concrete instance of `PatchDeploymentOneTimeSchedulePtrInput` via:
//
//          PatchDeploymentOneTimeScheduleArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentOneTimeSchedulePtrInput interface {
	pulumi.Input

	ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput
	ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(context.Context) PatchDeploymentOneTimeSchedulePtrOutput
}

type patchDeploymentOneTimeSchedulePtrType PatchDeploymentOneTimeScheduleArgs

func PatchDeploymentOneTimeSchedulePtr(v *PatchDeploymentOneTimeScheduleArgs) PatchDeploymentOneTimeSchedulePtrInput {
	return (*patchDeploymentOneTimeSchedulePtrType)(v)
}

func (*patchDeploymentOneTimeSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentOneTimeSchedule)(nil)).Elem()
}

func (i *patchDeploymentOneTimeSchedulePtrType) ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput {
	return i.ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(context.Background())
}

func (i *patchDeploymentOneTimeSchedulePtrType) ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentOneTimeSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentOneTimeSchedulePtrOutput)
}

type PatchDeploymentOneTimeScheduleOutput struct{ *pulumi.OutputState }

func (PatchDeploymentOneTimeScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentOneTimeSchedule)(nil)).Elem()
}

func (o PatchDeploymentOneTimeScheduleOutput) ToPatchDeploymentOneTimeScheduleOutput() PatchDeploymentOneTimeScheduleOutput {
	return o
}

func (o PatchDeploymentOneTimeScheduleOutput) ToPatchDeploymentOneTimeScheduleOutputWithContext(ctx context.Context) PatchDeploymentOneTimeScheduleOutput {
	return o
}

func (o PatchDeploymentOneTimeScheduleOutput) ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput {
	return o.ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(context.Background())
}

func (o PatchDeploymentOneTimeScheduleOutput) ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentOneTimeSchedulePtrOutput {
	return o.ApplyT(func(v PatchDeploymentOneTimeSchedule) *PatchDeploymentOneTimeSchedule {
		return &v
	}).(PatchDeploymentOneTimeSchedulePtrOutput)
}

// The desired patch job execution time. A timestamp in RFC3339 UTC "Zulu" format,
// accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentOneTimeScheduleOutput) ExecuteTime() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentOneTimeSchedule) string { return v.ExecuteTime }).(pulumi.StringOutput)
}

type PatchDeploymentOneTimeSchedulePtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentOneTimeSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentOneTimeSchedule)(nil)).Elem()
}

func (o PatchDeploymentOneTimeSchedulePtrOutput) ToPatchDeploymentOneTimeSchedulePtrOutput() PatchDeploymentOneTimeSchedulePtrOutput {
	return o
}

func (o PatchDeploymentOneTimeSchedulePtrOutput) ToPatchDeploymentOneTimeSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentOneTimeSchedulePtrOutput {
	return o
}

func (o PatchDeploymentOneTimeSchedulePtrOutput) Elem() PatchDeploymentOneTimeScheduleOutput {
	return o.ApplyT(func(v *PatchDeploymentOneTimeSchedule) PatchDeploymentOneTimeSchedule { return *v }).(PatchDeploymentOneTimeScheduleOutput)
}

// The desired patch job execution time. A timestamp in RFC3339 UTC "Zulu" format,
// accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentOneTimeSchedulePtrOutput) ExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentOneTimeSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.ExecuteTime
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfig struct {
	// Apt update settings. Use this setting to override the default apt patch rules.  Structure is documented below.
	Apt *PatchDeploymentPatchConfigApt `pulumi:"apt"`
	// goo update settings. Use this setting to override the default goo patch rules.  Structure is documented below.
	Goo *PatchDeploymentPatchConfigGoo `pulumi:"goo"`
	// The ExecStep to run after the patch update.  Structure is documented below.
	PostStep *PatchDeploymentPatchConfigPostStep `pulumi:"postStep"`
	// The ExecStep to run before the patch update.  Structure is documented below.
	PreStep *PatchDeploymentPatchConfigPreStep `pulumi:"preStep"`
	// Post-patch reboot settings.
	RebootConfig *string `pulumi:"rebootConfig"`
	// Windows update settings. Use this setting to override the default Windows patch rules.  Structure is documented below.
	WindowsUpdate *PatchDeploymentPatchConfigWindowsUpdate `pulumi:"windowsUpdate"`
	// Yum update settings. Use this setting to override the default yum patch rules.  Structure is documented below.
	Yum *PatchDeploymentPatchConfigYum `pulumi:"yum"`
	// zypper update settings. Use this setting to override the default zypper patch rules.  Structure is documented below.
	Zypper *PatchDeploymentPatchConfigZypper `pulumi:"zypper"`
}

// PatchDeploymentPatchConfigInput is an input type that accepts PatchDeploymentPatchConfigArgs and PatchDeploymentPatchConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigInput` via:
//
//          PatchDeploymentPatchConfigArgs{...}
type PatchDeploymentPatchConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigOutput() PatchDeploymentPatchConfigOutput
	ToPatchDeploymentPatchConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigOutput
}

type PatchDeploymentPatchConfigArgs struct {
	// Apt update settings. Use this setting to override the default apt patch rules.  Structure is documented below.
	Apt PatchDeploymentPatchConfigAptPtrInput `pulumi:"apt"`
	// goo update settings. Use this setting to override the default goo patch rules.  Structure is documented below.
	Goo PatchDeploymentPatchConfigGooPtrInput `pulumi:"goo"`
	// The ExecStep to run after the patch update.  Structure is documented below.
	PostStep PatchDeploymentPatchConfigPostStepPtrInput `pulumi:"postStep"`
	// The ExecStep to run before the patch update.  Structure is documented below.
	PreStep PatchDeploymentPatchConfigPreStepPtrInput `pulumi:"preStep"`
	// Post-patch reboot settings.
	RebootConfig pulumi.StringPtrInput `pulumi:"rebootConfig"`
	// Windows update settings. Use this setting to override the default Windows patch rules.  Structure is documented below.
	WindowsUpdate PatchDeploymentPatchConfigWindowsUpdatePtrInput `pulumi:"windowsUpdate"`
	// Yum update settings. Use this setting to override the default yum patch rules.  Structure is documented below.
	Yum PatchDeploymentPatchConfigYumPtrInput `pulumi:"yum"`
	// zypper update settings. Use this setting to override the default zypper patch rules.  Structure is documented below.
	Zypper PatchDeploymentPatchConfigZypperPtrInput `pulumi:"zypper"`
}

func (PatchDeploymentPatchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigArgs) ToPatchDeploymentPatchConfigOutput() PatchDeploymentPatchConfigOutput {
	return i.ToPatchDeploymentPatchConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigArgs) ToPatchDeploymentPatchConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigOutput)
}

func (i PatchDeploymentPatchConfigArgs) ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigArgs) ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigOutput).ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigArgs, PatchDeploymentPatchConfigPtr and PatchDeploymentPatchConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPtrInput` via:
//
//          PatchDeploymentPatchConfigArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput
	ToPatchDeploymentPatchConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPtrOutput
}

type patchDeploymentPatchConfigPtrType PatchDeploymentPatchConfigArgs

func PatchDeploymentPatchConfigPtr(v *PatchDeploymentPatchConfigArgs) PatchDeploymentPatchConfigPtrInput {
	return (*patchDeploymentPatchConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPtrType) ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPtrType) ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPtrOutput)
}

type PatchDeploymentPatchConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigOutput) ToPatchDeploymentPatchConfigOutput() PatchDeploymentPatchConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigOutput) ToPatchDeploymentPatchConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigOutput) ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigOutput) ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfig {
		return &v
	}).(PatchDeploymentPatchConfigPtrOutput)
}

// Apt update settings. Use this setting to override the default apt patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) Apt() PatchDeploymentPatchConfigAptPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigApt { return v.Apt }).(PatchDeploymentPatchConfigAptPtrOutput)
}

// goo update settings. Use this setting to override the default goo patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) Goo() PatchDeploymentPatchConfigGooPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigGoo { return v.Goo }).(PatchDeploymentPatchConfigGooPtrOutput)
}

// The ExecStep to run after the patch update.  Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) PostStep() PatchDeploymentPatchConfigPostStepPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigPostStep { return v.PostStep }).(PatchDeploymentPatchConfigPostStepPtrOutput)
}

// The ExecStep to run before the patch update.  Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) PreStep() PatchDeploymentPatchConfigPreStepPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigPreStep { return v.PreStep }).(PatchDeploymentPatchConfigPreStepPtrOutput)
}

// Post-patch reboot settings.
func (o PatchDeploymentPatchConfigOutput) RebootConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *string { return v.RebootConfig }).(pulumi.StringPtrOutput)
}

// Windows update settings. Use this setting to override the default Windows patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) WindowsUpdate() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigWindowsUpdate { return v.WindowsUpdate }).(PatchDeploymentPatchConfigWindowsUpdatePtrOutput)
}

// Yum update settings. Use this setting to override the default yum patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) Yum() PatchDeploymentPatchConfigYumPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigYum { return v.Yum }).(PatchDeploymentPatchConfigYumPtrOutput)
}

// zypper update settings. Use this setting to override the default zypper patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigOutput) Zypper() PatchDeploymentPatchConfigZypperPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigZypper { return v.Zypper }).(PatchDeploymentPatchConfigZypperPtrOutput)
}

type PatchDeploymentPatchConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPtrOutput) ToPatchDeploymentPatchConfigPtrOutput() PatchDeploymentPatchConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPtrOutput) ToPatchDeploymentPatchConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPtrOutput) Elem() PatchDeploymentPatchConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) PatchDeploymentPatchConfig { return *v }).(PatchDeploymentPatchConfigOutput)
}

// Apt update settings. Use this setting to override the default apt patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) Apt() PatchDeploymentPatchConfigAptPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigApt {
		if v == nil {
			return nil
		}
		return v.Apt
	}).(PatchDeploymentPatchConfigAptPtrOutput)
}

// goo update settings. Use this setting to override the default goo patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) Goo() PatchDeploymentPatchConfigGooPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigGoo {
		if v == nil {
			return nil
		}
		return v.Goo
	}).(PatchDeploymentPatchConfigGooPtrOutput)
}

// The ExecStep to run after the patch update.  Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) PostStep() PatchDeploymentPatchConfigPostStepPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigPostStep {
		if v == nil {
			return nil
		}
		return v.PostStep
	}).(PatchDeploymentPatchConfigPostStepPtrOutput)
}

// The ExecStep to run before the patch update.  Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) PreStep() PatchDeploymentPatchConfigPreStepPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigPreStep {
		if v == nil {
			return nil
		}
		return v.PreStep
	}).(PatchDeploymentPatchConfigPreStepPtrOutput)
}

// Post-patch reboot settings.
func (o PatchDeploymentPatchConfigPtrOutput) RebootConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *string {
		if v == nil {
			return nil
		}
		return v.RebootConfig
	}).(pulumi.StringPtrOutput)
}

// Windows update settings. Use this setting to override the default Windows patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) WindowsUpdate() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigWindowsUpdate {
		if v == nil {
			return nil
		}
		return v.WindowsUpdate
	}).(PatchDeploymentPatchConfigWindowsUpdatePtrOutput)
}

// Yum update settings. Use this setting to override the default yum patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) Yum() PatchDeploymentPatchConfigYumPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigYum {
		if v == nil {
			return nil
		}
		return v.Yum
	}).(PatchDeploymentPatchConfigYumPtrOutput)
}

// zypper update settings. Use this setting to override the default zypper patch rules.  Structure is documented below.
func (o PatchDeploymentPatchConfigPtrOutput) Zypper() PatchDeploymentPatchConfigZypperPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfig) *PatchDeploymentPatchConfigZypper {
		if v == nil {
			return nil
		}
		return v.Zypper
	}).(PatchDeploymentPatchConfigZypperPtrOutput)
}

type PatchDeploymentPatchConfigApt struct {
	// List of KBs to exclude from update.
	Excludes []string `pulumi:"excludes"`
	// An exclusive list of packages to be updated. These are the only packages that will be updated.
	// If these packages are not installed, they will be ignored. This field cannot be specified with
	// any other patch configuration fields.
	ExclusivePackages []string `pulumi:"exclusivePackages"`
	// By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead.
	Type *string `pulumi:"type"`
}

// PatchDeploymentPatchConfigAptInput is an input type that accepts PatchDeploymentPatchConfigAptArgs and PatchDeploymentPatchConfigAptOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigAptInput` via:
//
//          PatchDeploymentPatchConfigAptArgs{...}
type PatchDeploymentPatchConfigAptInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigAptOutput() PatchDeploymentPatchConfigAptOutput
	ToPatchDeploymentPatchConfigAptOutputWithContext(context.Context) PatchDeploymentPatchConfigAptOutput
}

type PatchDeploymentPatchConfigAptArgs struct {
	// List of KBs to exclude from update.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// An exclusive list of packages to be updated. These are the only packages that will be updated.
	// If these packages are not installed, they will be ignored. This field cannot be specified with
	// any other patch configuration fields.
	ExclusivePackages pulumi.StringArrayInput `pulumi:"exclusivePackages"`
	// By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PatchDeploymentPatchConfigAptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigApt)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigAptArgs) ToPatchDeploymentPatchConfigAptOutput() PatchDeploymentPatchConfigAptOutput {
	return i.ToPatchDeploymentPatchConfigAptOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigAptArgs) ToPatchDeploymentPatchConfigAptOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigAptOutput)
}

func (i PatchDeploymentPatchConfigAptArgs) ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput {
	return i.ToPatchDeploymentPatchConfigAptPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigAptArgs) ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigAptOutput).ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigAptPtrInput is an input type that accepts PatchDeploymentPatchConfigAptArgs, PatchDeploymentPatchConfigAptPtr and PatchDeploymentPatchConfigAptPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigAptPtrInput` via:
//
//          PatchDeploymentPatchConfigAptArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigAptPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput
	ToPatchDeploymentPatchConfigAptPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigAptPtrOutput
}

type patchDeploymentPatchConfigAptPtrType PatchDeploymentPatchConfigAptArgs

func PatchDeploymentPatchConfigAptPtr(v *PatchDeploymentPatchConfigAptArgs) PatchDeploymentPatchConfigAptPtrInput {
	return (*patchDeploymentPatchConfigAptPtrType)(v)
}

func (*patchDeploymentPatchConfigAptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigApt)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigAptPtrType) ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput {
	return i.ToPatchDeploymentPatchConfigAptPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigAptPtrType) ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigAptPtrOutput)
}

type PatchDeploymentPatchConfigAptOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigAptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigApt)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigAptOutput) ToPatchDeploymentPatchConfigAptOutput() PatchDeploymentPatchConfigAptOutput {
	return o
}

func (o PatchDeploymentPatchConfigAptOutput) ToPatchDeploymentPatchConfigAptOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptOutput {
	return o
}

func (o PatchDeploymentPatchConfigAptOutput) ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput {
	return o.ToPatchDeploymentPatchConfigAptPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigAptOutput) ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigApt) *PatchDeploymentPatchConfigApt {
		return &v
	}).(PatchDeploymentPatchConfigAptPtrOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigAptOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigApt) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// An exclusive list of packages to be updated. These are the only packages that will be updated.
// If these packages are not installed, they will be ignored. This field cannot be specified with
// any other patch configuration fields.
func (o PatchDeploymentPatchConfigAptOutput) ExclusivePackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigApt) []string { return v.ExclusivePackages }).(pulumi.StringArrayOutput)
}

// By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead.
func (o PatchDeploymentPatchConfigAptOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigApt) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigAptPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigAptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigApt)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigAptPtrOutput) ToPatchDeploymentPatchConfigAptPtrOutput() PatchDeploymentPatchConfigAptPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigAptPtrOutput) ToPatchDeploymentPatchConfigAptPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigAptPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigAptPtrOutput) Elem() PatchDeploymentPatchConfigAptOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigApt) PatchDeploymentPatchConfigApt { return *v }).(PatchDeploymentPatchConfigAptOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigAptPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigApt) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// An exclusive list of packages to be updated. These are the only packages that will be updated.
// If these packages are not installed, they will be ignored. This field cannot be specified with
// any other patch configuration fields.
func (o PatchDeploymentPatchConfigAptPtrOutput) ExclusivePackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigApt) []string {
		if v == nil {
			return nil
		}
		return v.ExclusivePackages
	}).(pulumi.StringArrayOutput)
}

// By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead.
func (o PatchDeploymentPatchConfigAptPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigApt) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigGoo struct {
	// goo update settings. Use this setting to override the default goo patch rules.
	Enabled bool `pulumi:"enabled"`
}

// PatchDeploymentPatchConfigGooInput is an input type that accepts PatchDeploymentPatchConfigGooArgs and PatchDeploymentPatchConfigGooOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigGooInput` via:
//
//          PatchDeploymentPatchConfigGooArgs{...}
type PatchDeploymentPatchConfigGooInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigGooOutput() PatchDeploymentPatchConfigGooOutput
	ToPatchDeploymentPatchConfigGooOutputWithContext(context.Context) PatchDeploymentPatchConfigGooOutput
}

type PatchDeploymentPatchConfigGooArgs struct {
	// goo update settings. Use this setting to override the default goo patch rules.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (PatchDeploymentPatchConfigGooArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigGoo)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigGooArgs) ToPatchDeploymentPatchConfigGooOutput() PatchDeploymentPatchConfigGooOutput {
	return i.ToPatchDeploymentPatchConfigGooOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigGooArgs) ToPatchDeploymentPatchConfigGooOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigGooOutput)
}

func (i PatchDeploymentPatchConfigGooArgs) ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput {
	return i.ToPatchDeploymentPatchConfigGooPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigGooArgs) ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigGooOutput).ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigGooPtrInput is an input type that accepts PatchDeploymentPatchConfigGooArgs, PatchDeploymentPatchConfigGooPtr and PatchDeploymentPatchConfigGooPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigGooPtrInput` via:
//
//          PatchDeploymentPatchConfigGooArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigGooPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput
	ToPatchDeploymentPatchConfigGooPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigGooPtrOutput
}

type patchDeploymentPatchConfigGooPtrType PatchDeploymentPatchConfigGooArgs

func PatchDeploymentPatchConfigGooPtr(v *PatchDeploymentPatchConfigGooArgs) PatchDeploymentPatchConfigGooPtrInput {
	return (*patchDeploymentPatchConfigGooPtrType)(v)
}

func (*patchDeploymentPatchConfigGooPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigGoo)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigGooPtrType) ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput {
	return i.ToPatchDeploymentPatchConfigGooPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigGooPtrType) ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigGooPtrOutput)
}

type PatchDeploymentPatchConfigGooOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigGooOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigGoo)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigGooOutput) ToPatchDeploymentPatchConfigGooOutput() PatchDeploymentPatchConfigGooOutput {
	return o
}

func (o PatchDeploymentPatchConfigGooOutput) ToPatchDeploymentPatchConfigGooOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooOutput {
	return o
}

func (o PatchDeploymentPatchConfigGooOutput) ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput {
	return o.ToPatchDeploymentPatchConfigGooPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigGooOutput) ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigGoo) *PatchDeploymentPatchConfigGoo {
		return &v
	}).(PatchDeploymentPatchConfigGooPtrOutput)
}

// goo update settings. Use this setting to override the default goo patch rules.
func (o PatchDeploymentPatchConfigGooOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigGoo) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type PatchDeploymentPatchConfigGooPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigGooPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigGoo)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigGooPtrOutput) ToPatchDeploymentPatchConfigGooPtrOutput() PatchDeploymentPatchConfigGooPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigGooPtrOutput) ToPatchDeploymentPatchConfigGooPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigGooPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigGooPtrOutput) Elem() PatchDeploymentPatchConfigGooOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigGoo) PatchDeploymentPatchConfigGoo { return *v }).(PatchDeploymentPatchConfigGooOutput)
}

// goo update settings. Use this setting to override the default goo patch rules.
func (o PatchDeploymentPatchConfigGooPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigGoo) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type PatchDeploymentPatchConfigPostStep struct {
	// The ExecStepConfig for all Linux VMs targeted by the PatchJob.  Structure is documented below.
	LinuxExecStepConfig *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig `pulumi:"linuxExecStepConfig"`
	// The ExecStepConfig for all Windows VMs targeted by the PatchJob.  Structure is documented below.
	WindowsExecStepConfig *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig `pulumi:"windowsExecStepConfig"`
}

// PatchDeploymentPatchConfigPostStepInput is an input type that accepts PatchDeploymentPatchConfigPostStepArgs and PatchDeploymentPatchConfigPostStepOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepInput` via:
//
//          PatchDeploymentPatchConfigPostStepArgs{...}
type PatchDeploymentPatchConfigPostStepInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepOutput() PatchDeploymentPatchConfigPostStepOutput
	ToPatchDeploymentPatchConfigPostStepOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepOutput
}

type PatchDeploymentPatchConfigPostStepArgs struct {
	// The ExecStepConfig for all Linux VMs targeted by the PatchJob.  Structure is documented below.
	LinuxExecStepConfig PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput `pulumi:"linuxExecStepConfig"`
	// The ExecStepConfig for all Windows VMs targeted by the PatchJob.  Structure is documented below.
	WindowsExecStepConfig PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput `pulumi:"windowsExecStepConfig"`
}

func (PatchDeploymentPatchConfigPostStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStep)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepArgs) ToPatchDeploymentPatchConfigPostStepOutput() PatchDeploymentPatchConfigPostStepOutput {
	return i.ToPatchDeploymentPatchConfigPostStepOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepArgs) ToPatchDeploymentPatchConfigPostStepOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepOutput)
}

func (i PatchDeploymentPatchConfigPostStepArgs) ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepArgs) ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepOutput).ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepArgs, PatchDeploymentPatchConfigPostStepPtr and PatchDeploymentPatchConfigPostStepPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepPtrInput` via:
//
//          PatchDeploymentPatchConfigPostStepArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPostStepPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput
	ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepPtrOutput
}

type patchDeploymentPatchConfigPostStepPtrType PatchDeploymentPatchConfigPostStepArgs

func PatchDeploymentPatchConfigPostStepPtr(v *PatchDeploymentPatchConfigPostStepArgs) PatchDeploymentPatchConfigPostStepPtrInput {
	return (*patchDeploymentPatchConfigPostStepPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStep)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepPtrType) ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepPtrType) ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepPtrOutput)
}

type PatchDeploymentPatchConfigPostStepOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStep)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepOutput) ToPatchDeploymentPatchConfigPostStepOutput() PatchDeploymentPatchConfigPostStepOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepOutput) ToPatchDeploymentPatchConfigPostStepOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepOutput) ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepOutput) ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStep {
		return &v
	}).(PatchDeploymentPatchConfigPostStepPtrOutput)
}

// The ExecStepConfig for all Linux VMs targeted by the PatchJob.  Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepOutput) LinuxExecStepConfig() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig {
		return v.LinuxExecStepConfig
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput)
}

// The ExecStepConfig for all Windows VMs targeted by the PatchJob.  Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepOutput) WindowsExecStepConfig() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig {
		return v.WindowsExecStepConfig
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPostStepPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStep)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepPtrOutput) ToPatchDeploymentPatchConfigPostStepPtrOutput() PatchDeploymentPatchConfigPostStepPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepPtrOutput) ToPatchDeploymentPatchConfigPostStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepPtrOutput) Elem() PatchDeploymentPatchConfigPostStepOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStep) PatchDeploymentPatchConfigPostStep { return *v }).(PatchDeploymentPatchConfigPostStepOutput)
}

// The ExecStepConfig for all Linux VMs targeted by the PatchJob.  Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepPtrOutput) LinuxExecStepConfig() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig {
		if v == nil {
			return nil
		}
		return v.LinuxExecStepConfig
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput)
}

// The ExecStepConfig for all Windows VMs targeted by the PatchJob.  Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepPtrOutput) WindowsExecStepConfig() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStep) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig {
		if v == nil {
			return nil
		}
		return v.WindowsExecStepConfig
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfig struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes []int `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.  Structure is documented below.
	GcsObject *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	Interpreter *string `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath *string `pulumi:"localPath"`
}

// PatchDeploymentPatchConfigPostStepLinuxExecStepConfigInput is an input type that accepts PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs and PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepLinuxExecStepConfigInput` via:
//
//          PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs{...}
type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput
	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes pulumi.IntArrayInput `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.  Structure is documented below.
	GcsObject PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput)
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput).ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs, PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtr and PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput` via:
//
//          PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput
	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput
}

type patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs

func PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtr(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigArgs) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrInput {
	return (*patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepLinuxExecStepConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrType) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig {
		return &v
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) []int { return v.AllowedSuccessCodes }).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.  Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) GcsObject() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject {
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepLinuxExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) Elem() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) PatchDeploymentPatchConfigPostStepLinuxExecStepConfig {
		return *v
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) []int {
		if v == nil {
			return nil
		}
		return v.AllowedSuccessCodes
	}).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.  Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) GcsObject() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject {
		if v == nil {
			return nil
		}
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject struct {
	// Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber string `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectInput is an input type that accepts PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs and PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectInput` via:
//
//          PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs{...}
type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput
	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs struct {
	// Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber pulumi.StringInput `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput)
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput).ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs, PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtr and PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput` via:
//
//          PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput
	ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput
}

type patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs

func PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtr(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectArgs) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrInput {
	return (*patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject {
		return &v
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) GenerationNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) string {
		return v.GenerationNumber
	}).(pulumi.StringOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) string { return v.Object }).(pulumi.StringOutput)
}

type PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) Elem() PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject {
		return *v
	}).(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) GenerationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.GenerationNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfig struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes []int `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.  Structure is documented below.
	GcsObject *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	Interpreter *string `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath *string `pulumi:"localPath"`
}

// PatchDeploymentPatchConfigPostStepWindowsExecStepConfigInput is an input type that accepts PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs and PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepWindowsExecStepConfigInput` via:
//
//          PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs{...}
type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput
	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes pulumi.IntArrayInput `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.  Structure is documented below.
	GcsObject PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput)
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput).ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs, PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtr and PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput` via:
//
//          PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput
	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput
}

type patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs

func PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtr(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigArgs) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrInput {
	return (*patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepWindowsExecStepConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrType) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig {
		return &v
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) []int { return v.AllowedSuccessCodes }).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.  Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) GcsObject() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject {
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepWindowsExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) Elem() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) PatchDeploymentPatchConfigPostStepWindowsExecStepConfig {
		return *v
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) []int {
		if v == nil {
			return nil
		}
		return v.AllowedSuccessCodes
	}).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.  Structure is documented below.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) GcsObject() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject {
		if v == nil {
			return nil
		}
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject struct {
	// Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber string `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectInput is an input type that accepts PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs and PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectInput` via:
//
//          PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs{...}
type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput
	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs struct {
	// Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber pulumi.StringInput `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput)
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput).ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput is an input type that accepts PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs, PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtr and PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput` via:
//
//          PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput
	ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput
}

type patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs

func PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtr(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectArgs) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrInput {
	return (*patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType)(v)
}

func (*patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject {
		return &v
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) GenerationNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) string {
		return v.GenerationNumber
	}).(pulumi.StringOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) string { return v.Object }).(pulumi.StringOutput)
}

type PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) Elem() PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject {
		return *v
	}).(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) GenerationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.GenerationNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStep struct {
	// The ExecStepConfig for all Linux VMs targeted by the PatchJob.  Structure is documented below.
	LinuxExecStepConfig *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig `pulumi:"linuxExecStepConfig"`
	// The ExecStepConfig for all Windows VMs targeted by the PatchJob.  Structure is documented below.
	WindowsExecStepConfig *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig `pulumi:"windowsExecStepConfig"`
}

// PatchDeploymentPatchConfigPreStepInput is an input type that accepts PatchDeploymentPatchConfigPreStepArgs and PatchDeploymentPatchConfigPreStepOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepInput` via:
//
//          PatchDeploymentPatchConfigPreStepArgs{...}
type PatchDeploymentPatchConfigPreStepInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepOutput() PatchDeploymentPatchConfigPreStepOutput
	ToPatchDeploymentPatchConfigPreStepOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepOutput
}

type PatchDeploymentPatchConfigPreStepArgs struct {
	// The ExecStepConfig for all Linux VMs targeted by the PatchJob.  Structure is documented below.
	LinuxExecStepConfig PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput `pulumi:"linuxExecStepConfig"`
	// The ExecStepConfig for all Windows VMs targeted by the PatchJob.  Structure is documented below.
	WindowsExecStepConfig PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput `pulumi:"windowsExecStepConfig"`
}

func (PatchDeploymentPatchConfigPreStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStep)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepArgs) ToPatchDeploymentPatchConfigPreStepOutput() PatchDeploymentPatchConfigPreStepOutput {
	return i.ToPatchDeploymentPatchConfigPreStepOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepArgs) ToPatchDeploymentPatchConfigPreStepOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepOutput)
}

func (i PatchDeploymentPatchConfigPreStepArgs) ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepArgs) ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepOutput).ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepArgs, PatchDeploymentPatchConfigPreStepPtr and PatchDeploymentPatchConfigPreStepPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepPtrInput` via:
//
//          PatchDeploymentPatchConfigPreStepArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPreStepPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput
	ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepPtrOutput
}

type patchDeploymentPatchConfigPreStepPtrType PatchDeploymentPatchConfigPreStepArgs

func PatchDeploymentPatchConfigPreStepPtr(v *PatchDeploymentPatchConfigPreStepArgs) PatchDeploymentPatchConfigPreStepPtrInput {
	return (*patchDeploymentPatchConfigPreStepPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStep)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepPtrType) ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepPtrType) ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepPtrOutput)
}

type PatchDeploymentPatchConfigPreStepOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStep)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepOutput) ToPatchDeploymentPatchConfigPreStepOutput() PatchDeploymentPatchConfigPreStepOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepOutput) ToPatchDeploymentPatchConfigPreStepOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepOutput) ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepOutput) ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStep {
		return &v
	}).(PatchDeploymentPatchConfigPreStepPtrOutput)
}

// The ExecStepConfig for all Linux VMs targeted by the PatchJob.  Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepOutput) LinuxExecStepConfig() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig {
		return v.LinuxExecStepConfig
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput)
}

// The ExecStepConfig for all Windows VMs targeted by the PatchJob.  Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepOutput) WindowsExecStepConfig() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig {
		return v.WindowsExecStepConfig
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPreStepPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStep)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepPtrOutput) ToPatchDeploymentPatchConfigPreStepPtrOutput() PatchDeploymentPatchConfigPreStepPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepPtrOutput) ToPatchDeploymentPatchConfigPreStepPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepPtrOutput) Elem() PatchDeploymentPatchConfigPreStepOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStep) PatchDeploymentPatchConfigPreStep { return *v }).(PatchDeploymentPatchConfigPreStepOutput)
}

// The ExecStepConfig for all Linux VMs targeted by the PatchJob.  Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepPtrOutput) LinuxExecStepConfig() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig {
		if v == nil {
			return nil
		}
		return v.LinuxExecStepConfig
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput)
}

// The ExecStepConfig for all Windows VMs targeted by the PatchJob.  Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepPtrOutput) WindowsExecStepConfig() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStep) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig {
		if v == nil {
			return nil
		}
		return v.WindowsExecStepConfig
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfig struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes []int `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.  Structure is documented below.
	GcsObject *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	Interpreter *string `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath *string `pulumi:"localPath"`
}

// PatchDeploymentPatchConfigPreStepLinuxExecStepConfigInput is an input type that accepts PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs and PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepLinuxExecStepConfigInput` via:
//
//          PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs{...}
type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput
	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes pulumi.IntArrayInput `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.  Structure is documented below.
	GcsObject PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput)
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput).ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs, PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtr and PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput` via:
//
//          PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput
	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput
}

type patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs

func PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtr(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigArgs) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrInput {
	return (*patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepLinuxExecStepConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrType) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig {
		return &v
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) []int { return v.AllowedSuccessCodes }).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.  Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) GcsObject() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject {
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepLinuxExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) Elem() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) PatchDeploymentPatchConfigPreStepLinuxExecStepConfig {
		return *v
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) []int {
		if v == nil {
			return nil
		}
		return v.AllowedSuccessCodes
	}).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.  Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) GcsObject() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject {
		if v == nil {
			return nil
		}
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject struct {
	// Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber string `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectInput is an input type that accepts PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs and PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectInput` via:
//
//          PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs{...}
type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput
	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs struct {
	// Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber pulumi.StringInput `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput)
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput).ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs, PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtr and PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput` via:
//
//          PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput
	ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput
}

type patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs

func PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtr(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectArgs) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrInput {
	return (*patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject {
		return &v
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) GenerationNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) string {
		return v.GenerationNumber
	}).(pulumi.StringOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) string { return v.Object }).(pulumi.StringOutput)
}

type PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) Elem() PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject {
		return *v
	}).(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) GenerationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.GenerationNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfig struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes []int `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.  Structure is documented below.
	GcsObject *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	Interpreter *string `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath *string `pulumi:"localPath"`
}

// PatchDeploymentPatchConfigPreStepWindowsExecStepConfigInput is an input type that accepts PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs and PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepWindowsExecStepConfigInput` via:
//
//          PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs{...}
type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput
	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes pulumi.IntArrayInput `pulumi:"allowedSuccessCodes"`
	// A Cloud Storage object containing the executable.  Structure is documented below.
	GcsObject PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput `pulumi:"gcsObject"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will
	// be executed directly, which will likely only succeed for scripts with shebang lines.
	Interpreter pulumi.StringPtrInput `pulumi:"interpreter"`
	// An absolute path to the executable on the VM.
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
}

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfig)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput)
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput).ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs, PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtr and PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput` via:
//
//          PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput
	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput
}

type patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs

func PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtr(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigArgs) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrInput {
	return (*patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepWindowsExecStepConfig)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrType) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig {
		return &v
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) []int { return v.AllowedSuccessCodes }).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.  Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) GcsObject() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject {
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *string { return v.Interpreter }).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepWindowsExecStepConfig)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) Elem() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) PatchDeploymentPatchConfigPreStepWindowsExecStepConfig {
		return *v
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput)
}

// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) AllowedSuccessCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) []int {
		if v == nil {
			return nil
		}
		return v.AllowedSuccessCodes
	}).(pulumi.IntArrayOutput)
}

// A Cloud Storage object containing the executable.  Structure is documented below.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) GcsObject() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject {
		if v == nil {
			return nil
		}
		return v.GcsObject
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// The script interpreter to use to run the script. If no interpreter is specified the script will
// be executed directly, which will likely only succeed for scripts with shebang lines.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) Interpreter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.Interpreter
	}).(pulumi.StringPtrOutput)
}

// An absolute path to the executable on the VM.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalPath
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject struct {
	// Bucket of the Cloud Storage object.
	Bucket string `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber string `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object string `pulumi:"object"`
}

// PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectInput is an input type that accepts PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs and PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectInput` via:
//
//          PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs{...}
type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput
	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs struct {
	// Bucket of the Cloud Storage object.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
	GenerationNumber pulumi.StringInput `pulumi:"generationNumber"`
	// Name of the Cloud Storage object.
	Object pulumi.StringInput `pulumi:"object"`
}

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput)
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput).ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput is an input type that accepts PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs, PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtr and PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput` via:
//
//          PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput
	ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput
}

type patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs

func PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtr(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectArgs) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrInput {
	return (*patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType)(v)
}

func (*patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return i.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrType) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject {
		return &v
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) string { return v.Bucket }).(pulumi.StringOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) GenerationNumber() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) string {
		return v.GenerationNumber
	}).(pulumi.StringOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) string { return v.Object }).(pulumi.StringOutput)
}

type PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) ToPatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) Elem() PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject {
		return *v
	}).(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput)
}

// Bucket of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) GenerationNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.GenerationNumber
	}).(pulumi.StringPtrOutput)
}

// Name of the Cloud Storage object.
func (o PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObject) *string {
		if v == nil {
			return nil
		}
		return &v.Object
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentPatchConfigWindowsUpdate struct {
	// Only apply updates of these windows update classifications. If empty, all updates are applied.
	Classifications *string `pulumi:"classifications"`
	// List of KBs to exclude from update.
	Excludes []string `pulumi:"excludes"`
	// An exclusive list of kbs to be updated. These are the only patches that will be updated.
	// This field must not be used with other patch configurations.
	ExclusivePatches []string `pulumi:"exclusivePatches"`
}

// PatchDeploymentPatchConfigWindowsUpdateInput is an input type that accepts PatchDeploymentPatchConfigWindowsUpdateArgs and PatchDeploymentPatchConfigWindowsUpdateOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigWindowsUpdateInput` via:
//
//          PatchDeploymentPatchConfigWindowsUpdateArgs{...}
type PatchDeploymentPatchConfigWindowsUpdateInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigWindowsUpdateOutput() PatchDeploymentPatchConfigWindowsUpdateOutput
	ToPatchDeploymentPatchConfigWindowsUpdateOutputWithContext(context.Context) PatchDeploymentPatchConfigWindowsUpdateOutput
}

type PatchDeploymentPatchConfigWindowsUpdateArgs struct {
	// Only apply updates of these windows update classifications. If empty, all updates are applied.
	Classifications pulumi.StringPtrInput `pulumi:"classifications"`
	// List of KBs to exclude from update.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// An exclusive list of kbs to be updated. These are the only patches that will be updated.
	// This field must not be used with other patch configurations.
	ExclusivePatches pulumi.StringArrayInput `pulumi:"exclusivePatches"`
}

func (PatchDeploymentPatchConfigWindowsUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigWindowsUpdate)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigWindowsUpdateArgs) ToPatchDeploymentPatchConfigWindowsUpdateOutput() PatchDeploymentPatchConfigWindowsUpdateOutput {
	return i.ToPatchDeploymentPatchConfigWindowsUpdateOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigWindowsUpdateArgs) ToPatchDeploymentPatchConfigWindowsUpdateOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigWindowsUpdateOutput)
}

func (i PatchDeploymentPatchConfigWindowsUpdateArgs) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return i.ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigWindowsUpdateArgs) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigWindowsUpdateOutput).ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigWindowsUpdatePtrInput is an input type that accepts PatchDeploymentPatchConfigWindowsUpdateArgs, PatchDeploymentPatchConfigWindowsUpdatePtr and PatchDeploymentPatchConfigWindowsUpdatePtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigWindowsUpdatePtrInput` via:
//
//          PatchDeploymentPatchConfigWindowsUpdateArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigWindowsUpdatePtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput
	ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput
}

type patchDeploymentPatchConfigWindowsUpdatePtrType PatchDeploymentPatchConfigWindowsUpdateArgs

func PatchDeploymentPatchConfigWindowsUpdatePtr(v *PatchDeploymentPatchConfigWindowsUpdateArgs) PatchDeploymentPatchConfigWindowsUpdatePtrInput {
	return (*patchDeploymentPatchConfigWindowsUpdatePtrType)(v)
}

func (*patchDeploymentPatchConfigWindowsUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigWindowsUpdate)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigWindowsUpdatePtrType) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return i.ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigWindowsUpdatePtrType) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigWindowsUpdatePtrOutput)
}

type PatchDeploymentPatchConfigWindowsUpdateOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigWindowsUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigWindowsUpdate)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ToPatchDeploymentPatchConfigWindowsUpdateOutput() PatchDeploymentPatchConfigWindowsUpdateOutput {
	return o
}

func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ToPatchDeploymentPatchConfigWindowsUpdateOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdateOutput {
	return o
}

func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o.ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigWindowsUpdate) *PatchDeploymentPatchConfigWindowsUpdate {
		return &v
	}).(PatchDeploymentPatchConfigWindowsUpdatePtrOutput)
}

// Only apply updates of these windows update classifications. If empty, all updates are applied.
func (o PatchDeploymentPatchConfigWindowsUpdateOutput) Classifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigWindowsUpdate) *string { return v.Classifications }).(pulumi.StringPtrOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigWindowsUpdateOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigWindowsUpdate) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// An exclusive list of kbs to be updated. These are the only patches that will be updated.
// This field must not be used with other patch configurations.
func (o PatchDeploymentPatchConfigWindowsUpdateOutput) ExclusivePatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigWindowsUpdate) []string { return v.ExclusivePatches }).(pulumi.StringArrayOutput)
}

type PatchDeploymentPatchConfigWindowsUpdatePtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigWindowsUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigWindowsUpdate)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutput() PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) ToPatchDeploymentPatchConfigWindowsUpdatePtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigWindowsUpdatePtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) Elem() PatchDeploymentPatchConfigWindowsUpdateOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigWindowsUpdate) PatchDeploymentPatchConfigWindowsUpdate { return *v }).(PatchDeploymentPatchConfigWindowsUpdateOutput)
}

// Only apply updates of these windows update classifications. If empty, all updates are applied.
func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) Classifications() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigWindowsUpdate) *string {
		if v == nil {
			return nil
		}
		return v.Classifications
	}).(pulumi.StringPtrOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigWindowsUpdate) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// An exclusive list of kbs to be updated. These are the only patches that will be updated.
// This field must not be used with other patch configurations.
func (o PatchDeploymentPatchConfigWindowsUpdatePtrOutput) ExclusivePatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigWindowsUpdate) []string {
		if v == nil {
			return nil
		}
		return v.ExclusivePatches
	}).(pulumi.StringArrayOutput)
}

type PatchDeploymentPatchConfigYum struct {
	// List of KBs to exclude from update.
	Excludes []string `pulumi:"excludes"`
	// An exclusive list of packages to be updated. These are the only packages that will be updated.
	// If these packages are not installed, they will be ignored. This field cannot be specified with
	// any other patch configuration fields.
	ExclusivePackages []string `pulumi:"exclusivePackages"`
	// Will cause patch to run yum update-minimal instead.
	Minimal *bool `pulumi:"minimal"`
	// Adds the --security flag to yum update. Not supported on all platforms.
	Security *bool `pulumi:"security"`
}

// PatchDeploymentPatchConfigYumInput is an input type that accepts PatchDeploymentPatchConfigYumArgs and PatchDeploymentPatchConfigYumOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigYumInput` via:
//
//          PatchDeploymentPatchConfigYumArgs{...}
type PatchDeploymentPatchConfigYumInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigYumOutput() PatchDeploymentPatchConfigYumOutput
	ToPatchDeploymentPatchConfigYumOutputWithContext(context.Context) PatchDeploymentPatchConfigYumOutput
}

type PatchDeploymentPatchConfigYumArgs struct {
	// List of KBs to exclude from update.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// An exclusive list of packages to be updated. These are the only packages that will be updated.
	// If these packages are not installed, they will be ignored. This field cannot be specified with
	// any other patch configuration fields.
	ExclusivePackages pulumi.StringArrayInput `pulumi:"exclusivePackages"`
	// Will cause patch to run yum update-minimal instead.
	Minimal pulumi.BoolPtrInput `pulumi:"minimal"`
	// Adds the --security flag to yum update. Not supported on all platforms.
	Security pulumi.BoolPtrInput `pulumi:"security"`
}

func (PatchDeploymentPatchConfigYumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigYum)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigYumArgs) ToPatchDeploymentPatchConfigYumOutput() PatchDeploymentPatchConfigYumOutput {
	return i.ToPatchDeploymentPatchConfigYumOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigYumArgs) ToPatchDeploymentPatchConfigYumOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigYumOutput)
}

func (i PatchDeploymentPatchConfigYumArgs) ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput {
	return i.ToPatchDeploymentPatchConfigYumPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigYumArgs) ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigYumOutput).ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigYumPtrInput is an input type that accepts PatchDeploymentPatchConfigYumArgs, PatchDeploymentPatchConfigYumPtr and PatchDeploymentPatchConfigYumPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigYumPtrInput` via:
//
//          PatchDeploymentPatchConfigYumArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigYumPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput
	ToPatchDeploymentPatchConfigYumPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigYumPtrOutput
}

type patchDeploymentPatchConfigYumPtrType PatchDeploymentPatchConfigYumArgs

func PatchDeploymentPatchConfigYumPtr(v *PatchDeploymentPatchConfigYumArgs) PatchDeploymentPatchConfigYumPtrInput {
	return (*patchDeploymentPatchConfigYumPtrType)(v)
}

func (*patchDeploymentPatchConfigYumPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigYum)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigYumPtrType) ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput {
	return i.ToPatchDeploymentPatchConfigYumPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigYumPtrType) ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigYumPtrOutput)
}

type PatchDeploymentPatchConfigYumOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigYumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigYum)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigYumOutput) ToPatchDeploymentPatchConfigYumOutput() PatchDeploymentPatchConfigYumOutput {
	return o
}

func (o PatchDeploymentPatchConfigYumOutput) ToPatchDeploymentPatchConfigYumOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumOutput {
	return o
}

func (o PatchDeploymentPatchConfigYumOutput) ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput {
	return o.ToPatchDeploymentPatchConfigYumPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigYumOutput) ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigYum) *PatchDeploymentPatchConfigYum {
		return &v
	}).(PatchDeploymentPatchConfigYumPtrOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigYumOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigYum) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// An exclusive list of packages to be updated. These are the only packages that will be updated.
// If these packages are not installed, they will be ignored. This field cannot be specified with
// any other patch configuration fields.
func (o PatchDeploymentPatchConfigYumOutput) ExclusivePackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigYum) []string { return v.ExclusivePackages }).(pulumi.StringArrayOutput)
}

// Will cause patch to run yum update-minimal instead.
func (o PatchDeploymentPatchConfigYumOutput) Minimal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigYum) *bool { return v.Minimal }).(pulumi.BoolPtrOutput)
}

// Adds the --security flag to yum update. Not supported on all platforms.
func (o PatchDeploymentPatchConfigYumOutput) Security() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigYum) *bool { return v.Security }).(pulumi.BoolPtrOutput)
}

type PatchDeploymentPatchConfigYumPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigYumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigYum)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigYumPtrOutput) ToPatchDeploymentPatchConfigYumPtrOutput() PatchDeploymentPatchConfigYumPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigYumPtrOutput) ToPatchDeploymentPatchConfigYumPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigYumPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigYumPtrOutput) Elem() PatchDeploymentPatchConfigYumOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) PatchDeploymentPatchConfigYum { return *v }).(PatchDeploymentPatchConfigYumOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigYumPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// An exclusive list of packages to be updated. These are the only packages that will be updated.
// If these packages are not installed, they will be ignored. This field cannot be specified with
// any other patch configuration fields.
func (o PatchDeploymentPatchConfigYumPtrOutput) ExclusivePackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) []string {
		if v == nil {
			return nil
		}
		return v.ExclusivePackages
	}).(pulumi.StringArrayOutput)
}

// Will cause patch to run yum update-minimal instead.
func (o PatchDeploymentPatchConfigYumPtrOutput) Minimal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) *bool {
		if v == nil {
			return nil
		}
		return v.Minimal
	}).(pulumi.BoolPtrOutput)
}

// Adds the --security flag to yum update. Not supported on all platforms.
func (o PatchDeploymentPatchConfigYumPtrOutput) Security() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigYum) *bool {
		if v == nil {
			return nil
		}
		return v.Security
	}).(pulumi.BoolPtrOutput)
}

type PatchDeploymentPatchConfigZypper struct {
	// Install only patches with these categories. Common categories include security, recommended, and feature.
	Categories []string `pulumi:"categories"`
	// List of KBs to exclude from update.
	Excludes []string `pulumi:"excludes"`
	// An exclusive list of kbs to be updated. These are the only patches that will be updated.
	// This field must not be used with other patch configurations.
	ExclusivePatches []string `pulumi:"exclusivePatches"`
	// Install only patches with these severities. Common severities include critical, important, moderate, and low.
	Severities []string `pulumi:"severities"`
	// Adds the --with-optional flag to zypper patch.
	WithOptional *bool `pulumi:"withOptional"`
	// Adds the --with-update flag, to zypper patch.
	WithUpdate *bool `pulumi:"withUpdate"`
}

// PatchDeploymentPatchConfigZypperInput is an input type that accepts PatchDeploymentPatchConfigZypperArgs and PatchDeploymentPatchConfigZypperOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigZypperInput` via:
//
//          PatchDeploymentPatchConfigZypperArgs{...}
type PatchDeploymentPatchConfigZypperInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigZypperOutput() PatchDeploymentPatchConfigZypperOutput
	ToPatchDeploymentPatchConfigZypperOutputWithContext(context.Context) PatchDeploymentPatchConfigZypperOutput
}

type PatchDeploymentPatchConfigZypperArgs struct {
	// Install only patches with these categories. Common categories include security, recommended, and feature.
	Categories pulumi.StringArrayInput `pulumi:"categories"`
	// List of KBs to exclude from update.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// An exclusive list of kbs to be updated. These are the only patches that will be updated.
	// This field must not be used with other patch configurations.
	ExclusivePatches pulumi.StringArrayInput `pulumi:"exclusivePatches"`
	// Install only patches with these severities. Common severities include critical, important, moderate, and low.
	Severities pulumi.StringArrayInput `pulumi:"severities"`
	// Adds the --with-optional flag to zypper patch.
	WithOptional pulumi.BoolPtrInput `pulumi:"withOptional"`
	// Adds the --with-update flag, to zypper patch.
	WithUpdate pulumi.BoolPtrInput `pulumi:"withUpdate"`
}

func (PatchDeploymentPatchConfigZypperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigZypper)(nil)).Elem()
}

func (i PatchDeploymentPatchConfigZypperArgs) ToPatchDeploymentPatchConfigZypperOutput() PatchDeploymentPatchConfigZypperOutput {
	return i.ToPatchDeploymentPatchConfigZypperOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigZypperArgs) ToPatchDeploymentPatchConfigZypperOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigZypperOutput)
}

func (i PatchDeploymentPatchConfigZypperArgs) ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput {
	return i.ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentPatchConfigZypperArgs) ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigZypperOutput).ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx)
}

// PatchDeploymentPatchConfigZypperPtrInput is an input type that accepts PatchDeploymentPatchConfigZypperArgs, PatchDeploymentPatchConfigZypperPtr and PatchDeploymentPatchConfigZypperPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentPatchConfigZypperPtrInput` via:
//
//          PatchDeploymentPatchConfigZypperArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentPatchConfigZypperPtrInput interface {
	pulumi.Input

	ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput
	ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(context.Context) PatchDeploymentPatchConfigZypperPtrOutput
}

type patchDeploymentPatchConfigZypperPtrType PatchDeploymentPatchConfigZypperArgs

func PatchDeploymentPatchConfigZypperPtr(v *PatchDeploymentPatchConfigZypperArgs) PatchDeploymentPatchConfigZypperPtrInput {
	return (*patchDeploymentPatchConfigZypperPtrType)(v)
}

func (*patchDeploymentPatchConfigZypperPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigZypper)(nil)).Elem()
}

func (i *patchDeploymentPatchConfigZypperPtrType) ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput {
	return i.ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentPatchConfigZypperPtrType) ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentPatchConfigZypperPtrOutput)
}

type PatchDeploymentPatchConfigZypperOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigZypperOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentPatchConfigZypper)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigZypperOutput) ToPatchDeploymentPatchConfigZypperOutput() PatchDeploymentPatchConfigZypperOutput {
	return o
}

func (o PatchDeploymentPatchConfigZypperOutput) ToPatchDeploymentPatchConfigZypperOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperOutput {
	return o
}

func (o PatchDeploymentPatchConfigZypperOutput) ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput {
	return o.ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentPatchConfigZypperOutput) ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) *PatchDeploymentPatchConfigZypper {
		return &v
	}).(PatchDeploymentPatchConfigZypperPtrOutput)
}

// Install only patches with these categories. Common categories include security, recommended, and feature.
func (o PatchDeploymentPatchConfigZypperOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigZypperOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// An exclusive list of kbs to be updated. These are the only patches that will be updated.
// This field must not be used with other patch configurations.
func (o PatchDeploymentPatchConfigZypperOutput) ExclusivePatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) []string { return v.ExclusivePatches }).(pulumi.StringArrayOutput)
}

// Install only patches with these severities. Common severities include critical, important, moderate, and low.
func (o PatchDeploymentPatchConfigZypperOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) []string { return v.Severities }).(pulumi.StringArrayOutput)
}

// Adds the --with-optional flag to zypper patch.
func (o PatchDeploymentPatchConfigZypperOutput) WithOptional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) *bool { return v.WithOptional }).(pulumi.BoolPtrOutput)
}

// Adds the --with-update flag, to zypper patch.
func (o PatchDeploymentPatchConfigZypperOutput) WithUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchDeploymentPatchConfigZypper) *bool { return v.WithUpdate }).(pulumi.BoolPtrOutput)
}

type PatchDeploymentPatchConfigZypperPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentPatchConfigZypperPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentPatchConfigZypper)(nil)).Elem()
}

func (o PatchDeploymentPatchConfigZypperPtrOutput) ToPatchDeploymentPatchConfigZypperPtrOutput() PatchDeploymentPatchConfigZypperPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigZypperPtrOutput) ToPatchDeploymentPatchConfigZypperPtrOutputWithContext(ctx context.Context) PatchDeploymentPatchConfigZypperPtrOutput {
	return o
}

func (o PatchDeploymentPatchConfigZypperPtrOutput) Elem() PatchDeploymentPatchConfigZypperOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) PatchDeploymentPatchConfigZypper { return *v }).(PatchDeploymentPatchConfigZypperOutput)
}

// Install only patches with these categories. Common categories include security, recommended, and feature.
func (o PatchDeploymentPatchConfigZypperPtrOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) []string {
		if v == nil {
			return nil
		}
		return v.Categories
	}).(pulumi.StringArrayOutput)
}

// List of KBs to exclude from update.
func (o PatchDeploymentPatchConfigZypperPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// An exclusive list of kbs to be updated. These are the only patches that will be updated.
// This field must not be used with other patch configurations.
func (o PatchDeploymentPatchConfigZypperPtrOutput) ExclusivePatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) []string {
		if v == nil {
			return nil
		}
		return v.ExclusivePatches
	}).(pulumi.StringArrayOutput)
}

// Install only patches with these severities. Common severities include critical, important, moderate, and low.
func (o PatchDeploymentPatchConfigZypperPtrOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) []string {
		if v == nil {
			return nil
		}
		return v.Severities
	}).(pulumi.StringArrayOutput)
}

// Adds the --with-optional flag to zypper patch.
func (o PatchDeploymentPatchConfigZypperPtrOutput) WithOptional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) *bool {
		if v == nil {
			return nil
		}
		return v.WithOptional
	}).(pulumi.BoolPtrOutput)
}

// Adds the --with-update flag, to zypper patch.
func (o PatchDeploymentPatchConfigZypperPtrOutput) WithUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentPatchConfigZypper) *bool {
		if v == nil {
			return nil
		}
		return v.WithUpdate
	}).(pulumi.BoolPtrOutput)
}

type PatchDeploymentRecurringSchedule struct {
	// The end time at which a recurring patch deployment schedule is no longer active.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	EndTime *string `pulumi:"endTime"`
	// -
	// The time the last patch job ran successfully.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	LastExecuteTime *string `pulumi:"lastExecuteTime"`
	// Schedule with monthly executions.  Structure is documented below.
	Monthly *PatchDeploymentRecurringScheduleMonthly `pulumi:"monthly"`
	// -
	// The time the next patch job is scheduled to run.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	NextExecuteTime *string `pulumi:"nextExecuteTime"`
	// The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	StartTime *string `pulumi:"startTime"`
	// Time of the day to run a recurring deployment.  Structure is documented below.
	TimeOfDay PatchDeploymentRecurringScheduleTimeOfDay `pulumi:"timeOfDay"`
	// Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
	// determined by the chosen time zone.  Structure is documented below.
	TimeZone PatchDeploymentRecurringScheduleTimeZone `pulumi:"timeZone"`
	// Schedule with weekly executions.  Structure is documented below.
	Weekly *PatchDeploymentRecurringScheduleWeekly `pulumi:"weekly"`
}

// PatchDeploymentRecurringScheduleInput is an input type that accepts PatchDeploymentRecurringScheduleArgs and PatchDeploymentRecurringScheduleOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleInput` via:
//
//          PatchDeploymentRecurringScheduleArgs{...}
type PatchDeploymentRecurringScheduleInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleOutput() PatchDeploymentRecurringScheduleOutput
	ToPatchDeploymentRecurringScheduleOutputWithContext(context.Context) PatchDeploymentRecurringScheduleOutput
}

type PatchDeploymentRecurringScheduleArgs struct {
	// The end time at which a recurring patch deployment schedule is no longer active.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// -
	// The time the last patch job ran successfully.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	LastExecuteTime pulumi.StringPtrInput `pulumi:"lastExecuteTime"`
	// Schedule with monthly executions.  Structure is documented below.
	Monthly PatchDeploymentRecurringScheduleMonthlyPtrInput `pulumi:"monthly"`
	// -
	// The time the next patch job is scheduled to run.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	NextExecuteTime pulumi.StringPtrInput `pulumi:"nextExecuteTime"`
	// The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Time of the day to run a recurring deployment.  Structure is documented below.
	TimeOfDay PatchDeploymentRecurringScheduleTimeOfDayInput `pulumi:"timeOfDay"`
	// Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
	// determined by the chosen time zone.  Structure is documented below.
	TimeZone PatchDeploymentRecurringScheduleTimeZoneInput `pulumi:"timeZone"`
	// Schedule with weekly executions.  Structure is documented below.
	Weekly PatchDeploymentRecurringScheduleWeeklyPtrInput `pulumi:"weekly"`
}

func (PatchDeploymentRecurringScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringSchedule)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleArgs) ToPatchDeploymentRecurringScheduleOutput() PatchDeploymentRecurringScheduleOutput {
	return i.ToPatchDeploymentRecurringScheduleOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleArgs) ToPatchDeploymentRecurringScheduleOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleOutput)
}

func (i PatchDeploymentRecurringScheduleArgs) ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput {
	return i.ToPatchDeploymentRecurringSchedulePtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleArgs) ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleOutput).ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringSchedulePtrInput is an input type that accepts PatchDeploymentRecurringScheduleArgs, PatchDeploymentRecurringSchedulePtr and PatchDeploymentRecurringSchedulePtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringSchedulePtrInput` via:
//
//          PatchDeploymentRecurringScheduleArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentRecurringSchedulePtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput
	ToPatchDeploymentRecurringSchedulePtrOutputWithContext(context.Context) PatchDeploymentRecurringSchedulePtrOutput
}

type patchDeploymentRecurringSchedulePtrType PatchDeploymentRecurringScheduleArgs

func PatchDeploymentRecurringSchedulePtr(v *PatchDeploymentRecurringScheduleArgs) PatchDeploymentRecurringSchedulePtrInput {
	return (*patchDeploymentRecurringSchedulePtrType)(v)
}

func (*patchDeploymentRecurringSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringSchedule)(nil)).Elem()
}

func (i *patchDeploymentRecurringSchedulePtrType) ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput {
	return i.ToPatchDeploymentRecurringSchedulePtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringSchedulePtrType) ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringSchedulePtrOutput)
}

type PatchDeploymentRecurringScheduleOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringSchedule)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleOutput) ToPatchDeploymentRecurringScheduleOutput() PatchDeploymentRecurringScheduleOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleOutput) ToPatchDeploymentRecurringScheduleOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleOutput) ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput {
	return o.ToPatchDeploymentRecurringSchedulePtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleOutput) ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringSchedulePtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringSchedule {
		return &v
	}).(PatchDeploymentRecurringSchedulePtrOutput)
}

// The end time at which a recurring patch deployment schedule is no longer active.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// -
// The time the last patch job ran successfully.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringScheduleOutput) LastExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *string { return v.LastExecuteTime }).(pulumi.StringPtrOutput)
}

// Schedule with monthly executions.  Structure is documented below.
func (o PatchDeploymentRecurringScheduleOutput) Monthly() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleMonthly { return v.Monthly }).(PatchDeploymentRecurringScheduleMonthlyPtrOutput)
}

// -
// The time the next patch job is scheduled to run.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringScheduleOutput) NextExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *string { return v.NextExecuteTime }).(pulumi.StringPtrOutput)
}

// The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Time of the day to run a recurring deployment.  Structure is documented below.
func (o PatchDeploymentRecurringScheduleOutput) TimeOfDay() PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) PatchDeploymentRecurringScheduleTimeOfDay { return v.TimeOfDay }).(PatchDeploymentRecurringScheduleTimeOfDayOutput)
}

// Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
// determined by the chosen time zone.  Structure is documented below.
func (o PatchDeploymentRecurringScheduleOutput) TimeZone() PatchDeploymentRecurringScheduleTimeZoneOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) PatchDeploymentRecurringScheduleTimeZone { return v.TimeZone }).(PatchDeploymentRecurringScheduleTimeZoneOutput)
}

// Schedule with weekly executions.  Structure is documented below.
func (o PatchDeploymentRecurringScheduleOutput) Weekly() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleWeekly { return v.Weekly }).(PatchDeploymentRecurringScheduleWeeklyPtrOutput)
}

type PatchDeploymentRecurringSchedulePtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringSchedule)(nil)).Elem()
}

func (o PatchDeploymentRecurringSchedulePtrOutput) ToPatchDeploymentRecurringSchedulePtrOutput() PatchDeploymentRecurringSchedulePtrOutput {
	return o
}

func (o PatchDeploymentRecurringSchedulePtrOutput) ToPatchDeploymentRecurringSchedulePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringSchedulePtrOutput {
	return o
}

func (o PatchDeploymentRecurringSchedulePtrOutput) Elem() PatchDeploymentRecurringScheduleOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) PatchDeploymentRecurringSchedule { return *v }).(PatchDeploymentRecurringScheduleOutput)
}

// The end time at which a recurring patch deployment schedule is no longer active.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringSchedulePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// -
// The time the last patch job ran successfully.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringSchedulePtrOutput) LastExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *string {
		if v == nil {
			return nil
		}
		return v.LastExecuteTime
	}).(pulumi.StringPtrOutput)
}

// Schedule with monthly executions.  Structure is documented below.
func (o PatchDeploymentRecurringSchedulePtrOutput) Monthly() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleMonthly {
		if v == nil {
			return nil
		}
		return v.Monthly
	}).(PatchDeploymentRecurringScheduleMonthlyPtrOutput)
}

// -
// The time the next patch job is scheduled to run.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringSchedulePtrOutput) NextExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *string {
		if v == nil {
			return nil
		}
		return v.NextExecuteTime
	}).(pulumi.StringPtrOutput)
}

// The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o PatchDeploymentRecurringSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Time of the day to run a recurring deployment.  Structure is documented below.
func (o PatchDeploymentRecurringSchedulePtrOutput) TimeOfDay() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleTimeOfDay {
		if v == nil {
			return nil
		}
		return &v.TimeOfDay
	}).(PatchDeploymentRecurringScheduleTimeOfDayPtrOutput)
}

// Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
// determined by the chosen time zone.  Structure is documented below.
func (o PatchDeploymentRecurringSchedulePtrOutput) TimeZone() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleTimeZone {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(PatchDeploymentRecurringScheduleTimeZonePtrOutput)
}

// Schedule with weekly executions.  Structure is documented below.
func (o PatchDeploymentRecurringSchedulePtrOutput) Weekly() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringSchedule) *PatchDeploymentRecurringScheduleWeekly {
		if v == nil {
			return nil
		}
		return v.Weekly
	}).(PatchDeploymentRecurringScheduleWeeklyPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthly struct {
	// One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month.
	// Months without the target day will be skipped. For example, a schedule to run "every month on the 31st"
	// will not run in February, April, June, etc.
	MonthDay *int `pulumi:"monthDay"`
	// Week day in a month.  Structure is documented below.
	WeekDayOfMonth *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth `pulumi:"weekDayOfMonth"`
}

// PatchDeploymentRecurringScheduleMonthlyInput is an input type that accepts PatchDeploymentRecurringScheduleMonthlyArgs and PatchDeploymentRecurringScheduleMonthlyOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleMonthlyInput` via:
//
//          PatchDeploymentRecurringScheduleMonthlyArgs{...}
type PatchDeploymentRecurringScheduleMonthlyInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleMonthlyOutput() PatchDeploymentRecurringScheduleMonthlyOutput
	ToPatchDeploymentRecurringScheduleMonthlyOutputWithContext(context.Context) PatchDeploymentRecurringScheduleMonthlyOutput
}

type PatchDeploymentRecurringScheduleMonthlyArgs struct {
	// One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month.
	// Months without the target day will be skipped. For example, a schedule to run "every month on the 31st"
	// will not run in February, April, June, etc.
	MonthDay pulumi.IntPtrInput `pulumi:"monthDay"`
	// Week day in a month.  Structure is documented below.
	WeekDayOfMonth PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput `pulumi:"weekDayOfMonth"`
}

func (PatchDeploymentRecurringScheduleMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthly)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleMonthlyArgs) ToPatchDeploymentRecurringScheduleMonthlyOutput() PatchDeploymentRecurringScheduleMonthlyOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleMonthlyArgs) ToPatchDeploymentRecurringScheduleMonthlyOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyOutput)
}

func (i PatchDeploymentRecurringScheduleMonthlyArgs) ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleMonthlyArgs) ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyOutput).ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleMonthlyPtrInput is an input type that accepts PatchDeploymentRecurringScheduleMonthlyArgs, PatchDeploymentRecurringScheduleMonthlyPtr and PatchDeploymentRecurringScheduleMonthlyPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleMonthlyPtrInput` via:
//
//          PatchDeploymentRecurringScheduleMonthlyArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentRecurringScheduleMonthlyPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput
	ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput
}

type patchDeploymentRecurringScheduleMonthlyPtrType PatchDeploymentRecurringScheduleMonthlyArgs

func PatchDeploymentRecurringScheduleMonthlyPtr(v *PatchDeploymentRecurringScheduleMonthlyArgs) PatchDeploymentRecurringScheduleMonthlyPtrInput {
	return (*patchDeploymentRecurringScheduleMonthlyPtrType)(v)
}

func (*patchDeploymentRecurringScheduleMonthlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleMonthly)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleMonthlyPtrType) ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleMonthlyPtrType) ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthlyOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthly)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleMonthlyOutput) ToPatchDeploymentRecurringScheduleMonthlyOutput() PatchDeploymentRecurringScheduleMonthlyOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyOutput) ToPatchDeploymentRecurringScheduleMonthlyOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyOutput) ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o.ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleMonthlyOutput) ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthly) *PatchDeploymentRecurringScheduleMonthly {
		return &v
	}).(PatchDeploymentRecurringScheduleMonthlyPtrOutput)
}

// One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month.
// Months without the target day will be skipped. For example, a schedule to run "every month on the 31st"
// will not run in February, April, June, etc.
func (o PatchDeploymentRecurringScheduleMonthlyOutput) MonthDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthly) *int { return v.MonthDay }).(pulumi.IntPtrOutput)
}

// Week day in a month.  Structure is documented below.
func (o PatchDeploymentRecurringScheduleMonthlyOutput) WeekDayOfMonth() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthly) *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth {
		return v.WeekDayOfMonth
	}).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthlyPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleMonthlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleMonthly)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) ToPatchDeploymentRecurringScheduleMonthlyPtrOutput() PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) ToPatchDeploymentRecurringScheduleMonthlyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) Elem() PatchDeploymentRecurringScheduleMonthlyOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthly) PatchDeploymentRecurringScheduleMonthly { return *v }).(PatchDeploymentRecurringScheduleMonthlyOutput)
}

// One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month.
// Months without the target day will be skipped. For example, a schedule to run "every month on the 31st"
// will not run in February, April, June, etc.
func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) MonthDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthly) *int {
		if v == nil {
			return nil
		}
		return v.MonthDay
	}).(pulumi.IntPtrOutput)
}

// Week day in a month.  Structure is documented below.
func (o PatchDeploymentRecurringScheduleMonthlyPtrOutput) WeekDayOfMonth() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthly) *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth {
		if v == nil {
			return nil
		}
		return v.WeekDayOfMonth
	}).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth struct {
	// A day of the week.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.
	WeekOrdinal int `pulumi:"weekOrdinal"`
}

// PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthInput is an input type that accepts PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs and PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthInput` via:
//
//          PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs{...}
type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput
	ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutputWithContext(context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput
}

type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs struct {
	// A day of the week.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.
	WeekOrdinal pulumi.IntInput `pulumi:"weekOrdinal"`
}

func (PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput)
}

func (i PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput).ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput is an input type that accepts PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs, PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtr and PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput` via:
//
//          PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput
	ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput
}

type patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs

func PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtr(v *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthArgs) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrInput {
	return (*patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType)(v)
}

func (*patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrType) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput)
}

type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o.ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth {
		return &v
	}).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput)
}

// A day of the week.
func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.
func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput) WeekOrdinal() pulumi.IntOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) int { return v.WeekOrdinal }).(pulumi.IntOutput)
}

type PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) ToPatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) Elem() PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth {
		return *v
	}).(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput)
}

// A day of the week.
func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.
func (o PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput) WeekOrdinal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonth) *int {
		if v == nil {
			return nil
		}
		return &v.WeekOrdinal
	}).(pulumi.IntPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeOfDay struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// PatchDeploymentRecurringScheduleTimeOfDayInput is an input type that accepts PatchDeploymentRecurringScheduleTimeOfDayArgs and PatchDeploymentRecurringScheduleTimeOfDayOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleTimeOfDayInput` via:
//
//          PatchDeploymentRecurringScheduleTimeOfDayArgs{...}
type PatchDeploymentRecurringScheduleTimeOfDayInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleTimeOfDayOutput() PatchDeploymentRecurringScheduleTimeOfDayOutput
	ToPatchDeploymentRecurringScheduleTimeOfDayOutputWithContext(context.Context) PatchDeploymentRecurringScheduleTimeOfDayOutput
}

type PatchDeploymentRecurringScheduleTimeOfDayArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (PatchDeploymentRecurringScheduleTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeOfDay)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleTimeOfDayArgs) ToPatchDeploymentRecurringScheduleTimeOfDayOutput() PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeOfDayOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleTimeOfDayArgs) ToPatchDeploymentRecurringScheduleTimeOfDayOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeOfDayOutput)
}

func (i PatchDeploymentRecurringScheduleTimeOfDayArgs) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleTimeOfDayArgs) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeOfDayOutput).ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleTimeOfDayPtrInput is an input type that accepts PatchDeploymentRecurringScheduleTimeOfDayArgs, PatchDeploymentRecurringScheduleTimeOfDayPtr and PatchDeploymentRecurringScheduleTimeOfDayPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleTimeOfDayPtrInput` via:
//
//          PatchDeploymentRecurringScheduleTimeOfDayArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentRecurringScheduleTimeOfDayPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput
	ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput
}

type patchDeploymentRecurringScheduleTimeOfDayPtrType PatchDeploymentRecurringScheduleTimeOfDayArgs

func PatchDeploymentRecurringScheduleTimeOfDayPtr(v *PatchDeploymentRecurringScheduleTimeOfDayArgs) PatchDeploymentRecurringScheduleTimeOfDayPtrInput {
	return (*patchDeploymentRecurringScheduleTimeOfDayPtrType)(v)
}

func (*patchDeploymentRecurringScheduleTimeOfDayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleTimeOfDay)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleTimeOfDayPtrType) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleTimeOfDayPtrType) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeOfDayPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeOfDayOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeOfDay)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) ToPatchDeploymentRecurringScheduleTimeOfDayOutput() PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) ToPatchDeploymentRecurringScheduleTimeOfDayOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o.ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeOfDay) *PatchDeploymentRecurringScheduleTimeOfDay {
		return &v
	}).(PatchDeploymentRecurringScheduleTimeOfDayPtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeOfDay) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o PatchDeploymentRecurringScheduleTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeOfDayPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleTimeOfDay)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutput() PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) ToPatchDeploymentRecurringScheduleTimeOfDayPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeOfDayPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Elem() PatchDeploymentRecurringScheduleTimeOfDayOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) PatchDeploymentRecurringScheduleTimeOfDay {
		return *v
	}).(PatchDeploymentRecurringScheduleTimeOfDayOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23.
// An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Nanos
	}).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o PatchDeploymentRecurringScheduleTimeOfDayPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Seconds
	}).(pulumi.IntPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeZone struct {
	// IANA Time Zone Database time zone, e.g. "America/New_York".
	Id string `pulumi:"id"`
	// IANA Time Zone Database version number, e.g. "2019a".
	Version *string `pulumi:"version"`
}

// PatchDeploymentRecurringScheduleTimeZoneInput is an input type that accepts PatchDeploymentRecurringScheduleTimeZoneArgs and PatchDeploymentRecurringScheduleTimeZoneOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleTimeZoneInput` via:
//
//          PatchDeploymentRecurringScheduleTimeZoneArgs{...}
type PatchDeploymentRecurringScheduleTimeZoneInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleTimeZoneOutput() PatchDeploymentRecurringScheduleTimeZoneOutput
	ToPatchDeploymentRecurringScheduleTimeZoneOutputWithContext(context.Context) PatchDeploymentRecurringScheduleTimeZoneOutput
}

type PatchDeploymentRecurringScheduleTimeZoneArgs struct {
	// IANA Time Zone Database time zone, e.g. "America/New_York".
	Id pulumi.StringInput `pulumi:"id"`
	// IANA Time Zone Database version number, e.g. "2019a".
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PatchDeploymentRecurringScheduleTimeZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeZone)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleTimeZoneArgs) ToPatchDeploymentRecurringScheduleTimeZoneOutput() PatchDeploymentRecurringScheduleTimeZoneOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeZoneOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleTimeZoneArgs) ToPatchDeploymentRecurringScheduleTimeZoneOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeZoneOutput)
}

func (i PatchDeploymentRecurringScheduleTimeZoneArgs) ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleTimeZoneArgs) ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeZoneOutput).ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleTimeZonePtrInput is an input type that accepts PatchDeploymentRecurringScheduleTimeZoneArgs, PatchDeploymentRecurringScheduleTimeZonePtr and PatchDeploymentRecurringScheduleTimeZonePtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleTimeZonePtrInput` via:
//
//          PatchDeploymentRecurringScheduleTimeZoneArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentRecurringScheduleTimeZonePtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput
	ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput
}

type patchDeploymentRecurringScheduleTimeZonePtrType PatchDeploymentRecurringScheduleTimeZoneArgs

func PatchDeploymentRecurringScheduleTimeZonePtr(v *PatchDeploymentRecurringScheduleTimeZoneArgs) PatchDeploymentRecurringScheduleTimeZonePtrInput {
	return (*patchDeploymentRecurringScheduleTimeZonePtrType)(v)
}

func (*patchDeploymentRecurringScheduleTimeZonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleTimeZone)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleTimeZonePtrType) ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return i.ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleTimeZonePtrType) ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleTimeZonePtrOutput)
}

type PatchDeploymentRecurringScheduleTimeZoneOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleTimeZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleTimeZone)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleTimeZoneOutput) ToPatchDeploymentRecurringScheduleTimeZoneOutput() PatchDeploymentRecurringScheduleTimeZoneOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeZoneOutput) ToPatchDeploymentRecurringScheduleTimeZoneOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZoneOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeZoneOutput) ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o.ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleTimeZoneOutput) ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeZone) *PatchDeploymentRecurringScheduleTimeZone {
		return &v
	}).(PatchDeploymentRecurringScheduleTimeZonePtrOutput)
}

// IANA Time Zone Database time zone, e.g. "America/New_York".
func (o PatchDeploymentRecurringScheduleTimeZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeZone) string { return v.Id }).(pulumi.StringOutput)
}

// IANA Time Zone Database version number, e.g. "2019a".
func (o PatchDeploymentRecurringScheduleTimeZoneOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleTimeZone) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PatchDeploymentRecurringScheduleTimeZonePtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleTimeZonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleTimeZone)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) ToPatchDeploymentRecurringScheduleTimeZonePtrOutput() PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) ToPatchDeploymentRecurringScheduleTimeZonePtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleTimeZonePtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) Elem() PatchDeploymentRecurringScheduleTimeZoneOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeZone) PatchDeploymentRecurringScheduleTimeZone { return *v }).(PatchDeploymentRecurringScheduleTimeZoneOutput)
}

// IANA Time Zone Database time zone, e.g. "America/New_York".
func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeZone) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// IANA Time Zone Database version number, e.g. "2019a".
func (o PatchDeploymentRecurringScheduleTimeZonePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleTimeZone) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type PatchDeploymentRecurringScheduleWeekly struct {
	// A day of the week.
	DayOfWeek string `pulumi:"dayOfWeek"`
}

// PatchDeploymentRecurringScheduleWeeklyInput is an input type that accepts PatchDeploymentRecurringScheduleWeeklyArgs and PatchDeploymentRecurringScheduleWeeklyOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleWeeklyInput` via:
//
//          PatchDeploymentRecurringScheduleWeeklyArgs{...}
type PatchDeploymentRecurringScheduleWeeklyInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleWeeklyOutput() PatchDeploymentRecurringScheduleWeeklyOutput
	ToPatchDeploymentRecurringScheduleWeeklyOutputWithContext(context.Context) PatchDeploymentRecurringScheduleWeeklyOutput
}

type PatchDeploymentRecurringScheduleWeeklyArgs struct {
	// A day of the week.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
}

func (PatchDeploymentRecurringScheduleWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleWeekly)(nil)).Elem()
}

func (i PatchDeploymentRecurringScheduleWeeklyArgs) ToPatchDeploymentRecurringScheduleWeeklyOutput() PatchDeploymentRecurringScheduleWeeklyOutput {
	return i.ToPatchDeploymentRecurringScheduleWeeklyOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleWeeklyArgs) ToPatchDeploymentRecurringScheduleWeeklyOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleWeeklyOutput)
}

func (i PatchDeploymentRecurringScheduleWeeklyArgs) ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(context.Background())
}

func (i PatchDeploymentRecurringScheduleWeeklyArgs) ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleWeeklyOutput).ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx)
}

// PatchDeploymentRecurringScheduleWeeklyPtrInput is an input type that accepts PatchDeploymentRecurringScheduleWeeklyArgs, PatchDeploymentRecurringScheduleWeeklyPtr and PatchDeploymentRecurringScheduleWeeklyPtrOutput values.
// You can construct a concrete instance of `PatchDeploymentRecurringScheduleWeeklyPtrInput` via:
//
//          PatchDeploymentRecurringScheduleWeeklyArgs{...}
//
//  or:
//
//          nil
type PatchDeploymentRecurringScheduleWeeklyPtrInput interface {
	pulumi.Input

	ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput
	ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput
}

type patchDeploymentRecurringScheduleWeeklyPtrType PatchDeploymentRecurringScheduleWeeklyArgs

func PatchDeploymentRecurringScheduleWeeklyPtr(v *PatchDeploymentRecurringScheduleWeeklyArgs) PatchDeploymentRecurringScheduleWeeklyPtrInput {
	return (*patchDeploymentRecurringScheduleWeeklyPtrType)(v)
}

func (*patchDeploymentRecurringScheduleWeeklyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleWeekly)(nil)).Elem()
}

func (i *patchDeploymentRecurringScheduleWeeklyPtrType) ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return i.ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(context.Background())
}

func (i *patchDeploymentRecurringScheduleWeeklyPtrType) ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchDeploymentRecurringScheduleWeeklyPtrOutput)
}

type PatchDeploymentRecurringScheduleWeeklyOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchDeploymentRecurringScheduleWeekly)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleWeeklyOutput) ToPatchDeploymentRecurringScheduleWeeklyOutput() PatchDeploymentRecurringScheduleWeeklyOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleWeeklyOutput) ToPatchDeploymentRecurringScheduleWeeklyOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleWeeklyOutput) ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o.ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(context.Background())
}

func (o PatchDeploymentRecurringScheduleWeeklyOutput) ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleWeekly) *PatchDeploymentRecurringScheduleWeekly {
		return &v
	}).(PatchDeploymentRecurringScheduleWeeklyPtrOutput)
}

// A day of the week.
func (o PatchDeploymentRecurringScheduleWeeklyOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v PatchDeploymentRecurringScheduleWeekly) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

type PatchDeploymentRecurringScheduleWeeklyPtrOutput struct{ *pulumi.OutputState }

func (PatchDeploymentRecurringScheduleWeeklyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchDeploymentRecurringScheduleWeekly)(nil)).Elem()
}

func (o PatchDeploymentRecurringScheduleWeeklyPtrOutput) ToPatchDeploymentRecurringScheduleWeeklyPtrOutput() PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleWeeklyPtrOutput) ToPatchDeploymentRecurringScheduleWeeklyPtrOutputWithContext(ctx context.Context) PatchDeploymentRecurringScheduleWeeklyPtrOutput {
	return o
}

func (o PatchDeploymentRecurringScheduleWeeklyPtrOutput) Elem() PatchDeploymentRecurringScheduleWeeklyOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleWeekly) PatchDeploymentRecurringScheduleWeekly { return *v }).(PatchDeploymentRecurringScheduleWeeklyOutput)
}

// A day of the week.
func (o PatchDeploymentRecurringScheduleWeeklyPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchDeploymentRecurringScheduleWeekly) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PatchDeploymentInstanceFilterOutput{})
	pulumi.RegisterOutputType(PatchDeploymentInstanceFilterPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentInstanceFilterGroupLabelOutput{})
	pulumi.RegisterOutputType(PatchDeploymentInstanceFilterGroupLabelArrayOutput{})
	pulumi.RegisterOutputType(PatchDeploymentOneTimeScheduleOutput{})
	pulumi.RegisterOutputType(PatchDeploymentOneTimeSchedulePtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigAptOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigAptPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigGooOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigGooPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepLinuxExecStepConfigGcsObjectPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPostStepWindowsExecStepConfigGcsObjectPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepLinuxExecStepConfigGcsObjectPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigPreStepWindowsExecStepConfigGcsObjectPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigWindowsUpdateOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigWindowsUpdatePtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigYumOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigYumPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigZypperOutput{})
	pulumi.RegisterOutputType(PatchDeploymentPatchConfigZypperPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringSchedulePtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleMonthlyOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleMonthlyPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleMonthlyWeekDayOfMonthPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleTimeOfDayOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleTimeOfDayPtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleTimeZoneOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleTimeZonePtrOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleWeeklyOutput{})
	pulumi.RegisterOutputType(PatchDeploymentRecurringScheduleWeeklyPtrOutput{})
}
