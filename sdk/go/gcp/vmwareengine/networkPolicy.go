// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmwareengine

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a network policy resource. Network policies are regional resources.
//
// To get more information about NetworkPolicy, see:
//
// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.networkPolicies)
//
// ## Example Usage
// ### Vmware Engine Network Policy Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/vmwareengine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vmwareengine.NewNetwork(ctx, "network-policy-nw", &vmwareengine.NetworkArgs{
//				Name:        pulumi.String("standard-nw"),
//				Location:    pulumi.String("global"),
//				Type:        pulumi.String("STANDARD"),
//				Description: pulumi.String("VMwareEngine standard network sample"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vmwareengine.NewNetworkPolicy(ctx, "vmw-engine-network-policy", &vmwareengine.NetworkPolicyArgs{
//				Location:            pulumi.String("us-west1"),
//				Name:                pulumi.String("sample-network-policy"),
//				EdgeServicesCidr:    pulumi.String("192.168.30.0/26"),
//				VmwareEngineNetwork: network_policy_nw.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Vmware Engine Network Policy Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/vmwareengine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vmwareengine.NewNetwork(ctx, "network-policy-nw", &vmwareengine.NetworkArgs{
//				Name:        pulumi.String("standard-full-nw"),
//				Location:    pulumi.String("global"),
//				Type:        pulumi.String("STANDARD"),
//				Description: pulumi.String("VMwareEngine standard network sample"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vmwareengine.NewNetworkPolicy(ctx, "vmw-engine-network-policy", &vmwareengine.NetworkPolicyArgs{
//				Location:            pulumi.String("us-west1"),
//				Name:                pulumi.String("sample-network-policy-full"),
//				EdgeServicesCidr:    pulumi.String("192.168.30.0/26"),
//				VmwareEngineNetwork: network_policy_nw.ID(),
//				Description:         pulumi.String("Sample Network Policy"),
//				InternetAccess: &vmwareengine.NetworkPolicyInternetAccessArgs{
//					Enabled: pulumi.Bool(true),
//				},
//				ExternalIp: &vmwareengine.NetworkPolicyExternalIpArgs{
//					Enabled: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkPolicy can be imported using any of these accepted formats:
//
//   - `projects/{{project}}/locations/{{location}}/networkPolicies/{{name}}`
//
//   - `{{project}}/{{location}}/{{name}}`
//
//   - `{{location}}/{{name}}`
//
//     When using the `pulumi import` command, NetworkPolicy can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:vmwareengine/networkPolicy:NetworkPolicy default projects/{{project}}/locations/{{location}}/networkPolicies/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:vmwareengine/networkPolicy:NetworkPolicy default {{project}}/{{location}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:vmwareengine/networkPolicy:NetworkPolicy default {{location}}/{{name}}
// ```
type NetworkPolicy struct {
	pulumi.CustomResourceState

	// Creation time of this resource.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// User-provided description for this network policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// IP address range in CIDR notation used to create internet access and external IP access.
	// An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
	// prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
	EdgeServicesCidr pulumi.StringOutput `pulumi:"edgeServicesCidr"`
	// Network service that allows External IP addresses to be assigned to VMware workloads.
	// This service can only be enabled when internetAccess is also enabled.
	// Structure is documented below.
	ExternalIp NetworkPolicyExternalIpOutput `pulumi:"externalIp"`
	// Network service that allows VMware workloads to access the internet.
	// Structure is documented below.
	InternetAccess NetworkPolicyInternetAccessOutput `pulumi:"internetAccess"`
	// The resource name of the location (region) to create the new network policy in.
	// Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
	// For example: projects/my-project/locations/us-central1
	Location pulumi.StringOutput `pulumi:"location"`
	// The ID of the Network Policy.
	//
	// ***
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// System-generated unique identifier for the resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Last updated time of this resource.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
	// can either be a project number or a project ID.
	VmwareEngineNetwork pulumi.StringOutput `pulumi:"vmwareEngineNetwork"`
	// The canonical name of the VMware Engine network in the form:
	// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
	VmwareEngineNetworkCanonical pulumi.StringOutput `pulumi:"vmwareEngineNetworkCanonical"`
}

// NewNetworkPolicy registers a new resource with the given unique name, arguments, and options.
func NewNetworkPolicy(ctx *pulumi.Context,
	name string, args *NetworkPolicyArgs, opts ...pulumi.ResourceOption) (*NetworkPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeServicesCidr == nil {
		return nil, errors.New("invalid value for required argument 'EdgeServicesCidr'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.VmwareEngineNetwork == nil {
		return nil, errors.New("invalid value for required argument 'VmwareEngineNetwork'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkPolicy
	err := ctx.RegisterResource("gcp:vmwareengine/networkPolicy:NetworkPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkPolicy gets an existing NetworkPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkPolicyState, opts ...pulumi.ResourceOption) (*NetworkPolicy, error) {
	var resource NetworkPolicy
	err := ctx.ReadResource("gcp:vmwareengine/networkPolicy:NetworkPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkPolicy resources.
type networkPolicyState struct {
	// Creation time of this resource.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// User-provided description for this network policy.
	Description *string `pulumi:"description"`
	// IP address range in CIDR notation used to create internet access and external IP access.
	// An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
	// prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
	EdgeServicesCidr *string `pulumi:"edgeServicesCidr"`
	// Network service that allows External IP addresses to be assigned to VMware workloads.
	// This service can only be enabled when internetAccess is also enabled.
	// Structure is documented below.
	ExternalIp *NetworkPolicyExternalIp `pulumi:"externalIp"`
	// Network service that allows VMware workloads to access the internet.
	// Structure is documented below.
	InternetAccess *NetworkPolicyInternetAccess `pulumi:"internetAccess"`
	// The resource name of the location (region) to create the new network policy in.
	// Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
	// For example: projects/my-project/locations/us-central1
	Location *string `pulumi:"location"`
	// The ID of the Network Policy.
	//
	// ***
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// System-generated unique identifier for the resource.
	Uid *string `pulumi:"uid"`
	// Last updated time of this resource.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
	// can either be a project number or a project ID.
	VmwareEngineNetwork *string `pulumi:"vmwareEngineNetwork"`
	// The canonical name of the VMware Engine network in the form:
	// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
	VmwareEngineNetworkCanonical *string `pulumi:"vmwareEngineNetworkCanonical"`
}

type NetworkPolicyState struct {
	// Creation time of this resource.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// User-provided description for this network policy.
	Description pulumi.StringPtrInput
	// IP address range in CIDR notation used to create internet access and external IP access.
	// An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
	// prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
	EdgeServicesCidr pulumi.StringPtrInput
	// Network service that allows External IP addresses to be assigned to VMware workloads.
	// This service can only be enabled when internetAccess is also enabled.
	// Structure is documented below.
	ExternalIp NetworkPolicyExternalIpPtrInput
	// Network service that allows VMware workloads to access the internet.
	// Structure is documented below.
	InternetAccess NetworkPolicyInternetAccessPtrInput
	// The resource name of the location (region) to create the new network policy in.
	// Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
	// For example: projects/my-project/locations/us-central1
	Location pulumi.StringPtrInput
	// The ID of the Network Policy.
	//
	// ***
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// System-generated unique identifier for the resource.
	Uid pulumi.StringPtrInput
	// Last updated time of this resource.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
	// can either be a project number or a project ID.
	VmwareEngineNetwork pulumi.StringPtrInput
	// The canonical name of the VMware Engine network in the form:
	// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
	VmwareEngineNetworkCanonical pulumi.StringPtrInput
}

func (NetworkPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPolicyState)(nil)).Elem()
}

type networkPolicyArgs struct {
	// User-provided description for this network policy.
	Description *string `pulumi:"description"`
	// IP address range in CIDR notation used to create internet access and external IP access.
	// An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
	// prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
	EdgeServicesCidr string `pulumi:"edgeServicesCidr"`
	// Network service that allows External IP addresses to be assigned to VMware workloads.
	// This service can only be enabled when internetAccess is also enabled.
	// Structure is documented below.
	ExternalIp *NetworkPolicyExternalIp `pulumi:"externalIp"`
	// Network service that allows VMware workloads to access the internet.
	// Structure is documented below.
	InternetAccess *NetworkPolicyInternetAccess `pulumi:"internetAccess"`
	// The resource name of the location (region) to create the new network policy in.
	// Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
	// For example: projects/my-project/locations/us-central1
	Location string `pulumi:"location"`
	// The ID of the Network Policy.
	//
	// ***
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
	// can either be a project number or a project ID.
	VmwareEngineNetwork string `pulumi:"vmwareEngineNetwork"`
}

// The set of arguments for constructing a NetworkPolicy resource.
type NetworkPolicyArgs struct {
	// User-provided description for this network policy.
	Description pulumi.StringPtrInput
	// IP address range in CIDR notation used to create internet access and external IP access.
	// An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
	// prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
	EdgeServicesCidr pulumi.StringInput
	// Network service that allows External IP addresses to be assigned to VMware workloads.
	// This service can only be enabled when internetAccess is also enabled.
	// Structure is documented below.
	ExternalIp NetworkPolicyExternalIpPtrInput
	// Network service that allows VMware workloads to access the internet.
	// Structure is documented below.
	InternetAccess NetworkPolicyInternetAccessPtrInput
	// The resource name of the location (region) to create the new network policy in.
	// Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
	// For example: projects/my-project/locations/us-central1
	Location pulumi.StringInput
	// The ID of the Network Policy.
	//
	// ***
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
	// can either be a project number or a project ID.
	VmwareEngineNetwork pulumi.StringInput
}

func (NetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPolicyArgs)(nil)).Elem()
}

type NetworkPolicyInput interface {
	pulumi.Input

	ToNetworkPolicyOutput() NetworkPolicyOutput
	ToNetworkPolicyOutputWithContext(ctx context.Context) NetworkPolicyOutput
}

func (*NetworkPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPolicy)(nil)).Elem()
}

func (i *NetworkPolicy) ToNetworkPolicyOutput() NetworkPolicyOutput {
	return i.ToNetworkPolicyOutputWithContext(context.Background())
}

func (i *NetworkPolicy) ToNetworkPolicyOutputWithContext(ctx context.Context) NetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPolicyOutput)
}

// NetworkPolicyArrayInput is an input type that accepts NetworkPolicyArray and NetworkPolicyArrayOutput values.
// You can construct a concrete instance of `NetworkPolicyArrayInput` via:
//
//	NetworkPolicyArray{ NetworkPolicyArgs{...} }
type NetworkPolicyArrayInput interface {
	pulumi.Input

	ToNetworkPolicyArrayOutput() NetworkPolicyArrayOutput
	ToNetworkPolicyArrayOutputWithContext(context.Context) NetworkPolicyArrayOutput
}

type NetworkPolicyArray []NetworkPolicyInput

func (NetworkPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkPolicy)(nil)).Elem()
}

func (i NetworkPolicyArray) ToNetworkPolicyArrayOutput() NetworkPolicyArrayOutput {
	return i.ToNetworkPolicyArrayOutputWithContext(context.Background())
}

func (i NetworkPolicyArray) ToNetworkPolicyArrayOutputWithContext(ctx context.Context) NetworkPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPolicyArrayOutput)
}

// NetworkPolicyMapInput is an input type that accepts NetworkPolicyMap and NetworkPolicyMapOutput values.
// You can construct a concrete instance of `NetworkPolicyMapInput` via:
//
//	NetworkPolicyMap{ "key": NetworkPolicyArgs{...} }
type NetworkPolicyMapInput interface {
	pulumi.Input

	ToNetworkPolicyMapOutput() NetworkPolicyMapOutput
	ToNetworkPolicyMapOutputWithContext(context.Context) NetworkPolicyMapOutput
}

type NetworkPolicyMap map[string]NetworkPolicyInput

func (NetworkPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkPolicy)(nil)).Elem()
}

func (i NetworkPolicyMap) ToNetworkPolicyMapOutput() NetworkPolicyMapOutput {
	return i.ToNetworkPolicyMapOutputWithContext(context.Background())
}

func (i NetworkPolicyMap) ToNetworkPolicyMapOutputWithContext(ctx context.Context) NetworkPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPolicyMapOutput)
}

type NetworkPolicyOutput struct{ *pulumi.OutputState }

func (NetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPolicy)(nil)).Elem()
}

func (o NetworkPolicyOutput) ToNetworkPolicyOutput() NetworkPolicyOutput {
	return o
}

func (o NetworkPolicyOutput) ToNetworkPolicyOutputWithContext(ctx context.Context) NetworkPolicyOutput {
	return o
}

// Creation time of this resource.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o NetworkPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// User-provided description for this network policy.
func (o NetworkPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// IP address range in CIDR notation used to create internet access and external IP access.
// An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
// prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
func (o NetworkPolicyOutput) EdgeServicesCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringOutput { return v.EdgeServicesCidr }).(pulumi.StringOutput)
}

// Network service that allows External IP addresses to be assigned to VMware workloads.
// This service can only be enabled when internetAccess is also enabled.
// Structure is documented below.
func (o NetworkPolicyOutput) ExternalIp() NetworkPolicyExternalIpOutput {
	return o.ApplyT(func(v *NetworkPolicy) NetworkPolicyExternalIpOutput { return v.ExternalIp }).(NetworkPolicyExternalIpOutput)
}

// Network service that allows VMware workloads to access the internet.
// Structure is documented below.
func (o NetworkPolicyOutput) InternetAccess() NetworkPolicyInternetAccessOutput {
	return o.ApplyT(func(v *NetworkPolicy) NetworkPolicyInternetAccessOutput { return v.InternetAccess }).(NetworkPolicyInternetAccessOutput)
}

// The resource name of the location (region) to create the new network policy in.
// Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
// For example: projects/my-project/locations/us-central1
func (o NetworkPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The ID of the Network Policy.
//
// ***
func (o NetworkPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o NetworkPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// System-generated unique identifier for the resource.
func (o NetworkPolicyOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Last updated time of this resource.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o NetworkPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The relative resource name of the VMware Engine network. Specify the name in the following form:
// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
// can either be a project number or a project ID.
func (o NetworkPolicyOutput) VmwareEngineNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringOutput { return v.VmwareEngineNetwork }).(pulumi.StringOutput)
}

// The canonical name of the VMware Engine network in the form:
// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
func (o NetworkPolicyOutput) VmwareEngineNetworkCanonical() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPolicy) pulumi.StringOutput { return v.VmwareEngineNetworkCanonical }).(pulumi.StringOutput)
}

type NetworkPolicyArrayOutput struct{ *pulumi.OutputState }

func (NetworkPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkPolicy)(nil)).Elem()
}

func (o NetworkPolicyArrayOutput) ToNetworkPolicyArrayOutput() NetworkPolicyArrayOutput {
	return o
}

func (o NetworkPolicyArrayOutput) ToNetworkPolicyArrayOutputWithContext(ctx context.Context) NetworkPolicyArrayOutput {
	return o
}

func (o NetworkPolicyArrayOutput) Index(i pulumi.IntInput) NetworkPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkPolicy {
		return vs[0].([]*NetworkPolicy)[vs[1].(int)]
	}).(NetworkPolicyOutput)
}

type NetworkPolicyMapOutput struct{ *pulumi.OutputState }

func (NetworkPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkPolicy)(nil)).Elem()
}

func (o NetworkPolicyMapOutput) ToNetworkPolicyMapOutput() NetworkPolicyMapOutput {
	return o
}

func (o NetworkPolicyMapOutput) ToNetworkPolicyMapOutputWithContext(ctx context.Context) NetworkPolicyMapOutput {
	return o
}

func (o NetworkPolicyMapOutput) MapIndex(k pulumi.StringInput) NetworkPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkPolicy {
		return vs[0].(map[string]*NetworkPolicy)[vs[1].(string)]
	}).(NetworkPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPolicyInput)(nil)).Elem(), &NetworkPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPolicyArrayInput)(nil)).Elem(), NetworkPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPolicyMapInput)(nil)).Elem(), NetworkPolicyMap{})
	pulumi.RegisterOutputType(NetworkPolicyOutput{})
	pulumi.RegisterOutputType(NetworkPolicyArrayOutput{})
	pulumi.RegisterOutputType(NetworkPolicyMapOutput{})
}
