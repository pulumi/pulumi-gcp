// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmwareengine

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ## Import
//
// # Network can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:vmwareengine/network:Network default projects/{{project}}/locations/{{location}}/vmwareEngineNetworks/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:vmwareengine/network:Network default {{project}}/{{location}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:vmwareengine/network:Network default {{location}}/{{name}}
//
// ```
type Network struct {
	pulumi.CustomResourceState

	// User-provided description for this VMware Engine network.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The location where the VMwareEngineNetwork should reside.
	Location pulumi.StringOutput `pulumi:"location"`
	// The ID of the VMwareEngineNetwork.
	//
	// ***
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// State of the VMware Engine network.
	State pulumi.StringOutput `pulumi:"state"`
	// VMware Engine network type.
	// Possible values are: `LEGACY`.
	Type pulumi.StringOutput `pulumi:"type"`
	// System-generated unique identifier for the resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
	// the internet, and other Google Cloud services.
	// Structure is documented below.
	VpcNetworks NetworkVpcNetworkArrayOutput `pulumi:"vpcNetworks"`
}

// NewNetwork registers a new resource with the given unique name, arguments, and options.
func NewNetwork(ctx *pulumi.Context,
	name string, args *NetworkArgs, opts ...pulumi.ResourceOption) (*Network, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Network
	err := ctx.RegisterResource("gcp:vmwareengine/network:Network", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetwork gets an existing Network resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkState, opts ...pulumi.ResourceOption) (*Network, error) {
	var resource Network
	err := ctx.ReadResource("gcp:vmwareengine/network:Network", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Network resources.
type networkState struct {
	// User-provided description for this VMware Engine network.
	Description *string `pulumi:"description"`
	// The location where the VMwareEngineNetwork should reside.
	Location *string `pulumi:"location"`
	// The ID of the VMwareEngineNetwork.
	//
	// ***
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// State of the VMware Engine network.
	State *string `pulumi:"state"`
	// VMware Engine network type.
	// Possible values are: `LEGACY`.
	Type *string `pulumi:"type"`
	// System-generated unique identifier for the resource.
	Uid *string `pulumi:"uid"`
	// VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
	// the internet, and other Google Cloud services.
	// Structure is documented below.
	VpcNetworks []NetworkVpcNetwork `pulumi:"vpcNetworks"`
}

type NetworkState struct {
	// User-provided description for this VMware Engine network.
	Description pulumi.StringPtrInput
	// The location where the VMwareEngineNetwork should reside.
	Location pulumi.StringPtrInput
	// The ID of the VMwareEngineNetwork.
	//
	// ***
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// State of the VMware Engine network.
	State pulumi.StringPtrInput
	// VMware Engine network type.
	// Possible values are: `LEGACY`.
	Type pulumi.StringPtrInput
	// System-generated unique identifier for the resource.
	Uid pulumi.StringPtrInput
	// VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
	// the internet, and other Google Cloud services.
	// Structure is documented below.
	VpcNetworks NetworkVpcNetworkArrayInput
}

func (NetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkState)(nil)).Elem()
}

type networkArgs struct {
	// User-provided description for this VMware Engine network.
	Description *string `pulumi:"description"`
	// The location where the VMwareEngineNetwork should reside.
	Location string `pulumi:"location"`
	// The ID of the VMwareEngineNetwork.
	//
	// ***
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// VMware Engine network type.
	// Possible values are: `LEGACY`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a Network resource.
type NetworkArgs struct {
	// User-provided description for this VMware Engine network.
	Description pulumi.StringPtrInput
	// The location where the VMwareEngineNetwork should reside.
	Location pulumi.StringInput
	// The ID of the VMwareEngineNetwork.
	//
	// ***
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// VMware Engine network type.
	// Possible values are: `LEGACY`.
	Type pulumi.StringInput
}

func (NetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkArgs)(nil)).Elem()
}

type NetworkInput interface {
	pulumi.Input

	ToNetworkOutput() NetworkOutput
	ToNetworkOutputWithContext(ctx context.Context) NetworkOutput
}

func (*Network) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (i *Network) ToNetworkOutput() NetworkOutput {
	return i.ToNetworkOutputWithContext(context.Background())
}

func (i *Network) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOutput)
}

// NetworkArrayInput is an input type that accepts NetworkArray and NetworkArrayOutput values.
// You can construct a concrete instance of `NetworkArrayInput` via:
//
//	NetworkArray{ NetworkArgs{...} }
type NetworkArrayInput interface {
	pulumi.Input

	ToNetworkArrayOutput() NetworkArrayOutput
	ToNetworkArrayOutputWithContext(context.Context) NetworkArrayOutput
}

type NetworkArray []NetworkInput

func (NetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Network)(nil)).Elem()
}

func (i NetworkArray) ToNetworkArrayOutput() NetworkArrayOutput {
	return i.ToNetworkArrayOutputWithContext(context.Background())
}

func (i NetworkArray) ToNetworkArrayOutputWithContext(ctx context.Context) NetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkArrayOutput)
}

// NetworkMapInput is an input type that accepts NetworkMap and NetworkMapOutput values.
// You can construct a concrete instance of `NetworkMapInput` via:
//
//	NetworkMap{ "key": NetworkArgs{...} }
type NetworkMapInput interface {
	pulumi.Input

	ToNetworkMapOutput() NetworkMapOutput
	ToNetworkMapOutputWithContext(context.Context) NetworkMapOutput
}

type NetworkMap map[string]NetworkInput

func (NetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Network)(nil)).Elem()
}

func (i NetworkMap) ToNetworkMapOutput() NetworkMapOutput {
	return i.ToNetworkMapOutputWithContext(context.Background())
}

func (i NetworkMap) ToNetworkMapOutputWithContext(ctx context.Context) NetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkMapOutput)
}

type NetworkOutput struct{ *pulumi.OutputState }

func (NetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (o NetworkOutput) ToNetworkOutput() NetworkOutput {
	return o
}

func (o NetworkOutput) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return o
}

// User-provided description for this VMware Engine network.
func (o NetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The location where the VMwareEngineNetwork should reside.
func (o NetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The ID of the VMwareEngineNetwork.
//
// ***
func (o NetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o NetworkOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// State of the VMware Engine network.
func (o NetworkOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// VMware Engine network type.
// Possible values are: `LEGACY`.
func (o NetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// System-generated unique identifier for the resource.
func (o NetworkOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *Network) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
// the internet, and other Google Cloud services.
// Structure is documented below.
func (o NetworkOutput) VpcNetworks() NetworkVpcNetworkArrayOutput {
	return o.ApplyT(func(v *Network) NetworkVpcNetworkArrayOutput { return v.VpcNetworks }).(NetworkVpcNetworkArrayOutput)
}

type NetworkArrayOutput struct{ *pulumi.OutputState }

func (NetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Network)(nil)).Elem()
}

func (o NetworkArrayOutput) ToNetworkArrayOutput() NetworkArrayOutput {
	return o
}

func (o NetworkArrayOutput) ToNetworkArrayOutputWithContext(ctx context.Context) NetworkArrayOutput {
	return o
}

func (o NetworkArrayOutput) Index(i pulumi.IntInput) NetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Network {
		return vs[0].([]*Network)[vs[1].(int)]
	}).(NetworkOutput)
}

type NetworkMapOutput struct{ *pulumi.OutputState }

func (NetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Network)(nil)).Elem()
}

func (o NetworkMapOutput) ToNetworkMapOutput() NetworkMapOutput {
	return o
}

func (o NetworkMapOutput) ToNetworkMapOutputWithContext(ctx context.Context) NetworkMapOutput {
	return o
}

func (o NetworkMapOutput) MapIndex(k pulumi.StringInput) NetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Network {
		return vs[0].(map[string]*Network)[vs[1].(string)]
	}).(NetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInput)(nil)).Elem(), &Network{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkArrayInput)(nil)).Elem(), NetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkMapInput)(nil)).Elem(), NetworkMap{})
	pulumi.RegisterOutputType(NetworkOutput{})
	pulumi.RegisterOutputType(NetworkArrayOutput{})
	pulumi.RegisterOutputType(NetworkMapOutput{})
}
