// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmwareengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get details about a network peering resource.
//
// To get more information about network peering, see:
// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.networkPeerings)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/vmwareengine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vmwareengine.LookupNetworkPeering(ctx, &vmwareengine.LookupNetworkPeeringArgs{
//				Name: "my-network-peering",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNetworkPeering(ctx *pulumi.Context, args *LookupNetworkPeeringArgs, opts ...pulumi.InvokeOption) (*LookupNetworkPeeringResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkPeeringResult
	err := ctx.Invoke("gcp:vmwareengine/getNetworkPeering:getNetworkPeering", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkPeering.
type LookupNetworkPeeringArgs struct {
	// Name of the resource.
	Name    string  `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// A collection of values returned by getNetworkPeering.
type LookupNetworkPeeringResult struct {
	CreateTime                     string `pulumi:"createTime"`
	Description                    string `pulumi:"description"`
	ExportCustomRoutes             bool   `pulumi:"exportCustomRoutes"`
	ExportCustomRoutesWithPublicIp bool   `pulumi:"exportCustomRoutesWithPublicIp"`
	// The provider-assigned unique ID for this managed resource.
	Id                             string  `pulumi:"id"`
	ImportCustomRoutes             bool    `pulumi:"importCustomRoutes"`
	ImportCustomRoutesWithPublicIp bool    `pulumi:"importCustomRoutesWithPublicIp"`
	Name                           string  `pulumi:"name"`
	PeerNetwork                    string  `pulumi:"peerNetwork"`
	PeerNetworkType                string  `pulumi:"peerNetworkType"`
	Project                        *string `pulumi:"project"`
	State                          string  `pulumi:"state"`
	StateDetails                   string  `pulumi:"stateDetails"`
	Uid                            string  `pulumi:"uid"`
	UpdateTime                     string  `pulumi:"updateTime"`
	VmwareEngineNetwork            string  `pulumi:"vmwareEngineNetwork"`
	VmwareEngineNetworkCanonical   string  `pulumi:"vmwareEngineNetworkCanonical"`
}

func LookupNetworkPeeringOutput(ctx *pulumi.Context, args LookupNetworkPeeringOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkPeeringResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkPeeringResultOutput, error) {
			args := v.(LookupNetworkPeeringArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:vmwareengine/getNetworkPeering:getNetworkPeering", args, LookupNetworkPeeringResultOutput{}, options).(LookupNetworkPeeringResultOutput), nil
		}).(LookupNetworkPeeringResultOutput)
}

// A collection of arguments for invoking getNetworkPeering.
type LookupNetworkPeeringOutputArgs struct {
	// Name of the resource.
	Name    pulumi.StringInput    `pulumi:"name"`
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupNetworkPeeringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkPeeringArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkPeering.
type LookupNetworkPeeringResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkPeeringResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkPeeringResult)(nil)).Elem()
}

func (o LookupNetworkPeeringResultOutput) ToLookupNetworkPeeringResultOutput() LookupNetworkPeeringResultOutput {
	return o
}

func (o LookupNetworkPeeringResultOutput) ToLookupNetworkPeeringResultOutputWithContext(ctx context.Context) LookupNetworkPeeringResultOutput {
	return o
}

func (o LookupNetworkPeeringResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) ExportCustomRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) bool { return v.ExportCustomRoutes }).(pulumi.BoolOutput)
}

func (o LookupNetworkPeeringResultOutput) ExportCustomRoutesWithPublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) bool { return v.ExportCustomRoutesWithPublicIp }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNetworkPeeringResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) ImportCustomRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) bool { return v.ImportCustomRoutes }).(pulumi.BoolOutput)
}

func (o LookupNetworkPeeringResultOutput) ImportCustomRoutesWithPublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) bool { return v.ImportCustomRoutesWithPublicIp }).(pulumi.BoolOutput)
}

func (o LookupNetworkPeeringResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) PeerNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.PeerNetwork }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) PeerNetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.PeerNetworkType }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupNetworkPeeringResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) StateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.StateDetails }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.Uid }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) VmwareEngineNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.VmwareEngineNetwork }).(pulumi.StringOutput)
}

func (o LookupNetworkPeeringResultOutput) VmwareEngineNetworkCanonical() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPeeringResult) string { return v.VmwareEngineNetworkCanonical }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkPeeringResultOutput{})
}
