// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigquery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for connection
func LookupConnectionIamPolicy(ctx *pulumi.Context, args *LookupConnectionIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupConnectionIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConnectionIamPolicyResult
	err := ctx.Invoke("gcp:bigquery/getConnectionIamPolicy:getConnectionIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectionIamPolicy.
type LookupConnectionIamPolicyArgs struct {
	// Optional connection id that should be assigned to the created connection.
	// Used to find the parent resource to bind the IAM policy to
	ConnectionId string `pulumi:"connectionId"`
	// The geographic location where the connection should reside.
	// Cloud SQL instance must be in the same location as the connection
	// with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery EU.
	// Examples: US, EU, asia-northeast1, us-central1, europe-west1.
	// Spanner Connections same as spanner region
	// AWS allowed regions are aws-us-east-1
	// Azure allowed regions are azure-eastus2 Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getConnectionIamPolicy.
type LookupConnectionIamPolicyResult struct {
	ConnectionId string `pulumi:"connectionId"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// (Required only by `bigquery.ConnectionIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupConnectionIamPolicyOutput(ctx *pulumi.Context, args LookupConnectionIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupConnectionIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectionIamPolicyResult, error) {
			args := v.(LookupConnectionIamPolicyArgs)
			r, err := LookupConnectionIamPolicy(ctx, &args, opts...)
			var s LookupConnectionIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectionIamPolicyResultOutput)
}

// A collection of arguments for invoking getConnectionIamPolicy.
type LookupConnectionIamPolicyOutputArgs struct {
	// Optional connection id that should be assigned to the created connection.
	// Used to find the parent resource to bind the IAM policy to
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// The geographic location where the connection should reside.
	// Cloud SQL instance must be in the same location as the connection
	// with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery EU.
	// Examples: US, EU, asia-northeast1, us-central1, europe-west1.
	// Spanner Connections same as spanner region
	// AWS allowed regions are aws-us-east-1
	// Azure allowed regions are azure-eastus2 Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupConnectionIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getConnectionIamPolicy.
type LookupConnectionIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupConnectionIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionIamPolicyResult)(nil)).Elem()
}

func (o LookupConnectionIamPolicyResultOutput) ToLookupConnectionIamPolicyResultOutput() LookupConnectionIamPolicyResultOutput {
	return o
}

func (o LookupConnectionIamPolicyResultOutput) ToLookupConnectionIamPolicyResultOutputWithContext(ctx context.Context) LookupConnectionIamPolicyResultOutput {
	return o
}

func (o LookupConnectionIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupConnectionIamPolicyResult] {
	return pulumix.Output[LookupConnectionIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupConnectionIamPolicyResultOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionIamPolicyResult) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupConnectionIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConnectionIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupConnectionIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

// (Required only by `bigquery.ConnectionIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupConnectionIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupConnectionIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectionIamPolicyResultOutput{})
}
