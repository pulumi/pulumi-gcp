// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigquery

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents access on a subset of rows on the specified table, defined by its filter predicate. Access to the subset of rows is controlled by its IAM policy.
//
// ## Example Usage
//
// ### Bigquery Row Access Policy Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/bigquery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := bigquery.NewDataset(ctx, "example", &bigquery.DatasetArgs{
//				DatasetId: pulumi.String("dataset_id"),
//				Location:  pulumi.String("US"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleTable, err := bigquery.NewTable(ctx, "example", &bigquery.TableArgs{
//				DeletionProtection: pulumi.Bool(false),
//				DatasetId:          example.DatasetId,
//				TableId:            pulumi.String("table_id"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = bigquery.NewRowAccessPolicy(ctx, "example", &bigquery.RowAccessPolicyArgs{
//				DatasetId:       example.DatasetId,
//				TableId:         exampleTable.TableId,
//				PolicyId:        pulumi.String("policy_id"),
//				FilterPredicate: pulumi.String("nullable_field is not NULL"),
//				Grantees: pulumi.StringArray{
//					pulumi.String("domain:google.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RowAccessPolicy can be imported using any of these accepted formats:
//
// * `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}/rowAccessPolicies/{{policy_id}}`
//
// * `{{project}}/{{dataset_id}}/{{table_id}}/{{policy_id}}`
//
// * `{{dataset_id}}/{{table_id}}/{{policy_id}}`
//
// When using the `pulumi import` command, RowAccessPolicy can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:bigquery/rowAccessPolicy:RowAccessPolicy default projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}/rowAccessPolicies/{{policy_id}}
// ```
//
// ```sh
// $ pulumi import gcp:bigquery/rowAccessPolicy:RowAccessPolicy default {{project}}/{{dataset_id}}/{{table_id}}/{{policy_id}}
// ```
//
// ```sh
// $ pulumi import gcp:bigquery/rowAccessPolicy:RowAccessPolicy default {{dataset_id}}/{{table_id}}/{{policy_id}}
// ```
type RowAccessPolicy struct {
	pulumi.CustomResourceState

	// The time when this row access policy was created, in milliseconds since
	// the epoch.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The ID of the dataset containing this row access policy.
	DatasetId pulumi.StringOutput `pulumi:"datasetId"`
	// A SQL boolean expression that represents the rows defined by this row
	// access policy, similar to the boolean expression in a WHERE clause of a
	// SELECT query on a table.
	// References to other tables, routines, and temporary functions are not
	// supported.
	// Examples: region="EU"
	// dateField = CAST('2019-9-27' as DATE)
	// nullableField is not NULL
	// numericField BETWEEN 1.0 AND 5.0
	FilterPredicate pulumi.StringOutput `pulumi:"filterPredicate"`
	// Input only. The optional list of iamMember users or groups that specifies the initial
	// members that the row-level access policy should be created with.
	// grantees types:
	// - "user:alice@example.com": An email address that represents a specific
	//   Google account.
	// - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
	//   address that represents a service account.
	// - "group:admins@example.com": An email address that represents a Google
	//   group.
	// - "domain:example.com":The Google Workspace domain (primary) that
	//   represents all the users of that domain.
	// - "allAuthenticatedUsers": A special identifier that represents all service
	//   accounts and all users on the internet who have authenticated with a Google
	//   Account. This identifier includes accounts that aren't connected to a
	//   Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
	//   Users who aren't authenticated, such as anonymous visitors, aren't
	//   included.
	// - "allUsers":A special identifier that represents anyone who is on
	//   the internet, including authenticated and unauthenticated users. Because
	//   BigQuery requires authentication before a user can access the service,
	//   allUsers includes only authenticated users.
	Grantees pulumi.StringArrayOutput `pulumi:"grantees"`
	// The time when this row access policy was last modified, in milliseconds
	// since the epoch.
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// The ID of the row access policy. The ID must contain only
	// letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
	// length is 256 characters.
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The ID of the table containing this row access policy.
	TableId pulumi.StringOutput `pulumi:"tableId"`
}

// NewRowAccessPolicy registers a new resource with the given unique name, arguments, and options.
func NewRowAccessPolicy(ctx *pulumi.Context,
	name string, args *RowAccessPolicyArgs, opts ...pulumi.ResourceOption) (*RowAccessPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatasetId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetId'")
	}
	if args.FilterPredicate == nil {
		return nil, errors.New("invalid value for required argument 'FilterPredicate'")
	}
	if args.PolicyId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyId'")
	}
	if args.TableId == nil {
		return nil, errors.New("invalid value for required argument 'TableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RowAccessPolicy
	err := ctx.RegisterResource("gcp:bigquery/rowAccessPolicy:RowAccessPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRowAccessPolicy gets an existing RowAccessPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRowAccessPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RowAccessPolicyState, opts ...pulumi.ResourceOption) (*RowAccessPolicy, error) {
	var resource RowAccessPolicy
	err := ctx.ReadResource("gcp:bigquery/rowAccessPolicy:RowAccessPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RowAccessPolicy resources.
type rowAccessPolicyState struct {
	// The time when this row access policy was created, in milliseconds since
	// the epoch.
	CreationTime *string `pulumi:"creationTime"`
	// The ID of the dataset containing this row access policy.
	DatasetId *string `pulumi:"datasetId"`
	// A SQL boolean expression that represents the rows defined by this row
	// access policy, similar to the boolean expression in a WHERE clause of a
	// SELECT query on a table.
	// References to other tables, routines, and temporary functions are not
	// supported.
	// Examples: region="EU"
	// dateField = CAST('2019-9-27' as DATE)
	// nullableField is not NULL
	// numericField BETWEEN 1.0 AND 5.0
	FilterPredicate *string `pulumi:"filterPredicate"`
	// Input only. The optional list of iamMember users or groups that specifies the initial
	// members that the row-level access policy should be created with.
	// grantees types:
	// - "user:alice@example.com": An email address that represents a specific
	//   Google account.
	// - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
	//   address that represents a service account.
	// - "group:admins@example.com": An email address that represents a Google
	//   group.
	// - "domain:example.com":The Google Workspace domain (primary) that
	//   represents all the users of that domain.
	// - "allAuthenticatedUsers": A special identifier that represents all service
	//   accounts and all users on the internet who have authenticated with a Google
	//   Account. This identifier includes accounts that aren't connected to a
	//   Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
	//   Users who aren't authenticated, such as anonymous visitors, aren't
	//   included.
	// - "allUsers":A special identifier that represents anyone who is on
	//   the internet, including authenticated and unauthenticated users. Because
	//   BigQuery requires authentication before a user can access the service,
	//   allUsers includes only authenticated users.
	Grantees []string `pulumi:"grantees"`
	// The time when this row access policy was last modified, in milliseconds
	// since the epoch.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// The ID of the row access policy. The ID must contain only
	// letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
	// length is 256 characters.
	PolicyId *string `pulumi:"policyId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The ID of the table containing this row access policy.
	TableId *string `pulumi:"tableId"`
}

type RowAccessPolicyState struct {
	// The time when this row access policy was created, in milliseconds since
	// the epoch.
	CreationTime pulumi.StringPtrInput
	// The ID of the dataset containing this row access policy.
	DatasetId pulumi.StringPtrInput
	// A SQL boolean expression that represents the rows defined by this row
	// access policy, similar to the boolean expression in a WHERE clause of a
	// SELECT query on a table.
	// References to other tables, routines, and temporary functions are not
	// supported.
	// Examples: region="EU"
	// dateField = CAST('2019-9-27' as DATE)
	// nullableField is not NULL
	// numericField BETWEEN 1.0 AND 5.0
	FilterPredicate pulumi.StringPtrInput
	// Input only. The optional list of iamMember users or groups that specifies the initial
	// members that the row-level access policy should be created with.
	// grantees types:
	// - "user:alice@example.com": An email address that represents a specific
	//   Google account.
	// - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
	//   address that represents a service account.
	// - "group:admins@example.com": An email address that represents a Google
	//   group.
	// - "domain:example.com":The Google Workspace domain (primary) that
	//   represents all the users of that domain.
	// - "allAuthenticatedUsers": A special identifier that represents all service
	//   accounts and all users on the internet who have authenticated with a Google
	//   Account. This identifier includes accounts that aren't connected to a
	//   Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
	//   Users who aren't authenticated, such as anonymous visitors, aren't
	//   included.
	// - "allUsers":A special identifier that represents anyone who is on
	//   the internet, including authenticated and unauthenticated users. Because
	//   BigQuery requires authentication before a user can access the service,
	//   allUsers includes only authenticated users.
	Grantees pulumi.StringArrayInput
	// The time when this row access policy was last modified, in milliseconds
	// since the epoch.
	LastModifiedTime pulumi.StringPtrInput
	// The ID of the row access policy. The ID must contain only
	// letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
	// length is 256 characters.
	PolicyId pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The ID of the table containing this row access policy.
	TableId pulumi.StringPtrInput
}

func (RowAccessPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*rowAccessPolicyState)(nil)).Elem()
}

type rowAccessPolicyArgs struct {
	// The ID of the dataset containing this row access policy.
	DatasetId string `pulumi:"datasetId"`
	// A SQL boolean expression that represents the rows defined by this row
	// access policy, similar to the boolean expression in a WHERE clause of a
	// SELECT query on a table.
	// References to other tables, routines, and temporary functions are not
	// supported.
	// Examples: region="EU"
	// dateField = CAST('2019-9-27' as DATE)
	// nullableField is not NULL
	// numericField BETWEEN 1.0 AND 5.0
	FilterPredicate string `pulumi:"filterPredicate"`
	// Input only. The optional list of iamMember users or groups that specifies the initial
	// members that the row-level access policy should be created with.
	// grantees types:
	// - "user:alice@example.com": An email address that represents a specific
	//   Google account.
	// - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
	//   address that represents a service account.
	// - "group:admins@example.com": An email address that represents a Google
	//   group.
	// - "domain:example.com":The Google Workspace domain (primary) that
	//   represents all the users of that domain.
	// - "allAuthenticatedUsers": A special identifier that represents all service
	//   accounts and all users on the internet who have authenticated with a Google
	//   Account. This identifier includes accounts that aren't connected to a
	//   Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
	//   Users who aren't authenticated, such as anonymous visitors, aren't
	//   included.
	// - "allUsers":A special identifier that represents anyone who is on
	//   the internet, including authenticated and unauthenticated users. Because
	//   BigQuery requires authentication before a user can access the service,
	//   allUsers includes only authenticated users.
	Grantees []string `pulumi:"grantees"`
	// The ID of the row access policy. The ID must contain only
	// letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
	// length is 256 characters.
	PolicyId string `pulumi:"policyId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The ID of the table containing this row access policy.
	TableId string `pulumi:"tableId"`
}

// The set of arguments for constructing a RowAccessPolicy resource.
type RowAccessPolicyArgs struct {
	// The ID of the dataset containing this row access policy.
	DatasetId pulumi.StringInput
	// A SQL boolean expression that represents the rows defined by this row
	// access policy, similar to the boolean expression in a WHERE clause of a
	// SELECT query on a table.
	// References to other tables, routines, and temporary functions are not
	// supported.
	// Examples: region="EU"
	// dateField = CAST('2019-9-27' as DATE)
	// nullableField is not NULL
	// numericField BETWEEN 1.0 AND 5.0
	FilterPredicate pulumi.StringInput
	// Input only. The optional list of iamMember users or groups that specifies the initial
	// members that the row-level access policy should be created with.
	// grantees types:
	// - "user:alice@example.com": An email address that represents a specific
	//   Google account.
	// - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
	//   address that represents a service account.
	// - "group:admins@example.com": An email address that represents a Google
	//   group.
	// - "domain:example.com":The Google Workspace domain (primary) that
	//   represents all the users of that domain.
	// - "allAuthenticatedUsers": A special identifier that represents all service
	//   accounts and all users on the internet who have authenticated with a Google
	//   Account. This identifier includes accounts that aren't connected to a
	//   Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
	//   Users who aren't authenticated, such as anonymous visitors, aren't
	//   included.
	// - "allUsers":A special identifier that represents anyone who is on
	//   the internet, including authenticated and unauthenticated users. Because
	//   BigQuery requires authentication before a user can access the service,
	//   allUsers includes only authenticated users.
	Grantees pulumi.StringArrayInput
	// The ID of the row access policy. The ID must contain only
	// letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
	// length is 256 characters.
	PolicyId pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The ID of the table containing this row access policy.
	TableId pulumi.StringInput
}

func (RowAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rowAccessPolicyArgs)(nil)).Elem()
}

type RowAccessPolicyInput interface {
	pulumi.Input

	ToRowAccessPolicyOutput() RowAccessPolicyOutput
	ToRowAccessPolicyOutputWithContext(ctx context.Context) RowAccessPolicyOutput
}

func (*RowAccessPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**RowAccessPolicy)(nil)).Elem()
}

func (i *RowAccessPolicy) ToRowAccessPolicyOutput() RowAccessPolicyOutput {
	return i.ToRowAccessPolicyOutputWithContext(context.Background())
}

func (i *RowAccessPolicy) ToRowAccessPolicyOutputWithContext(ctx context.Context) RowAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RowAccessPolicyOutput)
}

// RowAccessPolicyArrayInput is an input type that accepts RowAccessPolicyArray and RowAccessPolicyArrayOutput values.
// You can construct a concrete instance of `RowAccessPolicyArrayInput` via:
//
//	RowAccessPolicyArray{ RowAccessPolicyArgs{...} }
type RowAccessPolicyArrayInput interface {
	pulumi.Input

	ToRowAccessPolicyArrayOutput() RowAccessPolicyArrayOutput
	ToRowAccessPolicyArrayOutputWithContext(context.Context) RowAccessPolicyArrayOutput
}

type RowAccessPolicyArray []RowAccessPolicyInput

func (RowAccessPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RowAccessPolicy)(nil)).Elem()
}

func (i RowAccessPolicyArray) ToRowAccessPolicyArrayOutput() RowAccessPolicyArrayOutput {
	return i.ToRowAccessPolicyArrayOutputWithContext(context.Background())
}

func (i RowAccessPolicyArray) ToRowAccessPolicyArrayOutputWithContext(ctx context.Context) RowAccessPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RowAccessPolicyArrayOutput)
}

// RowAccessPolicyMapInput is an input type that accepts RowAccessPolicyMap and RowAccessPolicyMapOutput values.
// You can construct a concrete instance of `RowAccessPolicyMapInput` via:
//
//	RowAccessPolicyMap{ "key": RowAccessPolicyArgs{...} }
type RowAccessPolicyMapInput interface {
	pulumi.Input

	ToRowAccessPolicyMapOutput() RowAccessPolicyMapOutput
	ToRowAccessPolicyMapOutputWithContext(context.Context) RowAccessPolicyMapOutput
}

type RowAccessPolicyMap map[string]RowAccessPolicyInput

func (RowAccessPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RowAccessPolicy)(nil)).Elem()
}

func (i RowAccessPolicyMap) ToRowAccessPolicyMapOutput() RowAccessPolicyMapOutput {
	return i.ToRowAccessPolicyMapOutputWithContext(context.Background())
}

func (i RowAccessPolicyMap) ToRowAccessPolicyMapOutputWithContext(ctx context.Context) RowAccessPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RowAccessPolicyMapOutput)
}

type RowAccessPolicyOutput struct{ *pulumi.OutputState }

func (RowAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RowAccessPolicy)(nil)).Elem()
}

func (o RowAccessPolicyOutput) ToRowAccessPolicyOutput() RowAccessPolicyOutput {
	return o
}

func (o RowAccessPolicyOutput) ToRowAccessPolicyOutputWithContext(ctx context.Context) RowAccessPolicyOutput {
	return o
}

// The time when this row access policy was created, in milliseconds since
// the epoch.
func (o RowAccessPolicyOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RowAccessPolicy) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The ID of the dataset containing this row access policy.
func (o RowAccessPolicyOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v *RowAccessPolicy) pulumi.StringOutput { return v.DatasetId }).(pulumi.StringOutput)
}

// A SQL boolean expression that represents the rows defined by this row
// access policy, similar to the boolean expression in a WHERE clause of a
// SELECT query on a table.
// References to other tables, routines, and temporary functions are not
// supported.
// Examples: region="EU"
// dateField = CAST('2019-9-27' as DATE)
// nullableField is not NULL
// numericField BETWEEN 1.0 AND 5.0
func (o RowAccessPolicyOutput) FilterPredicate() pulumi.StringOutput {
	return o.ApplyT(func(v *RowAccessPolicy) pulumi.StringOutput { return v.FilterPredicate }).(pulumi.StringOutput)
}

// Input only. The optional list of iamMember users or groups that specifies the initial
// members that the row-level access policy should be created with.
// grantees types:
//   - "user:alice@example.com": An email address that represents a specific
//     Google account.
//   - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
//     address that represents a service account.
//   - "group:admins@example.com": An email address that represents a Google
//     group.
//   - "domain:example.com":The Google Workspace domain (primary) that
//     represents all the users of that domain.
//   - "allAuthenticatedUsers": A special identifier that represents all service
//     accounts and all users on the internet who have authenticated with a Google
//     Account. This identifier includes accounts that aren't connected to a
//     Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
//     Users who aren't authenticated, such as anonymous visitors, aren't
//     included.
//   - "allUsers":A special identifier that represents anyone who is on
//     the internet, including authenticated and unauthenticated users. Because
//     BigQuery requires authentication before a user can access the service,
//     allUsers includes only authenticated users.
func (o RowAccessPolicyOutput) Grantees() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RowAccessPolicy) pulumi.StringArrayOutput { return v.Grantees }).(pulumi.StringArrayOutput)
}

// The time when this row access policy was last modified, in milliseconds
// since the epoch.
func (o RowAccessPolicyOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RowAccessPolicy) pulumi.StringOutput { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// The ID of the row access policy. The ID must contain only
// letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
// length is 256 characters.
func (o RowAccessPolicyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *RowAccessPolicy) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RowAccessPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RowAccessPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The ID of the table containing this row access policy.
func (o RowAccessPolicyOutput) TableId() pulumi.StringOutput {
	return o.ApplyT(func(v *RowAccessPolicy) pulumi.StringOutput { return v.TableId }).(pulumi.StringOutput)
}

type RowAccessPolicyArrayOutput struct{ *pulumi.OutputState }

func (RowAccessPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RowAccessPolicy)(nil)).Elem()
}

func (o RowAccessPolicyArrayOutput) ToRowAccessPolicyArrayOutput() RowAccessPolicyArrayOutput {
	return o
}

func (o RowAccessPolicyArrayOutput) ToRowAccessPolicyArrayOutputWithContext(ctx context.Context) RowAccessPolicyArrayOutput {
	return o
}

func (o RowAccessPolicyArrayOutput) Index(i pulumi.IntInput) RowAccessPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RowAccessPolicy {
		return vs[0].([]*RowAccessPolicy)[vs[1].(int)]
	}).(RowAccessPolicyOutput)
}

type RowAccessPolicyMapOutput struct{ *pulumi.OutputState }

func (RowAccessPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RowAccessPolicy)(nil)).Elem()
}

func (o RowAccessPolicyMapOutput) ToRowAccessPolicyMapOutput() RowAccessPolicyMapOutput {
	return o
}

func (o RowAccessPolicyMapOutput) ToRowAccessPolicyMapOutputWithContext(ctx context.Context) RowAccessPolicyMapOutput {
	return o
}

func (o RowAccessPolicyMapOutput) MapIndex(k pulumi.StringInput) RowAccessPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RowAccessPolicy {
		return vs[0].(map[string]*RowAccessPolicy)[vs[1].(string)]
	}).(RowAccessPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RowAccessPolicyInput)(nil)).Elem(), &RowAccessPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*RowAccessPolicyArrayInput)(nil)).Elem(), RowAccessPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RowAccessPolicyMapInput)(nil)).Elem(), RowAccessPolicyMap{})
	pulumi.RegisterOutputType(RowAccessPolicyOutput{})
	pulumi.RegisterOutputType(RowAccessPolicyArrayOutput{})
	pulumi.RegisterOutputType(RowAccessPolicyMapOutput{})
}
