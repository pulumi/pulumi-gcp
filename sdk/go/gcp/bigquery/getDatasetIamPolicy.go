// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigquery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for a BigQuery dataset.
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/bigquery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigquery.LookupDatasetIamPolicy(ctx, &bigquery.LookupDatasetIamPolicyArgs{
//				DatasetId: google_bigquery_dataset.Dataset.Dataset_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDatasetIamPolicy(ctx *pulumi.Context, args *LookupDatasetIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupDatasetIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatasetIamPolicyResult
	err := ctx.Invoke("gcp:bigquery/getDatasetIamPolicy:getDatasetIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatasetIamPolicy.
type LookupDatasetIamPolicyArgs struct {
	// The dataset ID.
	DatasetId string `pulumi:"datasetId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getDatasetIamPolicy.
type LookupDatasetIamPolicyResult struct {
	DatasetId string `pulumi:"datasetId"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Computed) The policy data
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupDatasetIamPolicyOutput(ctx *pulumi.Context, args LookupDatasetIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupDatasetIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatasetIamPolicyResult, error) {
			args := v.(LookupDatasetIamPolicyArgs)
			r, err := LookupDatasetIamPolicy(ctx, &args, opts...)
			var s LookupDatasetIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatasetIamPolicyResultOutput)
}

// A collection of arguments for invoking getDatasetIamPolicy.
type LookupDatasetIamPolicyOutputArgs struct {
	// The dataset ID.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupDatasetIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDatasetIamPolicy.
type LookupDatasetIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupDatasetIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetIamPolicyResult)(nil)).Elem()
}

func (o LookupDatasetIamPolicyResultOutput) ToLookupDatasetIamPolicyResultOutput() LookupDatasetIamPolicyResultOutput {
	return o
}

func (o LookupDatasetIamPolicyResultOutput) ToLookupDatasetIamPolicyResultOutputWithContext(ctx context.Context) LookupDatasetIamPolicyResultOutput {
	return o
}

func (o LookupDatasetIamPolicyResultOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetIamPolicyResult) string { return v.DatasetId }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupDatasetIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDatasetIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Computed) The policy data
func (o LookupDatasetIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupDatasetIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatasetIamPolicyResultOutput{})
}
