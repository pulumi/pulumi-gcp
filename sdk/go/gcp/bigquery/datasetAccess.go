// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bigquery

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Gives dataset access for a single entity. This resource is intended to be used in cases where
// it is not possible to compile a full list of access blocks to include in a
// `bigquery.Dataset` resource, to enable them to be added separately.
//
// > **Note:** If this resource is used alongside a `bigquery.Dataset` resource, the
// dataset resource must either have no defined `access` blocks or a `lifecycle` block with
// `ignoreChanges = [access]` so they don't fight over which accesses should be on the dataset.
//
//
// To get more information about DatasetAccess, see:
//
// * [API documentation](https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets)
// * How-to Guides
//     * [Controlling access to datasets](https://cloud.google.com/bigquery/docs/dataset-access-controls)
type DatasetAccess struct {
	pulumi.CustomResourceState

	// The ID of the dataset containing this table.
	DatasetId pulumi.StringOutput `pulumi:"datasetId"`
	// A domain to grant access to. Any users signed in with the
	// domain specified will be granted the specified access
	Domain pulumi.StringPtrOutput `pulumi:"domain"`
	// An email address of a Google Group to grant access to.
	GroupByEmail pulumi.StringPtrOutput `pulumi:"groupByEmail"`
	// Some other type of member that appears in the IAM Policy but isn't a user,
	// group, domain, or special group. For example: `allUsers`
	IamMember pulumi.StringPtrOutput `pulumi:"iamMember"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Describes the rights granted to the user specified by the other
	// member of the access object. Primitive, Predefined and custom
	// roles are supported. Predefined roles that have equivalent
	// primitive roles are swapped by the API to their Primitive
	// counterparts, and will show a diff post-create. See
	// [official docs](https://cloud.google.com/bigquery/docs/access-control).
	Role pulumi.StringPtrOutput `pulumi:"role"`
	// A special group to grant access to. Possible values include:
	SpecialGroup pulumi.StringPtrOutput `pulumi:"specialGroup"`
	// An email address of a user to grant access to. For example:
	// fred@example.com
	UserByEmail pulumi.StringPtrOutput `pulumi:"userByEmail"`
	// A view from a different dataset to grant access to. Queries
	// executed against that view will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that view is updated by any user, access to the view
	// needs to be granted again via an update operation.  Structure is documented below.
	View DatasetAccessViewPtrOutput `pulumi:"view"`
}

// NewDatasetAccess registers a new resource with the given unique name, arguments, and options.
func NewDatasetAccess(ctx *pulumi.Context,
	name string, args *DatasetAccessArgs, opts ...pulumi.ResourceOption) (*DatasetAccess, error) {
	if args == nil || args.DatasetId == nil {
		return nil, errors.New("missing required argument 'DatasetId'")
	}
	if args == nil {
		args = &DatasetAccessArgs{}
	}
	var resource DatasetAccess
	err := ctx.RegisterResource("gcp:bigquery/datasetAccess:DatasetAccess", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetAccess gets an existing DatasetAccess resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetAccess(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetAccessState, opts ...pulumi.ResourceOption) (*DatasetAccess, error) {
	var resource DatasetAccess
	err := ctx.ReadResource("gcp:bigquery/datasetAccess:DatasetAccess", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetAccess resources.
type datasetAccessState struct {
	// The ID of the dataset containing this table.
	DatasetId *string `pulumi:"datasetId"`
	// A domain to grant access to. Any users signed in with the
	// domain specified will be granted the specified access
	Domain *string `pulumi:"domain"`
	// An email address of a Google Group to grant access to.
	GroupByEmail *string `pulumi:"groupByEmail"`
	// Some other type of member that appears in the IAM Policy but isn't a user,
	// group, domain, or special group. For example: `allUsers`
	IamMember *string `pulumi:"iamMember"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Describes the rights granted to the user specified by the other
	// member of the access object. Primitive, Predefined and custom
	// roles are supported. Predefined roles that have equivalent
	// primitive roles are swapped by the API to their Primitive
	// counterparts, and will show a diff post-create. See
	// [official docs](https://cloud.google.com/bigquery/docs/access-control).
	Role *string `pulumi:"role"`
	// A special group to grant access to. Possible values include:
	SpecialGroup *string `pulumi:"specialGroup"`
	// An email address of a user to grant access to. For example:
	// fred@example.com
	UserByEmail *string `pulumi:"userByEmail"`
	// A view from a different dataset to grant access to. Queries
	// executed against that view will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that view is updated by any user, access to the view
	// needs to be granted again via an update operation.  Structure is documented below.
	View *DatasetAccessView `pulumi:"view"`
}

type DatasetAccessState struct {
	// The ID of the dataset containing this table.
	DatasetId pulumi.StringPtrInput
	// A domain to grant access to. Any users signed in with the
	// domain specified will be granted the specified access
	Domain pulumi.StringPtrInput
	// An email address of a Google Group to grant access to.
	GroupByEmail pulumi.StringPtrInput
	// Some other type of member that appears in the IAM Policy but isn't a user,
	// group, domain, or special group. For example: `allUsers`
	IamMember pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Describes the rights granted to the user specified by the other
	// member of the access object. Primitive, Predefined and custom
	// roles are supported. Predefined roles that have equivalent
	// primitive roles are swapped by the API to their Primitive
	// counterparts, and will show a diff post-create. See
	// [official docs](https://cloud.google.com/bigquery/docs/access-control).
	Role pulumi.StringPtrInput
	// A special group to grant access to. Possible values include:
	SpecialGroup pulumi.StringPtrInput
	// An email address of a user to grant access to. For example:
	// fred@example.com
	UserByEmail pulumi.StringPtrInput
	// A view from a different dataset to grant access to. Queries
	// executed against that view will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that view is updated by any user, access to the view
	// needs to be granted again via an update operation.  Structure is documented below.
	View DatasetAccessViewPtrInput
}

func (DatasetAccessState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetAccessState)(nil)).Elem()
}

type datasetAccessArgs struct {
	// The ID of the dataset containing this table.
	DatasetId string `pulumi:"datasetId"`
	// A domain to grant access to. Any users signed in with the
	// domain specified will be granted the specified access
	Domain *string `pulumi:"domain"`
	// An email address of a Google Group to grant access to.
	GroupByEmail *string `pulumi:"groupByEmail"`
	// Some other type of member that appears in the IAM Policy but isn't a user,
	// group, domain, or special group. For example: `allUsers`
	IamMember *string `pulumi:"iamMember"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Describes the rights granted to the user specified by the other
	// member of the access object. Primitive, Predefined and custom
	// roles are supported. Predefined roles that have equivalent
	// primitive roles are swapped by the API to their Primitive
	// counterparts, and will show a diff post-create. See
	// [official docs](https://cloud.google.com/bigquery/docs/access-control).
	Role *string `pulumi:"role"`
	// A special group to grant access to. Possible values include:
	SpecialGroup *string `pulumi:"specialGroup"`
	// An email address of a user to grant access to. For example:
	// fred@example.com
	UserByEmail *string `pulumi:"userByEmail"`
	// A view from a different dataset to grant access to. Queries
	// executed against that view will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that view is updated by any user, access to the view
	// needs to be granted again via an update operation.  Structure is documented below.
	View *DatasetAccessView `pulumi:"view"`
}

// The set of arguments for constructing a DatasetAccess resource.
type DatasetAccessArgs struct {
	// The ID of the dataset containing this table.
	DatasetId pulumi.StringInput
	// A domain to grant access to. Any users signed in with the
	// domain specified will be granted the specified access
	Domain pulumi.StringPtrInput
	// An email address of a Google Group to grant access to.
	GroupByEmail pulumi.StringPtrInput
	// Some other type of member that appears in the IAM Policy but isn't a user,
	// group, domain, or special group. For example: `allUsers`
	IamMember pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Describes the rights granted to the user specified by the other
	// member of the access object. Primitive, Predefined and custom
	// roles are supported. Predefined roles that have equivalent
	// primitive roles are swapped by the API to their Primitive
	// counterparts, and will show a diff post-create. See
	// [official docs](https://cloud.google.com/bigquery/docs/access-control).
	Role pulumi.StringPtrInput
	// A special group to grant access to. Possible values include:
	SpecialGroup pulumi.StringPtrInput
	// An email address of a user to grant access to. For example:
	// fred@example.com
	UserByEmail pulumi.StringPtrInput
	// A view from a different dataset to grant access to. Queries
	// executed against that view will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that view is updated by any user, access to the view
	// needs to be granted again via an update operation.  Structure is documented below.
	View DatasetAccessViewPtrInput
}

func (DatasetAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetAccessArgs)(nil)).Elem()
}
