// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigquery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a list of datasets in a GCP project. For more information see
// the [official documentation](https://cloud.google.com/bigquery/docs)
// and [API](https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets/list).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/bigquery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigquery.GetDatasets(ctx, &bigquery.GetDatasetsArgs{
//				Project: pulumi.StringRef("my-project"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatasets(ctx *pulumi.Context, args *GetDatasetsArgs, opts ...pulumi.InvokeOption) (*GetDatasetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatasetsResult
	err := ctx.Invoke("gcp:bigquery/getDatasets:getDatasets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatasets.
type GetDatasetsArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getDatasets.
type GetDatasetsResult struct {
	// A list of all retrieved BigQuery datasets. Structure is defined below.
	Datasets []GetDatasetsDataset `pulumi:"datasets"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Project *string `pulumi:"project"`
}

func GetDatasetsOutput(ctx *pulumi.Context, args GetDatasetsOutputArgs, opts ...pulumi.InvokeOption) GetDatasetsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDatasetsResultOutput, error) {
			args := v.(GetDatasetsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:bigquery/getDatasets:getDatasets", args, GetDatasetsResultOutput{}, options).(GetDatasetsResultOutput), nil
		}).(GetDatasetsResultOutput)
}

// A collection of arguments for invoking getDatasets.
type GetDatasetsOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetDatasetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatasetsArgs)(nil)).Elem()
}

// A collection of values returned by getDatasets.
type GetDatasetsResultOutput struct{ *pulumi.OutputState }

func (GetDatasetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatasetsResult)(nil)).Elem()
}

func (o GetDatasetsResultOutput) ToGetDatasetsResultOutput() GetDatasetsResultOutput {
	return o
}

func (o GetDatasetsResultOutput) ToGetDatasetsResultOutputWithContext(ctx context.Context) GetDatasetsResultOutput {
	return o
}

// A list of all retrieved BigQuery datasets. Structure is defined below.
func (o GetDatasetsResultOutput) Datasets() GetDatasetsDatasetArrayOutput {
	return o.ApplyT(func(v GetDatasetsResult) []GetDatasetsDataset { return v.Datasets }).(GetDatasetsDatasetArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatasetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatasetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatasetsResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatasetsResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatasetsResultOutput{})
}
