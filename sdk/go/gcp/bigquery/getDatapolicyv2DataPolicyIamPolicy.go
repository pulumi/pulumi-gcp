// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigquery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for datapolicy
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/bigquery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigquery.LookupDatapolicyv2DataPolicyIamPolicy(ctx, &bigquery.LookupDatapolicyv2DataPolicyIamPolicyArgs{
//				Project:      pulumi.StringRef(basicDataPolicy.Project),
//				Location:     pulumi.StringRef(basicDataPolicy.Location),
//				DataPolicyId: basicDataPolicy.DataPolicyId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDatapolicyv2DataPolicyIamPolicy(ctx *pulumi.Context, args *LookupDatapolicyv2DataPolicyIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupDatapolicyv2DataPolicyIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatapolicyv2DataPolicyIamPolicyResult
	err := ctx.Invoke("gcp:bigquery/getDatapolicyv2DataPolicyIamPolicy:getDatapolicyv2DataPolicyIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatapolicyv2DataPolicyIamPolicy.
type LookupDatapolicyv2DataPolicyIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	DataPolicyId string `pulumi:"dataPolicyId"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getDatapolicyv2DataPolicyIamPolicy.
type LookupDatapolicyv2DataPolicyIamPolicyResult struct {
	DataPolicyId string `pulumi:"dataPolicyId"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// (Required only by `bigquery.Datapolicyv2DataPolicyIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupDatapolicyv2DataPolicyIamPolicyOutput(ctx *pulumi.Context, args LookupDatapolicyv2DataPolicyIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupDatapolicyv2DataPolicyIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDatapolicyv2DataPolicyIamPolicyResultOutput, error) {
			args := v.(LookupDatapolicyv2DataPolicyIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:bigquery/getDatapolicyv2DataPolicyIamPolicy:getDatapolicyv2DataPolicyIamPolicy", args, LookupDatapolicyv2DataPolicyIamPolicyResultOutput{}, options).(LookupDatapolicyv2DataPolicyIamPolicyResultOutput), nil
		}).(LookupDatapolicyv2DataPolicyIamPolicyResultOutput)
}

// A collection of arguments for invoking getDatapolicyv2DataPolicyIamPolicy.
type LookupDatapolicyv2DataPolicyIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	DataPolicyId pulumi.StringInput `pulumi:"dataPolicyId"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupDatapolicyv2DataPolicyIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatapolicyv2DataPolicyIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDatapolicyv2DataPolicyIamPolicy.
type LookupDatapolicyv2DataPolicyIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupDatapolicyv2DataPolicyIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatapolicyv2DataPolicyIamPolicyResult)(nil)).Elem()
}

func (o LookupDatapolicyv2DataPolicyIamPolicyResultOutput) ToLookupDatapolicyv2DataPolicyIamPolicyResultOutput() LookupDatapolicyv2DataPolicyIamPolicyResultOutput {
	return o
}

func (o LookupDatapolicyv2DataPolicyIamPolicyResultOutput) ToLookupDatapolicyv2DataPolicyIamPolicyResultOutputWithContext(ctx context.Context) LookupDatapolicyv2DataPolicyIamPolicyResultOutput {
	return o
}

func (o LookupDatapolicyv2DataPolicyIamPolicyResultOutput) DataPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatapolicyv2DataPolicyIamPolicyResult) string { return v.DataPolicyId }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupDatapolicyv2DataPolicyIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatapolicyv2DataPolicyIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDatapolicyv2DataPolicyIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatapolicyv2DataPolicyIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDatapolicyv2DataPolicyIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatapolicyv2DataPolicyIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

// (Required only by `bigquery.Datapolicyv2DataPolicyIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupDatapolicyv2DataPolicyIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatapolicyv2DataPolicyIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupDatapolicyv2DataPolicyIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatapolicyv2DataPolicyIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatapolicyv2DataPolicyIamPolicyResultOutput{})
}
