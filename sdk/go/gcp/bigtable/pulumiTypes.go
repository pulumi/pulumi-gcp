// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigtable

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GCPolicyMaxAge struct {
	// Number of days before applying GC policy.
	//
	// Deprecated: Deprecated in favor of duration
	Days *int `pulumi:"days"`
	// Duration before applying GC policy (ex. "8h"). This is required when `days` isn't set
	Duration *string `pulumi:"duration"`
}

// GCPolicyMaxAgeInput is an input type that accepts GCPolicyMaxAgeArgs and GCPolicyMaxAgeOutput values.
// You can construct a concrete instance of `GCPolicyMaxAgeInput` via:
//
//	GCPolicyMaxAgeArgs{...}
type GCPolicyMaxAgeInput interface {
	pulumi.Input

	ToGCPolicyMaxAgeOutput() GCPolicyMaxAgeOutput
	ToGCPolicyMaxAgeOutputWithContext(context.Context) GCPolicyMaxAgeOutput
}

type GCPolicyMaxAgeArgs struct {
	// Number of days before applying GC policy.
	//
	// Deprecated: Deprecated in favor of duration
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Duration before applying GC policy (ex. "8h"). This is required when `days` isn't set
	Duration pulumi.StringPtrInput `pulumi:"duration"`
}

func (GCPolicyMaxAgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxAge)(nil)).Elem()
}

func (i GCPolicyMaxAgeArgs) ToGCPolicyMaxAgeOutput() GCPolicyMaxAgeOutput {
	return i.ToGCPolicyMaxAgeOutputWithContext(context.Background())
}

func (i GCPolicyMaxAgeArgs) ToGCPolicyMaxAgeOutputWithContext(ctx context.Context) GCPolicyMaxAgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxAgeOutput)
}

func (i GCPolicyMaxAgeArgs) ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput {
	return i.ToGCPolicyMaxAgePtrOutputWithContext(context.Background())
}

func (i GCPolicyMaxAgeArgs) ToGCPolicyMaxAgePtrOutputWithContext(ctx context.Context) GCPolicyMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxAgeOutput).ToGCPolicyMaxAgePtrOutputWithContext(ctx)
}

// GCPolicyMaxAgePtrInput is an input type that accepts GCPolicyMaxAgeArgs, GCPolicyMaxAgePtr and GCPolicyMaxAgePtrOutput values.
// You can construct a concrete instance of `GCPolicyMaxAgePtrInput` via:
//
//	        GCPolicyMaxAgeArgs{...}
//
//	or:
//
//	        nil
type GCPolicyMaxAgePtrInput interface {
	pulumi.Input

	ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput
	ToGCPolicyMaxAgePtrOutputWithContext(context.Context) GCPolicyMaxAgePtrOutput
}

type gcpolicyMaxAgePtrType GCPolicyMaxAgeArgs

func GCPolicyMaxAgePtr(v *GCPolicyMaxAgeArgs) GCPolicyMaxAgePtrInput {
	return (*gcpolicyMaxAgePtrType)(v)
}

func (*gcpolicyMaxAgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GCPolicyMaxAge)(nil)).Elem()
}

func (i *gcpolicyMaxAgePtrType) ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput {
	return i.ToGCPolicyMaxAgePtrOutputWithContext(context.Background())
}

func (i *gcpolicyMaxAgePtrType) ToGCPolicyMaxAgePtrOutputWithContext(ctx context.Context) GCPolicyMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxAgePtrOutput)
}

type GCPolicyMaxAgeOutput struct{ *pulumi.OutputState }

func (GCPolicyMaxAgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxAge)(nil)).Elem()
}

func (o GCPolicyMaxAgeOutput) ToGCPolicyMaxAgeOutput() GCPolicyMaxAgeOutput {
	return o
}

func (o GCPolicyMaxAgeOutput) ToGCPolicyMaxAgeOutputWithContext(ctx context.Context) GCPolicyMaxAgeOutput {
	return o
}

func (o GCPolicyMaxAgeOutput) ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput {
	return o.ToGCPolicyMaxAgePtrOutputWithContext(context.Background())
}

func (o GCPolicyMaxAgeOutput) ToGCPolicyMaxAgePtrOutputWithContext(ctx context.Context) GCPolicyMaxAgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GCPolicyMaxAge) *GCPolicyMaxAge {
		return &v
	}).(GCPolicyMaxAgePtrOutput)
}

// Number of days before applying GC policy.
//
// Deprecated: Deprecated in favor of duration
func (o GCPolicyMaxAgeOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GCPolicyMaxAge) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Duration before applying GC policy (ex. "8h"). This is required when `days` isn't set
func (o GCPolicyMaxAgeOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GCPolicyMaxAge) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

type GCPolicyMaxAgePtrOutput struct{ *pulumi.OutputState }

func (GCPolicyMaxAgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GCPolicyMaxAge)(nil)).Elem()
}

func (o GCPolicyMaxAgePtrOutput) ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput {
	return o
}

func (o GCPolicyMaxAgePtrOutput) ToGCPolicyMaxAgePtrOutputWithContext(ctx context.Context) GCPolicyMaxAgePtrOutput {
	return o
}

func (o GCPolicyMaxAgePtrOutput) Elem() GCPolicyMaxAgeOutput {
	return o.ApplyT(func(v *GCPolicyMaxAge) GCPolicyMaxAge {
		if v != nil {
			return *v
		}
		var ret GCPolicyMaxAge
		return ret
	}).(GCPolicyMaxAgeOutput)
}

// Number of days before applying GC policy.
//
// Deprecated: Deprecated in favor of duration
func (o GCPolicyMaxAgePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GCPolicyMaxAge) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Duration before applying GC policy (ex. "8h"). This is required when `days` isn't set
func (o GCPolicyMaxAgePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCPolicyMaxAge) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

type GCPolicyMaxVersion struct {
	// Number of version before applying the GC policy.
	Number int `pulumi:"number"`
}

// GCPolicyMaxVersionInput is an input type that accepts GCPolicyMaxVersionArgs and GCPolicyMaxVersionOutput values.
// You can construct a concrete instance of `GCPolicyMaxVersionInput` via:
//
//	GCPolicyMaxVersionArgs{...}
type GCPolicyMaxVersionInput interface {
	pulumi.Input

	ToGCPolicyMaxVersionOutput() GCPolicyMaxVersionOutput
	ToGCPolicyMaxVersionOutputWithContext(context.Context) GCPolicyMaxVersionOutput
}

type GCPolicyMaxVersionArgs struct {
	// Number of version before applying the GC policy.
	Number pulumi.IntInput `pulumi:"number"`
}

func (GCPolicyMaxVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxVersion)(nil)).Elem()
}

func (i GCPolicyMaxVersionArgs) ToGCPolicyMaxVersionOutput() GCPolicyMaxVersionOutput {
	return i.ToGCPolicyMaxVersionOutputWithContext(context.Background())
}

func (i GCPolicyMaxVersionArgs) ToGCPolicyMaxVersionOutputWithContext(ctx context.Context) GCPolicyMaxVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxVersionOutput)
}

// GCPolicyMaxVersionArrayInput is an input type that accepts GCPolicyMaxVersionArray and GCPolicyMaxVersionArrayOutput values.
// You can construct a concrete instance of `GCPolicyMaxVersionArrayInput` via:
//
//	GCPolicyMaxVersionArray{ GCPolicyMaxVersionArgs{...} }
type GCPolicyMaxVersionArrayInput interface {
	pulumi.Input

	ToGCPolicyMaxVersionArrayOutput() GCPolicyMaxVersionArrayOutput
	ToGCPolicyMaxVersionArrayOutputWithContext(context.Context) GCPolicyMaxVersionArrayOutput
}

type GCPolicyMaxVersionArray []GCPolicyMaxVersionInput

func (GCPolicyMaxVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GCPolicyMaxVersion)(nil)).Elem()
}

func (i GCPolicyMaxVersionArray) ToGCPolicyMaxVersionArrayOutput() GCPolicyMaxVersionArrayOutput {
	return i.ToGCPolicyMaxVersionArrayOutputWithContext(context.Background())
}

func (i GCPolicyMaxVersionArray) ToGCPolicyMaxVersionArrayOutputWithContext(ctx context.Context) GCPolicyMaxVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxVersionArrayOutput)
}

type GCPolicyMaxVersionOutput struct{ *pulumi.OutputState }

func (GCPolicyMaxVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxVersion)(nil)).Elem()
}

func (o GCPolicyMaxVersionOutput) ToGCPolicyMaxVersionOutput() GCPolicyMaxVersionOutput {
	return o
}

func (o GCPolicyMaxVersionOutput) ToGCPolicyMaxVersionOutputWithContext(ctx context.Context) GCPolicyMaxVersionOutput {
	return o
}

// Number of version before applying the GC policy.
func (o GCPolicyMaxVersionOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v GCPolicyMaxVersion) int { return v.Number }).(pulumi.IntOutput)
}

type GCPolicyMaxVersionArrayOutput struct{ *pulumi.OutputState }

func (GCPolicyMaxVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GCPolicyMaxVersion)(nil)).Elem()
}

func (o GCPolicyMaxVersionArrayOutput) ToGCPolicyMaxVersionArrayOutput() GCPolicyMaxVersionArrayOutput {
	return o
}

func (o GCPolicyMaxVersionArrayOutput) ToGCPolicyMaxVersionArrayOutputWithContext(ctx context.Context) GCPolicyMaxVersionArrayOutput {
	return o
}

func (o GCPolicyMaxVersionArrayOutput) Index(i pulumi.IntInput) GCPolicyMaxVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GCPolicyMaxVersion {
		return vs[0].([]GCPolicyMaxVersion)[vs[1].(int)]
	}).(GCPolicyMaxVersionOutput)
}

type InstanceCluster struct {
	// [Autoscaling](https://cloud.google.com/bigtable/docs/autoscaling#parameters) config for the cluster, contains the following arguments:
	AutoscalingConfig *InstanceClusterAutoscalingConfig `pulumi:"autoscalingConfig"`
	// The ID of the Cloud Bigtable cluster. Must be 6-30 characters and must only contain hyphens, lowercase letters and numbers.
	ClusterId string `pulumi:"clusterId"`
	// Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// The number of nodes in your Cloud Bigtable cluster.
	// Required, with a minimum of `1` for each cluster in an instance.
	NumNodes *int `pulumi:"numNodes"`
	// The storage type to use. One of `"SSD"` or
	// `"HDD"`. Defaults to `"SSD"`.
	StorageType *string `pulumi:"storageType"`
	// The zone to create the Cloud Bigtable cluster in. If it not
	// specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
	// Bigtable instances are noted on the [Cloud Bigtable locations page](https://cloud.google.com/bigtable/docs/locations).
	Zone *string `pulumi:"zone"`
}

// InstanceClusterInput is an input type that accepts InstanceClusterArgs and InstanceClusterOutput values.
// You can construct a concrete instance of `InstanceClusterInput` via:
//
//	InstanceClusterArgs{...}
type InstanceClusterInput interface {
	pulumi.Input

	ToInstanceClusterOutput() InstanceClusterOutput
	ToInstanceClusterOutputWithContext(context.Context) InstanceClusterOutput
}

type InstanceClusterArgs struct {
	// [Autoscaling](https://cloud.google.com/bigtable/docs/autoscaling#parameters) config for the cluster, contains the following arguments:
	AutoscalingConfig InstanceClusterAutoscalingConfigPtrInput `pulumi:"autoscalingConfig"`
	// The ID of the Cloud Bigtable cluster. Must be 6-30 characters and must only contain hyphens, lowercase letters and numbers.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
	// The number of nodes in your Cloud Bigtable cluster.
	// Required, with a minimum of `1` for each cluster in an instance.
	NumNodes pulumi.IntPtrInput `pulumi:"numNodes"`
	// The storage type to use. One of `"SSD"` or
	// `"HDD"`. Defaults to `"SSD"`.
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	// The zone to create the Cloud Bigtable cluster in. If it not
	// specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
	// Bigtable instances are noted on the [Cloud Bigtable locations page](https://cloud.google.com/bigtable/docs/locations).
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCluster)(nil)).Elem()
}

func (i InstanceClusterArgs) ToInstanceClusterOutput() InstanceClusterOutput {
	return i.ToInstanceClusterOutputWithContext(context.Background())
}

func (i InstanceClusterArgs) ToInstanceClusterOutputWithContext(ctx context.Context) InstanceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterOutput)
}

// InstanceClusterArrayInput is an input type that accepts InstanceClusterArray and InstanceClusterArrayOutput values.
// You can construct a concrete instance of `InstanceClusterArrayInput` via:
//
//	InstanceClusterArray{ InstanceClusterArgs{...} }
type InstanceClusterArrayInput interface {
	pulumi.Input

	ToInstanceClusterArrayOutput() InstanceClusterArrayOutput
	ToInstanceClusterArrayOutputWithContext(context.Context) InstanceClusterArrayOutput
}

type InstanceClusterArray []InstanceClusterInput

func (InstanceClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceCluster)(nil)).Elem()
}

func (i InstanceClusterArray) ToInstanceClusterArrayOutput() InstanceClusterArrayOutput {
	return i.ToInstanceClusterArrayOutputWithContext(context.Background())
}

func (i InstanceClusterArray) ToInstanceClusterArrayOutputWithContext(ctx context.Context) InstanceClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterArrayOutput)
}

type InstanceClusterOutput struct{ *pulumi.OutputState }

func (InstanceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCluster)(nil)).Elem()
}

func (o InstanceClusterOutput) ToInstanceClusterOutput() InstanceClusterOutput {
	return o
}

func (o InstanceClusterOutput) ToInstanceClusterOutputWithContext(ctx context.Context) InstanceClusterOutput {
	return o
}

// [Autoscaling](https://cloud.google.com/bigtable/docs/autoscaling#parameters) config for the cluster, contains the following arguments:
func (o InstanceClusterOutput) AutoscalingConfig() InstanceClusterAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *InstanceClusterAutoscalingConfig { return v.AutoscalingConfig }).(InstanceClusterAutoscalingConfigPtrOutput)
}

// The ID of the Cloud Bigtable cluster. Must be 6-30 characters and must only contain hyphens, lowercase letters and numbers.
func (o InstanceClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceCluster) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster.
func (o InstanceClusterOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// The number of nodes in your Cloud Bigtable cluster.
// Required, with a minimum of `1` for each cluster in an instance.
func (o InstanceClusterOutput) NumNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *int { return v.NumNodes }).(pulumi.IntPtrOutput)
}

// The storage type to use. One of `"SSD"` or
// `"HDD"`. Defaults to `"SSD"`.
func (o InstanceClusterOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// The zone to create the Cloud Bigtable cluster in. If it not
// specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
// Bigtable instances are noted on the [Cloud Bigtable locations page](https://cloud.google.com/bigtable/docs/locations).
func (o InstanceClusterOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceClusterArrayOutput struct{ *pulumi.OutputState }

func (InstanceClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceCluster)(nil)).Elem()
}

func (o InstanceClusterArrayOutput) ToInstanceClusterArrayOutput() InstanceClusterArrayOutput {
	return o
}

func (o InstanceClusterArrayOutput) ToInstanceClusterArrayOutputWithContext(ctx context.Context) InstanceClusterArrayOutput {
	return o
}

func (o InstanceClusterArrayOutput) Index(i pulumi.IntInput) InstanceClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceCluster {
		return vs[0].([]InstanceCluster)[vs[1].(int)]
	}).(InstanceClusterOutput)
}

type InstanceClusterAutoscalingConfig struct {
	// The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
	CpuTarget int `pulumi:"cpuTarget"`
	// The maximum number of nodes for autoscaling.
	MaxNodes int `pulumi:"maxNodes"`
	// The minimum number of nodes for autoscaling.
	MinNodes int `pulumi:"minNodes"`
	// The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
	StorageTarget *int `pulumi:"storageTarget"`
}

// InstanceClusterAutoscalingConfigInput is an input type that accepts InstanceClusterAutoscalingConfigArgs and InstanceClusterAutoscalingConfigOutput values.
// You can construct a concrete instance of `InstanceClusterAutoscalingConfigInput` via:
//
//	InstanceClusterAutoscalingConfigArgs{...}
type InstanceClusterAutoscalingConfigInput interface {
	pulumi.Input

	ToInstanceClusterAutoscalingConfigOutput() InstanceClusterAutoscalingConfigOutput
	ToInstanceClusterAutoscalingConfigOutputWithContext(context.Context) InstanceClusterAutoscalingConfigOutput
}

type InstanceClusterAutoscalingConfigArgs struct {
	// The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
	CpuTarget pulumi.IntInput `pulumi:"cpuTarget"`
	// The maximum number of nodes for autoscaling.
	MaxNodes pulumi.IntInput `pulumi:"maxNodes"`
	// The minimum number of nodes for autoscaling.
	MinNodes pulumi.IntInput `pulumi:"minNodes"`
	// The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
	StorageTarget pulumi.IntPtrInput `pulumi:"storageTarget"`
}

func (InstanceClusterAutoscalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceClusterAutoscalingConfig)(nil)).Elem()
}

func (i InstanceClusterAutoscalingConfigArgs) ToInstanceClusterAutoscalingConfigOutput() InstanceClusterAutoscalingConfigOutput {
	return i.ToInstanceClusterAutoscalingConfigOutputWithContext(context.Background())
}

func (i InstanceClusterAutoscalingConfigArgs) ToInstanceClusterAutoscalingConfigOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterAutoscalingConfigOutput)
}

func (i InstanceClusterAutoscalingConfigArgs) ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput {
	return i.ToInstanceClusterAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i InstanceClusterAutoscalingConfigArgs) ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterAutoscalingConfigOutput).ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx)
}

// InstanceClusterAutoscalingConfigPtrInput is an input type that accepts InstanceClusterAutoscalingConfigArgs, InstanceClusterAutoscalingConfigPtr and InstanceClusterAutoscalingConfigPtrOutput values.
// You can construct a concrete instance of `InstanceClusterAutoscalingConfigPtrInput` via:
//
//	        InstanceClusterAutoscalingConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceClusterAutoscalingConfigPtrInput interface {
	pulumi.Input

	ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput
	ToInstanceClusterAutoscalingConfigPtrOutputWithContext(context.Context) InstanceClusterAutoscalingConfigPtrOutput
}

type instanceClusterAutoscalingConfigPtrType InstanceClusterAutoscalingConfigArgs

func InstanceClusterAutoscalingConfigPtr(v *InstanceClusterAutoscalingConfigArgs) InstanceClusterAutoscalingConfigPtrInput {
	return (*instanceClusterAutoscalingConfigPtrType)(v)
}

func (*instanceClusterAutoscalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceClusterAutoscalingConfig)(nil)).Elem()
}

func (i *instanceClusterAutoscalingConfigPtrType) ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput {
	return i.ToInstanceClusterAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i *instanceClusterAutoscalingConfigPtrType) ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterAutoscalingConfigPtrOutput)
}

type InstanceClusterAutoscalingConfigOutput struct{ *pulumi.OutputState }

func (InstanceClusterAutoscalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceClusterAutoscalingConfig)(nil)).Elem()
}

func (o InstanceClusterAutoscalingConfigOutput) ToInstanceClusterAutoscalingConfigOutput() InstanceClusterAutoscalingConfigOutput {
	return o
}

func (o InstanceClusterAutoscalingConfigOutput) ToInstanceClusterAutoscalingConfigOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigOutput {
	return o
}

func (o InstanceClusterAutoscalingConfigOutput) ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput {
	return o.ToInstanceClusterAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (o InstanceClusterAutoscalingConfigOutput) ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceClusterAutoscalingConfig) *InstanceClusterAutoscalingConfig {
		return &v
	}).(InstanceClusterAutoscalingConfigPtrOutput)
}

// The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
func (o InstanceClusterAutoscalingConfigOutput) CpuTarget() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceClusterAutoscalingConfig) int { return v.CpuTarget }).(pulumi.IntOutput)
}

// The maximum number of nodes for autoscaling.
func (o InstanceClusterAutoscalingConfigOutput) MaxNodes() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceClusterAutoscalingConfig) int { return v.MaxNodes }).(pulumi.IntOutput)
}

// The minimum number of nodes for autoscaling.
func (o InstanceClusterAutoscalingConfigOutput) MinNodes() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceClusterAutoscalingConfig) int { return v.MinNodes }).(pulumi.IntOutput)
}

// The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
func (o InstanceClusterAutoscalingConfigOutput) StorageTarget() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceClusterAutoscalingConfig) *int { return v.StorageTarget }).(pulumi.IntPtrOutput)
}

type InstanceClusterAutoscalingConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceClusterAutoscalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceClusterAutoscalingConfig)(nil)).Elem()
}

func (o InstanceClusterAutoscalingConfigPtrOutput) ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput {
	return o
}

func (o InstanceClusterAutoscalingConfigPtrOutput) ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigPtrOutput {
	return o
}

func (o InstanceClusterAutoscalingConfigPtrOutput) Elem() InstanceClusterAutoscalingConfigOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) InstanceClusterAutoscalingConfig {
		if v != nil {
			return *v
		}
		var ret InstanceClusterAutoscalingConfig
		return ret
	}).(InstanceClusterAutoscalingConfigOutput)
}

// The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
func (o InstanceClusterAutoscalingConfigPtrOutput) CpuTarget() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.CpuTarget
	}).(pulumi.IntPtrOutput)
}

// The maximum number of nodes for autoscaling.
func (o InstanceClusterAutoscalingConfigPtrOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodes
	}).(pulumi.IntPtrOutput)
}

// The minimum number of nodes for autoscaling.
func (o InstanceClusterAutoscalingConfigPtrOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodes
	}).(pulumi.IntPtrOutput)
}

// The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
func (o InstanceClusterAutoscalingConfigPtrOutput) StorageTarget() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.StorageTarget
	}).(pulumi.IntPtrOutput)
}

type InstanceIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamBindingConditionInput is an input type that accepts InstanceIamBindingConditionArgs and InstanceIamBindingConditionOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionInput` via:
//
//	InstanceIamBindingConditionArgs{...}
type InstanceIamBindingConditionInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput
	ToInstanceIamBindingConditionOutputWithContext(context.Context) InstanceIamBindingConditionOutput
}

type InstanceIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return i.ToInstanceIamBindingConditionOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput)
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput).ToInstanceIamBindingConditionPtrOutputWithContext(ctx)
}

// InstanceIamBindingConditionPtrInput is an input type that accepts InstanceIamBindingConditionArgs, InstanceIamBindingConditionPtr and InstanceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionPtrInput` via:
//
//	        InstanceIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput
	ToInstanceIamBindingConditionPtrOutputWithContext(context.Context) InstanceIamBindingConditionPtrOutput
}

type instanceIamBindingConditionPtrType InstanceIamBindingConditionArgs

func InstanceIamBindingConditionPtr(v *InstanceIamBindingConditionArgs) InstanceIamBindingConditionPtrInput {
	return (*instanceIamBindingConditionPtrType)(v)
}

func (*instanceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionPtrOutput)
}

type InstanceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamBindingCondition) *InstanceIamBindingCondition {
		return &v
	}).(InstanceIamBindingConditionPtrOutput)
}

func (o InstanceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) Elem() InstanceIamBindingConditionOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) InstanceIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamBindingCondition
		return ret
	}).(InstanceIamBindingConditionOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type InstanceIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamMemberConditionInput is an input type that accepts InstanceIamMemberConditionArgs and InstanceIamMemberConditionOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionInput` via:
//
//	InstanceIamMemberConditionArgs{...}
type InstanceIamMemberConditionInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput
	ToInstanceIamMemberConditionOutputWithContext(context.Context) InstanceIamMemberConditionOutput
}

type InstanceIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return i.ToInstanceIamMemberConditionOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput)
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput).ToInstanceIamMemberConditionPtrOutputWithContext(ctx)
}

// InstanceIamMemberConditionPtrInput is an input type that accepts InstanceIamMemberConditionArgs, InstanceIamMemberConditionPtr and InstanceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionPtrInput` via:
//
//	        InstanceIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput
	ToInstanceIamMemberConditionPtrOutputWithContext(context.Context) InstanceIamMemberConditionPtrOutput
}

type instanceIamMemberConditionPtrType InstanceIamMemberConditionArgs

func InstanceIamMemberConditionPtr(v *InstanceIamMemberConditionArgs) InstanceIamMemberConditionPtrInput {
	return (*instanceIamMemberConditionPtrType)(v)
}

func (*instanceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionPtrOutput)
}

type InstanceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamMemberCondition) *InstanceIamMemberCondition {
		return &v
	}).(InstanceIamMemberConditionPtrOutput)
}

func (o InstanceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) Elem() InstanceIamMemberConditionOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) InstanceIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamMemberCondition
		return ret
	}).(InstanceIamMemberConditionOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TableColumnFamily struct {
	// The name of the column family.
	Family string `pulumi:"family"`
}

// TableColumnFamilyInput is an input type that accepts TableColumnFamilyArgs and TableColumnFamilyOutput values.
// You can construct a concrete instance of `TableColumnFamilyInput` via:
//
//	TableColumnFamilyArgs{...}
type TableColumnFamilyInput interface {
	pulumi.Input

	ToTableColumnFamilyOutput() TableColumnFamilyOutput
	ToTableColumnFamilyOutputWithContext(context.Context) TableColumnFamilyOutput
}

type TableColumnFamilyArgs struct {
	// The name of the column family.
	Family pulumi.StringInput `pulumi:"family"`
}

func (TableColumnFamilyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableColumnFamily)(nil)).Elem()
}

func (i TableColumnFamilyArgs) ToTableColumnFamilyOutput() TableColumnFamilyOutput {
	return i.ToTableColumnFamilyOutputWithContext(context.Background())
}

func (i TableColumnFamilyArgs) ToTableColumnFamilyOutputWithContext(ctx context.Context) TableColumnFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableColumnFamilyOutput)
}

// TableColumnFamilyArrayInput is an input type that accepts TableColumnFamilyArray and TableColumnFamilyArrayOutput values.
// You can construct a concrete instance of `TableColumnFamilyArrayInput` via:
//
//	TableColumnFamilyArray{ TableColumnFamilyArgs{...} }
type TableColumnFamilyArrayInput interface {
	pulumi.Input

	ToTableColumnFamilyArrayOutput() TableColumnFamilyArrayOutput
	ToTableColumnFamilyArrayOutputWithContext(context.Context) TableColumnFamilyArrayOutput
}

type TableColumnFamilyArray []TableColumnFamilyInput

func (TableColumnFamilyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableColumnFamily)(nil)).Elem()
}

func (i TableColumnFamilyArray) ToTableColumnFamilyArrayOutput() TableColumnFamilyArrayOutput {
	return i.ToTableColumnFamilyArrayOutputWithContext(context.Background())
}

func (i TableColumnFamilyArray) ToTableColumnFamilyArrayOutputWithContext(ctx context.Context) TableColumnFamilyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableColumnFamilyArrayOutput)
}

type TableColumnFamilyOutput struct{ *pulumi.OutputState }

func (TableColumnFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableColumnFamily)(nil)).Elem()
}

func (o TableColumnFamilyOutput) ToTableColumnFamilyOutput() TableColumnFamilyOutput {
	return o
}

func (o TableColumnFamilyOutput) ToTableColumnFamilyOutputWithContext(ctx context.Context) TableColumnFamilyOutput {
	return o
}

// The name of the column family.
func (o TableColumnFamilyOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v TableColumnFamily) string { return v.Family }).(pulumi.StringOutput)
}

type TableColumnFamilyArrayOutput struct{ *pulumi.OutputState }

func (TableColumnFamilyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableColumnFamily)(nil)).Elem()
}

func (o TableColumnFamilyArrayOutput) ToTableColumnFamilyArrayOutput() TableColumnFamilyArrayOutput {
	return o
}

func (o TableColumnFamilyArrayOutput) ToTableColumnFamilyArrayOutputWithContext(ctx context.Context) TableColumnFamilyArrayOutput {
	return o
}

func (o TableColumnFamilyArrayOutput) Index(i pulumi.IntInput) TableColumnFamilyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TableColumnFamily {
		return vs[0].([]TableColumnFamily)[vs[1].(int)]
	}).(TableColumnFamilyOutput)
}

type TableIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// TableIamBindingConditionInput is an input type that accepts TableIamBindingConditionArgs and TableIamBindingConditionOutput values.
// You can construct a concrete instance of `TableIamBindingConditionInput` via:
//
//	TableIamBindingConditionArgs{...}
type TableIamBindingConditionInput interface {
	pulumi.Input

	ToTableIamBindingConditionOutput() TableIamBindingConditionOutput
	ToTableIamBindingConditionOutputWithContext(context.Context) TableIamBindingConditionOutput
}

type TableIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TableIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIamBindingCondition)(nil)).Elem()
}

func (i TableIamBindingConditionArgs) ToTableIamBindingConditionOutput() TableIamBindingConditionOutput {
	return i.ToTableIamBindingConditionOutputWithContext(context.Background())
}

func (i TableIamBindingConditionArgs) ToTableIamBindingConditionOutputWithContext(ctx context.Context) TableIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamBindingConditionOutput)
}

func (i TableIamBindingConditionArgs) ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput {
	return i.ToTableIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i TableIamBindingConditionArgs) ToTableIamBindingConditionPtrOutputWithContext(ctx context.Context) TableIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamBindingConditionOutput).ToTableIamBindingConditionPtrOutputWithContext(ctx)
}

// TableIamBindingConditionPtrInput is an input type that accepts TableIamBindingConditionArgs, TableIamBindingConditionPtr and TableIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `TableIamBindingConditionPtrInput` via:
//
//	        TableIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type TableIamBindingConditionPtrInput interface {
	pulumi.Input

	ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput
	ToTableIamBindingConditionPtrOutputWithContext(context.Context) TableIamBindingConditionPtrOutput
}

type tableIamBindingConditionPtrType TableIamBindingConditionArgs

func TableIamBindingConditionPtr(v *TableIamBindingConditionArgs) TableIamBindingConditionPtrInput {
	return (*tableIamBindingConditionPtrType)(v)
}

func (*tableIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIamBindingCondition)(nil)).Elem()
}

func (i *tableIamBindingConditionPtrType) ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput {
	return i.ToTableIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *tableIamBindingConditionPtrType) ToTableIamBindingConditionPtrOutputWithContext(ctx context.Context) TableIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamBindingConditionPtrOutput)
}

type TableIamBindingConditionOutput struct{ *pulumi.OutputState }

func (TableIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIamBindingCondition)(nil)).Elem()
}

func (o TableIamBindingConditionOutput) ToTableIamBindingConditionOutput() TableIamBindingConditionOutput {
	return o
}

func (o TableIamBindingConditionOutput) ToTableIamBindingConditionOutputWithContext(ctx context.Context) TableIamBindingConditionOutput {
	return o
}

func (o TableIamBindingConditionOutput) ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput {
	return o.ToTableIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o TableIamBindingConditionOutput) ToTableIamBindingConditionPtrOutputWithContext(ctx context.Context) TableIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableIamBindingCondition) *TableIamBindingCondition {
		return &v
	}).(TableIamBindingConditionPtrOutput)
}

func (o TableIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TableIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TableIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TableIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TableIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TableIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (TableIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIamBindingCondition)(nil)).Elem()
}

func (o TableIamBindingConditionPtrOutput) ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput {
	return o
}

func (o TableIamBindingConditionPtrOutput) ToTableIamBindingConditionPtrOutputWithContext(ctx context.Context) TableIamBindingConditionPtrOutput {
	return o
}

func (o TableIamBindingConditionPtrOutput) Elem() TableIamBindingConditionOutput {
	return o.ApplyT(func(v *TableIamBindingCondition) TableIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret TableIamBindingCondition
		return ret
	}).(TableIamBindingConditionOutput)
}

func (o TableIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TableIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TableIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TableIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// TableIamMemberConditionInput is an input type that accepts TableIamMemberConditionArgs and TableIamMemberConditionOutput values.
// You can construct a concrete instance of `TableIamMemberConditionInput` via:
//
//	TableIamMemberConditionArgs{...}
type TableIamMemberConditionInput interface {
	pulumi.Input

	ToTableIamMemberConditionOutput() TableIamMemberConditionOutput
	ToTableIamMemberConditionOutputWithContext(context.Context) TableIamMemberConditionOutput
}

type TableIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TableIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIamMemberCondition)(nil)).Elem()
}

func (i TableIamMemberConditionArgs) ToTableIamMemberConditionOutput() TableIamMemberConditionOutput {
	return i.ToTableIamMemberConditionOutputWithContext(context.Background())
}

func (i TableIamMemberConditionArgs) ToTableIamMemberConditionOutputWithContext(ctx context.Context) TableIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamMemberConditionOutput)
}

func (i TableIamMemberConditionArgs) ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput {
	return i.ToTableIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i TableIamMemberConditionArgs) ToTableIamMemberConditionPtrOutputWithContext(ctx context.Context) TableIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamMemberConditionOutput).ToTableIamMemberConditionPtrOutputWithContext(ctx)
}

// TableIamMemberConditionPtrInput is an input type that accepts TableIamMemberConditionArgs, TableIamMemberConditionPtr and TableIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `TableIamMemberConditionPtrInput` via:
//
//	        TableIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type TableIamMemberConditionPtrInput interface {
	pulumi.Input

	ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput
	ToTableIamMemberConditionPtrOutputWithContext(context.Context) TableIamMemberConditionPtrOutput
}

type tableIamMemberConditionPtrType TableIamMemberConditionArgs

func TableIamMemberConditionPtr(v *TableIamMemberConditionArgs) TableIamMemberConditionPtrInput {
	return (*tableIamMemberConditionPtrType)(v)
}

func (*tableIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIamMemberCondition)(nil)).Elem()
}

func (i *tableIamMemberConditionPtrType) ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput {
	return i.ToTableIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *tableIamMemberConditionPtrType) ToTableIamMemberConditionPtrOutputWithContext(ctx context.Context) TableIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamMemberConditionPtrOutput)
}

type TableIamMemberConditionOutput struct{ *pulumi.OutputState }

func (TableIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIamMemberCondition)(nil)).Elem()
}

func (o TableIamMemberConditionOutput) ToTableIamMemberConditionOutput() TableIamMemberConditionOutput {
	return o
}

func (o TableIamMemberConditionOutput) ToTableIamMemberConditionOutputWithContext(ctx context.Context) TableIamMemberConditionOutput {
	return o
}

func (o TableIamMemberConditionOutput) ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput {
	return o.ToTableIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o TableIamMemberConditionOutput) ToTableIamMemberConditionPtrOutputWithContext(ctx context.Context) TableIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableIamMemberCondition) *TableIamMemberCondition {
		return &v
	}).(TableIamMemberConditionPtrOutput)
}

func (o TableIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TableIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TableIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TableIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TableIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TableIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (TableIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIamMemberCondition)(nil)).Elem()
}

func (o TableIamMemberConditionPtrOutput) ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput {
	return o
}

func (o TableIamMemberConditionPtrOutput) ToTableIamMemberConditionPtrOutputWithContext(ctx context.Context) TableIamMemberConditionPtrOutput {
	return o
}

func (o TableIamMemberConditionPtrOutput) Elem() TableIamMemberConditionOutput {
	return o.ApplyT(func(v *TableIamMemberCondition) TableIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret TableIamMemberCondition
		return ret
	}).(TableIamMemberConditionOutput)
}

func (o TableIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TableIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TableIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GCPolicyMaxAgeInput)(nil)).Elem(), GCPolicyMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCPolicyMaxAgePtrInput)(nil)).Elem(), GCPolicyMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCPolicyMaxVersionInput)(nil)).Elem(), GCPolicyMaxVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCPolicyMaxVersionArrayInput)(nil)).Elem(), GCPolicyMaxVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceClusterInput)(nil)).Elem(), InstanceClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceClusterArrayInput)(nil)).Elem(), InstanceClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceClusterAutoscalingConfigInput)(nil)).Elem(), InstanceClusterAutoscalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceClusterAutoscalingConfigPtrInput)(nil)).Elem(), InstanceClusterAutoscalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionPtrInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionPtrInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableColumnFamilyInput)(nil)).Elem(), TableColumnFamilyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableColumnFamilyArrayInput)(nil)).Elem(), TableColumnFamilyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIamBindingConditionInput)(nil)).Elem(), TableIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIamBindingConditionPtrInput)(nil)).Elem(), TableIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIamMemberConditionInput)(nil)).Elem(), TableIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIamMemberConditionPtrInput)(nil)).Elem(), TableIamMemberConditionArgs{})
	pulumi.RegisterOutputType(GCPolicyMaxAgeOutput{})
	pulumi.RegisterOutputType(GCPolicyMaxAgePtrOutput{})
	pulumi.RegisterOutputType(GCPolicyMaxVersionOutput{})
	pulumi.RegisterOutputType(GCPolicyMaxVersionArrayOutput{})
	pulumi.RegisterOutputType(InstanceClusterOutput{})
	pulumi.RegisterOutputType(InstanceClusterArrayOutput{})
	pulumi.RegisterOutputType(InstanceClusterAutoscalingConfigOutput{})
	pulumi.RegisterOutputType(InstanceClusterAutoscalingConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(TableColumnFamilyOutput{})
	pulumi.RegisterOutputType(TableColumnFamilyArrayOutput{})
	pulumi.RegisterOutputType(TableIamBindingConditionOutput{})
	pulumi.RegisterOutputType(TableIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(TableIamMemberConditionOutput{})
	pulumi.RegisterOutputType(TableIamMemberConditionPtrOutput{})
}
