// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigtable

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AppProfileDataBoostIsolationReadOnly struct {
	// The Compute Billing Owner for this Data Boost App Profile.
	// Possible values are: `HOST_PAYS`.
	ComputeBillingOwner string `pulumi:"computeBillingOwner"`
}

// AppProfileDataBoostIsolationReadOnlyInput is an input type that accepts AppProfileDataBoostIsolationReadOnlyArgs and AppProfileDataBoostIsolationReadOnlyOutput values.
// You can construct a concrete instance of `AppProfileDataBoostIsolationReadOnlyInput` via:
//
//	AppProfileDataBoostIsolationReadOnlyArgs{...}
type AppProfileDataBoostIsolationReadOnlyInput interface {
	pulumi.Input

	ToAppProfileDataBoostIsolationReadOnlyOutput() AppProfileDataBoostIsolationReadOnlyOutput
	ToAppProfileDataBoostIsolationReadOnlyOutputWithContext(context.Context) AppProfileDataBoostIsolationReadOnlyOutput
}

type AppProfileDataBoostIsolationReadOnlyArgs struct {
	// The Compute Billing Owner for this Data Boost App Profile.
	// Possible values are: `HOST_PAYS`.
	ComputeBillingOwner pulumi.StringInput `pulumi:"computeBillingOwner"`
}

func (AppProfileDataBoostIsolationReadOnlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProfileDataBoostIsolationReadOnly)(nil)).Elem()
}

func (i AppProfileDataBoostIsolationReadOnlyArgs) ToAppProfileDataBoostIsolationReadOnlyOutput() AppProfileDataBoostIsolationReadOnlyOutput {
	return i.ToAppProfileDataBoostIsolationReadOnlyOutputWithContext(context.Background())
}

func (i AppProfileDataBoostIsolationReadOnlyArgs) ToAppProfileDataBoostIsolationReadOnlyOutputWithContext(ctx context.Context) AppProfileDataBoostIsolationReadOnlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProfileDataBoostIsolationReadOnlyOutput)
}

func (i AppProfileDataBoostIsolationReadOnlyArgs) ToAppProfileDataBoostIsolationReadOnlyPtrOutput() AppProfileDataBoostIsolationReadOnlyPtrOutput {
	return i.ToAppProfileDataBoostIsolationReadOnlyPtrOutputWithContext(context.Background())
}

func (i AppProfileDataBoostIsolationReadOnlyArgs) ToAppProfileDataBoostIsolationReadOnlyPtrOutputWithContext(ctx context.Context) AppProfileDataBoostIsolationReadOnlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProfileDataBoostIsolationReadOnlyOutput).ToAppProfileDataBoostIsolationReadOnlyPtrOutputWithContext(ctx)
}

// AppProfileDataBoostIsolationReadOnlyPtrInput is an input type that accepts AppProfileDataBoostIsolationReadOnlyArgs, AppProfileDataBoostIsolationReadOnlyPtr and AppProfileDataBoostIsolationReadOnlyPtrOutput values.
// You can construct a concrete instance of `AppProfileDataBoostIsolationReadOnlyPtrInput` via:
//
//	        AppProfileDataBoostIsolationReadOnlyArgs{...}
//
//	or:
//
//	        nil
type AppProfileDataBoostIsolationReadOnlyPtrInput interface {
	pulumi.Input

	ToAppProfileDataBoostIsolationReadOnlyPtrOutput() AppProfileDataBoostIsolationReadOnlyPtrOutput
	ToAppProfileDataBoostIsolationReadOnlyPtrOutputWithContext(context.Context) AppProfileDataBoostIsolationReadOnlyPtrOutput
}

type appProfileDataBoostIsolationReadOnlyPtrType AppProfileDataBoostIsolationReadOnlyArgs

func AppProfileDataBoostIsolationReadOnlyPtr(v *AppProfileDataBoostIsolationReadOnlyArgs) AppProfileDataBoostIsolationReadOnlyPtrInput {
	return (*appProfileDataBoostIsolationReadOnlyPtrType)(v)
}

func (*appProfileDataBoostIsolationReadOnlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProfileDataBoostIsolationReadOnly)(nil)).Elem()
}

func (i *appProfileDataBoostIsolationReadOnlyPtrType) ToAppProfileDataBoostIsolationReadOnlyPtrOutput() AppProfileDataBoostIsolationReadOnlyPtrOutput {
	return i.ToAppProfileDataBoostIsolationReadOnlyPtrOutputWithContext(context.Background())
}

func (i *appProfileDataBoostIsolationReadOnlyPtrType) ToAppProfileDataBoostIsolationReadOnlyPtrOutputWithContext(ctx context.Context) AppProfileDataBoostIsolationReadOnlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProfileDataBoostIsolationReadOnlyPtrOutput)
}

type AppProfileDataBoostIsolationReadOnlyOutput struct{ *pulumi.OutputState }

func (AppProfileDataBoostIsolationReadOnlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProfileDataBoostIsolationReadOnly)(nil)).Elem()
}

func (o AppProfileDataBoostIsolationReadOnlyOutput) ToAppProfileDataBoostIsolationReadOnlyOutput() AppProfileDataBoostIsolationReadOnlyOutput {
	return o
}

func (o AppProfileDataBoostIsolationReadOnlyOutput) ToAppProfileDataBoostIsolationReadOnlyOutputWithContext(ctx context.Context) AppProfileDataBoostIsolationReadOnlyOutput {
	return o
}

func (o AppProfileDataBoostIsolationReadOnlyOutput) ToAppProfileDataBoostIsolationReadOnlyPtrOutput() AppProfileDataBoostIsolationReadOnlyPtrOutput {
	return o.ToAppProfileDataBoostIsolationReadOnlyPtrOutputWithContext(context.Background())
}

func (o AppProfileDataBoostIsolationReadOnlyOutput) ToAppProfileDataBoostIsolationReadOnlyPtrOutputWithContext(ctx context.Context) AppProfileDataBoostIsolationReadOnlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppProfileDataBoostIsolationReadOnly) *AppProfileDataBoostIsolationReadOnly {
		return &v
	}).(AppProfileDataBoostIsolationReadOnlyPtrOutput)
}

// The Compute Billing Owner for this Data Boost App Profile.
// Possible values are: `HOST_PAYS`.
func (o AppProfileDataBoostIsolationReadOnlyOutput) ComputeBillingOwner() pulumi.StringOutput {
	return o.ApplyT(func(v AppProfileDataBoostIsolationReadOnly) string { return v.ComputeBillingOwner }).(pulumi.StringOutput)
}

type AppProfileDataBoostIsolationReadOnlyPtrOutput struct{ *pulumi.OutputState }

func (AppProfileDataBoostIsolationReadOnlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProfileDataBoostIsolationReadOnly)(nil)).Elem()
}

func (o AppProfileDataBoostIsolationReadOnlyPtrOutput) ToAppProfileDataBoostIsolationReadOnlyPtrOutput() AppProfileDataBoostIsolationReadOnlyPtrOutput {
	return o
}

func (o AppProfileDataBoostIsolationReadOnlyPtrOutput) ToAppProfileDataBoostIsolationReadOnlyPtrOutputWithContext(ctx context.Context) AppProfileDataBoostIsolationReadOnlyPtrOutput {
	return o
}

func (o AppProfileDataBoostIsolationReadOnlyPtrOutput) Elem() AppProfileDataBoostIsolationReadOnlyOutput {
	return o.ApplyT(func(v *AppProfileDataBoostIsolationReadOnly) AppProfileDataBoostIsolationReadOnly {
		if v != nil {
			return *v
		}
		var ret AppProfileDataBoostIsolationReadOnly
		return ret
	}).(AppProfileDataBoostIsolationReadOnlyOutput)
}

// The Compute Billing Owner for this Data Boost App Profile.
// Possible values are: `HOST_PAYS`.
func (o AppProfileDataBoostIsolationReadOnlyPtrOutput) ComputeBillingOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppProfileDataBoostIsolationReadOnly) *string {
		if v == nil {
			return nil
		}
		return &v.ComputeBillingOwner
	}).(pulumi.StringPtrOutput)
}

type AppProfileSingleClusterRouting struct {
	// If true, CheckAndMutateRow and ReadModifyWriteRow requests are allowed by this app profile.
	// It is unsafe to send these requests to the same table/row/column in multiple clusters.
	AllowTransactionalWrites *bool `pulumi:"allowTransactionalWrites"`
	// The cluster to which read/write requests should be routed.
	ClusterId string `pulumi:"clusterId"`
}

// AppProfileSingleClusterRoutingInput is an input type that accepts AppProfileSingleClusterRoutingArgs and AppProfileSingleClusterRoutingOutput values.
// You can construct a concrete instance of `AppProfileSingleClusterRoutingInput` via:
//
//	AppProfileSingleClusterRoutingArgs{...}
type AppProfileSingleClusterRoutingInput interface {
	pulumi.Input

	ToAppProfileSingleClusterRoutingOutput() AppProfileSingleClusterRoutingOutput
	ToAppProfileSingleClusterRoutingOutputWithContext(context.Context) AppProfileSingleClusterRoutingOutput
}

type AppProfileSingleClusterRoutingArgs struct {
	// If true, CheckAndMutateRow and ReadModifyWriteRow requests are allowed by this app profile.
	// It is unsafe to send these requests to the same table/row/column in multiple clusters.
	AllowTransactionalWrites pulumi.BoolPtrInput `pulumi:"allowTransactionalWrites"`
	// The cluster to which read/write requests should be routed.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
}

func (AppProfileSingleClusterRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProfileSingleClusterRouting)(nil)).Elem()
}

func (i AppProfileSingleClusterRoutingArgs) ToAppProfileSingleClusterRoutingOutput() AppProfileSingleClusterRoutingOutput {
	return i.ToAppProfileSingleClusterRoutingOutputWithContext(context.Background())
}

func (i AppProfileSingleClusterRoutingArgs) ToAppProfileSingleClusterRoutingOutputWithContext(ctx context.Context) AppProfileSingleClusterRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProfileSingleClusterRoutingOutput)
}

func (i AppProfileSingleClusterRoutingArgs) ToAppProfileSingleClusterRoutingPtrOutput() AppProfileSingleClusterRoutingPtrOutput {
	return i.ToAppProfileSingleClusterRoutingPtrOutputWithContext(context.Background())
}

func (i AppProfileSingleClusterRoutingArgs) ToAppProfileSingleClusterRoutingPtrOutputWithContext(ctx context.Context) AppProfileSingleClusterRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProfileSingleClusterRoutingOutput).ToAppProfileSingleClusterRoutingPtrOutputWithContext(ctx)
}

// AppProfileSingleClusterRoutingPtrInput is an input type that accepts AppProfileSingleClusterRoutingArgs, AppProfileSingleClusterRoutingPtr and AppProfileSingleClusterRoutingPtrOutput values.
// You can construct a concrete instance of `AppProfileSingleClusterRoutingPtrInput` via:
//
//	        AppProfileSingleClusterRoutingArgs{...}
//
//	or:
//
//	        nil
type AppProfileSingleClusterRoutingPtrInput interface {
	pulumi.Input

	ToAppProfileSingleClusterRoutingPtrOutput() AppProfileSingleClusterRoutingPtrOutput
	ToAppProfileSingleClusterRoutingPtrOutputWithContext(context.Context) AppProfileSingleClusterRoutingPtrOutput
}

type appProfileSingleClusterRoutingPtrType AppProfileSingleClusterRoutingArgs

func AppProfileSingleClusterRoutingPtr(v *AppProfileSingleClusterRoutingArgs) AppProfileSingleClusterRoutingPtrInput {
	return (*appProfileSingleClusterRoutingPtrType)(v)
}

func (*appProfileSingleClusterRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProfileSingleClusterRouting)(nil)).Elem()
}

func (i *appProfileSingleClusterRoutingPtrType) ToAppProfileSingleClusterRoutingPtrOutput() AppProfileSingleClusterRoutingPtrOutput {
	return i.ToAppProfileSingleClusterRoutingPtrOutputWithContext(context.Background())
}

func (i *appProfileSingleClusterRoutingPtrType) ToAppProfileSingleClusterRoutingPtrOutputWithContext(ctx context.Context) AppProfileSingleClusterRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProfileSingleClusterRoutingPtrOutput)
}

type AppProfileSingleClusterRoutingOutput struct{ *pulumi.OutputState }

func (AppProfileSingleClusterRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProfileSingleClusterRouting)(nil)).Elem()
}

func (o AppProfileSingleClusterRoutingOutput) ToAppProfileSingleClusterRoutingOutput() AppProfileSingleClusterRoutingOutput {
	return o
}

func (o AppProfileSingleClusterRoutingOutput) ToAppProfileSingleClusterRoutingOutputWithContext(ctx context.Context) AppProfileSingleClusterRoutingOutput {
	return o
}

func (o AppProfileSingleClusterRoutingOutput) ToAppProfileSingleClusterRoutingPtrOutput() AppProfileSingleClusterRoutingPtrOutput {
	return o.ToAppProfileSingleClusterRoutingPtrOutputWithContext(context.Background())
}

func (o AppProfileSingleClusterRoutingOutput) ToAppProfileSingleClusterRoutingPtrOutputWithContext(ctx context.Context) AppProfileSingleClusterRoutingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppProfileSingleClusterRouting) *AppProfileSingleClusterRouting {
		return &v
	}).(AppProfileSingleClusterRoutingPtrOutput)
}

// If true, CheckAndMutateRow and ReadModifyWriteRow requests are allowed by this app profile.
// It is unsafe to send these requests to the same table/row/column in multiple clusters.
func (o AppProfileSingleClusterRoutingOutput) AllowTransactionalWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppProfileSingleClusterRouting) *bool { return v.AllowTransactionalWrites }).(pulumi.BoolPtrOutput)
}

// The cluster to which read/write requests should be routed.
func (o AppProfileSingleClusterRoutingOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v AppProfileSingleClusterRouting) string { return v.ClusterId }).(pulumi.StringOutput)
}

type AppProfileSingleClusterRoutingPtrOutput struct{ *pulumi.OutputState }

func (AppProfileSingleClusterRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProfileSingleClusterRouting)(nil)).Elem()
}

func (o AppProfileSingleClusterRoutingPtrOutput) ToAppProfileSingleClusterRoutingPtrOutput() AppProfileSingleClusterRoutingPtrOutput {
	return o
}

func (o AppProfileSingleClusterRoutingPtrOutput) ToAppProfileSingleClusterRoutingPtrOutputWithContext(ctx context.Context) AppProfileSingleClusterRoutingPtrOutput {
	return o
}

func (o AppProfileSingleClusterRoutingPtrOutput) Elem() AppProfileSingleClusterRoutingOutput {
	return o.ApplyT(func(v *AppProfileSingleClusterRouting) AppProfileSingleClusterRouting {
		if v != nil {
			return *v
		}
		var ret AppProfileSingleClusterRouting
		return ret
	}).(AppProfileSingleClusterRoutingOutput)
}

// If true, CheckAndMutateRow and ReadModifyWriteRow requests are allowed by this app profile.
// It is unsafe to send these requests to the same table/row/column in multiple clusters.
func (o AppProfileSingleClusterRoutingPtrOutput) AllowTransactionalWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppProfileSingleClusterRouting) *bool {
		if v == nil {
			return nil
		}
		return v.AllowTransactionalWrites
	}).(pulumi.BoolPtrOutput)
}

// The cluster to which read/write requests should be routed.
func (o AppProfileSingleClusterRoutingPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppProfileSingleClusterRouting) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterId
	}).(pulumi.StringPtrOutput)
}

type AppProfileStandardIsolation struct {
	// The priority of requests sent using this app profile.
	// Possible values are: `PRIORITY_LOW`, `PRIORITY_MEDIUM`, `PRIORITY_HIGH`.
	Priority string `pulumi:"priority"`
}

// AppProfileStandardIsolationInput is an input type that accepts AppProfileStandardIsolationArgs and AppProfileStandardIsolationOutput values.
// You can construct a concrete instance of `AppProfileStandardIsolationInput` via:
//
//	AppProfileStandardIsolationArgs{...}
type AppProfileStandardIsolationInput interface {
	pulumi.Input

	ToAppProfileStandardIsolationOutput() AppProfileStandardIsolationOutput
	ToAppProfileStandardIsolationOutputWithContext(context.Context) AppProfileStandardIsolationOutput
}

type AppProfileStandardIsolationArgs struct {
	// The priority of requests sent using this app profile.
	// Possible values are: `PRIORITY_LOW`, `PRIORITY_MEDIUM`, `PRIORITY_HIGH`.
	Priority pulumi.StringInput `pulumi:"priority"`
}

func (AppProfileStandardIsolationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProfileStandardIsolation)(nil)).Elem()
}

func (i AppProfileStandardIsolationArgs) ToAppProfileStandardIsolationOutput() AppProfileStandardIsolationOutput {
	return i.ToAppProfileStandardIsolationOutputWithContext(context.Background())
}

func (i AppProfileStandardIsolationArgs) ToAppProfileStandardIsolationOutputWithContext(ctx context.Context) AppProfileStandardIsolationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProfileStandardIsolationOutput)
}

func (i AppProfileStandardIsolationArgs) ToAppProfileStandardIsolationPtrOutput() AppProfileStandardIsolationPtrOutput {
	return i.ToAppProfileStandardIsolationPtrOutputWithContext(context.Background())
}

func (i AppProfileStandardIsolationArgs) ToAppProfileStandardIsolationPtrOutputWithContext(ctx context.Context) AppProfileStandardIsolationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProfileStandardIsolationOutput).ToAppProfileStandardIsolationPtrOutputWithContext(ctx)
}

// AppProfileStandardIsolationPtrInput is an input type that accepts AppProfileStandardIsolationArgs, AppProfileStandardIsolationPtr and AppProfileStandardIsolationPtrOutput values.
// You can construct a concrete instance of `AppProfileStandardIsolationPtrInput` via:
//
//	        AppProfileStandardIsolationArgs{...}
//
//	or:
//
//	        nil
type AppProfileStandardIsolationPtrInput interface {
	pulumi.Input

	ToAppProfileStandardIsolationPtrOutput() AppProfileStandardIsolationPtrOutput
	ToAppProfileStandardIsolationPtrOutputWithContext(context.Context) AppProfileStandardIsolationPtrOutput
}

type appProfileStandardIsolationPtrType AppProfileStandardIsolationArgs

func AppProfileStandardIsolationPtr(v *AppProfileStandardIsolationArgs) AppProfileStandardIsolationPtrInput {
	return (*appProfileStandardIsolationPtrType)(v)
}

func (*appProfileStandardIsolationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProfileStandardIsolation)(nil)).Elem()
}

func (i *appProfileStandardIsolationPtrType) ToAppProfileStandardIsolationPtrOutput() AppProfileStandardIsolationPtrOutput {
	return i.ToAppProfileStandardIsolationPtrOutputWithContext(context.Background())
}

func (i *appProfileStandardIsolationPtrType) ToAppProfileStandardIsolationPtrOutputWithContext(ctx context.Context) AppProfileStandardIsolationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppProfileStandardIsolationPtrOutput)
}

type AppProfileStandardIsolationOutput struct{ *pulumi.OutputState }

func (AppProfileStandardIsolationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProfileStandardIsolation)(nil)).Elem()
}

func (o AppProfileStandardIsolationOutput) ToAppProfileStandardIsolationOutput() AppProfileStandardIsolationOutput {
	return o
}

func (o AppProfileStandardIsolationOutput) ToAppProfileStandardIsolationOutputWithContext(ctx context.Context) AppProfileStandardIsolationOutput {
	return o
}

func (o AppProfileStandardIsolationOutput) ToAppProfileStandardIsolationPtrOutput() AppProfileStandardIsolationPtrOutput {
	return o.ToAppProfileStandardIsolationPtrOutputWithContext(context.Background())
}

func (o AppProfileStandardIsolationOutput) ToAppProfileStandardIsolationPtrOutputWithContext(ctx context.Context) AppProfileStandardIsolationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppProfileStandardIsolation) *AppProfileStandardIsolation {
		return &v
	}).(AppProfileStandardIsolationPtrOutput)
}

// The priority of requests sent using this app profile.
// Possible values are: `PRIORITY_LOW`, `PRIORITY_MEDIUM`, `PRIORITY_HIGH`.
func (o AppProfileStandardIsolationOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v AppProfileStandardIsolation) string { return v.Priority }).(pulumi.StringOutput)
}

type AppProfileStandardIsolationPtrOutput struct{ *pulumi.OutputState }

func (AppProfileStandardIsolationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProfileStandardIsolation)(nil)).Elem()
}

func (o AppProfileStandardIsolationPtrOutput) ToAppProfileStandardIsolationPtrOutput() AppProfileStandardIsolationPtrOutput {
	return o
}

func (o AppProfileStandardIsolationPtrOutput) ToAppProfileStandardIsolationPtrOutputWithContext(ctx context.Context) AppProfileStandardIsolationPtrOutput {
	return o
}

func (o AppProfileStandardIsolationPtrOutput) Elem() AppProfileStandardIsolationOutput {
	return o.ApplyT(func(v *AppProfileStandardIsolation) AppProfileStandardIsolation {
		if v != nil {
			return *v
		}
		var ret AppProfileStandardIsolation
		return ret
	}).(AppProfileStandardIsolationOutput)
}

// The priority of requests sent using this app profile.
// Possible values are: `PRIORITY_LOW`, `PRIORITY_MEDIUM`, `PRIORITY_HIGH`.
func (o AppProfileStandardIsolationPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppProfileStandardIsolation) *string {
		if v == nil {
			return nil
		}
		return &v.Priority
	}).(pulumi.StringPtrOutput)
}

type AuthorizedViewSubsetView struct {
	// A group of column family subsets to be included in the authorized view. This can be specified multiple times. Structure is documented below.
	//
	// ***
	FamilySubsets []AuthorizedViewSubsetViewFamilySubset `pulumi:"familySubsets"`
	// A list of Base64-encoded row prefixes to be included in the authorized view. To provide access to all rows, include the empty string as a prefix ("").
	RowPrefixes []string `pulumi:"rowPrefixes"`
}

// AuthorizedViewSubsetViewInput is an input type that accepts AuthorizedViewSubsetViewArgs and AuthorizedViewSubsetViewOutput values.
// You can construct a concrete instance of `AuthorizedViewSubsetViewInput` via:
//
//	AuthorizedViewSubsetViewArgs{...}
type AuthorizedViewSubsetViewInput interface {
	pulumi.Input

	ToAuthorizedViewSubsetViewOutput() AuthorizedViewSubsetViewOutput
	ToAuthorizedViewSubsetViewOutputWithContext(context.Context) AuthorizedViewSubsetViewOutput
}

type AuthorizedViewSubsetViewArgs struct {
	// A group of column family subsets to be included in the authorized view. This can be specified multiple times. Structure is documented below.
	//
	// ***
	FamilySubsets AuthorizedViewSubsetViewFamilySubsetArrayInput `pulumi:"familySubsets"`
	// A list of Base64-encoded row prefixes to be included in the authorized view. To provide access to all rows, include the empty string as a prefix ("").
	RowPrefixes pulumi.StringArrayInput `pulumi:"rowPrefixes"`
}

func (AuthorizedViewSubsetViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizedViewSubsetView)(nil)).Elem()
}

func (i AuthorizedViewSubsetViewArgs) ToAuthorizedViewSubsetViewOutput() AuthorizedViewSubsetViewOutput {
	return i.ToAuthorizedViewSubsetViewOutputWithContext(context.Background())
}

func (i AuthorizedViewSubsetViewArgs) ToAuthorizedViewSubsetViewOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizedViewSubsetViewOutput)
}

func (i AuthorizedViewSubsetViewArgs) ToAuthorizedViewSubsetViewPtrOutput() AuthorizedViewSubsetViewPtrOutput {
	return i.ToAuthorizedViewSubsetViewPtrOutputWithContext(context.Background())
}

func (i AuthorizedViewSubsetViewArgs) ToAuthorizedViewSubsetViewPtrOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizedViewSubsetViewOutput).ToAuthorizedViewSubsetViewPtrOutputWithContext(ctx)
}

// AuthorizedViewSubsetViewPtrInput is an input type that accepts AuthorizedViewSubsetViewArgs, AuthorizedViewSubsetViewPtr and AuthorizedViewSubsetViewPtrOutput values.
// You can construct a concrete instance of `AuthorizedViewSubsetViewPtrInput` via:
//
//	        AuthorizedViewSubsetViewArgs{...}
//
//	or:
//
//	        nil
type AuthorizedViewSubsetViewPtrInput interface {
	pulumi.Input

	ToAuthorizedViewSubsetViewPtrOutput() AuthorizedViewSubsetViewPtrOutput
	ToAuthorizedViewSubsetViewPtrOutputWithContext(context.Context) AuthorizedViewSubsetViewPtrOutput
}

type authorizedViewSubsetViewPtrType AuthorizedViewSubsetViewArgs

func AuthorizedViewSubsetViewPtr(v *AuthorizedViewSubsetViewArgs) AuthorizedViewSubsetViewPtrInput {
	return (*authorizedViewSubsetViewPtrType)(v)
}

func (*authorizedViewSubsetViewPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizedViewSubsetView)(nil)).Elem()
}

func (i *authorizedViewSubsetViewPtrType) ToAuthorizedViewSubsetViewPtrOutput() AuthorizedViewSubsetViewPtrOutput {
	return i.ToAuthorizedViewSubsetViewPtrOutputWithContext(context.Background())
}

func (i *authorizedViewSubsetViewPtrType) ToAuthorizedViewSubsetViewPtrOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizedViewSubsetViewPtrOutput)
}

type AuthorizedViewSubsetViewOutput struct{ *pulumi.OutputState }

func (AuthorizedViewSubsetViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizedViewSubsetView)(nil)).Elem()
}

func (o AuthorizedViewSubsetViewOutput) ToAuthorizedViewSubsetViewOutput() AuthorizedViewSubsetViewOutput {
	return o
}

func (o AuthorizedViewSubsetViewOutput) ToAuthorizedViewSubsetViewOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewOutput {
	return o
}

func (o AuthorizedViewSubsetViewOutput) ToAuthorizedViewSubsetViewPtrOutput() AuthorizedViewSubsetViewPtrOutput {
	return o.ToAuthorizedViewSubsetViewPtrOutputWithContext(context.Background())
}

func (o AuthorizedViewSubsetViewOutput) ToAuthorizedViewSubsetViewPtrOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizedViewSubsetView) *AuthorizedViewSubsetView {
		return &v
	}).(AuthorizedViewSubsetViewPtrOutput)
}

// A group of column family subsets to be included in the authorized view. This can be specified multiple times. Structure is documented below.
//
// ***
func (o AuthorizedViewSubsetViewOutput) FamilySubsets() AuthorizedViewSubsetViewFamilySubsetArrayOutput {
	return o.ApplyT(func(v AuthorizedViewSubsetView) []AuthorizedViewSubsetViewFamilySubset { return v.FamilySubsets }).(AuthorizedViewSubsetViewFamilySubsetArrayOutput)
}

// A list of Base64-encoded row prefixes to be included in the authorized view. To provide access to all rows, include the empty string as a prefix ("").
func (o AuthorizedViewSubsetViewOutput) RowPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizedViewSubsetView) []string { return v.RowPrefixes }).(pulumi.StringArrayOutput)
}

type AuthorizedViewSubsetViewPtrOutput struct{ *pulumi.OutputState }

func (AuthorizedViewSubsetViewPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizedViewSubsetView)(nil)).Elem()
}

func (o AuthorizedViewSubsetViewPtrOutput) ToAuthorizedViewSubsetViewPtrOutput() AuthorizedViewSubsetViewPtrOutput {
	return o
}

func (o AuthorizedViewSubsetViewPtrOutput) ToAuthorizedViewSubsetViewPtrOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewPtrOutput {
	return o
}

func (o AuthorizedViewSubsetViewPtrOutput) Elem() AuthorizedViewSubsetViewOutput {
	return o.ApplyT(func(v *AuthorizedViewSubsetView) AuthorizedViewSubsetView {
		if v != nil {
			return *v
		}
		var ret AuthorizedViewSubsetView
		return ret
	}).(AuthorizedViewSubsetViewOutput)
}

// A group of column family subsets to be included in the authorized view. This can be specified multiple times. Structure is documented below.
//
// ***
func (o AuthorizedViewSubsetViewPtrOutput) FamilySubsets() AuthorizedViewSubsetViewFamilySubsetArrayOutput {
	return o.ApplyT(func(v *AuthorizedViewSubsetView) []AuthorizedViewSubsetViewFamilySubset {
		if v == nil {
			return nil
		}
		return v.FamilySubsets
	}).(AuthorizedViewSubsetViewFamilySubsetArrayOutput)
}

// A list of Base64-encoded row prefixes to be included in the authorized view. To provide access to all rows, include the empty string as a prefix ("").
func (o AuthorizedViewSubsetViewPtrOutput) RowPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizedViewSubsetView) []string {
		if v == nil {
			return nil
		}
		return v.RowPrefixes
	}).(pulumi.StringArrayOutput)
}

type AuthorizedViewSubsetViewFamilySubset struct {
	// Name of the column family to be included in the authorized view. The specified column family must exist in the parent table of this authorized view.
	FamilyName string `pulumi:"familyName"`
	// A list of Base64-encoded prefixes for qualifiers of the column family to be included in the authorized view.
	// Every qualifier starting with one of these prefixes is included in the authorized view. To provide access to all qualifiers, include the empty string as a prefix ("").
	QualifierPrefixes []string `pulumi:"qualifierPrefixes"`
	// A list of Base64-encoded individual exact column qualifiers of the column family to be included in the authorized view.
	Qualifiers []string `pulumi:"qualifiers"`
}

// AuthorizedViewSubsetViewFamilySubsetInput is an input type that accepts AuthorizedViewSubsetViewFamilySubsetArgs and AuthorizedViewSubsetViewFamilySubsetOutput values.
// You can construct a concrete instance of `AuthorizedViewSubsetViewFamilySubsetInput` via:
//
//	AuthorizedViewSubsetViewFamilySubsetArgs{...}
type AuthorizedViewSubsetViewFamilySubsetInput interface {
	pulumi.Input

	ToAuthorizedViewSubsetViewFamilySubsetOutput() AuthorizedViewSubsetViewFamilySubsetOutput
	ToAuthorizedViewSubsetViewFamilySubsetOutputWithContext(context.Context) AuthorizedViewSubsetViewFamilySubsetOutput
}

type AuthorizedViewSubsetViewFamilySubsetArgs struct {
	// Name of the column family to be included in the authorized view. The specified column family must exist in the parent table of this authorized view.
	FamilyName pulumi.StringInput `pulumi:"familyName"`
	// A list of Base64-encoded prefixes for qualifiers of the column family to be included in the authorized view.
	// Every qualifier starting with one of these prefixes is included in the authorized view. To provide access to all qualifiers, include the empty string as a prefix ("").
	QualifierPrefixes pulumi.StringArrayInput `pulumi:"qualifierPrefixes"`
	// A list of Base64-encoded individual exact column qualifiers of the column family to be included in the authorized view.
	Qualifiers pulumi.StringArrayInput `pulumi:"qualifiers"`
}

func (AuthorizedViewSubsetViewFamilySubsetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizedViewSubsetViewFamilySubset)(nil)).Elem()
}

func (i AuthorizedViewSubsetViewFamilySubsetArgs) ToAuthorizedViewSubsetViewFamilySubsetOutput() AuthorizedViewSubsetViewFamilySubsetOutput {
	return i.ToAuthorizedViewSubsetViewFamilySubsetOutputWithContext(context.Background())
}

func (i AuthorizedViewSubsetViewFamilySubsetArgs) ToAuthorizedViewSubsetViewFamilySubsetOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewFamilySubsetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizedViewSubsetViewFamilySubsetOutput)
}

// AuthorizedViewSubsetViewFamilySubsetArrayInput is an input type that accepts AuthorizedViewSubsetViewFamilySubsetArray and AuthorizedViewSubsetViewFamilySubsetArrayOutput values.
// You can construct a concrete instance of `AuthorizedViewSubsetViewFamilySubsetArrayInput` via:
//
//	AuthorizedViewSubsetViewFamilySubsetArray{ AuthorizedViewSubsetViewFamilySubsetArgs{...} }
type AuthorizedViewSubsetViewFamilySubsetArrayInput interface {
	pulumi.Input

	ToAuthorizedViewSubsetViewFamilySubsetArrayOutput() AuthorizedViewSubsetViewFamilySubsetArrayOutput
	ToAuthorizedViewSubsetViewFamilySubsetArrayOutputWithContext(context.Context) AuthorizedViewSubsetViewFamilySubsetArrayOutput
}

type AuthorizedViewSubsetViewFamilySubsetArray []AuthorizedViewSubsetViewFamilySubsetInput

func (AuthorizedViewSubsetViewFamilySubsetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizedViewSubsetViewFamilySubset)(nil)).Elem()
}

func (i AuthorizedViewSubsetViewFamilySubsetArray) ToAuthorizedViewSubsetViewFamilySubsetArrayOutput() AuthorizedViewSubsetViewFamilySubsetArrayOutput {
	return i.ToAuthorizedViewSubsetViewFamilySubsetArrayOutputWithContext(context.Background())
}

func (i AuthorizedViewSubsetViewFamilySubsetArray) ToAuthorizedViewSubsetViewFamilySubsetArrayOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewFamilySubsetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizedViewSubsetViewFamilySubsetArrayOutput)
}

type AuthorizedViewSubsetViewFamilySubsetOutput struct{ *pulumi.OutputState }

func (AuthorizedViewSubsetViewFamilySubsetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizedViewSubsetViewFamilySubset)(nil)).Elem()
}

func (o AuthorizedViewSubsetViewFamilySubsetOutput) ToAuthorizedViewSubsetViewFamilySubsetOutput() AuthorizedViewSubsetViewFamilySubsetOutput {
	return o
}

func (o AuthorizedViewSubsetViewFamilySubsetOutput) ToAuthorizedViewSubsetViewFamilySubsetOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewFamilySubsetOutput {
	return o
}

// Name of the column family to be included in the authorized view. The specified column family must exist in the parent table of this authorized view.
func (o AuthorizedViewSubsetViewFamilySubsetOutput) FamilyName() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizedViewSubsetViewFamilySubset) string { return v.FamilyName }).(pulumi.StringOutput)
}

// A list of Base64-encoded prefixes for qualifiers of the column family to be included in the authorized view.
// Every qualifier starting with one of these prefixes is included in the authorized view. To provide access to all qualifiers, include the empty string as a prefix ("").
func (o AuthorizedViewSubsetViewFamilySubsetOutput) QualifierPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizedViewSubsetViewFamilySubset) []string { return v.QualifierPrefixes }).(pulumi.StringArrayOutput)
}

// A list of Base64-encoded individual exact column qualifiers of the column family to be included in the authorized view.
func (o AuthorizedViewSubsetViewFamilySubsetOutput) Qualifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizedViewSubsetViewFamilySubset) []string { return v.Qualifiers }).(pulumi.StringArrayOutput)
}

type AuthorizedViewSubsetViewFamilySubsetArrayOutput struct{ *pulumi.OutputState }

func (AuthorizedViewSubsetViewFamilySubsetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizedViewSubsetViewFamilySubset)(nil)).Elem()
}

func (o AuthorizedViewSubsetViewFamilySubsetArrayOutput) ToAuthorizedViewSubsetViewFamilySubsetArrayOutput() AuthorizedViewSubsetViewFamilySubsetArrayOutput {
	return o
}

func (o AuthorizedViewSubsetViewFamilySubsetArrayOutput) ToAuthorizedViewSubsetViewFamilySubsetArrayOutputWithContext(ctx context.Context) AuthorizedViewSubsetViewFamilySubsetArrayOutput {
	return o
}

func (o AuthorizedViewSubsetViewFamilySubsetArrayOutput) Index(i pulumi.IntInput) AuthorizedViewSubsetViewFamilySubsetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizedViewSubsetViewFamilySubset {
		return vs[0].([]AuthorizedViewSubsetViewFamilySubset)[vs[1].(int)]
	}).(AuthorizedViewSubsetViewFamilySubsetOutput)
}

type GCPolicyMaxAge struct {
	// Number of days before applying GC policy.
	//
	// Deprecated: Deprecated in favor of duration
	Days *int `pulumi:"days"`
	// Duration before applying GC policy (ex. "8h"). This is required when `days` isn't set
	//
	// ***
	Duration *string `pulumi:"duration"`
}

// GCPolicyMaxAgeInput is an input type that accepts GCPolicyMaxAgeArgs and GCPolicyMaxAgeOutput values.
// You can construct a concrete instance of `GCPolicyMaxAgeInput` via:
//
//	GCPolicyMaxAgeArgs{...}
type GCPolicyMaxAgeInput interface {
	pulumi.Input

	ToGCPolicyMaxAgeOutput() GCPolicyMaxAgeOutput
	ToGCPolicyMaxAgeOutputWithContext(context.Context) GCPolicyMaxAgeOutput
}

type GCPolicyMaxAgeArgs struct {
	// Number of days before applying GC policy.
	//
	// Deprecated: Deprecated in favor of duration
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Duration before applying GC policy (ex. "8h"). This is required when `days` isn't set
	//
	// ***
	Duration pulumi.StringPtrInput `pulumi:"duration"`
}

func (GCPolicyMaxAgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxAge)(nil)).Elem()
}

func (i GCPolicyMaxAgeArgs) ToGCPolicyMaxAgeOutput() GCPolicyMaxAgeOutput {
	return i.ToGCPolicyMaxAgeOutputWithContext(context.Background())
}

func (i GCPolicyMaxAgeArgs) ToGCPolicyMaxAgeOutputWithContext(ctx context.Context) GCPolicyMaxAgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxAgeOutput)
}

func (i GCPolicyMaxAgeArgs) ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput {
	return i.ToGCPolicyMaxAgePtrOutputWithContext(context.Background())
}

func (i GCPolicyMaxAgeArgs) ToGCPolicyMaxAgePtrOutputWithContext(ctx context.Context) GCPolicyMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxAgeOutput).ToGCPolicyMaxAgePtrOutputWithContext(ctx)
}

// GCPolicyMaxAgePtrInput is an input type that accepts GCPolicyMaxAgeArgs, GCPolicyMaxAgePtr and GCPolicyMaxAgePtrOutput values.
// You can construct a concrete instance of `GCPolicyMaxAgePtrInput` via:
//
//	        GCPolicyMaxAgeArgs{...}
//
//	or:
//
//	        nil
type GCPolicyMaxAgePtrInput interface {
	pulumi.Input

	ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput
	ToGCPolicyMaxAgePtrOutputWithContext(context.Context) GCPolicyMaxAgePtrOutput
}

type gcpolicyMaxAgePtrType GCPolicyMaxAgeArgs

func GCPolicyMaxAgePtr(v *GCPolicyMaxAgeArgs) GCPolicyMaxAgePtrInput {
	return (*gcpolicyMaxAgePtrType)(v)
}

func (*gcpolicyMaxAgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GCPolicyMaxAge)(nil)).Elem()
}

func (i *gcpolicyMaxAgePtrType) ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput {
	return i.ToGCPolicyMaxAgePtrOutputWithContext(context.Background())
}

func (i *gcpolicyMaxAgePtrType) ToGCPolicyMaxAgePtrOutputWithContext(ctx context.Context) GCPolicyMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxAgePtrOutput)
}

type GCPolicyMaxAgeOutput struct{ *pulumi.OutputState }

func (GCPolicyMaxAgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxAge)(nil)).Elem()
}

func (o GCPolicyMaxAgeOutput) ToGCPolicyMaxAgeOutput() GCPolicyMaxAgeOutput {
	return o
}

func (o GCPolicyMaxAgeOutput) ToGCPolicyMaxAgeOutputWithContext(ctx context.Context) GCPolicyMaxAgeOutput {
	return o
}

func (o GCPolicyMaxAgeOutput) ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput {
	return o.ToGCPolicyMaxAgePtrOutputWithContext(context.Background())
}

func (o GCPolicyMaxAgeOutput) ToGCPolicyMaxAgePtrOutputWithContext(ctx context.Context) GCPolicyMaxAgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GCPolicyMaxAge) *GCPolicyMaxAge {
		return &v
	}).(GCPolicyMaxAgePtrOutput)
}

// Number of days before applying GC policy.
//
// Deprecated: Deprecated in favor of duration
func (o GCPolicyMaxAgeOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GCPolicyMaxAge) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Duration before applying GC policy (ex. "8h"). This is required when `days` isn't set
//
// ***
func (o GCPolicyMaxAgeOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GCPolicyMaxAge) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

type GCPolicyMaxAgePtrOutput struct{ *pulumi.OutputState }

func (GCPolicyMaxAgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GCPolicyMaxAge)(nil)).Elem()
}

func (o GCPolicyMaxAgePtrOutput) ToGCPolicyMaxAgePtrOutput() GCPolicyMaxAgePtrOutput {
	return o
}

func (o GCPolicyMaxAgePtrOutput) ToGCPolicyMaxAgePtrOutputWithContext(ctx context.Context) GCPolicyMaxAgePtrOutput {
	return o
}

func (o GCPolicyMaxAgePtrOutput) Elem() GCPolicyMaxAgeOutput {
	return o.ApplyT(func(v *GCPolicyMaxAge) GCPolicyMaxAge {
		if v != nil {
			return *v
		}
		var ret GCPolicyMaxAge
		return ret
	}).(GCPolicyMaxAgeOutput)
}

// Number of days before applying GC policy.
//
// Deprecated: Deprecated in favor of duration
func (o GCPolicyMaxAgePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GCPolicyMaxAge) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Duration before applying GC policy (ex. "8h"). This is required when `days` isn't set
//
// ***
func (o GCPolicyMaxAgePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCPolicyMaxAge) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

type GCPolicyMaxVersion struct {
	// Number of version before applying the GC policy.
	//
	// ***
	// `gcRules` include 2 fields:
	Number int `pulumi:"number"`
}

// GCPolicyMaxVersionInput is an input type that accepts GCPolicyMaxVersionArgs and GCPolicyMaxVersionOutput values.
// You can construct a concrete instance of `GCPolicyMaxVersionInput` via:
//
//	GCPolicyMaxVersionArgs{...}
type GCPolicyMaxVersionInput interface {
	pulumi.Input

	ToGCPolicyMaxVersionOutput() GCPolicyMaxVersionOutput
	ToGCPolicyMaxVersionOutputWithContext(context.Context) GCPolicyMaxVersionOutput
}

type GCPolicyMaxVersionArgs struct {
	// Number of version before applying the GC policy.
	//
	// ***
	// `gcRules` include 2 fields:
	Number pulumi.IntInput `pulumi:"number"`
}

func (GCPolicyMaxVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxVersion)(nil)).Elem()
}

func (i GCPolicyMaxVersionArgs) ToGCPolicyMaxVersionOutput() GCPolicyMaxVersionOutput {
	return i.ToGCPolicyMaxVersionOutputWithContext(context.Background())
}

func (i GCPolicyMaxVersionArgs) ToGCPolicyMaxVersionOutputWithContext(ctx context.Context) GCPolicyMaxVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxVersionOutput)
}

// GCPolicyMaxVersionArrayInput is an input type that accepts GCPolicyMaxVersionArray and GCPolicyMaxVersionArrayOutput values.
// You can construct a concrete instance of `GCPolicyMaxVersionArrayInput` via:
//
//	GCPolicyMaxVersionArray{ GCPolicyMaxVersionArgs{...} }
type GCPolicyMaxVersionArrayInput interface {
	pulumi.Input

	ToGCPolicyMaxVersionArrayOutput() GCPolicyMaxVersionArrayOutput
	ToGCPolicyMaxVersionArrayOutputWithContext(context.Context) GCPolicyMaxVersionArrayOutput
}

type GCPolicyMaxVersionArray []GCPolicyMaxVersionInput

func (GCPolicyMaxVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GCPolicyMaxVersion)(nil)).Elem()
}

func (i GCPolicyMaxVersionArray) ToGCPolicyMaxVersionArrayOutput() GCPolicyMaxVersionArrayOutput {
	return i.ToGCPolicyMaxVersionArrayOutputWithContext(context.Background())
}

func (i GCPolicyMaxVersionArray) ToGCPolicyMaxVersionArrayOutputWithContext(ctx context.Context) GCPolicyMaxVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxVersionArrayOutput)
}

type GCPolicyMaxVersionOutput struct{ *pulumi.OutputState }

func (GCPolicyMaxVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxVersion)(nil)).Elem()
}

func (o GCPolicyMaxVersionOutput) ToGCPolicyMaxVersionOutput() GCPolicyMaxVersionOutput {
	return o
}

func (o GCPolicyMaxVersionOutput) ToGCPolicyMaxVersionOutputWithContext(ctx context.Context) GCPolicyMaxVersionOutput {
	return o
}

// Number of version before applying the GC policy.
//
// ***
// `gcRules` include 2 fields:
func (o GCPolicyMaxVersionOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v GCPolicyMaxVersion) int { return v.Number }).(pulumi.IntOutput)
}

type GCPolicyMaxVersionArrayOutput struct{ *pulumi.OutputState }

func (GCPolicyMaxVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GCPolicyMaxVersion)(nil)).Elem()
}

func (o GCPolicyMaxVersionArrayOutput) ToGCPolicyMaxVersionArrayOutput() GCPolicyMaxVersionArrayOutput {
	return o
}

func (o GCPolicyMaxVersionArrayOutput) ToGCPolicyMaxVersionArrayOutputWithContext(ctx context.Context) GCPolicyMaxVersionArrayOutput {
	return o
}

func (o GCPolicyMaxVersionArrayOutput) Index(i pulumi.IntInput) GCPolicyMaxVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GCPolicyMaxVersion {
		return vs[0].([]GCPolicyMaxVersion)[vs[1].(int)]
	}).(GCPolicyMaxVersionOutput)
}

type InstanceCluster struct {
	// [Autoscaling](https://cloud.google.com/bigtable/docs/autoscaling#parameters) config for the cluster, contains the following arguments:
	AutoscalingConfig *InstanceClusterAutoscalingConfig `pulumi:"autoscalingConfig"`
	// The ID of the Cloud Bigtable cluster. Must be 6-30 characters and must only contain hyphens, lowercase letters and numbers.
	ClusterId string `pulumi:"clusterId"`
	// Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// The node scaling factor for this cluster. One of `"NodeScalingFactor1X"` or `"NodeScalingFactor2X"`. Defaults to `"NodeScalingFactor1X"`. If `"NodeScalingFactor2X"` is specified, then `numNodes`, `minNodes`, and `maxNodes` would need to be specified in increments of 2. This value cannot be updated after the cluster is created.
	//
	// > **Note**: Removing the field entirely from the config will cause the provider to default to the backend value.
	//
	// !> **Warning**: Modifying this field will cause the provider to delete/recreate the entire resource.
	//
	// !> **Warning:** Modifying the `storageType`, `zone` or `kmsKeyName` of an existing cluster (by
	// `clusterId`) will cause the provider to delete/recreate the entire
	// `bigtable.Instance` resource. If these values are changing, use a new
	// `clusterId`.
	NodeScalingFactor *string `pulumi:"nodeScalingFactor"`
	// The number of nodes in the cluster.
	// If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
	NumNodes *int `pulumi:"numNodes"`
	// describes the current state of the cluster.
	State *string `pulumi:"state"`
	// The storage type to use. One of `"SSD"` or
	// `"HDD"`. Defaults to `"SSD"`.
	StorageType *string `pulumi:"storageType"`
	// The zone to create the Cloud Bigtable cluster in. If it not
	// specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
	// Bigtable instances are noted on the [Cloud Bigtable locations page](https://cloud.google.com/bigtable/docs/locations).
	Zone *string `pulumi:"zone"`
}

// InstanceClusterInput is an input type that accepts InstanceClusterArgs and InstanceClusterOutput values.
// You can construct a concrete instance of `InstanceClusterInput` via:
//
//	InstanceClusterArgs{...}
type InstanceClusterInput interface {
	pulumi.Input

	ToInstanceClusterOutput() InstanceClusterOutput
	ToInstanceClusterOutputWithContext(context.Context) InstanceClusterOutput
}

type InstanceClusterArgs struct {
	// [Autoscaling](https://cloud.google.com/bigtable/docs/autoscaling#parameters) config for the cluster, contains the following arguments:
	AutoscalingConfig InstanceClusterAutoscalingConfigPtrInput `pulumi:"autoscalingConfig"`
	// The ID of the Cloud Bigtable cluster. Must be 6-30 characters and must only contain hyphens, lowercase letters and numbers.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
	// The node scaling factor for this cluster. One of `"NodeScalingFactor1X"` or `"NodeScalingFactor2X"`. Defaults to `"NodeScalingFactor1X"`. If `"NodeScalingFactor2X"` is specified, then `numNodes`, `minNodes`, and `maxNodes` would need to be specified in increments of 2. This value cannot be updated after the cluster is created.
	//
	// > **Note**: Removing the field entirely from the config will cause the provider to default to the backend value.
	//
	// !> **Warning**: Modifying this field will cause the provider to delete/recreate the entire resource.
	//
	// !> **Warning:** Modifying the `storageType`, `zone` or `kmsKeyName` of an existing cluster (by
	// `clusterId`) will cause the provider to delete/recreate the entire
	// `bigtable.Instance` resource. If these values are changing, use a new
	// `clusterId`.
	NodeScalingFactor pulumi.StringPtrInput `pulumi:"nodeScalingFactor"`
	// The number of nodes in the cluster.
	// If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
	NumNodes pulumi.IntPtrInput `pulumi:"numNodes"`
	// describes the current state of the cluster.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The storage type to use. One of `"SSD"` or
	// `"HDD"`. Defaults to `"SSD"`.
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	// The zone to create the Cloud Bigtable cluster in. If it not
	// specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
	// Bigtable instances are noted on the [Cloud Bigtable locations page](https://cloud.google.com/bigtable/docs/locations).
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCluster)(nil)).Elem()
}

func (i InstanceClusterArgs) ToInstanceClusterOutput() InstanceClusterOutput {
	return i.ToInstanceClusterOutputWithContext(context.Background())
}

func (i InstanceClusterArgs) ToInstanceClusterOutputWithContext(ctx context.Context) InstanceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterOutput)
}

// InstanceClusterArrayInput is an input type that accepts InstanceClusterArray and InstanceClusterArrayOutput values.
// You can construct a concrete instance of `InstanceClusterArrayInput` via:
//
//	InstanceClusterArray{ InstanceClusterArgs{...} }
type InstanceClusterArrayInput interface {
	pulumi.Input

	ToInstanceClusterArrayOutput() InstanceClusterArrayOutput
	ToInstanceClusterArrayOutputWithContext(context.Context) InstanceClusterArrayOutput
}

type InstanceClusterArray []InstanceClusterInput

func (InstanceClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceCluster)(nil)).Elem()
}

func (i InstanceClusterArray) ToInstanceClusterArrayOutput() InstanceClusterArrayOutput {
	return i.ToInstanceClusterArrayOutputWithContext(context.Background())
}

func (i InstanceClusterArray) ToInstanceClusterArrayOutputWithContext(ctx context.Context) InstanceClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterArrayOutput)
}

type InstanceClusterOutput struct{ *pulumi.OutputState }

func (InstanceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCluster)(nil)).Elem()
}

func (o InstanceClusterOutput) ToInstanceClusterOutput() InstanceClusterOutput {
	return o
}

func (o InstanceClusterOutput) ToInstanceClusterOutputWithContext(ctx context.Context) InstanceClusterOutput {
	return o
}

// [Autoscaling](https://cloud.google.com/bigtable/docs/autoscaling#parameters) config for the cluster, contains the following arguments:
func (o InstanceClusterOutput) AutoscalingConfig() InstanceClusterAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *InstanceClusterAutoscalingConfig { return v.AutoscalingConfig }).(InstanceClusterAutoscalingConfigPtrOutput)
}

// The ID of the Cloud Bigtable cluster. Must be 6-30 characters and must only contain hyphens, lowercase letters and numbers.
func (o InstanceClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceCluster) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster.
func (o InstanceClusterOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// The node scaling factor for this cluster. One of `"NodeScalingFactor1X"` or `"NodeScalingFactor2X"`. Defaults to `"NodeScalingFactor1X"`. If `"NodeScalingFactor2X"` is specified, then `numNodes`, `minNodes`, and `maxNodes` would need to be specified in increments of 2. This value cannot be updated after the cluster is created.
//
// > **Note**: Removing the field entirely from the config will cause the provider to default to the backend value.
//
// !> **Warning**: Modifying this field will cause the provider to delete/recreate the entire resource.
//
// !> **Warning:** Modifying the `storageType`, `zone` or `kmsKeyName` of an existing cluster (by
// `clusterId`) will cause the provider to delete/recreate the entire
// `bigtable.Instance` resource. If these values are changing, use a new
// `clusterId`.
func (o InstanceClusterOutput) NodeScalingFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *string { return v.NodeScalingFactor }).(pulumi.StringPtrOutput)
}

// The number of nodes in the cluster.
// If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
func (o InstanceClusterOutput) NumNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *int { return v.NumNodes }).(pulumi.IntPtrOutput)
}

// describes the current state of the cluster.
func (o InstanceClusterOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The storage type to use. One of `"SSD"` or
// `"HDD"`. Defaults to `"SSD"`.
func (o InstanceClusterOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// The zone to create the Cloud Bigtable cluster in. If it not
// specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
// Bigtable instances are noted on the [Cloud Bigtable locations page](https://cloud.google.com/bigtable/docs/locations).
func (o InstanceClusterOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCluster) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceClusterArrayOutput struct{ *pulumi.OutputState }

func (InstanceClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceCluster)(nil)).Elem()
}

func (o InstanceClusterArrayOutput) ToInstanceClusterArrayOutput() InstanceClusterArrayOutput {
	return o
}

func (o InstanceClusterArrayOutput) ToInstanceClusterArrayOutputWithContext(ctx context.Context) InstanceClusterArrayOutput {
	return o
}

func (o InstanceClusterArrayOutput) Index(i pulumi.IntInput) InstanceClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceCluster {
		return vs[0].([]InstanceCluster)[vs[1].(int)]
	}).(InstanceClusterOutput)
}

type InstanceClusterAutoscalingConfig struct {
	// The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
	CpuTarget int `pulumi:"cpuTarget"`
	// The maximum number of nodes for autoscaling.
	MaxNodes int `pulumi:"maxNodes"`
	// The minimum number of nodes for autoscaling.
	MinNodes int `pulumi:"minNodes"`
	// The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
	//
	// !> **Warning**: Only one of `autoscalingConfig` or `numNodes` should be set for a cluster. If both are set, `numNodes` is ignored. If none is set, autoscaling will be disabled and sized to the current node count.
	StorageTarget *int `pulumi:"storageTarget"`
}

// InstanceClusterAutoscalingConfigInput is an input type that accepts InstanceClusterAutoscalingConfigArgs and InstanceClusterAutoscalingConfigOutput values.
// You can construct a concrete instance of `InstanceClusterAutoscalingConfigInput` via:
//
//	InstanceClusterAutoscalingConfigArgs{...}
type InstanceClusterAutoscalingConfigInput interface {
	pulumi.Input

	ToInstanceClusterAutoscalingConfigOutput() InstanceClusterAutoscalingConfigOutput
	ToInstanceClusterAutoscalingConfigOutputWithContext(context.Context) InstanceClusterAutoscalingConfigOutput
}

type InstanceClusterAutoscalingConfigArgs struct {
	// The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
	CpuTarget pulumi.IntInput `pulumi:"cpuTarget"`
	// The maximum number of nodes for autoscaling.
	MaxNodes pulumi.IntInput `pulumi:"maxNodes"`
	// The minimum number of nodes for autoscaling.
	MinNodes pulumi.IntInput `pulumi:"minNodes"`
	// The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
	//
	// !> **Warning**: Only one of `autoscalingConfig` or `numNodes` should be set for a cluster. If both are set, `numNodes` is ignored. If none is set, autoscaling will be disabled and sized to the current node count.
	StorageTarget pulumi.IntPtrInput `pulumi:"storageTarget"`
}

func (InstanceClusterAutoscalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceClusterAutoscalingConfig)(nil)).Elem()
}

func (i InstanceClusterAutoscalingConfigArgs) ToInstanceClusterAutoscalingConfigOutput() InstanceClusterAutoscalingConfigOutput {
	return i.ToInstanceClusterAutoscalingConfigOutputWithContext(context.Background())
}

func (i InstanceClusterAutoscalingConfigArgs) ToInstanceClusterAutoscalingConfigOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterAutoscalingConfigOutput)
}

func (i InstanceClusterAutoscalingConfigArgs) ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput {
	return i.ToInstanceClusterAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i InstanceClusterAutoscalingConfigArgs) ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterAutoscalingConfigOutput).ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx)
}

// InstanceClusterAutoscalingConfigPtrInput is an input type that accepts InstanceClusterAutoscalingConfigArgs, InstanceClusterAutoscalingConfigPtr and InstanceClusterAutoscalingConfigPtrOutput values.
// You can construct a concrete instance of `InstanceClusterAutoscalingConfigPtrInput` via:
//
//	        InstanceClusterAutoscalingConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceClusterAutoscalingConfigPtrInput interface {
	pulumi.Input

	ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput
	ToInstanceClusterAutoscalingConfigPtrOutputWithContext(context.Context) InstanceClusterAutoscalingConfigPtrOutput
}

type instanceClusterAutoscalingConfigPtrType InstanceClusterAutoscalingConfigArgs

func InstanceClusterAutoscalingConfigPtr(v *InstanceClusterAutoscalingConfigArgs) InstanceClusterAutoscalingConfigPtrInput {
	return (*instanceClusterAutoscalingConfigPtrType)(v)
}

func (*instanceClusterAutoscalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceClusterAutoscalingConfig)(nil)).Elem()
}

func (i *instanceClusterAutoscalingConfigPtrType) ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput {
	return i.ToInstanceClusterAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i *instanceClusterAutoscalingConfigPtrType) ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterAutoscalingConfigPtrOutput)
}

type InstanceClusterAutoscalingConfigOutput struct{ *pulumi.OutputState }

func (InstanceClusterAutoscalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceClusterAutoscalingConfig)(nil)).Elem()
}

func (o InstanceClusterAutoscalingConfigOutput) ToInstanceClusterAutoscalingConfigOutput() InstanceClusterAutoscalingConfigOutput {
	return o
}

func (o InstanceClusterAutoscalingConfigOutput) ToInstanceClusterAutoscalingConfigOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigOutput {
	return o
}

func (o InstanceClusterAutoscalingConfigOutput) ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput {
	return o.ToInstanceClusterAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (o InstanceClusterAutoscalingConfigOutput) ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceClusterAutoscalingConfig) *InstanceClusterAutoscalingConfig {
		return &v
	}).(InstanceClusterAutoscalingConfigPtrOutput)
}

// The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
func (o InstanceClusterAutoscalingConfigOutput) CpuTarget() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceClusterAutoscalingConfig) int { return v.CpuTarget }).(pulumi.IntOutput)
}

// The maximum number of nodes for autoscaling.
func (o InstanceClusterAutoscalingConfigOutput) MaxNodes() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceClusterAutoscalingConfig) int { return v.MaxNodes }).(pulumi.IntOutput)
}

// The minimum number of nodes for autoscaling.
func (o InstanceClusterAutoscalingConfigOutput) MinNodes() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceClusterAutoscalingConfig) int { return v.MinNodes }).(pulumi.IntOutput)
}

// The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
//
// !> **Warning**: Only one of `autoscalingConfig` or `numNodes` should be set for a cluster. If both are set, `numNodes` is ignored. If none is set, autoscaling will be disabled and sized to the current node count.
func (o InstanceClusterAutoscalingConfigOutput) StorageTarget() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceClusterAutoscalingConfig) *int { return v.StorageTarget }).(pulumi.IntPtrOutput)
}

type InstanceClusterAutoscalingConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceClusterAutoscalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceClusterAutoscalingConfig)(nil)).Elem()
}

func (o InstanceClusterAutoscalingConfigPtrOutput) ToInstanceClusterAutoscalingConfigPtrOutput() InstanceClusterAutoscalingConfigPtrOutput {
	return o
}

func (o InstanceClusterAutoscalingConfigPtrOutput) ToInstanceClusterAutoscalingConfigPtrOutputWithContext(ctx context.Context) InstanceClusterAutoscalingConfigPtrOutput {
	return o
}

func (o InstanceClusterAutoscalingConfigPtrOutput) Elem() InstanceClusterAutoscalingConfigOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) InstanceClusterAutoscalingConfig {
		if v != nil {
			return *v
		}
		var ret InstanceClusterAutoscalingConfig
		return ret
	}).(InstanceClusterAutoscalingConfigOutput)
}

// The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
func (o InstanceClusterAutoscalingConfigPtrOutput) CpuTarget() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.CpuTarget
	}).(pulumi.IntPtrOutput)
}

// The maximum number of nodes for autoscaling.
func (o InstanceClusterAutoscalingConfigPtrOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodes
	}).(pulumi.IntPtrOutput)
}

// The minimum number of nodes for autoscaling.
func (o InstanceClusterAutoscalingConfigPtrOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodes
	}).(pulumi.IntPtrOutput)
}

// The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
//
// !> **Warning**: Only one of `autoscalingConfig` or `numNodes` should be set for a cluster. If both are set, `numNodes` is ignored. If none is set, autoscaling will be disabled and sized to the current node count.
func (o InstanceClusterAutoscalingConfigPtrOutput) StorageTarget() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceClusterAutoscalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.StorageTarget
	}).(pulumi.IntPtrOutput)
}

type InstanceIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// For `bigtable.InstanceIamPolicy` only:
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// InstanceIamBindingConditionInput is an input type that accepts InstanceIamBindingConditionArgs and InstanceIamBindingConditionOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionInput` via:
//
//	InstanceIamBindingConditionArgs{...}
type InstanceIamBindingConditionInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput
	ToInstanceIamBindingConditionOutputWithContext(context.Context) InstanceIamBindingConditionOutput
}

type InstanceIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// For `bigtable.InstanceIamPolicy` only:
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (InstanceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return i.ToInstanceIamBindingConditionOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput)
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput).ToInstanceIamBindingConditionPtrOutputWithContext(ctx)
}

// InstanceIamBindingConditionPtrInput is an input type that accepts InstanceIamBindingConditionArgs, InstanceIamBindingConditionPtr and InstanceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionPtrInput` via:
//
//	        InstanceIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput
	ToInstanceIamBindingConditionPtrOutputWithContext(context.Context) InstanceIamBindingConditionPtrOutput
}

type instanceIamBindingConditionPtrType InstanceIamBindingConditionArgs

func InstanceIamBindingConditionPtr(v *InstanceIamBindingConditionArgs) InstanceIamBindingConditionPtrInput {
	return (*instanceIamBindingConditionPtrType)(v)
}

func (*instanceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionPtrOutput)
}

type InstanceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamBindingCondition) *InstanceIamBindingCondition {
		return &v
	}).(InstanceIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// For `bigtable.InstanceIamPolicy` only:
func (o InstanceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o InstanceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o InstanceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) Elem() InstanceIamBindingConditionOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) InstanceIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamBindingCondition
		return ret
	}).(InstanceIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// For `bigtable.InstanceIamPolicy` only:
func (o InstanceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o InstanceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o InstanceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type InstanceIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// For `bigtable.InstanceIamPolicy` only:
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// InstanceIamMemberConditionInput is an input type that accepts InstanceIamMemberConditionArgs and InstanceIamMemberConditionOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionInput` via:
//
//	InstanceIamMemberConditionArgs{...}
type InstanceIamMemberConditionInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput
	ToInstanceIamMemberConditionOutputWithContext(context.Context) InstanceIamMemberConditionOutput
}

type InstanceIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	//
	// For `bigtable.InstanceIamPolicy` only:
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (InstanceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return i.ToInstanceIamMemberConditionOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput)
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput).ToInstanceIamMemberConditionPtrOutputWithContext(ctx)
}

// InstanceIamMemberConditionPtrInput is an input type that accepts InstanceIamMemberConditionArgs, InstanceIamMemberConditionPtr and InstanceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionPtrInput` via:
//
//	        InstanceIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput
	ToInstanceIamMemberConditionPtrOutputWithContext(context.Context) InstanceIamMemberConditionPtrOutput
}

type instanceIamMemberConditionPtrType InstanceIamMemberConditionArgs

func InstanceIamMemberConditionPtr(v *InstanceIamMemberConditionArgs) InstanceIamMemberConditionPtrInput {
	return (*instanceIamMemberConditionPtrType)(v)
}

func (*instanceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionPtrOutput)
}

type InstanceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamMemberCondition) *InstanceIamMemberCondition {
		return &v
	}).(InstanceIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// For `bigtable.InstanceIamPolicy` only:
func (o InstanceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o InstanceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o InstanceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) Elem() InstanceIamMemberConditionOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) InstanceIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamMemberCondition
		return ret
	}).(InstanceIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
//
// For `bigtable.InstanceIamPolicy` only:
func (o InstanceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o InstanceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o InstanceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type SchemaBundleProtoSchema struct {
	// Base64 encoded content of the file.
	ProtoDescriptors string `pulumi:"protoDescriptors"`
}

// SchemaBundleProtoSchemaInput is an input type that accepts SchemaBundleProtoSchemaArgs and SchemaBundleProtoSchemaOutput values.
// You can construct a concrete instance of `SchemaBundleProtoSchemaInput` via:
//
//	SchemaBundleProtoSchemaArgs{...}
type SchemaBundleProtoSchemaInput interface {
	pulumi.Input

	ToSchemaBundleProtoSchemaOutput() SchemaBundleProtoSchemaOutput
	ToSchemaBundleProtoSchemaOutputWithContext(context.Context) SchemaBundleProtoSchemaOutput
}

type SchemaBundleProtoSchemaArgs struct {
	// Base64 encoded content of the file.
	ProtoDescriptors pulumi.StringInput `pulumi:"protoDescriptors"`
}

func (SchemaBundleProtoSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaBundleProtoSchema)(nil)).Elem()
}

func (i SchemaBundleProtoSchemaArgs) ToSchemaBundleProtoSchemaOutput() SchemaBundleProtoSchemaOutput {
	return i.ToSchemaBundleProtoSchemaOutputWithContext(context.Background())
}

func (i SchemaBundleProtoSchemaArgs) ToSchemaBundleProtoSchemaOutputWithContext(ctx context.Context) SchemaBundleProtoSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaBundleProtoSchemaOutput)
}

func (i SchemaBundleProtoSchemaArgs) ToSchemaBundleProtoSchemaPtrOutput() SchemaBundleProtoSchemaPtrOutput {
	return i.ToSchemaBundleProtoSchemaPtrOutputWithContext(context.Background())
}

func (i SchemaBundleProtoSchemaArgs) ToSchemaBundleProtoSchemaPtrOutputWithContext(ctx context.Context) SchemaBundleProtoSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaBundleProtoSchemaOutput).ToSchemaBundleProtoSchemaPtrOutputWithContext(ctx)
}

// SchemaBundleProtoSchemaPtrInput is an input type that accepts SchemaBundleProtoSchemaArgs, SchemaBundleProtoSchemaPtr and SchemaBundleProtoSchemaPtrOutput values.
// You can construct a concrete instance of `SchemaBundleProtoSchemaPtrInput` via:
//
//	        SchemaBundleProtoSchemaArgs{...}
//
//	or:
//
//	        nil
type SchemaBundleProtoSchemaPtrInput interface {
	pulumi.Input

	ToSchemaBundleProtoSchemaPtrOutput() SchemaBundleProtoSchemaPtrOutput
	ToSchemaBundleProtoSchemaPtrOutputWithContext(context.Context) SchemaBundleProtoSchemaPtrOutput
}

type schemaBundleProtoSchemaPtrType SchemaBundleProtoSchemaArgs

func SchemaBundleProtoSchemaPtr(v *SchemaBundleProtoSchemaArgs) SchemaBundleProtoSchemaPtrInput {
	return (*schemaBundleProtoSchemaPtrType)(v)
}

func (*schemaBundleProtoSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaBundleProtoSchema)(nil)).Elem()
}

func (i *schemaBundleProtoSchemaPtrType) ToSchemaBundleProtoSchemaPtrOutput() SchemaBundleProtoSchemaPtrOutput {
	return i.ToSchemaBundleProtoSchemaPtrOutputWithContext(context.Background())
}

func (i *schemaBundleProtoSchemaPtrType) ToSchemaBundleProtoSchemaPtrOutputWithContext(ctx context.Context) SchemaBundleProtoSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaBundleProtoSchemaPtrOutput)
}

type SchemaBundleProtoSchemaOutput struct{ *pulumi.OutputState }

func (SchemaBundleProtoSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaBundleProtoSchema)(nil)).Elem()
}

func (o SchemaBundleProtoSchemaOutput) ToSchemaBundleProtoSchemaOutput() SchemaBundleProtoSchemaOutput {
	return o
}

func (o SchemaBundleProtoSchemaOutput) ToSchemaBundleProtoSchemaOutputWithContext(ctx context.Context) SchemaBundleProtoSchemaOutput {
	return o
}

func (o SchemaBundleProtoSchemaOutput) ToSchemaBundleProtoSchemaPtrOutput() SchemaBundleProtoSchemaPtrOutput {
	return o.ToSchemaBundleProtoSchemaPtrOutputWithContext(context.Background())
}

func (o SchemaBundleProtoSchemaOutput) ToSchemaBundleProtoSchemaPtrOutputWithContext(ctx context.Context) SchemaBundleProtoSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaBundleProtoSchema) *SchemaBundleProtoSchema {
		return &v
	}).(SchemaBundleProtoSchemaPtrOutput)
}

// Base64 encoded content of the file.
func (o SchemaBundleProtoSchemaOutput) ProtoDescriptors() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaBundleProtoSchema) string { return v.ProtoDescriptors }).(pulumi.StringOutput)
}

type SchemaBundleProtoSchemaPtrOutput struct{ *pulumi.OutputState }

func (SchemaBundleProtoSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaBundleProtoSchema)(nil)).Elem()
}

func (o SchemaBundleProtoSchemaPtrOutput) ToSchemaBundleProtoSchemaPtrOutput() SchemaBundleProtoSchemaPtrOutput {
	return o
}

func (o SchemaBundleProtoSchemaPtrOutput) ToSchemaBundleProtoSchemaPtrOutputWithContext(ctx context.Context) SchemaBundleProtoSchemaPtrOutput {
	return o
}

func (o SchemaBundleProtoSchemaPtrOutput) Elem() SchemaBundleProtoSchemaOutput {
	return o.ApplyT(func(v *SchemaBundleProtoSchema) SchemaBundleProtoSchema {
		if v != nil {
			return *v
		}
		var ret SchemaBundleProtoSchema
		return ret
	}).(SchemaBundleProtoSchemaOutput)
}

// Base64 encoded content of the file.
func (o SchemaBundleProtoSchemaPtrOutput) ProtoDescriptors() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaBundleProtoSchema) *string {
		if v == nil {
			return nil
		}
		return &v.ProtoDescriptors
	}).(pulumi.StringPtrOutput)
}

type TableAutomatedBackupPolicy struct {
	// How frequently automated backups should occur.
	Frequency *string `pulumi:"frequency"`
	// How long the automated backups should be retained.
	RetentionPeriod *string `pulumi:"retentionPeriod"`
}

// TableAutomatedBackupPolicyInput is an input type that accepts TableAutomatedBackupPolicyArgs and TableAutomatedBackupPolicyOutput values.
// You can construct a concrete instance of `TableAutomatedBackupPolicyInput` via:
//
//	TableAutomatedBackupPolicyArgs{...}
type TableAutomatedBackupPolicyInput interface {
	pulumi.Input

	ToTableAutomatedBackupPolicyOutput() TableAutomatedBackupPolicyOutput
	ToTableAutomatedBackupPolicyOutputWithContext(context.Context) TableAutomatedBackupPolicyOutput
}

type TableAutomatedBackupPolicyArgs struct {
	// How frequently automated backups should occur.
	Frequency pulumi.StringPtrInput `pulumi:"frequency"`
	// How long the automated backups should be retained.
	RetentionPeriod pulumi.StringPtrInput `pulumi:"retentionPeriod"`
}

func (TableAutomatedBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAutomatedBackupPolicy)(nil)).Elem()
}

func (i TableAutomatedBackupPolicyArgs) ToTableAutomatedBackupPolicyOutput() TableAutomatedBackupPolicyOutput {
	return i.ToTableAutomatedBackupPolicyOutputWithContext(context.Background())
}

func (i TableAutomatedBackupPolicyArgs) ToTableAutomatedBackupPolicyOutputWithContext(ctx context.Context) TableAutomatedBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAutomatedBackupPolicyOutput)
}

func (i TableAutomatedBackupPolicyArgs) ToTableAutomatedBackupPolicyPtrOutput() TableAutomatedBackupPolicyPtrOutput {
	return i.ToTableAutomatedBackupPolicyPtrOutputWithContext(context.Background())
}

func (i TableAutomatedBackupPolicyArgs) ToTableAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) TableAutomatedBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAutomatedBackupPolicyOutput).ToTableAutomatedBackupPolicyPtrOutputWithContext(ctx)
}

// TableAutomatedBackupPolicyPtrInput is an input type that accepts TableAutomatedBackupPolicyArgs, TableAutomatedBackupPolicyPtr and TableAutomatedBackupPolicyPtrOutput values.
// You can construct a concrete instance of `TableAutomatedBackupPolicyPtrInput` via:
//
//	        TableAutomatedBackupPolicyArgs{...}
//
//	or:
//
//	        nil
type TableAutomatedBackupPolicyPtrInput interface {
	pulumi.Input

	ToTableAutomatedBackupPolicyPtrOutput() TableAutomatedBackupPolicyPtrOutput
	ToTableAutomatedBackupPolicyPtrOutputWithContext(context.Context) TableAutomatedBackupPolicyPtrOutput
}

type tableAutomatedBackupPolicyPtrType TableAutomatedBackupPolicyArgs

func TableAutomatedBackupPolicyPtr(v *TableAutomatedBackupPolicyArgs) TableAutomatedBackupPolicyPtrInput {
	return (*tableAutomatedBackupPolicyPtrType)(v)
}

func (*tableAutomatedBackupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableAutomatedBackupPolicy)(nil)).Elem()
}

func (i *tableAutomatedBackupPolicyPtrType) ToTableAutomatedBackupPolicyPtrOutput() TableAutomatedBackupPolicyPtrOutput {
	return i.ToTableAutomatedBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *tableAutomatedBackupPolicyPtrType) ToTableAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) TableAutomatedBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAutomatedBackupPolicyPtrOutput)
}

type TableAutomatedBackupPolicyOutput struct{ *pulumi.OutputState }

func (TableAutomatedBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAutomatedBackupPolicy)(nil)).Elem()
}

func (o TableAutomatedBackupPolicyOutput) ToTableAutomatedBackupPolicyOutput() TableAutomatedBackupPolicyOutput {
	return o
}

func (o TableAutomatedBackupPolicyOutput) ToTableAutomatedBackupPolicyOutputWithContext(ctx context.Context) TableAutomatedBackupPolicyOutput {
	return o
}

func (o TableAutomatedBackupPolicyOutput) ToTableAutomatedBackupPolicyPtrOutput() TableAutomatedBackupPolicyPtrOutput {
	return o.ToTableAutomatedBackupPolicyPtrOutputWithContext(context.Background())
}

func (o TableAutomatedBackupPolicyOutput) ToTableAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) TableAutomatedBackupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableAutomatedBackupPolicy) *TableAutomatedBackupPolicy {
		return &v
	}).(TableAutomatedBackupPolicyPtrOutput)
}

// How frequently automated backups should occur.
func (o TableAutomatedBackupPolicyOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableAutomatedBackupPolicy) *string { return v.Frequency }).(pulumi.StringPtrOutput)
}

// How long the automated backups should be retained.
func (o TableAutomatedBackupPolicyOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableAutomatedBackupPolicy) *string { return v.RetentionPeriod }).(pulumi.StringPtrOutput)
}

type TableAutomatedBackupPolicyPtrOutput struct{ *pulumi.OutputState }

func (TableAutomatedBackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableAutomatedBackupPolicy)(nil)).Elem()
}

func (o TableAutomatedBackupPolicyPtrOutput) ToTableAutomatedBackupPolicyPtrOutput() TableAutomatedBackupPolicyPtrOutput {
	return o
}

func (o TableAutomatedBackupPolicyPtrOutput) ToTableAutomatedBackupPolicyPtrOutputWithContext(ctx context.Context) TableAutomatedBackupPolicyPtrOutput {
	return o
}

func (o TableAutomatedBackupPolicyPtrOutput) Elem() TableAutomatedBackupPolicyOutput {
	return o.ApplyT(func(v *TableAutomatedBackupPolicy) TableAutomatedBackupPolicy {
		if v != nil {
			return *v
		}
		var ret TableAutomatedBackupPolicy
		return ret
	}).(TableAutomatedBackupPolicyOutput)
}

// How frequently automated backups should occur.
func (o TableAutomatedBackupPolicyPtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableAutomatedBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Frequency
	}).(pulumi.StringPtrOutput)
}

// How long the automated backups should be retained.
func (o TableAutomatedBackupPolicyPtrOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableAutomatedBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RetentionPeriod
	}).(pulumi.StringPtrOutput)
}

type TableColumnFamily struct {
	// The name of the column family.
	Family string `pulumi:"family"`
	// The type of the column family.
	Type *string `pulumi:"type"`
}

// TableColumnFamilyInput is an input type that accepts TableColumnFamilyArgs and TableColumnFamilyOutput values.
// You can construct a concrete instance of `TableColumnFamilyInput` via:
//
//	TableColumnFamilyArgs{...}
type TableColumnFamilyInput interface {
	pulumi.Input

	ToTableColumnFamilyOutput() TableColumnFamilyOutput
	ToTableColumnFamilyOutputWithContext(context.Context) TableColumnFamilyOutput
}

type TableColumnFamilyArgs struct {
	// The name of the column family.
	Family pulumi.StringInput `pulumi:"family"`
	// The type of the column family.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TableColumnFamilyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableColumnFamily)(nil)).Elem()
}

func (i TableColumnFamilyArgs) ToTableColumnFamilyOutput() TableColumnFamilyOutput {
	return i.ToTableColumnFamilyOutputWithContext(context.Background())
}

func (i TableColumnFamilyArgs) ToTableColumnFamilyOutputWithContext(ctx context.Context) TableColumnFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableColumnFamilyOutput)
}

// TableColumnFamilyArrayInput is an input type that accepts TableColumnFamilyArray and TableColumnFamilyArrayOutput values.
// You can construct a concrete instance of `TableColumnFamilyArrayInput` via:
//
//	TableColumnFamilyArray{ TableColumnFamilyArgs{...} }
type TableColumnFamilyArrayInput interface {
	pulumi.Input

	ToTableColumnFamilyArrayOutput() TableColumnFamilyArrayOutput
	ToTableColumnFamilyArrayOutputWithContext(context.Context) TableColumnFamilyArrayOutput
}

type TableColumnFamilyArray []TableColumnFamilyInput

func (TableColumnFamilyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableColumnFamily)(nil)).Elem()
}

func (i TableColumnFamilyArray) ToTableColumnFamilyArrayOutput() TableColumnFamilyArrayOutput {
	return i.ToTableColumnFamilyArrayOutputWithContext(context.Background())
}

func (i TableColumnFamilyArray) ToTableColumnFamilyArrayOutputWithContext(ctx context.Context) TableColumnFamilyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableColumnFamilyArrayOutput)
}

type TableColumnFamilyOutput struct{ *pulumi.OutputState }

func (TableColumnFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableColumnFamily)(nil)).Elem()
}

func (o TableColumnFamilyOutput) ToTableColumnFamilyOutput() TableColumnFamilyOutput {
	return o
}

func (o TableColumnFamilyOutput) ToTableColumnFamilyOutputWithContext(ctx context.Context) TableColumnFamilyOutput {
	return o
}

// The name of the column family.
func (o TableColumnFamilyOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v TableColumnFamily) string { return v.Family }).(pulumi.StringOutput)
}

// The type of the column family.
func (o TableColumnFamilyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableColumnFamily) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TableColumnFamilyArrayOutput struct{ *pulumi.OutputState }

func (TableColumnFamilyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableColumnFamily)(nil)).Elem()
}

func (o TableColumnFamilyArrayOutput) ToTableColumnFamilyArrayOutput() TableColumnFamilyArrayOutput {
	return o
}

func (o TableColumnFamilyArrayOutput) ToTableColumnFamilyArrayOutputWithContext(ctx context.Context) TableColumnFamilyArrayOutput {
	return o
}

func (o TableColumnFamilyArrayOutput) Index(i pulumi.IntInput) TableColumnFamilyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TableColumnFamily {
		return vs[0].([]TableColumnFamily)[vs[1].(int)]
	}).(TableColumnFamilyOutput)
}

type TableIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// TableIamBindingConditionInput is an input type that accepts TableIamBindingConditionArgs and TableIamBindingConditionOutput values.
// You can construct a concrete instance of `TableIamBindingConditionInput` via:
//
//	TableIamBindingConditionArgs{...}
type TableIamBindingConditionInput interface {
	pulumi.Input

	ToTableIamBindingConditionOutput() TableIamBindingConditionOutput
	ToTableIamBindingConditionOutputWithContext(context.Context) TableIamBindingConditionOutput
}

type TableIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TableIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIamBindingCondition)(nil)).Elem()
}

func (i TableIamBindingConditionArgs) ToTableIamBindingConditionOutput() TableIamBindingConditionOutput {
	return i.ToTableIamBindingConditionOutputWithContext(context.Background())
}

func (i TableIamBindingConditionArgs) ToTableIamBindingConditionOutputWithContext(ctx context.Context) TableIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamBindingConditionOutput)
}

func (i TableIamBindingConditionArgs) ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput {
	return i.ToTableIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i TableIamBindingConditionArgs) ToTableIamBindingConditionPtrOutputWithContext(ctx context.Context) TableIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamBindingConditionOutput).ToTableIamBindingConditionPtrOutputWithContext(ctx)
}

// TableIamBindingConditionPtrInput is an input type that accepts TableIamBindingConditionArgs, TableIamBindingConditionPtr and TableIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `TableIamBindingConditionPtrInput` via:
//
//	        TableIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type TableIamBindingConditionPtrInput interface {
	pulumi.Input

	ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput
	ToTableIamBindingConditionPtrOutputWithContext(context.Context) TableIamBindingConditionPtrOutput
}

type tableIamBindingConditionPtrType TableIamBindingConditionArgs

func TableIamBindingConditionPtr(v *TableIamBindingConditionArgs) TableIamBindingConditionPtrInput {
	return (*tableIamBindingConditionPtrType)(v)
}

func (*tableIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIamBindingCondition)(nil)).Elem()
}

func (i *tableIamBindingConditionPtrType) ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput {
	return i.ToTableIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *tableIamBindingConditionPtrType) ToTableIamBindingConditionPtrOutputWithContext(ctx context.Context) TableIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamBindingConditionPtrOutput)
}

type TableIamBindingConditionOutput struct{ *pulumi.OutputState }

func (TableIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIamBindingCondition)(nil)).Elem()
}

func (o TableIamBindingConditionOutput) ToTableIamBindingConditionOutput() TableIamBindingConditionOutput {
	return o
}

func (o TableIamBindingConditionOutput) ToTableIamBindingConditionOutputWithContext(ctx context.Context) TableIamBindingConditionOutput {
	return o
}

func (o TableIamBindingConditionOutput) ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput {
	return o.ToTableIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o TableIamBindingConditionOutput) ToTableIamBindingConditionPtrOutputWithContext(ctx context.Context) TableIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableIamBindingCondition) *TableIamBindingCondition {
		return &v
	}).(TableIamBindingConditionPtrOutput)
}

func (o TableIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TableIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TableIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TableIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TableIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TableIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (TableIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIamBindingCondition)(nil)).Elem()
}

func (o TableIamBindingConditionPtrOutput) ToTableIamBindingConditionPtrOutput() TableIamBindingConditionPtrOutput {
	return o
}

func (o TableIamBindingConditionPtrOutput) ToTableIamBindingConditionPtrOutputWithContext(ctx context.Context) TableIamBindingConditionPtrOutput {
	return o
}

func (o TableIamBindingConditionPtrOutput) Elem() TableIamBindingConditionOutput {
	return o.ApplyT(func(v *TableIamBindingCondition) TableIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret TableIamBindingCondition
		return ret
	}).(TableIamBindingConditionOutput)
}

func (o TableIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TableIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TableIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TableIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// TableIamMemberConditionInput is an input type that accepts TableIamMemberConditionArgs and TableIamMemberConditionOutput values.
// You can construct a concrete instance of `TableIamMemberConditionInput` via:
//
//	TableIamMemberConditionArgs{...}
type TableIamMemberConditionInput interface {
	pulumi.Input

	ToTableIamMemberConditionOutput() TableIamMemberConditionOutput
	ToTableIamMemberConditionOutputWithContext(context.Context) TableIamMemberConditionOutput
}

type TableIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TableIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIamMemberCondition)(nil)).Elem()
}

func (i TableIamMemberConditionArgs) ToTableIamMemberConditionOutput() TableIamMemberConditionOutput {
	return i.ToTableIamMemberConditionOutputWithContext(context.Background())
}

func (i TableIamMemberConditionArgs) ToTableIamMemberConditionOutputWithContext(ctx context.Context) TableIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamMemberConditionOutput)
}

func (i TableIamMemberConditionArgs) ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput {
	return i.ToTableIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i TableIamMemberConditionArgs) ToTableIamMemberConditionPtrOutputWithContext(ctx context.Context) TableIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamMemberConditionOutput).ToTableIamMemberConditionPtrOutputWithContext(ctx)
}

// TableIamMemberConditionPtrInput is an input type that accepts TableIamMemberConditionArgs, TableIamMemberConditionPtr and TableIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `TableIamMemberConditionPtrInput` via:
//
//	        TableIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type TableIamMemberConditionPtrInput interface {
	pulumi.Input

	ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput
	ToTableIamMemberConditionPtrOutputWithContext(context.Context) TableIamMemberConditionPtrOutput
}

type tableIamMemberConditionPtrType TableIamMemberConditionArgs

func TableIamMemberConditionPtr(v *TableIamMemberConditionArgs) TableIamMemberConditionPtrInput {
	return (*tableIamMemberConditionPtrType)(v)
}

func (*tableIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIamMemberCondition)(nil)).Elem()
}

func (i *tableIamMemberConditionPtrType) ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput {
	return i.ToTableIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *tableIamMemberConditionPtrType) ToTableIamMemberConditionPtrOutputWithContext(ctx context.Context) TableIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableIamMemberConditionPtrOutput)
}

type TableIamMemberConditionOutput struct{ *pulumi.OutputState }

func (TableIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableIamMemberCondition)(nil)).Elem()
}

func (o TableIamMemberConditionOutput) ToTableIamMemberConditionOutput() TableIamMemberConditionOutput {
	return o
}

func (o TableIamMemberConditionOutput) ToTableIamMemberConditionOutputWithContext(ctx context.Context) TableIamMemberConditionOutput {
	return o
}

func (o TableIamMemberConditionOutput) ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput {
	return o.ToTableIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o TableIamMemberConditionOutput) ToTableIamMemberConditionPtrOutputWithContext(ctx context.Context) TableIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableIamMemberCondition) *TableIamMemberCondition {
		return &v
	}).(TableIamMemberConditionPtrOutput)
}

func (o TableIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TableIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TableIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TableIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TableIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TableIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (TableIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableIamMemberCondition)(nil)).Elem()
}

func (o TableIamMemberConditionPtrOutput) ToTableIamMemberConditionPtrOutput() TableIamMemberConditionPtrOutput {
	return o
}

func (o TableIamMemberConditionPtrOutput) ToTableIamMemberConditionPtrOutputWithContext(ctx context.Context) TableIamMemberConditionPtrOutput {
	return o
}

func (o TableIamMemberConditionPtrOutput) Elem() TableIamMemberConditionOutput {
	return o.ApplyT(func(v *TableIamMemberCondition) TableIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret TableIamMemberCondition
		return ret
	}).(TableIamMemberConditionOutput)
}

func (o TableIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TableIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TableIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppProfileDataBoostIsolationReadOnlyInput)(nil)).Elem(), AppProfileDataBoostIsolationReadOnlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppProfileDataBoostIsolationReadOnlyPtrInput)(nil)).Elem(), AppProfileDataBoostIsolationReadOnlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppProfileSingleClusterRoutingInput)(nil)).Elem(), AppProfileSingleClusterRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppProfileSingleClusterRoutingPtrInput)(nil)).Elem(), AppProfileSingleClusterRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppProfileStandardIsolationInput)(nil)).Elem(), AppProfileStandardIsolationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppProfileStandardIsolationPtrInput)(nil)).Elem(), AppProfileStandardIsolationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizedViewSubsetViewInput)(nil)).Elem(), AuthorizedViewSubsetViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizedViewSubsetViewPtrInput)(nil)).Elem(), AuthorizedViewSubsetViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizedViewSubsetViewFamilySubsetInput)(nil)).Elem(), AuthorizedViewSubsetViewFamilySubsetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizedViewSubsetViewFamilySubsetArrayInput)(nil)).Elem(), AuthorizedViewSubsetViewFamilySubsetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCPolicyMaxAgeInput)(nil)).Elem(), GCPolicyMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCPolicyMaxAgePtrInput)(nil)).Elem(), GCPolicyMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCPolicyMaxVersionInput)(nil)).Elem(), GCPolicyMaxVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCPolicyMaxVersionArrayInput)(nil)).Elem(), GCPolicyMaxVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceClusterInput)(nil)).Elem(), InstanceClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceClusterArrayInput)(nil)).Elem(), InstanceClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceClusterAutoscalingConfigInput)(nil)).Elem(), InstanceClusterAutoscalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceClusterAutoscalingConfigPtrInput)(nil)).Elem(), InstanceClusterAutoscalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionPtrInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionPtrInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaBundleProtoSchemaInput)(nil)).Elem(), SchemaBundleProtoSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaBundleProtoSchemaPtrInput)(nil)).Elem(), SchemaBundleProtoSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableAutomatedBackupPolicyInput)(nil)).Elem(), TableAutomatedBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableAutomatedBackupPolicyPtrInput)(nil)).Elem(), TableAutomatedBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableColumnFamilyInput)(nil)).Elem(), TableColumnFamilyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableColumnFamilyArrayInput)(nil)).Elem(), TableColumnFamilyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIamBindingConditionInput)(nil)).Elem(), TableIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIamBindingConditionPtrInput)(nil)).Elem(), TableIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIamMemberConditionInput)(nil)).Elem(), TableIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableIamMemberConditionPtrInput)(nil)).Elem(), TableIamMemberConditionArgs{})
	pulumi.RegisterOutputType(AppProfileDataBoostIsolationReadOnlyOutput{})
	pulumi.RegisterOutputType(AppProfileDataBoostIsolationReadOnlyPtrOutput{})
	pulumi.RegisterOutputType(AppProfileSingleClusterRoutingOutput{})
	pulumi.RegisterOutputType(AppProfileSingleClusterRoutingPtrOutput{})
	pulumi.RegisterOutputType(AppProfileStandardIsolationOutput{})
	pulumi.RegisterOutputType(AppProfileStandardIsolationPtrOutput{})
	pulumi.RegisterOutputType(AuthorizedViewSubsetViewOutput{})
	pulumi.RegisterOutputType(AuthorizedViewSubsetViewPtrOutput{})
	pulumi.RegisterOutputType(AuthorizedViewSubsetViewFamilySubsetOutput{})
	pulumi.RegisterOutputType(AuthorizedViewSubsetViewFamilySubsetArrayOutput{})
	pulumi.RegisterOutputType(GCPolicyMaxAgeOutput{})
	pulumi.RegisterOutputType(GCPolicyMaxAgePtrOutput{})
	pulumi.RegisterOutputType(GCPolicyMaxVersionOutput{})
	pulumi.RegisterOutputType(GCPolicyMaxVersionArrayOutput{})
	pulumi.RegisterOutputType(InstanceClusterOutput{})
	pulumi.RegisterOutputType(InstanceClusterArrayOutput{})
	pulumi.RegisterOutputType(InstanceClusterAutoscalingConfigOutput{})
	pulumi.RegisterOutputType(InstanceClusterAutoscalingConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(SchemaBundleProtoSchemaOutput{})
	pulumi.RegisterOutputType(SchemaBundleProtoSchemaPtrOutput{})
	pulumi.RegisterOutputType(TableAutomatedBackupPolicyOutput{})
	pulumi.RegisterOutputType(TableAutomatedBackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(TableColumnFamilyOutput{})
	pulumi.RegisterOutputType(TableColumnFamilyArrayOutput{})
	pulumi.RegisterOutputType(TableIamBindingConditionOutput{})
	pulumi.RegisterOutputType(TableIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(TableIamMemberConditionOutput{})
	pulumi.RegisterOutputType(TableIamMemberConditionPtrOutput{})
}
