// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataloss

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Allows creation of custom info types.
//
// To get more information about StoredInfoType, see:
//
// * [API documentation](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.storedInfoTypes)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/dlp/docs/creating-stored-infotypes)
//
// ## Example Usage
//
// ## Import
//
// # StoredInfoType can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType default {{parent}}/storedInfoTypes/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType default {{parent}}/{{name}}
//
// ```
type PreventionStoredInfoType struct {
	pulumi.CustomResourceState

	// A description of the info type.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Dictionary which defines the rule.
	// Structure is documented below.
	Dictionary PreventionStoredInfoTypeDictionaryPtrOutput `pulumi:"dictionary"`
	// User set display name of the info type.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Dictionary which defines the rule.
	// Structure is documented below.
	LargeCustomDictionary PreventionStoredInfoTypeLargeCustomDictionaryPtrOutput `pulumi:"largeCustomDictionary"`
	// Name describing the field.
	Name pulumi.StringOutput `pulumi:"name"`
	// The parent of the info type in any of the following formats:
	// * `projects/{{project}}`
	// * `projects/{{project}}/locations/{{location}}`
	// * `organizations/{{organization_id}}`
	// * `organizations/{{organization_id}}/locations/{{location}}`
	//
	// ***
	Parent pulumi.StringOutput `pulumi:"parent"`
	// Regular expression which defines the rule.
	// Structure is documented below.
	Regex PreventionStoredInfoTypeRegexPtrOutput `pulumi:"regex"`
	// The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens;
	// that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is 100
	// characters. Can be empty to allow the system to generate one.
	StoredInfoTypeId pulumi.StringOutput `pulumi:"storedInfoTypeId"`
}

// NewPreventionStoredInfoType registers a new resource with the given unique name, arguments, and options.
func NewPreventionStoredInfoType(ctx *pulumi.Context,
	name string, args *PreventionStoredInfoTypeArgs, opts ...pulumi.ResourceOption) (*PreventionStoredInfoType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PreventionStoredInfoType
	err := ctx.RegisterResource("gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPreventionStoredInfoType gets an existing PreventionStoredInfoType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPreventionStoredInfoType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PreventionStoredInfoTypeState, opts ...pulumi.ResourceOption) (*PreventionStoredInfoType, error) {
	var resource PreventionStoredInfoType
	err := ctx.ReadResource("gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PreventionStoredInfoType resources.
type preventionStoredInfoTypeState struct {
	// A description of the info type.
	Description *string `pulumi:"description"`
	// Dictionary which defines the rule.
	// Structure is documented below.
	Dictionary *PreventionStoredInfoTypeDictionary `pulumi:"dictionary"`
	// User set display name of the info type.
	DisplayName *string `pulumi:"displayName"`
	// Dictionary which defines the rule.
	// Structure is documented below.
	LargeCustomDictionary *PreventionStoredInfoTypeLargeCustomDictionary `pulumi:"largeCustomDictionary"`
	// Name describing the field.
	Name *string `pulumi:"name"`
	// The parent of the info type in any of the following formats:
	// * `projects/{{project}}`
	// * `projects/{{project}}/locations/{{location}}`
	// * `organizations/{{organization_id}}`
	// * `organizations/{{organization_id}}/locations/{{location}}`
	//
	// ***
	Parent *string `pulumi:"parent"`
	// Regular expression which defines the rule.
	// Structure is documented below.
	Regex *PreventionStoredInfoTypeRegex `pulumi:"regex"`
	// The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens;
	// that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is 100
	// characters. Can be empty to allow the system to generate one.
	StoredInfoTypeId *string `pulumi:"storedInfoTypeId"`
}

type PreventionStoredInfoTypeState struct {
	// A description of the info type.
	Description pulumi.StringPtrInput
	// Dictionary which defines the rule.
	// Structure is documented below.
	Dictionary PreventionStoredInfoTypeDictionaryPtrInput
	// User set display name of the info type.
	DisplayName pulumi.StringPtrInput
	// Dictionary which defines the rule.
	// Structure is documented below.
	LargeCustomDictionary PreventionStoredInfoTypeLargeCustomDictionaryPtrInput
	// Name describing the field.
	Name pulumi.StringPtrInput
	// The parent of the info type in any of the following formats:
	// * `projects/{{project}}`
	// * `projects/{{project}}/locations/{{location}}`
	// * `organizations/{{organization_id}}`
	// * `organizations/{{organization_id}}/locations/{{location}}`
	//
	// ***
	Parent pulumi.StringPtrInput
	// Regular expression which defines the rule.
	// Structure is documented below.
	Regex PreventionStoredInfoTypeRegexPtrInput
	// The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens;
	// that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is 100
	// characters. Can be empty to allow the system to generate one.
	StoredInfoTypeId pulumi.StringPtrInput
}

func (PreventionStoredInfoTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*preventionStoredInfoTypeState)(nil)).Elem()
}

type preventionStoredInfoTypeArgs struct {
	// A description of the info type.
	Description *string `pulumi:"description"`
	// Dictionary which defines the rule.
	// Structure is documented below.
	Dictionary *PreventionStoredInfoTypeDictionary `pulumi:"dictionary"`
	// User set display name of the info type.
	DisplayName *string `pulumi:"displayName"`
	// Dictionary which defines the rule.
	// Structure is documented below.
	LargeCustomDictionary *PreventionStoredInfoTypeLargeCustomDictionary `pulumi:"largeCustomDictionary"`
	// The parent of the info type in any of the following formats:
	// * `projects/{{project}}`
	// * `projects/{{project}}/locations/{{location}}`
	// * `organizations/{{organization_id}}`
	// * `organizations/{{organization_id}}/locations/{{location}}`
	//
	// ***
	Parent string `pulumi:"parent"`
	// Regular expression which defines the rule.
	// Structure is documented below.
	Regex *PreventionStoredInfoTypeRegex `pulumi:"regex"`
	// The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens;
	// that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is 100
	// characters. Can be empty to allow the system to generate one.
	StoredInfoTypeId *string `pulumi:"storedInfoTypeId"`
}

// The set of arguments for constructing a PreventionStoredInfoType resource.
type PreventionStoredInfoTypeArgs struct {
	// A description of the info type.
	Description pulumi.StringPtrInput
	// Dictionary which defines the rule.
	// Structure is documented below.
	Dictionary PreventionStoredInfoTypeDictionaryPtrInput
	// User set display name of the info type.
	DisplayName pulumi.StringPtrInput
	// Dictionary which defines the rule.
	// Structure is documented below.
	LargeCustomDictionary PreventionStoredInfoTypeLargeCustomDictionaryPtrInput
	// The parent of the info type in any of the following formats:
	// * `projects/{{project}}`
	// * `projects/{{project}}/locations/{{location}}`
	// * `organizations/{{organization_id}}`
	// * `organizations/{{organization_id}}/locations/{{location}}`
	//
	// ***
	Parent pulumi.StringInput
	// Regular expression which defines the rule.
	// Structure is documented below.
	Regex PreventionStoredInfoTypeRegexPtrInput
	// The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens;
	// that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is 100
	// characters. Can be empty to allow the system to generate one.
	StoredInfoTypeId pulumi.StringPtrInput
}

func (PreventionStoredInfoTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*preventionStoredInfoTypeArgs)(nil)).Elem()
}

type PreventionStoredInfoTypeInput interface {
	pulumi.Input

	ToPreventionStoredInfoTypeOutput() PreventionStoredInfoTypeOutput
	ToPreventionStoredInfoTypeOutputWithContext(ctx context.Context) PreventionStoredInfoTypeOutput
}

func (*PreventionStoredInfoType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionStoredInfoType)(nil)).Elem()
}

func (i *PreventionStoredInfoType) ToPreventionStoredInfoTypeOutput() PreventionStoredInfoTypeOutput {
	return i.ToPreventionStoredInfoTypeOutputWithContext(context.Background())
}

func (i *PreventionStoredInfoType) ToPreventionStoredInfoTypeOutputWithContext(ctx context.Context) PreventionStoredInfoTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionStoredInfoTypeOutput)
}

func (i *PreventionStoredInfoType) ToOutput(ctx context.Context) pulumix.Output[*PreventionStoredInfoType] {
	return pulumix.Output[*PreventionStoredInfoType]{
		OutputState: i.ToPreventionStoredInfoTypeOutputWithContext(ctx).OutputState,
	}
}

// PreventionStoredInfoTypeArrayInput is an input type that accepts PreventionStoredInfoTypeArray and PreventionStoredInfoTypeArrayOutput values.
// You can construct a concrete instance of `PreventionStoredInfoTypeArrayInput` via:
//
//	PreventionStoredInfoTypeArray{ PreventionStoredInfoTypeArgs{...} }
type PreventionStoredInfoTypeArrayInput interface {
	pulumi.Input

	ToPreventionStoredInfoTypeArrayOutput() PreventionStoredInfoTypeArrayOutput
	ToPreventionStoredInfoTypeArrayOutputWithContext(context.Context) PreventionStoredInfoTypeArrayOutput
}

type PreventionStoredInfoTypeArray []PreventionStoredInfoTypeInput

func (PreventionStoredInfoTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PreventionStoredInfoType)(nil)).Elem()
}

func (i PreventionStoredInfoTypeArray) ToPreventionStoredInfoTypeArrayOutput() PreventionStoredInfoTypeArrayOutput {
	return i.ToPreventionStoredInfoTypeArrayOutputWithContext(context.Background())
}

func (i PreventionStoredInfoTypeArray) ToPreventionStoredInfoTypeArrayOutputWithContext(ctx context.Context) PreventionStoredInfoTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionStoredInfoTypeArrayOutput)
}

func (i PreventionStoredInfoTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]*PreventionStoredInfoType] {
	return pulumix.Output[[]*PreventionStoredInfoType]{
		OutputState: i.ToPreventionStoredInfoTypeArrayOutputWithContext(ctx).OutputState,
	}
}

// PreventionStoredInfoTypeMapInput is an input type that accepts PreventionStoredInfoTypeMap and PreventionStoredInfoTypeMapOutput values.
// You can construct a concrete instance of `PreventionStoredInfoTypeMapInput` via:
//
//	PreventionStoredInfoTypeMap{ "key": PreventionStoredInfoTypeArgs{...} }
type PreventionStoredInfoTypeMapInput interface {
	pulumi.Input

	ToPreventionStoredInfoTypeMapOutput() PreventionStoredInfoTypeMapOutput
	ToPreventionStoredInfoTypeMapOutputWithContext(context.Context) PreventionStoredInfoTypeMapOutput
}

type PreventionStoredInfoTypeMap map[string]PreventionStoredInfoTypeInput

func (PreventionStoredInfoTypeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PreventionStoredInfoType)(nil)).Elem()
}

func (i PreventionStoredInfoTypeMap) ToPreventionStoredInfoTypeMapOutput() PreventionStoredInfoTypeMapOutput {
	return i.ToPreventionStoredInfoTypeMapOutputWithContext(context.Background())
}

func (i PreventionStoredInfoTypeMap) ToPreventionStoredInfoTypeMapOutputWithContext(ctx context.Context) PreventionStoredInfoTypeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionStoredInfoTypeMapOutput)
}

func (i PreventionStoredInfoTypeMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*PreventionStoredInfoType] {
	return pulumix.Output[map[string]*PreventionStoredInfoType]{
		OutputState: i.ToPreventionStoredInfoTypeMapOutputWithContext(ctx).OutputState,
	}
}

type PreventionStoredInfoTypeOutput struct{ *pulumi.OutputState }

func (PreventionStoredInfoTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionStoredInfoType)(nil)).Elem()
}

func (o PreventionStoredInfoTypeOutput) ToPreventionStoredInfoTypeOutput() PreventionStoredInfoTypeOutput {
	return o
}

func (o PreventionStoredInfoTypeOutput) ToPreventionStoredInfoTypeOutputWithContext(ctx context.Context) PreventionStoredInfoTypeOutput {
	return o
}

func (o PreventionStoredInfoTypeOutput) ToOutput(ctx context.Context) pulumix.Output[*PreventionStoredInfoType] {
	return pulumix.Output[*PreventionStoredInfoType]{
		OutputState: o.OutputState,
	}
}

// A description of the info type.
func (o PreventionStoredInfoTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionStoredInfoType) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Dictionary which defines the rule.
// Structure is documented below.
func (o PreventionStoredInfoTypeOutput) Dictionary() PreventionStoredInfoTypeDictionaryPtrOutput {
	return o.ApplyT(func(v *PreventionStoredInfoType) PreventionStoredInfoTypeDictionaryPtrOutput { return v.Dictionary }).(PreventionStoredInfoTypeDictionaryPtrOutput)
}

// User set display name of the info type.
func (o PreventionStoredInfoTypeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionStoredInfoType) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Dictionary which defines the rule.
// Structure is documented below.
func (o PreventionStoredInfoTypeOutput) LargeCustomDictionary() PreventionStoredInfoTypeLargeCustomDictionaryPtrOutput {
	return o.ApplyT(func(v *PreventionStoredInfoType) PreventionStoredInfoTypeLargeCustomDictionaryPtrOutput {
		return v.LargeCustomDictionary
	}).(PreventionStoredInfoTypeLargeCustomDictionaryPtrOutput)
}

// Name describing the field.
func (o PreventionStoredInfoTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PreventionStoredInfoType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parent of the info type in any of the following formats:
// * `projects/{{project}}`
// * `projects/{{project}}/locations/{{location}}`
// * `organizations/{{organization_id}}`
// * `organizations/{{organization_id}}/locations/{{location}}`
//
// ***
func (o PreventionStoredInfoTypeOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *PreventionStoredInfoType) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// Regular expression which defines the rule.
// Structure is documented below.
func (o PreventionStoredInfoTypeOutput) Regex() PreventionStoredInfoTypeRegexPtrOutput {
	return o.ApplyT(func(v *PreventionStoredInfoType) PreventionStoredInfoTypeRegexPtrOutput { return v.Regex }).(PreventionStoredInfoTypeRegexPtrOutput)
}

// The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens;
// that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is 100
// characters. Can be empty to allow the system to generate one.
func (o PreventionStoredInfoTypeOutput) StoredInfoTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *PreventionStoredInfoType) pulumi.StringOutput { return v.StoredInfoTypeId }).(pulumi.StringOutput)
}

type PreventionStoredInfoTypeArrayOutput struct{ *pulumi.OutputState }

func (PreventionStoredInfoTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PreventionStoredInfoType)(nil)).Elem()
}

func (o PreventionStoredInfoTypeArrayOutput) ToPreventionStoredInfoTypeArrayOutput() PreventionStoredInfoTypeArrayOutput {
	return o
}

func (o PreventionStoredInfoTypeArrayOutput) ToPreventionStoredInfoTypeArrayOutputWithContext(ctx context.Context) PreventionStoredInfoTypeArrayOutput {
	return o
}

func (o PreventionStoredInfoTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*PreventionStoredInfoType] {
	return pulumix.Output[[]*PreventionStoredInfoType]{
		OutputState: o.OutputState,
	}
}

func (o PreventionStoredInfoTypeArrayOutput) Index(i pulumi.IntInput) PreventionStoredInfoTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PreventionStoredInfoType {
		return vs[0].([]*PreventionStoredInfoType)[vs[1].(int)]
	}).(PreventionStoredInfoTypeOutput)
}

type PreventionStoredInfoTypeMapOutput struct{ *pulumi.OutputState }

func (PreventionStoredInfoTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PreventionStoredInfoType)(nil)).Elem()
}

func (o PreventionStoredInfoTypeMapOutput) ToPreventionStoredInfoTypeMapOutput() PreventionStoredInfoTypeMapOutput {
	return o
}

func (o PreventionStoredInfoTypeMapOutput) ToPreventionStoredInfoTypeMapOutputWithContext(ctx context.Context) PreventionStoredInfoTypeMapOutput {
	return o
}

func (o PreventionStoredInfoTypeMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*PreventionStoredInfoType] {
	return pulumix.Output[map[string]*PreventionStoredInfoType]{
		OutputState: o.OutputState,
	}
}

func (o PreventionStoredInfoTypeMapOutput) MapIndex(k pulumi.StringInput) PreventionStoredInfoTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PreventionStoredInfoType {
		return vs[0].(map[string]*PreventionStoredInfoType)[vs[1].(string)]
	}).(PreventionStoredInfoTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionStoredInfoTypeInput)(nil)).Elem(), &PreventionStoredInfoType{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionStoredInfoTypeArrayInput)(nil)).Elem(), PreventionStoredInfoTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionStoredInfoTypeMapInput)(nil)).Elem(), PreventionStoredInfoTypeMap{})
	pulumi.RegisterOutputType(PreventionStoredInfoTypeOutput{})
	pulumi.RegisterOutputType(PreventionStoredInfoTypeArrayOutput{})
	pulumi.RegisterOutputType(PreventionStoredInfoTypeMapOutput{})
}
