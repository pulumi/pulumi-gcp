// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networkservices

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// EdgeCacheKeyset represents a collection of public keys used for validating signed requests.
//
// > **Warning:** All arguments including `public_key.public_key.value` will be stored in the raw
// state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
//
// ## Example Usage
// ### Network Services Edge Cache Keyset Basic
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/networkservices"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := networkservices.NewEdgeCacheKeyset(ctx, "default", &networkservices.EdgeCacheKeysetArgs{
// 			Description: pulumi.String("The default keyset"),
// 			PublicKeys: networkservices.EdgeCacheKeysetPublicKeyArray{
// 				&networkservices.EdgeCacheKeysetPublicKeyArgs{
// 					Id:    pulumi.String("my-public-key"),
// 					Value: pulumi.String("FHsTyFHNmvNpw4o7-rp-M1yqMyBF8vXSBRkZtkQ0RKY"),
// 				},
// 				&networkservices.EdgeCacheKeysetPublicKeyArgs{
// 					Id:    pulumi.String("my-public-key-2"),
// 					Value: pulumi.String("hzd03llxB1u5FOLKFkZ6_wCJqC7jtN0bg7xlBqS6WVM"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// EdgeCacheKeyset can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset default projects/{{project}}/locations/global/edgeCacheKeysets/{{name}}
// ```
//
// ```sh
//  $ pulumi import gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset default {{project}}/{{name}}
// ```
//
// ```sh
//  $ pulumi import gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset default {{name}}
// ```
type EdgeCacheKeyset struct {
	pulumi.CustomResourceState

	// A human-readable description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Set of label tags associated with the EdgeCache resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify at least one (1) key, and may have up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys EdgeCacheKeysetPublicKeyArrayOutput `pulumi:"publicKeys"`
}

// NewEdgeCacheKeyset registers a new resource with the given unique name, arguments, and options.
func NewEdgeCacheKeyset(ctx *pulumi.Context,
	name string, args *EdgeCacheKeysetArgs, opts ...pulumi.ResourceOption) (*EdgeCacheKeyset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PublicKeys == nil {
		return nil, errors.New("invalid value for required argument 'PublicKeys'")
	}
	var resource EdgeCacheKeyset
	err := ctx.RegisterResource("gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeCacheKeyset gets an existing EdgeCacheKeyset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeCacheKeyset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeCacheKeysetState, opts ...pulumi.ResourceOption) (*EdgeCacheKeyset, error) {
	var resource EdgeCacheKeyset
	err := ctx.ReadResource("gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeCacheKeyset resources.
type edgeCacheKeysetState struct {
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// Set of label tags associated with the EdgeCache resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify at least one (1) key, and may have up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys []EdgeCacheKeysetPublicKey `pulumi:"publicKeys"`
}

type EdgeCacheKeysetState struct {
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// Set of label tags associated with the EdgeCache resource.
	Labels pulumi.StringMapInput
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify at least one (1) key, and may have up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys EdgeCacheKeysetPublicKeyArrayInput
}

func (EdgeCacheKeysetState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeCacheKeysetState)(nil)).Elem()
}

type edgeCacheKeysetArgs struct {
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// Set of label tags associated with the EdgeCache resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify at least one (1) key, and may have up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys []EdgeCacheKeysetPublicKey `pulumi:"publicKeys"`
}

// The set of arguments for constructing a EdgeCacheKeyset resource.
type EdgeCacheKeysetArgs struct {
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// Set of label tags associated with the EdgeCache resource.
	Labels pulumi.StringMapInput
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify at least one (1) key, and may have up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys EdgeCacheKeysetPublicKeyArrayInput
}

func (EdgeCacheKeysetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeCacheKeysetArgs)(nil)).Elem()
}

type EdgeCacheKeysetInput interface {
	pulumi.Input

	ToEdgeCacheKeysetOutput() EdgeCacheKeysetOutput
	ToEdgeCacheKeysetOutputWithContext(ctx context.Context) EdgeCacheKeysetOutput
}

func (*EdgeCacheKeyset) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeCacheKeyset)(nil)).Elem()
}

func (i *EdgeCacheKeyset) ToEdgeCacheKeysetOutput() EdgeCacheKeysetOutput {
	return i.ToEdgeCacheKeysetOutputWithContext(context.Background())
}

func (i *EdgeCacheKeyset) ToEdgeCacheKeysetOutputWithContext(ctx context.Context) EdgeCacheKeysetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeCacheKeysetOutput)
}

// EdgeCacheKeysetArrayInput is an input type that accepts EdgeCacheKeysetArray and EdgeCacheKeysetArrayOutput values.
// You can construct a concrete instance of `EdgeCacheKeysetArrayInput` via:
//
//          EdgeCacheKeysetArray{ EdgeCacheKeysetArgs{...} }
type EdgeCacheKeysetArrayInput interface {
	pulumi.Input

	ToEdgeCacheKeysetArrayOutput() EdgeCacheKeysetArrayOutput
	ToEdgeCacheKeysetArrayOutputWithContext(context.Context) EdgeCacheKeysetArrayOutput
}

type EdgeCacheKeysetArray []EdgeCacheKeysetInput

func (EdgeCacheKeysetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeCacheKeyset)(nil)).Elem()
}

func (i EdgeCacheKeysetArray) ToEdgeCacheKeysetArrayOutput() EdgeCacheKeysetArrayOutput {
	return i.ToEdgeCacheKeysetArrayOutputWithContext(context.Background())
}

func (i EdgeCacheKeysetArray) ToEdgeCacheKeysetArrayOutputWithContext(ctx context.Context) EdgeCacheKeysetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeCacheKeysetArrayOutput)
}

// EdgeCacheKeysetMapInput is an input type that accepts EdgeCacheKeysetMap and EdgeCacheKeysetMapOutput values.
// You can construct a concrete instance of `EdgeCacheKeysetMapInput` via:
//
//          EdgeCacheKeysetMap{ "key": EdgeCacheKeysetArgs{...} }
type EdgeCacheKeysetMapInput interface {
	pulumi.Input

	ToEdgeCacheKeysetMapOutput() EdgeCacheKeysetMapOutput
	ToEdgeCacheKeysetMapOutputWithContext(context.Context) EdgeCacheKeysetMapOutput
}

type EdgeCacheKeysetMap map[string]EdgeCacheKeysetInput

func (EdgeCacheKeysetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeCacheKeyset)(nil)).Elem()
}

func (i EdgeCacheKeysetMap) ToEdgeCacheKeysetMapOutput() EdgeCacheKeysetMapOutput {
	return i.ToEdgeCacheKeysetMapOutputWithContext(context.Background())
}

func (i EdgeCacheKeysetMap) ToEdgeCacheKeysetMapOutputWithContext(ctx context.Context) EdgeCacheKeysetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeCacheKeysetMapOutput)
}

type EdgeCacheKeysetOutput struct{ *pulumi.OutputState }

func (EdgeCacheKeysetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeCacheKeyset)(nil)).Elem()
}

func (o EdgeCacheKeysetOutput) ToEdgeCacheKeysetOutput() EdgeCacheKeysetOutput {
	return o
}

func (o EdgeCacheKeysetOutput) ToEdgeCacheKeysetOutputWithContext(ctx context.Context) EdgeCacheKeysetOutput {
	return o
}

type EdgeCacheKeysetArrayOutput struct{ *pulumi.OutputState }

func (EdgeCacheKeysetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeCacheKeyset)(nil)).Elem()
}

func (o EdgeCacheKeysetArrayOutput) ToEdgeCacheKeysetArrayOutput() EdgeCacheKeysetArrayOutput {
	return o
}

func (o EdgeCacheKeysetArrayOutput) ToEdgeCacheKeysetArrayOutputWithContext(ctx context.Context) EdgeCacheKeysetArrayOutput {
	return o
}

func (o EdgeCacheKeysetArrayOutput) Index(i pulumi.IntInput) EdgeCacheKeysetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeCacheKeyset {
		return vs[0].([]*EdgeCacheKeyset)[vs[1].(int)]
	}).(EdgeCacheKeysetOutput)
}

type EdgeCacheKeysetMapOutput struct{ *pulumi.OutputState }

func (EdgeCacheKeysetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeCacheKeyset)(nil)).Elem()
}

func (o EdgeCacheKeysetMapOutput) ToEdgeCacheKeysetMapOutput() EdgeCacheKeysetMapOutput {
	return o
}

func (o EdgeCacheKeysetMapOutput) ToEdgeCacheKeysetMapOutputWithContext(ctx context.Context) EdgeCacheKeysetMapOutput {
	return o
}

func (o EdgeCacheKeysetMapOutput) MapIndex(k pulumi.StringInput) EdgeCacheKeysetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeCacheKeyset {
		return vs[0].(map[string]*EdgeCacheKeyset)[vs[1].(string)]
	}).(EdgeCacheKeysetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeCacheKeysetInput)(nil)).Elem(), &EdgeCacheKeyset{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeCacheKeysetArrayInput)(nil)).Elem(), EdgeCacheKeysetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeCacheKeysetMapInput)(nil)).Elem(), EdgeCacheKeysetMap{})
	pulumi.RegisterOutputType(EdgeCacheKeysetOutput{})
	pulumi.RegisterOutputType(EdgeCacheKeysetArrayOutput{})
	pulumi.RegisterOutputType(EdgeCacheKeysetMapOutput{})
}
