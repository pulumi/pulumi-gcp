// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// EdgeCacheKeyset represents a collection of public keys used for validating signed requests.
//
// To get more information about EdgeCacheKeyset, see:
//
// * [API documentation](https://cloud.google.com/media-cdn/docs/reference/rest/v1/projects.locations.edgeCacheKeysets)
// * How-to Guides
//   - [Create keysets](https://cloud.google.com/media-cdn/docs/create-keyset)
//
// > **Warning:** All arguments including the following potentially sensitive
// values will be stored in the raw state as plain text: `public_key.public_key.value`.
// Read more about sensitive data in state.
//
// ## Example Usage
// ### Network Services Edge Cache Keyset Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/networkservices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkservices.NewEdgeCacheKeyset(ctx, "default", &networkservices.EdgeCacheKeysetArgs{
//				Description: pulumi.String("The default keyset"),
//				PublicKeys: networkservices.EdgeCacheKeysetPublicKeyArray{
//					&networkservices.EdgeCacheKeysetPublicKeyArgs{
//						Id:    pulumi.String("my-public-key"),
//						Value: pulumi.String("FHsTyFHNmvNpw4o7-rp-M1yqMyBF8vXSBRkZtkQ0RKY"),
//					},
//					&networkservices.EdgeCacheKeysetPublicKeyArgs{
//						Id:    pulumi.String("my-public-key-2"),
//						Value: pulumi.String("hzd03llxB1u5FOLKFkZ6_wCJqC7jtN0bg7xlBqS6WVM"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Network Services Edge Cache Keyset Dual Token
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/networkservices"
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/secretmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := secretmanager.NewSecret(ctx, "secret-basic", &secretmanager.SecretArgs{
//				SecretId: pulumi.String("secret-name"),
//				Replication: &secretmanager.SecretReplicationArgs{
//					Auto: nil,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = secretmanager.NewSecretVersion(ctx, "secret-version-basic", &secretmanager.SecretVersionArgs{
//				Secret:     secret_basic.ID(),
//				SecretData: pulumi.String("secret-data"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networkservices.NewEdgeCacheKeyset(ctx, "default", &networkservices.EdgeCacheKeysetArgs{
//				Description: pulumi.String("The default keyset"),
//				PublicKeys: networkservices.EdgeCacheKeysetPublicKeyArray{
//					&networkservices.EdgeCacheKeysetPublicKeyArgs{
//						Id:      pulumi.String("my-public-key"),
//						Managed: pulumi.Bool(true),
//					},
//				},
//				ValidationSharedKeys: networkservices.EdgeCacheKeysetValidationSharedKeyArray{
//					&networkservices.EdgeCacheKeysetValidationSharedKeyArgs{
//						SecretVersion: secret_version_basic.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # EdgeCacheKeyset can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset default projects/{{project}}/locations/global/edgeCacheKeysets/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset default {{project}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset default {{name}}
//
// ```
type EdgeCacheKeyset struct {
	pulumi.CustomResourceState

	// A human-readable description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
	// clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Set of label tags associated with the EdgeCache resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	//
	// ***
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// You may specify no more than one Google-managed public key.
	// If you specify `publicKeys`, you must specify at least one (1) key and may specify up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// Ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys EdgeCacheKeysetPublicKeyArrayOutput `pulumi:"publicKeys"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// An ordered list of shared keys to use for validating signed requests.
	// Shared keys are secret.  Ensure that only authorized users can add `validationSharedKeys` to a keyset.
	// You can rotate keys by appending (pushing) a new key to the list of `validationSharedKeys` and removing any superseded keys.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// Structure is documented below.
	ValidationSharedKeys EdgeCacheKeysetValidationSharedKeyArrayOutput `pulumi:"validationSharedKeys"`
}

// NewEdgeCacheKeyset registers a new resource with the given unique name, arguments, and options.
func NewEdgeCacheKeyset(ctx *pulumi.Context,
	name string, args *EdgeCacheKeysetArgs, opts ...pulumi.ResourceOption) (*EdgeCacheKeyset, error) {
	if args == nil {
		args = &EdgeCacheKeysetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EdgeCacheKeyset
	err := ctx.RegisterResource("gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeCacheKeyset gets an existing EdgeCacheKeyset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeCacheKeyset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeCacheKeysetState, opts ...pulumi.ResourceOption) (*EdgeCacheKeyset, error) {
	var resource EdgeCacheKeyset
	err := ctx.ReadResource("gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeCacheKeyset resources.
type edgeCacheKeysetState struct {
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
	// clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Set of label tags associated with the EdgeCache resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	//
	// ***
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// You may specify no more than one Google-managed public key.
	// If you specify `publicKeys`, you must specify at least one (1) key and may specify up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// Ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys []EdgeCacheKeysetPublicKey `pulumi:"publicKeys"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// An ordered list of shared keys to use for validating signed requests.
	// Shared keys are secret.  Ensure that only authorized users can add `validationSharedKeys` to a keyset.
	// You can rotate keys by appending (pushing) a new key to the list of `validationSharedKeys` and removing any superseded keys.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// Structure is documented below.
	ValidationSharedKeys []EdgeCacheKeysetValidationSharedKey `pulumi:"validationSharedKeys"`
}

type EdgeCacheKeysetState struct {
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
	// clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Set of label tags associated with the EdgeCache resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	//
	// ***
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// You may specify no more than one Google-managed public key.
	// If you specify `publicKeys`, you must specify at least one (1) key and may specify up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// Ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys EdgeCacheKeysetPublicKeyArrayInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// An ordered list of shared keys to use for validating signed requests.
	// Shared keys are secret.  Ensure that only authorized users can add `validationSharedKeys` to a keyset.
	// You can rotate keys by appending (pushing) a new key to the list of `validationSharedKeys` and removing any superseded keys.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// Structure is documented below.
	ValidationSharedKeys EdgeCacheKeysetValidationSharedKeyArrayInput
}

func (EdgeCacheKeysetState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeCacheKeysetState)(nil)).Elem()
}

type edgeCacheKeysetArgs struct {
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// Set of label tags associated with the EdgeCache resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	//
	// ***
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// You may specify no more than one Google-managed public key.
	// If you specify `publicKeys`, you must specify at least one (1) key and may specify up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// Ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys []EdgeCacheKeysetPublicKey `pulumi:"publicKeys"`
	// An ordered list of shared keys to use for validating signed requests.
	// Shared keys are secret.  Ensure that only authorized users can add `validationSharedKeys` to a keyset.
	// You can rotate keys by appending (pushing) a new key to the list of `validationSharedKeys` and removing any superseded keys.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// Structure is documented below.
	ValidationSharedKeys []EdgeCacheKeysetValidationSharedKey `pulumi:"validationSharedKeys"`
}

// The set of arguments for constructing a EdgeCacheKeyset resource.
type EdgeCacheKeysetArgs struct {
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// Set of label tags associated with the EdgeCache resource.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Name of the resource; provided by the client when the resource is created.
	// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
	// and all following characters must be a dash, underscore, letter or digit.
	//
	// ***
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// An ordered list of Ed25519 public keys to use for validating signed requests.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// You may specify no more than one Google-managed public key.
	// If you specify `publicKeys`, you must specify at least one (1) key and may specify up to three (3) keys.
	// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
	// Ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
	// Structure is documented below.
	PublicKeys EdgeCacheKeysetPublicKeyArrayInput
	// An ordered list of shared keys to use for validating signed requests.
	// Shared keys are secret.  Ensure that only authorized users can add `validationSharedKeys` to a keyset.
	// You can rotate keys by appending (pushing) a new key to the list of `validationSharedKeys` and removing any superseded keys.
	// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
	// Structure is documented below.
	ValidationSharedKeys EdgeCacheKeysetValidationSharedKeyArrayInput
}

func (EdgeCacheKeysetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeCacheKeysetArgs)(nil)).Elem()
}

type EdgeCacheKeysetInput interface {
	pulumi.Input

	ToEdgeCacheKeysetOutput() EdgeCacheKeysetOutput
	ToEdgeCacheKeysetOutputWithContext(ctx context.Context) EdgeCacheKeysetOutput
}

func (*EdgeCacheKeyset) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeCacheKeyset)(nil)).Elem()
}

func (i *EdgeCacheKeyset) ToEdgeCacheKeysetOutput() EdgeCacheKeysetOutput {
	return i.ToEdgeCacheKeysetOutputWithContext(context.Background())
}

func (i *EdgeCacheKeyset) ToEdgeCacheKeysetOutputWithContext(ctx context.Context) EdgeCacheKeysetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeCacheKeysetOutput)
}

func (i *EdgeCacheKeyset) ToOutput(ctx context.Context) pulumix.Output[*EdgeCacheKeyset] {
	return pulumix.Output[*EdgeCacheKeyset]{
		OutputState: i.ToEdgeCacheKeysetOutputWithContext(ctx).OutputState,
	}
}

// EdgeCacheKeysetArrayInput is an input type that accepts EdgeCacheKeysetArray and EdgeCacheKeysetArrayOutput values.
// You can construct a concrete instance of `EdgeCacheKeysetArrayInput` via:
//
//	EdgeCacheKeysetArray{ EdgeCacheKeysetArgs{...} }
type EdgeCacheKeysetArrayInput interface {
	pulumi.Input

	ToEdgeCacheKeysetArrayOutput() EdgeCacheKeysetArrayOutput
	ToEdgeCacheKeysetArrayOutputWithContext(context.Context) EdgeCacheKeysetArrayOutput
}

type EdgeCacheKeysetArray []EdgeCacheKeysetInput

func (EdgeCacheKeysetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeCacheKeyset)(nil)).Elem()
}

func (i EdgeCacheKeysetArray) ToEdgeCacheKeysetArrayOutput() EdgeCacheKeysetArrayOutput {
	return i.ToEdgeCacheKeysetArrayOutputWithContext(context.Background())
}

func (i EdgeCacheKeysetArray) ToEdgeCacheKeysetArrayOutputWithContext(ctx context.Context) EdgeCacheKeysetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeCacheKeysetArrayOutput)
}

func (i EdgeCacheKeysetArray) ToOutput(ctx context.Context) pulumix.Output[[]*EdgeCacheKeyset] {
	return pulumix.Output[[]*EdgeCacheKeyset]{
		OutputState: i.ToEdgeCacheKeysetArrayOutputWithContext(ctx).OutputState,
	}
}

// EdgeCacheKeysetMapInput is an input type that accepts EdgeCacheKeysetMap and EdgeCacheKeysetMapOutput values.
// You can construct a concrete instance of `EdgeCacheKeysetMapInput` via:
//
//	EdgeCacheKeysetMap{ "key": EdgeCacheKeysetArgs{...} }
type EdgeCacheKeysetMapInput interface {
	pulumi.Input

	ToEdgeCacheKeysetMapOutput() EdgeCacheKeysetMapOutput
	ToEdgeCacheKeysetMapOutputWithContext(context.Context) EdgeCacheKeysetMapOutput
}

type EdgeCacheKeysetMap map[string]EdgeCacheKeysetInput

func (EdgeCacheKeysetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeCacheKeyset)(nil)).Elem()
}

func (i EdgeCacheKeysetMap) ToEdgeCacheKeysetMapOutput() EdgeCacheKeysetMapOutput {
	return i.ToEdgeCacheKeysetMapOutputWithContext(context.Background())
}

func (i EdgeCacheKeysetMap) ToEdgeCacheKeysetMapOutputWithContext(ctx context.Context) EdgeCacheKeysetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeCacheKeysetMapOutput)
}

func (i EdgeCacheKeysetMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*EdgeCacheKeyset] {
	return pulumix.Output[map[string]*EdgeCacheKeyset]{
		OutputState: i.ToEdgeCacheKeysetMapOutputWithContext(ctx).OutputState,
	}
}

type EdgeCacheKeysetOutput struct{ *pulumi.OutputState }

func (EdgeCacheKeysetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeCacheKeyset)(nil)).Elem()
}

func (o EdgeCacheKeysetOutput) ToEdgeCacheKeysetOutput() EdgeCacheKeysetOutput {
	return o
}

func (o EdgeCacheKeysetOutput) ToEdgeCacheKeysetOutputWithContext(ctx context.Context) EdgeCacheKeysetOutput {
	return o
}

func (o EdgeCacheKeysetOutput) ToOutput(ctx context.Context) pulumix.Output[*EdgeCacheKeyset] {
	return pulumix.Output[*EdgeCacheKeyset]{
		OutputState: o.OutputState,
	}
}

// A human-readable description of the resource.
func (o EdgeCacheKeysetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeCacheKeyset) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
// clients and services.
func (o EdgeCacheKeysetOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EdgeCacheKeyset) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Set of label tags associated with the EdgeCache resource.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o EdgeCacheKeysetOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EdgeCacheKeyset) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the resource; provided by the client when the resource is created.
// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
// and all following characters must be a dash, underscore, letter or digit.
//
// ***
func (o EdgeCacheKeysetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeCacheKeyset) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o EdgeCacheKeysetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeCacheKeyset) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// An ordered list of Ed25519 public keys to use for validating signed requests.
// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
// You may specify no more than one Google-managed public key.
// If you specify `publicKeys`, you must specify at least one (1) key and may specify up to three (3) keys.
// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
// Ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
// Structure is documented below.
func (o EdgeCacheKeysetOutput) PublicKeys() EdgeCacheKeysetPublicKeyArrayOutput {
	return o.ApplyT(func(v *EdgeCacheKeyset) EdgeCacheKeysetPublicKeyArrayOutput { return v.PublicKeys }).(EdgeCacheKeysetPublicKeyArrayOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o EdgeCacheKeysetOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EdgeCacheKeyset) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// An ordered list of shared keys to use for validating signed requests.
// Shared keys are secret.  Ensure that only authorized users can add `validationSharedKeys` to a keyset.
// You can rotate keys by appending (pushing) a new key to the list of `validationSharedKeys` and removing any superseded keys.
// You must specify `publicKeys` or `validationSharedKeys` (or both). The keys in `publicKeys` are checked first.
// Structure is documented below.
func (o EdgeCacheKeysetOutput) ValidationSharedKeys() EdgeCacheKeysetValidationSharedKeyArrayOutput {
	return o.ApplyT(func(v *EdgeCacheKeyset) EdgeCacheKeysetValidationSharedKeyArrayOutput { return v.ValidationSharedKeys }).(EdgeCacheKeysetValidationSharedKeyArrayOutput)
}

type EdgeCacheKeysetArrayOutput struct{ *pulumi.OutputState }

func (EdgeCacheKeysetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeCacheKeyset)(nil)).Elem()
}

func (o EdgeCacheKeysetArrayOutput) ToEdgeCacheKeysetArrayOutput() EdgeCacheKeysetArrayOutput {
	return o
}

func (o EdgeCacheKeysetArrayOutput) ToEdgeCacheKeysetArrayOutputWithContext(ctx context.Context) EdgeCacheKeysetArrayOutput {
	return o
}

func (o EdgeCacheKeysetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*EdgeCacheKeyset] {
	return pulumix.Output[[]*EdgeCacheKeyset]{
		OutputState: o.OutputState,
	}
}

func (o EdgeCacheKeysetArrayOutput) Index(i pulumi.IntInput) EdgeCacheKeysetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeCacheKeyset {
		return vs[0].([]*EdgeCacheKeyset)[vs[1].(int)]
	}).(EdgeCacheKeysetOutput)
}

type EdgeCacheKeysetMapOutput struct{ *pulumi.OutputState }

func (EdgeCacheKeysetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeCacheKeyset)(nil)).Elem()
}

func (o EdgeCacheKeysetMapOutput) ToEdgeCacheKeysetMapOutput() EdgeCacheKeysetMapOutput {
	return o
}

func (o EdgeCacheKeysetMapOutput) ToEdgeCacheKeysetMapOutputWithContext(ctx context.Context) EdgeCacheKeysetMapOutput {
	return o
}

func (o EdgeCacheKeysetMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*EdgeCacheKeyset] {
	return pulumix.Output[map[string]*EdgeCacheKeyset]{
		OutputState: o.OutputState,
	}
}

func (o EdgeCacheKeysetMapOutput) MapIndex(k pulumi.StringInput) EdgeCacheKeysetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeCacheKeyset {
		return vs[0].(map[string]*EdgeCacheKeyset)[vs[1].(string)]
	}).(EdgeCacheKeysetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeCacheKeysetInput)(nil)).Elem(), &EdgeCacheKeyset{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeCacheKeysetArrayInput)(nil)).Elem(), EdgeCacheKeysetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeCacheKeysetMapInput)(nil)).Elem(), EdgeCacheKeysetMap{})
	pulumi.RegisterOutputType(EdgeCacheKeysetOutput{})
	pulumi.RegisterOutputType(EdgeCacheKeysetArrayOutput{})
	pulumi.RegisterOutputType(EdgeCacheKeysetMapOutput{})
}
