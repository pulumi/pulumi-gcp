// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// LbTrafficExtension is a resource that lets the extension service modify the headers and payloads of both requests and responses without impacting the choice of backend services or any other security policies associated with the backend service.
//
// To get more information about LbTrafficExtension, see:
//
// * [API documentation](https://cloud.google.com/service-extensions/docs/reference/rest/v1beta1/projects.locations.lbTrafficExtensions)
// * How-to Guides
//   - [Configure a traffic extension](https://cloud.google.com/service-extensions/docs/configure-callout#configure_a_traffic_extension)
//
// ## Example Usage
//
// ## Import
//
// LbTrafficExtension can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/lbTrafficExtensions/{{name}}`
//
// * `{{project}}/{{location}}/{{name}}`
//
// * `{{location}}/{{name}}`
//
// When using the `pulumi import` command, LbTrafficExtension can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:networkservices/lbTrafficExtension:LbTrafficExtension default projects/{{project}}/locations/{{location}}/lbTrafficExtensions/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:networkservices/lbTrafficExtension:LbTrafficExtension default {{project}}/{{location}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:networkservices/lbTrafficExtension:LbTrafficExtension default {{location}}/{{name}}
// ```
type LbTrafficExtension struct {
	pulumi.CustomResourceState

	// A human-readable description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A set of ordered extension chains that contain the match conditions and extensions to execute.
	// Match conditions for each extension chain are evaluated in sequence for a given request.
	// The first extension chain that has a condition that matches the request is executed.
	// Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
	// Further information can be found at https://cloud.google.com/service-extensions/docs/reference/rest/v1/ExtensionChain
	// Structure is documented below.
	ExtensionChains LbTrafficExtensionExtensionChainArrayOutput `pulumi:"extensionChains"`
	// A list of references to the forwarding rules to which this service extension is attached to.
	// At least one forwarding rule is required. There can be only one LBTrafficExtension resource per forwarding rule.
	ForwardingRules pulumi.StringArrayOutput `pulumi:"forwardingRules"`
	// Set of labels associated with the LbTrafficExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
	// [Supported application load
	// balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs). Possible values:
	// ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrOutput `pulumi:"loadBalancingScheme"`
	// The location of the traffic extension
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the LbTrafficExtension resource in the following format: projects/{project}/locations/{location}/lbTrafficExtensions/{lbTrafficExtension}.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
}

// NewLbTrafficExtension registers a new resource with the given unique name, arguments, and options.
func NewLbTrafficExtension(ctx *pulumi.Context,
	name string, args *LbTrafficExtensionArgs, opts ...pulumi.ResourceOption) (*LbTrafficExtension, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtensionChains == nil {
		return nil, errors.New("invalid value for required argument 'ExtensionChains'")
	}
	if args.ForwardingRules == nil {
		return nil, errors.New("invalid value for required argument 'ForwardingRules'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LbTrafficExtension
	err := ctx.RegisterResource("gcp:networkservices/lbTrafficExtension:LbTrafficExtension", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbTrafficExtension gets an existing LbTrafficExtension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbTrafficExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbTrafficExtensionState, opts ...pulumi.ResourceOption) (*LbTrafficExtension, error) {
	var resource LbTrafficExtension
	err := ctx.ReadResource("gcp:networkservices/lbTrafficExtension:LbTrafficExtension", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbTrafficExtension resources.
type lbTrafficExtensionState struct {
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// A set of ordered extension chains that contain the match conditions and extensions to execute.
	// Match conditions for each extension chain are evaluated in sequence for a given request.
	// The first extension chain that has a condition that matches the request is executed.
	// Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
	// Further information can be found at https://cloud.google.com/service-extensions/docs/reference/rest/v1/ExtensionChain
	// Structure is documented below.
	ExtensionChains []LbTrafficExtensionExtensionChain `pulumi:"extensionChains"`
	// A list of references to the forwarding rules to which this service extension is attached to.
	// At least one forwarding rule is required. There can be only one LBTrafficExtension resource per forwarding rule.
	ForwardingRules []string `pulumi:"forwardingRules"`
	// Set of labels associated with the LbTrafficExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
	// [Supported application load
	// balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs). Possible values:
	// ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme *string `pulumi:"loadBalancingScheme"`
	// The location of the traffic extension
	Location *string `pulumi:"location"`
	// Name of the LbTrafficExtension resource in the following format: projects/{project}/locations/{location}/lbTrafficExtensions/{lbTrafficExtension}.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
}

type LbTrafficExtensionState struct {
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// A set of ordered extension chains that contain the match conditions and extensions to execute.
	// Match conditions for each extension chain are evaluated in sequence for a given request.
	// The first extension chain that has a condition that matches the request is executed.
	// Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
	// Further information can be found at https://cloud.google.com/service-extensions/docs/reference/rest/v1/ExtensionChain
	// Structure is documented below.
	ExtensionChains LbTrafficExtensionExtensionChainArrayInput
	// A list of references to the forwarding rules to which this service extension is attached to.
	// At least one forwarding rule is required. There can be only one LBTrafficExtension resource per forwarding rule.
	ForwardingRules pulumi.StringArrayInput
	// Set of labels associated with the LbTrafficExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
	// [Supported application load
	// balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs). Possible values:
	// ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrInput
	// The location of the traffic extension
	Location pulumi.StringPtrInput
	// Name of the LbTrafficExtension resource in the following format: projects/{project}/locations/{location}/lbTrafficExtensions/{lbTrafficExtension}.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
}

func (LbTrafficExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbTrafficExtensionState)(nil)).Elem()
}

type lbTrafficExtensionArgs struct {
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// A set of ordered extension chains that contain the match conditions and extensions to execute.
	// Match conditions for each extension chain are evaluated in sequence for a given request.
	// The first extension chain that has a condition that matches the request is executed.
	// Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
	// Further information can be found at https://cloud.google.com/service-extensions/docs/reference/rest/v1/ExtensionChain
	// Structure is documented below.
	ExtensionChains []LbTrafficExtensionExtensionChain `pulumi:"extensionChains"`
	// A list of references to the forwarding rules to which this service extension is attached to.
	// At least one forwarding rule is required. There can be only one LBTrafficExtension resource per forwarding rule.
	ForwardingRules []string `pulumi:"forwardingRules"`
	// Set of labels associated with the LbTrafficExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
	// [Supported application load
	// balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs). Possible values:
	// ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme *string `pulumi:"loadBalancingScheme"`
	// The location of the traffic extension
	Location string `pulumi:"location"`
	// Name of the LbTrafficExtension resource in the following format: projects/{project}/locations/{location}/lbTrafficExtensions/{lbTrafficExtension}.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a LbTrafficExtension resource.
type LbTrafficExtensionArgs struct {
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// A set of ordered extension chains that contain the match conditions and extensions to execute.
	// Match conditions for each extension chain are evaluated in sequence for a given request.
	// The first extension chain that has a condition that matches the request is executed.
	// Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
	// Further information can be found at https://cloud.google.com/service-extensions/docs/reference/rest/v1/ExtensionChain
	// Structure is documented below.
	ExtensionChains LbTrafficExtensionExtensionChainArrayInput
	// A list of references to the forwarding rules to which this service extension is attached to.
	// At least one forwarding rule is required. There can be only one LBTrafficExtension resource per forwarding rule.
	ForwardingRules pulumi.StringArrayInput
	// Set of labels associated with the LbTrafficExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
	// [Supported application load
	// balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs). Possible values:
	// ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrInput
	// The location of the traffic extension
	Location pulumi.StringInput
	// Name of the LbTrafficExtension resource in the following format: projects/{project}/locations/{location}/lbTrafficExtensions/{lbTrafficExtension}.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
}

func (LbTrafficExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbTrafficExtensionArgs)(nil)).Elem()
}

type LbTrafficExtensionInput interface {
	pulumi.Input

	ToLbTrafficExtensionOutput() LbTrafficExtensionOutput
	ToLbTrafficExtensionOutputWithContext(ctx context.Context) LbTrafficExtensionOutput
}

func (*LbTrafficExtension) ElementType() reflect.Type {
	return reflect.TypeOf((**LbTrafficExtension)(nil)).Elem()
}

func (i *LbTrafficExtension) ToLbTrafficExtensionOutput() LbTrafficExtensionOutput {
	return i.ToLbTrafficExtensionOutputWithContext(context.Background())
}

func (i *LbTrafficExtension) ToLbTrafficExtensionOutputWithContext(ctx context.Context) LbTrafficExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbTrafficExtensionOutput)
}

// LbTrafficExtensionArrayInput is an input type that accepts LbTrafficExtensionArray and LbTrafficExtensionArrayOutput values.
// You can construct a concrete instance of `LbTrafficExtensionArrayInput` via:
//
//	LbTrafficExtensionArray{ LbTrafficExtensionArgs{...} }
type LbTrafficExtensionArrayInput interface {
	pulumi.Input

	ToLbTrafficExtensionArrayOutput() LbTrafficExtensionArrayOutput
	ToLbTrafficExtensionArrayOutputWithContext(context.Context) LbTrafficExtensionArrayOutput
}

type LbTrafficExtensionArray []LbTrafficExtensionInput

func (LbTrafficExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbTrafficExtension)(nil)).Elem()
}

func (i LbTrafficExtensionArray) ToLbTrafficExtensionArrayOutput() LbTrafficExtensionArrayOutput {
	return i.ToLbTrafficExtensionArrayOutputWithContext(context.Background())
}

func (i LbTrafficExtensionArray) ToLbTrafficExtensionArrayOutputWithContext(ctx context.Context) LbTrafficExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbTrafficExtensionArrayOutput)
}

// LbTrafficExtensionMapInput is an input type that accepts LbTrafficExtensionMap and LbTrafficExtensionMapOutput values.
// You can construct a concrete instance of `LbTrafficExtensionMapInput` via:
//
//	LbTrafficExtensionMap{ "key": LbTrafficExtensionArgs{...} }
type LbTrafficExtensionMapInput interface {
	pulumi.Input

	ToLbTrafficExtensionMapOutput() LbTrafficExtensionMapOutput
	ToLbTrafficExtensionMapOutputWithContext(context.Context) LbTrafficExtensionMapOutput
}

type LbTrafficExtensionMap map[string]LbTrafficExtensionInput

func (LbTrafficExtensionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbTrafficExtension)(nil)).Elem()
}

func (i LbTrafficExtensionMap) ToLbTrafficExtensionMapOutput() LbTrafficExtensionMapOutput {
	return i.ToLbTrafficExtensionMapOutputWithContext(context.Background())
}

func (i LbTrafficExtensionMap) ToLbTrafficExtensionMapOutputWithContext(ctx context.Context) LbTrafficExtensionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbTrafficExtensionMapOutput)
}

type LbTrafficExtensionOutput struct{ *pulumi.OutputState }

func (LbTrafficExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbTrafficExtension)(nil)).Elem()
}

func (o LbTrafficExtensionOutput) ToLbTrafficExtensionOutput() LbTrafficExtensionOutput {
	return o
}

func (o LbTrafficExtensionOutput) ToLbTrafficExtensionOutputWithContext(ctx context.Context) LbTrafficExtensionOutput {
	return o
}

// A human-readable description of the resource.
func (o LbTrafficExtensionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o LbTrafficExtensionOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A set of ordered extension chains that contain the match conditions and extensions to execute.
// Match conditions for each extension chain are evaluated in sequence for a given request.
// The first extension chain that has a condition that matches the request is executed.
// Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
// Further information can be found at https://cloud.google.com/service-extensions/docs/reference/rest/v1/ExtensionChain
// Structure is documented below.
func (o LbTrafficExtensionOutput) ExtensionChains() LbTrafficExtensionExtensionChainArrayOutput {
	return o.ApplyT(func(v *LbTrafficExtension) LbTrafficExtensionExtensionChainArrayOutput { return v.ExtensionChains }).(LbTrafficExtensionExtensionChainArrayOutput)
}

// A list of references to the forwarding rules to which this service extension is attached to.
// At least one forwarding rule is required. There can be only one LBTrafficExtension resource per forwarding rule.
func (o LbTrafficExtensionOutput) ForwardingRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringArrayOutput { return v.ForwardingRules }).(pulumi.StringArrayOutput)
}

// Set of labels associated with the LbTrafficExtension resource. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o LbTrafficExtensionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
// more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
// [Supported application load
// balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs). Possible values:
// ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
func (o LbTrafficExtensionOutput) LoadBalancingScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringPtrOutput { return v.LoadBalancingScheme }).(pulumi.StringPtrOutput)
}

// The location of the traffic extension
func (o LbTrafficExtensionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the LbTrafficExtension resource in the following format: projects/{project}/locations/{location}/lbTrafficExtensions/{lbTrafficExtension}.
func (o LbTrafficExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o LbTrafficExtensionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o LbTrafficExtensionOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

type LbTrafficExtensionArrayOutput struct{ *pulumi.OutputState }

func (LbTrafficExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LbTrafficExtension)(nil)).Elem()
}

func (o LbTrafficExtensionArrayOutput) ToLbTrafficExtensionArrayOutput() LbTrafficExtensionArrayOutput {
	return o
}

func (o LbTrafficExtensionArrayOutput) ToLbTrafficExtensionArrayOutputWithContext(ctx context.Context) LbTrafficExtensionArrayOutput {
	return o
}

func (o LbTrafficExtensionArrayOutput) Index(i pulumi.IntInput) LbTrafficExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LbTrafficExtension {
		return vs[0].([]*LbTrafficExtension)[vs[1].(int)]
	}).(LbTrafficExtensionOutput)
}

type LbTrafficExtensionMapOutput struct{ *pulumi.OutputState }

func (LbTrafficExtensionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LbTrafficExtension)(nil)).Elem()
}

func (o LbTrafficExtensionMapOutput) ToLbTrafficExtensionMapOutput() LbTrafficExtensionMapOutput {
	return o
}

func (o LbTrafficExtensionMapOutput) ToLbTrafficExtensionMapOutputWithContext(ctx context.Context) LbTrafficExtensionMapOutput {
	return o
}

func (o LbTrafficExtensionMapOutput) MapIndex(k pulumi.StringInput) LbTrafficExtensionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LbTrafficExtension {
		return vs[0].(map[string]*LbTrafficExtension)[vs[1].(string)]
	}).(LbTrafficExtensionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LbTrafficExtensionInput)(nil)).Elem(), &LbTrafficExtension{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbTrafficExtensionArrayInput)(nil)).Elem(), LbTrafficExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbTrafficExtensionMapInput)(nil)).Elem(), LbTrafficExtensionMap{})
	pulumi.RegisterOutputType(LbTrafficExtensionOutput{})
	pulumi.RegisterOutputType(LbTrafficExtensionArrayOutput{})
	pulumi.RegisterOutputType(LbTrafficExtensionMapOutput{})
}
