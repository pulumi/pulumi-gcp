// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudrun

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DomainMappingMetadata struct {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// -
	// A sequence number representing a specific generation of the desired state.
	Generation *int `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects. May match selectors of replication controllers
	// and routes.
	// More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
	// In Cloud Run the namespace must be equal to either the
	// project ID or project number.
	Namespace string `pulumi:"namespace"`
	// -
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	// More info:
	// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// -
	// SelfLink is a URL representing this object.
	SelfLink *string `pulumi:"selfLink"`
	// -
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid *string `pulumi:"uid"`
}

// DomainMappingMetadataInput is an input type that accepts DomainMappingMetadataArgs and DomainMappingMetadataOutput values.
// You can construct a concrete instance of `DomainMappingMetadataInput` via:
//
// 		 DomainMappingMetadataArgs{...}
//
type DomainMappingMetadataInput interface {
	pulumi.Input

	ToDomainMappingMetadataOutput() DomainMappingMetadataOutput
	ToDomainMappingMetadataOutputWithContext(context.Context) DomainMappingMetadataOutput
}

type DomainMappingMetadataArgs struct {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// -
	// A sequence number representing a specific generation of the desired state.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects. May match selectors of replication controllers
	// and routes.
	// More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// In Cloud Run the namespace must be equal to either the
	// project ID or project number.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// -
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	// More info:
	// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// -
	// SelfLink is a URL representing this object.
	SelfLink pulumi.StringPtrInput `pulumi:"selfLink"`
	// -
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (DomainMappingMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingMetadata)(nil)).Elem()
}

func (i DomainMappingMetadataArgs) ToDomainMappingMetadataOutput() DomainMappingMetadataOutput {
	return i.ToDomainMappingMetadataOutputWithContext(context.Background())
}

func (i DomainMappingMetadataArgs) ToDomainMappingMetadataOutputWithContext(ctx context.Context) DomainMappingMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingMetadataOutput)
}

func (i DomainMappingMetadataArgs) ToDomainMappingMetadataPtrOutput() DomainMappingMetadataPtrOutput {
	return i.ToDomainMappingMetadataPtrOutputWithContext(context.Background())
}

func (i DomainMappingMetadataArgs) ToDomainMappingMetadataPtrOutputWithContext(ctx context.Context) DomainMappingMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingMetadataOutput).ToDomainMappingMetadataPtrOutputWithContext(ctx)
}

// DomainMappingMetadataPtrInput is an input type that accepts DomainMappingMetadataArgs, DomainMappingMetadataPtr and DomainMappingMetadataPtrOutput values.
// You can construct a concrete instance of `DomainMappingMetadataPtrInput` via:
//
// 		 DomainMappingMetadataArgs{...}
//
//  or:
//
// 		 nil
//
type DomainMappingMetadataPtrInput interface {
	pulumi.Input

	ToDomainMappingMetadataPtrOutput() DomainMappingMetadataPtrOutput
	ToDomainMappingMetadataPtrOutputWithContext(context.Context) DomainMappingMetadataPtrOutput
}

type domainMappingMetadataPtrType DomainMappingMetadataArgs

func DomainMappingMetadataPtr(v *DomainMappingMetadataArgs) DomainMappingMetadataPtrInput {
	return (*domainMappingMetadataPtrType)(v)
}

func (*domainMappingMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMappingMetadata)(nil)).Elem()
}

func (i *domainMappingMetadataPtrType) ToDomainMappingMetadataPtrOutput() DomainMappingMetadataPtrOutput {
	return i.ToDomainMappingMetadataPtrOutputWithContext(context.Background())
}

func (i *domainMappingMetadataPtrType) ToDomainMappingMetadataPtrOutputWithContext(ctx context.Context) DomainMappingMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingMetadataPtrOutput)
}

type DomainMappingMetadataOutput struct{ *pulumi.OutputState }

func (DomainMappingMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingMetadata)(nil)).Elem()
}

func (o DomainMappingMetadataOutput) ToDomainMappingMetadataOutput() DomainMappingMetadataOutput {
	return o
}

func (o DomainMappingMetadataOutput) ToDomainMappingMetadataOutputWithContext(ctx context.Context) DomainMappingMetadataOutput {
	return o
}

func (o DomainMappingMetadataOutput) ToDomainMappingMetadataPtrOutput() DomainMappingMetadataPtrOutput {
	return o.ToDomainMappingMetadataPtrOutputWithContext(context.Background())
}

func (o DomainMappingMetadataOutput) ToDomainMappingMetadataPtrOutputWithContext(ctx context.Context) DomainMappingMetadataPtrOutput {
	return o.ApplyT(func(v DomainMappingMetadata) *DomainMappingMetadata {
		return &v
	}).(DomainMappingMetadataPtrOutput)
}

// Annotations is a key value map stored with a resource that
// may be set by external tools to store and retrieve arbitrary metadata. More
// info: http://kubernetes.io/docs/user-guide/annotations
func (o DomainMappingMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v DomainMappingMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// -
// A sequence number representing a specific generation of the desired state.
func (o DomainMappingMetadataOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainMappingMetadata) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Map of string keys and values that can be used to organize and categorize
// (scope and select) objects. May match selectors of replication controllers
// and routes.
// More info: http://kubernetes.io/docs/user-guide/labels
func (o DomainMappingMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DomainMappingMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// In Cloud Run the namespace must be equal to either the
// project ID or project number.
func (o DomainMappingMetadataOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v DomainMappingMetadata) string { return v.Namespace }).(pulumi.StringOutput)
}

// -
// An opaque value that represents the internal version of this object that
// can be used by clients to determine when objects have changed. May be used
// for optimistic concurrency, change detection, and the watch operation on a
// resource or set of resources. They may only be valid for a
// particular resource or set of resources.
// More info:
// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
func (o DomainMappingMetadataOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingMetadata) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// -
// SelfLink is a URL representing this object.
func (o DomainMappingMetadataOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingMetadata) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

// -
// UID is a unique id generated by the server on successful creation of a resource and is not
// allowed to change on PUT operations.
// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
func (o DomainMappingMetadataOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingMetadata) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type DomainMappingMetadataPtrOutput struct{ *pulumi.OutputState }

func (DomainMappingMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMappingMetadata)(nil)).Elem()
}

func (o DomainMappingMetadataPtrOutput) ToDomainMappingMetadataPtrOutput() DomainMappingMetadataPtrOutput {
	return o
}

func (o DomainMappingMetadataPtrOutput) ToDomainMappingMetadataPtrOutputWithContext(ctx context.Context) DomainMappingMetadataPtrOutput {
	return o
}

func (o DomainMappingMetadataPtrOutput) Elem() DomainMappingMetadataOutput {
	return o.ApplyT(func(v *DomainMappingMetadata) DomainMappingMetadata { return *v }).(DomainMappingMetadataOutput)
}

// Annotations is a key value map stored with a resource that
// may be set by external tools to store and retrieve arbitrary metadata. More
// info: http://kubernetes.io/docs/user-guide/annotations
func (o DomainMappingMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DomainMappingMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// -
// A sequence number representing a specific generation of the desired state.
func (o DomainMappingMetadataPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainMappingMetadata) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Map of string keys and values that can be used to organize and categorize
// (scope and select) objects. May match selectors of replication controllers
// and routes.
// More info: http://kubernetes.io/docs/user-guide/labels
func (o DomainMappingMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DomainMappingMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// In Cloud Run the namespace must be equal to either the
// project ID or project number.
func (o DomainMappingMetadataPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMappingMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// -
// An opaque value that represents the internal version of this object that
// can be used by clients to determine when objects have changed. May be used
// for optimistic concurrency, change detection, and the watch operation on a
// resource or set of resources. They may only be valid for a
// particular resource or set of resources.
// More info:
// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
func (o DomainMappingMetadataPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMappingMetadata) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// -
// SelfLink is a URL representing this object.
func (o DomainMappingMetadataPtrOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMappingMetadata) *string {
		if v == nil {
			return nil
		}
		return v.SelfLink
	}).(pulumi.StringPtrOutput)
}

// -
// UID is a unique id generated by the server on successful creation of a resource and is not
// allowed to change on PUT operations.
// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
func (o DomainMappingMetadataPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMappingMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

type DomainMappingSpec struct {
	// The mode of the certificate.
	CertificateMode *string `pulumi:"certificateMode"`
	// If set, the mapping will override any mapping set before this spec was set.
	// It is recommended that the user leaves this empty to receive an error
	// warning about a potential conflict and only set it once the respective UI
	// has given such a warning.
	ForceOverride *bool `pulumi:"forceOverride"`
	// The name of the Cloud Run Service that this DomainMapping applies to.
	// The route must exist.
	RouteName string `pulumi:"routeName"`
}

// DomainMappingSpecInput is an input type that accepts DomainMappingSpecArgs and DomainMappingSpecOutput values.
// You can construct a concrete instance of `DomainMappingSpecInput` via:
//
// 		 DomainMappingSpecArgs{...}
//
type DomainMappingSpecInput interface {
	pulumi.Input

	ToDomainMappingSpecOutput() DomainMappingSpecOutput
	ToDomainMappingSpecOutputWithContext(context.Context) DomainMappingSpecOutput
}

type DomainMappingSpecArgs struct {
	// The mode of the certificate.
	CertificateMode pulumi.StringPtrInput `pulumi:"certificateMode"`
	// If set, the mapping will override any mapping set before this spec was set.
	// It is recommended that the user leaves this empty to receive an error
	// warning about a potential conflict and only set it once the respective UI
	// has given such a warning.
	ForceOverride pulumi.BoolPtrInput `pulumi:"forceOverride"`
	// The name of the Cloud Run Service that this DomainMapping applies to.
	// The route must exist.
	RouteName pulumi.StringInput `pulumi:"routeName"`
}

func (DomainMappingSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingSpec)(nil)).Elem()
}

func (i DomainMappingSpecArgs) ToDomainMappingSpecOutput() DomainMappingSpecOutput {
	return i.ToDomainMappingSpecOutputWithContext(context.Background())
}

func (i DomainMappingSpecArgs) ToDomainMappingSpecOutputWithContext(ctx context.Context) DomainMappingSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingSpecOutput)
}

func (i DomainMappingSpecArgs) ToDomainMappingSpecPtrOutput() DomainMappingSpecPtrOutput {
	return i.ToDomainMappingSpecPtrOutputWithContext(context.Background())
}

func (i DomainMappingSpecArgs) ToDomainMappingSpecPtrOutputWithContext(ctx context.Context) DomainMappingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingSpecOutput).ToDomainMappingSpecPtrOutputWithContext(ctx)
}

// DomainMappingSpecPtrInput is an input type that accepts DomainMappingSpecArgs, DomainMappingSpecPtr and DomainMappingSpecPtrOutput values.
// You can construct a concrete instance of `DomainMappingSpecPtrInput` via:
//
// 		 DomainMappingSpecArgs{...}
//
//  or:
//
// 		 nil
//
type DomainMappingSpecPtrInput interface {
	pulumi.Input

	ToDomainMappingSpecPtrOutput() DomainMappingSpecPtrOutput
	ToDomainMappingSpecPtrOutputWithContext(context.Context) DomainMappingSpecPtrOutput
}

type domainMappingSpecPtrType DomainMappingSpecArgs

func DomainMappingSpecPtr(v *DomainMappingSpecArgs) DomainMappingSpecPtrInput {
	return (*domainMappingSpecPtrType)(v)
}

func (*domainMappingSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMappingSpec)(nil)).Elem()
}

func (i *domainMappingSpecPtrType) ToDomainMappingSpecPtrOutput() DomainMappingSpecPtrOutput {
	return i.ToDomainMappingSpecPtrOutputWithContext(context.Background())
}

func (i *domainMappingSpecPtrType) ToDomainMappingSpecPtrOutputWithContext(ctx context.Context) DomainMappingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingSpecPtrOutput)
}

type DomainMappingSpecOutput struct{ *pulumi.OutputState }

func (DomainMappingSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingSpec)(nil)).Elem()
}

func (o DomainMappingSpecOutput) ToDomainMappingSpecOutput() DomainMappingSpecOutput {
	return o
}

func (o DomainMappingSpecOutput) ToDomainMappingSpecOutputWithContext(ctx context.Context) DomainMappingSpecOutput {
	return o
}

func (o DomainMappingSpecOutput) ToDomainMappingSpecPtrOutput() DomainMappingSpecPtrOutput {
	return o.ToDomainMappingSpecPtrOutputWithContext(context.Background())
}

func (o DomainMappingSpecOutput) ToDomainMappingSpecPtrOutputWithContext(ctx context.Context) DomainMappingSpecPtrOutput {
	return o.ApplyT(func(v DomainMappingSpec) *DomainMappingSpec {
		return &v
	}).(DomainMappingSpecPtrOutput)
}

// The mode of the certificate.
func (o DomainMappingSpecOutput) CertificateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingSpec) *string { return v.CertificateMode }).(pulumi.StringPtrOutput)
}

// If set, the mapping will override any mapping set before this spec was set.
// It is recommended that the user leaves this empty to receive an error
// warning about a potential conflict and only set it once the respective UI
// has given such a warning.
func (o DomainMappingSpecOutput) ForceOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainMappingSpec) *bool { return v.ForceOverride }).(pulumi.BoolPtrOutput)
}

// The name of the Cloud Run Service that this DomainMapping applies to.
// The route must exist.
func (o DomainMappingSpecOutput) RouteName() pulumi.StringOutput {
	return o.ApplyT(func(v DomainMappingSpec) string { return v.RouteName }).(pulumi.StringOutput)
}

type DomainMappingSpecPtrOutput struct{ *pulumi.OutputState }

func (DomainMappingSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMappingSpec)(nil)).Elem()
}

func (o DomainMappingSpecPtrOutput) ToDomainMappingSpecPtrOutput() DomainMappingSpecPtrOutput {
	return o
}

func (o DomainMappingSpecPtrOutput) ToDomainMappingSpecPtrOutputWithContext(ctx context.Context) DomainMappingSpecPtrOutput {
	return o
}

func (o DomainMappingSpecPtrOutput) Elem() DomainMappingSpecOutput {
	return o.ApplyT(func(v *DomainMappingSpec) DomainMappingSpec { return *v }).(DomainMappingSpecOutput)
}

// The mode of the certificate.
func (o DomainMappingSpecPtrOutput) CertificateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.CertificateMode
	}).(pulumi.StringPtrOutput)
}

// If set, the mapping will override any mapping set before this spec was set.
// It is recommended that the user leaves this empty to receive an error
// warning about a potential conflict and only set it once the respective UI
// has given such a warning.
func (o DomainMappingSpecPtrOutput) ForceOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainMappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.ForceOverride
	}).(pulumi.BoolPtrOutput)
}

// The name of the Cloud Run Service that this DomainMapping applies to.
// The route must exist.
func (o DomainMappingSpecPtrOutput) RouteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMappingSpec) *string {
		if v == nil {
			return nil
		}
		return &v.RouteName
	}).(pulumi.StringPtrOutput)
}

type DomainMappingStatus struct {
	Conditions         []DomainMappingStatusCondition      `pulumi:"conditions"`
	MappedRouteName    *string                             `pulumi:"mappedRouteName"`
	ObservedGeneration *int                                `pulumi:"observedGeneration"`
	ResourceRecords    []DomainMappingStatusResourceRecord `pulumi:"resourceRecords"`
}

// DomainMappingStatusInput is an input type that accepts DomainMappingStatusArgs and DomainMappingStatusOutput values.
// You can construct a concrete instance of `DomainMappingStatusInput` via:
//
// 		 DomainMappingStatusArgs{...}
//
type DomainMappingStatusInput interface {
	pulumi.Input

	ToDomainMappingStatusOutput() DomainMappingStatusOutput
	ToDomainMappingStatusOutputWithContext(context.Context) DomainMappingStatusOutput
}

type DomainMappingStatusArgs struct {
	Conditions         DomainMappingStatusConditionArrayInput      `pulumi:"conditions"`
	MappedRouteName    pulumi.StringPtrInput                       `pulumi:"mappedRouteName"`
	ObservedGeneration pulumi.IntPtrInput                          `pulumi:"observedGeneration"`
	ResourceRecords    DomainMappingStatusResourceRecordArrayInput `pulumi:"resourceRecords"`
}

func (DomainMappingStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingStatus)(nil)).Elem()
}

func (i DomainMappingStatusArgs) ToDomainMappingStatusOutput() DomainMappingStatusOutput {
	return i.ToDomainMappingStatusOutputWithContext(context.Background())
}

func (i DomainMappingStatusArgs) ToDomainMappingStatusOutputWithContext(ctx context.Context) DomainMappingStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingStatusOutput)
}

func (i DomainMappingStatusArgs) ToDomainMappingStatusPtrOutput() DomainMappingStatusPtrOutput {
	return i.ToDomainMappingStatusPtrOutputWithContext(context.Background())
}

func (i DomainMappingStatusArgs) ToDomainMappingStatusPtrOutputWithContext(ctx context.Context) DomainMappingStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingStatusOutput).ToDomainMappingStatusPtrOutputWithContext(ctx)
}

// DomainMappingStatusPtrInput is an input type that accepts DomainMappingStatusArgs, DomainMappingStatusPtr and DomainMappingStatusPtrOutput values.
// You can construct a concrete instance of `DomainMappingStatusPtrInput` via:
//
// 		 DomainMappingStatusArgs{...}
//
//  or:
//
// 		 nil
//
type DomainMappingStatusPtrInput interface {
	pulumi.Input

	ToDomainMappingStatusPtrOutput() DomainMappingStatusPtrOutput
	ToDomainMappingStatusPtrOutputWithContext(context.Context) DomainMappingStatusPtrOutput
}

type domainMappingStatusPtrType DomainMappingStatusArgs

func DomainMappingStatusPtr(v *DomainMappingStatusArgs) DomainMappingStatusPtrInput {
	return (*domainMappingStatusPtrType)(v)
}

func (*domainMappingStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMappingStatus)(nil)).Elem()
}

func (i *domainMappingStatusPtrType) ToDomainMappingStatusPtrOutput() DomainMappingStatusPtrOutput {
	return i.ToDomainMappingStatusPtrOutputWithContext(context.Background())
}

func (i *domainMappingStatusPtrType) ToDomainMappingStatusPtrOutputWithContext(ctx context.Context) DomainMappingStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingStatusPtrOutput)
}

type DomainMappingStatusOutput struct{ *pulumi.OutputState }

func (DomainMappingStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingStatus)(nil)).Elem()
}

func (o DomainMappingStatusOutput) ToDomainMappingStatusOutput() DomainMappingStatusOutput {
	return o
}

func (o DomainMappingStatusOutput) ToDomainMappingStatusOutputWithContext(ctx context.Context) DomainMappingStatusOutput {
	return o
}

func (o DomainMappingStatusOutput) ToDomainMappingStatusPtrOutput() DomainMappingStatusPtrOutput {
	return o.ToDomainMappingStatusPtrOutputWithContext(context.Background())
}

func (o DomainMappingStatusOutput) ToDomainMappingStatusPtrOutputWithContext(ctx context.Context) DomainMappingStatusPtrOutput {
	return o.ApplyT(func(v DomainMappingStatus) *DomainMappingStatus {
		return &v
	}).(DomainMappingStatusPtrOutput)
}
func (o DomainMappingStatusOutput) Conditions() DomainMappingStatusConditionArrayOutput {
	return o.ApplyT(func(v DomainMappingStatus) []DomainMappingStatusCondition { return v.Conditions }).(DomainMappingStatusConditionArrayOutput)
}

func (o DomainMappingStatusOutput) MappedRouteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingStatus) *string { return v.MappedRouteName }).(pulumi.StringPtrOutput)
}

func (o DomainMappingStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainMappingStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

func (o DomainMappingStatusOutput) ResourceRecords() DomainMappingStatusResourceRecordArrayOutput {
	return o.ApplyT(func(v DomainMappingStatus) []DomainMappingStatusResourceRecord { return v.ResourceRecords }).(DomainMappingStatusResourceRecordArrayOutput)
}

type DomainMappingStatusPtrOutput struct{ *pulumi.OutputState }

func (DomainMappingStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMappingStatus)(nil)).Elem()
}

func (o DomainMappingStatusPtrOutput) ToDomainMappingStatusPtrOutput() DomainMappingStatusPtrOutput {
	return o
}

func (o DomainMappingStatusPtrOutput) ToDomainMappingStatusPtrOutputWithContext(ctx context.Context) DomainMappingStatusPtrOutput {
	return o
}

func (o DomainMappingStatusPtrOutput) Elem() DomainMappingStatusOutput {
	return o.ApplyT(func(v *DomainMappingStatus) DomainMappingStatus { return *v }).(DomainMappingStatusOutput)
}

func (o DomainMappingStatusPtrOutput) Conditions() DomainMappingStatusConditionArrayOutput {
	return o.ApplyT(func(v *DomainMappingStatus) []DomainMappingStatusCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(DomainMappingStatusConditionArrayOutput)
}

func (o DomainMappingStatusPtrOutput) MappedRouteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMappingStatus) *string {
		if v == nil {
			return nil
		}
		return v.MappedRouteName
	}).(pulumi.StringPtrOutput)
}

func (o DomainMappingStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainMappingStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

func (o DomainMappingStatusPtrOutput) ResourceRecords() DomainMappingStatusResourceRecordArrayOutput {
	return o.ApplyT(func(v *DomainMappingStatus) []DomainMappingStatusResourceRecord {
		if v == nil {
			return nil
		}
		return v.ResourceRecords
	}).(DomainMappingStatusResourceRecordArrayOutput)
}

type DomainMappingStatusCondition struct {
	Message *string `pulumi:"message"`
	Reason  *string `pulumi:"reason"`
	Status  *string `pulumi:"status"`
	Type    *string `pulumi:"type"`
}

// DomainMappingStatusConditionInput is an input type that accepts DomainMappingStatusConditionArgs and DomainMappingStatusConditionOutput values.
// You can construct a concrete instance of `DomainMappingStatusConditionInput` via:
//
// 		 DomainMappingStatusConditionArgs{...}
//
type DomainMappingStatusConditionInput interface {
	pulumi.Input

	ToDomainMappingStatusConditionOutput() DomainMappingStatusConditionOutput
	ToDomainMappingStatusConditionOutputWithContext(context.Context) DomainMappingStatusConditionOutput
}

type DomainMappingStatusConditionArgs struct {
	Message pulumi.StringPtrInput `pulumi:"message"`
	Reason  pulumi.StringPtrInput `pulumi:"reason"`
	Status  pulumi.StringPtrInput `pulumi:"status"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
}

func (DomainMappingStatusConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingStatusCondition)(nil)).Elem()
}

func (i DomainMappingStatusConditionArgs) ToDomainMappingStatusConditionOutput() DomainMappingStatusConditionOutput {
	return i.ToDomainMappingStatusConditionOutputWithContext(context.Background())
}

func (i DomainMappingStatusConditionArgs) ToDomainMappingStatusConditionOutputWithContext(ctx context.Context) DomainMappingStatusConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingStatusConditionOutput)
}

// DomainMappingStatusConditionArrayInput is an input type that accepts DomainMappingStatusConditionArray and DomainMappingStatusConditionArrayOutput values.
// You can construct a concrete instance of `DomainMappingStatusConditionArrayInput` via:
//
// 		 DomainMappingStatusConditionArray{ DomainMappingStatusConditionArgs{...} }
//
type DomainMappingStatusConditionArrayInput interface {
	pulumi.Input

	ToDomainMappingStatusConditionArrayOutput() DomainMappingStatusConditionArrayOutput
	ToDomainMappingStatusConditionArrayOutputWithContext(context.Context) DomainMappingStatusConditionArrayOutput
}

type DomainMappingStatusConditionArray []DomainMappingStatusConditionInput

func (DomainMappingStatusConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainMappingStatusCondition)(nil)).Elem()
}

func (i DomainMappingStatusConditionArray) ToDomainMappingStatusConditionArrayOutput() DomainMappingStatusConditionArrayOutput {
	return i.ToDomainMappingStatusConditionArrayOutputWithContext(context.Background())
}

func (i DomainMappingStatusConditionArray) ToDomainMappingStatusConditionArrayOutputWithContext(ctx context.Context) DomainMappingStatusConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingStatusConditionArrayOutput)
}

type DomainMappingStatusConditionOutput struct{ *pulumi.OutputState }

func (DomainMappingStatusConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingStatusCondition)(nil)).Elem()
}

func (o DomainMappingStatusConditionOutput) ToDomainMappingStatusConditionOutput() DomainMappingStatusConditionOutput {
	return o
}

func (o DomainMappingStatusConditionOutput) ToDomainMappingStatusConditionOutputWithContext(ctx context.Context) DomainMappingStatusConditionOutput {
	return o
}

func (o DomainMappingStatusConditionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingStatusCondition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o DomainMappingStatusConditionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingStatusCondition) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o DomainMappingStatusConditionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingStatusCondition) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o DomainMappingStatusConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingStatusCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DomainMappingStatusConditionArrayOutput struct{ *pulumi.OutputState }

func (DomainMappingStatusConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainMappingStatusCondition)(nil)).Elem()
}

func (o DomainMappingStatusConditionArrayOutput) ToDomainMappingStatusConditionArrayOutput() DomainMappingStatusConditionArrayOutput {
	return o
}

func (o DomainMappingStatusConditionArrayOutput) ToDomainMappingStatusConditionArrayOutputWithContext(ctx context.Context) DomainMappingStatusConditionArrayOutput {
	return o
}

func (o DomainMappingStatusConditionArrayOutput) Index(i pulumi.IntInput) DomainMappingStatusConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainMappingStatusCondition {
		return vs[0].([]DomainMappingStatusCondition)[vs[1].(int)]
	}).(DomainMappingStatusConditionOutput)
}

type DomainMappingStatusResourceRecord struct {
	// Name should be a verified domain
	Name   *string `pulumi:"name"`
	Rrdata *string `pulumi:"rrdata"`
	Type   *string `pulumi:"type"`
}

// DomainMappingStatusResourceRecordInput is an input type that accepts DomainMappingStatusResourceRecordArgs and DomainMappingStatusResourceRecordOutput values.
// You can construct a concrete instance of `DomainMappingStatusResourceRecordInput` via:
//
// 		 DomainMappingStatusResourceRecordArgs{...}
//
type DomainMappingStatusResourceRecordInput interface {
	pulumi.Input

	ToDomainMappingStatusResourceRecordOutput() DomainMappingStatusResourceRecordOutput
	ToDomainMappingStatusResourceRecordOutputWithContext(context.Context) DomainMappingStatusResourceRecordOutput
}

type DomainMappingStatusResourceRecordArgs struct {
	// Name should be a verified domain
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Rrdata pulumi.StringPtrInput `pulumi:"rrdata"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (DomainMappingStatusResourceRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingStatusResourceRecord)(nil)).Elem()
}

func (i DomainMappingStatusResourceRecordArgs) ToDomainMappingStatusResourceRecordOutput() DomainMappingStatusResourceRecordOutput {
	return i.ToDomainMappingStatusResourceRecordOutputWithContext(context.Background())
}

func (i DomainMappingStatusResourceRecordArgs) ToDomainMappingStatusResourceRecordOutputWithContext(ctx context.Context) DomainMappingStatusResourceRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingStatusResourceRecordOutput)
}

// DomainMappingStatusResourceRecordArrayInput is an input type that accepts DomainMappingStatusResourceRecordArray and DomainMappingStatusResourceRecordArrayOutput values.
// You can construct a concrete instance of `DomainMappingStatusResourceRecordArrayInput` via:
//
// 		 DomainMappingStatusResourceRecordArray{ DomainMappingStatusResourceRecordArgs{...} }
//
type DomainMappingStatusResourceRecordArrayInput interface {
	pulumi.Input

	ToDomainMappingStatusResourceRecordArrayOutput() DomainMappingStatusResourceRecordArrayOutput
	ToDomainMappingStatusResourceRecordArrayOutputWithContext(context.Context) DomainMappingStatusResourceRecordArrayOutput
}

type DomainMappingStatusResourceRecordArray []DomainMappingStatusResourceRecordInput

func (DomainMappingStatusResourceRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainMappingStatusResourceRecord)(nil)).Elem()
}

func (i DomainMappingStatusResourceRecordArray) ToDomainMappingStatusResourceRecordArrayOutput() DomainMappingStatusResourceRecordArrayOutput {
	return i.ToDomainMappingStatusResourceRecordArrayOutputWithContext(context.Background())
}

func (i DomainMappingStatusResourceRecordArray) ToDomainMappingStatusResourceRecordArrayOutputWithContext(ctx context.Context) DomainMappingStatusResourceRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMappingStatusResourceRecordArrayOutput)
}

type DomainMappingStatusResourceRecordOutput struct{ *pulumi.OutputState }

func (DomainMappingStatusResourceRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingStatusResourceRecord)(nil)).Elem()
}

func (o DomainMappingStatusResourceRecordOutput) ToDomainMappingStatusResourceRecordOutput() DomainMappingStatusResourceRecordOutput {
	return o
}

func (o DomainMappingStatusResourceRecordOutput) ToDomainMappingStatusResourceRecordOutputWithContext(ctx context.Context) DomainMappingStatusResourceRecordOutput {
	return o
}

// Name should be a verified domain
func (o DomainMappingStatusResourceRecordOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingStatusResourceRecord) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DomainMappingStatusResourceRecordOutput) Rrdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingStatusResourceRecord) *string { return v.Rrdata }).(pulumi.StringPtrOutput)
}

func (o DomainMappingStatusResourceRecordOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMappingStatusResourceRecord) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DomainMappingStatusResourceRecordArrayOutput struct{ *pulumi.OutputState }

func (DomainMappingStatusResourceRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainMappingStatusResourceRecord)(nil)).Elem()
}

func (o DomainMappingStatusResourceRecordArrayOutput) ToDomainMappingStatusResourceRecordArrayOutput() DomainMappingStatusResourceRecordArrayOutput {
	return o
}

func (o DomainMappingStatusResourceRecordArrayOutput) ToDomainMappingStatusResourceRecordArrayOutputWithContext(ctx context.Context) DomainMappingStatusResourceRecordArrayOutput {
	return o
}

func (o DomainMappingStatusResourceRecordArrayOutput) Index(i pulumi.IntInput) DomainMappingStatusResourceRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainMappingStatusResourceRecord {
		return vs[0].([]DomainMappingStatusResourceRecord)[vs[1].(int)]
	}).(DomainMappingStatusResourceRecordOutput)
}

type IamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// IamBindingConditionInput is an input type that accepts IamBindingConditionArgs and IamBindingConditionOutput values.
// You can construct a concrete instance of `IamBindingConditionInput` via:
//
// 		 IamBindingConditionArgs{...}
//
type IamBindingConditionInput interface {
	pulumi.Input

	ToIamBindingConditionOutput() IamBindingConditionOutput
	ToIamBindingConditionOutputWithContext(context.Context) IamBindingConditionOutput
}

type IamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (IamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamBindingCondition)(nil)).Elem()
}

func (i IamBindingConditionArgs) ToIamBindingConditionOutput() IamBindingConditionOutput {
	return i.ToIamBindingConditionOutputWithContext(context.Background())
}

func (i IamBindingConditionArgs) ToIamBindingConditionOutputWithContext(ctx context.Context) IamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamBindingConditionOutput)
}

func (i IamBindingConditionArgs) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return i.ToIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i IamBindingConditionArgs) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamBindingConditionOutput).ToIamBindingConditionPtrOutputWithContext(ctx)
}

// IamBindingConditionPtrInput is an input type that accepts IamBindingConditionArgs, IamBindingConditionPtr and IamBindingConditionPtrOutput values.
// You can construct a concrete instance of `IamBindingConditionPtrInput` via:
//
// 		 IamBindingConditionArgs{...}
//
//  or:
//
// 		 nil
//
type IamBindingConditionPtrInput interface {
	pulumi.Input

	ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput
	ToIamBindingConditionPtrOutputWithContext(context.Context) IamBindingConditionPtrOutput
}

type iamBindingConditionPtrType IamBindingConditionArgs

func IamBindingConditionPtr(v *IamBindingConditionArgs) IamBindingConditionPtrInput {
	return (*iamBindingConditionPtrType)(v)
}

func (*iamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamBindingCondition)(nil)).Elem()
}

func (i *iamBindingConditionPtrType) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return i.ToIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *iamBindingConditionPtrType) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamBindingConditionPtrOutput)
}

type IamBindingConditionOutput struct{ *pulumi.OutputState }

func (IamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamBindingCondition)(nil)).Elem()
}

func (o IamBindingConditionOutput) ToIamBindingConditionOutput() IamBindingConditionOutput {
	return o
}

func (o IamBindingConditionOutput) ToIamBindingConditionOutputWithContext(ctx context.Context) IamBindingConditionOutput {
	return o
}

func (o IamBindingConditionOutput) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return o.ToIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o IamBindingConditionOutput) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return o.ApplyT(func(v IamBindingCondition) *IamBindingCondition {
		return &v
	}).(IamBindingConditionPtrOutput)
}
func (o IamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (IamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamBindingCondition)(nil)).Elem()
}

func (o IamBindingConditionPtrOutput) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return o
}

func (o IamBindingConditionPtrOutput) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return o
}

func (o IamBindingConditionPtrOutput) Elem() IamBindingConditionOutput {
	return o.ApplyT(func(v *IamBindingCondition) IamBindingCondition { return *v }).(IamBindingConditionOutput)
}

func (o IamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o IamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o IamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type IamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// IamMemberConditionInput is an input type that accepts IamMemberConditionArgs and IamMemberConditionOutput values.
// You can construct a concrete instance of `IamMemberConditionInput` via:
//
// 		 IamMemberConditionArgs{...}
//
type IamMemberConditionInput interface {
	pulumi.Input

	ToIamMemberConditionOutput() IamMemberConditionOutput
	ToIamMemberConditionOutputWithContext(context.Context) IamMemberConditionOutput
}

type IamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (IamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamMemberCondition)(nil)).Elem()
}

func (i IamMemberConditionArgs) ToIamMemberConditionOutput() IamMemberConditionOutput {
	return i.ToIamMemberConditionOutputWithContext(context.Background())
}

func (i IamMemberConditionArgs) ToIamMemberConditionOutputWithContext(ctx context.Context) IamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamMemberConditionOutput)
}

func (i IamMemberConditionArgs) ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput {
	return i.ToIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i IamMemberConditionArgs) ToIamMemberConditionPtrOutputWithContext(ctx context.Context) IamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamMemberConditionOutput).ToIamMemberConditionPtrOutputWithContext(ctx)
}

// IamMemberConditionPtrInput is an input type that accepts IamMemberConditionArgs, IamMemberConditionPtr and IamMemberConditionPtrOutput values.
// You can construct a concrete instance of `IamMemberConditionPtrInput` via:
//
// 		 IamMemberConditionArgs{...}
//
//  or:
//
// 		 nil
//
type IamMemberConditionPtrInput interface {
	pulumi.Input

	ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput
	ToIamMemberConditionPtrOutputWithContext(context.Context) IamMemberConditionPtrOutput
}

type iamMemberConditionPtrType IamMemberConditionArgs

func IamMemberConditionPtr(v *IamMemberConditionArgs) IamMemberConditionPtrInput {
	return (*iamMemberConditionPtrType)(v)
}

func (*iamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamMemberCondition)(nil)).Elem()
}

func (i *iamMemberConditionPtrType) ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput {
	return i.ToIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *iamMemberConditionPtrType) ToIamMemberConditionPtrOutputWithContext(ctx context.Context) IamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamMemberConditionPtrOutput)
}

type IamMemberConditionOutput struct{ *pulumi.OutputState }

func (IamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamMemberCondition)(nil)).Elem()
}

func (o IamMemberConditionOutput) ToIamMemberConditionOutput() IamMemberConditionOutput {
	return o
}

func (o IamMemberConditionOutput) ToIamMemberConditionOutputWithContext(ctx context.Context) IamMemberConditionOutput {
	return o
}

func (o IamMemberConditionOutput) ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput {
	return o.ToIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o IamMemberConditionOutput) ToIamMemberConditionPtrOutputWithContext(ctx context.Context) IamMemberConditionPtrOutput {
	return o.ApplyT(func(v IamMemberCondition) *IamMemberCondition {
		return &v
	}).(IamMemberConditionPtrOutput)
}
func (o IamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (IamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamMemberCondition)(nil)).Elem()
}

func (o IamMemberConditionPtrOutput) ToIamMemberConditionPtrOutput() IamMemberConditionPtrOutput {
	return o
}

func (o IamMemberConditionPtrOutput) ToIamMemberConditionPtrOutputWithContext(ctx context.Context) IamMemberConditionPtrOutput {
	return o
}

func (o IamMemberConditionPtrOutput) Elem() IamMemberConditionOutput {
	return o.ApplyT(func(v *IamMemberCondition) IamMemberCondition { return *v }).(IamMemberConditionOutput)
}

func (o IamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o IamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o IamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type ServiceMetadata struct {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// -
	// A sequence number representing a specific generation of the desired state.
	Generation *int `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects. May match selectors of replication controllers
	// and routes.
	// More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
	// In Cloud Run the namespace must be equal to either the
	// project ID or project number.
	Namespace *string `pulumi:"namespace"`
	// -
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	// More info:
	// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// -
	// SelfLink is a URL representing this object.
	SelfLink *string `pulumi:"selfLink"`
	// -
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid *string `pulumi:"uid"`
}

// ServiceMetadataInput is an input type that accepts ServiceMetadataArgs and ServiceMetadataOutput values.
// You can construct a concrete instance of `ServiceMetadataInput` via:
//
// 		 ServiceMetadataArgs{...}
//
type ServiceMetadataInput interface {
	pulumi.Input

	ToServiceMetadataOutput() ServiceMetadataOutput
	ToServiceMetadataOutputWithContext(context.Context) ServiceMetadataOutput
}

type ServiceMetadataArgs struct {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// -
	// A sequence number representing a specific generation of the desired state.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects. May match selectors of replication controllers
	// and routes.
	// More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// In Cloud Run the namespace must be equal to either the
	// project ID or project number.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// -
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	// More info:
	// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// -
	// SelfLink is a URL representing this object.
	SelfLink pulumi.StringPtrInput `pulumi:"selfLink"`
	// -
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMetadata)(nil)).Elem()
}

func (i ServiceMetadataArgs) ToServiceMetadataOutput() ServiceMetadataOutput {
	return i.ToServiceMetadataOutputWithContext(context.Background())
}

func (i ServiceMetadataArgs) ToServiceMetadataOutputWithContext(ctx context.Context) ServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMetadataOutput)
}

func (i ServiceMetadataArgs) ToServiceMetadataPtrOutput() ServiceMetadataPtrOutput {
	return i.ToServiceMetadataPtrOutputWithContext(context.Background())
}

func (i ServiceMetadataArgs) ToServiceMetadataPtrOutputWithContext(ctx context.Context) ServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMetadataOutput).ToServiceMetadataPtrOutputWithContext(ctx)
}

// ServiceMetadataPtrInput is an input type that accepts ServiceMetadataArgs, ServiceMetadataPtr and ServiceMetadataPtrOutput values.
// You can construct a concrete instance of `ServiceMetadataPtrInput` via:
//
// 		 ServiceMetadataArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceMetadataPtrInput interface {
	pulumi.Input

	ToServiceMetadataPtrOutput() ServiceMetadataPtrOutput
	ToServiceMetadataPtrOutputWithContext(context.Context) ServiceMetadataPtrOutput
}

type serviceMetadataPtrType ServiceMetadataArgs

func ServiceMetadataPtr(v *ServiceMetadataArgs) ServiceMetadataPtrInput {
	return (*serviceMetadataPtrType)(v)
}

func (*serviceMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMetadata)(nil)).Elem()
}

func (i *serviceMetadataPtrType) ToServiceMetadataPtrOutput() ServiceMetadataPtrOutput {
	return i.ToServiceMetadataPtrOutputWithContext(context.Background())
}

func (i *serviceMetadataPtrType) ToServiceMetadataPtrOutputWithContext(ctx context.Context) ServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMetadataPtrOutput)
}

type ServiceMetadataOutput struct{ *pulumi.OutputState }

func (ServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMetadata)(nil)).Elem()
}

func (o ServiceMetadataOutput) ToServiceMetadataOutput() ServiceMetadataOutput {
	return o
}

func (o ServiceMetadataOutput) ToServiceMetadataOutputWithContext(ctx context.Context) ServiceMetadataOutput {
	return o
}

func (o ServiceMetadataOutput) ToServiceMetadataPtrOutput() ServiceMetadataPtrOutput {
	return o.ToServiceMetadataPtrOutputWithContext(context.Background())
}

func (o ServiceMetadataOutput) ToServiceMetadataPtrOutputWithContext(ctx context.Context) ServiceMetadataPtrOutput {
	return o.ApplyT(func(v ServiceMetadata) *ServiceMetadata {
		return &v
	}).(ServiceMetadataPtrOutput)
}

// Annotations is a key value map stored with a resource that
// may be set by external tools to store and retrieve arbitrary metadata. More
// info: http://kubernetes.io/docs/user-guide/annotations
func (o ServiceMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// -
// A sequence number representing a specific generation of the desired state.
func (o ServiceMetadataOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceMetadata) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Map of string keys and values that can be used to organize and categorize
// (scope and select) objects. May match selectors of replication controllers
// and routes.
// More info: http://kubernetes.io/docs/user-guide/labels
func (o ServiceMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// In Cloud Run the namespace must be equal to either the
// project ID or project number.
func (o ServiceMetadataOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMetadata) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// -
// An opaque value that represents the internal version of this object that
// can be used by clients to determine when objects have changed. May be used
// for optimistic concurrency, change detection, and the watch operation on a
// resource or set of resources. They may only be valid for a
// particular resource or set of resources.
// More info:
// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
func (o ServiceMetadataOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMetadata) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// -
// SelfLink is a URL representing this object.
func (o ServiceMetadataOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMetadata) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

// -
// UID is a unique id generated by the server on successful creation of a resource and is not
// allowed to change on PUT operations.
// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
func (o ServiceMetadataOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceMetadata) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ServiceMetadataPtrOutput struct{ *pulumi.OutputState }

func (ServiceMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceMetadata)(nil)).Elem()
}

func (o ServiceMetadataPtrOutput) ToServiceMetadataPtrOutput() ServiceMetadataPtrOutput {
	return o
}

func (o ServiceMetadataPtrOutput) ToServiceMetadataPtrOutputWithContext(ctx context.Context) ServiceMetadataPtrOutput {
	return o
}

func (o ServiceMetadataPtrOutput) Elem() ServiceMetadataOutput {
	return o.ApplyT(func(v *ServiceMetadata) ServiceMetadata { return *v }).(ServiceMetadataOutput)
}

// Annotations is a key value map stored with a resource that
// may be set by external tools to store and retrieve arbitrary metadata. More
// info: http://kubernetes.io/docs/user-guide/annotations
func (o ServiceMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// -
// A sequence number representing a specific generation of the desired state.
func (o ServiceMetadataPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceMetadata) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Map of string keys and values that can be used to organize and categorize
// (scope and select) objects. May match selectors of replication controllers
// and routes.
// More info: http://kubernetes.io/docs/user-guide/labels
func (o ServiceMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// In Cloud Run the namespace must be equal to either the
// project ID or project number.
func (o ServiceMetadataPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// -
// An opaque value that represents the internal version of this object that
// can be used by clients to determine when objects have changed. May be used
// for optimistic concurrency, change detection, and the watch operation on a
// resource or set of resources. They may only be valid for a
// particular resource or set of resources.
// More info:
// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
func (o ServiceMetadataPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMetadata) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// -
// SelfLink is a URL representing this object.
func (o ServiceMetadataPtrOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMetadata) *string {
		if v == nil {
			return nil
		}
		return v.SelfLink
	}).(pulumi.StringPtrOutput)
}

// -
// UID is a unique id generated by the server on successful creation of a resource and is not
// allowed to change on PUT operations.
// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
func (o ServiceMetadataPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

type ServiceStatus struct {
	Conditions                []ServiceStatusCondition `pulumi:"conditions"`
	LatestCreatedRevisionName *string                  `pulumi:"latestCreatedRevisionName"`
	LatestReadyRevisionName   *string                  `pulumi:"latestReadyRevisionName"`
	ObservedGeneration        *int                     `pulumi:"observedGeneration"`
	Url                       *string                  `pulumi:"url"`
}

// ServiceStatusInput is an input type that accepts ServiceStatusArgs and ServiceStatusOutput values.
// You can construct a concrete instance of `ServiceStatusInput` via:
//
// 		 ServiceStatusArgs{...}
//
type ServiceStatusInput interface {
	pulumi.Input

	ToServiceStatusOutput() ServiceStatusOutput
	ToServiceStatusOutputWithContext(context.Context) ServiceStatusOutput
}

type ServiceStatusArgs struct {
	Conditions                ServiceStatusConditionArrayInput `pulumi:"conditions"`
	LatestCreatedRevisionName pulumi.StringPtrInput            `pulumi:"latestCreatedRevisionName"`
	LatestReadyRevisionName   pulumi.StringPtrInput            `pulumi:"latestReadyRevisionName"`
	ObservedGeneration        pulumi.IntPtrInput               `pulumi:"observedGeneration"`
	Url                       pulumi.StringPtrInput            `pulumi:"url"`
}

func (ServiceStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatus)(nil)).Elem()
}

func (i ServiceStatusArgs) ToServiceStatusOutput() ServiceStatusOutput {
	return i.ToServiceStatusOutputWithContext(context.Background())
}

func (i ServiceStatusArgs) ToServiceStatusOutputWithContext(ctx context.Context) ServiceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusOutput)
}

func (i ServiceStatusArgs) ToServiceStatusPtrOutput() ServiceStatusPtrOutput {
	return i.ToServiceStatusPtrOutputWithContext(context.Background())
}

func (i ServiceStatusArgs) ToServiceStatusPtrOutputWithContext(ctx context.Context) ServiceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusOutput).ToServiceStatusPtrOutputWithContext(ctx)
}

// ServiceStatusPtrInput is an input type that accepts ServiceStatusArgs, ServiceStatusPtr and ServiceStatusPtrOutput values.
// You can construct a concrete instance of `ServiceStatusPtrInput` via:
//
// 		 ServiceStatusArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceStatusPtrInput interface {
	pulumi.Input

	ToServiceStatusPtrOutput() ServiceStatusPtrOutput
	ToServiceStatusPtrOutputWithContext(context.Context) ServiceStatusPtrOutput
}

type serviceStatusPtrType ServiceStatusArgs

func ServiceStatusPtr(v *ServiceStatusArgs) ServiceStatusPtrInput {
	return (*serviceStatusPtrType)(v)
}

func (*serviceStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatus)(nil)).Elem()
}

func (i *serviceStatusPtrType) ToServiceStatusPtrOutput() ServiceStatusPtrOutput {
	return i.ToServiceStatusPtrOutputWithContext(context.Background())
}

func (i *serviceStatusPtrType) ToServiceStatusPtrOutputWithContext(ctx context.Context) ServiceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusPtrOutput)
}

type ServiceStatusOutput struct{ *pulumi.OutputState }

func (ServiceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatus)(nil)).Elem()
}

func (o ServiceStatusOutput) ToServiceStatusOutput() ServiceStatusOutput {
	return o
}

func (o ServiceStatusOutput) ToServiceStatusOutputWithContext(ctx context.Context) ServiceStatusOutput {
	return o
}

func (o ServiceStatusOutput) ToServiceStatusPtrOutput() ServiceStatusPtrOutput {
	return o.ToServiceStatusPtrOutputWithContext(context.Background())
}

func (o ServiceStatusOutput) ToServiceStatusPtrOutputWithContext(ctx context.Context) ServiceStatusPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *ServiceStatus {
		return &v
	}).(ServiceStatusPtrOutput)
}
func (o ServiceStatusOutput) Conditions() ServiceStatusConditionArrayOutput {
	return o.ApplyT(func(v ServiceStatus) []ServiceStatusCondition { return v.Conditions }).(ServiceStatusConditionArrayOutput)
}

func (o ServiceStatusOutput) LatestCreatedRevisionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *string { return v.LatestCreatedRevisionName }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusOutput) LatestReadyRevisionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *string { return v.LatestReadyRevisionName }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

func (o ServiceStatusOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatus) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ServiceStatusPtrOutput struct{ *pulumi.OutputState }

func (ServiceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceStatus)(nil)).Elem()
}

func (o ServiceStatusPtrOutput) ToServiceStatusPtrOutput() ServiceStatusPtrOutput {
	return o
}

func (o ServiceStatusPtrOutput) ToServiceStatusPtrOutputWithContext(ctx context.Context) ServiceStatusPtrOutput {
	return o
}

func (o ServiceStatusPtrOutput) Elem() ServiceStatusOutput {
	return o.ApplyT(func(v *ServiceStatus) ServiceStatus { return *v }).(ServiceStatusOutput)
}

func (o ServiceStatusPtrOutput) Conditions() ServiceStatusConditionArrayOutput {
	return o.ApplyT(func(v *ServiceStatus) []ServiceStatusCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ServiceStatusConditionArrayOutput)
}

func (o ServiceStatusPtrOutput) LatestCreatedRevisionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return v.LatestCreatedRevisionName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) LatestReadyRevisionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return v.LatestReadyRevisionName
	}).(pulumi.StringPtrOutput)
}

func (o ServiceStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

func (o ServiceStatusPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceStatus) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ServiceStatusCondition struct {
	Message *string `pulumi:"message"`
	Reason  *string `pulumi:"reason"`
	Status  *string `pulumi:"status"`
	Type    *string `pulumi:"type"`
}

// ServiceStatusConditionInput is an input type that accepts ServiceStatusConditionArgs and ServiceStatusConditionOutput values.
// You can construct a concrete instance of `ServiceStatusConditionInput` via:
//
// 		 ServiceStatusConditionArgs{...}
//
type ServiceStatusConditionInput interface {
	pulumi.Input

	ToServiceStatusConditionOutput() ServiceStatusConditionOutput
	ToServiceStatusConditionOutputWithContext(context.Context) ServiceStatusConditionOutput
}

type ServiceStatusConditionArgs struct {
	Message pulumi.StringPtrInput `pulumi:"message"`
	Reason  pulumi.StringPtrInput `pulumi:"reason"`
	Status  pulumi.StringPtrInput `pulumi:"status"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
}

func (ServiceStatusConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusCondition)(nil)).Elem()
}

func (i ServiceStatusConditionArgs) ToServiceStatusConditionOutput() ServiceStatusConditionOutput {
	return i.ToServiceStatusConditionOutputWithContext(context.Background())
}

func (i ServiceStatusConditionArgs) ToServiceStatusConditionOutputWithContext(ctx context.Context) ServiceStatusConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusConditionOutput)
}

// ServiceStatusConditionArrayInput is an input type that accepts ServiceStatusConditionArray and ServiceStatusConditionArrayOutput values.
// You can construct a concrete instance of `ServiceStatusConditionArrayInput` via:
//
// 		 ServiceStatusConditionArray{ ServiceStatusConditionArgs{...} }
//
type ServiceStatusConditionArrayInput interface {
	pulumi.Input

	ToServiceStatusConditionArrayOutput() ServiceStatusConditionArrayOutput
	ToServiceStatusConditionArrayOutputWithContext(context.Context) ServiceStatusConditionArrayOutput
}

type ServiceStatusConditionArray []ServiceStatusConditionInput

func (ServiceStatusConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceStatusCondition)(nil)).Elem()
}

func (i ServiceStatusConditionArray) ToServiceStatusConditionArrayOutput() ServiceStatusConditionArrayOutput {
	return i.ToServiceStatusConditionArrayOutputWithContext(context.Background())
}

func (i ServiceStatusConditionArray) ToServiceStatusConditionArrayOutputWithContext(ctx context.Context) ServiceStatusConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceStatusConditionArrayOutput)
}

type ServiceStatusConditionOutput struct{ *pulumi.OutputState }

func (ServiceStatusConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceStatusCondition)(nil)).Elem()
}

func (o ServiceStatusConditionOutput) ToServiceStatusConditionOutput() ServiceStatusConditionOutput {
	return o
}

func (o ServiceStatusConditionOutput) ToServiceStatusConditionOutputWithContext(ctx context.Context) ServiceStatusConditionOutput {
	return o
}

func (o ServiceStatusConditionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusCondition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusConditionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusCondition) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusConditionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusCondition) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ServiceStatusConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceStatusCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceStatusConditionArrayOutput struct{ *pulumi.OutputState }

func (ServiceStatusConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceStatusCondition)(nil)).Elem()
}

func (o ServiceStatusConditionArrayOutput) ToServiceStatusConditionArrayOutput() ServiceStatusConditionArrayOutput {
	return o
}

func (o ServiceStatusConditionArrayOutput) ToServiceStatusConditionArrayOutputWithContext(ctx context.Context) ServiceStatusConditionArrayOutput {
	return o
}

func (o ServiceStatusConditionArrayOutput) Index(i pulumi.IntInput) ServiceStatusConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceStatusCondition {
		return vs[0].([]ServiceStatusCondition)[vs[1].(int)]
	}).(ServiceStatusConditionOutput)
}

type ServiceTemplate struct {
	// Metadata associated with this Service, including name, namespace, labels,
	// and annotations.  Structure is documented below.
	Metadata *ServiceTemplateMetadata `pulumi:"metadata"`
	// RevisionSpec holds the desired state of the Revision (from the client).  Structure is documented below.
	Spec *ServiceTemplateSpec `pulumi:"spec"`
}

// ServiceTemplateInput is an input type that accepts ServiceTemplateArgs and ServiceTemplateOutput values.
// You can construct a concrete instance of `ServiceTemplateInput` via:
//
// 		 ServiceTemplateArgs{...}
//
type ServiceTemplateInput interface {
	pulumi.Input

	ToServiceTemplateOutput() ServiceTemplateOutput
	ToServiceTemplateOutputWithContext(context.Context) ServiceTemplateOutput
}

type ServiceTemplateArgs struct {
	// Metadata associated with this Service, including name, namespace, labels,
	// and annotations.  Structure is documented below.
	Metadata ServiceTemplateMetadataPtrInput `pulumi:"metadata"`
	// RevisionSpec holds the desired state of the Revision (from the client).  Structure is documented below.
	Spec ServiceTemplateSpecPtrInput `pulumi:"spec"`
}

func (ServiceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplate)(nil)).Elem()
}

func (i ServiceTemplateArgs) ToServiceTemplateOutput() ServiceTemplateOutput {
	return i.ToServiceTemplateOutputWithContext(context.Background())
}

func (i ServiceTemplateArgs) ToServiceTemplateOutputWithContext(ctx context.Context) ServiceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateOutput)
}

func (i ServiceTemplateArgs) ToServiceTemplatePtrOutput() ServiceTemplatePtrOutput {
	return i.ToServiceTemplatePtrOutputWithContext(context.Background())
}

func (i ServiceTemplateArgs) ToServiceTemplatePtrOutputWithContext(ctx context.Context) ServiceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateOutput).ToServiceTemplatePtrOutputWithContext(ctx)
}

// ServiceTemplatePtrInput is an input type that accepts ServiceTemplateArgs, ServiceTemplatePtr and ServiceTemplatePtrOutput values.
// You can construct a concrete instance of `ServiceTemplatePtrInput` via:
//
// 		 ServiceTemplateArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceTemplatePtrInput interface {
	pulumi.Input

	ToServiceTemplatePtrOutput() ServiceTemplatePtrOutput
	ToServiceTemplatePtrOutputWithContext(context.Context) ServiceTemplatePtrOutput
}

type serviceTemplatePtrType ServiceTemplateArgs

func ServiceTemplatePtr(v *ServiceTemplateArgs) ServiceTemplatePtrInput {
	return (*serviceTemplatePtrType)(v)
}

func (*serviceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplate)(nil)).Elem()
}

func (i *serviceTemplatePtrType) ToServiceTemplatePtrOutput() ServiceTemplatePtrOutput {
	return i.ToServiceTemplatePtrOutputWithContext(context.Background())
}

func (i *serviceTemplatePtrType) ToServiceTemplatePtrOutputWithContext(ctx context.Context) ServiceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplatePtrOutput)
}

type ServiceTemplateOutput struct{ *pulumi.OutputState }

func (ServiceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplate)(nil)).Elem()
}

func (o ServiceTemplateOutput) ToServiceTemplateOutput() ServiceTemplateOutput {
	return o
}

func (o ServiceTemplateOutput) ToServiceTemplateOutputWithContext(ctx context.Context) ServiceTemplateOutput {
	return o
}

func (o ServiceTemplateOutput) ToServiceTemplatePtrOutput() ServiceTemplatePtrOutput {
	return o.ToServiceTemplatePtrOutputWithContext(context.Background())
}

func (o ServiceTemplateOutput) ToServiceTemplatePtrOutputWithContext(ctx context.Context) ServiceTemplatePtrOutput {
	return o.ApplyT(func(v ServiceTemplate) *ServiceTemplate {
		return &v
	}).(ServiceTemplatePtrOutput)
}

// Metadata associated with this Service, including name, namespace, labels,
// and annotations.  Structure is documented below.
func (o ServiceTemplateOutput) Metadata() ServiceTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ServiceTemplate) *ServiceTemplateMetadata { return v.Metadata }).(ServiceTemplateMetadataPtrOutput)
}

// RevisionSpec holds the desired state of the Revision (from the client).  Structure is documented below.
func (o ServiceTemplateOutput) Spec() ServiceTemplateSpecPtrOutput {
	return o.ApplyT(func(v ServiceTemplate) *ServiceTemplateSpec { return v.Spec }).(ServiceTemplateSpecPtrOutput)
}

type ServiceTemplatePtrOutput struct{ *pulumi.OutputState }

func (ServiceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplate)(nil)).Elem()
}

func (o ServiceTemplatePtrOutput) ToServiceTemplatePtrOutput() ServiceTemplatePtrOutput {
	return o
}

func (o ServiceTemplatePtrOutput) ToServiceTemplatePtrOutputWithContext(ctx context.Context) ServiceTemplatePtrOutput {
	return o
}

func (o ServiceTemplatePtrOutput) Elem() ServiceTemplateOutput {
	return o.ApplyT(func(v *ServiceTemplate) ServiceTemplate { return *v }).(ServiceTemplateOutput)
}

// Metadata associated with this Service, including name, namespace, labels,
// and annotations.  Structure is documented below.
func (o ServiceTemplatePtrOutput) Metadata() ServiceTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) *ServiceTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ServiceTemplateMetadataPtrOutput)
}

// RevisionSpec holds the desired state of the Revision (from the client).  Structure is documented below.
func (o ServiceTemplatePtrOutput) Spec() ServiceTemplateSpecPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) *ServiceTemplateSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(ServiceTemplateSpecPtrOutput)
}

type ServiceTemplateMetadata struct {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: http://kubernetes.io/docs/user-guide/annotations
	Annotations map[string]string `pulumi:"annotations"`
	// -
	// A sequence number representing a specific generation of the desired state.
	Generation *int `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects. May match selectors of replication controllers
	// and routes.
	// More info: http://kubernetes.io/docs/user-guide/labels
	Labels map[string]string `pulumi:"labels"`
	// Name of the environment variable.
	Name *string `pulumi:"name"`
	// In Cloud Run the namespace must be equal to either the
	// project ID or project number.
	Namespace *string `pulumi:"namespace"`
	// -
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	// More info:
	// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// -
	// SelfLink is a URL representing this object.
	SelfLink *string `pulumi:"selfLink"`
	// -
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid *string `pulumi:"uid"`
}

// ServiceTemplateMetadataInput is an input type that accepts ServiceTemplateMetadataArgs and ServiceTemplateMetadataOutput values.
// You can construct a concrete instance of `ServiceTemplateMetadataInput` via:
//
// 		 ServiceTemplateMetadataArgs{...}
//
type ServiceTemplateMetadataInput interface {
	pulumi.Input

	ToServiceTemplateMetadataOutput() ServiceTemplateMetadataOutput
	ToServiceTemplateMetadataOutputWithContext(context.Context) ServiceTemplateMetadataOutput
}

type ServiceTemplateMetadataArgs struct {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: http://kubernetes.io/docs/user-guide/annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// -
	// A sequence number representing a specific generation of the desired state.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects. May match selectors of replication controllers
	// and routes.
	// More info: http://kubernetes.io/docs/user-guide/labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Name of the environment variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// In Cloud Run the namespace must be equal to either the
	// project ID or project number.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// -
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	// More info:
	// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// -
	// SelfLink is a URL representing this object.
	SelfLink pulumi.StringPtrInput `pulumi:"selfLink"`
	// -
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ServiceTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateMetadata)(nil)).Elem()
}

func (i ServiceTemplateMetadataArgs) ToServiceTemplateMetadataOutput() ServiceTemplateMetadataOutput {
	return i.ToServiceTemplateMetadataOutputWithContext(context.Background())
}

func (i ServiceTemplateMetadataArgs) ToServiceTemplateMetadataOutputWithContext(ctx context.Context) ServiceTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateMetadataOutput)
}

func (i ServiceTemplateMetadataArgs) ToServiceTemplateMetadataPtrOutput() ServiceTemplateMetadataPtrOutput {
	return i.ToServiceTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i ServiceTemplateMetadataArgs) ToServiceTemplateMetadataPtrOutputWithContext(ctx context.Context) ServiceTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateMetadataOutput).ToServiceTemplateMetadataPtrOutputWithContext(ctx)
}

// ServiceTemplateMetadataPtrInput is an input type that accepts ServiceTemplateMetadataArgs, ServiceTemplateMetadataPtr and ServiceTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `ServiceTemplateMetadataPtrInput` via:
//
// 		 ServiceTemplateMetadataArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceTemplateMetadataPtrInput interface {
	pulumi.Input

	ToServiceTemplateMetadataPtrOutput() ServiceTemplateMetadataPtrOutput
	ToServiceTemplateMetadataPtrOutputWithContext(context.Context) ServiceTemplateMetadataPtrOutput
}

type serviceTemplateMetadataPtrType ServiceTemplateMetadataArgs

func ServiceTemplateMetadataPtr(v *ServiceTemplateMetadataArgs) ServiceTemplateMetadataPtrInput {
	return (*serviceTemplateMetadataPtrType)(v)
}

func (*serviceTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateMetadata)(nil)).Elem()
}

func (i *serviceTemplateMetadataPtrType) ToServiceTemplateMetadataPtrOutput() ServiceTemplateMetadataPtrOutput {
	return i.ToServiceTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *serviceTemplateMetadataPtrType) ToServiceTemplateMetadataPtrOutputWithContext(ctx context.Context) ServiceTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateMetadataPtrOutput)
}

type ServiceTemplateMetadataOutput struct{ *pulumi.OutputState }

func (ServiceTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateMetadata)(nil)).Elem()
}

func (o ServiceTemplateMetadataOutput) ToServiceTemplateMetadataOutput() ServiceTemplateMetadataOutput {
	return o
}

func (o ServiceTemplateMetadataOutput) ToServiceTemplateMetadataOutputWithContext(ctx context.Context) ServiceTemplateMetadataOutput {
	return o
}

func (o ServiceTemplateMetadataOutput) ToServiceTemplateMetadataPtrOutput() ServiceTemplateMetadataPtrOutput {
	return o.ToServiceTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o ServiceTemplateMetadataOutput) ToServiceTemplateMetadataPtrOutputWithContext(ctx context.Context) ServiceTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ServiceTemplateMetadata) *ServiceTemplateMetadata {
		return &v
	}).(ServiceTemplateMetadataPtrOutput)
}

// Annotations is a key value map stored with a resource that
// may be set by external tools to store and retrieve arbitrary metadata. More
// info: http://kubernetes.io/docs/user-guide/annotations
func (o ServiceTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// -
// A sequence number representing a specific generation of the desired state.
func (o ServiceTemplateMetadataOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceTemplateMetadata) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Map of string keys and values that can be used to organize and categorize
// (scope and select) objects. May match selectors of replication controllers
// and routes.
// More info: http://kubernetes.io/docs/user-guide/labels
func (o ServiceTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the environment variable.
func (o ServiceTemplateMetadataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateMetadata) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// In Cloud Run the namespace must be equal to either the
// project ID or project number.
func (o ServiceTemplateMetadataOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateMetadata) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// -
// An opaque value that represents the internal version of this object that
// can be used by clients to determine when objects have changed. May be used
// for optimistic concurrency, change detection, and the watch operation on a
// resource or set of resources. They may only be valid for a
// particular resource or set of resources.
// More info:
// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
func (o ServiceTemplateMetadataOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateMetadata) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// -
// SelfLink is a URL representing this object.
func (o ServiceTemplateMetadataOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateMetadata) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

// -
// UID is a unique id generated by the server on successful creation of a resource and is not
// allowed to change on PUT operations.
// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
func (o ServiceTemplateMetadataOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateMetadata) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ServiceTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (ServiceTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateMetadata)(nil)).Elem()
}

func (o ServiceTemplateMetadataPtrOutput) ToServiceTemplateMetadataPtrOutput() ServiceTemplateMetadataPtrOutput {
	return o
}

func (o ServiceTemplateMetadataPtrOutput) ToServiceTemplateMetadataPtrOutputWithContext(ctx context.Context) ServiceTemplateMetadataPtrOutput {
	return o
}

func (o ServiceTemplateMetadataPtrOutput) Elem() ServiceTemplateMetadataOutput {
	return o.ApplyT(func(v *ServiceTemplateMetadata) ServiceTemplateMetadata { return *v }).(ServiceTemplateMetadataOutput)
}

// Annotations is a key value map stored with a resource that
// may be set by external tools to store and retrieve arbitrary metadata. More
// info: http://kubernetes.io/docs/user-guide/annotations
func (o ServiceTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// -
// A sequence number representing a specific generation of the desired state.
func (o ServiceTemplateMetadataPtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateMetadata) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Map of string keys and values that can be used to organize and categorize
// (scope and select) objects. May match selectors of replication controllers
// and routes.
// More info: http://kubernetes.io/docs/user-guide/labels
func (o ServiceTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Name of the environment variable.
func (o ServiceTemplateMetadataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// In Cloud Run the namespace must be equal to either the
// project ID or project number.
func (o ServiceTemplateMetadataPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// -
// An opaque value that represents the internal version of this object that
// can be used by clients to determine when objects have changed. May be used
// for optimistic concurrency, change detection, and the watch operation on a
// resource or set of resources. They may only be valid for a
// particular resource or set of resources.
// More info:
// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
func (o ServiceTemplateMetadataPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateMetadata) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// -
// SelfLink is a URL representing this object.
func (o ServiceTemplateMetadataPtrOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateMetadata) *string {
		if v == nil {
			return nil
		}
		return v.SelfLink
	}).(pulumi.StringPtrOutput)
}

// -
// UID is a unique id generated by the server on successful creation of a resource and is not
// allowed to change on PUT operations.
// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
func (o ServiceTemplateMetadataPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

type ServiceTemplateSpec struct {
	// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
	// requests per container of the Revision. Values are:
	// - `0` thread-safe, the system should manage the max concurrency. This is
	// the default value.
	// - `1` not-thread-safe. Single concurrency
	// - `2-N` thread-safe, max concurrency of N
	ContainerConcurrency *int `pulumi:"containerConcurrency"`
	// Container defines the unit of execution for this Revision.
	// In the context of a Revision, we disallow a number of the fields of
	// this Container, including: name, ports, and volumeMounts.
	// The runtime contract is documented here:
	// https://github.com/knative/serving/blob/master/docs/runtime-contract.md  Structure is documented below.
	Containers []ServiceTemplateSpecContainer `pulumi:"containers"`
	// Email address of the IAM service account associated with the revision of the
	// service. The service account represents the identity of the running revision,
	// and determines what permissions the revision has. If not provided, the revision
	// will use the project's default service account.
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// -
	// ServingState holds a value describing the state the resources
	// are in for this Revision.
	// It is expected
	// that the system will manipulate this based on routability and load.
	ServingState *string `pulumi:"servingState"`
}

// ServiceTemplateSpecInput is an input type that accepts ServiceTemplateSpecArgs and ServiceTemplateSpecOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecInput` via:
//
// 		 ServiceTemplateSpecArgs{...}
//
type ServiceTemplateSpecInput interface {
	pulumi.Input

	ToServiceTemplateSpecOutput() ServiceTemplateSpecOutput
	ToServiceTemplateSpecOutputWithContext(context.Context) ServiceTemplateSpecOutput
}

type ServiceTemplateSpecArgs struct {
	// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
	// requests per container of the Revision. Values are:
	// - `0` thread-safe, the system should manage the max concurrency. This is
	// the default value.
	// - `1` not-thread-safe. Single concurrency
	// - `2-N` thread-safe, max concurrency of N
	ContainerConcurrency pulumi.IntPtrInput `pulumi:"containerConcurrency"`
	// Container defines the unit of execution for this Revision.
	// In the context of a Revision, we disallow a number of the fields of
	// this Container, including: name, ports, and volumeMounts.
	// The runtime contract is documented here:
	// https://github.com/knative/serving/blob/master/docs/runtime-contract.md  Structure is documented below.
	Containers ServiceTemplateSpecContainerArrayInput `pulumi:"containers"`
	// Email address of the IAM service account associated with the revision of the
	// service. The service account represents the identity of the running revision,
	// and determines what permissions the revision has. If not provided, the revision
	// will use the project's default service account.
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// -
	// ServingState holds a value describing the state the resources
	// are in for this Revision.
	// It is expected
	// that the system will manipulate this based on routability and load.
	ServingState pulumi.StringPtrInput `pulumi:"servingState"`
}

func (ServiceTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpec)(nil)).Elem()
}

func (i ServiceTemplateSpecArgs) ToServiceTemplateSpecOutput() ServiceTemplateSpecOutput {
	return i.ToServiceTemplateSpecOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecArgs) ToServiceTemplateSpecOutputWithContext(ctx context.Context) ServiceTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecOutput)
}

func (i ServiceTemplateSpecArgs) ToServiceTemplateSpecPtrOutput() ServiceTemplateSpecPtrOutput {
	return i.ToServiceTemplateSpecPtrOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecArgs) ToServiceTemplateSpecPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecOutput).ToServiceTemplateSpecPtrOutputWithContext(ctx)
}

// ServiceTemplateSpecPtrInput is an input type that accepts ServiceTemplateSpecArgs, ServiceTemplateSpecPtr and ServiceTemplateSpecPtrOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecPtrInput` via:
//
// 		 ServiceTemplateSpecArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceTemplateSpecPtrInput interface {
	pulumi.Input

	ToServiceTemplateSpecPtrOutput() ServiceTemplateSpecPtrOutput
	ToServiceTemplateSpecPtrOutputWithContext(context.Context) ServiceTemplateSpecPtrOutput
}

type serviceTemplateSpecPtrType ServiceTemplateSpecArgs

func ServiceTemplateSpecPtr(v *ServiceTemplateSpecArgs) ServiceTemplateSpecPtrInput {
	return (*serviceTemplateSpecPtrType)(v)
}

func (*serviceTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpec)(nil)).Elem()
}

func (i *serviceTemplateSpecPtrType) ToServiceTemplateSpecPtrOutput() ServiceTemplateSpecPtrOutput {
	return i.ToServiceTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *serviceTemplateSpecPtrType) ToServiceTemplateSpecPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecPtrOutput)
}

type ServiceTemplateSpecOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpec)(nil)).Elem()
}

func (o ServiceTemplateSpecOutput) ToServiceTemplateSpecOutput() ServiceTemplateSpecOutput {
	return o
}

func (o ServiceTemplateSpecOutput) ToServiceTemplateSpecOutputWithContext(ctx context.Context) ServiceTemplateSpecOutput {
	return o
}

func (o ServiceTemplateSpecOutput) ToServiceTemplateSpecPtrOutput() ServiceTemplateSpecPtrOutput {
	return o.ToServiceTemplateSpecPtrOutputWithContext(context.Background())
}

func (o ServiceTemplateSpecOutput) ToServiceTemplateSpecPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpec) *ServiceTemplateSpec {
		return &v
	}).(ServiceTemplateSpecPtrOutput)
}

// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
// requests per container of the Revision. Values are:
// - `0` thread-safe, the system should manage the max concurrency. This is
// the default value.
// - `1` not-thread-safe. Single concurrency
// - `2-N` thread-safe, max concurrency of N
func (o ServiceTemplateSpecOutput) ContainerConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpec) *int { return v.ContainerConcurrency }).(pulumi.IntPtrOutput)
}

// Container defines the unit of execution for this Revision.
// In the context of a Revision, we disallow a number of the fields of
// this Container, including: name, ports, and volumeMounts.
// The runtime contract is documented here:
// https://github.com/knative/serving/blob/master/docs/runtime-contract.md  Structure is documented below.
func (o ServiceTemplateSpecOutput) Containers() ServiceTemplateSpecContainerArrayOutput {
	return o.ApplyT(func(v ServiceTemplateSpec) []ServiceTemplateSpecContainer { return v.Containers }).(ServiceTemplateSpecContainerArrayOutput)
}

// Email address of the IAM service account associated with the revision of the
// service. The service account represents the identity of the running revision,
// and determines what permissions the revision has. If not provided, the revision
// will use the project's default service account.
func (o ServiceTemplateSpecOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpec) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// -
// ServingState holds a value describing the state the resources
// are in for this Revision.
// It is expected
// that the system will manipulate this based on routability and load.
func (o ServiceTemplateSpecOutput) ServingState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpec) *string { return v.ServingState }).(pulumi.StringPtrOutput)
}

type ServiceTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpec)(nil)).Elem()
}

func (o ServiceTemplateSpecPtrOutput) ToServiceTemplateSpecPtrOutput() ServiceTemplateSpecPtrOutput {
	return o
}

func (o ServiceTemplateSpecPtrOutput) ToServiceTemplateSpecPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecPtrOutput {
	return o
}

func (o ServiceTemplateSpecPtrOutput) Elem() ServiceTemplateSpecOutput {
	return o.ApplyT(func(v *ServiceTemplateSpec) ServiceTemplateSpec { return *v }).(ServiceTemplateSpecOutput)
}

// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
// requests per container of the Revision. Values are:
// - `0` thread-safe, the system should manage the max concurrency. This is
// the default value.
// - `1` not-thread-safe. Single concurrency
// - `2-N` thread-safe, max concurrency of N
func (o ServiceTemplateSpecPtrOutput) ContainerConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateSpec) *int {
		if v == nil {
			return nil
		}
		return v.ContainerConcurrency
	}).(pulumi.IntPtrOutput)
}

// Container defines the unit of execution for this Revision.
// In the context of a Revision, we disallow a number of the fields of
// this Container, including: name, ports, and volumeMounts.
// The runtime contract is documented here:
// https://github.com/knative/serving/blob/master/docs/runtime-contract.md  Structure is documented below.
func (o ServiceTemplateSpecPtrOutput) Containers() ServiceTemplateSpecContainerArrayOutput {
	return o.ApplyT(func(v *ServiceTemplateSpec) []ServiceTemplateSpecContainer {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(ServiceTemplateSpecContainerArrayOutput)
}

// Email address of the IAM service account associated with the revision of the
// service. The service account represents the identity of the running revision,
// and determines what permissions the revision has. If not provided, the revision
// will use the project's default service account.
func (o ServiceTemplateSpecPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// -
// ServingState holds a value describing the state the resources
// are in for this Revision.
// It is expected
// that the system will manipulate this based on routability and load.
func (o ServiceTemplateSpecPtrOutput) ServingState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServingState
	}).(pulumi.StringPtrOutput)
}

type ServiceTemplateSpecContainer struct {
	// Arguments to the entrypoint.
	// The docker image's CMD is used if this is not provided.
	// Variable references $(VAR_NAME) are expanded using the container's
	// environment. If a variable cannot be resolved, the reference in the input
	// string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
	// double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
	// regardless of whether the variable exists or not.
	// More info:
	// https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Args []string `pulumi:"args"`
	// Entrypoint array. Not executed within a shell.
	// The docker image's ENTRYPOINT is used if this is not provided.
	// Variable references $(VAR_NAME) are expanded using the container's
	// environment. If a variable cannot be resolved, the reference in the input
	// string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
	// double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
	// regardless of whether the variable exists or not.
	// More info:
	// https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Commands []string `pulumi:"commands"`
	// -
	// (Optional, Deprecated)
	// List of sources to populate environment variables in the container.
	// All invalid keys will be reported as an event when the container is starting.
	// When a key exists in multiple sources, the value associated with the last source will
	// take precedence. Values defined by an Env with a duplicate key will take
	// precedence.  Structure is documented below.
	EnvFroms []ServiceTemplateSpecContainerEnvFrom `pulumi:"envFroms"`
	// List of environment variables to set in the container.  Structure is documented below.
	Envs []ServiceTemplateSpecContainerEnv `pulumi:"envs"`
	// Docker image name. This is most often a reference to a container located
	// in the container registry, such as gcr.io/cloudrun/hello
	// More info: https://kubernetes.io/docs/concepts/containers/images
	Image string `pulumi:"image"`
	// Compute Resources required by this container. Used to set values such as max memory
	// More info:
	// https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources  Structure is documented below.
	Resources *ServiceTemplateSpecContainerResources `pulumi:"resources"`
	// -
	// (Optional, Deprecated)
	// Container's working directory.
	// If not specified, the container runtime's default will be used, which
	// might be configured in the container image.
	WorkingDir *string `pulumi:"workingDir"`
}

// ServiceTemplateSpecContainerInput is an input type that accepts ServiceTemplateSpecContainerArgs and ServiceTemplateSpecContainerOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerInput` via:
//
// 		 ServiceTemplateSpecContainerArgs{...}
//
type ServiceTemplateSpecContainerInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerOutput() ServiceTemplateSpecContainerOutput
	ToServiceTemplateSpecContainerOutputWithContext(context.Context) ServiceTemplateSpecContainerOutput
}

type ServiceTemplateSpecContainerArgs struct {
	// Arguments to the entrypoint.
	// The docker image's CMD is used if this is not provided.
	// Variable references $(VAR_NAME) are expanded using the container's
	// environment. If a variable cannot be resolved, the reference in the input
	// string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
	// double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
	// regardless of whether the variable exists or not.
	// More info:
	// https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Entrypoint array. Not executed within a shell.
	// The docker image's ENTRYPOINT is used if this is not provided.
	// Variable references $(VAR_NAME) are expanded using the container's
	// environment. If a variable cannot be resolved, the reference in the input
	// string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
	// double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
	// regardless of whether the variable exists or not.
	// More info:
	// https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// -
	// (Optional, Deprecated)
	// List of sources to populate environment variables in the container.
	// All invalid keys will be reported as an event when the container is starting.
	// When a key exists in multiple sources, the value associated with the last source will
	// take precedence. Values defined by an Env with a duplicate key will take
	// precedence.  Structure is documented below.
	EnvFroms ServiceTemplateSpecContainerEnvFromArrayInput `pulumi:"envFroms"`
	// List of environment variables to set in the container.  Structure is documented below.
	Envs ServiceTemplateSpecContainerEnvArrayInput `pulumi:"envs"`
	// Docker image name. This is most often a reference to a container located
	// in the container registry, such as gcr.io/cloudrun/hello
	// More info: https://kubernetes.io/docs/concepts/containers/images
	Image pulumi.StringInput `pulumi:"image"`
	// Compute Resources required by this container. Used to set values such as max memory
	// More info:
	// https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources  Structure is documented below.
	Resources ServiceTemplateSpecContainerResourcesPtrInput `pulumi:"resources"`
	// -
	// (Optional, Deprecated)
	// Container's working directory.
	// If not specified, the container runtime's default will be used, which
	// might be configured in the container image.
	WorkingDir pulumi.StringPtrInput `pulumi:"workingDir"`
}

func (ServiceTemplateSpecContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainer)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerArgs) ToServiceTemplateSpecContainerOutput() ServiceTemplateSpecContainerOutput {
	return i.ToServiceTemplateSpecContainerOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerArgs) ToServiceTemplateSpecContainerOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerOutput)
}

// ServiceTemplateSpecContainerArrayInput is an input type that accepts ServiceTemplateSpecContainerArray and ServiceTemplateSpecContainerArrayOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerArrayInput` via:
//
// 		 ServiceTemplateSpecContainerArray{ ServiceTemplateSpecContainerArgs{...} }
//
type ServiceTemplateSpecContainerArrayInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerArrayOutput() ServiceTemplateSpecContainerArrayOutput
	ToServiceTemplateSpecContainerArrayOutputWithContext(context.Context) ServiceTemplateSpecContainerArrayOutput
}

type ServiceTemplateSpecContainerArray []ServiceTemplateSpecContainerInput

func (ServiceTemplateSpecContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTemplateSpecContainer)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerArray) ToServiceTemplateSpecContainerArrayOutput() ServiceTemplateSpecContainerArrayOutput {
	return i.ToServiceTemplateSpecContainerArrayOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerArray) ToServiceTemplateSpecContainerArrayOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerArrayOutput)
}

type ServiceTemplateSpecContainerOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainer)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerOutput) ToServiceTemplateSpecContainerOutput() ServiceTemplateSpecContainerOutput {
	return o
}

func (o ServiceTemplateSpecContainerOutput) ToServiceTemplateSpecContainerOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerOutput {
	return o
}

// Arguments to the entrypoint.
// The docker image's CMD is used if this is not provided.
// Variable references $(VAR_NAME) are expanded using the container's
// environment. If a variable cannot be resolved, the reference in the input
// string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
// double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
// regardless of whether the variable exists or not.
// More info:
// https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
func (o ServiceTemplateSpecContainerOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainer) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Entrypoint array. Not executed within a shell.
// The docker image's ENTRYPOINT is used if this is not provided.
// Variable references $(VAR_NAME) are expanded using the container's
// environment. If a variable cannot be resolved, the reference in the input
// string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
// double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
// regardless of whether the variable exists or not.
// More info:
// https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
func (o ServiceTemplateSpecContainerOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainer) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// -
// (Optional, Deprecated)
// List of sources to populate environment variables in the container.
// All invalid keys will be reported as an event when the container is starting.
// When a key exists in multiple sources, the value associated with the last source will
// take precedence. Values defined by an Env with a duplicate key will take
// precedence.  Structure is documented below.
func (o ServiceTemplateSpecContainerOutput) EnvFroms() ServiceTemplateSpecContainerEnvFromArrayOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainer) []ServiceTemplateSpecContainerEnvFrom { return v.EnvFroms }).(ServiceTemplateSpecContainerEnvFromArrayOutput)
}

// List of environment variables to set in the container.  Structure is documented below.
func (o ServiceTemplateSpecContainerOutput) Envs() ServiceTemplateSpecContainerEnvArrayOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainer) []ServiceTemplateSpecContainerEnv { return v.Envs }).(ServiceTemplateSpecContainerEnvArrayOutput)
}

// Docker image name. This is most often a reference to a container located
// in the container registry, such as gcr.io/cloudrun/hello
// More info: https://kubernetes.io/docs/concepts/containers/images
func (o ServiceTemplateSpecContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainer) string { return v.Image }).(pulumi.StringOutput)
}

// Compute Resources required by this container. Used to set values such as max memory
// More info:
// https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources  Structure is documented below.
func (o ServiceTemplateSpecContainerOutput) Resources() ServiceTemplateSpecContainerResourcesPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainer) *ServiceTemplateSpecContainerResources { return v.Resources }).(ServiceTemplateSpecContainerResourcesPtrOutput)
}

// -
// (Optional, Deprecated)
// Container's working directory.
// If not specified, the container runtime's default will be used, which
// might be configured in the container image.
func (o ServiceTemplateSpecContainerOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainer) *string { return v.WorkingDir }).(pulumi.StringPtrOutput)
}

type ServiceTemplateSpecContainerArrayOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTemplateSpecContainer)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerArrayOutput) ToServiceTemplateSpecContainerArrayOutput() ServiceTemplateSpecContainerArrayOutput {
	return o
}

func (o ServiceTemplateSpecContainerArrayOutput) ToServiceTemplateSpecContainerArrayOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerArrayOutput {
	return o
}

func (o ServiceTemplateSpecContainerArrayOutput) Index(i pulumi.IntInput) ServiceTemplateSpecContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceTemplateSpecContainer {
		return vs[0].([]ServiceTemplateSpecContainer)[vs[1].(int)]
	}).(ServiceTemplateSpecContainerOutput)
}

type ServiceTemplateSpecContainerEnv struct {
	// Name of the environment variable.
	Name *string `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded
	// using the previous defined environment variables in the container and
	// any route environment variables. If a variable cannot be resolved,
	// the reference in the input string will be unchanged. The $(VAR_NAME)
	// syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
	// references will never be expanded, regardless of whether the variable
	// exists or not.
	// Defaults to "".
	Value *string `pulumi:"value"`
}

// ServiceTemplateSpecContainerEnvInput is an input type that accepts ServiceTemplateSpecContainerEnvArgs and ServiceTemplateSpecContainerEnvOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvInput` via:
//
// 		 ServiceTemplateSpecContainerEnvArgs{...}
//
type ServiceTemplateSpecContainerEnvInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvOutput() ServiceTemplateSpecContainerEnvOutput
	ToServiceTemplateSpecContainerEnvOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvOutput
}

type ServiceTemplateSpecContainerEnvArgs struct {
	// Name of the environment variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Variable references $(VAR_NAME) are expanded
	// using the previous defined environment variables in the container and
	// any route environment variables. If a variable cannot be resolved,
	// the reference in the input string will be unchanged. The $(VAR_NAME)
	// syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
	// references will never be expanded, regardless of whether the variable
	// exists or not.
	// Defaults to "".
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceTemplateSpecContainerEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnv)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerEnvArgs) ToServiceTemplateSpecContainerEnvOutput() ServiceTemplateSpecContainerEnvOutput {
	return i.ToServiceTemplateSpecContainerEnvOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvArgs) ToServiceTemplateSpecContainerEnvOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvOutput)
}

// ServiceTemplateSpecContainerEnvArrayInput is an input type that accepts ServiceTemplateSpecContainerEnvArray and ServiceTemplateSpecContainerEnvArrayOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvArrayInput` via:
//
// 		 ServiceTemplateSpecContainerEnvArray{ ServiceTemplateSpecContainerEnvArgs{...} }
//
type ServiceTemplateSpecContainerEnvArrayInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvArrayOutput() ServiceTemplateSpecContainerEnvArrayOutput
	ToServiceTemplateSpecContainerEnvArrayOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvArrayOutput
}

type ServiceTemplateSpecContainerEnvArray []ServiceTemplateSpecContainerEnvInput

func (ServiceTemplateSpecContainerEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTemplateSpecContainerEnv)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerEnvArray) ToServiceTemplateSpecContainerEnvArrayOutput() ServiceTemplateSpecContainerEnvArrayOutput {
	return i.ToServiceTemplateSpecContainerEnvArrayOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvArray) ToServiceTemplateSpecContainerEnvArrayOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvArrayOutput)
}

type ServiceTemplateSpecContainerEnvOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnv)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvOutput) ToServiceTemplateSpecContainerEnvOutput() ServiceTemplateSpecContainerEnvOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvOutput) ToServiceTemplateSpecContainerEnvOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvOutput {
	return o
}

// Name of the environment variable.
func (o ServiceTemplateSpecContainerEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Variable references $(VAR_NAME) are expanded
// using the previous defined environment variables in the container and
// any route environment variables. If a variable cannot be resolved,
// the reference in the input string will be unchanged. The $(VAR_NAME)
// syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
// references will never be expanded, regardless of whether the variable
// exists or not.
// Defaults to "".
func (o ServiceTemplateSpecContainerEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceTemplateSpecContainerEnvArrayOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTemplateSpecContainerEnv)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvArrayOutput) ToServiceTemplateSpecContainerEnvArrayOutput() ServiceTemplateSpecContainerEnvArrayOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvArrayOutput) ToServiceTemplateSpecContainerEnvArrayOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvArrayOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvArrayOutput) Index(i pulumi.IntInput) ServiceTemplateSpecContainerEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceTemplateSpecContainerEnv {
		return vs[0].([]ServiceTemplateSpecContainerEnv)[vs[1].(int)]
	}).(ServiceTemplateSpecContainerEnvOutput)
}

type ServiceTemplateSpecContainerEnvFrom struct {
	// The ConfigMap to select from.  Structure is documented below.
	ConfigMapRef *ServiceTemplateSpecContainerEnvFromConfigMapRef `pulumi:"configMapRef"`
	// An optional identifier to prepend to each key in the ConfigMap.
	Prefix *string `pulumi:"prefix"`
	// The Secret to select from.  Structure is documented below.
	SecretRef *ServiceTemplateSpecContainerEnvFromSecretRef `pulumi:"secretRef"`
}

// ServiceTemplateSpecContainerEnvFromInput is an input type that accepts ServiceTemplateSpecContainerEnvFromArgs and ServiceTemplateSpecContainerEnvFromOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromArgs{...}
//
type ServiceTemplateSpecContainerEnvFromInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromOutput() ServiceTemplateSpecContainerEnvFromOutput
	ToServiceTemplateSpecContainerEnvFromOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromOutput
}

type ServiceTemplateSpecContainerEnvFromArgs struct {
	// The ConfigMap to select from.  Structure is documented below.
	ConfigMapRef ServiceTemplateSpecContainerEnvFromConfigMapRefPtrInput `pulumi:"configMapRef"`
	// An optional identifier to prepend to each key in the ConfigMap.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The Secret to select from.  Structure is documented below.
	SecretRef ServiceTemplateSpecContainerEnvFromSecretRefPtrInput `pulumi:"secretRef"`
}

func (ServiceTemplateSpecContainerEnvFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFrom)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerEnvFromArgs) ToServiceTemplateSpecContainerEnvFromOutput() ServiceTemplateSpecContainerEnvFromOutput {
	return i.ToServiceTemplateSpecContainerEnvFromOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromArgs) ToServiceTemplateSpecContainerEnvFromOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromOutput)
}

// ServiceTemplateSpecContainerEnvFromArrayInput is an input type that accepts ServiceTemplateSpecContainerEnvFromArray and ServiceTemplateSpecContainerEnvFromArrayOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromArrayInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromArray{ ServiceTemplateSpecContainerEnvFromArgs{...} }
//
type ServiceTemplateSpecContainerEnvFromArrayInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromArrayOutput() ServiceTemplateSpecContainerEnvFromArrayOutput
	ToServiceTemplateSpecContainerEnvFromArrayOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromArrayOutput
}

type ServiceTemplateSpecContainerEnvFromArray []ServiceTemplateSpecContainerEnvFromInput

func (ServiceTemplateSpecContainerEnvFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTemplateSpecContainerEnvFrom)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerEnvFromArray) ToServiceTemplateSpecContainerEnvFromArrayOutput() ServiceTemplateSpecContainerEnvFromArrayOutput {
	return i.ToServiceTemplateSpecContainerEnvFromArrayOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromArray) ToServiceTemplateSpecContainerEnvFromArrayOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromArrayOutput)
}

type ServiceTemplateSpecContainerEnvFromOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFrom)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromOutput) ToServiceTemplateSpecContainerEnvFromOutput() ServiceTemplateSpecContainerEnvFromOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromOutput) ToServiceTemplateSpecContainerEnvFromOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromOutput {
	return o
}

// The ConfigMap to select from.  Structure is documented below.
func (o ServiceTemplateSpecContainerEnvFromOutput) ConfigMapRef() ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFrom) *ServiceTemplateSpecContainerEnvFromConfigMapRef {
		return v.ConfigMapRef
	}).(ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput)
}

// An optional identifier to prepend to each key in the ConfigMap.
func (o ServiceTemplateSpecContainerEnvFromOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFrom) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The Secret to select from.  Structure is documented below.
func (o ServiceTemplateSpecContainerEnvFromOutput) SecretRef() ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFrom) *ServiceTemplateSpecContainerEnvFromSecretRef {
		return v.SecretRef
	}).(ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput)
}

type ServiceTemplateSpecContainerEnvFromArrayOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTemplateSpecContainerEnvFrom)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromArrayOutput) ToServiceTemplateSpecContainerEnvFromArrayOutput() ServiceTemplateSpecContainerEnvFromArrayOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromArrayOutput) ToServiceTemplateSpecContainerEnvFromArrayOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromArrayOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromArrayOutput) Index(i pulumi.IntInput) ServiceTemplateSpecContainerEnvFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceTemplateSpecContainerEnvFrom {
		return vs[0].([]ServiceTemplateSpecContainerEnvFrom)[vs[1].(int)]
	}).(ServiceTemplateSpecContainerEnvFromOutput)
}

type ServiceTemplateSpecContainerEnvFromConfigMapRef struct {
	// The Secret to select from.  Structure is documented below.
	LocalObjectReference *ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference `pulumi:"localObjectReference"`
	// Specify whether the Secret must be defined
	Optional *bool `pulumi:"optional"`
}

// ServiceTemplateSpecContainerEnvFromConfigMapRefInput is an input type that accepts ServiceTemplateSpecContainerEnvFromConfigMapRefArgs and ServiceTemplateSpecContainerEnvFromConfigMapRefOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromConfigMapRefInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromConfigMapRefArgs{...}
//
type ServiceTemplateSpecContainerEnvFromConfigMapRefInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromConfigMapRefOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefOutput
	ToServiceTemplateSpecContainerEnvFromConfigMapRefOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefOutput
}

type ServiceTemplateSpecContainerEnvFromConfigMapRefArgs struct {
	// The Secret to select from.  Structure is documented below.
	LocalObjectReference ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrInput `pulumi:"localObjectReference"`
	// Specify whether the Secret must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ServiceTemplateSpecContainerEnvFromConfigMapRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFromConfigMapRef)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerEnvFromConfigMapRefArgs) ToServiceTemplateSpecContainerEnvFromConfigMapRefOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefOutput {
	return i.ToServiceTemplateSpecContainerEnvFromConfigMapRefOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromConfigMapRefArgs) ToServiceTemplateSpecContainerEnvFromConfigMapRefOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromConfigMapRefOutput)
}

func (i ServiceTemplateSpecContainerEnvFromConfigMapRefArgs) ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput {
	return i.ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromConfigMapRefArgs) ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromConfigMapRefOutput).ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutputWithContext(ctx)
}

// ServiceTemplateSpecContainerEnvFromConfigMapRefPtrInput is an input type that accepts ServiceTemplateSpecContainerEnvFromConfigMapRefArgs, ServiceTemplateSpecContainerEnvFromConfigMapRefPtr and ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromConfigMapRefPtrInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromConfigMapRefArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceTemplateSpecContainerEnvFromConfigMapRefPtrInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput
	ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput
}

type serviceTemplateSpecContainerEnvFromConfigMapRefPtrType ServiceTemplateSpecContainerEnvFromConfigMapRefArgs

func ServiceTemplateSpecContainerEnvFromConfigMapRefPtr(v *ServiceTemplateSpecContainerEnvFromConfigMapRefArgs) ServiceTemplateSpecContainerEnvFromConfigMapRefPtrInput {
	return (*serviceTemplateSpecContainerEnvFromConfigMapRefPtrType)(v)
}

func (*serviceTemplateSpecContainerEnvFromConfigMapRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerEnvFromConfigMapRef)(nil)).Elem()
}

func (i *serviceTemplateSpecContainerEnvFromConfigMapRefPtrType) ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput {
	return i.ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutputWithContext(context.Background())
}

func (i *serviceTemplateSpecContainerEnvFromConfigMapRefPtrType) ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput)
}

type ServiceTemplateSpecContainerEnvFromConfigMapRefOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromConfigMapRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFromConfigMapRef)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput {
	return o.ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutputWithContext(context.Background())
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromConfigMapRef) *ServiceTemplateSpecContainerEnvFromConfigMapRef {
		return &v
	}).(ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput)
}

// The Secret to select from.  Structure is documented below.
func (o ServiceTemplateSpecContainerEnvFromConfigMapRefOutput) LocalObjectReference() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromConfigMapRef) *ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference {
		return v.LocalObjectReference
	}).(ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput)
}

// Specify whether the Secret must be defined
func (o ServiceTemplateSpecContainerEnvFromConfigMapRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromConfigMapRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerEnvFromConfigMapRef)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput) Elem() ServiceTemplateSpecContainerEnvFromConfigMapRefOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromConfigMapRef) ServiceTemplateSpecContainerEnvFromConfigMapRef {
		return *v
	}).(ServiceTemplateSpecContainerEnvFromConfigMapRefOutput)
}

// The Secret to select from.  Structure is documented below.
func (o ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput) LocalObjectReference() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromConfigMapRef) *ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference {
		if v == nil {
			return nil
		}
		return v.LocalObjectReference
	}).(ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput)
}

// Specify whether the Secret must be defined
func (o ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromConfigMapRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference struct {
	// Name of the environment variable.
	Name string `pulumi:"name"`
}

// ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceInput is an input type that accepts ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs and ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs{...}
//
type ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput
	ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput
}

type ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs struct {
	// Name of the environment variable.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput {
	return i.ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput)
}

func (i ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return i.ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput).ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutputWithContext(ctx)
}

// ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrInput is an input type that accepts ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs, ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtr and ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput
	ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput
}

type serviceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrType ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs

func ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtr(v *ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrInput {
	return (*serviceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrType)(v)
}

func (*serviceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference)(nil)).Elem()
}

func (i *serviceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrType) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return i.ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutputWithContext(context.Background())
}

func (i *serviceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrType) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput)
}

type ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return o.ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutputWithContext(context.Background())
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference) *ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference {
		return &v
	}).(ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput)
}

// Name of the environment variable.
func (o ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference) string { return v.Name }).(pulumi.StringOutput)
}

type ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput) ToServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput) Elem() ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference) ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference {
		return *v
	}).(ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput)
}

// Name of the environment variable.
func (o ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReference) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ServiceTemplateSpecContainerEnvFromSecretRef struct {
	// The Secret to select from.  Structure is documented below.
	LocalObjectReference *ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference `pulumi:"localObjectReference"`
	// Specify whether the Secret must be defined
	Optional *bool `pulumi:"optional"`
}

// ServiceTemplateSpecContainerEnvFromSecretRefInput is an input type that accepts ServiceTemplateSpecContainerEnvFromSecretRefArgs and ServiceTemplateSpecContainerEnvFromSecretRefOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromSecretRefInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromSecretRefArgs{...}
//
type ServiceTemplateSpecContainerEnvFromSecretRefInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromSecretRefOutput() ServiceTemplateSpecContainerEnvFromSecretRefOutput
	ToServiceTemplateSpecContainerEnvFromSecretRefOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromSecretRefOutput
}

type ServiceTemplateSpecContainerEnvFromSecretRefArgs struct {
	// The Secret to select from.  Structure is documented below.
	LocalObjectReference ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrInput `pulumi:"localObjectReference"`
	// Specify whether the Secret must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (ServiceTemplateSpecContainerEnvFromSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFromSecretRef)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerEnvFromSecretRefArgs) ToServiceTemplateSpecContainerEnvFromSecretRefOutput() ServiceTemplateSpecContainerEnvFromSecretRefOutput {
	return i.ToServiceTemplateSpecContainerEnvFromSecretRefOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromSecretRefArgs) ToServiceTemplateSpecContainerEnvFromSecretRefOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromSecretRefOutput)
}

func (i ServiceTemplateSpecContainerEnvFromSecretRefArgs) ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput {
	return i.ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromSecretRefArgs) ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromSecretRefOutput).ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutputWithContext(ctx)
}

// ServiceTemplateSpecContainerEnvFromSecretRefPtrInput is an input type that accepts ServiceTemplateSpecContainerEnvFromSecretRefArgs, ServiceTemplateSpecContainerEnvFromSecretRefPtr and ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromSecretRefPtrInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromSecretRefArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceTemplateSpecContainerEnvFromSecretRefPtrInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput
	ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput
}

type serviceTemplateSpecContainerEnvFromSecretRefPtrType ServiceTemplateSpecContainerEnvFromSecretRefArgs

func ServiceTemplateSpecContainerEnvFromSecretRefPtr(v *ServiceTemplateSpecContainerEnvFromSecretRefArgs) ServiceTemplateSpecContainerEnvFromSecretRefPtrInput {
	return (*serviceTemplateSpecContainerEnvFromSecretRefPtrType)(v)
}

func (*serviceTemplateSpecContainerEnvFromSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerEnvFromSecretRef)(nil)).Elem()
}

func (i *serviceTemplateSpecContainerEnvFromSecretRefPtrType) ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput {
	return i.ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutputWithContext(context.Background())
}

func (i *serviceTemplateSpecContainerEnvFromSecretRefPtrType) ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput)
}

type ServiceTemplateSpecContainerEnvFromSecretRefOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFromSecretRef)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefOutput) ToServiceTemplateSpecContainerEnvFromSecretRefOutput() ServiceTemplateSpecContainerEnvFromSecretRefOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefOutput) ToServiceTemplateSpecContainerEnvFromSecretRefOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefOutput) ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput {
	return o.ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutputWithContext(context.Background())
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefOutput) ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromSecretRef) *ServiceTemplateSpecContainerEnvFromSecretRef {
		return &v
	}).(ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput)
}

// The Secret to select from.  Structure is documented below.
func (o ServiceTemplateSpecContainerEnvFromSecretRefOutput) LocalObjectReference() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromSecretRef) *ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference {
		return v.LocalObjectReference
	}).(ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput)
}

// Specify whether the Secret must be defined
func (o ServiceTemplateSpecContainerEnvFromSecretRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromSecretRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerEnvFromSecretRef)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput) ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput) ToServiceTemplateSpecContainerEnvFromSecretRefPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput) Elem() ServiceTemplateSpecContainerEnvFromSecretRefOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromSecretRef) ServiceTemplateSpecContainerEnvFromSecretRef {
		return *v
	}).(ServiceTemplateSpecContainerEnvFromSecretRefOutput)
}

// The Secret to select from.  Structure is documented below.
func (o ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput) LocalObjectReference() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromSecretRef) *ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference {
		if v == nil {
			return nil
		}
		return v.LocalObjectReference
	}).(ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput)
}

// Specify whether the Secret must be defined
func (o ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromSecretRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference struct {
	// Name of the environment variable.
	Name string `pulumi:"name"`
}

// ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceInput is an input type that accepts ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs and ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs{...}
//
type ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput
	ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput
}

type ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs struct {
	// Name of the environment variable.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput {
	return i.ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput)
}

func (i ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return i.ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput).ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutputWithContext(ctx)
}

// ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrInput is an input type that accepts ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs, ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtr and ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrInput` via:
//
// 		 ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput
	ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutputWithContext(context.Context) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput
}

type serviceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrType ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs

func ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtr(v *ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrInput {
	return (*serviceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrType)(v)
}

func (*serviceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference)(nil)).Elem()
}

func (i *serviceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrType) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return i.ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutputWithContext(context.Background())
}

func (i *serviceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrType) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput)
}

type ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return o.ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutputWithContext(context.Background())
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference) *ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference {
		return &v
	}).(ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput)
}

// Name of the environment variable.
func (o ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference) string { return v.Name }).(pulumi.StringOutput)
}

type ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput) ToServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput) Elem() ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference) ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference {
		return *v
	}).(ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput)
}

// Name of the environment variable.
func (o ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReference) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ServiceTemplateSpecContainerResources struct {
	// Limits describes the maximum amount of compute resources allowed.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	Limits map[string]string `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is
	// explicitly specified, otherwise to an implementation-defined value.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	Requests map[string]string `pulumi:"requests"`
}

// ServiceTemplateSpecContainerResourcesInput is an input type that accepts ServiceTemplateSpecContainerResourcesArgs and ServiceTemplateSpecContainerResourcesOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerResourcesInput` via:
//
// 		 ServiceTemplateSpecContainerResourcesArgs{...}
//
type ServiceTemplateSpecContainerResourcesInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerResourcesOutput() ServiceTemplateSpecContainerResourcesOutput
	ToServiceTemplateSpecContainerResourcesOutputWithContext(context.Context) ServiceTemplateSpecContainerResourcesOutput
}

type ServiceTemplateSpecContainerResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is
	// explicitly specified, otherwise to an implementation-defined value.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (ServiceTemplateSpecContainerResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerResources)(nil)).Elem()
}

func (i ServiceTemplateSpecContainerResourcesArgs) ToServiceTemplateSpecContainerResourcesOutput() ServiceTemplateSpecContainerResourcesOutput {
	return i.ToServiceTemplateSpecContainerResourcesOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerResourcesArgs) ToServiceTemplateSpecContainerResourcesOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerResourcesOutput)
}

func (i ServiceTemplateSpecContainerResourcesArgs) ToServiceTemplateSpecContainerResourcesPtrOutput() ServiceTemplateSpecContainerResourcesPtrOutput {
	return i.ToServiceTemplateSpecContainerResourcesPtrOutputWithContext(context.Background())
}

func (i ServiceTemplateSpecContainerResourcesArgs) ToServiceTemplateSpecContainerResourcesPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerResourcesOutput).ToServiceTemplateSpecContainerResourcesPtrOutputWithContext(ctx)
}

// ServiceTemplateSpecContainerResourcesPtrInput is an input type that accepts ServiceTemplateSpecContainerResourcesArgs, ServiceTemplateSpecContainerResourcesPtr and ServiceTemplateSpecContainerResourcesPtrOutput values.
// You can construct a concrete instance of `ServiceTemplateSpecContainerResourcesPtrInput` via:
//
// 		 ServiceTemplateSpecContainerResourcesArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceTemplateSpecContainerResourcesPtrInput interface {
	pulumi.Input

	ToServiceTemplateSpecContainerResourcesPtrOutput() ServiceTemplateSpecContainerResourcesPtrOutput
	ToServiceTemplateSpecContainerResourcesPtrOutputWithContext(context.Context) ServiceTemplateSpecContainerResourcesPtrOutput
}

type serviceTemplateSpecContainerResourcesPtrType ServiceTemplateSpecContainerResourcesArgs

func ServiceTemplateSpecContainerResourcesPtr(v *ServiceTemplateSpecContainerResourcesArgs) ServiceTemplateSpecContainerResourcesPtrInput {
	return (*serviceTemplateSpecContainerResourcesPtrType)(v)
}

func (*serviceTemplateSpecContainerResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerResources)(nil)).Elem()
}

func (i *serviceTemplateSpecContainerResourcesPtrType) ToServiceTemplateSpecContainerResourcesPtrOutput() ServiceTemplateSpecContainerResourcesPtrOutput {
	return i.ToServiceTemplateSpecContainerResourcesPtrOutputWithContext(context.Background())
}

func (i *serviceTemplateSpecContainerResourcesPtrType) ToServiceTemplateSpecContainerResourcesPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateSpecContainerResourcesPtrOutput)
}

type ServiceTemplateSpecContainerResourcesOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTemplateSpecContainerResources)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerResourcesOutput) ToServiceTemplateSpecContainerResourcesOutput() ServiceTemplateSpecContainerResourcesOutput {
	return o
}

func (o ServiceTemplateSpecContainerResourcesOutput) ToServiceTemplateSpecContainerResourcesOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerResourcesOutput {
	return o
}

func (o ServiceTemplateSpecContainerResourcesOutput) ToServiceTemplateSpecContainerResourcesPtrOutput() ServiceTemplateSpecContainerResourcesPtrOutput {
	return o.ToServiceTemplateSpecContainerResourcesPtrOutputWithContext(context.Background())
}

func (o ServiceTemplateSpecContainerResourcesOutput) ToServiceTemplateSpecContainerResourcesPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerResourcesPtrOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerResources) *ServiceTemplateSpecContainerResources {
		return &v
	}).(ServiceTemplateSpecContainerResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// The values of the map is string form of the 'quantity' k8s type:
// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
func (o ServiceTemplateSpecContainerResourcesOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerResources) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is
// explicitly specified, otherwise to an implementation-defined value.
// The values of the map is string form of the 'quantity' k8s type:
// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
func (o ServiceTemplateSpecContainerResourcesOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceTemplateSpecContainerResources) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type ServiceTemplateSpecContainerResourcesPtrOutput struct{ *pulumi.OutputState }

func (ServiceTemplateSpecContainerResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplateSpecContainerResources)(nil)).Elem()
}

func (o ServiceTemplateSpecContainerResourcesPtrOutput) ToServiceTemplateSpecContainerResourcesPtrOutput() ServiceTemplateSpecContainerResourcesPtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerResourcesPtrOutput) ToServiceTemplateSpecContainerResourcesPtrOutputWithContext(ctx context.Context) ServiceTemplateSpecContainerResourcesPtrOutput {
	return o
}

func (o ServiceTemplateSpecContainerResourcesPtrOutput) Elem() ServiceTemplateSpecContainerResourcesOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerResources) ServiceTemplateSpecContainerResources { return *v }).(ServiceTemplateSpecContainerResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// The values of the map is string form of the 'quantity' k8s type:
// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
func (o ServiceTemplateSpecContainerResourcesPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is
// explicitly specified, otherwise to an implementation-defined value.
// The values of the map is string form of the 'quantity' k8s type:
// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
func (o ServiceTemplateSpecContainerResourcesPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceTemplateSpecContainerResources) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

type ServiceTraffic struct {
	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	LatestRevision *bool `pulumi:"latestRevision"`
	// Percent specifies percent of the traffic to this Revision or Configuration.
	Percent int `pulumi:"percent"`
	// RevisionName of a specific revision to which to send this portion of traffic.
	RevisionName *string `pulumi:"revisionName"`
}

// ServiceTrafficInput is an input type that accepts ServiceTrafficArgs and ServiceTrafficOutput values.
// You can construct a concrete instance of `ServiceTrafficInput` via:
//
// 		 ServiceTrafficArgs{...}
//
type ServiceTrafficInput interface {
	pulumi.Input

	ToServiceTrafficOutput() ServiceTrafficOutput
	ToServiceTrafficOutputWithContext(context.Context) ServiceTrafficOutput
}

type ServiceTrafficArgs struct {
	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	LatestRevision pulumi.BoolPtrInput `pulumi:"latestRevision"`
	// Percent specifies percent of the traffic to this Revision or Configuration.
	Percent pulumi.IntInput `pulumi:"percent"`
	// RevisionName of a specific revision to which to send this portion of traffic.
	RevisionName pulumi.StringPtrInput `pulumi:"revisionName"`
}

func (ServiceTrafficArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTraffic)(nil)).Elem()
}

func (i ServiceTrafficArgs) ToServiceTrafficOutput() ServiceTrafficOutput {
	return i.ToServiceTrafficOutputWithContext(context.Background())
}

func (i ServiceTrafficArgs) ToServiceTrafficOutputWithContext(ctx context.Context) ServiceTrafficOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrafficOutput)
}

// ServiceTrafficArrayInput is an input type that accepts ServiceTrafficArray and ServiceTrafficArrayOutput values.
// You can construct a concrete instance of `ServiceTrafficArrayInput` via:
//
// 		 ServiceTrafficArray{ ServiceTrafficArgs{...} }
//
type ServiceTrafficArrayInput interface {
	pulumi.Input

	ToServiceTrafficArrayOutput() ServiceTrafficArrayOutput
	ToServiceTrafficArrayOutputWithContext(context.Context) ServiceTrafficArrayOutput
}

type ServiceTrafficArray []ServiceTrafficInput

func (ServiceTrafficArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTraffic)(nil)).Elem()
}

func (i ServiceTrafficArray) ToServiceTrafficArrayOutput() ServiceTrafficArrayOutput {
	return i.ToServiceTrafficArrayOutputWithContext(context.Background())
}

func (i ServiceTrafficArray) ToServiceTrafficArrayOutputWithContext(ctx context.Context) ServiceTrafficArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrafficArrayOutput)
}

type ServiceTrafficOutput struct{ *pulumi.OutputState }

func (ServiceTrafficOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTraffic)(nil)).Elem()
}

func (o ServiceTrafficOutput) ToServiceTrafficOutput() ServiceTrafficOutput {
	return o
}

func (o ServiceTrafficOutput) ToServiceTrafficOutputWithContext(ctx context.Context) ServiceTrafficOutput {
	return o
}

// LatestRevision may be optionally provided to indicate that the latest ready
// Revision of the Configuration should be used for this traffic target. When
// provided LatestRevision must be true if RevisionName is empty; it must be
// false when RevisionName is non-empty.
func (o ServiceTrafficOutput) LatestRevision() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceTraffic) *bool { return v.LatestRevision }).(pulumi.BoolPtrOutput)
}

// Percent specifies percent of the traffic to this Revision or Configuration.
func (o ServiceTrafficOutput) Percent() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceTraffic) int { return v.Percent }).(pulumi.IntOutput)
}

// RevisionName of a specific revision to which to send this portion of traffic.
func (o ServiceTrafficOutput) RevisionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTraffic) *string { return v.RevisionName }).(pulumi.StringPtrOutput)
}

type ServiceTrafficArrayOutput struct{ *pulumi.OutputState }

func (ServiceTrafficArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTraffic)(nil)).Elem()
}

func (o ServiceTrafficArrayOutput) ToServiceTrafficArrayOutput() ServiceTrafficArrayOutput {
	return o
}

func (o ServiceTrafficArrayOutput) ToServiceTrafficArrayOutputWithContext(ctx context.Context) ServiceTrafficArrayOutput {
	return o
}

func (o ServiceTrafficArrayOutput) Index(i pulumi.IntInput) ServiceTrafficOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceTraffic {
		return vs[0].([]ServiceTraffic)[vs[1].(int)]
	}).(ServiceTrafficOutput)
}

func init() {
	pulumi.RegisterOutputType(DomainMappingMetadataOutput{})
	pulumi.RegisterOutputType(DomainMappingMetadataPtrOutput{})
	pulumi.RegisterOutputType(DomainMappingSpecOutput{})
	pulumi.RegisterOutputType(DomainMappingSpecPtrOutput{})
	pulumi.RegisterOutputType(DomainMappingStatusOutput{})
	pulumi.RegisterOutputType(DomainMappingStatusPtrOutput{})
	pulumi.RegisterOutputType(DomainMappingStatusConditionOutput{})
	pulumi.RegisterOutputType(DomainMappingStatusConditionArrayOutput{})
	pulumi.RegisterOutputType(DomainMappingStatusResourceRecordOutput{})
	pulumi.RegisterOutputType(DomainMappingStatusResourceRecordArrayOutput{})
	pulumi.RegisterOutputType(IamBindingConditionOutput{})
	pulumi.RegisterOutputType(IamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(IamMemberConditionOutput{})
	pulumi.RegisterOutputType(IamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(ServiceMetadataOutput{})
	pulumi.RegisterOutputType(ServiceMetadataPtrOutput{})
	pulumi.RegisterOutputType(ServiceStatusOutput{})
	pulumi.RegisterOutputType(ServiceStatusPtrOutput{})
	pulumi.RegisterOutputType(ServiceStatusConditionOutput{})
	pulumi.RegisterOutputType(ServiceStatusConditionArrayOutput{})
	pulumi.RegisterOutputType(ServiceTemplateOutput{})
	pulumi.RegisterOutputType(ServiceTemplatePtrOutput{})
	pulumi.RegisterOutputType(ServiceTemplateMetadataOutput{})
	pulumi.RegisterOutputType(ServiceTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerArrayOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvArrayOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromArrayOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromConfigMapRefOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromConfigMapRefPtrOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferencePtrOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromSecretRefOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferencePtrOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerResourcesOutput{})
	pulumi.RegisterOutputType(ServiceTemplateSpecContainerResourcesPtrOutput{})
	pulumi.RegisterOutputType(ServiceTrafficOutput{})
	pulumi.RegisterOutputType(ServiceTrafficArrayOutput{})
}
