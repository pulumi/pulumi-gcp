// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firebase

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An app's reCAPTCHA V3 configuration object.
//
// To get more information about RecaptchaV3Config, see:
//
// * [API documentation](https://firebase.google.com/docs/reference/appcheck/rest/v1/projects.apps.recaptchaV3Config)
// * How-to Guides
//   - [Official Documentation](https://firebase.google.com/docs/app-check)
//
// ## Example Usage
//
// ### Firebase App Check Recaptcha V3 Config Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/firebase"
//	"github.com/pulumi/pulumi-time/sdk/go/time"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := firebase.NewWebApp(ctx, "default", &firebase.WebAppArgs{
//				Project:     pulumi.String("my-project-name"),
//				DisplayName: pulumi.String("Web App for reCAPTCHA V3"),
//			})
//			if err != nil {
//				return err
//			}
//			// It takes a while for App Check to recognize the new app
//			// If your app already exists, you don't have to wait 30 seconds.
//			_, err = time.NewSleep(ctx, "wait_30s", &time.SleepArgs{
//				CreateDuration: "30s",
//			})
//			if err != nil {
//				return err
//			}
//			_, err = firebase.NewAppCheckRecaptchaV3Config(ctx, "default", &firebase.AppCheckRecaptchaV3ConfigArgs{
//				Project:    pulumi.String("my-project-name"),
//				AppId:      _default.AppId,
//				SiteSecret: pulumi.String("6Lf9YnQpAAAAAC3-MHmdAllTbPwTZxpUw5d34YzX"),
//				TokenTtl:   pulumi.String("7200s"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RecaptchaV3Config can be imported using any of these accepted formats:
//
// * `projects/{{project}}/apps/{{app_id}}/recaptchaV3Config`
//
// * `{{project}}/{{app_id}}`
//
// * `{{app_id}}`
//
// When using the `pulumi import` command, RecaptchaV3Config can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:firebase/appCheckRecaptchaV3Config:AppCheckRecaptchaV3Config default projects/{{project}}/apps/{{app_id}}/recaptchaV3Config
// ```
//
// ```sh
// $ pulumi import gcp:firebase/appCheckRecaptchaV3Config:AppCheckRecaptchaV3Config default {{project}}/{{app_id}}
// ```
//
// ```sh
// $ pulumi import gcp:firebase/appCheckRecaptchaV3Config:AppCheckRecaptchaV3Config default {{app_id}}
// ```
type AppCheckRecaptchaV3Config struct {
	pulumi.CustomResourceState

	// The ID of an
	// [Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	//
	// ***
	AppId pulumi.StringOutput `pulumi:"appId"`
	// The relative resource name of the reCAPTCHA V3 configuration object
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The site secret used to identify your service for reCAPTCHA v3 verification.
	// For security reasons, this field will never be populated in any response.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	SiteSecret pulumi.StringOutput `pulumi:"siteSecret"`
	// Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way to find out whether it was previously set.
	SiteSecretSet pulumi.BoolOutput `pulumi:"siteSecretSet"`
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl pulumi.StringOutput `pulumi:"tokenTtl"`
}

// NewAppCheckRecaptchaV3Config registers a new resource with the given unique name, arguments, and options.
func NewAppCheckRecaptchaV3Config(ctx *pulumi.Context,
	name string, args *AppCheckRecaptchaV3ConfigArgs, opts ...pulumi.ResourceOption) (*AppCheckRecaptchaV3Config, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.SiteSecret == nil {
		return nil, errors.New("invalid value for required argument 'SiteSecret'")
	}
	if args.SiteSecret != nil {
		args.SiteSecret = pulumi.ToSecret(args.SiteSecret).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"siteSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppCheckRecaptchaV3Config
	err := ctx.RegisterResource("gcp:firebase/appCheckRecaptchaV3Config:AppCheckRecaptchaV3Config", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppCheckRecaptchaV3Config gets an existing AppCheckRecaptchaV3Config resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppCheckRecaptchaV3Config(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppCheckRecaptchaV3ConfigState, opts ...pulumi.ResourceOption) (*AppCheckRecaptchaV3Config, error) {
	var resource AppCheckRecaptchaV3Config
	err := ctx.ReadResource("gcp:firebase/appCheckRecaptchaV3Config:AppCheckRecaptchaV3Config", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppCheckRecaptchaV3Config resources.
type appCheckRecaptchaV3ConfigState struct {
	// The ID of an
	// [Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	//
	// ***
	AppId *string `pulumi:"appId"`
	// The relative resource name of the reCAPTCHA V3 configuration object
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The site secret used to identify your service for reCAPTCHA v3 verification.
	// For security reasons, this field will never be populated in any response.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	SiteSecret *string `pulumi:"siteSecret"`
	// Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way to find out whether it was previously set.
	SiteSecretSet *bool `pulumi:"siteSecretSet"`
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl *string `pulumi:"tokenTtl"`
}

type AppCheckRecaptchaV3ConfigState struct {
	// The ID of an
	// [Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	//
	// ***
	AppId pulumi.StringPtrInput
	// The relative resource name of the reCAPTCHA V3 configuration object
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The site secret used to identify your service for reCAPTCHA v3 verification.
	// For security reasons, this field will never be populated in any response.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	SiteSecret pulumi.StringPtrInput
	// Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way to find out whether it was previously set.
	SiteSecretSet pulumi.BoolPtrInput
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl pulumi.StringPtrInput
}

func (AppCheckRecaptchaV3ConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*appCheckRecaptchaV3ConfigState)(nil)).Elem()
}

type appCheckRecaptchaV3ConfigArgs struct {
	// The ID of an
	// [Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	//
	// ***
	AppId string `pulumi:"appId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The site secret used to identify your service for reCAPTCHA v3 verification.
	// For security reasons, this field will never be populated in any response.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	SiteSecret string `pulumi:"siteSecret"`
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl *string `pulumi:"tokenTtl"`
}

// The set of arguments for constructing a AppCheckRecaptchaV3Config resource.
type AppCheckRecaptchaV3ConfigArgs struct {
	// The ID of an
	// [Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	//
	// ***
	AppId pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The site secret used to identify your service for reCAPTCHA v3 verification.
	// For security reasons, this field will never be populated in any response.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	SiteSecret pulumi.StringInput
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl pulumi.StringPtrInput
}

func (AppCheckRecaptchaV3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appCheckRecaptchaV3ConfigArgs)(nil)).Elem()
}

type AppCheckRecaptchaV3ConfigInput interface {
	pulumi.Input

	ToAppCheckRecaptchaV3ConfigOutput() AppCheckRecaptchaV3ConfigOutput
	ToAppCheckRecaptchaV3ConfigOutputWithContext(ctx context.Context) AppCheckRecaptchaV3ConfigOutput
}

func (*AppCheckRecaptchaV3Config) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCheckRecaptchaV3Config)(nil)).Elem()
}

func (i *AppCheckRecaptchaV3Config) ToAppCheckRecaptchaV3ConfigOutput() AppCheckRecaptchaV3ConfigOutput {
	return i.ToAppCheckRecaptchaV3ConfigOutputWithContext(context.Background())
}

func (i *AppCheckRecaptchaV3Config) ToAppCheckRecaptchaV3ConfigOutputWithContext(ctx context.Context) AppCheckRecaptchaV3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCheckRecaptchaV3ConfigOutput)
}

// AppCheckRecaptchaV3ConfigArrayInput is an input type that accepts AppCheckRecaptchaV3ConfigArray and AppCheckRecaptchaV3ConfigArrayOutput values.
// You can construct a concrete instance of `AppCheckRecaptchaV3ConfigArrayInput` via:
//
//	AppCheckRecaptchaV3ConfigArray{ AppCheckRecaptchaV3ConfigArgs{...} }
type AppCheckRecaptchaV3ConfigArrayInput interface {
	pulumi.Input

	ToAppCheckRecaptchaV3ConfigArrayOutput() AppCheckRecaptchaV3ConfigArrayOutput
	ToAppCheckRecaptchaV3ConfigArrayOutputWithContext(context.Context) AppCheckRecaptchaV3ConfigArrayOutput
}

type AppCheckRecaptchaV3ConfigArray []AppCheckRecaptchaV3ConfigInput

func (AppCheckRecaptchaV3ConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppCheckRecaptchaV3Config)(nil)).Elem()
}

func (i AppCheckRecaptchaV3ConfigArray) ToAppCheckRecaptchaV3ConfigArrayOutput() AppCheckRecaptchaV3ConfigArrayOutput {
	return i.ToAppCheckRecaptchaV3ConfigArrayOutputWithContext(context.Background())
}

func (i AppCheckRecaptchaV3ConfigArray) ToAppCheckRecaptchaV3ConfigArrayOutputWithContext(ctx context.Context) AppCheckRecaptchaV3ConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCheckRecaptchaV3ConfigArrayOutput)
}

// AppCheckRecaptchaV3ConfigMapInput is an input type that accepts AppCheckRecaptchaV3ConfigMap and AppCheckRecaptchaV3ConfigMapOutput values.
// You can construct a concrete instance of `AppCheckRecaptchaV3ConfigMapInput` via:
//
//	AppCheckRecaptchaV3ConfigMap{ "key": AppCheckRecaptchaV3ConfigArgs{...} }
type AppCheckRecaptchaV3ConfigMapInput interface {
	pulumi.Input

	ToAppCheckRecaptchaV3ConfigMapOutput() AppCheckRecaptchaV3ConfigMapOutput
	ToAppCheckRecaptchaV3ConfigMapOutputWithContext(context.Context) AppCheckRecaptchaV3ConfigMapOutput
}

type AppCheckRecaptchaV3ConfigMap map[string]AppCheckRecaptchaV3ConfigInput

func (AppCheckRecaptchaV3ConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppCheckRecaptchaV3Config)(nil)).Elem()
}

func (i AppCheckRecaptchaV3ConfigMap) ToAppCheckRecaptchaV3ConfigMapOutput() AppCheckRecaptchaV3ConfigMapOutput {
	return i.ToAppCheckRecaptchaV3ConfigMapOutputWithContext(context.Background())
}

func (i AppCheckRecaptchaV3ConfigMap) ToAppCheckRecaptchaV3ConfigMapOutputWithContext(ctx context.Context) AppCheckRecaptchaV3ConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCheckRecaptchaV3ConfigMapOutput)
}

type AppCheckRecaptchaV3ConfigOutput struct{ *pulumi.OutputState }

func (AppCheckRecaptchaV3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCheckRecaptchaV3Config)(nil)).Elem()
}

func (o AppCheckRecaptchaV3ConfigOutput) ToAppCheckRecaptchaV3ConfigOutput() AppCheckRecaptchaV3ConfigOutput {
	return o
}

func (o AppCheckRecaptchaV3ConfigOutput) ToAppCheckRecaptchaV3ConfigOutputWithContext(ctx context.Context) AppCheckRecaptchaV3ConfigOutput {
	return o
}

// The ID of an
// [Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
//
// ***
func (o AppCheckRecaptchaV3ConfigOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCheckRecaptchaV3Config) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

// The relative resource name of the reCAPTCHA V3 configuration object
func (o AppCheckRecaptchaV3ConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCheckRecaptchaV3Config) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o AppCheckRecaptchaV3ConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCheckRecaptchaV3Config) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The site secret used to identify your service for reCAPTCHA v3 verification.
// For security reasons, this field will never be populated in any response.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o AppCheckRecaptchaV3ConfigOutput) SiteSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCheckRecaptchaV3Config) pulumi.StringOutput { return v.SiteSecret }).(pulumi.StringOutput)
}

// Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way to find out whether it was previously set.
func (o AppCheckRecaptchaV3ConfigOutput) SiteSecretSet() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppCheckRecaptchaV3Config) pulumi.BoolOutput { return v.SiteSecretSet }).(pulumi.BoolOutput)
}

// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid.
// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o AppCheckRecaptchaV3ConfigOutput) TokenTtl() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCheckRecaptchaV3Config) pulumi.StringOutput { return v.TokenTtl }).(pulumi.StringOutput)
}

type AppCheckRecaptchaV3ConfigArrayOutput struct{ *pulumi.OutputState }

func (AppCheckRecaptchaV3ConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppCheckRecaptchaV3Config)(nil)).Elem()
}

func (o AppCheckRecaptchaV3ConfigArrayOutput) ToAppCheckRecaptchaV3ConfigArrayOutput() AppCheckRecaptchaV3ConfigArrayOutput {
	return o
}

func (o AppCheckRecaptchaV3ConfigArrayOutput) ToAppCheckRecaptchaV3ConfigArrayOutputWithContext(ctx context.Context) AppCheckRecaptchaV3ConfigArrayOutput {
	return o
}

func (o AppCheckRecaptchaV3ConfigArrayOutput) Index(i pulumi.IntInput) AppCheckRecaptchaV3ConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppCheckRecaptchaV3Config {
		return vs[0].([]*AppCheckRecaptchaV3Config)[vs[1].(int)]
	}).(AppCheckRecaptchaV3ConfigOutput)
}

type AppCheckRecaptchaV3ConfigMapOutput struct{ *pulumi.OutputState }

func (AppCheckRecaptchaV3ConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppCheckRecaptchaV3Config)(nil)).Elem()
}

func (o AppCheckRecaptchaV3ConfigMapOutput) ToAppCheckRecaptchaV3ConfigMapOutput() AppCheckRecaptchaV3ConfigMapOutput {
	return o
}

func (o AppCheckRecaptchaV3ConfigMapOutput) ToAppCheckRecaptchaV3ConfigMapOutputWithContext(ctx context.Context) AppCheckRecaptchaV3ConfigMapOutput {
	return o
}

func (o AppCheckRecaptchaV3ConfigMapOutput) MapIndex(k pulumi.StringInput) AppCheckRecaptchaV3ConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppCheckRecaptchaV3Config {
		return vs[0].(map[string]*AppCheckRecaptchaV3Config)[vs[1].(string)]
	}).(AppCheckRecaptchaV3ConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppCheckRecaptchaV3ConfigInput)(nil)).Elem(), &AppCheckRecaptchaV3Config{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCheckRecaptchaV3ConfigArrayInput)(nil)).Elem(), AppCheckRecaptchaV3ConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCheckRecaptchaV3ConfigMapInput)(nil)).Elem(), AppCheckRecaptchaV3ConfigMap{})
	pulumi.RegisterOutputType(AppCheckRecaptchaV3ConfigOutput{})
	pulumi.RegisterOutputType(AppCheckRecaptchaV3ConfigArrayOutput{})
	pulumi.RegisterOutputType(AppCheckRecaptchaV3ConfigMapOutput{})
}
