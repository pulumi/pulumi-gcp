// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firebase

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An app's App Attest configuration object. Note that the Team ID registered with your
// app is used as part of the validation process. Make sure your `firebase.AppleApp` has a teamId present.
//
// To get more information about AppAttestConfig, see:
//
// * [API documentation](https://firebase.google.com/docs/reference/appcheck/rest/v1/projects.apps.appAttestConfig)
// * How-to Guides
//   - [Official Documentation](https://firebase.google.com/docs/app-check)
//
// ## Example Usage
//
// ### Firebase App Check App Attest Config Minimal
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/firebase"
//	"github.com/pulumi/pulumi-time/sdk/go/time"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := firebase.NewAppleApp(ctx, "default", &firebase.AppleAppArgs{
//				Project:     pulumi.String("my-project-name"),
//				DisplayName: pulumi.String("Apple app"),
//				BundleId:    pulumi.String("bundle.id.appattest"),
//				TeamId:      pulumi.String("9987654321"),
//			})
//			if err != nil {
//				return err
//			}
//			// It takes a while for App Check to recognize the new app
//			// If your app already exists, you don't have to wait 30 seconds.
//			wait30s, err := time.NewSleep(ctx, "wait_30s", &time.SleepArgs{
//				CreateDuration: "30s",
//			}, pulumi.DependsOn([]pulumi.Resource{
//				_default,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = firebase.NewAppCheckAppAttestConfig(ctx, "default", &firebase.AppCheckAppAttestConfigArgs{
//				Project: pulumi.String("my-project-name"),
//				AppId:   _default.AppId,
//			}, pulumi.DependsOn([]pulumi.Resource{
//				wait30s,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Firebase App Check App Attest Config Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/firebase"
//	"github.com/pulumi/pulumi-time/sdk/go/time"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := firebase.NewAppleApp(ctx, "default", &firebase.AppleAppArgs{
//				Project:     pulumi.String("my-project-name"),
//				DisplayName: pulumi.String("Apple app"),
//				BundleId:    pulumi.String("bundle.id.appattest"),
//				TeamId:      pulumi.String("9987654321"),
//			})
//			if err != nil {
//				return err
//			}
//			// It takes a while for App Check to recognize the new app
//			// If your app already exists, you don't have to wait 30 seconds.
//			wait30s, err := time.NewSleep(ctx, "wait_30s", &time.SleepArgs{
//				CreateDuration: "30s",
//			}, pulumi.DependsOn([]pulumi.Resource{
//				_default,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = firebase.NewAppCheckAppAttestConfig(ctx, "default", &firebase.AppCheckAppAttestConfigArgs{
//				Project:  pulumi.String("my-project-name"),
//				AppId:    _default.AppId,
//				TokenTtl: pulumi.String("7200s"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				wait30s,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AppAttestConfig can be imported using any of these accepted formats:
//
// * `projects/{{project}}/apps/{{app_id}}/appAttestConfig`
//
// * `{{project}}/{{app_id}}`
//
// * `{{app_id}}`
//
// When using the `pulumi import` command, AppAttestConfig can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:firebase/appCheckAppAttestConfig:AppCheckAppAttestConfig default projects/{{project}}/apps/{{app_id}}/appAttestConfig
// ```
//
// ```sh
// $ pulumi import gcp:firebase/appCheckAppAttestConfig:AppCheckAppAttestConfig default {{project}}/{{app_id}}
// ```
//
// ```sh
// $ pulumi import gcp:firebase/appCheckAppAttestConfig:AppCheckAppAttestConfig default {{app_id}}
// ```
type AppCheckAppAttestConfig struct {
	pulumi.CustomResourceState

	// The ID of an
	// [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
	AppId pulumi.StringOutput `pulumi:"appId"`
	// The relative resource name of the App Attest configuration object
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl pulumi.StringOutput `pulumi:"tokenTtl"`
}

// NewAppCheckAppAttestConfig registers a new resource with the given unique name, arguments, and options.
func NewAppCheckAppAttestConfig(ctx *pulumi.Context,
	name string, args *AppCheckAppAttestConfigArgs, opts ...pulumi.ResourceOption) (*AppCheckAppAttestConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppCheckAppAttestConfig
	err := ctx.RegisterResource("gcp:firebase/appCheckAppAttestConfig:AppCheckAppAttestConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppCheckAppAttestConfig gets an existing AppCheckAppAttestConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppCheckAppAttestConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppCheckAppAttestConfigState, opts ...pulumi.ResourceOption) (*AppCheckAppAttestConfig, error) {
	var resource AppCheckAppAttestConfig
	err := ctx.ReadResource("gcp:firebase/appCheckAppAttestConfig:AppCheckAppAttestConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppCheckAppAttestConfig resources.
type appCheckAppAttestConfigState struct {
	// The ID of an
	// [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
	AppId *string `pulumi:"appId"`
	// The relative resource name of the App Attest configuration object
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl *string `pulumi:"tokenTtl"`
}

type AppCheckAppAttestConfigState struct {
	// The ID of an
	// [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
	AppId pulumi.StringPtrInput
	// The relative resource name of the App Attest configuration object
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl pulumi.StringPtrInput
}

func (AppCheckAppAttestConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*appCheckAppAttestConfigState)(nil)).Elem()
}

type appCheckAppAttestConfigArgs struct {
	// The ID of an
	// [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
	AppId string `pulumi:"appId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl *string `pulumi:"tokenTtl"`
}

// The set of arguments for constructing a AppCheckAppAttestConfig resource.
type AppCheckAppAttestConfigArgs struct {
	// The ID of an
	// [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
	AppId pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid.
	// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
	// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl pulumi.StringPtrInput
}

func (AppCheckAppAttestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appCheckAppAttestConfigArgs)(nil)).Elem()
}

type AppCheckAppAttestConfigInput interface {
	pulumi.Input

	ToAppCheckAppAttestConfigOutput() AppCheckAppAttestConfigOutput
	ToAppCheckAppAttestConfigOutputWithContext(ctx context.Context) AppCheckAppAttestConfigOutput
}

func (*AppCheckAppAttestConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCheckAppAttestConfig)(nil)).Elem()
}

func (i *AppCheckAppAttestConfig) ToAppCheckAppAttestConfigOutput() AppCheckAppAttestConfigOutput {
	return i.ToAppCheckAppAttestConfigOutputWithContext(context.Background())
}

func (i *AppCheckAppAttestConfig) ToAppCheckAppAttestConfigOutputWithContext(ctx context.Context) AppCheckAppAttestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCheckAppAttestConfigOutput)
}

// AppCheckAppAttestConfigArrayInput is an input type that accepts AppCheckAppAttestConfigArray and AppCheckAppAttestConfigArrayOutput values.
// You can construct a concrete instance of `AppCheckAppAttestConfigArrayInput` via:
//
//	AppCheckAppAttestConfigArray{ AppCheckAppAttestConfigArgs{...} }
type AppCheckAppAttestConfigArrayInput interface {
	pulumi.Input

	ToAppCheckAppAttestConfigArrayOutput() AppCheckAppAttestConfigArrayOutput
	ToAppCheckAppAttestConfigArrayOutputWithContext(context.Context) AppCheckAppAttestConfigArrayOutput
}

type AppCheckAppAttestConfigArray []AppCheckAppAttestConfigInput

func (AppCheckAppAttestConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppCheckAppAttestConfig)(nil)).Elem()
}

func (i AppCheckAppAttestConfigArray) ToAppCheckAppAttestConfigArrayOutput() AppCheckAppAttestConfigArrayOutput {
	return i.ToAppCheckAppAttestConfigArrayOutputWithContext(context.Background())
}

func (i AppCheckAppAttestConfigArray) ToAppCheckAppAttestConfigArrayOutputWithContext(ctx context.Context) AppCheckAppAttestConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCheckAppAttestConfigArrayOutput)
}

// AppCheckAppAttestConfigMapInput is an input type that accepts AppCheckAppAttestConfigMap and AppCheckAppAttestConfigMapOutput values.
// You can construct a concrete instance of `AppCheckAppAttestConfigMapInput` via:
//
//	AppCheckAppAttestConfigMap{ "key": AppCheckAppAttestConfigArgs{...} }
type AppCheckAppAttestConfigMapInput interface {
	pulumi.Input

	ToAppCheckAppAttestConfigMapOutput() AppCheckAppAttestConfigMapOutput
	ToAppCheckAppAttestConfigMapOutputWithContext(context.Context) AppCheckAppAttestConfigMapOutput
}

type AppCheckAppAttestConfigMap map[string]AppCheckAppAttestConfigInput

func (AppCheckAppAttestConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppCheckAppAttestConfig)(nil)).Elem()
}

func (i AppCheckAppAttestConfigMap) ToAppCheckAppAttestConfigMapOutput() AppCheckAppAttestConfigMapOutput {
	return i.ToAppCheckAppAttestConfigMapOutputWithContext(context.Background())
}

func (i AppCheckAppAttestConfigMap) ToAppCheckAppAttestConfigMapOutputWithContext(ctx context.Context) AppCheckAppAttestConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCheckAppAttestConfigMapOutput)
}

type AppCheckAppAttestConfigOutput struct{ *pulumi.OutputState }

func (AppCheckAppAttestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCheckAppAttestConfig)(nil)).Elem()
}

func (o AppCheckAppAttestConfigOutput) ToAppCheckAppAttestConfigOutput() AppCheckAppAttestConfigOutput {
	return o
}

func (o AppCheckAppAttestConfigOutput) ToAppCheckAppAttestConfigOutputWithContext(ctx context.Context) AppCheckAppAttestConfigOutput {
	return o
}

// The ID of an
// [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
func (o AppCheckAppAttestConfigOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCheckAppAttestConfig) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

// The relative resource name of the App Attest configuration object
func (o AppCheckAppAttestConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCheckAppAttestConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o AppCheckAppAttestConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCheckAppAttestConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid.
// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o AppCheckAppAttestConfigOutput) TokenTtl() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCheckAppAttestConfig) pulumi.StringOutput { return v.TokenTtl }).(pulumi.StringOutput)
}

type AppCheckAppAttestConfigArrayOutput struct{ *pulumi.OutputState }

func (AppCheckAppAttestConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppCheckAppAttestConfig)(nil)).Elem()
}

func (o AppCheckAppAttestConfigArrayOutput) ToAppCheckAppAttestConfigArrayOutput() AppCheckAppAttestConfigArrayOutput {
	return o
}

func (o AppCheckAppAttestConfigArrayOutput) ToAppCheckAppAttestConfigArrayOutputWithContext(ctx context.Context) AppCheckAppAttestConfigArrayOutput {
	return o
}

func (o AppCheckAppAttestConfigArrayOutput) Index(i pulumi.IntInput) AppCheckAppAttestConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppCheckAppAttestConfig {
		return vs[0].([]*AppCheckAppAttestConfig)[vs[1].(int)]
	}).(AppCheckAppAttestConfigOutput)
}

type AppCheckAppAttestConfigMapOutput struct{ *pulumi.OutputState }

func (AppCheckAppAttestConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppCheckAppAttestConfig)(nil)).Elem()
}

func (o AppCheckAppAttestConfigMapOutput) ToAppCheckAppAttestConfigMapOutput() AppCheckAppAttestConfigMapOutput {
	return o
}

func (o AppCheckAppAttestConfigMapOutput) ToAppCheckAppAttestConfigMapOutputWithContext(ctx context.Context) AppCheckAppAttestConfigMapOutput {
	return o
}

func (o AppCheckAppAttestConfigMapOutput) MapIndex(k pulumi.StringInput) AppCheckAppAttestConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppCheckAppAttestConfig {
		return vs[0].(map[string]*AppCheckAppAttestConfig)[vs[1].(string)]
	}).(AppCheckAppAttestConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppCheckAppAttestConfigInput)(nil)).Elem(), &AppCheckAppAttestConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCheckAppAttestConfigArrayInput)(nil)).Elem(), AppCheckAppAttestConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCheckAppAttestConfigMapInput)(nil)).Elem(), AppCheckAppAttestConfigMap{})
	pulumi.RegisterOutputType(AppCheckAppAttestConfigOutput{})
	pulumi.RegisterOutputType(AppCheckAppAttestConfigArrayOutput{})
	pulumi.RegisterOutputType(AppCheckAppAttestConfigMapOutput{})
}
