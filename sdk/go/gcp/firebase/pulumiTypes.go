// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firebase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ExtensionsInstanceConfig struct {
	// List of extension events selected by consumer that extension is allowed to
	// emit, identified by their types.
	AllowedEventTypes []string `pulumi:"allowedEventTypes"`
	// (Output)
	// The time at which the Extension Instance Config was created.
	CreateTime *string `pulumi:"createTime"`
	// Fully qualified Eventarc resource name that consumers should use for event triggers.
	EventarcChannel *string `pulumi:"eventarcChannel"`
	// The ref of the Extension from the Registry (e.g. publisher-id/awesome-extension)
	ExtensionRef string `pulumi:"extensionRef"`
	// The version of the Extension from the Registry (e.g. 1.0.3). If left blank, latest is assumed.
	ExtensionVersion *string `pulumi:"extensionVersion"`
	// (Output)
	// The unique identifier for this configuration.
	Name *string `pulumi:"name"`
	// Environment variables that may be configured for the Extension
	Params map[string]string `pulumi:"params"`
	// (Output)
	// Postinstall instructions to be shown for this Extension, with
	// template strings representing function and parameter values substituted
	// with actual values. These strings include: ${param:FOO},
	// ${function:myFunc.url},
	// ${function:myFunc.name}, and ${function:myFunc.location}
	//
	// ***
	PopulatedPostinstallContent *string `pulumi:"populatedPostinstallContent"`
	// Params whose values are only available at deployment time.
	// Unlike other params, these will not be set as environment variables on
	// functions.
	SystemParams map[string]string `pulumi:"systemParams"`
}

// ExtensionsInstanceConfigInput is an input type that accepts ExtensionsInstanceConfigArgs and ExtensionsInstanceConfigOutput values.
// You can construct a concrete instance of `ExtensionsInstanceConfigInput` via:
//
//	ExtensionsInstanceConfigArgs{...}
type ExtensionsInstanceConfigInput interface {
	pulumi.Input

	ToExtensionsInstanceConfigOutput() ExtensionsInstanceConfigOutput
	ToExtensionsInstanceConfigOutputWithContext(context.Context) ExtensionsInstanceConfigOutput
}

type ExtensionsInstanceConfigArgs struct {
	// List of extension events selected by consumer that extension is allowed to
	// emit, identified by their types.
	AllowedEventTypes pulumi.StringArrayInput `pulumi:"allowedEventTypes"`
	// (Output)
	// The time at which the Extension Instance Config was created.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Fully qualified Eventarc resource name that consumers should use for event triggers.
	EventarcChannel pulumi.StringPtrInput `pulumi:"eventarcChannel"`
	// The ref of the Extension from the Registry (e.g. publisher-id/awesome-extension)
	ExtensionRef pulumi.StringInput `pulumi:"extensionRef"`
	// The version of the Extension from the Registry (e.g. 1.0.3). If left blank, latest is assumed.
	ExtensionVersion pulumi.StringPtrInput `pulumi:"extensionVersion"`
	// (Output)
	// The unique identifier for this configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Environment variables that may be configured for the Extension
	Params pulumi.StringMapInput `pulumi:"params"`
	// (Output)
	// Postinstall instructions to be shown for this Extension, with
	// template strings representing function and parameter values substituted
	// with actual values. These strings include: ${param:FOO},
	// ${function:myFunc.url},
	// ${function:myFunc.name}, and ${function:myFunc.location}
	//
	// ***
	PopulatedPostinstallContent pulumi.StringPtrInput `pulumi:"populatedPostinstallContent"`
	// Params whose values are only available at deployment time.
	// Unlike other params, these will not be set as environment variables on
	// functions.
	SystemParams pulumi.StringMapInput `pulumi:"systemParams"`
}

func (ExtensionsInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceConfig)(nil)).Elem()
}

func (i ExtensionsInstanceConfigArgs) ToExtensionsInstanceConfigOutput() ExtensionsInstanceConfigOutput {
	return i.ToExtensionsInstanceConfigOutputWithContext(context.Background())
}

func (i ExtensionsInstanceConfigArgs) ToExtensionsInstanceConfigOutputWithContext(ctx context.Context) ExtensionsInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceConfigOutput)
}

func (i ExtensionsInstanceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceConfig] {
	return pulumix.Output[ExtensionsInstanceConfig]{
		OutputState: i.ToExtensionsInstanceConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ExtensionsInstanceConfigArgs) ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput {
	return i.ToExtensionsInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ExtensionsInstanceConfigArgs) ToExtensionsInstanceConfigPtrOutputWithContext(ctx context.Context) ExtensionsInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceConfigOutput).ToExtensionsInstanceConfigPtrOutputWithContext(ctx)
}

// ExtensionsInstanceConfigPtrInput is an input type that accepts ExtensionsInstanceConfigArgs, ExtensionsInstanceConfigPtr and ExtensionsInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ExtensionsInstanceConfigPtrInput` via:
//
//	        ExtensionsInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type ExtensionsInstanceConfigPtrInput interface {
	pulumi.Input

	ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput
	ToExtensionsInstanceConfigPtrOutputWithContext(context.Context) ExtensionsInstanceConfigPtrOutput
}

type extensionsInstanceConfigPtrType ExtensionsInstanceConfigArgs

func ExtensionsInstanceConfigPtr(v *ExtensionsInstanceConfigArgs) ExtensionsInstanceConfigPtrInput {
	return (*extensionsInstanceConfigPtrType)(v)
}

func (*extensionsInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceConfig)(nil)).Elem()
}

func (i *extensionsInstanceConfigPtrType) ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput {
	return i.ToExtensionsInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *extensionsInstanceConfigPtrType) ToExtensionsInstanceConfigPtrOutputWithContext(ctx context.Context) ExtensionsInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceConfigPtrOutput)
}

func (i *extensionsInstanceConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ExtensionsInstanceConfig] {
	return pulumix.Output[*ExtensionsInstanceConfig]{
		OutputState: i.ToExtensionsInstanceConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ExtensionsInstanceConfigOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceConfig)(nil)).Elem()
}

func (o ExtensionsInstanceConfigOutput) ToExtensionsInstanceConfigOutput() ExtensionsInstanceConfigOutput {
	return o
}

func (o ExtensionsInstanceConfigOutput) ToExtensionsInstanceConfigOutputWithContext(ctx context.Context) ExtensionsInstanceConfigOutput {
	return o
}

func (o ExtensionsInstanceConfigOutput) ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput {
	return o.ToExtensionsInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ExtensionsInstanceConfigOutput) ToExtensionsInstanceConfigPtrOutputWithContext(ctx context.Context) ExtensionsInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensionsInstanceConfig) *ExtensionsInstanceConfig {
		return &v
	}).(ExtensionsInstanceConfigPtrOutput)
}

func (o ExtensionsInstanceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceConfig] {
	return pulumix.Output[ExtensionsInstanceConfig]{
		OutputState: o.OutputState,
	}
}

// List of extension events selected by consumer that extension is allowed to
// emit, identified by their types.
func (o ExtensionsInstanceConfigOutput) AllowedEventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) []string { return v.AllowedEventTypes }).(pulumi.StringArrayOutput)
}

// (Output)
// The time at which the Extension Instance Config was created.
func (o ExtensionsInstanceConfigOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Fully qualified Eventarc resource name that consumers should use for event triggers.
func (o ExtensionsInstanceConfigOutput) EventarcChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.EventarcChannel }).(pulumi.StringPtrOutput)
}

// The ref of the Extension from the Registry (e.g. publisher-id/awesome-extension)
func (o ExtensionsInstanceConfigOutput) ExtensionRef() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) string { return v.ExtensionRef }).(pulumi.StringOutput)
}

// The version of the Extension from the Registry (e.g. 1.0.3). If left blank, latest is assumed.
func (o ExtensionsInstanceConfigOutput) ExtensionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.ExtensionVersion }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique identifier for this configuration.
func (o ExtensionsInstanceConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Environment variables that may be configured for the Extension
func (o ExtensionsInstanceConfigOutput) Params() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) map[string]string { return v.Params }).(pulumi.StringMapOutput)
}

// (Output)
// Postinstall instructions to be shown for this Extension, with
// template strings representing function and parameter values substituted
// with actual values. These strings include: ${param:FOO},
// ${function:myFunc.url},
// ${function:myFunc.name}, and ${function:myFunc.location}
//
// ***
func (o ExtensionsInstanceConfigOutput) PopulatedPostinstallContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.PopulatedPostinstallContent }).(pulumi.StringPtrOutput)
}

// Params whose values are only available at deployment time.
// Unlike other params, these will not be set as environment variables on
// functions.
func (o ExtensionsInstanceConfigOutput) SystemParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) map[string]string { return v.SystemParams }).(pulumi.StringMapOutput)
}

type ExtensionsInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceConfig)(nil)).Elem()
}

func (o ExtensionsInstanceConfigPtrOutput) ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput {
	return o
}

func (o ExtensionsInstanceConfigPtrOutput) ToExtensionsInstanceConfigPtrOutputWithContext(ctx context.Context) ExtensionsInstanceConfigPtrOutput {
	return o
}

func (o ExtensionsInstanceConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ExtensionsInstanceConfig] {
	return pulumix.Output[*ExtensionsInstanceConfig]{
		OutputState: o.OutputState,
	}
}

func (o ExtensionsInstanceConfigPtrOutput) Elem() ExtensionsInstanceConfigOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) ExtensionsInstanceConfig {
		if v != nil {
			return *v
		}
		var ret ExtensionsInstanceConfig
		return ret
	}).(ExtensionsInstanceConfigOutput)
}

// List of extension events selected by consumer that extension is allowed to
// emit, identified by their types.
func (o ExtensionsInstanceConfigPtrOutput) AllowedEventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) []string {
		if v == nil {
			return nil
		}
		return v.AllowedEventTypes
	}).(pulumi.StringArrayOutput)
}

// (Output)
// The time at which the Extension Instance Config was created.
func (o ExtensionsInstanceConfigPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Fully qualified Eventarc resource name that consumers should use for event triggers.
func (o ExtensionsInstanceConfigPtrOutput) EventarcChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.EventarcChannel
	}).(pulumi.StringPtrOutput)
}

// The ref of the Extension from the Registry (e.g. publisher-id/awesome-extension)
func (o ExtensionsInstanceConfigPtrOutput) ExtensionRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ExtensionRef
	}).(pulumi.StringPtrOutput)
}

// The version of the Extension from the Registry (e.g. 1.0.3). If left blank, latest is assumed.
func (o ExtensionsInstanceConfigPtrOutput) ExtensionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionVersion
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The unique identifier for this configuration.
func (o ExtensionsInstanceConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Environment variables that may be configured for the Extension
func (o ExtensionsInstanceConfigPtrOutput) Params() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Params
	}).(pulumi.StringMapOutput)
}

// (Output)
// Postinstall instructions to be shown for this Extension, with
// template strings representing function and parameter values substituted
// with actual values. These strings include: ${param:FOO},
// ${function:myFunc.url},
// ${function:myFunc.name}, and ${function:myFunc.location}
//
// ***
func (o ExtensionsInstanceConfigPtrOutput) PopulatedPostinstallContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.PopulatedPostinstallContent
	}).(pulumi.StringPtrOutput)
}

// Params whose values are only available at deployment time.
// Unlike other params, these will not be set as environment variables on
// functions.
func (o ExtensionsInstanceConfigPtrOutput) SystemParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.SystemParams
	}).(pulumi.StringMapOutput)
}

type ExtensionsInstanceErrorStatus struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code *int `pulumi:"code"`
	// A list of messages that carry the error details.
	Details []map[string]interface{} `pulumi:"details"`
	// A developer-facing error message, which should be in English.
	Message *string `pulumi:"message"`
}

// ExtensionsInstanceErrorStatusInput is an input type that accepts ExtensionsInstanceErrorStatusArgs and ExtensionsInstanceErrorStatusOutput values.
// You can construct a concrete instance of `ExtensionsInstanceErrorStatusInput` via:
//
//	ExtensionsInstanceErrorStatusArgs{...}
type ExtensionsInstanceErrorStatusInput interface {
	pulumi.Input

	ToExtensionsInstanceErrorStatusOutput() ExtensionsInstanceErrorStatusOutput
	ToExtensionsInstanceErrorStatusOutputWithContext(context.Context) ExtensionsInstanceErrorStatusOutput
}

type ExtensionsInstanceErrorStatusArgs struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// A list of messages that carry the error details.
	Details pulumi.MapArrayInput `pulumi:"details"`
	// A developer-facing error message, which should be in English.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (ExtensionsInstanceErrorStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceErrorStatus)(nil)).Elem()
}

func (i ExtensionsInstanceErrorStatusArgs) ToExtensionsInstanceErrorStatusOutput() ExtensionsInstanceErrorStatusOutput {
	return i.ToExtensionsInstanceErrorStatusOutputWithContext(context.Background())
}

func (i ExtensionsInstanceErrorStatusArgs) ToExtensionsInstanceErrorStatusOutputWithContext(ctx context.Context) ExtensionsInstanceErrorStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceErrorStatusOutput)
}

func (i ExtensionsInstanceErrorStatusArgs) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceErrorStatus] {
	return pulumix.Output[ExtensionsInstanceErrorStatus]{
		OutputState: i.ToExtensionsInstanceErrorStatusOutputWithContext(ctx).OutputState,
	}
}

// ExtensionsInstanceErrorStatusArrayInput is an input type that accepts ExtensionsInstanceErrorStatusArray and ExtensionsInstanceErrorStatusArrayOutput values.
// You can construct a concrete instance of `ExtensionsInstanceErrorStatusArrayInput` via:
//
//	ExtensionsInstanceErrorStatusArray{ ExtensionsInstanceErrorStatusArgs{...} }
type ExtensionsInstanceErrorStatusArrayInput interface {
	pulumi.Input

	ToExtensionsInstanceErrorStatusArrayOutput() ExtensionsInstanceErrorStatusArrayOutput
	ToExtensionsInstanceErrorStatusArrayOutputWithContext(context.Context) ExtensionsInstanceErrorStatusArrayOutput
}

type ExtensionsInstanceErrorStatusArray []ExtensionsInstanceErrorStatusInput

func (ExtensionsInstanceErrorStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionsInstanceErrorStatus)(nil)).Elem()
}

func (i ExtensionsInstanceErrorStatusArray) ToExtensionsInstanceErrorStatusArrayOutput() ExtensionsInstanceErrorStatusArrayOutput {
	return i.ToExtensionsInstanceErrorStatusArrayOutputWithContext(context.Background())
}

func (i ExtensionsInstanceErrorStatusArray) ToExtensionsInstanceErrorStatusArrayOutputWithContext(ctx context.Context) ExtensionsInstanceErrorStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceErrorStatusArrayOutput)
}

func (i ExtensionsInstanceErrorStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]ExtensionsInstanceErrorStatus] {
	return pulumix.Output[[]ExtensionsInstanceErrorStatus]{
		OutputState: i.ToExtensionsInstanceErrorStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type ExtensionsInstanceErrorStatusOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceErrorStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceErrorStatus)(nil)).Elem()
}

func (o ExtensionsInstanceErrorStatusOutput) ToExtensionsInstanceErrorStatusOutput() ExtensionsInstanceErrorStatusOutput {
	return o
}

func (o ExtensionsInstanceErrorStatusOutput) ToExtensionsInstanceErrorStatusOutputWithContext(ctx context.Context) ExtensionsInstanceErrorStatusOutput {
	return o
}

func (o ExtensionsInstanceErrorStatusOutput) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceErrorStatus] {
	return pulumix.Output[ExtensionsInstanceErrorStatus]{
		OutputState: o.OutputState,
	}
}

// The status code, which should be an enum value of google.rpc.Code.
func (o ExtensionsInstanceErrorStatusOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceErrorStatus) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// A list of messages that carry the error details.
func (o ExtensionsInstanceErrorStatusOutput) Details() pulumi.MapArrayOutput {
	return o.ApplyT(func(v ExtensionsInstanceErrorStatus) []map[string]interface{} { return v.Details }).(pulumi.MapArrayOutput)
}

// A developer-facing error message, which should be in English.
func (o ExtensionsInstanceErrorStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceErrorStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceErrorStatusArrayOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceErrorStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionsInstanceErrorStatus)(nil)).Elem()
}

func (o ExtensionsInstanceErrorStatusArrayOutput) ToExtensionsInstanceErrorStatusArrayOutput() ExtensionsInstanceErrorStatusArrayOutput {
	return o
}

func (o ExtensionsInstanceErrorStatusArrayOutput) ToExtensionsInstanceErrorStatusArrayOutputWithContext(ctx context.Context) ExtensionsInstanceErrorStatusArrayOutput {
	return o
}

func (o ExtensionsInstanceErrorStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ExtensionsInstanceErrorStatus] {
	return pulumix.Output[[]ExtensionsInstanceErrorStatus]{
		OutputState: o.OutputState,
	}
}

func (o ExtensionsInstanceErrorStatusArrayOutput) Index(i pulumi.IntInput) ExtensionsInstanceErrorStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionsInstanceErrorStatus {
		return vs[0].([]ExtensionsInstanceErrorStatus)[vs[1].(int)]
	}).(ExtensionsInstanceErrorStatusOutput)
}

type ExtensionsInstanceRuntimeData struct {
	// The fatal error state for the extension instance
	// Structure is documented below.
	FatalError *ExtensionsInstanceRuntimeDataFatalError `pulumi:"fatalError"`
	// The processing state for the extension instance
	// Structure is documented below.
	ProcessingState *ExtensionsInstanceRuntimeDataProcessingState `pulumi:"processingState"`
	// The time of the last state update.
	StateUpdateTime *string `pulumi:"stateUpdateTime"`
}

// ExtensionsInstanceRuntimeDataInput is an input type that accepts ExtensionsInstanceRuntimeDataArgs and ExtensionsInstanceRuntimeDataOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataInput` via:
//
//	ExtensionsInstanceRuntimeDataArgs{...}
type ExtensionsInstanceRuntimeDataInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataOutput() ExtensionsInstanceRuntimeDataOutput
	ToExtensionsInstanceRuntimeDataOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataOutput
}

type ExtensionsInstanceRuntimeDataArgs struct {
	// The fatal error state for the extension instance
	// Structure is documented below.
	FatalError ExtensionsInstanceRuntimeDataFatalErrorPtrInput `pulumi:"fatalError"`
	// The processing state for the extension instance
	// Structure is documented below.
	ProcessingState ExtensionsInstanceRuntimeDataProcessingStatePtrInput `pulumi:"processingState"`
	// The time of the last state update.
	StateUpdateTime pulumi.StringPtrInput `pulumi:"stateUpdateTime"`
}

func (ExtensionsInstanceRuntimeDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeData)(nil)).Elem()
}

func (i ExtensionsInstanceRuntimeDataArgs) ToExtensionsInstanceRuntimeDataOutput() ExtensionsInstanceRuntimeDataOutput {
	return i.ToExtensionsInstanceRuntimeDataOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataArgs) ToExtensionsInstanceRuntimeDataOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataOutput)
}

func (i ExtensionsInstanceRuntimeDataArgs) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceRuntimeData] {
	return pulumix.Output[ExtensionsInstanceRuntimeData]{
		OutputState: i.ToExtensionsInstanceRuntimeDataOutputWithContext(ctx).OutputState,
	}
}

// ExtensionsInstanceRuntimeDataArrayInput is an input type that accepts ExtensionsInstanceRuntimeDataArray and ExtensionsInstanceRuntimeDataArrayOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataArrayInput` via:
//
//	ExtensionsInstanceRuntimeDataArray{ ExtensionsInstanceRuntimeDataArgs{...} }
type ExtensionsInstanceRuntimeDataArrayInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataArrayOutput() ExtensionsInstanceRuntimeDataArrayOutput
	ToExtensionsInstanceRuntimeDataArrayOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataArrayOutput
}

type ExtensionsInstanceRuntimeDataArray []ExtensionsInstanceRuntimeDataInput

func (ExtensionsInstanceRuntimeDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionsInstanceRuntimeData)(nil)).Elem()
}

func (i ExtensionsInstanceRuntimeDataArray) ToExtensionsInstanceRuntimeDataArrayOutput() ExtensionsInstanceRuntimeDataArrayOutput {
	return i.ToExtensionsInstanceRuntimeDataArrayOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataArray) ToExtensionsInstanceRuntimeDataArrayOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataArrayOutput)
}

func (i ExtensionsInstanceRuntimeDataArray) ToOutput(ctx context.Context) pulumix.Output[[]ExtensionsInstanceRuntimeData] {
	return pulumix.Output[[]ExtensionsInstanceRuntimeData]{
		OutputState: i.ToExtensionsInstanceRuntimeDataArrayOutputWithContext(ctx).OutputState,
	}
}

type ExtensionsInstanceRuntimeDataOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeData)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataOutput) ToExtensionsInstanceRuntimeDataOutput() ExtensionsInstanceRuntimeDataOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataOutput) ToExtensionsInstanceRuntimeDataOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataOutput) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceRuntimeData] {
	return pulumix.Output[ExtensionsInstanceRuntimeData]{
		OutputState: o.OutputState,
	}
}

// The fatal error state for the extension instance
// Structure is documented below.
func (o ExtensionsInstanceRuntimeDataOutput) FatalError() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeData) *ExtensionsInstanceRuntimeDataFatalError { return v.FatalError }).(ExtensionsInstanceRuntimeDataFatalErrorPtrOutput)
}

// The processing state for the extension instance
// Structure is documented below.
func (o ExtensionsInstanceRuntimeDataOutput) ProcessingState() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeData) *ExtensionsInstanceRuntimeDataProcessingState {
		return v.ProcessingState
	}).(ExtensionsInstanceRuntimeDataProcessingStatePtrOutput)
}

// The time of the last state update.
func (o ExtensionsInstanceRuntimeDataOutput) StateUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeData) *string { return v.StateUpdateTime }).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceRuntimeDataArrayOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionsInstanceRuntimeData)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataArrayOutput) ToExtensionsInstanceRuntimeDataArrayOutput() ExtensionsInstanceRuntimeDataArrayOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataArrayOutput) ToExtensionsInstanceRuntimeDataArrayOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataArrayOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ExtensionsInstanceRuntimeData] {
	return pulumix.Output[[]ExtensionsInstanceRuntimeData]{
		OutputState: o.OutputState,
	}
}

func (o ExtensionsInstanceRuntimeDataArrayOutput) Index(i pulumi.IntInput) ExtensionsInstanceRuntimeDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionsInstanceRuntimeData {
		return vs[0].([]ExtensionsInstanceRuntimeData)[vs[1].(int)]
	}).(ExtensionsInstanceRuntimeDataOutput)
}

type ExtensionsInstanceRuntimeDataFatalError struct {
	// The error message. This is set by the extension developer to give
	// more detail on why the extension is unusable and must be re-installed
	// or reconfigured.
	ErrorMessage *string `pulumi:"errorMessage"`
}

// ExtensionsInstanceRuntimeDataFatalErrorInput is an input type that accepts ExtensionsInstanceRuntimeDataFatalErrorArgs and ExtensionsInstanceRuntimeDataFatalErrorOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataFatalErrorInput` via:
//
//	ExtensionsInstanceRuntimeDataFatalErrorArgs{...}
type ExtensionsInstanceRuntimeDataFatalErrorInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataFatalErrorOutput() ExtensionsInstanceRuntimeDataFatalErrorOutput
	ToExtensionsInstanceRuntimeDataFatalErrorOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataFatalErrorOutput
}

type ExtensionsInstanceRuntimeDataFatalErrorArgs struct {
	// The error message. This is set by the extension developer to give
	// more detail on why the extension is unusable and must be re-installed
	// or reconfigured.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
}

func (ExtensionsInstanceRuntimeDataFatalErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeDataFatalError)(nil)).Elem()
}

func (i ExtensionsInstanceRuntimeDataFatalErrorArgs) ToExtensionsInstanceRuntimeDataFatalErrorOutput() ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return i.ToExtensionsInstanceRuntimeDataFatalErrorOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataFatalErrorArgs) ToExtensionsInstanceRuntimeDataFatalErrorOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataFatalErrorOutput)
}

func (i ExtensionsInstanceRuntimeDataFatalErrorArgs) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceRuntimeDataFatalError] {
	return pulumix.Output[ExtensionsInstanceRuntimeDataFatalError]{
		OutputState: i.ToExtensionsInstanceRuntimeDataFatalErrorOutputWithContext(ctx).OutputState,
	}
}

func (i ExtensionsInstanceRuntimeDataFatalErrorArgs) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return i.ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataFatalErrorArgs) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataFatalErrorOutput).ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx)
}

// ExtensionsInstanceRuntimeDataFatalErrorPtrInput is an input type that accepts ExtensionsInstanceRuntimeDataFatalErrorArgs, ExtensionsInstanceRuntimeDataFatalErrorPtr and ExtensionsInstanceRuntimeDataFatalErrorPtrOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataFatalErrorPtrInput` via:
//
//	        ExtensionsInstanceRuntimeDataFatalErrorArgs{...}
//
//	or:
//
//	        nil
type ExtensionsInstanceRuntimeDataFatalErrorPtrInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput
	ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput
}

type extensionsInstanceRuntimeDataFatalErrorPtrType ExtensionsInstanceRuntimeDataFatalErrorArgs

func ExtensionsInstanceRuntimeDataFatalErrorPtr(v *ExtensionsInstanceRuntimeDataFatalErrorArgs) ExtensionsInstanceRuntimeDataFatalErrorPtrInput {
	return (*extensionsInstanceRuntimeDataFatalErrorPtrType)(v)
}

func (*extensionsInstanceRuntimeDataFatalErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceRuntimeDataFatalError)(nil)).Elem()
}

func (i *extensionsInstanceRuntimeDataFatalErrorPtrType) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return i.ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(context.Background())
}

func (i *extensionsInstanceRuntimeDataFatalErrorPtrType) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataFatalErrorPtrOutput)
}

func (i *extensionsInstanceRuntimeDataFatalErrorPtrType) ToOutput(ctx context.Context) pulumix.Output[*ExtensionsInstanceRuntimeDataFatalError] {
	return pulumix.Output[*ExtensionsInstanceRuntimeDataFatalError]{
		OutputState: i.ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx).OutputState,
	}
}

type ExtensionsInstanceRuntimeDataFatalErrorOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataFatalErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeDataFatalError)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ToExtensionsInstanceRuntimeDataFatalErrorOutput() ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ToExtensionsInstanceRuntimeDataFatalErrorOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o.ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(context.Background())
}

func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensionsInstanceRuntimeDataFatalError) *ExtensionsInstanceRuntimeDataFatalError {
		return &v
	}).(ExtensionsInstanceRuntimeDataFatalErrorPtrOutput)
}

func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceRuntimeDataFatalError] {
	return pulumix.Output[ExtensionsInstanceRuntimeDataFatalError]{
		OutputState: o.OutputState,
	}
}

// The error message. This is set by the extension developer to give
// more detail on why the extension is unusable and must be re-installed
// or reconfigured.
func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeDataFatalError) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceRuntimeDataFatalErrorPtrOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceRuntimeDataFatalError)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ExtensionsInstanceRuntimeDataFatalError] {
	return pulumix.Output[*ExtensionsInstanceRuntimeDataFatalError]{
		OutputState: o.OutputState,
	}
}

func (o ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) Elem() ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataFatalError) ExtensionsInstanceRuntimeDataFatalError {
		if v != nil {
			return *v
		}
		var ret ExtensionsInstanceRuntimeDataFatalError
		return ret
	}).(ExtensionsInstanceRuntimeDataFatalErrorOutput)
}

// The error message. This is set by the extension developer to give
// more detail on why the extension is unusable and must be re-installed
// or reconfigured.
func (o ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataFatalError) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceRuntimeDataProcessingState struct {
	// Details about the processing. e.g. This could include the type of
	// processing in progress or it could list errors or failures.
	// This information will be shown in the console on the detail page
	// for the extension instance.
	DetailMessage *string `pulumi:"detailMessage"`
	// The processing state of the extension instance.
	State *string `pulumi:"state"`
}

// ExtensionsInstanceRuntimeDataProcessingStateInput is an input type that accepts ExtensionsInstanceRuntimeDataProcessingStateArgs and ExtensionsInstanceRuntimeDataProcessingStateOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataProcessingStateInput` via:
//
//	ExtensionsInstanceRuntimeDataProcessingStateArgs{...}
type ExtensionsInstanceRuntimeDataProcessingStateInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataProcessingStateOutput() ExtensionsInstanceRuntimeDataProcessingStateOutput
	ToExtensionsInstanceRuntimeDataProcessingStateOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataProcessingStateOutput
}

type ExtensionsInstanceRuntimeDataProcessingStateArgs struct {
	// Details about the processing. e.g. This could include the type of
	// processing in progress or it could list errors or failures.
	// This information will be shown in the console on the detail page
	// for the extension instance.
	DetailMessage pulumi.StringPtrInput `pulumi:"detailMessage"`
	// The processing state of the extension instance.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ExtensionsInstanceRuntimeDataProcessingStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeDataProcessingState)(nil)).Elem()
}

func (i ExtensionsInstanceRuntimeDataProcessingStateArgs) ToExtensionsInstanceRuntimeDataProcessingStateOutput() ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return i.ToExtensionsInstanceRuntimeDataProcessingStateOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataProcessingStateArgs) ToExtensionsInstanceRuntimeDataProcessingStateOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataProcessingStateOutput)
}

func (i ExtensionsInstanceRuntimeDataProcessingStateArgs) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceRuntimeDataProcessingState] {
	return pulumix.Output[ExtensionsInstanceRuntimeDataProcessingState]{
		OutputState: i.ToExtensionsInstanceRuntimeDataProcessingStateOutputWithContext(ctx).OutputState,
	}
}

func (i ExtensionsInstanceRuntimeDataProcessingStateArgs) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return i.ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataProcessingStateArgs) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataProcessingStateOutput).ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx)
}

// ExtensionsInstanceRuntimeDataProcessingStatePtrInput is an input type that accepts ExtensionsInstanceRuntimeDataProcessingStateArgs, ExtensionsInstanceRuntimeDataProcessingStatePtr and ExtensionsInstanceRuntimeDataProcessingStatePtrOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataProcessingStatePtrInput` via:
//
//	        ExtensionsInstanceRuntimeDataProcessingStateArgs{...}
//
//	or:
//
//	        nil
type ExtensionsInstanceRuntimeDataProcessingStatePtrInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput
	ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput
}

type extensionsInstanceRuntimeDataProcessingStatePtrType ExtensionsInstanceRuntimeDataProcessingStateArgs

func ExtensionsInstanceRuntimeDataProcessingStatePtr(v *ExtensionsInstanceRuntimeDataProcessingStateArgs) ExtensionsInstanceRuntimeDataProcessingStatePtrInput {
	return (*extensionsInstanceRuntimeDataProcessingStatePtrType)(v)
}

func (*extensionsInstanceRuntimeDataProcessingStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceRuntimeDataProcessingState)(nil)).Elem()
}

func (i *extensionsInstanceRuntimeDataProcessingStatePtrType) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return i.ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(context.Background())
}

func (i *extensionsInstanceRuntimeDataProcessingStatePtrType) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataProcessingStatePtrOutput)
}

func (i *extensionsInstanceRuntimeDataProcessingStatePtrType) ToOutput(ctx context.Context) pulumix.Output[*ExtensionsInstanceRuntimeDataProcessingState] {
	return pulumix.Output[*ExtensionsInstanceRuntimeDataProcessingState]{
		OutputState: i.ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx).OutputState,
	}
}

type ExtensionsInstanceRuntimeDataProcessingStateOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataProcessingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeDataProcessingState)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) ToExtensionsInstanceRuntimeDataProcessingStateOutput() ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) ToExtensionsInstanceRuntimeDataProcessingStateOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o.ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(context.Background())
}

func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensionsInstanceRuntimeDataProcessingState) *ExtensionsInstanceRuntimeDataProcessingState {
		return &v
	}).(ExtensionsInstanceRuntimeDataProcessingStatePtrOutput)
}

func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) ToOutput(ctx context.Context) pulumix.Output[ExtensionsInstanceRuntimeDataProcessingState] {
	return pulumix.Output[ExtensionsInstanceRuntimeDataProcessingState]{
		OutputState: o.OutputState,
	}
}

// Details about the processing. e.g. This could include the type of
// processing in progress or it could list errors or failures.
// This information will be shown in the console on the detail page
// for the extension instance.
func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) DetailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeDataProcessingState) *string { return v.DetailMessage }).(pulumi.StringPtrOutput)
}

// The processing state of the extension instance.
func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeDataProcessingState) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceRuntimeDataProcessingStatePtrOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceRuntimeDataProcessingState)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ExtensionsInstanceRuntimeDataProcessingState] {
	return pulumix.Output[*ExtensionsInstanceRuntimeDataProcessingState]{
		OutputState: o.OutputState,
	}
}

func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) Elem() ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataProcessingState) ExtensionsInstanceRuntimeDataProcessingState {
		if v != nil {
			return *v
		}
		var ret ExtensionsInstanceRuntimeDataProcessingState
		return ret
	}).(ExtensionsInstanceRuntimeDataProcessingStateOutput)
}

// Details about the processing. e.g. This could include the type of
// processing in progress or it could list errors or failures.
// This information will be shown in the console on the detail page
// for the extension instance.
func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) DetailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataProcessingState) *string {
		if v == nil {
			return nil
		}
		return v.DetailMessage
	}).(pulumi.StringPtrOutput)
}

// The processing state of the extension instance.
func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataProcessingState) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type HostingVersionConfig struct {
	// An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
	// triggers Hosting to respond with a redirect to the specified destination path.
	// Structure is documented below.
	Redirects []HostingVersionConfigRedirect `pulumi:"redirects"`
	// An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
	// request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
	// Structure is documented below.
	Rewrites []HostingVersionConfigRewrite `pulumi:"rewrites"`
}

// HostingVersionConfigInput is an input type that accepts HostingVersionConfigArgs and HostingVersionConfigOutput values.
// You can construct a concrete instance of `HostingVersionConfigInput` via:
//
//	HostingVersionConfigArgs{...}
type HostingVersionConfigInput interface {
	pulumi.Input

	ToHostingVersionConfigOutput() HostingVersionConfigOutput
	ToHostingVersionConfigOutputWithContext(context.Context) HostingVersionConfigOutput
}

type HostingVersionConfigArgs struct {
	// An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
	// triggers Hosting to respond with a redirect to the specified destination path.
	// Structure is documented below.
	Redirects HostingVersionConfigRedirectArrayInput `pulumi:"redirects"`
	// An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
	// request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
	// Structure is documented below.
	Rewrites HostingVersionConfigRewriteArrayInput `pulumi:"rewrites"`
}

func (HostingVersionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfig)(nil)).Elem()
}

func (i HostingVersionConfigArgs) ToHostingVersionConfigOutput() HostingVersionConfigOutput {
	return i.ToHostingVersionConfigOutputWithContext(context.Background())
}

func (i HostingVersionConfigArgs) ToHostingVersionConfigOutputWithContext(ctx context.Context) HostingVersionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigOutput)
}

func (i HostingVersionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[HostingVersionConfig] {
	return pulumix.Output[HostingVersionConfig]{
		OutputState: i.ToHostingVersionConfigOutputWithContext(ctx).OutputState,
	}
}

func (i HostingVersionConfigArgs) ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput {
	return i.ToHostingVersionConfigPtrOutputWithContext(context.Background())
}

func (i HostingVersionConfigArgs) ToHostingVersionConfigPtrOutputWithContext(ctx context.Context) HostingVersionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigOutput).ToHostingVersionConfigPtrOutputWithContext(ctx)
}

// HostingVersionConfigPtrInput is an input type that accepts HostingVersionConfigArgs, HostingVersionConfigPtr and HostingVersionConfigPtrOutput values.
// You can construct a concrete instance of `HostingVersionConfigPtrInput` via:
//
//	        HostingVersionConfigArgs{...}
//
//	or:
//
//	        nil
type HostingVersionConfigPtrInput interface {
	pulumi.Input

	ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput
	ToHostingVersionConfigPtrOutputWithContext(context.Context) HostingVersionConfigPtrOutput
}

type hostingVersionConfigPtrType HostingVersionConfigArgs

func HostingVersionConfigPtr(v *HostingVersionConfigArgs) HostingVersionConfigPtrInput {
	return (*hostingVersionConfigPtrType)(v)
}

func (*hostingVersionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingVersionConfig)(nil)).Elem()
}

func (i *hostingVersionConfigPtrType) ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput {
	return i.ToHostingVersionConfigPtrOutputWithContext(context.Background())
}

func (i *hostingVersionConfigPtrType) ToHostingVersionConfigPtrOutputWithContext(ctx context.Context) HostingVersionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigPtrOutput)
}

func (i *hostingVersionConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*HostingVersionConfig] {
	return pulumix.Output[*HostingVersionConfig]{
		OutputState: i.ToHostingVersionConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type HostingVersionConfigOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfig)(nil)).Elem()
}

func (o HostingVersionConfigOutput) ToHostingVersionConfigOutput() HostingVersionConfigOutput {
	return o
}

func (o HostingVersionConfigOutput) ToHostingVersionConfigOutputWithContext(ctx context.Context) HostingVersionConfigOutput {
	return o
}

func (o HostingVersionConfigOutput) ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput {
	return o.ToHostingVersionConfigPtrOutputWithContext(context.Background())
}

func (o HostingVersionConfigOutput) ToHostingVersionConfigPtrOutputWithContext(ctx context.Context) HostingVersionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostingVersionConfig) *HostingVersionConfig {
		return &v
	}).(HostingVersionConfigPtrOutput)
}

func (o HostingVersionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[HostingVersionConfig] {
	return pulumix.Output[HostingVersionConfig]{
		OutputState: o.OutputState,
	}
}

// An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
// triggers Hosting to respond with a redirect to the specified destination path.
// Structure is documented below.
func (o HostingVersionConfigOutput) Redirects() HostingVersionConfigRedirectArrayOutput {
	return o.ApplyT(func(v HostingVersionConfig) []HostingVersionConfigRedirect { return v.Redirects }).(HostingVersionConfigRedirectArrayOutput)
}

// An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
// request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
// Structure is documented below.
func (o HostingVersionConfigOutput) Rewrites() HostingVersionConfigRewriteArrayOutput {
	return o.ApplyT(func(v HostingVersionConfig) []HostingVersionConfigRewrite { return v.Rewrites }).(HostingVersionConfigRewriteArrayOutput)
}

type HostingVersionConfigPtrOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingVersionConfig)(nil)).Elem()
}

func (o HostingVersionConfigPtrOutput) ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput {
	return o
}

func (o HostingVersionConfigPtrOutput) ToHostingVersionConfigPtrOutputWithContext(ctx context.Context) HostingVersionConfigPtrOutput {
	return o
}

func (o HostingVersionConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*HostingVersionConfig] {
	return pulumix.Output[*HostingVersionConfig]{
		OutputState: o.OutputState,
	}
}

func (o HostingVersionConfigPtrOutput) Elem() HostingVersionConfigOutput {
	return o.ApplyT(func(v *HostingVersionConfig) HostingVersionConfig {
		if v != nil {
			return *v
		}
		var ret HostingVersionConfig
		return ret
	}).(HostingVersionConfigOutput)
}

// An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
// triggers Hosting to respond with a redirect to the specified destination path.
// Structure is documented below.
func (o HostingVersionConfigPtrOutput) Redirects() HostingVersionConfigRedirectArrayOutput {
	return o.ApplyT(func(v *HostingVersionConfig) []HostingVersionConfigRedirect {
		if v == nil {
			return nil
		}
		return v.Redirects
	}).(HostingVersionConfigRedirectArrayOutput)
}

// An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
// request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
// Structure is documented below.
func (o HostingVersionConfigPtrOutput) Rewrites() HostingVersionConfigRewriteArrayOutput {
	return o.ApplyT(func(v *HostingVersionConfig) []HostingVersionConfigRewrite {
		if v == nil {
			return nil
		}
		return v.Rewrites
	}).(HostingVersionConfigRewriteArrayOutput)
}

type HostingVersionConfigRedirect struct {
	// The user-supplied glob to match against the request URL path.
	Glob *string `pulumi:"glob"`
	// The value to put in the HTTP location header of the response.
	// The location can contain capture group values from the pattern using a : prefix to identify
	// the segment and an optional * to capture the rest of the URL. For example:
	Location string `pulumi:"location"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex *string `pulumi:"regex"`
	// The status HTTP code to return in the response. It must be a valid 3xx status code.
	StatusCode int `pulumi:"statusCode"`
}

// HostingVersionConfigRedirectInput is an input type that accepts HostingVersionConfigRedirectArgs and HostingVersionConfigRedirectOutput values.
// You can construct a concrete instance of `HostingVersionConfigRedirectInput` via:
//
//	HostingVersionConfigRedirectArgs{...}
type HostingVersionConfigRedirectInput interface {
	pulumi.Input

	ToHostingVersionConfigRedirectOutput() HostingVersionConfigRedirectOutput
	ToHostingVersionConfigRedirectOutputWithContext(context.Context) HostingVersionConfigRedirectOutput
}

type HostingVersionConfigRedirectArgs struct {
	// The user-supplied glob to match against the request URL path.
	Glob pulumi.StringPtrInput `pulumi:"glob"`
	// The value to put in the HTTP location header of the response.
	// The location can contain capture group values from the pattern using a : prefix to identify
	// the segment and an optional * to capture the rest of the URL. For example:
	Location pulumi.StringInput `pulumi:"location"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// The status HTTP code to return in the response. It must be a valid 3xx status code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (HostingVersionConfigRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRedirect)(nil)).Elem()
}

func (i HostingVersionConfigRedirectArgs) ToHostingVersionConfigRedirectOutput() HostingVersionConfigRedirectOutput {
	return i.ToHostingVersionConfigRedirectOutputWithContext(context.Background())
}

func (i HostingVersionConfigRedirectArgs) ToHostingVersionConfigRedirectOutputWithContext(ctx context.Context) HostingVersionConfigRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRedirectOutput)
}

func (i HostingVersionConfigRedirectArgs) ToOutput(ctx context.Context) pulumix.Output[HostingVersionConfigRedirect] {
	return pulumix.Output[HostingVersionConfigRedirect]{
		OutputState: i.ToHostingVersionConfigRedirectOutputWithContext(ctx).OutputState,
	}
}

// HostingVersionConfigRedirectArrayInput is an input type that accepts HostingVersionConfigRedirectArray and HostingVersionConfigRedirectArrayOutput values.
// You can construct a concrete instance of `HostingVersionConfigRedirectArrayInput` via:
//
//	HostingVersionConfigRedirectArray{ HostingVersionConfigRedirectArgs{...} }
type HostingVersionConfigRedirectArrayInput interface {
	pulumi.Input

	ToHostingVersionConfigRedirectArrayOutput() HostingVersionConfigRedirectArrayOutput
	ToHostingVersionConfigRedirectArrayOutputWithContext(context.Context) HostingVersionConfigRedirectArrayOutput
}

type HostingVersionConfigRedirectArray []HostingVersionConfigRedirectInput

func (HostingVersionConfigRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigRedirect)(nil)).Elem()
}

func (i HostingVersionConfigRedirectArray) ToHostingVersionConfigRedirectArrayOutput() HostingVersionConfigRedirectArrayOutput {
	return i.ToHostingVersionConfigRedirectArrayOutputWithContext(context.Background())
}

func (i HostingVersionConfigRedirectArray) ToHostingVersionConfigRedirectArrayOutputWithContext(ctx context.Context) HostingVersionConfigRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRedirectArrayOutput)
}

func (i HostingVersionConfigRedirectArray) ToOutput(ctx context.Context) pulumix.Output[[]HostingVersionConfigRedirect] {
	return pulumix.Output[[]HostingVersionConfigRedirect]{
		OutputState: i.ToHostingVersionConfigRedirectArrayOutputWithContext(ctx).OutputState,
	}
}

type HostingVersionConfigRedirectOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRedirect)(nil)).Elem()
}

func (o HostingVersionConfigRedirectOutput) ToHostingVersionConfigRedirectOutput() HostingVersionConfigRedirectOutput {
	return o
}

func (o HostingVersionConfigRedirectOutput) ToHostingVersionConfigRedirectOutputWithContext(ctx context.Context) HostingVersionConfigRedirectOutput {
	return o
}

func (o HostingVersionConfigRedirectOutput) ToOutput(ctx context.Context) pulumix.Output[HostingVersionConfigRedirect] {
	return pulumix.Output[HostingVersionConfigRedirect]{
		OutputState: o.OutputState,
	}
}

// The user-supplied glob to match against the request URL path.
func (o HostingVersionConfigRedirectOutput) Glob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRedirect) *string { return v.Glob }).(pulumi.StringPtrOutput)
}

// The value to put in the HTTP location header of the response.
// The location can contain capture group values from the pattern using a : prefix to identify
// the segment and an optional * to capture the rest of the URL. For example:
func (o HostingVersionConfigRedirectOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v HostingVersionConfigRedirect) string { return v.Location }).(pulumi.StringOutput)
}

// The user-supplied RE2 regular expression to match against the request URL path.
func (o HostingVersionConfigRedirectOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRedirect) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// The status HTTP code to return in the response. It must be a valid 3xx status code.
func (o HostingVersionConfigRedirectOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v HostingVersionConfigRedirect) int { return v.StatusCode }).(pulumi.IntOutput)
}

type HostingVersionConfigRedirectArrayOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigRedirect)(nil)).Elem()
}

func (o HostingVersionConfigRedirectArrayOutput) ToHostingVersionConfigRedirectArrayOutput() HostingVersionConfigRedirectArrayOutput {
	return o
}

func (o HostingVersionConfigRedirectArrayOutput) ToHostingVersionConfigRedirectArrayOutputWithContext(ctx context.Context) HostingVersionConfigRedirectArrayOutput {
	return o
}

func (o HostingVersionConfigRedirectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]HostingVersionConfigRedirect] {
	return pulumix.Output[[]HostingVersionConfigRedirect]{
		OutputState: o.OutputState,
	}
}

func (o HostingVersionConfigRedirectArrayOutput) Index(i pulumi.IntInput) HostingVersionConfigRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingVersionConfigRedirect {
		return vs[0].([]HostingVersionConfigRedirect)[vs[1].(int)]
	}).(HostingVersionConfigRedirectOutput)
}

type HostingVersionConfigRewrite struct {
	// The function to proxy requests to. Must match the exported function name exactly.
	Function *string `pulumi:"function"`
	// The user-supplied glob to match against the request URL path.
	Glob *string `pulumi:"glob"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex *string `pulumi:"regex"`
	// The request will be forwarded to Cloud Run.
	// Structure is documented below.
	Run *HostingVersionConfigRewriteRun `pulumi:"run"`
}

// HostingVersionConfigRewriteInput is an input type that accepts HostingVersionConfigRewriteArgs and HostingVersionConfigRewriteOutput values.
// You can construct a concrete instance of `HostingVersionConfigRewriteInput` via:
//
//	HostingVersionConfigRewriteArgs{...}
type HostingVersionConfigRewriteInput interface {
	pulumi.Input

	ToHostingVersionConfigRewriteOutput() HostingVersionConfigRewriteOutput
	ToHostingVersionConfigRewriteOutputWithContext(context.Context) HostingVersionConfigRewriteOutput
}

type HostingVersionConfigRewriteArgs struct {
	// The function to proxy requests to. Must match the exported function name exactly.
	Function pulumi.StringPtrInput `pulumi:"function"`
	// The user-supplied glob to match against the request URL path.
	Glob pulumi.StringPtrInput `pulumi:"glob"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// The request will be forwarded to Cloud Run.
	// Structure is documented below.
	Run HostingVersionConfigRewriteRunPtrInput `pulumi:"run"`
}

func (HostingVersionConfigRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRewrite)(nil)).Elem()
}

func (i HostingVersionConfigRewriteArgs) ToHostingVersionConfigRewriteOutput() HostingVersionConfigRewriteOutput {
	return i.ToHostingVersionConfigRewriteOutputWithContext(context.Background())
}

func (i HostingVersionConfigRewriteArgs) ToHostingVersionConfigRewriteOutputWithContext(ctx context.Context) HostingVersionConfigRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteOutput)
}

func (i HostingVersionConfigRewriteArgs) ToOutput(ctx context.Context) pulumix.Output[HostingVersionConfigRewrite] {
	return pulumix.Output[HostingVersionConfigRewrite]{
		OutputState: i.ToHostingVersionConfigRewriteOutputWithContext(ctx).OutputState,
	}
}

// HostingVersionConfigRewriteArrayInput is an input type that accepts HostingVersionConfigRewriteArray and HostingVersionConfigRewriteArrayOutput values.
// You can construct a concrete instance of `HostingVersionConfigRewriteArrayInput` via:
//
//	HostingVersionConfigRewriteArray{ HostingVersionConfigRewriteArgs{...} }
type HostingVersionConfigRewriteArrayInput interface {
	pulumi.Input

	ToHostingVersionConfigRewriteArrayOutput() HostingVersionConfigRewriteArrayOutput
	ToHostingVersionConfigRewriteArrayOutputWithContext(context.Context) HostingVersionConfigRewriteArrayOutput
}

type HostingVersionConfigRewriteArray []HostingVersionConfigRewriteInput

func (HostingVersionConfigRewriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigRewrite)(nil)).Elem()
}

func (i HostingVersionConfigRewriteArray) ToHostingVersionConfigRewriteArrayOutput() HostingVersionConfigRewriteArrayOutput {
	return i.ToHostingVersionConfigRewriteArrayOutputWithContext(context.Background())
}

func (i HostingVersionConfigRewriteArray) ToHostingVersionConfigRewriteArrayOutputWithContext(ctx context.Context) HostingVersionConfigRewriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteArrayOutput)
}

func (i HostingVersionConfigRewriteArray) ToOutput(ctx context.Context) pulumix.Output[[]HostingVersionConfigRewrite] {
	return pulumix.Output[[]HostingVersionConfigRewrite]{
		OutputState: i.ToHostingVersionConfigRewriteArrayOutputWithContext(ctx).OutputState,
	}
}

type HostingVersionConfigRewriteOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRewrite)(nil)).Elem()
}

func (o HostingVersionConfigRewriteOutput) ToHostingVersionConfigRewriteOutput() HostingVersionConfigRewriteOutput {
	return o
}

func (o HostingVersionConfigRewriteOutput) ToHostingVersionConfigRewriteOutputWithContext(ctx context.Context) HostingVersionConfigRewriteOutput {
	return o
}

func (o HostingVersionConfigRewriteOutput) ToOutput(ctx context.Context) pulumix.Output[HostingVersionConfigRewrite] {
	return pulumix.Output[HostingVersionConfigRewrite]{
		OutputState: o.OutputState,
	}
}

// The function to proxy requests to. Must match the exported function name exactly.
func (o HostingVersionConfigRewriteOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewrite) *string { return v.Function }).(pulumi.StringPtrOutput)
}

// The user-supplied glob to match against the request URL path.
func (o HostingVersionConfigRewriteOutput) Glob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewrite) *string { return v.Glob }).(pulumi.StringPtrOutput)
}

// The user-supplied RE2 regular expression to match against the request URL path.
func (o HostingVersionConfigRewriteOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewrite) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// The request will be forwarded to Cloud Run.
// Structure is documented below.
func (o HostingVersionConfigRewriteOutput) Run() HostingVersionConfigRewriteRunPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewrite) *HostingVersionConfigRewriteRun { return v.Run }).(HostingVersionConfigRewriteRunPtrOutput)
}

type HostingVersionConfigRewriteArrayOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRewriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigRewrite)(nil)).Elem()
}

func (o HostingVersionConfigRewriteArrayOutput) ToHostingVersionConfigRewriteArrayOutput() HostingVersionConfigRewriteArrayOutput {
	return o
}

func (o HostingVersionConfigRewriteArrayOutput) ToHostingVersionConfigRewriteArrayOutputWithContext(ctx context.Context) HostingVersionConfigRewriteArrayOutput {
	return o
}

func (o HostingVersionConfigRewriteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]HostingVersionConfigRewrite] {
	return pulumix.Output[[]HostingVersionConfigRewrite]{
		OutputState: o.OutputState,
	}
}

func (o HostingVersionConfigRewriteArrayOutput) Index(i pulumi.IntInput) HostingVersionConfigRewriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingVersionConfigRewrite {
		return vs[0].([]HostingVersionConfigRewrite)[vs[1].(int)]
	}).(HostingVersionConfigRewriteOutput)
}

type HostingVersionConfigRewriteRun struct {
	// Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
	Region *string `pulumi:"region"`
	// User-defined ID of the Cloud Run service.
	ServiceId string `pulumi:"serviceId"`
}

// HostingVersionConfigRewriteRunInput is an input type that accepts HostingVersionConfigRewriteRunArgs and HostingVersionConfigRewriteRunOutput values.
// You can construct a concrete instance of `HostingVersionConfigRewriteRunInput` via:
//
//	HostingVersionConfigRewriteRunArgs{...}
type HostingVersionConfigRewriteRunInput interface {
	pulumi.Input

	ToHostingVersionConfigRewriteRunOutput() HostingVersionConfigRewriteRunOutput
	ToHostingVersionConfigRewriteRunOutputWithContext(context.Context) HostingVersionConfigRewriteRunOutput
}

type HostingVersionConfigRewriteRunArgs struct {
	// Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// User-defined ID of the Cloud Run service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (HostingVersionConfigRewriteRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRewriteRun)(nil)).Elem()
}

func (i HostingVersionConfigRewriteRunArgs) ToHostingVersionConfigRewriteRunOutput() HostingVersionConfigRewriteRunOutput {
	return i.ToHostingVersionConfigRewriteRunOutputWithContext(context.Background())
}

func (i HostingVersionConfigRewriteRunArgs) ToHostingVersionConfigRewriteRunOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteRunOutput)
}

func (i HostingVersionConfigRewriteRunArgs) ToOutput(ctx context.Context) pulumix.Output[HostingVersionConfigRewriteRun] {
	return pulumix.Output[HostingVersionConfigRewriteRun]{
		OutputState: i.ToHostingVersionConfigRewriteRunOutputWithContext(ctx).OutputState,
	}
}

func (i HostingVersionConfigRewriteRunArgs) ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput {
	return i.ToHostingVersionConfigRewriteRunPtrOutputWithContext(context.Background())
}

func (i HostingVersionConfigRewriteRunArgs) ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteRunOutput).ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx)
}

// HostingVersionConfigRewriteRunPtrInput is an input type that accepts HostingVersionConfigRewriteRunArgs, HostingVersionConfigRewriteRunPtr and HostingVersionConfigRewriteRunPtrOutput values.
// You can construct a concrete instance of `HostingVersionConfigRewriteRunPtrInput` via:
//
//	        HostingVersionConfigRewriteRunArgs{...}
//
//	or:
//
//	        nil
type HostingVersionConfigRewriteRunPtrInput interface {
	pulumi.Input

	ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput
	ToHostingVersionConfigRewriteRunPtrOutputWithContext(context.Context) HostingVersionConfigRewriteRunPtrOutput
}

type hostingVersionConfigRewriteRunPtrType HostingVersionConfigRewriteRunArgs

func HostingVersionConfigRewriteRunPtr(v *HostingVersionConfigRewriteRunArgs) HostingVersionConfigRewriteRunPtrInput {
	return (*hostingVersionConfigRewriteRunPtrType)(v)
}

func (*hostingVersionConfigRewriteRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingVersionConfigRewriteRun)(nil)).Elem()
}

func (i *hostingVersionConfigRewriteRunPtrType) ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput {
	return i.ToHostingVersionConfigRewriteRunPtrOutputWithContext(context.Background())
}

func (i *hostingVersionConfigRewriteRunPtrType) ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteRunPtrOutput)
}

func (i *hostingVersionConfigRewriteRunPtrType) ToOutput(ctx context.Context) pulumix.Output[*HostingVersionConfigRewriteRun] {
	return pulumix.Output[*HostingVersionConfigRewriteRun]{
		OutputState: i.ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx).OutputState,
	}
}

type HostingVersionConfigRewriteRunOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRewriteRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRewriteRun)(nil)).Elem()
}

func (o HostingVersionConfigRewriteRunOutput) ToHostingVersionConfigRewriteRunOutput() HostingVersionConfigRewriteRunOutput {
	return o
}

func (o HostingVersionConfigRewriteRunOutput) ToHostingVersionConfigRewriteRunOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunOutput {
	return o
}

func (o HostingVersionConfigRewriteRunOutput) ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput {
	return o.ToHostingVersionConfigRewriteRunPtrOutputWithContext(context.Background())
}

func (o HostingVersionConfigRewriteRunOutput) ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostingVersionConfigRewriteRun) *HostingVersionConfigRewriteRun {
		return &v
	}).(HostingVersionConfigRewriteRunPtrOutput)
}

func (o HostingVersionConfigRewriteRunOutput) ToOutput(ctx context.Context) pulumix.Output[HostingVersionConfigRewriteRun] {
	return pulumix.Output[HostingVersionConfigRewriteRun]{
		OutputState: o.OutputState,
	}
}

// Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
func (o HostingVersionConfigRewriteRunOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewriteRun) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// User-defined ID of the Cloud Run service.
func (o HostingVersionConfigRewriteRunOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v HostingVersionConfigRewriteRun) string { return v.ServiceId }).(pulumi.StringOutput)
}

type HostingVersionConfigRewriteRunPtrOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRewriteRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingVersionConfigRewriteRun)(nil)).Elem()
}

func (o HostingVersionConfigRewriteRunPtrOutput) ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput {
	return o
}

func (o HostingVersionConfigRewriteRunPtrOutput) ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunPtrOutput {
	return o
}

func (o HostingVersionConfigRewriteRunPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*HostingVersionConfigRewriteRun] {
	return pulumix.Output[*HostingVersionConfigRewriteRun]{
		OutputState: o.OutputState,
	}
}

func (o HostingVersionConfigRewriteRunPtrOutput) Elem() HostingVersionConfigRewriteRunOutput {
	return o.ApplyT(func(v *HostingVersionConfigRewriteRun) HostingVersionConfigRewriteRun {
		if v != nil {
			return *v
		}
		var ret HostingVersionConfigRewriteRun
		return ret
	}).(HostingVersionConfigRewriteRunOutput)
}

// Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
func (o HostingVersionConfigRewriteRunPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingVersionConfigRewriteRun) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// User-defined ID of the Cloud Run service.
func (o HostingVersionConfigRewriteRunPtrOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingVersionConfigRewriteRun) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceConfigInput)(nil)).Elem(), ExtensionsInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceConfigPtrInput)(nil)).Elem(), ExtensionsInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceErrorStatusInput)(nil)).Elem(), ExtensionsInstanceErrorStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceErrorStatusArrayInput)(nil)).Elem(), ExtensionsInstanceErrorStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataArrayInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataFatalErrorInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataFatalErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataFatalErrorPtrInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataFatalErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataProcessingStateInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataProcessingStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataProcessingStatePtrInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataProcessingStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigInput)(nil)).Elem(), HostingVersionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigPtrInput)(nil)).Elem(), HostingVersionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRedirectInput)(nil)).Elem(), HostingVersionConfigRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRedirectArrayInput)(nil)).Elem(), HostingVersionConfigRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRewriteInput)(nil)).Elem(), HostingVersionConfigRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRewriteArrayInput)(nil)).Elem(), HostingVersionConfigRewriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRewriteRunInput)(nil)).Elem(), HostingVersionConfigRewriteRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRewriteRunPtrInput)(nil)).Elem(), HostingVersionConfigRewriteRunArgs{})
	pulumi.RegisterOutputType(ExtensionsInstanceConfigOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceErrorStatusOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceErrorStatusArrayOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataArrayOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataFatalErrorOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataFatalErrorPtrOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataProcessingStateOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataProcessingStatePtrOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigPtrOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRedirectOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRedirectArrayOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRewriteOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRewriteArrayOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRewriteRunOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRewriteRunPtrOutput{})
}
