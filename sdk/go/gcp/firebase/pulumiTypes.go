// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firebase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ExtensionsInstanceConfig struct {
	// List of extension events selected by consumer that extension is allowed to
	// emit, identified by their types.
	AllowedEventTypes []string `pulumi:"allowedEventTypes"`
	// (Output)
	// The time at which the Extension Instance Config was created.
	CreateTime *string `pulumi:"createTime"`
	// Fully qualified Eventarc resource name that consumers should use for event triggers.
	EventarcChannel *string `pulumi:"eventarcChannel"`
	// The ref of the Extension from the Registry (e.g. publisher-id/awesome-extension)
	ExtensionRef string `pulumi:"extensionRef"`
	// The version of the Extension from the Registry (e.g. 1.0.3). If left blank, latest is assumed.
	ExtensionVersion *string `pulumi:"extensionVersion"`
	// (Output)
	// The unique identifier for this configuration.
	Name *string `pulumi:"name"`
	// Environment variables that may be configured for the Extension
	Params map[string]string `pulumi:"params"`
	// (Output)
	// Postinstall instructions to be shown for this Extension, with
	// template strings representing function and parameter values substituted
	// with actual values. These strings include: ${param:FOO},
	// ${function:myFunc.url},
	// ${function:myFunc.name}, and ${function:myFunc.location}
	//
	// ***
	PopulatedPostinstallContent *string `pulumi:"populatedPostinstallContent"`
	// Params whose values are only available at deployment time.
	// Unlike other params, these will not be set as environment variables on
	// functions. See a full list of system parameters at
	// https://firebase.google.com/docs/extensions/publishers/parameters#system_parameters
	SystemParams map[string]string `pulumi:"systemParams"`
}

// ExtensionsInstanceConfigInput is an input type that accepts ExtensionsInstanceConfigArgs and ExtensionsInstanceConfigOutput values.
// You can construct a concrete instance of `ExtensionsInstanceConfigInput` via:
//
//	ExtensionsInstanceConfigArgs{...}
type ExtensionsInstanceConfigInput interface {
	pulumi.Input

	ToExtensionsInstanceConfigOutput() ExtensionsInstanceConfigOutput
	ToExtensionsInstanceConfigOutputWithContext(context.Context) ExtensionsInstanceConfigOutput
}

type ExtensionsInstanceConfigArgs struct {
	// List of extension events selected by consumer that extension is allowed to
	// emit, identified by their types.
	AllowedEventTypes pulumi.StringArrayInput `pulumi:"allowedEventTypes"`
	// (Output)
	// The time at which the Extension Instance Config was created.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Fully qualified Eventarc resource name that consumers should use for event triggers.
	EventarcChannel pulumi.StringPtrInput `pulumi:"eventarcChannel"`
	// The ref of the Extension from the Registry (e.g. publisher-id/awesome-extension)
	ExtensionRef pulumi.StringInput `pulumi:"extensionRef"`
	// The version of the Extension from the Registry (e.g. 1.0.3). If left blank, latest is assumed.
	ExtensionVersion pulumi.StringPtrInput `pulumi:"extensionVersion"`
	// (Output)
	// The unique identifier for this configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Environment variables that may be configured for the Extension
	Params pulumi.StringMapInput `pulumi:"params"`
	// (Output)
	// Postinstall instructions to be shown for this Extension, with
	// template strings representing function and parameter values substituted
	// with actual values. These strings include: ${param:FOO},
	// ${function:myFunc.url},
	// ${function:myFunc.name}, and ${function:myFunc.location}
	//
	// ***
	PopulatedPostinstallContent pulumi.StringPtrInput `pulumi:"populatedPostinstallContent"`
	// Params whose values are only available at deployment time.
	// Unlike other params, these will not be set as environment variables on
	// functions. See a full list of system parameters at
	// https://firebase.google.com/docs/extensions/publishers/parameters#system_parameters
	SystemParams pulumi.StringMapInput `pulumi:"systemParams"`
}

func (ExtensionsInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceConfig)(nil)).Elem()
}

func (i ExtensionsInstanceConfigArgs) ToExtensionsInstanceConfigOutput() ExtensionsInstanceConfigOutput {
	return i.ToExtensionsInstanceConfigOutputWithContext(context.Background())
}

func (i ExtensionsInstanceConfigArgs) ToExtensionsInstanceConfigOutputWithContext(ctx context.Context) ExtensionsInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceConfigOutput)
}

func (i ExtensionsInstanceConfigArgs) ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput {
	return i.ToExtensionsInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ExtensionsInstanceConfigArgs) ToExtensionsInstanceConfigPtrOutputWithContext(ctx context.Context) ExtensionsInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceConfigOutput).ToExtensionsInstanceConfigPtrOutputWithContext(ctx)
}

// ExtensionsInstanceConfigPtrInput is an input type that accepts ExtensionsInstanceConfigArgs, ExtensionsInstanceConfigPtr and ExtensionsInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ExtensionsInstanceConfigPtrInput` via:
//
//	        ExtensionsInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type ExtensionsInstanceConfigPtrInput interface {
	pulumi.Input

	ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput
	ToExtensionsInstanceConfigPtrOutputWithContext(context.Context) ExtensionsInstanceConfigPtrOutput
}

type extensionsInstanceConfigPtrType ExtensionsInstanceConfigArgs

func ExtensionsInstanceConfigPtr(v *ExtensionsInstanceConfigArgs) ExtensionsInstanceConfigPtrInput {
	return (*extensionsInstanceConfigPtrType)(v)
}

func (*extensionsInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceConfig)(nil)).Elem()
}

func (i *extensionsInstanceConfigPtrType) ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput {
	return i.ToExtensionsInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *extensionsInstanceConfigPtrType) ToExtensionsInstanceConfigPtrOutputWithContext(ctx context.Context) ExtensionsInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceConfigPtrOutput)
}

type ExtensionsInstanceConfigOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceConfig)(nil)).Elem()
}

func (o ExtensionsInstanceConfigOutput) ToExtensionsInstanceConfigOutput() ExtensionsInstanceConfigOutput {
	return o
}

func (o ExtensionsInstanceConfigOutput) ToExtensionsInstanceConfigOutputWithContext(ctx context.Context) ExtensionsInstanceConfigOutput {
	return o
}

func (o ExtensionsInstanceConfigOutput) ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput {
	return o.ToExtensionsInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ExtensionsInstanceConfigOutput) ToExtensionsInstanceConfigPtrOutputWithContext(ctx context.Context) ExtensionsInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensionsInstanceConfig) *ExtensionsInstanceConfig {
		return &v
	}).(ExtensionsInstanceConfigPtrOutput)
}

// List of extension events selected by consumer that extension is allowed to
// emit, identified by their types.
func (o ExtensionsInstanceConfigOutput) AllowedEventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) []string { return v.AllowedEventTypes }).(pulumi.StringArrayOutput)
}

// (Output)
// The time at which the Extension Instance Config was created.
func (o ExtensionsInstanceConfigOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Fully qualified Eventarc resource name that consumers should use for event triggers.
func (o ExtensionsInstanceConfigOutput) EventarcChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.EventarcChannel }).(pulumi.StringPtrOutput)
}

// The ref of the Extension from the Registry (e.g. publisher-id/awesome-extension)
func (o ExtensionsInstanceConfigOutput) ExtensionRef() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) string { return v.ExtensionRef }).(pulumi.StringOutput)
}

// The version of the Extension from the Registry (e.g. 1.0.3). If left blank, latest is assumed.
func (o ExtensionsInstanceConfigOutput) ExtensionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.ExtensionVersion }).(pulumi.StringPtrOutput)
}

// (Output)
// The unique identifier for this configuration.
func (o ExtensionsInstanceConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Environment variables that may be configured for the Extension
func (o ExtensionsInstanceConfigOutput) Params() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) map[string]string { return v.Params }).(pulumi.StringMapOutput)
}

// (Output)
// Postinstall instructions to be shown for this Extension, with
// template strings representing function and parameter values substituted
// with actual values. These strings include: ${param:FOO},
// ${function:myFunc.url},
// ${function:myFunc.name}, and ${function:myFunc.location}
//
// ***
func (o ExtensionsInstanceConfigOutput) PopulatedPostinstallContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) *string { return v.PopulatedPostinstallContent }).(pulumi.StringPtrOutput)
}

// Params whose values are only available at deployment time.
// Unlike other params, these will not be set as environment variables on
// functions. See a full list of system parameters at
// https://firebase.google.com/docs/extensions/publishers/parameters#system_parameters
func (o ExtensionsInstanceConfigOutput) SystemParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExtensionsInstanceConfig) map[string]string { return v.SystemParams }).(pulumi.StringMapOutput)
}

type ExtensionsInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceConfig)(nil)).Elem()
}

func (o ExtensionsInstanceConfigPtrOutput) ToExtensionsInstanceConfigPtrOutput() ExtensionsInstanceConfigPtrOutput {
	return o
}

func (o ExtensionsInstanceConfigPtrOutput) ToExtensionsInstanceConfigPtrOutputWithContext(ctx context.Context) ExtensionsInstanceConfigPtrOutput {
	return o
}

func (o ExtensionsInstanceConfigPtrOutput) Elem() ExtensionsInstanceConfigOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) ExtensionsInstanceConfig {
		if v != nil {
			return *v
		}
		var ret ExtensionsInstanceConfig
		return ret
	}).(ExtensionsInstanceConfigOutput)
}

// List of extension events selected by consumer that extension is allowed to
// emit, identified by their types.
func (o ExtensionsInstanceConfigPtrOutput) AllowedEventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) []string {
		if v == nil {
			return nil
		}
		return v.AllowedEventTypes
	}).(pulumi.StringArrayOutput)
}

// (Output)
// The time at which the Extension Instance Config was created.
func (o ExtensionsInstanceConfigPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Fully qualified Eventarc resource name that consumers should use for event triggers.
func (o ExtensionsInstanceConfigPtrOutput) EventarcChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.EventarcChannel
	}).(pulumi.StringPtrOutput)
}

// The ref of the Extension from the Registry (e.g. publisher-id/awesome-extension)
func (o ExtensionsInstanceConfigPtrOutput) ExtensionRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ExtensionRef
	}).(pulumi.StringPtrOutput)
}

// The version of the Extension from the Registry (e.g. 1.0.3). If left blank, latest is assumed.
func (o ExtensionsInstanceConfigPtrOutput) ExtensionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ExtensionVersion
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The unique identifier for this configuration.
func (o ExtensionsInstanceConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Environment variables that may be configured for the Extension
func (o ExtensionsInstanceConfigPtrOutput) Params() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Params
	}).(pulumi.StringMapOutput)
}

// (Output)
// Postinstall instructions to be shown for this Extension, with
// template strings representing function and parameter values substituted
// with actual values. These strings include: ${param:FOO},
// ${function:myFunc.url},
// ${function:myFunc.name}, and ${function:myFunc.location}
//
// ***
func (o ExtensionsInstanceConfigPtrOutput) PopulatedPostinstallContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.PopulatedPostinstallContent
	}).(pulumi.StringPtrOutput)
}

// Params whose values are only available at deployment time.
// Unlike other params, these will not be set as environment variables on
// functions. See a full list of system parameters at
// https://firebase.google.com/docs/extensions/publishers/parameters#system_parameters
func (o ExtensionsInstanceConfigPtrOutput) SystemParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExtensionsInstanceConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.SystemParams
	}).(pulumi.StringMapOutput)
}

type ExtensionsInstanceErrorStatus struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code *int `pulumi:"code"`
	// A list of messages that carry the error details.
	Details []map[string]string `pulumi:"details"`
	// A developer-facing error message, which should be in English.
	Message *string `pulumi:"message"`
}

// ExtensionsInstanceErrorStatusInput is an input type that accepts ExtensionsInstanceErrorStatusArgs and ExtensionsInstanceErrorStatusOutput values.
// You can construct a concrete instance of `ExtensionsInstanceErrorStatusInput` via:
//
//	ExtensionsInstanceErrorStatusArgs{...}
type ExtensionsInstanceErrorStatusInput interface {
	pulumi.Input

	ToExtensionsInstanceErrorStatusOutput() ExtensionsInstanceErrorStatusOutput
	ToExtensionsInstanceErrorStatusOutputWithContext(context.Context) ExtensionsInstanceErrorStatusOutput
}

type ExtensionsInstanceErrorStatusArgs struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// A list of messages that carry the error details.
	Details pulumi.StringMapArrayInput `pulumi:"details"`
	// A developer-facing error message, which should be in English.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (ExtensionsInstanceErrorStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceErrorStatus)(nil)).Elem()
}

func (i ExtensionsInstanceErrorStatusArgs) ToExtensionsInstanceErrorStatusOutput() ExtensionsInstanceErrorStatusOutput {
	return i.ToExtensionsInstanceErrorStatusOutputWithContext(context.Background())
}

func (i ExtensionsInstanceErrorStatusArgs) ToExtensionsInstanceErrorStatusOutputWithContext(ctx context.Context) ExtensionsInstanceErrorStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceErrorStatusOutput)
}

// ExtensionsInstanceErrorStatusArrayInput is an input type that accepts ExtensionsInstanceErrorStatusArray and ExtensionsInstanceErrorStatusArrayOutput values.
// You can construct a concrete instance of `ExtensionsInstanceErrorStatusArrayInput` via:
//
//	ExtensionsInstanceErrorStatusArray{ ExtensionsInstanceErrorStatusArgs{...} }
type ExtensionsInstanceErrorStatusArrayInput interface {
	pulumi.Input

	ToExtensionsInstanceErrorStatusArrayOutput() ExtensionsInstanceErrorStatusArrayOutput
	ToExtensionsInstanceErrorStatusArrayOutputWithContext(context.Context) ExtensionsInstanceErrorStatusArrayOutput
}

type ExtensionsInstanceErrorStatusArray []ExtensionsInstanceErrorStatusInput

func (ExtensionsInstanceErrorStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionsInstanceErrorStatus)(nil)).Elem()
}

func (i ExtensionsInstanceErrorStatusArray) ToExtensionsInstanceErrorStatusArrayOutput() ExtensionsInstanceErrorStatusArrayOutput {
	return i.ToExtensionsInstanceErrorStatusArrayOutputWithContext(context.Background())
}

func (i ExtensionsInstanceErrorStatusArray) ToExtensionsInstanceErrorStatusArrayOutputWithContext(ctx context.Context) ExtensionsInstanceErrorStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceErrorStatusArrayOutput)
}

type ExtensionsInstanceErrorStatusOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceErrorStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceErrorStatus)(nil)).Elem()
}

func (o ExtensionsInstanceErrorStatusOutput) ToExtensionsInstanceErrorStatusOutput() ExtensionsInstanceErrorStatusOutput {
	return o
}

func (o ExtensionsInstanceErrorStatusOutput) ToExtensionsInstanceErrorStatusOutputWithContext(ctx context.Context) ExtensionsInstanceErrorStatusOutput {
	return o
}

// The status code, which should be an enum value of google.rpc.Code.
func (o ExtensionsInstanceErrorStatusOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceErrorStatus) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// A list of messages that carry the error details.
func (o ExtensionsInstanceErrorStatusOutput) Details() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v ExtensionsInstanceErrorStatus) []map[string]string { return v.Details }).(pulumi.StringMapArrayOutput)
}

// A developer-facing error message, which should be in English.
func (o ExtensionsInstanceErrorStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceErrorStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceErrorStatusArrayOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceErrorStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionsInstanceErrorStatus)(nil)).Elem()
}

func (o ExtensionsInstanceErrorStatusArrayOutput) ToExtensionsInstanceErrorStatusArrayOutput() ExtensionsInstanceErrorStatusArrayOutput {
	return o
}

func (o ExtensionsInstanceErrorStatusArrayOutput) ToExtensionsInstanceErrorStatusArrayOutputWithContext(ctx context.Context) ExtensionsInstanceErrorStatusArrayOutput {
	return o
}

func (o ExtensionsInstanceErrorStatusArrayOutput) Index(i pulumi.IntInput) ExtensionsInstanceErrorStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionsInstanceErrorStatus {
		return vs[0].([]ExtensionsInstanceErrorStatus)[vs[1].(int)]
	}).(ExtensionsInstanceErrorStatusOutput)
}

type ExtensionsInstanceRuntimeData struct {
	// The fatal error state for the extension instance
	// Structure is documented below.
	FatalError *ExtensionsInstanceRuntimeDataFatalError `pulumi:"fatalError"`
	// The processing state for the extension instance
	// Structure is documented below.
	ProcessingState *ExtensionsInstanceRuntimeDataProcessingState `pulumi:"processingState"`
	// The time of the last state update.
	StateUpdateTime *string `pulumi:"stateUpdateTime"`
}

// ExtensionsInstanceRuntimeDataInput is an input type that accepts ExtensionsInstanceRuntimeDataArgs and ExtensionsInstanceRuntimeDataOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataInput` via:
//
//	ExtensionsInstanceRuntimeDataArgs{...}
type ExtensionsInstanceRuntimeDataInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataOutput() ExtensionsInstanceRuntimeDataOutput
	ToExtensionsInstanceRuntimeDataOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataOutput
}

type ExtensionsInstanceRuntimeDataArgs struct {
	// The fatal error state for the extension instance
	// Structure is documented below.
	FatalError ExtensionsInstanceRuntimeDataFatalErrorPtrInput `pulumi:"fatalError"`
	// The processing state for the extension instance
	// Structure is documented below.
	ProcessingState ExtensionsInstanceRuntimeDataProcessingStatePtrInput `pulumi:"processingState"`
	// The time of the last state update.
	StateUpdateTime pulumi.StringPtrInput `pulumi:"stateUpdateTime"`
}

func (ExtensionsInstanceRuntimeDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeData)(nil)).Elem()
}

func (i ExtensionsInstanceRuntimeDataArgs) ToExtensionsInstanceRuntimeDataOutput() ExtensionsInstanceRuntimeDataOutput {
	return i.ToExtensionsInstanceRuntimeDataOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataArgs) ToExtensionsInstanceRuntimeDataOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataOutput)
}

// ExtensionsInstanceRuntimeDataArrayInput is an input type that accepts ExtensionsInstanceRuntimeDataArray and ExtensionsInstanceRuntimeDataArrayOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataArrayInput` via:
//
//	ExtensionsInstanceRuntimeDataArray{ ExtensionsInstanceRuntimeDataArgs{...} }
type ExtensionsInstanceRuntimeDataArrayInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataArrayOutput() ExtensionsInstanceRuntimeDataArrayOutput
	ToExtensionsInstanceRuntimeDataArrayOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataArrayOutput
}

type ExtensionsInstanceRuntimeDataArray []ExtensionsInstanceRuntimeDataInput

func (ExtensionsInstanceRuntimeDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionsInstanceRuntimeData)(nil)).Elem()
}

func (i ExtensionsInstanceRuntimeDataArray) ToExtensionsInstanceRuntimeDataArrayOutput() ExtensionsInstanceRuntimeDataArrayOutput {
	return i.ToExtensionsInstanceRuntimeDataArrayOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataArray) ToExtensionsInstanceRuntimeDataArrayOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataArrayOutput)
}

type ExtensionsInstanceRuntimeDataOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeData)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataOutput) ToExtensionsInstanceRuntimeDataOutput() ExtensionsInstanceRuntimeDataOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataOutput) ToExtensionsInstanceRuntimeDataOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataOutput {
	return o
}

// The fatal error state for the extension instance
// Structure is documented below.
func (o ExtensionsInstanceRuntimeDataOutput) FatalError() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeData) *ExtensionsInstanceRuntimeDataFatalError { return v.FatalError }).(ExtensionsInstanceRuntimeDataFatalErrorPtrOutput)
}

// The processing state for the extension instance
// Structure is documented below.
func (o ExtensionsInstanceRuntimeDataOutput) ProcessingState() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeData) *ExtensionsInstanceRuntimeDataProcessingState {
		return v.ProcessingState
	}).(ExtensionsInstanceRuntimeDataProcessingStatePtrOutput)
}

// The time of the last state update.
func (o ExtensionsInstanceRuntimeDataOutput) StateUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeData) *string { return v.StateUpdateTime }).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceRuntimeDataArrayOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionsInstanceRuntimeData)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataArrayOutput) ToExtensionsInstanceRuntimeDataArrayOutput() ExtensionsInstanceRuntimeDataArrayOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataArrayOutput) ToExtensionsInstanceRuntimeDataArrayOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataArrayOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataArrayOutput) Index(i pulumi.IntInput) ExtensionsInstanceRuntimeDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionsInstanceRuntimeData {
		return vs[0].([]ExtensionsInstanceRuntimeData)[vs[1].(int)]
	}).(ExtensionsInstanceRuntimeDataOutput)
}

type ExtensionsInstanceRuntimeDataFatalError struct {
	// The error message. This is set by the extension developer to give
	// more detail on why the extension is unusable and must be re-installed
	// or reconfigured.
	ErrorMessage *string `pulumi:"errorMessage"`
}

// ExtensionsInstanceRuntimeDataFatalErrorInput is an input type that accepts ExtensionsInstanceRuntimeDataFatalErrorArgs and ExtensionsInstanceRuntimeDataFatalErrorOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataFatalErrorInput` via:
//
//	ExtensionsInstanceRuntimeDataFatalErrorArgs{...}
type ExtensionsInstanceRuntimeDataFatalErrorInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataFatalErrorOutput() ExtensionsInstanceRuntimeDataFatalErrorOutput
	ToExtensionsInstanceRuntimeDataFatalErrorOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataFatalErrorOutput
}

type ExtensionsInstanceRuntimeDataFatalErrorArgs struct {
	// The error message. This is set by the extension developer to give
	// more detail on why the extension is unusable and must be re-installed
	// or reconfigured.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
}

func (ExtensionsInstanceRuntimeDataFatalErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeDataFatalError)(nil)).Elem()
}

func (i ExtensionsInstanceRuntimeDataFatalErrorArgs) ToExtensionsInstanceRuntimeDataFatalErrorOutput() ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return i.ToExtensionsInstanceRuntimeDataFatalErrorOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataFatalErrorArgs) ToExtensionsInstanceRuntimeDataFatalErrorOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataFatalErrorOutput)
}

func (i ExtensionsInstanceRuntimeDataFatalErrorArgs) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return i.ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataFatalErrorArgs) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataFatalErrorOutput).ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx)
}

// ExtensionsInstanceRuntimeDataFatalErrorPtrInput is an input type that accepts ExtensionsInstanceRuntimeDataFatalErrorArgs, ExtensionsInstanceRuntimeDataFatalErrorPtr and ExtensionsInstanceRuntimeDataFatalErrorPtrOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataFatalErrorPtrInput` via:
//
//	        ExtensionsInstanceRuntimeDataFatalErrorArgs{...}
//
//	or:
//
//	        nil
type ExtensionsInstanceRuntimeDataFatalErrorPtrInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput
	ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput
}

type extensionsInstanceRuntimeDataFatalErrorPtrType ExtensionsInstanceRuntimeDataFatalErrorArgs

func ExtensionsInstanceRuntimeDataFatalErrorPtr(v *ExtensionsInstanceRuntimeDataFatalErrorArgs) ExtensionsInstanceRuntimeDataFatalErrorPtrInput {
	return (*extensionsInstanceRuntimeDataFatalErrorPtrType)(v)
}

func (*extensionsInstanceRuntimeDataFatalErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceRuntimeDataFatalError)(nil)).Elem()
}

func (i *extensionsInstanceRuntimeDataFatalErrorPtrType) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return i.ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(context.Background())
}

func (i *extensionsInstanceRuntimeDataFatalErrorPtrType) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataFatalErrorPtrOutput)
}

type ExtensionsInstanceRuntimeDataFatalErrorOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataFatalErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeDataFatalError)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ToExtensionsInstanceRuntimeDataFatalErrorOutput() ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ToExtensionsInstanceRuntimeDataFatalErrorOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o.ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(context.Background())
}

func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensionsInstanceRuntimeDataFatalError) *ExtensionsInstanceRuntimeDataFatalError {
		return &v
	}).(ExtensionsInstanceRuntimeDataFatalErrorPtrOutput)
}

// The error message. This is set by the extension developer to give
// more detail on why the extension is unusable and must be re-installed
// or reconfigured.
func (o ExtensionsInstanceRuntimeDataFatalErrorOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeDataFatalError) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceRuntimeDataFatalErrorPtrOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceRuntimeDataFatalError)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutput() ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) ToExtensionsInstanceRuntimeDataFatalErrorPtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataFatalErrorPtrOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) Elem() ExtensionsInstanceRuntimeDataFatalErrorOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataFatalError) ExtensionsInstanceRuntimeDataFatalError {
		if v != nil {
			return *v
		}
		var ret ExtensionsInstanceRuntimeDataFatalError
		return ret
	}).(ExtensionsInstanceRuntimeDataFatalErrorOutput)
}

// The error message. This is set by the extension developer to give
// more detail on why the extension is unusable and must be re-installed
// or reconfigured.
func (o ExtensionsInstanceRuntimeDataFatalErrorPtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataFatalError) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceRuntimeDataProcessingState struct {
	// Details about the processing. e.g. This could include the type of
	// processing in progress or it could list errors or failures.
	// This information will be shown in the console on the detail page
	// for the extension instance.
	DetailMessage *string `pulumi:"detailMessage"`
	// The processing state of the extension instance.
	State *string `pulumi:"state"`
}

// ExtensionsInstanceRuntimeDataProcessingStateInput is an input type that accepts ExtensionsInstanceRuntimeDataProcessingStateArgs and ExtensionsInstanceRuntimeDataProcessingStateOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataProcessingStateInput` via:
//
//	ExtensionsInstanceRuntimeDataProcessingStateArgs{...}
type ExtensionsInstanceRuntimeDataProcessingStateInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataProcessingStateOutput() ExtensionsInstanceRuntimeDataProcessingStateOutput
	ToExtensionsInstanceRuntimeDataProcessingStateOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataProcessingStateOutput
}

type ExtensionsInstanceRuntimeDataProcessingStateArgs struct {
	// Details about the processing. e.g. This could include the type of
	// processing in progress or it could list errors or failures.
	// This information will be shown in the console on the detail page
	// for the extension instance.
	DetailMessage pulumi.StringPtrInput `pulumi:"detailMessage"`
	// The processing state of the extension instance.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ExtensionsInstanceRuntimeDataProcessingStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeDataProcessingState)(nil)).Elem()
}

func (i ExtensionsInstanceRuntimeDataProcessingStateArgs) ToExtensionsInstanceRuntimeDataProcessingStateOutput() ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return i.ToExtensionsInstanceRuntimeDataProcessingStateOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataProcessingStateArgs) ToExtensionsInstanceRuntimeDataProcessingStateOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataProcessingStateOutput)
}

func (i ExtensionsInstanceRuntimeDataProcessingStateArgs) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return i.ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(context.Background())
}

func (i ExtensionsInstanceRuntimeDataProcessingStateArgs) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataProcessingStateOutput).ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx)
}

// ExtensionsInstanceRuntimeDataProcessingStatePtrInput is an input type that accepts ExtensionsInstanceRuntimeDataProcessingStateArgs, ExtensionsInstanceRuntimeDataProcessingStatePtr and ExtensionsInstanceRuntimeDataProcessingStatePtrOutput values.
// You can construct a concrete instance of `ExtensionsInstanceRuntimeDataProcessingStatePtrInput` via:
//
//	        ExtensionsInstanceRuntimeDataProcessingStateArgs{...}
//
//	or:
//
//	        nil
type ExtensionsInstanceRuntimeDataProcessingStatePtrInput interface {
	pulumi.Input

	ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput
	ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput
}

type extensionsInstanceRuntimeDataProcessingStatePtrType ExtensionsInstanceRuntimeDataProcessingStateArgs

func ExtensionsInstanceRuntimeDataProcessingStatePtr(v *ExtensionsInstanceRuntimeDataProcessingStateArgs) ExtensionsInstanceRuntimeDataProcessingStatePtrInput {
	return (*extensionsInstanceRuntimeDataProcessingStatePtrType)(v)
}

func (*extensionsInstanceRuntimeDataProcessingStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceRuntimeDataProcessingState)(nil)).Elem()
}

func (i *extensionsInstanceRuntimeDataProcessingStatePtrType) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return i.ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(context.Background())
}

func (i *extensionsInstanceRuntimeDataProcessingStatePtrType) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionsInstanceRuntimeDataProcessingStatePtrOutput)
}

type ExtensionsInstanceRuntimeDataProcessingStateOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataProcessingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionsInstanceRuntimeDataProcessingState)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) ToExtensionsInstanceRuntimeDataProcessingStateOutput() ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) ToExtensionsInstanceRuntimeDataProcessingStateOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o.ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(context.Background())
}

func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensionsInstanceRuntimeDataProcessingState) *ExtensionsInstanceRuntimeDataProcessingState {
		return &v
	}).(ExtensionsInstanceRuntimeDataProcessingStatePtrOutput)
}

// Details about the processing. e.g. This could include the type of
// processing in progress or it could list errors or failures.
// This information will be shown in the console on the detail page
// for the extension instance.
func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) DetailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeDataProcessingState) *string { return v.DetailMessage }).(pulumi.StringPtrOutput)
}

// The processing state of the extension instance.
func (o ExtensionsInstanceRuntimeDataProcessingStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionsInstanceRuntimeDataProcessingState) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ExtensionsInstanceRuntimeDataProcessingStatePtrOutput struct{ *pulumi.OutputState }

func (ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionsInstanceRuntimeDataProcessingState)(nil)).Elem()
}

func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutput() ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) ToExtensionsInstanceRuntimeDataProcessingStatePtrOutputWithContext(ctx context.Context) ExtensionsInstanceRuntimeDataProcessingStatePtrOutput {
	return o
}

func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) Elem() ExtensionsInstanceRuntimeDataProcessingStateOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataProcessingState) ExtensionsInstanceRuntimeDataProcessingState {
		if v != nil {
			return *v
		}
		var ret ExtensionsInstanceRuntimeDataProcessingState
		return ret
	}).(ExtensionsInstanceRuntimeDataProcessingStateOutput)
}

// Details about the processing. e.g. This could include the type of
// processing in progress or it could list errors or failures.
// This information will be shown in the console on the detail page
// for the extension instance.
func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) DetailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataProcessingState) *string {
		if v == nil {
			return nil
		}
		return v.DetailMessage
	}).(pulumi.StringPtrOutput)
}

// The processing state of the extension instance.
func (o ExtensionsInstanceRuntimeDataProcessingStatePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionsInstanceRuntimeDataProcessingState) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type HostingCustomDomainCert struct {
	// The state of the certificate. Only the `CERT_ACTIVE` and
	// `CERT_EXPIRING_SOON` states provide SSL coverage for a domain name. If the
	// state is `PROPAGATING` and Hosting had an active cert for the domain name
	// before, that formerly-active cert provides SSL coverage for the domain name
	// until the current cert propagates.
	State *string `pulumi:"state"`
	// The record's type, which determines what data the record contains.
	Type *string `pulumi:"type"`
	// A set of ACME challenges you can add to your DNS records or existing,
	// non-Hosting hosting provider to allow Hosting to create an SSL certificate
	// for your domain name before you point traffic toward hosting. You can use
	// thse challenges as part of a zero downtime transition from your old
	// provider to Hosting.
	// Structure is documented below.
	Verification *HostingCustomDomainCertVerification `pulumi:"verification"`
}

// HostingCustomDomainCertInput is an input type that accepts HostingCustomDomainCertArgs and HostingCustomDomainCertOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertInput` via:
//
//	HostingCustomDomainCertArgs{...}
type HostingCustomDomainCertInput interface {
	pulumi.Input

	ToHostingCustomDomainCertOutput() HostingCustomDomainCertOutput
	ToHostingCustomDomainCertOutputWithContext(context.Context) HostingCustomDomainCertOutput
}

type HostingCustomDomainCertArgs struct {
	// The state of the certificate. Only the `CERT_ACTIVE` and
	// `CERT_EXPIRING_SOON` states provide SSL coverage for a domain name. If the
	// state is `PROPAGATING` and Hosting had an active cert for the domain name
	// before, that formerly-active cert provides SSL coverage for the domain name
	// until the current cert propagates.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The record's type, which determines what data the record contains.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// A set of ACME challenges you can add to your DNS records or existing,
	// non-Hosting hosting provider to allow Hosting to create an SSL certificate
	// for your domain name before you point traffic toward hosting. You can use
	// thse challenges as part of a zero downtime transition from your old
	// provider to Hosting.
	// Structure is documented below.
	Verification HostingCustomDomainCertVerificationPtrInput `pulumi:"verification"`
}

func (HostingCustomDomainCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCert)(nil)).Elem()
}

func (i HostingCustomDomainCertArgs) ToHostingCustomDomainCertOutput() HostingCustomDomainCertOutput {
	return i.ToHostingCustomDomainCertOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertArgs) ToHostingCustomDomainCertOutputWithContext(ctx context.Context) HostingCustomDomainCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertOutput)
}

// HostingCustomDomainCertArrayInput is an input type that accepts HostingCustomDomainCertArray and HostingCustomDomainCertArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertArrayInput` via:
//
//	HostingCustomDomainCertArray{ HostingCustomDomainCertArgs{...} }
type HostingCustomDomainCertArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainCertArrayOutput() HostingCustomDomainCertArrayOutput
	ToHostingCustomDomainCertArrayOutputWithContext(context.Context) HostingCustomDomainCertArrayOutput
}

type HostingCustomDomainCertArray []HostingCustomDomainCertInput

func (HostingCustomDomainCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCert)(nil)).Elem()
}

func (i HostingCustomDomainCertArray) ToHostingCustomDomainCertArrayOutput() HostingCustomDomainCertArrayOutput {
	return i.ToHostingCustomDomainCertArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertArray) ToHostingCustomDomainCertArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertArrayOutput)
}

type HostingCustomDomainCertOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCert)(nil)).Elem()
}

func (o HostingCustomDomainCertOutput) ToHostingCustomDomainCertOutput() HostingCustomDomainCertOutput {
	return o
}

func (o HostingCustomDomainCertOutput) ToHostingCustomDomainCertOutputWithContext(ctx context.Context) HostingCustomDomainCertOutput {
	return o
}

// The state of the certificate. Only the `CERT_ACTIVE` and
// `CERT_EXPIRING_SOON` states provide SSL coverage for a domain name. If the
// state is `PROPAGATING` and Hosting had an active cert for the domain name
// before, that formerly-active cert provides SSL coverage for the domain name
// until the current cert propagates.
func (o HostingCustomDomainCertOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCert) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The record's type, which determines what data the record contains.
func (o HostingCustomDomainCertOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCert) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// A set of ACME challenges you can add to your DNS records or existing,
// non-Hosting hosting provider to allow Hosting to create an SSL certificate
// for your domain name before you point traffic toward hosting. You can use
// thse challenges as part of a zero downtime transition from your old
// provider to Hosting.
// Structure is documented below.
func (o HostingCustomDomainCertOutput) Verification() HostingCustomDomainCertVerificationPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCert) *HostingCustomDomainCertVerification { return v.Verification }).(HostingCustomDomainCertVerificationPtrOutput)
}

type HostingCustomDomainCertArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCert)(nil)).Elem()
}

func (o HostingCustomDomainCertArrayOutput) ToHostingCustomDomainCertArrayOutput() HostingCustomDomainCertArrayOutput {
	return o
}

func (o HostingCustomDomainCertArrayOutput) ToHostingCustomDomainCertArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertArrayOutput {
	return o
}

func (o HostingCustomDomainCertArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainCert {
		return vs[0].([]HostingCustomDomainCert)[vs[1].(int)]
	}).(HostingCustomDomainCertOutput)
}

type HostingCustomDomainCertVerification struct {
	// A `TXT` record to add to your DNS records that confirms your intent to
	// let Hosting create an SSL cert for your domain name.
	// Structure is documented below.
	Dns *HostingCustomDomainCertVerificationDns `pulumi:"dns"`
	// A file to add to your existing, non-Hosting hosting service that confirms
	// your intent to let Hosting create an SSL cert for your domain name.
	// Structure is documented below.
	Http *HostingCustomDomainCertVerificationHttp `pulumi:"http"`
}

// HostingCustomDomainCertVerificationInput is an input type that accepts HostingCustomDomainCertVerificationArgs and HostingCustomDomainCertVerificationOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationInput` via:
//
//	HostingCustomDomainCertVerificationArgs{...}
type HostingCustomDomainCertVerificationInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationOutput() HostingCustomDomainCertVerificationOutput
	ToHostingCustomDomainCertVerificationOutputWithContext(context.Context) HostingCustomDomainCertVerificationOutput
}

type HostingCustomDomainCertVerificationArgs struct {
	// A `TXT` record to add to your DNS records that confirms your intent to
	// let Hosting create an SSL cert for your domain name.
	// Structure is documented below.
	Dns HostingCustomDomainCertVerificationDnsPtrInput `pulumi:"dns"`
	// A file to add to your existing, non-Hosting hosting service that confirms
	// your intent to let Hosting create an SSL cert for your domain name.
	// Structure is documented below.
	Http HostingCustomDomainCertVerificationHttpPtrInput `pulumi:"http"`
}

func (HostingCustomDomainCertVerificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerification)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationArgs) ToHostingCustomDomainCertVerificationOutput() HostingCustomDomainCertVerificationOutput {
	return i.ToHostingCustomDomainCertVerificationOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationArgs) ToHostingCustomDomainCertVerificationOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationOutput)
}

func (i HostingCustomDomainCertVerificationArgs) ToHostingCustomDomainCertVerificationPtrOutput() HostingCustomDomainCertVerificationPtrOutput {
	return i.ToHostingCustomDomainCertVerificationPtrOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationArgs) ToHostingCustomDomainCertVerificationPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationOutput).ToHostingCustomDomainCertVerificationPtrOutputWithContext(ctx)
}

// HostingCustomDomainCertVerificationPtrInput is an input type that accepts HostingCustomDomainCertVerificationArgs, HostingCustomDomainCertVerificationPtr and HostingCustomDomainCertVerificationPtrOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationPtrInput` via:
//
//	        HostingCustomDomainCertVerificationArgs{...}
//
//	or:
//
//	        nil
type HostingCustomDomainCertVerificationPtrInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationPtrOutput() HostingCustomDomainCertVerificationPtrOutput
	ToHostingCustomDomainCertVerificationPtrOutputWithContext(context.Context) HostingCustomDomainCertVerificationPtrOutput
}

type hostingCustomDomainCertVerificationPtrType HostingCustomDomainCertVerificationArgs

func HostingCustomDomainCertVerificationPtr(v *HostingCustomDomainCertVerificationArgs) HostingCustomDomainCertVerificationPtrInput {
	return (*hostingCustomDomainCertVerificationPtrType)(v)
}

func (*hostingCustomDomainCertVerificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingCustomDomainCertVerification)(nil)).Elem()
}

func (i *hostingCustomDomainCertVerificationPtrType) ToHostingCustomDomainCertVerificationPtrOutput() HostingCustomDomainCertVerificationPtrOutput {
	return i.ToHostingCustomDomainCertVerificationPtrOutputWithContext(context.Background())
}

func (i *hostingCustomDomainCertVerificationPtrType) ToHostingCustomDomainCertVerificationPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationPtrOutput)
}

type HostingCustomDomainCertVerificationOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerification)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationOutput) ToHostingCustomDomainCertVerificationOutput() HostingCustomDomainCertVerificationOutput {
	return o
}

func (o HostingCustomDomainCertVerificationOutput) ToHostingCustomDomainCertVerificationOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationOutput {
	return o
}

func (o HostingCustomDomainCertVerificationOutput) ToHostingCustomDomainCertVerificationPtrOutput() HostingCustomDomainCertVerificationPtrOutput {
	return o.ToHostingCustomDomainCertVerificationPtrOutputWithContext(context.Background())
}

func (o HostingCustomDomainCertVerificationOutput) ToHostingCustomDomainCertVerificationPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostingCustomDomainCertVerification) *HostingCustomDomainCertVerification {
		return &v
	}).(HostingCustomDomainCertVerificationPtrOutput)
}

// A `TXT` record to add to your DNS records that confirms your intent to
// let Hosting create an SSL cert for your domain name.
// Structure is documented below.
func (o HostingCustomDomainCertVerificationOutput) Dns() HostingCustomDomainCertVerificationDnsPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerification) *HostingCustomDomainCertVerificationDns { return v.Dns }).(HostingCustomDomainCertVerificationDnsPtrOutput)
}

// A file to add to your existing, non-Hosting hosting service that confirms
// your intent to let Hosting create an SSL cert for your domain name.
// Structure is documented below.
func (o HostingCustomDomainCertVerificationOutput) Http() HostingCustomDomainCertVerificationHttpPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerification) *HostingCustomDomainCertVerificationHttp { return v.Http }).(HostingCustomDomainCertVerificationHttpPtrOutput)
}

type HostingCustomDomainCertVerificationPtrOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingCustomDomainCertVerification)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationPtrOutput) ToHostingCustomDomainCertVerificationPtrOutput() HostingCustomDomainCertVerificationPtrOutput {
	return o
}

func (o HostingCustomDomainCertVerificationPtrOutput) ToHostingCustomDomainCertVerificationPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationPtrOutput {
	return o
}

func (o HostingCustomDomainCertVerificationPtrOutput) Elem() HostingCustomDomainCertVerificationOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerification) HostingCustomDomainCertVerification {
		if v != nil {
			return *v
		}
		var ret HostingCustomDomainCertVerification
		return ret
	}).(HostingCustomDomainCertVerificationOutput)
}

// A `TXT` record to add to your DNS records that confirms your intent to
// let Hosting create an SSL cert for your domain name.
// Structure is documented below.
func (o HostingCustomDomainCertVerificationPtrOutput) Dns() HostingCustomDomainCertVerificationDnsPtrOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerification) *HostingCustomDomainCertVerificationDns {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(HostingCustomDomainCertVerificationDnsPtrOutput)
}

// A file to add to your existing, non-Hosting hosting service that confirms
// your intent to let Hosting create an SSL cert for your domain name.
// Structure is documented below.
func (o HostingCustomDomainCertVerificationPtrOutput) Http() HostingCustomDomainCertVerificationHttpPtrOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerification) *HostingCustomDomainCertVerificationHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(HostingCustomDomainCertVerificationHttpPtrOutput)
}

type HostingCustomDomainCertVerificationDns struct {
	// (Output)
	// The last time Hosting checked your CustomDomain's DNS records.
	CheckTime *string `pulumi:"checkTime"`
	// A text string to serve at the path.
	Desireds []HostingCustomDomainCertVerificationDnsDesired `pulumi:"desireds"`
	// Whether Hosting was able to find the required file contents on the
	// specified path during its last check.
	Discovereds []HostingCustomDomainCertVerificationDnsDiscovered `pulumi:"discovereds"`
}

// HostingCustomDomainCertVerificationDnsInput is an input type that accepts HostingCustomDomainCertVerificationDnsArgs and HostingCustomDomainCertVerificationDnsOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsInput` via:
//
//	HostingCustomDomainCertVerificationDnsArgs{...}
type HostingCustomDomainCertVerificationDnsInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsOutput() HostingCustomDomainCertVerificationDnsOutput
	ToHostingCustomDomainCertVerificationDnsOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsOutput
}

type HostingCustomDomainCertVerificationDnsArgs struct {
	// (Output)
	// The last time Hosting checked your CustomDomain's DNS records.
	CheckTime pulumi.StringPtrInput `pulumi:"checkTime"`
	// A text string to serve at the path.
	Desireds HostingCustomDomainCertVerificationDnsDesiredArrayInput `pulumi:"desireds"`
	// Whether Hosting was able to find the required file contents on the
	// specified path during its last check.
	Discovereds HostingCustomDomainCertVerificationDnsDiscoveredArrayInput `pulumi:"discovereds"`
}

func (HostingCustomDomainCertVerificationDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDns)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationDnsArgs) ToHostingCustomDomainCertVerificationDnsOutput() HostingCustomDomainCertVerificationDnsOutput {
	return i.ToHostingCustomDomainCertVerificationDnsOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsArgs) ToHostingCustomDomainCertVerificationDnsOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsOutput)
}

func (i HostingCustomDomainCertVerificationDnsArgs) ToHostingCustomDomainCertVerificationDnsPtrOutput() HostingCustomDomainCertVerificationDnsPtrOutput {
	return i.ToHostingCustomDomainCertVerificationDnsPtrOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsArgs) ToHostingCustomDomainCertVerificationDnsPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsOutput).ToHostingCustomDomainCertVerificationDnsPtrOutputWithContext(ctx)
}

// HostingCustomDomainCertVerificationDnsPtrInput is an input type that accepts HostingCustomDomainCertVerificationDnsArgs, HostingCustomDomainCertVerificationDnsPtr and HostingCustomDomainCertVerificationDnsPtrOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsPtrInput` via:
//
//	        HostingCustomDomainCertVerificationDnsArgs{...}
//
//	or:
//
//	        nil
type HostingCustomDomainCertVerificationDnsPtrInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsPtrOutput() HostingCustomDomainCertVerificationDnsPtrOutput
	ToHostingCustomDomainCertVerificationDnsPtrOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsPtrOutput
}

type hostingCustomDomainCertVerificationDnsPtrType HostingCustomDomainCertVerificationDnsArgs

func HostingCustomDomainCertVerificationDnsPtr(v *HostingCustomDomainCertVerificationDnsArgs) HostingCustomDomainCertVerificationDnsPtrInput {
	return (*hostingCustomDomainCertVerificationDnsPtrType)(v)
}

func (*hostingCustomDomainCertVerificationDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingCustomDomainCertVerificationDns)(nil)).Elem()
}

func (i *hostingCustomDomainCertVerificationDnsPtrType) ToHostingCustomDomainCertVerificationDnsPtrOutput() HostingCustomDomainCertVerificationDnsPtrOutput {
	return i.ToHostingCustomDomainCertVerificationDnsPtrOutputWithContext(context.Background())
}

func (i *hostingCustomDomainCertVerificationDnsPtrType) ToHostingCustomDomainCertVerificationDnsPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsPtrOutput)
}

type HostingCustomDomainCertVerificationDnsOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDns)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsOutput) ToHostingCustomDomainCertVerificationDnsOutput() HostingCustomDomainCertVerificationDnsOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsOutput) ToHostingCustomDomainCertVerificationDnsOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsOutput) ToHostingCustomDomainCertVerificationDnsPtrOutput() HostingCustomDomainCertVerificationDnsPtrOutput {
	return o.ToHostingCustomDomainCertVerificationDnsPtrOutputWithContext(context.Background())
}

func (o HostingCustomDomainCertVerificationDnsOutput) ToHostingCustomDomainCertVerificationDnsPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostingCustomDomainCertVerificationDns) *HostingCustomDomainCertVerificationDns {
		return &v
	}).(HostingCustomDomainCertVerificationDnsPtrOutput)
}

// (Output)
// The last time Hosting checked your CustomDomain's DNS records.
func (o HostingCustomDomainCertVerificationDnsOutput) CheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDns) *string { return v.CheckTime }).(pulumi.StringPtrOutput)
}

// A text string to serve at the path.
func (o HostingCustomDomainCertVerificationDnsOutput) Desireds() HostingCustomDomainCertVerificationDnsDesiredArrayOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDns) []HostingCustomDomainCertVerificationDnsDesired {
		return v.Desireds
	}).(HostingCustomDomainCertVerificationDnsDesiredArrayOutput)
}

// Whether Hosting was able to find the required file contents on the
// specified path during its last check.
func (o HostingCustomDomainCertVerificationDnsOutput) Discovereds() HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDns) []HostingCustomDomainCertVerificationDnsDiscovered {
		return v.Discovereds
	}).(HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput)
}

type HostingCustomDomainCertVerificationDnsPtrOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingCustomDomainCertVerificationDns)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsPtrOutput) ToHostingCustomDomainCertVerificationDnsPtrOutput() HostingCustomDomainCertVerificationDnsPtrOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsPtrOutput) ToHostingCustomDomainCertVerificationDnsPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsPtrOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsPtrOutput) Elem() HostingCustomDomainCertVerificationDnsOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerificationDns) HostingCustomDomainCertVerificationDns {
		if v != nil {
			return *v
		}
		var ret HostingCustomDomainCertVerificationDns
		return ret
	}).(HostingCustomDomainCertVerificationDnsOutput)
}

// (Output)
// The last time Hosting checked your CustomDomain's DNS records.
func (o HostingCustomDomainCertVerificationDnsPtrOutput) CheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerificationDns) *string {
		if v == nil {
			return nil
		}
		return v.CheckTime
	}).(pulumi.StringPtrOutput)
}

// A text string to serve at the path.
func (o HostingCustomDomainCertVerificationDnsPtrOutput) Desireds() HostingCustomDomainCertVerificationDnsDesiredArrayOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerificationDns) []HostingCustomDomainCertVerificationDnsDesired {
		if v == nil {
			return nil
		}
		return v.Desireds
	}).(HostingCustomDomainCertVerificationDnsDesiredArrayOutput)
}

// Whether Hosting was able to find the required file contents on the
// specified path during its last check.
func (o HostingCustomDomainCertVerificationDnsPtrOutput) Discovereds() HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerificationDns) []HostingCustomDomainCertVerificationDnsDiscovered {
		if v == nil {
			return nil
		}
		return v.Discovereds
	}).(HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput)
}

type HostingCustomDomainCertVerificationDnsDesired struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName *string `pulumi:"domainName"`
	// Records on the domain
	// Structure is documented below.
	Records []HostingCustomDomainCertVerificationDnsDesiredRecord `pulumi:"records"`
}

// HostingCustomDomainCertVerificationDnsDesiredInput is an input type that accepts HostingCustomDomainCertVerificationDnsDesiredArgs and HostingCustomDomainCertVerificationDnsDesiredOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsDesiredInput` via:
//
//	HostingCustomDomainCertVerificationDnsDesiredArgs{...}
type HostingCustomDomainCertVerificationDnsDesiredInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsDesiredOutput() HostingCustomDomainCertVerificationDnsDesiredOutput
	ToHostingCustomDomainCertVerificationDnsDesiredOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsDesiredOutput
}

type HostingCustomDomainCertVerificationDnsDesiredArgs struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// Records on the domain
	// Structure is documented below.
	Records HostingCustomDomainCertVerificationDnsDesiredRecordArrayInput `pulumi:"records"`
}

func (HostingCustomDomainCertVerificationDnsDesiredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDesired)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationDnsDesiredArgs) ToHostingCustomDomainCertVerificationDnsDesiredOutput() HostingCustomDomainCertVerificationDnsDesiredOutput {
	return i.ToHostingCustomDomainCertVerificationDnsDesiredOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsDesiredArgs) ToHostingCustomDomainCertVerificationDnsDesiredOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDesiredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsDesiredOutput)
}

// HostingCustomDomainCertVerificationDnsDesiredArrayInput is an input type that accepts HostingCustomDomainCertVerificationDnsDesiredArray and HostingCustomDomainCertVerificationDnsDesiredArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsDesiredArrayInput` via:
//
//	HostingCustomDomainCertVerificationDnsDesiredArray{ HostingCustomDomainCertVerificationDnsDesiredArgs{...} }
type HostingCustomDomainCertVerificationDnsDesiredArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsDesiredArrayOutput() HostingCustomDomainCertVerificationDnsDesiredArrayOutput
	ToHostingCustomDomainCertVerificationDnsDesiredArrayOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsDesiredArrayOutput
}

type HostingCustomDomainCertVerificationDnsDesiredArray []HostingCustomDomainCertVerificationDnsDesiredInput

func (HostingCustomDomainCertVerificationDnsDesiredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCertVerificationDnsDesired)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationDnsDesiredArray) ToHostingCustomDomainCertVerificationDnsDesiredArrayOutput() HostingCustomDomainCertVerificationDnsDesiredArrayOutput {
	return i.ToHostingCustomDomainCertVerificationDnsDesiredArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsDesiredArray) ToHostingCustomDomainCertVerificationDnsDesiredArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDesiredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsDesiredArrayOutput)
}

type HostingCustomDomainCertVerificationDnsDesiredOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsDesiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDesired)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsDesiredOutput) ToHostingCustomDomainCertVerificationDnsDesiredOutput() HostingCustomDomainCertVerificationDnsDesiredOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDesiredOutput) ToHostingCustomDomainCertVerificationDnsDesiredOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDesiredOutput {
	return o
}

// The domain name the record pertains to, e.g. `foo.bar.com.`.
func (o HostingCustomDomainCertVerificationDnsDesiredOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDesired) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// Records on the domain
// Structure is documented below.
func (o HostingCustomDomainCertVerificationDnsDesiredOutput) Records() HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDesired) []HostingCustomDomainCertVerificationDnsDesiredRecord {
		return v.Records
	}).(HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput)
}

type HostingCustomDomainCertVerificationDnsDesiredArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsDesiredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCertVerificationDnsDesired)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsDesiredArrayOutput) ToHostingCustomDomainCertVerificationDnsDesiredArrayOutput() HostingCustomDomainCertVerificationDnsDesiredArrayOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDesiredArrayOutput) ToHostingCustomDomainCertVerificationDnsDesiredArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDesiredArrayOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDesiredArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainCertVerificationDnsDesiredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainCertVerificationDnsDesired {
		return vs[0].([]HostingCustomDomainCertVerificationDnsDesired)[vs[1].(int)]
	}).(HostingCustomDomainCertVerificationDnsDesiredOutput)
}

type HostingCustomDomainCertVerificationDnsDesiredRecord struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName *string `pulumi:"domainName"`
	// The data of the record. The meaning of the value depends on record type:
	// - A and AAAA: IP addresses for the domain name.
	// - CNAME: Another domain to check for records.
	// - TXT: Arbitrary text strings associated with the domain name. Hosting
	//   uses TXT records to determine a which Firebase Projects have
	//   permission to act on the domain name's behalf.
	// - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
	Rdata *string `pulumi:"rdata"`
	// Indicates the a required action for this record.
	RequiredAction *string `pulumi:"requiredAction"`
	// The record's type, which determines what data the record contains.
	Type *string `pulumi:"type"`
}

// HostingCustomDomainCertVerificationDnsDesiredRecordInput is an input type that accepts HostingCustomDomainCertVerificationDnsDesiredRecordArgs and HostingCustomDomainCertVerificationDnsDesiredRecordOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsDesiredRecordInput` via:
//
//	HostingCustomDomainCertVerificationDnsDesiredRecordArgs{...}
type HostingCustomDomainCertVerificationDnsDesiredRecordInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsDesiredRecordOutput() HostingCustomDomainCertVerificationDnsDesiredRecordOutput
	ToHostingCustomDomainCertVerificationDnsDesiredRecordOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsDesiredRecordOutput
}

type HostingCustomDomainCertVerificationDnsDesiredRecordArgs struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// The data of the record. The meaning of the value depends on record type:
	// - A and AAAA: IP addresses for the domain name.
	// - CNAME: Another domain to check for records.
	// - TXT: Arbitrary text strings associated with the domain name. Hosting
	//   uses TXT records to determine a which Firebase Projects have
	//   permission to act on the domain name's behalf.
	// - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
	Rdata pulumi.StringPtrInput `pulumi:"rdata"`
	// Indicates the a required action for this record.
	RequiredAction pulumi.StringPtrInput `pulumi:"requiredAction"`
	// The record's type, which determines what data the record contains.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HostingCustomDomainCertVerificationDnsDesiredRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDesiredRecord)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationDnsDesiredRecordArgs) ToHostingCustomDomainCertVerificationDnsDesiredRecordOutput() HostingCustomDomainCertVerificationDnsDesiredRecordOutput {
	return i.ToHostingCustomDomainCertVerificationDnsDesiredRecordOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsDesiredRecordArgs) ToHostingCustomDomainCertVerificationDnsDesiredRecordOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDesiredRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsDesiredRecordOutput)
}

// HostingCustomDomainCertVerificationDnsDesiredRecordArrayInput is an input type that accepts HostingCustomDomainCertVerificationDnsDesiredRecordArray and HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsDesiredRecordArrayInput` via:
//
//	HostingCustomDomainCertVerificationDnsDesiredRecordArray{ HostingCustomDomainCertVerificationDnsDesiredRecordArgs{...} }
type HostingCustomDomainCertVerificationDnsDesiredRecordArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput() HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput
	ToHostingCustomDomainCertVerificationDnsDesiredRecordArrayOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput
}

type HostingCustomDomainCertVerificationDnsDesiredRecordArray []HostingCustomDomainCertVerificationDnsDesiredRecordInput

func (HostingCustomDomainCertVerificationDnsDesiredRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCertVerificationDnsDesiredRecord)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationDnsDesiredRecordArray) ToHostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput() HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput {
	return i.ToHostingCustomDomainCertVerificationDnsDesiredRecordArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsDesiredRecordArray) ToHostingCustomDomainCertVerificationDnsDesiredRecordArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput)
}

type HostingCustomDomainCertVerificationDnsDesiredRecordOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsDesiredRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDesiredRecord)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsDesiredRecordOutput) ToHostingCustomDomainCertVerificationDnsDesiredRecordOutput() HostingCustomDomainCertVerificationDnsDesiredRecordOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDesiredRecordOutput) ToHostingCustomDomainCertVerificationDnsDesiredRecordOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDesiredRecordOutput {
	return o
}

// The domain name the record pertains to, e.g. `foo.bar.com.`.
func (o HostingCustomDomainCertVerificationDnsDesiredRecordOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDesiredRecord) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// The data of the record. The meaning of the value depends on record type:
//   - A and AAAA: IP addresses for the domain name.
//   - CNAME: Another domain to check for records.
//   - TXT: Arbitrary text strings associated with the domain name. Hosting
//     uses TXT records to determine a which Firebase Projects have
//     permission to act on the domain name's behalf.
//   - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
func (o HostingCustomDomainCertVerificationDnsDesiredRecordOutput) Rdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDesiredRecord) *string { return v.Rdata }).(pulumi.StringPtrOutput)
}

// Indicates the a required action for this record.
func (o HostingCustomDomainCertVerificationDnsDesiredRecordOutput) RequiredAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDesiredRecord) *string { return v.RequiredAction }).(pulumi.StringPtrOutput)
}

// The record's type, which determines what data the record contains.
func (o HostingCustomDomainCertVerificationDnsDesiredRecordOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDesiredRecord) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCertVerificationDnsDesiredRecord)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput) ToHostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput() HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput) ToHostingCustomDomainCertVerificationDnsDesiredRecordArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainCertVerificationDnsDesiredRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainCertVerificationDnsDesiredRecord {
		return vs[0].([]HostingCustomDomainCertVerificationDnsDesiredRecord)[vs[1].(int)]
	}).(HostingCustomDomainCertVerificationDnsDesiredRecordOutput)
}

type HostingCustomDomainCertVerificationDnsDiscovered struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName *string `pulumi:"domainName"`
	// Records on the domain
	// Structure is documented below.
	Records []HostingCustomDomainCertVerificationDnsDiscoveredRecord `pulumi:"records"`
}

// HostingCustomDomainCertVerificationDnsDiscoveredInput is an input type that accepts HostingCustomDomainCertVerificationDnsDiscoveredArgs and HostingCustomDomainCertVerificationDnsDiscoveredOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsDiscoveredInput` via:
//
//	HostingCustomDomainCertVerificationDnsDiscoveredArgs{...}
type HostingCustomDomainCertVerificationDnsDiscoveredInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsDiscoveredOutput() HostingCustomDomainCertVerificationDnsDiscoveredOutput
	ToHostingCustomDomainCertVerificationDnsDiscoveredOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsDiscoveredOutput
}

type HostingCustomDomainCertVerificationDnsDiscoveredArgs struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// Records on the domain
	// Structure is documented below.
	Records HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayInput `pulumi:"records"`
}

func (HostingCustomDomainCertVerificationDnsDiscoveredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDiscovered)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationDnsDiscoveredArgs) ToHostingCustomDomainCertVerificationDnsDiscoveredOutput() HostingCustomDomainCertVerificationDnsDiscoveredOutput {
	return i.ToHostingCustomDomainCertVerificationDnsDiscoveredOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsDiscoveredArgs) ToHostingCustomDomainCertVerificationDnsDiscoveredOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDiscoveredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsDiscoveredOutput)
}

// HostingCustomDomainCertVerificationDnsDiscoveredArrayInput is an input type that accepts HostingCustomDomainCertVerificationDnsDiscoveredArray and HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsDiscoveredArrayInput` via:
//
//	HostingCustomDomainCertVerificationDnsDiscoveredArray{ HostingCustomDomainCertVerificationDnsDiscoveredArgs{...} }
type HostingCustomDomainCertVerificationDnsDiscoveredArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsDiscoveredArrayOutput() HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput
	ToHostingCustomDomainCertVerificationDnsDiscoveredArrayOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput
}

type HostingCustomDomainCertVerificationDnsDiscoveredArray []HostingCustomDomainCertVerificationDnsDiscoveredInput

func (HostingCustomDomainCertVerificationDnsDiscoveredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCertVerificationDnsDiscovered)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationDnsDiscoveredArray) ToHostingCustomDomainCertVerificationDnsDiscoveredArrayOutput() HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput {
	return i.ToHostingCustomDomainCertVerificationDnsDiscoveredArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsDiscoveredArray) ToHostingCustomDomainCertVerificationDnsDiscoveredArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput)
}

type HostingCustomDomainCertVerificationDnsDiscoveredOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsDiscoveredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDiscovered)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredOutput) ToHostingCustomDomainCertVerificationDnsDiscoveredOutput() HostingCustomDomainCertVerificationDnsDiscoveredOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredOutput) ToHostingCustomDomainCertVerificationDnsDiscoveredOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDiscoveredOutput {
	return o
}

// The domain name the record pertains to, e.g. `foo.bar.com.`.
func (o HostingCustomDomainCertVerificationDnsDiscoveredOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDiscovered) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// Records on the domain
// Structure is documented below.
func (o HostingCustomDomainCertVerificationDnsDiscoveredOutput) Records() HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDiscovered) []HostingCustomDomainCertVerificationDnsDiscoveredRecord {
		return v.Records
	}).(HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput)
}

type HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCertVerificationDnsDiscovered)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput) ToHostingCustomDomainCertVerificationDnsDiscoveredArrayOutput() HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput) ToHostingCustomDomainCertVerificationDnsDiscoveredArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainCertVerificationDnsDiscoveredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainCertVerificationDnsDiscovered {
		return vs[0].([]HostingCustomDomainCertVerificationDnsDiscovered)[vs[1].(int)]
	}).(HostingCustomDomainCertVerificationDnsDiscoveredOutput)
}

type HostingCustomDomainCertVerificationDnsDiscoveredRecord struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName *string `pulumi:"domainName"`
	// The data of the record. The meaning of the value depends on record type:
	// - A and AAAA: IP addresses for the domain name.
	// - CNAME: Another domain to check for records.
	// - TXT: Arbitrary text strings associated with the domain name. Hosting
	//   uses TXT records to determine a which Firebase Projects have
	//   permission to act on the domain name's behalf.
	// - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
	Rdata *string `pulumi:"rdata"`
	// Indicates the a required action for this record.
	RequiredAction *string `pulumi:"requiredAction"`
	// The record's type, which determines what data the record contains.
	Type *string `pulumi:"type"`
}

// HostingCustomDomainCertVerificationDnsDiscoveredRecordInput is an input type that accepts HostingCustomDomainCertVerificationDnsDiscoveredRecordArgs and HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsDiscoveredRecordInput` via:
//
//	HostingCustomDomainCertVerificationDnsDiscoveredRecordArgs{...}
type HostingCustomDomainCertVerificationDnsDiscoveredRecordInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsDiscoveredRecordOutput() HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput
	ToHostingCustomDomainCertVerificationDnsDiscoveredRecordOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput
}

type HostingCustomDomainCertVerificationDnsDiscoveredRecordArgs struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// The data of the record. The meaning of the value depends on record type:
	// - A and AAAA: IP addresses for the domain name.
	// - CNAME: Another domain to check for records.
	// - TXT: Arbitrary text strings associated with the domain name. Hosting
	//   uses TXT records to determine a which Firebase Projects have
	//   permission to act on the domain name's behalf.
	// - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
	Rdata pulumi.StringPtrInput `pulumi:"rdata"`
	// Indicates the a required action for this record.
	RequiredAction pulumi.StringPtrInput `pulumi:"requiredAction"`
	// The record's type, which determines what data the record contains.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HostingCustomDomainCertVerificationDnsDiscoveredRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDiscoveredRecord)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationDnsDiscoveredRecordArgs) ToHostingCustomDomainCertVerificationDnsDiscoveredRecordOutput() HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput {
	return i.ToHostingCustomDomainCertVerificationDnsDiscoveredRecordOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsDiscoveredRecordArgs) ToHostingCustomDomainCertVerificationDnsDiscoveredRecordOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput)
}

// HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayInput is an input type that accepts HostingCustomDomainCertVerificationDnsDiscoveredRecordArray and HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayInput` via:
//
//	HostingCustomDomainCertVerificationDnsDiscoveredRecordArray{ HostingCustomDomainCertVerificationDnsDiscoveredRecordArgs{...} }
type HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput() HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput
	ToHostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutputWithContext(context.Context) HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput
}

type HostingCustomDomainCertVerificationDnsDiscoveredRecordArray []HostingCustomDomainCertVerificationDnsDiscoveredRecordInput

func (HostingCustomDomainCertVerificationDnsDiscoveredRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCertVerificationDnsDiscoveredRecord)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationDnsDiscoveredRecordArray) ToHostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput() HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput {
	return i.ToHostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationDnsDiscoveredRecordArray) ToHostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput)
}

type HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDiscoveredRecord)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput) ToHostingCustomDomainCertVerificationDnsDiscoveredRecordOutput() HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput) ToHostingCustomDomainCertVerificationDnsDiscoveredRecordOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput {
	return o
}

// The domain name the record pertains to, e.g. `foo.bar.com.`.
func (o HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDiscoveredRecord) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// The data of the record. The meaning of the value depends on record type:
//   - A and AAAA: IP addresses for the domain name.
//   - CNAME: Another domain to check for records.
//   - TXT: Arbitrary text strings associated with the domain name. Hosting
//     uses TXT records to determine a which Firebase Projects have
//     permission to act on the domain name's behalf.
//   - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
func (o HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput) Rdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDiscoveredRecord) *string { return v.Rdata }).(pulumi.StringPtrOutput)
}

// Indicates the a required action for this record.
func (o HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput) RequiredAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDiscoveredRecord) *string { return v.RequiredAction }).(pulumi.StringPtrOutput)
}

// The record's type, which determines what data the record contains.
func (o HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationDnsDiscoveredRecord) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainCertVerificationDnsDiscoveredRecord)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput) ToHostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput() HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput) ToHostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput {
	return o
}

func (o HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainCertVerificationDnsDiscoveredRecord {
		return vs[0].([]HostingCustomDomainCertVerificationDnsDiscoveredRecord)[vs[1].(int)]
	}).(HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput)
}

type HostingCustomDomainCertVerificationHttp struct {
	// A text string to serve at the path.
	Desired *string `pulumi:"desired"`
	// Whether Hosting was able to find the required file contents on the
	// specified path during its last check.
	Discovered *string `pulumi:"discovered"`
	// (Output)
	// The last time Hosting systems checked for the file contents.
	LastCheckTime *string `pulumi:"lastCheckTime"`
	// The path to the file.
	Path *string `pulumi:"path"`
}

// HostingCustomDomainCertVerificationHttpInput is an input type that accepts HostingCustomDomainCertVerificationHttpArgs and HostingCustomDomainCertVerificationHttpOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationHttpInput` via:
//
//	HostingCustomDomainCertVerificationHttpArgs{...}
type HostingCustomDomainCertVerificationHttpInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationHttpOutput() HostingCustomDomainCertVerificationHttpOutput
	ToHostingCustomDomainCertVerificationHttpOutputWithContext(context.Context) HostingCustomDomainCertVerificationHttpOutput
}

type HostingCustomDomainCertVerificationHttpArgs struct {
	// A text string to serve at the path.
	Desired pulumi.StringPtrInput `pulumi:"desired"`
	// Whether Hosting was able to find the required file contents on the
	// specified path during its last check.
	Discovered pulumi.StringPtrInput `pulumi:"discovered"`
	// (Output)
	// The last time Hosting systems checked for the file contents.
	LastCheckTime pulumi.StringPtrInput `pulumi:"lastCheckTime"`
	// The path to the file.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (HostingCustomDomainCertVerificationHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationHttp)(nil)).Elem()
}

func (i HostingCustomDomainCertVerificationHttpArgs) ToHostingCustomDomainCertVerificationHttpOutput() HostingCustomDomainCertVerificationHttpOutput {
	return i.ToHostingCustomDomainCertVerificationHttpOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationHttpArgs) ToHostingCustomDomainCertVerificationHttpOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationHttpOutput)
}

func (i HostingCustomDomainCertVerificationHttpArgs) ToHostingCustomDomainCertVerificationHttpPtrOutput() HostingCustomDomainCertVerificationHttpPtrOutput {
	return i.ToHostingCustomDomainCertVerificationHttpPtrOutputWithContext(context.Background())
}

func (i HostingCustomDomainCertVerificationHttpArgs) ToHostingCustomDomainCertVerificationHttpPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationHttpOutput).ToHostingCustomDomainCertVerificationHttpPtrOutputWithContext(ctx)
}

// HostingCustomDomainCertVerificationHttpPtrInput is an input type that accepts HostingCustomDomainCertVerificationHttpArgs, HostingCustomDomainCertVerificationHttpPtr and HostingCustomDomainCertVerificationHttpPtrOutput values.
// You can construct a concrete instance of `HostingCustomDomainCertVerificationHttpPtrInput` via:
//
//	        HostingCustomDomainCertVerificationHttpArgs{...}
//
//	or:
//
//	        nil
type HostingCustomDomainCertVerificationHttpPtrInput interface {
	pulumi.Input

	ToHostingCustomDomainCertVerificationHttpPtrOutput() HostingCustomDomainCertVerificationHttpPtrOutput
	ToHostingCustomDomainCertVerificationHttpPtrOutputWithContext(context.Context) HostingCustomDomainCertVerificationHttpPtrOutput
}

type hostingCustomDomainCertVerificationHttpPtrType HostingCustomDomainCertVerificationHttpArgs

func HostingCustomDomainCertVerificationHttpPtr(v *HostingCustomDomainCertVerificationHttpArgs) HostingCustomDomainCertVerificationHttpPtrInput {
	return (*hostingCustomDomainCertVerificationHttpPtrType)(v)
}

func (*hostingCustomDomainCertVerificationHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingCustomDomainCertVerificationHttp)(nil)).Elem()
}

func (i *hostingCustomDomainCertVerificationHttpPtrType) ToHostingCustomDomainCertVerificationHttpPtrOutput() HostingCustomDomainCertVerificationHttpPtrOutput {
	return i.ToHostingCustomDomainCertVerificationHttpPtrOutputWithContext(context.Background())
}

func (i *hostingCustomDomainCertVerificationHttpPtrType) ToHostingCustomDomainCertVerificationHttpPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainCertVerificationHttpPtrOutput)
}

type HostingCustomDomainCertVerificationHttpOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainCertVerificationHttp)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationHttpOutput) ToHostingCustomDomainCertVerificationHttpOutput() HostingCustomDomainCertVerificationHttpOutput {
	return o
}

func (o HostingCustomDomainCertVerificationHttpOutput) ToHostingCustomDomainCertVerificationHttpOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationHttpOutput {
	return o
}

func (o HostingCustomDomainCertVerificationHttpOutput) ToHostingCustomDomainCertVerificationHttpPtrOutput() HostingCustomDomainCertVerificationHttpPtrOutput {
	return o.ToHostingCustomDomainCertVerificationHttpPtrOutputWithContext(context.Background())
}

func (o HostingCustomDomainCertVerificationHttpOutput) ToHostingCustomDomainCertVerificationHttpPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostingCustomDomainCertVerificationHttp) *HostingCustomDomainCertVerificationHttp {
		return &v
	}).(HostingCustomDomainCertVerificationHttpPtrOutput)
}

// A text string to serve at the path.
func (o HostingCustomDomainCertVerificationHttpOutput) Desired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationHttp) *string { return v.Desired }).(pulumi.StringPtrOutput)
}

// Whether Hosting was able to find the required file contents on the
// specified path during its last check.
func (o HostingCustomDomainCertVerificationHttpOutput) Discovered() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationHttp) *string { return v.Discovered }).(pulumi.StringPtrOutput)
}

// (Output)
// The last time Hosting systems checked for the file contents.
func (o HostingCustomDomainCertVerificationHttpOutput) LastCheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationHttp) *string { return v.LastCheckTime }).(pulumi.StringPtrOutput)
}

// The path to the file.
func (o HostingCustomDomainCertVerificationHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainCertVerificationHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type HostingCustomDomainCertVerificationHttpPtrOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainCertVerificationHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingCustomDomainCertVerificationHttp)(nil)).Elem()
}

func (o HostingCustomDomainCertVerificationHttpPtrOutput) ToHostingCustomDomainCertVerificationHttpPtrOutput() HostingCustomDomainCertVerificationHttpPtrOutput {
	return o
}

func (o HostingCustomDomainCertVerificationHttpPtrOutput) ToHostingCustomDomainCertVerificationHttpPtrOutputWithContext(ctx context.Context) HostingCustomDomainCertVerificationHttpPtrOutput {
	return o
}

func (o HostingCustomDomainCertVerificationHttpPtrOutput) Elem() HostingCustomDomainCertVerificationHttpOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerificationHttp) HostingCustomDomainCertVerificationHttp {
		if v != nil {
			return *v
		}
		var ret HostingCustomDomainCertVerificationHttp
		return ret
	}).(HostingCustomDomainCertVerificationHttpOutput)
}

// A text string to serve at the path.
func (o HostingCustomDomainCertVerificationHttpPtrOutput) Desired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerificationHttp) *string {
		if v == nil {
			return nil
		}
		return v.Desired
	}).(pulumi.StringPtrOutput)
}

// Whether Hosting was able to find the required file contents on the
// specified path during its last check.
func (o HostingCustomDomainCertVerificationHttpPtrOutput) Discovered() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerificationHttp) *string {
		if v == nil {
			return nil
		}
		return v.Discovered
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The last time Hosting systems checked for the file contents.
func (o HostingCustomDomainCertVerificationHttpPtrOutput) LastCheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerificationHttp) *string {
		if v == nil {
			return nil
		}
		return v.LastCheckTime
	}).(pulumi.StringPtrOutput)
}

// The path to the file.
func (o HostingCustomDomainCertVerificationHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingCustomDomainCertVerificationHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type HostingCustomDomainIssue struct {
	// The status code, which should be an enum value of `google.rpc.Code`
	Code *int `pulumi:"code"`
	// A list of messages that carry the error details.
	Details *string `pulumi:"details"`
	// Error message
	Message *string `pulumi:"message"`
}

// HostingCustomDomainIssueInput is an input type that accepts HostingCustomDomainIssueArgs and HostingCustomDomainIssueOutput values.
// You can construct a concrete instance of `HostingCustomDomainIssueInput` via:
//
//	HostingCustomDomainIssueArgs{...}
type HostingCustomDomainIssueInput interface {
	pulumi.Input

	ToHostingCustomDomainIssueOutput() HostingCustomDomainIssueOutput
	ToHostingCustomDomainIssueOutputWithContext(context.Context) HostingCustomDomainIssueOutput
}

type HostingCustomDomainIssueArgs struct {
	// The status code, which should be an enum value of `google.rpc.Code`
	Code pulumi.IntPtrInput `pulumi:"code"`
	// A list of messages that carry the error details.
	Details pulumi.StringPtrInput `pulumi:"details"`
	// Error message
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (HostingCustomDomainIssueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainIssue)(nil)).Elem()
}

func (i HostingCustomDomainIssueArgs) ToHostingCustomDomainIssueOutput() HostingCustomDomainIssueOutput {
	return i.ToHostingCustomDomainIssueOutputWithContext(context.Background())
}

func (i HostingCustomDomainIssueArgs) ToHostingCustomDomainIssueOutputWithContext(ctx context.Context) HostingCustomDomainIssueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainIssueOutput)
}

// HostingCustomDomainIssueArrayInput is an input type that accepts HostingCustomDomainIssueArray and HostingCustomDomainIssueArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainIssueArrayInput` via:
//
//	HostingCustomDomainIssueArray{ HostingCustomDomainIssueArgs{...} }
type HostingCustomDomainIssueArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainIssueArrayOutput() HostingCustomDomainIssueArrayOutput
	ToHostingCustomDomainIssueArrayOutputWithContext(context.Context) HostingCustomDomainIssueArrayOutput
}

type HostingCustomDomainIssueArray []HostingCustomDomainIssueInput

func (HostingCustomDomainIssueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainIssue)(nil)).Elem()
}

func (i HostingCustomDomainIssueArray) ToHostingCustomDomainIssueArrayOutput() HostingCustomDomainIssueArrayOutput {
	return i.ToHostingCustomDomainIssueArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainIssueArray) ToHostingCustomDomainIssueArrayOutputWithContext(ctx context.Context) HostingCustomDomainIssueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainIssueArrayOutput)
}

type HostingCustomDomainIssueOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainIssueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainIssue)(nil)).Elem()
}

func (o HostingCustomDomainIssueOutput) ToHostingCustomDomainIssueOutput() HostingCustomDomainIssueOutput {
	return o
}

func (o HostingCustomDomainIssueOutput) ToHostingCustomDomainIssueOutputWithContext(ctx context.Context) HostingCustomDomainIssueOutput {
	return o
}

// The status code, which should be an enum value of `google.rpc.Code`
func (o HostingCustomDomainIssueOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainIssue) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// A list of messages that carry the error details.
func (o HostingCustomDomainIssueOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainIssue) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// Error message
func (o HostingCustomDomainIssueOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainIssue) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type HostingCustomDomainIssueArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainIssueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainIssue)(nil)).Elem()
}

func (o HostingCustomDomainIssueArrayOutput) ToHostingCustomDomainIssueArrayOutput() HostingCustomDomainIssueArrayOutput {
	return o
}

func (o HostingCustomDomainIssueArrayOutput) ToHostingCustomDomainIssueArrayOutputWithContext(ctx context.Context) HostingCustomDomainIssueArrayOutput {
	return o
}

func (o HostingCustomDomainIssueArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainIssueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainIssue {
		return vs[0].([]HostingCustomDomainIssue)[vs[1].(int)]
	}).(HostingCustomDomainIssueOutput)
}

type HostingCustomDomainRequiredDnsUpdate struct {
	// (Output)
	// The last time Hosting checked your CustomDomain's DNS records.
	CheckTime *string `pulumi:"checkTime"`
	// A text string to serve at the path.
	Desireds []HostingCustomDomainRequiredDnsUpdateDesired `pulumi:"desireds"`
	// Whether Hosting was able to find the required file contents on the
	// specified path during its last check.
	Discovereds []HostingCustomDomainRequiredDnsUpdateDiscovered `pulumi:"discovereds"`
}

// HostingCustomDomainRequiredDnsUpdateInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateArgs and HostingCustomDomainRequiredDnsUpdateOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateArgs{...}
type HostingCustomDomainRequiredDnsUpdateInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateOutput() HostingCustomDomainRequiredDnsUpdateOutput
	ToHostingCustomDomainRequiredDnsUpdateOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateOutput
}

type HostingCustomDomainRequiredDnsUpdateArgs struct {
	// (Output)
	// The last time Hosting checked your CustomDomain's DNS records.
	CheckTime pulumi.StringPtrInput `pulumi:"checkTime"`
	// A text string to serve at the path.
	Desireds HostingCustomDomainRequiredDnsUpdateDesiredArrayInput `pulumi:"desireds"`
	// Whether Hosting was able to find the required file contents on the
	// specified path during its last check.
	Discovereds HostingCustomDomainRequiredDnsUpdateDiscoveredArrayInput `pulumi:"discovereds"`
}

func (HostingCustomDomainRequiredDnsUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdate)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateArgs) ToHostingCustomDomainRequiredDnsUpdateOutput() HostingCustomDomainRequiredDnsUpdateOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateArgs) ToHostingCustomDomainRequiredDnsUpdateOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateOutput)
}

// HostingCustomDomainRequiredDnsUpdateArrayInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateArray and HostingCustomDomainRequiredDnsUpdateArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateArrayInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateArray{ HostingCustomDomainRequiredDnsUpdateArgs{...} }
type HostingCustomDomainRequiredDnsUpdateArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateArrayOutput() HostingCustomDomainRequiredDnsUpdateArrayOutput
	ToHostingCustomDomainRequiredDnsUpdateArrayOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateArrayOutput
}

type HostingCustomDomainRequiredDnsUpdateArray []HostingCustomDomainRequiredDnsUpdateInput

func (HostingCustomDomainRequiredDnsUpdateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdate)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateArray) ToHostingCustomDomainRequiredDnsUpdateArrayOutput() HostingCustomDomainRequiredDnsUpdateArrayOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateArray) ToHostingCustomDomainRequiredDnsUpdateArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateArrayOutput)
}

type HostingCustomDomainRequiredDnsUpdateOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdate)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateOutput) ToHostingCustomDomainRequiredDnsUpdateOutput() HostingCustomDomainRequiredDnsUpdateOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateOutput) ToHostingCustomDomainRequiredDnsUpdateOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateOutput {
	return o
}

// (Output)
// The last time Hosting checked your CustomDomain's DNS records.
func (o HostingCustomDomainRequiredDnsUpdateOutput) CheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdate) *string { return v.CheckTime }).(pulumi.StringPtrOutput)
}

// A text string to serve at the path.
func (o HostingCustomDomainRequiredDnsUpdateOutput) Desireds() HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdate) []HostingCustomDomainRequiredDnsUpdateDesired {
		return v.Desireds
	}).(HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput)
}

// Whether Hosting was able to find the required file contents on the
// specified path during its last check.
func (o HostingCustomDomainRequiredDnsUpdateOutput) Discovereds() HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdate) []HostingCustomDomainRequiredDnsUpdateDiscovered {
		return v.Discovereds
	}).(HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput)
}

type HostingCustomDomainRequiredDnsUpdateArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdate)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateArrayOutput) ToHostingCustomDomainRequiredDnsUpdateArrayOutput() HostingCustomDomainRequiredDnsUpdateArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateArrayOutput) ToHostingCustomDomainRequiredDnsUpdateArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainRequiredDnsUpdateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainRequiredDnsUpdate {
		return vs[0].([]HostingCustomDomainRequiredDnsUpdate)[vs[1].(int)]
	}).(HostingCustomDomainRequiredDnsUpdateOutput)
}

type HostingCustomDomainRequiredDnsUpdateDesired struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName *string `pulumi:"domainName"`
	// Records on the domain
	// Structure is documented below.
	Records []HostingCustomDomainRequiredDnsUpdateDesiredRecord `pulumi:"records"`
}

// HostingCustomDomainRequiredDnsUpdateDesiredInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateDesiredArgs and HostingCustomDomainRequiredDnsUpdateDesiredOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateDesiredInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateDesiredArgs{...}
type HostingCustomDomainRequiredDnsUpdateDesiredInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateDesiredOutput() HostingCustomDomainRequiredDnsUpdateDesiredOutput
	ToHostingCustomDomainRequiredDnsUpdateDesiredOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateDesiredOutput
}

type HostingCustomDomainRequiredDnsUpdateDesiredArgs struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// Records on the domain
	// Structure is documented below.
	Records HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayInput `pulumi:"records"`
}

func (HostingCustomDomainRequiredDnsUpdateDesiredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDesired)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateDesiredArgs) ToHostingCustomDomainRequiredDnsUpdateDesiredOutput() HostingCustomDomainRequiredDnsUpdateDesiredOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateDesiredOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateDesiredArgs) ToHostingCustomDomainRequiredDnsUpdateDesiredOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDesiredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateDesiredOutput)
}

// HostingCustomDomainRequiredDnsUpdateDesiredArrayInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateDesiredArray and HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateDesiredArrayInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateDesiredArray{ HostingCustomDomainRequiredDnsUpdateDesiredArgs{...} }
type HostingCustomDomainRequiredDnsUpdateDesiredArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateDesiredArrayOutput() HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput
	ToHostingCustomDomainRequiredDnsUpdateDesiredArrayOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput
}

type HostingCustomDomainRequiredDnsUpdateDesiredArray []HostingCustomDomainRequiredDnsUpdateDesiredInput

func (HostingCustomDomainRequiredDnsUpdateDesiredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdateDesired)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateDesiredArray) ToHostingCustomDomainRequiredDnsUpdateDesiredArrayOutput() HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateDesiredArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateDesiredArray) ToHostingCustomDomainRequiredDnsUpdateDesiredArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput)
}

type HostingCustomDomainRequiredDnsUpdateDesiredOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateDesiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDesired)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredOutput) ToHostingCustomDomainRequiredDnsUpdateDesiredOutput() HostingCustomDomainRequiredDnsUpdateDesiredOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredOutput) ToHostingCustomDomainRequiredDnsUpdateDesiredOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDesiredOutput {
	return o
}

// The domain name the record pertains to, e.g. `foo.bar.com.`.
func (o HostingCustomDomainRequiredDnsUpdateDesiredOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDesired) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// Records on the domain
// Structure is documented below.
func (o HostingCustomDomainRequiredDnsUpdateDesiredOutput) Records() HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDesired) []HostingCustomDomainRequiredDnsUpdateDesiredRecord {
		return v.Records
	}).(HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput)
}

type HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdateDesired)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput) ToHostingCustomDomainRequiredDnsUpdateDesiredArrayOutput() HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput) ToHostingCustomDomainRequiredDnsUpdateDesiredArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainRequiredDnsUpdateDesiredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainRequiredDnsUpdateDesired {
		return vs[0].([]HostingCustomDomainRequiredDnsUpdateDesired)[vs[1].(int)]
	}).(HostingCustomDomainRequiredDnsUpdateDesiredOutput)
}

type HostingCustomDomainRequiredDnsUpdateDesiredRecord struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName *string `pulumi:"domainName"`
	// The data of the record. The meaning of the value depends on record type:
	// - A and AAAA: IP addresses for the domain name.
	// - CNAME: Another domain to check for records.
	// - TXT: Arbitrary text strings associated with the domain name. Hosting
	//   uses TXT records to determine a which Firebase Projects have
	//   permission to act on the domain name's behalf.
	// - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
	Rdata *string `pulumi:"rdata"`
	// Indicates the a required action for this record.
	RequiredAction *string `pulumi:"requiredAction"`
	// The record's type, which determines what data the record contains.
	Type *string `pulumi:"type"`
}

// HostingCustomDomainRequiredDnsUpdateDesiredRecordInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateDesiredRecordArgs and HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateDesiredRecordInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateDesiredRecordArgs{...}
type HostingCustomDomainRequiredDnsUpdateDesiredRecordInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateDesiredRecordOutput() HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput
	ToHostingCustomDomainRequiredDnsUpdateDesiredRecordOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput
}

type HostingCustomDomainRequiredDnsUpdateDesiredRecordArgs struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// The data of the record. The meaning of the value depends on record type:
	// - A and AAAA: IP addresses for the domain name.
	// - CNAME: Another domain to check for records.
	// - TXT: Arbitrary text strings associated with the domain name. Hosting
	//   uses TXT records to determine a which Firebase Projects have
	//   permission to act on the domain name's behalf.
	// - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
	Rdata pulumi.StringPtrInput `pulumi:"rdata"`
	// Indicates the a required action for this record.
	RequiredAction pulumi.StringPtrInput `pulumi:"requiredAction"`
	// The record's type, which determines what data the record contains.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HostingCustomDomainRequiredDnsUpdateDesiredRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDesiredRecord)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateDesiredRecordArgs) ToHostingCustomDomainRequiredDnsUpdateDesiredRecordOutput() HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateDesiredRecordOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateDesiredRecordArgs) ToHostingCustomDomainRequiredDnsUpdateDesiredRecordOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput)
}

// HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateDesiredRecordArray and HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateDesiredRecordArray{ HostingCustomDomainRequiredDnsUpdateDesiredRecordArgs{...} }
type HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput() HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput
	ToHostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput
}

type HostingCustomDomainRequiredDnsUpdateDesiredRecordArray []HostingCustomDomainRequiredDnsUpdateDesiredRecordInput

func (HostingCustomDomainRequiredDnsUpdateDesiredRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdateDesiredRecord)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateDesiredRecordArray) ToHostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput() HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateDesiredRecordArray) ToHostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput)
}

type HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDesiredRecord)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput) ToHostingCustomDomainRequiredDnsUpdateDesiredRecordOutput() HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput) ToHostingCustomDomainRequiredDnsUpdateDesiredRecordOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput {
	return o
}

// The domain name the record pertains to, e.g. `foo.bar.com.`.
func (o HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDesiredRecord) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// The data of the record. The meaning of the value depends on record type:
//   - A and AAAA: IP addresses for the domain name.
//   - CNAME: Another domain to check for records.
//   - TXT: Arbitrary text strings associated with the domain name. Hosting
//     uses TXT records to determine a which Firebase Projects have
//     permission to act on the domain name's behalf.
//   - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
func (o HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput) Rdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDesiredRecord) *string { return v.Rdata }).(pulumi.StringPtrOutput)
}

// Indicates the a required action for this record.
func (o HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput) RequiredAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDesiredRecord) *string { return v.RequiredAction }).(pulumi.StringPtrOutput)
}

// The record's type, which determines what data the record contains.
func (o HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDesiredRecord) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdateDesiredRecord)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput) ToHostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput() HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput) ToHostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainRequiredDnsUpdateDesiredRecord {
		return vs[0].([]HostingCustomDomainRequiredDnsUpdateDesiredRecord)[vs[1].(int)]
	}).(HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput)
}

type HostingCustomDomainRequiredDnsUpdateDiscovered struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName *string `pulumi:"domainName"`
	// Records on the domain
	// Structure is documented below.
	Records []HostingCustomDomainRequiredDnsUpdateDiscoveredRecord `pulumi:"records"`
}

// HostingCustomDomainRequiredDnsUpdateDiscoveredInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateDiscoveredArgs and HostingCustomDomainRequiredDnsUpdateDiscoveredOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateDiscoveredInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateDiscoveredArgs{...}
type HostingCustomDomainRequiredDnsUpdateDiscoveredInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateDiscoveredOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredOutput
	ToHostingCustomDomainRequiredDnsUpdateDiscoveredOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredOutput
}

type HostingCustomDomainRequiredDnsUpdateDiscoveredArgs struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// Records on the domain
	// Structure is documented below.
	Records HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayInput `pulumi:"records"`
}

func (HostingCustomDomainRequiredDnsUpdateDiscoveredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDiscovered)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateDiscoveredArgs) ToHostingCustomDomainRequiredDnsUpdateDiscoveredOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateDiscoveredOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateDiscoveredArgs) ToHostingCustomDomainRequiredDnsUpdateDiscoveredOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateDiscoveredOutput)
}

// HostingCustomDomainRequiredDnsUpdateDiscoveredArrayInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateDiscoveredArray and HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateDiscoveredArrayInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateDiscoveredArray{ HostingCustomDomainRequiredDnsUpdateDiscoveredArgs{...} }
type HostingCustomDomainRequiredDnsUpdateDiscoveredArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput
	ToHostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput
}

type HostingCustomDomainRequiredDnsUpdateDiscoveredArray []HostingCustomDomainRequiredDnsUpdateDiscoveredInput

func (HostingCustomDomainRequiredDnsUpdateDiscoveredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdateDiscovered)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateDiscoveredArray) ToHostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateDiscoveredArray) ToHostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput)
}

type HostingCustomDomainRequiredDnsUpdateDiscoveredOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateDiscoveredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDiscovered)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredOutput) ToHostingCustomDomainRequiredDnsUpdateDiscoveredOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredOutput) ToHostingCustomDomainRequiredDnsUpdateDiscoveredOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredOutput {
	return o
}

// The domain name the record pertains to, e.g. `foo.bar.com.`.
func (o HostingCustomDomainRequiredDnsUpdateDiscoveredOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDiscovered) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// Records on the domain
// Structure is documented below.
func (o HostingCustomDomainRequiredDnsUpdateDiscoveredOutput) Records() HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDiscovered) []HostingCustomDomainRequiredDnsUpdateDiscoveredRecord {
		return v.Records
	}).(HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput)
}

type HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdateDiscovered)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput) ToHostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput) ToHostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainRequiredDnsUpdateDiscoveredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainRequiredDnsUpdateDiscovered {
		return vs[0].([]HostingCustomDomainRequiredDnsUpdateDiscovered)[vs[1].(int)]
	}).(HostingCustomDomainRequiredDnsUpdateDiscoveredOutput)
}

type HostingCustomDomainRequiredDnsUpdateDiscoveredRecord struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName *string `pulumi:"domainName"`
	// The data of the record. The meaning of the value depends on record type:
	// - A and AAAA: IP addresses for the domain name.
	// - CNAME: Another domain to check for records.
	// - TXT: Arbitrary text strings associated with the domain name. Hosting
	//   uses TXT records to determine a which Firebase Projects have
	//   permission to act on the domain name's behalf.
	// - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
	Rdata *string `pulumi:"rdata"`
	// Indicates the a required action for this record.
	RequiredAction *string `pulumi:"requiredAction"`
	// The record's type, which determines what data the record contains.
	Type *string `pulumi:"type"`
}

// HostingCustomDomainRequiredDnsUpdateDiscoveredRecordInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArgs and HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateDiscoveredRecordInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArgs{...}
type HostingCustomDomainRequiredDnsUpdateDiscoveredRecordInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput
	ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput
}

type HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArgs struct {
	// The domain name the record pertains to, e.g. `foo.bar.com.`.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// The data of the record. The meaning of the value depends on record type:
	// - A and AAAA: IP addresses for the domain name.
	// - CNAME: Another domain to check for records.
	// - TXT: Arbitrary text strings associated with the domain name. Hosting
	//   uses TXT records to determine a which Firebase Projects have
	//   permission to act on the domain name's behalf.
	// - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
	Rdata pulumi.StringPtrInput `pulumi:"rdata"`
	// Indicates the a required action for this record.
	RequiredAction pulumi.StringPtrInput `pulumi:"requiredAction"`
	// The record's type, which determines what data the record contains.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDiscoveredRecord)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArgs) ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArgs) ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput)
}

// HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayInput is an input type that accepts HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArray and HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput values.
// You can construct a concrete instance of `HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayInput` via:
//
//	HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArray{ HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArgs{...} }
type HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayInput interface {
	pulumi.Input

	ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput
	ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutputWithContext(context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput
}

type HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArray []HostingCustomDomainRequiredDnsUpdateDiscoveredRecordInput

func (HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdateDiscoveredRecord)(nil)).Elem()
}

func (i HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArray) ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput {
	return i.ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutputWithContext(context.Background())
}

func (i HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArray) ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput)
}

type HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDiscoveredRecord)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput) ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput) ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput {
	return o
}

// The domain name the record pertains to, e.g. `foo.bar.com.`.
func (o HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDiscoveredRecord) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// The data of the record. The meaning of the value depends on record type:
//   - A and AAAA: IP addresses for the domain name.
//   - CNAME: Another domain to check for records.
//   - TXT: Arbitrary text strings associated with the domain name. Hosting
//     uses TXT records to determine a which Firebase Projects have
//     permission to act on the domain name's behalf.
//   - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
func (o HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput) Rdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDiscoveredRecord) *string { return v.Rdata }).(pulumi.StringPtrOutput)
}

// Indicates the a required action for this record.
func (o HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput) RequiredAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDiscoveredRecord) *string { return v.RequiredAction }).(pulumi.StringPtrOutput)
}

// The record's type, which determines what data the record contains.
func (o HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCustomDomainRequiredDnsUpdateDiscoveredRecord) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput struct{ *pulumi.OutputState }

func (HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCustomDomainRequiredDnsUpdateDiscoveredRecord)(nil)).Elem()
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput) ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput() HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput) ToHostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutputWithContext(ctx context.Context) HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput {
	return o
}

func (o HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput) Index(i pulumi.IntInput) HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCustomDomainRequiredDnsUpdateDiscoveredRecord {
		return vs[0].([]HostingCustomDomainRequiredDnsUpdateDiscoveredRecord)[vs[1].(int)]
	}).(HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput)
}

type HostingVersionConfig struct {
	// An array of objects, where each object specifies a URL pattern that, if matched to the request URL path,
	// triggers Hosting to apply the specified custom response headers.
	// Structure is documented below.
	Headers []HostingVersionConfigHeader `pulumi:"headers"`
	// An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
	// triggers Hosting to respond with a redirect to the specified destination path.
	// Structure is documented below.
	Redirects []HostingVersionConfigRedirect `pulumi:"redirects"`
	// An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
	// request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
	// Structure is documented below.
	Rewrites []HostingVersionConfigRewrite `pulumi:"rewrites"`
}

// HostingVersionConfigInput is an input type that accepts HostingVersionConfigArgs and HostingVersionConfigOutput values.
// You can construct a concrete instance of `HostingVersionConfigInput` via:
//
//	HostingVersionConfigArgs{...}
type HostingVersionConfigInput interface {
	pulumi.Input

	ToHostingVersionConfigOutput() HostingVersionConfigOutput
	ToHostingVersionConfigOutputWithContext(context.Context) HostingVersionConfigOutput
}

type HostingVersionConfigArgs struct {
	// An array of objects, where each object specifies a URL pattern that, if matched to the request URL path,
	// triggers Hosting to apply the specified custom response headers.
	// Structure is documented below.
	Headers HostingVersionConfigHeaderArrayInput `pulumi:"headers"`
	// An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
	// triggers Hosting to respond with a redirect to the specified destination path.
	// Structure is documented below.
	Redirects HostingVersionConfigRedirectArrayInput `pulumi:"redirects"`
	// An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
	// request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
	// Structure is documented below.
	Rewrites HostingVersionConfigRewriteArrayInput `pulumi:"rewrites"`
}

func (HostingVersionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfig)(nil)).Elem()
}

func (i HostingVersionConfigArgs) ToHostingVersionConfigOutput() HostingVersionConfigOutput {
	return i.ToHostingVersionConfigOutputWithContext(context.Background())
}

func (i HostingVersionConfigArgs) ToHostingVersionConfigOutputWithContext(ctx context.Context) HostingVersionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigOutput)
}

func (i HostingVersionConfigArgs) ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput {
	return i.ToHostingVersionConfigPtrOutputWithContext(context.Background())
}

func (i HostingVersionConfigArgs) ToHostingVersionConfigPtrOutputWithContext(ctx context.Context) HostingVersionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigOutput).ToHostingVersionConfigPtrOutputWithContext(ctx)
}

// HostingVersionConfigPtrInput is an input type that accepts HostingVersionConfigArgs, HostingVersionConfigPtr and HostingVersionConfigPtrOutput values.
// You can construct a concrete instance of `HostingVersionConfigPtrInput` via:
//
//	        HostingVersionConfigArgs{...}
//
//	or:
//
//	        nil
type HostingVersionConfigPtrInput interface {
	pulumi.Input

	ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput
	ToHostingVersionConfigPtrOutputWithContext(context.Context) HostingVersionConfigPtrOutput
}

type hostingVersionConfigPtrType HostingVersionConfigArgs

func HostingVersionConfigPtr(v *HostingVersionConfigArgs) HostingVersionConfigPtrInput {
	return (*hostingVersionConfigPtrType)(v)
}

func (*hostingVersionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingVersionConfig)(nil)).Elem()
}

func (i *hostingVersionConfigPtrType) ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput {
	return i.ToHostingVersionConfigPtrOutputWithContext(context.Background())
}

func (i *hostingVersionConfigPtrType) ToHostingVersionConfigPtrOutputWithContext(ctx context.Context) HostingVersionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigPtrOutput)
}

type HostingVersionConfigOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfig)(nil)).Elem()
}

func (o HostingVersionConfigOutput) ToHostingVersionConfigOutput() HostingVersionConfigOutput {
	return o
}

func (o HostingVersionConfigOutput) ToHostingVersionConfigOutputWithContext(ctx context.Context) HostingVersionConfigOutput {
	return o
}

func (o HostingVersionConfigOutput) ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput {
	return o.ToHostingVersionConfigPtrOutputWithContext(context.Background())
}

func (o HostingVersionConfigOutput) ToHostingVersionConfigPtrOutputWithContext(ctx context.Context) HostingVersionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostingVersionConfig) *HostingVersionConfig {
		return &v
	}).(HostingVersionConfigPtrOutput)
}

// An array of objects, where each object specifies a URL pattern that, if matched to the request URL path,
// triggers Hosting to apply the specified custom response headers.
// Structure is documented below.
func (o HostingVersionConfigOutput) Headers() HostingVersionConfigHeaderArrayOutput {
	return o.ApplyT(func(v HostingVersionConfig) []HostingVersionConfigHeader { return v.Headers }).(HostingVersionConfigHeaderArrayOutput)
}

// An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
// triggers Hosting to respond with a redirect to the specified destination path.
// Structure is documented below.
func (o HostingVersionConfigOutput) Redirects() HostingVersionConfigRedirectArrayOutput {
	return o.ApplyT(func(v HostingVersionConfig) []HostingVersionConfigRedirect { return v.Redirects }).(HostingVersionConfigRedirectArrayOutput)
}

// An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
// request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
// Structure is documented below.
func (o HostingVersionConfigOutput) Rewrites() HostingVersionConfigRewriteArrayOutput {
	return o.ApplyT(func(v HostingVersionConfig) []HostingVersionConfigRewrite { return v.Rewrites }).(HostingVersionConfigRewriteArrayOutput)
}

type HostingVersionConfigPtrOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingVersionConfig)(nil)).Elem()
}

func (o HostingVersionConfigPtrOutput) ToHostingVersionConfigPtrOutput() HostingVersionConfigPtrOutput {
	return o
}

func (o HostingVersionConfigPtrOutput) ToHostingVersionConfigPtrOutputWithContext(ctx context.Context) HostingVersionConfigPtrOutput {
	return o
}

func (o HostingVersionConfigPtrOutput) Elem() HostingVersionConfigOutput {
	return o.ApplyT(func(v *HostingVersionConfig) HostingVersionConfig {
		if v != nil {
			return *v
		}
		var ret HostingVersionConfig
		return ret
	}).(HostingVersionConfigOutput)
}

// An array of objects, where each object specifies a URL pattern that, if matched to the request URL path,
// triggers Hosting to apply the specified custom response headers.
// Structure is documented below.
func (o HostingVersionConfigPtrOutput) Headers() HostingVersionConfigHeaderArrayOutput {
	return o.ApplyT(func(v *HostingVersionConfig) []HostingVersionConfigHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(HostingVersionConfigHeaderArrayOutput)
}

// An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
// triggers Hosting to respond with a redirect to the specified destination path.
// Structure is documented below.
func (o HostingVersionConfigPtrOutput) Redirects() HostingVersionConfigRedirectArrayOutput {
	return o.ApplyT(func(v *HostingVersionConfig) []HostingVersionConfigRedirect {
		if v == nil {
			return nil
		}
		return v.Redirects
	}).(HostingVersionConfigRedirectArrayOutput)
}

// An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
// request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
// Structure is documented below.
func (o HostingVersionConfigPtrOutput) Rewrites() HostingVersionConfigRewriteArrayOutput {
	return o.ApplyT(func(v *HostingVersionConfig) []HostingVersionConfigRewrite {
		if v == nil {
			return nil
		}
		return v.Rewrites
	}).(HostingVersionConfigRewriteArrayOutput)
}

type HostingVersionConfigHeader struct {
	// The user-supplied glob to match against the request URL path.
	Glob *string `pulumi:"glob"`
	// The additional headers to add to the response. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Headers map[string]string `pulumi:"headers"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex *string `pulumi:"regex"`
}

// HostingVersionConfigHeaderInput is an input type that accepts HostingVersionConfigHeaderArgs and HostingVersionConfigHeaderOutput values.
// You can construct a concrete instance of `HostingVersionConfigHeaderInput` via:
//
//	HostingVersionConfigHeaderArgs{...}
type HostingVersionConfigHeaderInput interface {
	pulumi.Input

	ToHostingVersionConfigHeaderOutput() HostingVersionConfigHeaderOutput
	ToHostingVersionConfigHeaderOutputWithContext(context.Context) HostingVersionConfigHeaderOutput
}

type HostingVersionConfigHeaderArgs struct {
	// The user-supplied glob to match against the request URL path.
	Glob pulumi.StringPtrInput `pulumi:"glob"`
	// The additional headers to add to the response. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (HostingVersionConfigHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigHeader)(nil)).Elem()
}

func (i HostingVersionConfigHeaderArgs) ToHostingVersionConfigHeaderOutput() HostingVersionConfigHeaderOutput {
	return i.ToHostingVersionConfigHeaderOutputWithContext(context.Background())
}

func (i HostingVersionConfigHeaderArgs) ToHostingVersionConfigHeaderOutputWithContext(ctx context.Context) HostingVersionConfigHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigHeaderOutput)
}

// HostingVersionConfigHeaderArrayInput is an input type that accepts HostingVersionConfigHeaderArray and HostingVersionConfigHeaderArrayOutput values.
// You can construct a concrete instance of `HostingVersionConfigHeaderArrayInput` via:
//
//	HostingVersionConfigHeaderArray{ HostingVersionConfigHeaderArgs{...} }
type HostingVersionConfigHeaderArrayInput interface {
	pulumi.Input

	ToHostingVersionConfigHeaderArrayOutput() HostingVersionConfigHeaderArrayOutput
	ToHostingVersionConfigHeaderArrayOutputWithContext(context.Context) HostingVersionConfigHeaderArrayOutput
}

type HostingVersionConfigHeaderArray []HostingVersionConfigHeaderInput

func (HostingVersionConfigHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigHeader)(nil)).Elem()
}

func (i HostingVersionConfigHeaderArray) ToHostingVersionConfigHeaderArrayOutput() HostingVersionConfigHeaderArrayOutput {
	return i.ToHostingVersionConfigHeaderArrayOutputWithContext(context.Background())
}

func (i HostingVersionConfigHeaderArray) ToHostingVersionConfigHeaderArrayOutputWithContext(ctx context.Context) HostingVersionConfigHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigHeaderArrayOutput)
}

type HostingVersionConfigHeaderOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigHeader)(nil)).Elem()
}

func (o HostingVersionConfigHeaderOutput) ToHostingVersionConfigHeaderOutput() HostingVersionConfigHeaderOutput {
	return o
}

func (o HostingVersionConfigHeaderOutput) ToHostingVersionConfigHeaderOutputWithContext(ctx context.Context) HostingVersionConfigHeaderOutput {
	return o
}

// The user-supplied glob to match against the request URL path.
func (o HostingVersionConfigHeaderOutput) Glob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigHeader) *string { return v.Glob }).(pulumi.StringPtrOutput)
}

// The additional headers to add to the response. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o HostingVersionConfigHeaderOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v HostingVersionConfigHeader) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// The user-supplied RE2 regular expression to match against the request URL path.
func (o HostingVersionConfigHeaderOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigHeader) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type HostingVersionConfigHeaderArrayOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigHeader)(nil)).Elem()
}

func (o HostingVersionConfigHeaderArrayOutput) ToHostingVersionConfigHeaderArrayOutput() HostingVersionConfigHeaderArrayOutput {
	return o
}

func (o HostingVersionConfigHeaderArrayOutput) ToHostingVersionConfigHeaderArrayOutputWithContext(ctx context.Context) HostingVersionConfigHeaderArrayOutput {
	return o
}

func (o HostingVersionConfigHeaderArrayOutput) Index(i pulumi.IntInput) HostingVersionConfigHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingVersionConfigHeader {
		return vs[0].([]HostingVersionConfigHeader)[vs[1].(int)]
	}).(HostingVersionConfigHeaderOutput)
}

type HostingVersionConfigRedirect struct {
	// The user-supplied glob to match against the request URL path.
	Glob *string `pulumi:"glob"`
	// The value to put in the HTTP location header of the response.
	// The location can contain capture group values from the pattern using a : prefix to identify
	// the segment and an optional * to capture the rest of the URL. For example:
	Location string `pulumi:"location"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex *string `pulumi:"regex"`
	// The status HTTP code to return in the response. It must be a valid 3xx status code.
	StatusCode int `pulumi:"statusCode"`
}

// HostingVersionConfigRedirectInput is an input type that accepts HostingVersionConfigRedirectArgs and HostingVersionConfigRedirectOutput values.
// You can construct a concrete instance of `HostingVersionConfigRedirectInput` via:
//
//	HostingVersionConfigRedirectArgs{...}
type HostingVersionConfigRedirectInput interface {
	pulumi.Input

	ToHostingVersionConfigRedirectOutput() HostingVersionConfigRedirectOutput
	ToHostingVersionConfigRedirectOutputWithContext(context.Context) HostingVersionConfigRedirectOutput
}

type HostingVersionConfigRedirectArgs struct {
	// The user-supplied glob to match against the request URL path.
	Glob pulumi.StringPtrInput `pulumi:"glob"`
	// The value to put in the HTTP location header of the response.
	// The location can contain capture group values from the pattern using a : prefix to identify
	// the segment and an optional * to capture the rest of the URL. For example:
	Location pulumi.StringInput `pulumi:"location"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// The status HTTP code to return in the response. It must be a valid 3xx status code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (HostingVersionConfigRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRedirect)(nil)).Elem()
}

func (i HostingVersionConfigRedirectArgs) ToHostingVersionConfigRedirectOutput() HostingVersionConfigRedirectOutput {
	return i.ToHostingVersionConfigRedirectOutputWithContext(context.Background())
}

func (i HostingVersionConfigRedirectArgs) ToHostingVersionConfigRedirectOutputWithContext(ctx context.Context) HostingVersionConfigRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRedirectOutput)
}

// HostingVersionConfigRedirectArrayInput is an input type that accepts HostingVersionConfigRedirectArray and HostingVersionConfigRedirectArrayOutput values.
// You can construct a concrete instance of `HostingVersionConfigRedirectArrayInput` via:
//
//	HostingVersionConfigRedirectArray{ HostingVersionConfigRedirectArgs{...} }
type HostingVersionConfigRedirectArrayInput interface {
	pulumi.Input

	ToHostingVersionConfigRedirectArrayOutput() HostingVersionConfigRedirectArrayOutput
	ToHostingVersionConfigRedirectArrayOutputWithContext(context.Context) HostingVersionConfigRedirectArrayOutput
}

type HostingVersionConfigRedirectArray []HostingVersionConfigRedirectInput

func (HostingVersionConfigRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigRedirect)(nil)).Elem()
}

func (i HostingVersionConfigRedirectArray) ToHostingVersionConfigRedirectArrayOutput() HostingVersionConfigRedirectArrayOutput {
	return i.ToHostingVersionConfigRedirectArrayOutputWithContext(context.Background())
}

func (i HostingVersionConfigRedirectArray) ToHostingVersionConfigRedirectArrayOutputWithContext(ctx context.Context) HostingVersionConfigRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRedirectArrayOutput)
}

type HostingVersionConfigRedirectOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRedirect)(nil)).Elem()
}

func (o HostingVersionConfigRedirectOutput) ToHostingVersionConfigRedirectOutput() HostingVersionConfigRedirectOutput {
	return o
}

func (o HostingVersionConfigRedirectOutput) ToHostingVersionConfigRedirectOutputWithContext(ctx context.Context) HostingVersionConfigRedirectOutput {
	return o
}

// The user-supplied glob to match against the request URL path.
func (o HostingVersionConfigRedirectOutput) Glob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRedirect) *string { return v.Glob }).(pulumi.StringPtrOutput)
}

// The value to put in the HTTP location header of the response.
// The location can contain capture group values from the pattern using a : prefix to identify
// the segment and an optional * to capture the rest of the URL. For example:
func (o HostingVersionConfigRedirectOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v HostingVersionConfigRedirect) string { return v.Location }).(pulumi.StringOutput)
}

// The user-supplied RE2 regular expression to match against the request URL path.
func (o HostingVersionConfigRedirectOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRedirect) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// The status HTTP code to return in the response. It must be a valid 3xx status code.
func (o HostingVersionConfigRedirectOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v HostingVersionConfigRedirect) int { return v.StatusCode }).(pulumi.IntOutput)
}

type HostingVersionConfigRedirectArrayOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigRedirect)(nil)).Elem()
}

func (o HostingVersionConfigRedirectArrayOutput) ToHostingVersionConfigRedirectArrayOutput() HostingVersionConfigRedirectArrayOutput {
	return o
}

func (o HostingVersionConfigRedirectArrayOutput) ToHostingVersionConfigRedirectArrayOutputWithContext(ctx context.Context) HostingVersionConfigRedirectArrayOutput {
	return o
}

func (o HostingVersionConfigRedirectArrayOutput) Index(i pulumi.IntInput) HostingVersionConfigRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingVersionConfigRedirect {
		return vs[0].([]HostingVersionConfigRedirect)[vs[1].(int)]
	}).(HostingVersionConfigRedirectOutput)
}

type HostingVersionConfigRewrite struct {
	// The function to proxy requests to. Must match the exported function name exactly.
	Function *string `pulumi:"function"`
	// The user-supplied glob to match against the request URL path.
	Glob *string `pulumi:"glob"`
	// The URL path to rewrite the request to.
	Path *string `pulumi:"path"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex *string `pulumi:"regex"`
	// The request will be forwarded to Cloud Run.
	// Structure is documented below.
	Run *HostingVersionConfigRewriteRun `pulumi:"run"`
}

// HostingVersionConfigRewriteInput is an input type that accepts HostingVersionConfigRewriteArgs and HostingVersionConfigRewriteOutput values.
// You can construct a concrete instance of `HostingVersionConfigRewriteInput` via:
//
//	HostingVersionConfigRewriteArgs{...}
type HostingVersionConfigRewriteInput interface {
	pulumi.Input

	ToHostingVersionConfigRewriteOutput() HostingVersionConfigRewriteOutput
	ToHostingVersionConfigRewriteOutputWithContext(context.Context) HostingVersionConfigRewriteOutput
}

type HostingVersionConfigRewriteArgs struct {
	// The function to proxy requests to. Must match the exported function name exactly.
	Function pulumi.StringPtrInput `pulumi:"function"`
	// The user-supplied glob to match against the request URL path.
	Glob pulumi.StringPtrInput `pulumi:"glob"`
	// The URL path to rewrite the request to.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The user-supplied RE2 regular expression to match against the request URL path.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// The request will be forwarded to Cloud Run.
	// Structure is documented below.
	Run HostingVersionConfigRewriteRunPtrInput `pulumi:"run"`
}

func (HostingVersionConfigRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRewrite)(nil)).Elem()
}

func (i HostingVersionConfigRewriteArgs) ToHostingVersionConfigRewriteOutput() HostingVersionConfigRewriteOutput {
	return i.ToHostingVersionConfigRewriteOutputWithContext(context.Background())
}

func (i HostingVersionConfigRewriteArgs) ToHostingVersionConfigRewriteOutputWithContext(ctx context.Context) HostingVersionConfigRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteOutput)
}

// HostingVersionConfigRewriteArrayInput is an input type that accepts HostingVersionConfigRewriteArray and HostingVersionConfigRewriteArrayOutput values.
// You can construct a concrete instance of `HostingVersionConfigRewriteArrayInput` via:
//
//	HostingVersionConfigRewriteArray{ HostingVersionConfigRewriteArgs{...} }
type HostingVersionConfigRewriteArrayInput interface {
	pulumi.Input

	ToHostingVersionConfigRewriteArrayOutput() HostingVersionConfigRewriteArrayOutput
	ToHostingVersionConfigRewriteArrayOutputWithContext(context.Context) HostingVersionConfigRewriteArrayOutput
}

type HostingVersionConfigRewriteArray []HostingVersionConfigRewriteInput

func (HostingVersionConfigRewriteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigRewrite)(nil)).Elem()
}

func (i HostingVersionConfigRewriteArray) ToHostingVersionConfigRewriteArrayOutput() HostingVersionConfigRewriteArrayOutput {
	return i.ToHostingVersionConfigRewriteArrayOutputWithContext(context.Background())
}

func (i HostingVersionConfigRewriteArray) ToHostingVersionConfigRewriteArrayOutputWithContext(ctx context.Context) HostingVersionConfigRewriteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteArrayOutput)
}

type HostingVersionConfigRewriteOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRewrite)(nil)).Elem()
}

func (o HostingVersionConfigRewriteOutput) ToHostingVersionConfigRewriteOutput() HostingVersionConfigRewriteOutput {
	return o
}

func (o HostingVersionConfigRewriteOutput) ToHostingVersionConfigRewriteOutputWithContext(ctx context.Context) HostingVersionConfigRewriteOutput {
	return o
}

// The function to proxy requests to. Must match the exported function name exactly.
func (o HostingVersionConfigRewriteOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewrite) *string { return v.Function }).(pulumi.StringPtrOutput)
}

// The user-supplied glob to match against the request URL path.
func (o HostingVersionConfigRewriteOutput) Glob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewrite) *string { return v.Glob }).(pulumi.StringPtrOutput)
}

// The URL path to rewrite the request to.
func (o HostingVersionConfigRewriteOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewrite) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The user-supplied RE2 regular expression to match against the request URL path.
func (o HostingVersionConfigRewriteOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewrite) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// The request will be forwarded to Cloud Run.
// Structure is documented below.
func (o HostingVersionConfigRewriteOutput) Run() HostingVersionConfigRewriteRunPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewrite) *HostingVersionConfigRewriteRun { return v.Run }).(HostingVersionConfigRewriteRunPtrOutput)
}

type HostingVersionConfigRewriteArrayOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRewriteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingVersionConfigRewrite)(nil)).Elem()
}

func (o HostingVersionConfigRewriteArrayOutput) ToHostingVersionConfigRewriteArrayOutput() HostingVersionConfigRewriteArrayOutput {
	return o
}

func (o HostingVersionConfigRewriteArrayOutput) ToHostingVersionConfigRewriteArrayOutputWithContext(ctx context.Context) HostingVersionConfigRewriteArrayOutput {
	return o
}

func (o HostingVersionConfigRewriteArrayOutput) Index(i pulumi.IntInput) HostingVersionConfigRewriteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingVersionConfigRewrite {
		return vs[0].([]HostingVersionConfigRewrite)[vs[1].(int)]
	}).(HostingVersionConfigRewriteOutput)
}

type HostingVersionConfigRewriteRun struct {
	// Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
	Region *string `pulumi:"region"`
	// User-defined ID of the Cloud Run service.
	ServiceId string `pulumi:"serviceId"`
}

// HostingVersionConfigRewriteRunInput is an input type that accepts HostingVersionConfigRewriteRunArgs and HostingVersionConfigRewriteRunOutput values.
// You can construct a concrete instance of `HostingVersionConfigRewriteRunInput` via:
//
//	HostingVersionConfigRewriteRunArgs{...}
type HostingVersionConfigRewriteRunInput interface {
	pulumi.Input

	ToHostingVersionConfigRewriteRunOutput() HostingVersionConfigRewriteRunOutput
	ToHostingVersionConfigRewriteRunOutputWithContext(context.Context) HostingVersionConfigRewriteRunOutput
}

type HostingVersionConfigRewriteRunArgs struct {
	// Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// User-defined ID of the Cloud Run service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (HostingVersionConfigRewriteRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRewriteRun)(nil)).Elem()
}

func (i HostingVersionConfigRewriteRunArgs) ToHostingVersionConfigRewriteRunOutput() HostingVersionConfigRewriteRunOutput {
	return i.ToHostingVersionConfigRewriteRunOutputWithContext(context.Background())
}

func (i HostingVersionConfigRewriteRunArgs) ToHostingVersionConfigRewriteRunOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteRunOutput)
}

func (i HostingVersionConfigRewriteRunArgs) ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput {
	return i.ToHostingVersionConfigRewriteRunPtrOutputWithContext(context.Background())
}

func (i HostingVersionConfigRewriteRunArgs) ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteRunOutput).ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx)
}

// HostingVersionConfigRewriteRunPtrInput is an input type that accepts HostingVersionConfigRewriteRunArgs, HostingVersionConfigRewriteRunPtr and HostingVersionConfigRewriteRunPtrOutput values.
// You can construct a concrete instance of `HostingVersionConfigRewriteRunPtrInput` via:
//
//	        HostingVersionConfigRewriteRunArgs{...}
//
//	or:
//
//	        nil
type HostingVersionConfigRewriteRunPtrInput interface {
	pulumi.Input

	ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput
	ToHostingVersionConfigRewriteRunPtrOutputWithContext(context.Context) HostingVersionConfigRewriteRunPtrOutput
}

type hostingVersionConfigRewriteRunPtrType HostingVersionConfigRewriteRunArgs

func HostingVersionConfigRewriteRunPtr(v *HostingVersionConfigRewriteRunArgs) HostingVersionConfigRewriteRunPtrInput {
	return (*hostingVersionConfigRewriteRunPtrType)(v)
}

func (*hostingVersionConfigRewriteRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingVersionConfigRewriteRun)(nil)).Elem()
}

func (i *hostingVersionConfigRewriteRunPtrType) ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput {
	return i.ToHostingVersionConfigRewriteRunPtrOutputWithContext(context.Background())
}

func (i *hostingVersionConfigRewriteRunPtrType) ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingVersionConfigRewriteRunPtrOutput)
}

type HostingVersionConfigRewriteRunOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRewriteRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingVersionConfigRewriteRun)(nil)).Elem()
}

func (o HostingVersionConfigRewriteRunOutput) ToHostingVersionConfigRewriteRunOutput() HostingVersionConfigRewriteRunOutput {
	return o
}

func (o HostingVersionConfigRewriteRunOutput) ToHostingVersionConfigRewriteRunOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunOutput {
	return o
}

func (o HostingVersionConfigRewriteRunOutput) ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput {
	return o.ToHostingVersionConfigRewriteRunPtrOutputWithContext(context.Background())
}

func (o HostingVersionConfigRewriteRunOutput) ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostingVersionConfigRewriteRun) *HostingVersionConfigRewriteRun {
		return &v
	}).(HostingVersionConfigRewriteRunPtrOutput)
}

// Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
func (o HostingVersionConfigRewriteRunOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingVersionConfigRewriteRun) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// User-defined ID of the Cloud Run service.
func (o HostingVersionConfigRewriteRunOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v HostingVersionConfigRewriteRun) string { return v.ServiceId }).(pulumi.StringOutput)
}

type HostingVersionConfigRewriteRunPtrOutput struct{ *pulumi.OutputState }

func (HostingVersionConfigRewriteRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingVersionConfigRewriteRun)(nil)).Elem()
}

func (o HostingVersionConfigRewriteRunPtrOutput) ToHostingVersionConfigRewriteRunPtrOutput() HostingVersionConfigRewriteRunPtrOutput {
	return o
}

func (o HostingVersionConfigRewriteRunPtrOutput) ToHostingVersionConfigRewriteRunPtrOutputWithContext(ctx context.Context) HostingVersionConfigRewriteRunPtrOutput {
	return o
}

func (o HostingVersionConfigRewriteRunPtrOutput) Elem() HostingVersionConfigRewriteRunOutput {
	return o.ApplyT(func(v *HostingVersionConfigRewriteRun) HostingVersionConfigRewriteRun {
		if v != nil {
			return *v
		}
		var ret HostingVersionConfigRewriteRun
		return ret
	}).(HostingVersionConfigRewriteRunOutput)
}

// Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
func (o HostingVersionConfigRewriteRunPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingVersionConfigRewriteRun) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// User-defined ID of the Cloud Run service.
func (o HostingVersionConfigRewriteRunPtrOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingVersionConfigRewriteRun) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceConfigInput)(nil)).Elem(), ExtensionsInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceConfigPtrInput)(nil)).Elem(), ExtensionsInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceErrorStatusInput)(nil)).Elem(), ExtensionsInstanceErrorStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceErrorStatusArrayInput)(nil)).Elem(), ExtensionsInstanceErrorStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataArrayInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataFatalErrorInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataFatalErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataFatalErrorPtrInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataFatalErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataProcessingStateInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataProcessingStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionsInstanceRuntimeDataProcessingStatePtrInput)(nil)).Elem(), ExtensionsInstanceRuntimeDataProcessingStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertInput)(nil)).Elem(), HostingCustomDomainCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertArrayInput)(nil)).Elem(), HostingCustomDomainCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationInput)(nil)).Elem(), HostingCustomDomainCertVerificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationPtrInput)(nil)).Elem(), HostingCustomDomainCertVerificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsPtrInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDesiredInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsDesiredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDesiredArrayInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsDesiredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDesiredRecordInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsDesiredRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDesiredRecordArrayInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsDesiredRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDiscoveredInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsDiscoveredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDiscoveredArrayInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsDiscoveredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDiscoveredRecordInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsDiscoveredRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayInput)(nil)).Elem(), HostingCustomDomainCertVerificationDnsDiscoveredRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationHttpInput)(nil)).Elem(), HostingCustomDomainCertVerificationHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainCertVerificationHttpPtrInput)(nil)).Elem(), HostingCustomDomainCertVerificationHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainIssueInput)(nil)).Elem(), HostingCustomDomainIssueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainIssueArrayInput)(nil)).Elem(), HostingCustomDomainIssueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateArrayInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDesiredInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateDesiredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDesiredArrayInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateDesiredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDesiredRecordInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateDesiredRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateDesiredRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDiscoveredInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateDiscoveredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDiscoveredArrayInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateDiscoveredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDiscoveredRecordInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayInput)(nil)).Elem(), HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigInput)(nil)).Elem(), HostingVersionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigPtrInput)(nil)).Elem(), HostingVersionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigHeaderInput)(nil)).Elem(), HostingVersionConfigHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigHeaderArrayInput)(nil)).Elem(), HostingVersionConfigHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRedirectInput)(nil)).Elem(), HostingVersionConfigRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRedirectArrayInput)(nil)).Elem(), HostingVersionConfigRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRewriteInput)(nil)).Elem(), HostingVersionConfigRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRewriteArrayInput)(nil)).Elem(), HostingVersionConfigRewriteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRewriteRunInput)(nil)).Elem(), HostingVersionConfigRewriteRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingVersionConfigRewriteRunPtrInput)(nil)).Elem(), HostingVersionConfigRewriteRunArgs{})
	pulumi.RegisterOutputType(ExtensionsInstanceConfigOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceErrorStatusOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceErrorStatusArrayOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataArrayOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataFatalErrorOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataFatalErrorPtrOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataProcessingStateOutput{})
	pulumi.RegisterOutputType(ExtensionsInstanceRuntimeDataProcessingStatePtrOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationPtrOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsPtrOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsDesiredOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsDesiredArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsDesiredRecordOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsDesiredRecordArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsDiscoveredOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsDiscoveredArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsDiscoveredRecordOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationDnsDiscoveredRecordArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationHttpOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainCertVerificationHttpPtrOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainIssueOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainIssueArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateDesiredOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateDesiredArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateDesiredRecordOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateDesiredRecordArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateDiscoveredOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateDiscoveredArrayOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateDiscoveredRecordOutput{})
	pulumi.RegisterOutputType(HostingCustomDomainRequiredDnsUpdateDiscoveredRecordArrayOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigPtrOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigHeaderOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigHeaderArrayOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRedirectOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRedirectArrayOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRewriteOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRewriteArrayOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRewriteRunOutput{})
	pulumi.RegisterOutputType(HostingVersionConfigRewriteRunPtrOutput{})
}
