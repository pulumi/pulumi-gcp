// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Cloud Security Command Center (Cloud SCC) Big Query Export Config.
// It represents exporting Security Command Center data, including assets, findings, and security marks
// using gcloud scc bqexports
// > **Note:** In order to use Cloud SCC resources, your organization must be enrolled
// in [SCC Standard/Premium](https://cloud.google.com/security-command-center/docs/quickstart-security-command-center).
// Without doing so, you may run into errors during resource creation.
//
// To get more information about ProjectSccBigQueryExport, see:
//
// * [API documentation](https://cloud.google.com/security-command-center/docs/reference/rest/v1/projects.bigQueryExports)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/security-command-center/docs/how-to-analyze-findings-in-big-query)
//
// ## Example Usage
//
// ## Import
//
// ProjectSccBigQueryExport can be imported using any of these accepted formats:
//
// * `projects/{{project}}/bigQueryExports/{{big_query_export_id}}`
//
// * `{{project}}/{{big_query_export_id}}`
//
// * `{{big_query_export_id}}`
//
// When using the `pulumi import` command, ProjectSccBigQueryExport can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:securitycenter/projectSccBigQueryExport:ProjectSccBigQueryExport default projects/{{project}}/bigQueryExports/{{big_query_export_id}}
// ```
//
// ```sh
// $ pulumi import gcp:securitycenter/projectSccBigQueryExport:ProjectSccBigQueryExport default {{project}}/{{big_query_export_id}}
// ```
//
// ```sh
// $ pulumi import gcp:securitycenter/projectSccBigQueryExport:ProjectSccBigQueryExport default {{big_query_export_id}}
// ```
type ProjectSccBigQueryExport struct {
	pulumi.CustomResourceState

	// This must be unique within the organization.
	//
	// ***
	BigQueryExportId pulumi.StringOutput `pulumi:"bigQueryExportId"`
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrOutput `pulumi:"dataset"`
	// The description of the notification config (max of 1024 characters).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * \>, <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter pulumi.StringPtrOutput `pulumi:"filter"`
	// Email address of the user who last edited the BigQuery export.
	// This field is set by the server and will be ignored if provided on export creation or update.
	MostRecentEditor pulumi.StringOutput `pulumi:"mostRecentEditor"`
	// The resource name of this export, in the format
	// `projects/{{project}}/bigQueryExports/{{big_query_export_id}}`.
	// This field is provided in responses, and is ignored when provided in create requests.
	Name pulumi.StringOutput `pulumi:"name"`
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal pulumi.StringOutput `pulumi:"principal"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewProjectSccBigQueryExport registers a new resource with the given unique name, arguments, and options.
func NewProjectSccBigQueryExport(ctx *pulumi.Context,
	name string, args *ProjectSccBigQueryExportArgs, opts ...pulumi.ResourceOption) (*ProjectSccBigQueryExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BigQueryExportId == nil {
		return nil, errors.New("invalid value for required argument 'BigQueryExportId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProjectSccBigQueryExport
	err := ctx.RegisterResource("gcp:securitycenter/projectSccBigQueryExport:ProjectSccBigQueryExport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectSccBigQueryExport gets an existing ProjectSccBigQueryExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectSccBigQueryExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectSccBigQueryExportState, opts ...pulumi.ResourceOption) (*ProjectSccBigQueryExport, error) {
	var resource ProjectSccBigQueryExport
	err := ctx.ReadResource("gcp:securitycenter/projectSccBigQueryExport:ProjectSccBigQueryExport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectSccBigQueryExport resources.
type projectSccBigQueryExportState struct {
	// This must be unique within the organization.
	//
	// ***
	BigQueryExportId *string `pulumi:"bigQueryExportId"`
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset *string `pulumi:"dataset"`
	// The description of the notification config (max of 1024 characters).
	Description *string `pulumi:"description"`
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * \>, <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter *string `pulumi:"filter"`
	// Email address of the user who last edited the BigQuery export.
	// This field is set by the server and will be ignored if provided on export creation or update.
	MostRecentEditor *string `pulumi:"mostRecentEditor"`
	// The resource name of this export, in the format
	// `projects/{{project}}/bigQueryExports/{{big_query_export_id}}`.
	// This field is provided in responses, and is ignored when provided in create requests.
	Name *string `pulumi:"name"`
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal *string `pulumi:"principal"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
}

type ProjectSccBigQueryExportState struct {
	// This must be unique within the organization.
	//
	// ***
	BigQueryExportId pulumi.StringPtrInput
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrInput
	// The description of the notification config (max of 1024 characters).
	Description pulumi.StringPtrInput
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * \>, <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter pulumi.StringPtrInput
	// Email address of the user who last edited the BigQuery export.
	// This field is set by the server and will be ignored if provided on export creation or update.
	MostRecentEditor pulumi.StringPtrInput
	// The resource name of this export, in the format
	// `projects/{{project}}/bigQueryExports/{{big_query_export_id}}`.
	// This field is provided in responses, and is ignored when provided in create requests.
	Name pulumi.StringPtrInput
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
}

func (ProjectSccBigQueryExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectSccBigQueryExportState)(nil)).Elem()
}

type projectSccBigQueryExportArgs struct {
	// This must be unique within the organization.
	//
	// ***
	BigQueryExportId string `pulumi:"bigQueryExportId"`
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset *string `pulumi:"dataset"`
	// The description of the notification config (max of 1024 characters).
	Description *string `pulumi:"description"`
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * \>, <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter *string `pulumi:"filter"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a ProjectSccBigQueryExport resource.
type ProjectSccBigQueryExportArgs struct {
	// This must be unique within the organization.
	//
	// ***
	BigQueryExportId pulumi.StringInput
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrInput
	// The description of the notification config (max of 1024 characters).
	Description pulumi.StringPtrInput
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * \>, <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (ProjectSccBigQueryExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectSccBigQueryExportArgs)(nil)).Elem()
}

type ProjectSccBigQueryExportInput interface {
	pulumi.Input

	ToProjectSccBigQueryExportOutput() ProjectSccBigQueryExportOutput
	ToProjectSccBigQueryExportOutputWithContext(ctx context.Context) ProjectSccBigQueryExportOutput
}

func (*ProjectSccBigQueryExport) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSccBigQueryExport)(nil)).Elem()
}

func (i *ProjectSccBigQueryExport) ToProjectSccBigQueryExportOutput() ProjectSccBigQueryExportOutput {
	return i.ToProjectSccBigQueryExportOutputWithContext(context.Background())
}

func (i *ProjectSccBigQueryExport) ToProjectSccBigQueryExportOutputWithContext(ctx context.Context) ProjectSccBigQueryExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSccBigQueryExportOutput)
}

// ProjectSccBigQueryExportArrayInput is an input type that accepts ProjectSccBigQueryExportArray and ProjectSccBigQueryExportArrayOutput values.
// You can construct a concrete instance of `ProjectSccBigQueryExportArrayInput` via:
//
//	ProjectSccBigQueryExportArray{ ProjectSccBigQueryExportArgs{...} }
type ProjectSccBigQueryExportArrayInput interface {
	pulumi.Input

	ToProjectSccBigQueryExportArrayOutput() ProjectSccBigQueryExportArrayOutput
	ToProjectSccBigQueryExportArrayOutputWithContext(context.Context) ProjectSccBigQueryExportArrayOutput
}

type ProjectSccBigQueryExportArray []ProjectSccBigQueryExportInput

func (ProjectSccBigQueryExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProjectSccBigQueryExport)(nil)).Elem()
}

func (i ProjectSccBigQueryExportArray) ToProjectSccBigQueryExportArrayOutput() ProjectSccBigQueryExportArrayOutput {
	return i.ToProjectSccBigQueryExportArrayOutputWithContext(context.Background())
}

func (i ProjectSccBigQueryExportArray) ToProjectSccBigQueryExportArrayOutputWithContext(ctx context.Context) ProjectSccBigQueryExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSccBigQueryExportArrayOutput)
}

// ProjectSccBigQueryExportMapInput is an input type that accepts ProjectSccBigQueryExportMap and ProjectSccBigQueryExportMapOutput values.
// You can construct a concrete instance of `ProjectSccBigQueryExportMapInput` via:
//
//	ProjectSccBigQueryExportMap{ "key": ProjectSccBigQueryExportArgs{...} }
type ProjectSccBigQueryExportMapInput interface {
	pulumi.Input

	ToProjectSccBigQueryExportMapOutput() ProjectSccBigQueryExportMapOutput
	ToProjectSccBigQueryExportMapOutputWithContext(context.Context) ProjectSccBigQueryExportMapOutput
}

type ProjectSccBigQueryExportMap map[string]ProjectSccBigQueryExportInput

func (ProjectSccBigQueryExportMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProjectSccBigQueryExport)(nil)).Elem()
}

func (i ProjectSccBigQueryExportMap) ToProjectSccBigQueryExportMapOutput() ProjectSccBigQueryExportMapOutput {
	return i.ToProjectSccBigQueryExportMapOutputWithContext(context.Background())
}

func (i ProjectSccBigQueryExportMap) ToProjectSccBigQueryExportMapOutputWithContext(ctx context.Context) ProjectSccBigQueryExportMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSccBigQueryExportMapOutput)
}

type ProjectSccBigQueryExportOutput struct{ *pulumi.OutputState }

func (ProjectSccBigQueryExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSccBigQueryExport)(nil)).Elem()
}

func (o ProjectSccBigQueryExportOutput) ToProjectSccBigQueryExportOutput() ProjectSccBigQueryExportOutput {
	return o
}

func (o ProjectSccBigQueryExportOutput) ToProjectSccBigQueryExportOutputWithContext(ctx context.Context) ProjectSccBigQueryExportOutput {
	return o
}

// This must be unique within the organization.
//
// ***
func (o ProjectSccBigQueryExportOutput) BigQueryExportId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringOutput { return v.BigQueryExportId }).(pulumi.StringOutput)
}

// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o ProjectSccBigQueryExportOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The dataset to write findings' updates to.
// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
func (o ProjectSccBigQueryExportOutput) Dataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringPtrOutput { return v.Dataset }).(pulumi.StringPtrOutput)
}

// The description of the notification config (max of 1024 characters).
func (o ProjectSccBigQueryExportOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Expression that defines the filter to apply across create/update
// events of findings. The
// expression is a list of zero or more restrictions combined via
// logical operators AND and OR. Parentheses are supported, and OR
// has higher precedence than AND.
// Restrictions have the form <field> <operator> <value> and may have
// a - character in front of them to indicate negation. The fields
// map to those defined in the corresponding resource.
// The supported operators are:
//   - = for all value types.
//   - \>, <, >=, <= for integer values.
//   - :, meaning substring matching, for strings.
//     The supported value types are:
//   - string literals in quotes.
//   - integer literals without quotes.
//   - boolean literals true and false without quotes.
//     See
//     [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
//     for information on how to write a filter.
func (o ProjectSccBigQueryExportOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringPtrOutput { return v.Filter }).(pulumi.StringPtrOutput)
}

// Email address of the user who last edited the BigQuery export.
// This field is set by the server and will be ignored if provided on export creation or update.
func (o ProjectSccBigQueryExportOutput) MostRecentEditor() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringOutput { return v.MostRecentEditor }).(pulumi.StringOutput)
}

// The resource name of this export, in the format
// `projects/{{project}}/bigQueryExports/{{big_query_export_id}}`.
// This field is provided in responses, and is ignored when provided in create requests.
func (o ProjectSccBigQueryExportOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The service account that needs permission to create table and upload data to the BigQuery dataset.
func (o ProjectSccBigQueryExportOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringOutput { return v.Principal }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o ProjectSccBigQueryExportOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o ProjectSccBigQueryExportOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectSccBigQueryExport) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ProjectSccBigQueryExportArrayOutput struct{ *pulumi.OutputState }

func (ProjectSccBigQueryExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProjectSccBigQueryExport)(nil)).Elem()
}

func (o ProjectSccBigQueryExportArrayOutput) ToProjectSccBigQueryExportArrayOutput() ProjectSccBigQueryExportArrayOutput {
	return o
}

func (o ProjectSccBigQueryExportArrayOutput) ToProjectSccBigQueryExportArrayOutputWithContext(ctx context.Context) ProjectSccBigQueryExportArrayOutput {
	return o
}

func (o ProjectSccBigQueryExportArrayOutput) Index(i pulumi.IntInput) ProjectSccBigQueryExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProjectSccBigQueryExport {
		return vs[0].([]*ProjectSccBigQueryExport)[vs[1].(int)]
	}).(ProjectSccBigQueryExportOutput)
}

type ProjectSccBigQueryExportMapOutput struct{ *pulumi.OutputState }

func (ProjectSccBigQueryExportMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProjectSccBigQueryExport)(nil)).Elem()
}

func (o ProjectSccBigQueryExportMapOutput) ToProjectSccBigQueryExportMapOutput() ProjectSccBigQueryExportMapOutput {
	return o
}

func (o ProjectSccBigQueryExportMapOutput) ToProjectSccBigQueryExportMapOutputWithContext(ctx context.Context) ProjectSccBigQueryExportMapOutput {
	return o
}

func (o ProjectSccBigQueryExportMapOutput) MapIndex(k pulumi.StringInput) ProjectSccBigQueryExportOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProjectSccBigQueryExport {
		return vs[0].(map[string]*ProjectSccBigQueryExport)[vs[1].(string)]
	}).(ProjectSccBigQueryExportOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSccBigQueryExportInput)(nil)).Elem(), &ProjectSccBigQueryExport{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSccBigQueryExportArrayInput)(nil)).Elem(), ProjectSccBigQueryExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSccBigQueryExportMapInput)(nil)).Elem(), ProjectSccBigQueryExportMap{})
	pulumi.RegisterOutputType(ProjectSccBigQueryExportOutput{})
	pulumi.RegisterOutputType(ProjectSccBigQueryExportArrayOutput{})
	pulumi.RegisterOutputType(ProjectSccBigQueryExportMapOutput{})
}
