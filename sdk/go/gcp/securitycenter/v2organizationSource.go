// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Cloud Security Command Center's (Cloud SCC) finding source. A finding
// source is an entity or a mechanism that can produce a finding. A source is
// like a container of findings that come from the same scanner, logger,
// monitor, etc.
//
// To get more information about OrganizationSource, see:
//
// * [API documentation](https://cloud.google.com/security-command-center/docs/reference/rest/v2/organizations.sources)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/security-command-center/docs)
//
// ## Example Usage
//
// ### Scc Source Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/securitycenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := securitycenter.NewSource(ctx, "custom_source", &securitycenter.SourceArgs{
//				DisplayName:  pulumi.String("My Source"),
//				Organization: pulumi.String("123456789"),
//				Description:  pulumi.String("My custom Cloud Security Command Center Finding Source"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OrganizationSource can be imported using any of these accepted formats:
//
// * `organizations/{{organization}}/sources/{{name}}`
//
// * `{{organization}}/{{name}}`
//
// When using the `pulumi import` command, OrganizationSource can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:securitycenter/v2OrganizationSource:V2OrganizationSource default organizations/{{organization}}/sources/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:securitycenter/v2OrganizationSource:V2OrganizationSource default {{organization}}/{{name}}
// ```
type V2OrganizationSource struct {
	pulumi.CustomResourceState

	// The description of the source (max of 1024 characters).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The source’s display name. A source’s display name must be unique
	// amongst its siblings, for example, two sources with the same parent
	// can't share the same display name. The display name must start and end
	// with a letter or digit, may contain letters, digits, spaces, hyphens,
	// and underscores, and can be no longer than 32 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The resource name of this source, in the format
	// `organizations/{{organization}}/sources/{{source}}`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The organization whose Cloud Security Command Center the Source
	// lives in.
	Organization pulumi.StringOutput `pulumi:"organization"`
}

// NewV2OrganizationSource registers a new resource with the given unique name, arguments, and options.
func NewV2OrganizationSource(ctx *pulumi.Context,
	name string, args *V2OrganizationSourceArgs, opts ...pulumi.ResourceOption) (*V2OrganizationSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource V2OrganizationSource
	err := ctx.RegisterResource("gcp:securitycenter/v2OrganizationSource:V2OrganizationSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetV2OrganizationSource gets an existing V2OrganizationSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetV2OrganizationSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *V2OrganizationSourceState, opts ...pulumi.ResourceOption) (*V2OrganizationSource, error) {
	var resource V2OrganizationSource
	err := ctx.ReadResource("gcp:securitycenter/v2OrganizationSource:V2OrganizationSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering V2OrganizationSource resources.
type v2organizationSourceState struct {
	// The description of the source (max of 1024 characters).
	Description *string `pulumi:"description"`
	// The source’s display name. A source’s display name must be unique
	// amongst its siblings, for example, two sources with the same parent
	// can't share the same display name. The display name must start and end
	// with a letter or digit, may contain letters, digits, spaces, hyphens,
	// and underscores, and can be no longer than 32 characters.
	DisplayName *string `pulumi:"displayName"`
	// The resource name of this source, in the format
	// `organizations/{{organization}}/sources/{{source}}`.
	Name *string `pulumi:"name"`
	// The organization whose Cloud Security Command Center the Source
	// lives in.
	Organization *string `pulumi:"organization"`
}

type V2OrganizationSourceState struct {
	// The description of the source (max of 1024 characters).
	Description pulumi.StringPtrInput
	// The source’s display name. A source’s display name must be unique
	// amongst its siblings, for example, two sources with the same parent
	// can't share the same display name. The display name must start and end
	// with a letter or digit, may contain letters, digits, spaces, hyphens,
	// and underscores, and can be no longer than 32 characters.
	DisplayName pulumi.StringPtrInput
	// The resource name of this source, in the format
	// `organizations/{{organization}}/sources/{{source}}`.
	Name pulumi.StringPtrInput
	// The organization whose Cloud Security Command Center the Source
	// lives in.
	Organization pulumi.StringPtrInput
}

func (V2OrganizationSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*v2organizationSourceState)(nil)).Elem()
}

type v2organizationSourceArgs struct {
	// The description of the source (max of 1024 characters).
	Description *string `pulumi:"description"`
	// The source’s display name. A source’s display name must be unique
	// amongst its siblings, for example, two sources with the same parent
	// can't share the same display name. The display name must start and end
	// with a letter or digit, may contain letters, digits, spaces, hyphens,
	// and underscores, and can be no longer than 32 characters.
	DisplayName string `pulumi:"displayName"`
	// The organization whose Cloud Security Command Center the Source
	// lives in.
	Organization string `pulumi:"organization"`
}

// The set of arguments for constructing a V2OrganizationSource resource.
type V2OrganizationSourceArgs struct {
	// The description of the source (max of 1024 characters).
	Description pulumi.StringPtrInput
	// The source’s display name. A source’s display name must be unique
	// amongst its siblings, for example, two sources with the same parent
	// can't share the same display name. The display name must start and end
	// with a letter or digit, may contain letters, digits, spaces, hyphens,
	// and underscores, and can be no longer than 32 characters.
	DisplayName pulumi.StringInput
	// The organization whose Cloud Security Command Center the Source
	// lives in.
	Organization pulumi.StringInput
}

func (V2OrganizationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*v2organizationSourceArgs)(nil)).Elem()
}

type V2OrganizationSourceInput interface {
	pulumi.Input

	ToV2OrganizationSourceOutput() V2OrganizationSourceOutput
	ToV2OrganizationSourceOutputWithContext(ctx context.Context) V2OrganizationSourceOutput
}

func (*V2OrganizationSource) ElementType() reflect.Type {
	return reflect.TypeOf((**V2OrganizationSource)(nil)).Elem()
}

func (i *V2OrganizationSource) ToV2OrganizationSourceOutput() V2OrganizationSourceOutput {
	return i.ToV2OrganizationSourceOutputWithContext(context.Background())
}

func (i *V2OrganizationSource) ToV2OrganizationSourceOutputWithContext(ctx context.Context) V2OrganizationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2OrganizationSourceOutput)
}

// V2OrganizationSourceArrayInput is an input type that accepts V2OrganizationSourceArray and V2OrganizationSourceArrayOutput values.
// You can construct a concrete instance of `V2OrganizationSourceArrayInput` via:
//
//	V2OrganizationSourceArray{ V2OrganizationSourceArgs{...} }
type V2OrganizationSourceArrayInput interface {
	pulumi.Input

	ToV2OrganizationSourceArrayOutput() V2OrganizationSourceArrayOutput
	ToV2OrganizationSourceArrayOutputWithContext(context.Context) V2OrganizationSourceArrayOutput
}

type V2OrganizationSourceArray []V2OrganizationSourceInput

func (V2OrganizationSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2OrganizationSource)(nil)).Elem()
}

func (i V2OrganizationSourceArray) ToV2OrganizationSourceArrayOutput() V2OrganizationSourceArrayOutput {
	return i.ToV2OrganizationSourceArrayOutputWithContext(context.Background())
}

func (i V2OrganizationSourceArray) ToV2OrganizationSourceArrayOutputWithContext(ctx context.Context) V2OrganizationSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2OrganizationSourceArrayOutput)
}

// V2OrganizationSourceMapInput is an input type that accepts V2OrganizationSourceMap and V2OrganizationSourceMapOutput values.
// You can construct a concrete instance of `V2OrganizationSourceMapInput` via:
//
//	V2OrganizationSourceMap{ "key": V2OrganizationSourceArgs{...} }
type V2OrganizationSourceMapInput interface {
	pulumi.Input

	ToV2OrganizationSourceMapOutput() V2OrganizationSourceMapOutput
	ToV2OrganizationSourceMapOutputWithContext(context.Context) V2OrganizationSourceMapOutput
}

type V2OrganizationSourceMap map[string]V2OrganizationSourceInput

func (V2OrganizationSourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2OrganizationSource)(nil)).Elem()
}

func (i V2OrganizationSourceMap) ToV2OrganizationSourceMapOutput() V2OrganizationSourceMapOutput {
	return i.ToV2OrganizationSourceMapOutputWithContext(context.Background())
}

func (i V2OrganizationSourceMap) ToV2OrganizationSourceMapOutputWithContext(ctx context.Context) V2OrganizationSourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2OrganizationSourceMapOutput)
}

type V2OrganizationSourceOutput struct{ *pulumi.OutputState }

func (V2OrganizationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2OrganizationSource)(nil)).Elem()
}

func (o V2OrganizationSourceOutput) ToV2OrganizationSourceOutput() V2OrganizationSourceOutput {
	return o
}

func (o V2OrganizationSourceOutput) ToV2OrganizationSourceOutputWithContext(ctx context.Context) V2OrganizationSourceOutput {
	return o
}

// The description of the source (max of 1024 characters).
func (o V2OrganizationSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V2OrganizationSource) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The source’s display name. A source’s display name must be unique
// amongst its siblings, for example, two sources with the same parent
// can't share the same display name. The display name must start and end
// with a letter or digit, may contain letters, digits, spaces, hyphens,
// and underscores, and can be no longer than 32 characters.
func (o V2OrganizationSourceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *V2OrganizationSource) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The resource name of this source, in the format
// `organizations/{{organization}}/sources/{{source}}`.
func (o V2OrganizationSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *V2OrganizationSource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The organization whose Cloud Security Command Center the Source
// lives in.
func (o V2OrganizationSourceOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *V2OrganizationSource) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

type V2OrganizationSourceArrayOutput struct{ *pulumi.OutputState }

func (V2OrganizationSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2OrganizationSource)(nil)).Elem()
}

func (o V2OrganizationSourceArrayOutput) ToV2OrganizationSourceArrayOutput() V2OrganizationSourceArrayOutput {
	return o
}

func (o V2OrganizationSourceArrayOutput) ToV2OrganizationSourceArrayOutputWithContext(ctx context.Context) V2OrganizationSourceArrayOutput {
	return o
}

func (o V2OrganizationSourceArrayOutput) Index(i pulumi.IntInput) V2OrganizationSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *V2OrganizationSource {
		return vs[0].([]*V2OrganizationSource)[vs[1].(int)]
	}).(V2OrganizationSourceOutput)
}

type V2OrganizationSourceMapOutput struct{ *pulumi.OutputState }

func (V2OrganizationSourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2OrganizationSource)(nil)).Elem()
}

func (o V2OrganizationSourceMapOutput) ToV2OrganizationSourceMapOutput() V2OrganizationSourceMapOutput {
	return o
}

func (o V2OrganizationSourceMapOutput) ToV2OrganizationSourceMapOutputWithContext(ctx context.Context) V2OrganizationSourceMapOutput {
	return o
}

func (o V2OrganizationSourceMapOutput) MapIndex(k pulumi.StringInput) V2OrganizationSourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *V2OrganizationSource {
		return vs[0].(map[string]*V2OrganizationSource)[vs[1].(string)]
	}).(V2OrganizationSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*V2OrganizationSourceInput)(nil)).Elem(), &V2OrganizationSource{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2OrganizationSourceArrayInput)(nil)).Elem(), V2OrganizationSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2OrganizationSourceMapInput)(nil)).Elem(), V2OrganizationSourceMap{})
	pulumi.RegisterOutputType(V2OrganizationSourceOutput{})
	pulumi.RegisterOutputType(V2OrganizationSourceArrayOutput{})
	pulumi.RegisterOutputType(V2OrganizationSourceMapOutput{})
}
