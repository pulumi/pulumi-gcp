// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type InstanceIamBindingCondition struct {
	// An optional description of the instance.
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamBindingConditionInput is an input type that accepts InstanceIamBindingConditionArgs and InstanceIamBindingConditionOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionInput` via:
//
//	InstanceIamBindingConditionArgs{...}
type InstanceIamBindingConditionInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput
	ToInstanceIamBindingConditionOutputWithContext(context.Context) InstanceIamBindingConditionOutput
}

type InstanceIamBindingConditionArgs struct {
	// An optional description of the instance.
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return i.ToInstanceIamBindingConditionOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput)
}

func (i InstanceIamBindingConditionArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceIamBindingCondition] {
	return pulumix.Output[InstanceIamBindingCondition]{
		OutputState: i.ToInstanceIamBindingConditionOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamBindingConditionArgs) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionOutput).ToInstanceIamBindingConditionPtrOutputWithContext(ctx)
}

// InstanceIamBindingConditionPtrInput is an input type that accepts InstanceIamBindingConditionArgs, InstanceIamBindingConditionPtr and InstanceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamBindingConditionPtrInput` via:
//
//	        InstanceIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput
	ToInstanceIamBindingConditionPtrOutputWithContext(context.Context) InstanceIamBindingConditionPtrOutput
}

type instanceIamBindingConditionPtrType InstanceIamBindingConditionArgs

func InstanceIamBindingConditionPtr(v *InstanceIamBindingConditionArgs) InstanceIamBindingConditionPtrInput {
	return (*instanceIamBindingConditionPtrType)(v)
}

func (*instanceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return i.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamBindingConditionPtrType) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamBindingConditionPtrOutput)
}

func (i *instanceIamBindingConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceIamBindingCondition] {
	return pulumix.Output[*InstanceIamBindingCondition]{
		OutputState: i.ToInstanceIamBindingConditionPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutput() InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionOutputWithContext(ctx context.Context) InstanceIamBindingConditionOutput {
	return o
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o.ToInstanceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamBindingConditionOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamBindingCondition) *InstanceIamBindingCondition {
		return &v
	}).(InstanceIamBindingConditionPtrOutput)
}

func (o InstanceIamBindingConditionOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceIamBindingCondition] {
	return pulumix.Output[InstanceIamBindingCondition]{
		OutputState: o.OutputState,
	}
}

// An optional description of the instance.
func (o InstanceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamBindingCondition)(nil)).Elem()
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutput() InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) ToInstanceIamBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIamBindingConditionPtrOutput {
	return o
}

func (o InstanceIamBindingConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceIamBindingCondition] {
	return pulumix.Output[*InstanceIamBindingCondition]{
		OutputState: o.OutputState,
	}
}

func (o InstanceIamBindingConditionPtrOutput) Elem() InstanceIamBindingConditionOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) InstanceIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamBindingCondition
		return ret
	}).(InstanceIamBindingConditionOutput)
}

// An optional description of the instance.
func (o InstanceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type InstanceIamMemberCondition struct {
	// An optional description of the instance.
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// InstanceIamMemberConditionInput is an input type that accepts InstanceIamMemberConditionArgs and InstanceIamMemberConditionOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionInput` via:
//
//	InstanceIamMemberConditionArgs{...}
type InstanceIamMemberConditionInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput
	ToInstanceIamMemberConditionOutputWithContext(context.Context) InstanceIamMemberConditionOutput
}

type InstanceIamMemberConditionArgs struct {
	// An optional description of the instance.
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return i.ToInstanceIamMemberConditionOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput)
}

func (i InstanceIamMemberConditionArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceIamMemberCondition] {
	return pulumix.Output[InstanceIamMemberCondition]{
		OutputState: i.ToInstanceIamMemberConditionOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIamMemberConditionArgs) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionOutput).ToInstanceIamMemberConditionPtrOutputWithContext(ctx)
}

// InstanceIamMemberConditionPtrInput is an input type that accepts InstanceIamMemberConditionArgs, InstanceIamMemberConditionPtr and InstanceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `InstanceIamMemberConditionPtrInput` via:
//
//	        InstanceIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type InstanceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput
	ToInstanceIamMemberConditionPtrOutputWithContext(context.Context) InstanceIamMemberConditionPtrOutput
}

type instanceIamMemberConditionPtrType InstanceIamMemberConditionArgs

func InstanceIamMemberConditionPtr(v *InstanceIamMemberConditionArgs) InstanceIamMemberConditionPtrInput {
	return (*instanceIamMemberConditionPtrType)(v)
}

func (*instanceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return i.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIamMemberConditionPtrType) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIamMemberConditionPtrOutput)
}

func (i *instanceIamMemberConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceIamMemberCondition] {
	return pulumix.Output[*InstanceIamMemberCondition]{
		OutputState: i.ToInstanceIamMemberConditionPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutput() InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionOutputWithContext(ctx context.Context) InstanceIamMemberConditionOutput {
	return o
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o.ToInstanceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIamMemberConditionOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIamMemberCondition) *InstanceIamMemberCondition {
		return &v
	}).(InstanceIamMemberConditionPtrOutput)
}

func (o InstanceIamMemberConditionOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceIamMemberCondition] {
	return pulumix.Output[InstanceIamMemberCondition]{
		OutputState: o.OutputState,
	}
}

// An optional description of the instance.
func (o InstanceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIamMemberCondition)(nil)).Elem()
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutput() InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) ToInstanceIamMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIamMemberConditionPtrOutput {
	return o
}

func (o InstanceIamMemberConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceIamMemberCondition] {
	return pulumix.Output[*InstanceIamMemberCondition]{
		OutputState: o.OutputState,
	}
}

func (o InstanceIamMemberConditionPtrOutput) Elem() InstanceIamMemberConditionOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) InstanceIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret InstanceIamMemberCondition
		return ret
	}).(InstanceIamMemberConditionOutput)
}

// An optional description of the instance.
func (o InstanceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o InstanceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type NotificationConfigStreamingConfig struct {
	// Expression that defines the filter to apply across create/update
	// events of assets or findings as specified by the event type. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * > , <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	//
	// ***
	Filter string `pulumi:"filter"`
}

// NotificationConfigStreamingConfigInput is an input type that accepts NotificationConfigStreamingConfigArgs and NotificationConfigStreamingConfigOutput values.
// You can construct a concrete instance of `NotificationConfigStreamingConfigInput` via:
//
//	NotificationConfigStreamingConfigArgs{...}
type NotificationConfigStreamingConfigInput interface {
	pulumi.Input

	ToNotificationConfigStreamingConfigOutput() NotificationConfigStreamingConfigOutput
	ToNotificationConfigStreamingConfigOutputWithContext(context.Context) NotificationConfigStreamingConfigOutput
}

type NotificationConfigStreamingConfigArgs struct {
	// Expression that defines the filter to apply across create/update
	// events of assets or findings as specified by the event type. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * > , <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	//
	// ***
	Filter pulumi.StringInput `pulumi:"filter"`
}

func (NotificationConfigStreamingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfigStreamingConfig)(nil)).Elem()
}

func (i NotificationConfigStreamingConfigArgs) ToNotificationConfigStreamingConfigOutput() NotificationConfigStreamingConfigOutput {
	return i.ToNotificationConfigStreamingConfigOutputWithContext(context.Background())
}

func (i NotificationConfigStreamingConfigArgs) ToNotificationConfigStreamingConfigOutputWithContext(ctx context.Context) NotificationConfigStreamingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigStreamingConfigOutput)
}

func (i NotificationConfigStreamingConfigArgs) ToOutput(ctx context.Context) pulumix.Output[NotificationConfigStreamingConfig] {
	return pulumix.Output[NotificationConfigStreamingConfig]{
		OutputState: i.ToNotificationConfigStreamingConfigOutputWithContext(ctx).OutputState,
	}
}

func (i NotificationConfigStreamingConfigArgs) ToNotificationConfigStreamingConfigPtrOutput() NotificationConfigStreamingConfigPtrOutput {
	return i.ToNotificationConfigStreamingConfigPtrOutputWithContext(context.Background())
}

func (i NotificationConfigStreamingConfigArgs) ToNotificationConfigStreamingConfigPtrOutputWithContext(ctx context.Context) NotificationConfigStreamingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigStreamingConfigOutput).ToNotificationConfigStreamingConfigPtrOutputWithContext(ctx)
}

// NotificationConfigStreamingConfigPtrInput is an input type that accepts NotificationConfigStreamingConfigArgs, NotificationConfigStreamingConfigPtr and NotificationConfigStreamingConfigPtrOutput values.
// You can construct a concrete instance of `NotificationConfigStreamingConfigPtrInput` via:
//
//	        NotificationConfigStreamingConfigArgs{...}
//
//	or:
//
//	        nil
type NotificationConfigStreamingConfigPtrInput interface {
	pulumi.Input

	ToNotificationConfigStreamingConfigPtrOutput() NotificationConfigStreamingConfigPtrOutput
	ToNotificationConfigStreamingConfigPtrOutputWithContext(context.Context) NotificationConfigStreamingConfigPtrOutput
}

type notificationConfigStreamingConfigPtrType NotificationConfigStreamingConfigArgs

func NotificationConfigStreamingConfigPtr(v *NotificationConfigStreamingConfigArgs) NotificationConfigStreamingConfigPtrInput {
	return (*notificationConfigStreamingConfigPtrType)(v)
}

func (*notificationConfigStreamingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationConfigStreamingConfig)(nil)).Elem()
}

func (i *notificationConfigStreamingConfigPtrType) ToNotificationConfigStreamingConfigPtrOutput() NotificationConfigStreamingConfigPtrOutput {
	return i.ToNotificationConfigStreamingConfigPtrOutputWithContext(context.Background())
}

func (i *notificationConfigStreamingConfigPtrType) ToNotificationConfigStreamingConfigPtrOutputWithContext(ctx context.Context) NotificationConfigStreamingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigStreamingConfigPtrOutput)
}

func (i *notificationConfigStreamingConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*NotificationConfigStreamingConfig] {
	return pulumix.Output[*NotificationConfigStreamingConfig]{
		OutputState: i.ToNotificationConfigStreamingConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type NotificationConfigStreamingConfigOutput struct{ *pulumi.OutputState }

func (NotificationConfigStreamingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfigStreamingConfig)(nil)).Elem()
}

func (o NotificationConfigStreamingConfigOutput) ToNotificationConfigStreamingConfigOutput() NotificationConfigStreamingConfigOutput {
	return o
}

func (o NotificationConfigStreamingConfigOutput) ToNotificationConfigStreamingConfigOutputWithContext(ctx context.Context) NotificationConfigStreamingConfigOutput {
	return o
}

func (o NotificationConfigStreamingConfigOutput) ToNotificationConfigStreamingConfigPtrOutput() NotificationConfigStreamingConfigPtrOutput {
	return o.ToNotificationConfigStreamingConfigPtrOutputWithContext(context.Background())
}

func (o NotificationConfigStreamingConfigOutput) ToNotificationConfigStreamingConfigPtrOutputWithContext(ctx context.Context) NotificationConfigStreamingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationConfigStreamingConfig) *NotificationConfigStreamingConfig {
		return &v
	}).(NotificationConfigStreamingConfigPtrOutput)
}

func (o NotificationConfigStreamingConfigOutput) ToOutput(ctx context.Context) pulumix.Output[NotificationConfigStreamingConfig] {
	return pulumix.Output[NotificationConfigStreamingConfig]{
		OutputState: o.OutputState,
	}
}

// Expression that defines the filter to apply across create/update
// events of assets or findings as specified by the event type. The
// expression is a list of zero or more restrictions combined via
// logical operators AND and OR. Parentheses are supported, and OR
// has higher precedence than AND.
// Restrictions have the form <field> <operator> <value> and may have
// a - character in front of them to indicate negation. The fields
// map to those defined in the corresponding resource.
// The supported operators are:
//   - = for all value types.
//   - > , <, >=, <= for integer values.
//   - :, meaning substring matching, for strings.
//     The supported value types are:
//   - string literals in quotes.
//   - integer literals without quotes.
//   - boolean literals true and false without quotes.
//     See
//     [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
//     for information on how to write a filter.
//
// ***
func (o NotificationConfigStreamingConfigOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationConfigStreamingConfig) string { return v.Filter }).(pulumi.StringOutput)
}

type NotificationConfigStreamingConfigPtrOutput struct{ *pulumi.OutputState }

func (NotificationConfigStreamingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationConfigStreamingConfig)(nil)).Elem()
}

func (o NotificationConfigStreamingConfigPtrOutput) ToNotificationConfigStreamingConfigPtrOutput() NotificationConfigStreamingConfigPtrOutput {
	return o
}

func (o NotificationConfigStreamingConfigPtrOutput) ToNotificationConfigStreamingConfigPtrOutputWithContext(ctx context.Context) NotificationConfigStreamingConfigPtrOutput {
	return o
}

func (o NotificationConfigStreamingConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*NotificationConfigStreamingConfig] {
	return pulumix.Output[*NotificationConfigStreamingConfig]{
		OutputState: o.OutputState,
	}
}

func (o NotificationConfigStreamingConfigPtrOutput) Elem() NotificationConfigStreamingConfigOutput {
	return o.ApplyT(func(v *NotificationConfigStreamingConfig) NotificationConfigStreamingConfig {
		if v != nil {
			return *v
		}
		var ret NotificationConfigStreamingConfig
		return ret
	}).(NotificationConfigStreamingConfigOutput)
}

// Expression that defines the filter to apply across create/update
// events of assets or findings as specified by the event type. The
// expression is a list of zero or more restrictions combined via
// logical operators AND and OR. Parentheses are supported, and OR
// has higher precedence than AND.
// Restrictions have the form <field> <operator> <value> and may have
// a - character in front of them to indicate negation. The fields
// map to those defined in the corresponding resource.
// The supported operators are:
//   - = for all value types.
//   - > , <, >=, <= for integer values.
//   - :, meaning substring matching, for strings.
//     The supported value types are:
//   - string literals in quotes.
//   - integer literals without quotes.
//   - boolean literals true and false without quotes.
//     See
//     [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
//     for information on how to write a filter.
//
// ***
func (o NotificationConfigStreamingConfigPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfigStreamingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Filter
	}).(pulumi.StringPtrOutput)
}

type ProjectCustomModuleCustomConfig struct {
	// Custom output properties.
	// Structure is documented below.
	CustomOutput *ProjectCustomModuleCustomConfigCustomOutput `pulumi:"customOutput"`
	// Text that describes the vulnerability or misconfiguration that the custom
	// module detects. This explanation is returned with each finding instance to
	// help investigators understand the detected issue. The text must be enclosed in quotation marks.
	Description *string `pulumi:"description"`
	// The CEL expression to evaluate to produce findings. When the expression evaluates
	// to true against a resource, a finding is generated.
	// Structure is documented below.
	Predicate ProjectCustomModuleCustomConfigPredicate `pulumi:"predicate"`
	// An explanation of the recommended steps that security teams can take to resolve
	// the detected issue. This explanation is returned with each finding generated by
	// this module in the nextSteps property of the finding JSON.
	Recommendation string `pulumi:"recommendation"`
	// The resource types that the custom module operates on. Each custom module
	// can specify up to 5 resource types.
	// Structure is documented below.
	ResourceSelector ProjectCustomModuleCustomConfigResourceSelector `pulumi:"resourceSelector"`
	// The severity to assign to findings generated by the module.
	// Possible values are: `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`.
	Severity string `pulumi:"severity"`
}

// ProjectCustomModuleCustomConfigInput is an input type that accepts ProjectCustomModuleCustomConfigArgs and ProjectCustomModuleCustomConfigOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigInput` via:
//
//	ProjectCustomModuleCustomConfigArgs{...}
type ProjectCustomModuleCustomConfigInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigOutput() ProjectCustomModuleCustomConfigOutput
	ToProjectCustomModuleCustomConfigOutputWithContext(context.Context) ProjectCustomModuleCustomConfigOutput
}

type ProjectCustomModuleCustomConfigArgs struct {
	// Custom output properties.
	// Structure is documented below.
	CustomOutput ProjectCustomModuleCustomConfigCustomOutputPtrInput `pulumi:"customOutput"`
	// Text that describes the vulnerability or misconfiguration that the custom
	// module detects. This explanation is returned with each finding instance to
	// help investigators understand the detected issue. The text must be enclosed in quotation marks.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The CEL expression to evaluate to produce findings. When the expression evaluates
	// to true against a resource, a finding is generated.
	// Structure is documented below.
	Predicate ProjectCustomModuleCustomConfigPredicateInput `pulumi:"predicate"`
	// An explanation of the recommended steps that security teams can take to resolve
	// the detected issue. This explanation is returned with each finding generated by
	// this module in the nextSteps property of the finding JSON.
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// The resource types that the custom module operates on. Each custom module
	// can specify up to 5 resource types.
	// Structure is documented below.
	ResourceSelector ProjectCustomModuleCustomConfigResourceSelectorInput `pulumi:"resourceSelector"`
	// The severity to assign to findings generated by the module.
	// Possible values are: `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`.
	Severity pulumi.StringInput `pulumi:"severity"`
}

func (ProjectCustomModuleCustomConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfig)(nil)).Elem()
}

func (i ProjectCustomModuleCustomConfigArgs) ToProjectCustomModuleCustomConfigOutput() ProjectCustomModuleCustomConfigOutput {
	return i.ToProjectCustomModuleCustomConfigOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigArgs) ToProjectCustomModuleCustomConfigOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigOutput)
}

func (i ProjectCustomModuleCustomConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfig] {
	return pulumix.Output[ProjectCustomModuleCustomConfig]{
		OutputState: i.ToProjectCustomModuleCustomConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectCustomModuleCustomConfigArgs) ToProjectCustomModuleCustomConfigPtrOutput() ProjectCustomModuleCustomConfigPtrOutput {
	return i.ToProjectCustomModuleCustomConfigPtrOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigArgs) ToProjectCustomModuleCustomConfigPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigOutput).ToProjectCustomModuleCustomConfigPtrOutputWithContext(ctx)
}

// ProjectCustomModuleCustomConfigPtrInput is an input type that accepts ProjectCustomModuleCustomConfigArgs, ProjectCustomModuleCustomConfigPtr and ProjectCustomModuleCustomConfigPtrOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigPtrInput` via:
//
//	        ProjectCustomModuleCustomConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectCustomModuleCustomConfigPtrInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigPtrOutput() ProjectCustomModuleCustomConfigPtrOutput
	ToProjectCustomModuleCustomConfigPtrOutputWithContext(context.Context) ProjectCustomModuleCustomConfigPtrOutput
}

type projectCustomModuleCustomConfigPtrType ProjectCustomModuleCustomConfigArgs

func ProjectCustomModuleCustomConfigPtr(v *ProjectCustomModuleCustomConfigArgs) ProjectCustomModuleCustomConfigPtrInput {
	return (*projectCustomModuleCustomConfigPtrType)(v)
}

func (*projectCustomModuleCustomConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfig)(nil)).Elem()
}

func (i *projectCustomModuleCustomConfigPtrType) ToProjectCustomModuleCustomConfigPtrOutput() ProjectCustomModuleCustomConfigPtrOutput {
	return i.ToProjectCustomModuleCustomConfigPtrOutputWithContext(context.Background())
}

func (i *projectCustomModuleCustomConfigPtrType) ToProjectCustomModuleCustomConfigPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigPtrOutput)
}

func (i *projectCustomModuleCustomConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfig] {
	return pulumix.Output[*ProjectCustomModuleCustomConfig]{
		OutputState: i.ToProjectCustomModuleCustomConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectCustomModuleCustomConfigOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfig)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigOutput) ToProjectCustomModuleCustomConfigOutput() ProjectCustomModuleCustomConfigOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigOutput) ToProjectCustomModuleCustomConfigOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigOutput) ToProjectCustomModuleCustomConfigPtrOutput() ProjectCustomModuleCustomConfigPtrOutput {
	return o.ToProjectCustomModuleCustomConfigPtrOutputWithContext(context.Background())
}

func (o ProjectCustomModuleCustomConfigOutput) ToProjectCustomModuleCustomConfigPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectCustomModuleCustomConfig) *ProjectCustomModuleCustomConfig {
		return &v
	}).(ProjectCustomModuleCustomConfigPtrOutput)
}

func (o ProjectCustomModuleCustomConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfig] {
	return pulumix.Output[ProjectCustomModuleCustomConfig]{
		OutputState: o.OutputState,
	}
}

// Custom output properties.
// Structure is documented below.
func (o ProjectCustomModuleCustomConfigOutput) CustomOutput() ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfig) *ProjectCustomModuleCustomConfigCustomOutput {
		return v.CustomOutput
	}).(ProjectCustomModuleCustomConfigCustomOutputPtrOutput)
}

// Text that describes the vulnerability or misconfiguration that the custom
// module detects. This explanation is returned with each finding instance to
// help investigators understand the detected issue. The text must be enclosed in quotation marks.
func (o ProjectCustomModuleCustomConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The CEL expression to evaluate to produce findings. When the expression evaluates
// to true against a resource, a finding is generated.
// Structure is documented below.
func (o ProjectCustomModuleCustomConfigOutput) Predicate() ProjectCustomModuleCustomConfigPredicateOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfig) ProjectCustomModuleCustomConfigPredicate { return v.Predicate }).(ProjectCustomModuleCustomConfigPredicateOutput)
}

// An explanation of the recommended steps that security teams can take to resolve
// the detected issue. This explanation is returned with each finding generated by
// this module in the nextSteps property of the finding JSON.
func (o ProjectCustomModuleCustomConfigOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfig) string { return v.Recommendation }).(pulumi.StringOutput)
}

// The resource types that the custom module operates on. Each custom module
// can specify up to 5 resource types.
// Structure is documented below.
func (o ProjectCustomModuleCustomConfigOutput) ResourceSelector() ProjectCustomModuleCustomConfigResourceSelectorOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfig) ProjectCustomModuleCustomConfigResourceSelector {
		return v.ResourceSelector
	}).(ProjectCustomModuleCustomConfigResourceSelectorOutput)
}

// The severity to assign to findings generated by the module.
// Possible values are: `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`.
func (o ProjectCustomModuleCustomConfigOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfig) string { return v.Severity }).(pulumi.StringOutput)
}

type ProjectCustomModuleCustomConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfig)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigPtrOutput) ToProjectCustomModuleCustomConfigPtrOutput() ProjectCustomModuleCustomConfigPtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigPtrOutput) ToProjectCustomModuleCustomConfigPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfig] {
	return pulumix.Output[*ProjectCustomModuleCustomConfig]{
		OutputState: o.OutputState,
	}
}

func (o ProjectCustomModuleCustomConfigPtrOutput) Elem() ProjectCustomModuleCustomConfigOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfig) ProjectCustomModuleCustomConfig {
		if v != nil {
			return *v
		}
		var ret ProjectCustomModuleCustomConfig
		return ret
	}).(ProjectCustomModuleCustomConfigOutput)
}

// Custom output properties.
// Structure is documented below.
func (o ProjectCustomModuleCustomConfigPtrOutput) CustomOutput() ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfig) *ProjectCustomModuleCustomConfigCustomOutput {
		if v == nil {
			return nil
		}
		return v.CustomOutput
	}).(ProjectCustomModuleCustomConfigCustomOutputPtrOutput)
}

// Text that describes the vulnerability or misconfiguration that the custom
// module detects. This explanation is returned with each finding instance to
// help investigators understand the detected issue. The text must be enclosed in quotation marks.
func (o ProjectCustomModuleCustomConfigPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfig) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The CEL expression to evaluate to produce findings. When the expression evaluates
// to true against a resource, a finding is generated.
// Structure is documented below.
func (o ProjectCustomModuleCustomConfigPtrOutput) Predicate() ProjectCustomModuleCustomConfigPredicatePtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfig) *ProjectCustomModuleCustomConfigPredicate {
		if v == nil {
			return nil
		}
		return &v.Predicate
	}).(ProjectCustomModuleCustomConfigPredicatePtrOutput)
}

// An explanation of the recommended steps that security teams can take to resolve
// the detected issue. This explanation is returned with each finding generated by
// this module in the nextSteps property of the finding JSON.
func (o ProjectCustomModuleCustomConfigPtrOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Recommendation
	}).(pulumi.StringPtrOutput)
}

// The resource types that the custom module operates on. Each custom module
// can specify up to 5 resource types.
// Structure is documented below.
func (o ProjectCustomModuleCustomConfigPtrOutput) ResourceSelector() ProjectCustomModuleCustomConfigResourceSelectorPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfig) *ProjectCustomModuleCustomConfigResourceSelector {
		if v == nil {
			return nil
		}
		return &v.ResourceSelector
	}).(ProjectCustomModuleCustomConfigResourceSelectorPtrOutput)
}

// The severity to assign to findings generated by the module.
// Possible values are: `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`.
func (o ProjectCustomModuleCustomConfigPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Severity
	}).(pulumi.StringPtrOutput)
}

type ProjectCustomModuleCustomConfigCustomOutput struct {
	// A list of custom output properties to add to the finding.
	// Structure is documented below.
	Properties []ProjectCustomModuleCustomConfigCustomOutputProperty `pulumi:"properties"`
}

// ProjectCustomModuleCustomConfigCustomOutputInput is an input type that accepts ProjectCustomModuleCustomConfigCustomOutputArgs and ProjectCustomModuleCustomConfigCustomOutputOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigCustomOutputInput` via:
//
//	ProjectCustomModuleCustomConfigCustomOutputArgs{...}
type ProjectCustomModuleCustomConfigCustomOutputInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigCustomOutputOutput() ProjectCustomModuleCustomConfigCustomOutputOutput
	ToProjectCustomModuleCustomConfigCustomOutputOutputWithContext(context.Context) ProjectCustomModuleCustomConfigCustomOutputOutput
}

type ProjectCustomModuleCustomConfigCustomOutputArgs struct {
	// A list of custom output properties to add to the finding.
	// Structure is documented below.
	Properties ProjectCustomModuleCustomConfigCustomOutputPropertyArrayInput `pulumi:"properties"`
}

func (ProjectCustomModuleCustomConfigCustomOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutput)(nil)).Elem()
}

func (i ProjectCustomModuleCustomConfigCustomOutputArgs) ToProjectCustomModuleCustomConfigCustomOutputOutput() ProjectCustomModuleCustomConfigCustomOutputOutput {
	return i.ToProjectCustomModuleCustomConfigCustomOutputOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigCustomOutputArgs) ToProjectCustomModuleCustomConfigCustomOutputOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigCustomOutputOutput)
}

func (i ProjectCustomModuleCustomConfigCustomOutputArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigCustomOutput] {
	return pulumix.Output[ProjectCustomModuleCustomConfigCustomOutput]{
		OutputState: i.ToProjectCustomModuleCustomConfigCustomOutputOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectCustomModuleCustomConfigCustomOutputArgs) ToProjectCustomModuleCustomConfigCustomOutputPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return i.ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigCustomOutputArgs) ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigCustomOutputOutput).ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(ctx)
}

// ProjectCustomModuleCustomConfigCustomOutputPtrInput is an input type that accepts ProjectCustomModuleCustomConfigCustomOutputArgs, ProjectCustomModuleCustomConfigCustomOutputPtr and ProjectCustomModuleCustomConfigCustomOutputPtrOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigCustomOutputPtrInput` via:
//
//	        ProjectCustomModuleCustomConfigCustomOutputArgs{...}
//
//	or:
//
//	        nil
type ProjectCustomModuleCustomConfigCustomOutputPtrInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigCustomOutputPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPtrOutput
	ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(context.Context) ProjectCustomModuleCustomConfigCustomOutputPtrOutput
}

type projectCustomModuleCustomConfigCustomOutputPtrType ProjectCustomModuleCustomConfigCustomOutputArgs

func ProjectCustomModuleCustomConfigCustomOutputPtr(v *ProjectCustomModuleCustomConfigCustomOutputArgs) ProjectCustomModuleCustomConfigCustomOutputPtrInput {
	return (*projectCustomModuleCustomConfigCustomOutputPtrType)(v)
}

func (*projectCustomModuleCustomConfigCustomOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfigCustomOutput)(nil)).Elem()
}

func (i *projectCustomModuleCustomConfigCustomOutputPtrType) ToProjectCustomModuleCustomConfigCustomOutputPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return i.ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(context.Background())
}

func (i *projectCustomModuleCustomConfigCustomOutputPtrType) ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigCustomOutputPtrOutput)
}

func (i *projectCustomModuleCustomConfigCustomOutputPtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfigCustomOutput] {
	return pulumix.Output[*ProjectCustomModuleCustomConfigCustomOutput]{
		OutputState: i.ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectCustomModuleCustomConfigCustomOutputOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigCustomOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutput)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigCustomOutputOutput) ToProjectCustomModuleCustomConfigCustomOutputOutput() ProjectCustomModuleCustomConfigCustomOutputOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputOutput) ToProjectCustomModuleCustomConfigCustomOutputOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputOutput) ToProjectCustomModuleCustomConfigCustomOutputPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return o.ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(context.Background())
}

func (o ProjectCustomModuleCustomConfigCustomOutputOutput) ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectCustomModuleCustomConfigCustomOutput) *ProjectCustomModuleCustomConfigCustomOutput {
		return &v
	}).(ProjectCustomModuleCustomConfigCustomOutputPtrOutput)
}

func (o ProjectCustomModuleCustomConfigCustomOutputOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigCustomOutput] {
	return pulumix.Output[ProjectCustomModuleCustomConfigCustomOutput]{
		OutputState: o.OutputState,
	}
}

// A list of custom output properties to add to the finding.
// Structure is documented below.
func (o ProjectCustomModuleCustomConfigCustomOutputOutput) Properties() ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigCustomOutput) []ProjectCustomModuleCustomConfigCustomOutputProperty {
		return v.Properties
	}).(ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput)
}

type ProjectCustomModuleCustomConfigCustomOutputPtrOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigCustomOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfigCustomOutput)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigCustomOutputPtrOutput) ToProjectCustomModuleCustomConfigCustomOutputPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPtrOutput) ToProjectCustomModuleCustomConfigCustomOutputPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfigCustomOutput] {
	return pulumix.Output[*ProjectCustomModuleCustomConfigCustomOutput]{
		OutputState: o.OutputState,
	}
}

func (o ProjectCustomModuleCustomConfigCustomOutputPtrOutput) Elem() ProjectCustomModuleCustomConfigCustomOutputOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigCustomOutput) ProjectCustomModuleCustomConfigCustomOutput {
		if v != nil {
			return *v
		}
		var ret ProjectCustomModuleCustomConfigCustomOutput
		return ret
	}).(ProjectCustomModuleCustomConfigCustomOutputOutput)
}

// A list of custom output properties to add to the finding.
// Structure is documented below.
func (o ProjectCustomModuleCustomConfigCustomOutputPtrOutput) Properties() ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigCustomOutput) []ProjectCustomModuleCustomConfigCustomOutputProperty {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput)
}

type ProjectCustomModuleCustomConfigCustomOutputProperty struct {
	// Name of the property for the custom output.
	Name *string `pulumi:"name"`
	// The CEL expression for the custom output. A resource property can be specified
	// to return the value of the property or a text string enclosed in quotation marks.
	// Structure is documented below.
	ValueExpression *ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression `pulumi:"valueExpression"`
}

// ProjectCustomModuleCustomConfigCustomOutputPropertyInput is an input type that accepts ProjectCustomModuleCustomConfigCustomOutputPropertyArgs and ProjectCustomModuleCustomConfigCustomOutputPropertyOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigCustomOutputPropertyInput` via:
//
//	ProjectCustomModuleCustomConfigCustomOutputPropertyArgs{...}
type ProjectCustomModuleCustomConfigCustomOutputPropertyInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigCustomOutputPropertyOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyOutput
	ToProjectCustomModuleCustomConfigCustomOutputPropertyOutputWithContext(context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyOutput
}

type ProjectCustomModuleCustomConfigCustomOutputPropertyArgs struct {
	// Name of the property for the custom output.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The CEL expression for the custom output. A resource property can be specified
	// to return the value of the property or a text string enclosed in quotation marks.
	// Structure is documented below.
	ValueExpression ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrInput `pulumi:"valueExpression"`
}

func (ProjectCustomModuleCustomConfigCustomOutputPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputProperty)(nil)).Elem()
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyArgs) ToProjectCustomModuleCustomConfigCustomOutputPropertyOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyOutput {
	return i.ToProjectCustomModuleCustomConfigCustomOutputPropertyOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyArgs) ToProjectCustomModuleCustomConfigCustomOutputPropertyOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigCustomOutputPropertyOutput)
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigCustomOutputProperty] {
	return pulumix.Output[ProjectCustomModuleCustomConfigCustomOutputProperty]{
		OutputState: i.ToProjectCustomModuleCustomConfigCustomOutputPropertyOutputWithContext(ctx).OutputState,
	}
}

// ProjectCustomModuleCustomConfigCustomOutputPropertyArrayInput is an input type that accepts ProjectCustomModuleCustomConfigCustomOutputPropertyArray and ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigCustomOutputPropertyArrayInput` via:
//
//	ProjectCustomModuleCustomConfigCustomOutputPropertyArray{ ProjectCustomModuleCustomConfigCustomOutputPropertyArgs{...} }
type ProjectCustomModuleCustomConfigCustomOutputPropertyArrayInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput
	ToProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutputWithContext(context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput
}

type ProjectCustomModuleCustomConfigCustomOutputPropertyArray []ProjectCustomModuleCustomConfigCustomOutputPropertyInput

func (ProjectCustomModuleCustomConfigCustomOutputPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectCustomModuleCustomConfigCustomOutputProperty)(nil)).Elem()
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyArray) ToProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput {
	return i.ToProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyArray) ToProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput)
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyArray) ToOutput(ctx context.Context) pulumix.Output[[]ProjectCustomModuleCustomConfigCustomOutputProperty] {
	return pulumix.Output[[]ProjectCustomModuleCustomConfigCustomOutputProperty]{
		OutputState: i.ToProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutputWithContext(ctx).OutputState,
	}
}

type ProjectCustomModuleCustomConfigCustomOutputPropertyOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigCustomOutputPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputProperty)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigCustomOutputProperty] {
	return pulumix.Output[ProjectCustomModuleCustomConfigCustomOutputProperty]{
		OutputState: o.OutputState,
	}
}

// Name of the property for the custom output.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigCustomOutputProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The CEL expression for the custom output. A resource property can be specified
// to return the value of the property or a text string enclosed in quotation marks.
// Structure is documented below.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyOutput) ValueExpression() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigCustomOutputProperty) *ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression {
		return v.ValueExpression
	}).(ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput)
}

type ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectCustomModuleCustomConfigCustomOutputProperty)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ProjectCustomModuleCustomConfigCustomOutputProperty] {
	return pulumix.Output[[]ProjectCustomModuleCustomConfigCustomOutputProperty]{
		OutputState: o.OutputState,
	}
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput) Index(i pulumi.IntInput) ProjectCustomModuleCustomConfigCustomOutputPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectCustomModuleCustomConfigCustomOutputProperty {
		return vs[0].([]ProjectCustomModuleCustomConfigCustomOutputProperty)[vs[1].(int)]
	}).(ProjectCustomModuleCustomConfigCustomOutputPropertyOutput)
}

type ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression struct {
	// Description of the expression. This is a longer text which describes the
	// expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// String indicating the location of the expression for error reporting, e.g. a
	// file name and a position in the file.
	Location *string `pulumi:"location"`
	// Title for the expression, i.e. a short string describing its purpose. This can
	// be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionInput is an input type that accepts ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs and ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionInput` via:
//
//	ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs{...}
type ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput
	ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutputWithContext(context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput
}

type ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs struct {
	// Description of the expression. This is a longer text which describes the
	// expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// String indicating the location of the expression for error reporting, e.g. a
	// file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Title for the expression, i.e. a short string describing its purpose. This can
	// be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression)(nil)).Elem()
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput {
	return i.ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput)
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression] {
	return pulumix.Output[ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression]{
		OutputState: i.ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput {
	return i.ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput).ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(ctx)
}

// ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrInput is an input type that accepts ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs, ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtr and ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrInput` via:
//
//	        ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs{...}
//
//	or:
//
//	        nil
type ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput
	ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput
}

type projectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrType ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs

func ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtr(v *ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrInput {
	return (*projectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrType)(v)
}

func (*projectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression)(nil)).Elem()
}

func (i *projectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrType) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput {
	return i.ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(context.Background())
}

func (i *projectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrType) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput)
}

func (i *projectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression] {
	return pulumix.Output[*ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression]{
		OutputState: i.ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput {
	return o.ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(context.Background())
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) *ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression {
		return &v
	}).(ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput)
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression] {
	return pulumix.Output[ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression]{
		OutputState: o.OutputState,
	}
}

// Description of the expression. This is a longer text which describes the
// expression, e.g. when hovered over it in a UI.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) string { return v.Expression }).(pulumi.StringOutput)
}

// String indicating the location of the expression for error reporting, e.g. a
// file name and a position in the file.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Title for the expression, i.e. a short string describing its purpose. This can
// be used e.g. in UIs which allow to enter the expression.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput) ToProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression] {
	return pulumix.Output[*ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression]{
		OutputState: o.OutputState,
	}
}

func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput) Elem() ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression {
		if v != nil {
			return *v
		}
		var ret ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression
		return ret
	}).(ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput)
}

// Description of the expression. This is a longer text which describes the
// expression, e.g. when hovered over it in a UI.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// String indicating the location of the expression for error reporting, e.g. a
// file name and a position in the file.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Title for the expression, i.e. a short string describing its purpose. This can
// be used e.g. in UIs which allow to enter the expression.
func (o ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpression) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type ProjectCustomModuleCustomConfigPredicate struct {
	// Description of the expression. This is a longer text which describes the
	// expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// String indicating the location of the expression for error reporting, e.g. a
	// file name and a position in the file.
	Location *string `pulumi:"location"`
	// Title for the expression, i.e. a short string describing its purpose. This can
	// be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ProjectCustomModuleCustomConfigPredicateInput is an input type that accepts ProjectCustomModuleCustomConfigPredicateArgs and ProjectCustomModuleCustomConfigPredicateOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigPredicateInput` via:
//
//	ProjectCustomModuleCustomConfigPredicateArgs{...}
type ProjectCustomModuleCustomConfigPredicateInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigPredicateOutput() ProjectCustomModuleCustomConfigPredicateOutput
	ToProjectCustomModuleCustomConfigPredicateOutputWithContext(context.Context) ProjectCustomModuleCustomConfigPredicateOutput
}

type ProjectCustomModuleCustomConfigPredicateArgs struct {
	// Description of the expression. This is a longer text which describes the
	// expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// String indicating the location of the expression for error reporting, e.g. a
	// file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Title for the expression, i.e. a short string describing its purpose. This can
	// be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ProjectCustomModuleCustomConfigPredicateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigPredicate)(nil)).Elem()
}

func (i ProjectCustomModuleCustomConfigPredicateArgs) ToProjectCustomModuleCustomConfigPredicateOutput() ProjectCustomModuleCustomConfigPredicateOutput {
	return i.ToProjectCustomModuleCustomConfigPredicateOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigPredicateArgs) ToProjectCustomModuleCustomConfigPredicateOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPredicateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigPredicateOutput)
}

func (i ProjectCustomModuleCustomConfigPredicateArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigPredicate] {
	return pulumix.Output[ProjectCustomModuleCustomConfigPredicate]{
		OutputState: i.ToProjectCustomModuleCustomConfigPredicateOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectCustomModuleCustomConfigPredicateArgs) ToProjectCustomModuleCustomConfigPredicatePtrOutput() ProjectCustomModuleCustomConfigPredicatePtrOutput {
	return i.ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigPredicateArgs) ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPredicatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigPredicateOutput).ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(ctx)
}

// ProjectCustomModuleCustomConfigPredicatePtrInput is an input type that accepts ProjectCustomModuleCustomConfigPredicateArgs, ProjectCustomModuleCustomConfigPredicatePtr and ProjectCustomModuleCustomConfigPredicatePtrOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigPredicatePtrInput` via:
//
//	        ProjectCustomModuleCustomConfigPredicateArgs{...}
//
//	or:
//
//	        nil
type ProjectCustomModuleCustomConfigPredicatePtrInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigPredicatePtrOutput() ProjectCustomModuleCustomConfigPredicatePtrOutput
	ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(context.Context) ProjectCustomModuleCustomConfigPredicatePtrOutput
}

type projectCustomModuleCustomConfigPredicatePtrType ProjectCustomModuleCustomConfigPredicateArgs

func ProjectCustomModuleCustomConfigPredicatePtr(v *ProjectCustomModuleCustomConfigPredicateArgs) ProjectCustomModuleCustomConfigPredicatePtrInput {
	return (*projectCustomModuleCustomConfigPredicatePtrType)(v)
}

func (*projectCustomModuleCustomConfigPredicatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfigPredicate)(nil)).Elem()
}

func (i *projectCustomModuleCustomConfigPredicatePtrType) ToProjectCustomModuleCustomConfigPredicatePtrOutput() ProjectCustomModuleCustomConfigPredicatePtrOutput {
	return i.ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(context.Background())
}

func (i *projectCustomModuleCustomConfigPredicatePtrType) ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPredicatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigPredicatePtrOutput)
}

func (i *projectCustomModuleCustomConfigPredicatePtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfigPredicate] {
	return pulumix.Output[*ProjectCustomModuleCustomConfigPredicate]{
		OutputState: i.ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectCustomModuleCustomConfigPredicateOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigPredicateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigPredicate)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigPredicateOutput) ToProjectCustomModuleCustomConfigPredicateOutput() ProjectCustomModuleCustomConfigPredicateOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigPredicateOutput) ToProjectCustomModuleCustomConfigPredicateOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPredicateOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigPredicateOutput) ToProjectCustomModuleCustomConfigPredicatePtrOutput() ProjectCustomModuleCustomConfigPredicatePtrOutput {
	return o.ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(context.Background())
}

func (o ProjectCustomModuleCustomConfigPredicateOutput) ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPredicatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectCustomModuleCustomConfigPredicate) *ProjectCustomModuleCustomConfigPredicate {
		return &v
	}).(ProjectCustomModuleCustomConfigPredicatePtrOutput)
}

func (o ProjectCustomModuleCustomConfigPredicateOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigPredicate] {
	return pulumix.Output[ProjectCustomModuleCustomConfigPredicate]{
		OutputState: o.OutputState,
	}
}

// Description of the expression. This is a longer text which describes the
// expression, e.g. when hovered over it in a UI.
func (o ProjectCustomModuleCustomConfigPredicateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigPredicate) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ProjectCustomModuleCustomConfigPredicateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigPredicate) string { return v.Expression }).(pulumi.StringOutput)
}

// String indicating the location of the expression for error reporting, e.g. a
// file name and a position in the file.
func (o ProjectCustomModuleCustomConfigPredicateOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigPredicate) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Title for the expression, i.e. a short string describing its purpose. This can
// be used e.g. in UIs which allow to enter the expression.
func (o ProjectCustomModuleCustomConfigPredicateOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigPredicate) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ProjectCustomModuleCustomConfigPredicatePtrOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigPredicatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfigPredicate)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigPredicatePtrOutput) ToProjectCustomModuleCustomConfigPredicatePtrOutput() ProjectCustomModuleCustomConfigPredicatePtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigPredicatePtrOutput) ToProjectCustomModuleCustomConfigPredicatePtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigPredicatePtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigPredicatePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfigPredicate] {
	return pulumix.Output[*ProjectCustomModuleCustomConfigPredicate]{
		OutputState: o.OutputState,
	}
}

func (o ProjectCustomModuleCustomConfigPredicatePtrOutput) Elem() ProjectCustomModuleCustomConfigPredicateOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigPredicate) ProjectCustomModuleCustomConfigPredicate {
		if v != nil {
			return *v
		}
		var ret ProjectCustomModuleCustomConfigPredicate
		return ret
	}).(ProjectCustomModuleCustomConfigPredicateOutput)
}

// Description of the expression. This is a longer text which describes the
// expression, e.g. when hovered over it in a UI.
func (o ProjectCustomModuleCustomConfigPredicatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigPredicate) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ProjectCustomModuleCustomConfigPredicatePtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigPredicate) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// String indicating the location of the expression for error reporting, e.g. a
// file name and a position in the file.
func (o ProjectCustomModuleCustomConfigPredicatePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigPredicate) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Title for the expression, i.e. a short string describing its purpose. This can
// be used e.g. in UIs which allow to enter the expression.
func (o ProjectCustomModuleCustomConfigPredicatePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigPredicate) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type ProjectCustomModuleCustomConfigResourceSelector struct {
	// The resource types to run the detector on.
	//
	// ***
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// ProjectCustomModuleCustomConfigResourceSelectorInput is an input type that accepts ProjectCustomModuleCustomConfigResourceSelectorArgs and ProjectCustomModuleCustomConfigResourceSelectorOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigResourceSelectorInput` via:
//
//	ProjectCustomModuleCustomConfigResourceSelectorArgs{...}
type ProjectCustomModuleCustomConfigResourceSelectorInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigResourceSelectorOutput() ProjectCustomModuleCustomConfigResourceSelectorOutput
	ToProjectCustomModuleCustomConfigResourceSelectorOutputWithContext(context.Context) ProjectCustomModuleCustomConfigResourceSelectorOutput
}

type ProjectCustomModuleCustomConfigResourceSelectorArgs struct {
	// The resource types to run the detector on.
	//
	// ***
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
}

func (ProjectCustomModuleCustomConfigResourceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigResourceSelector)(nil)).Elem()
}

func (i ProjectCustomModuleCustomConfigResourceSelectorArgs) ToProjectCustomModuleCustomConfigResourceSelectorOutput() ProjectCustomModuleCustomConfigResourceSelectorOutput {
	return i.ToProjectCustomModuleCustomConfigResourceSelectorOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigResourceSelectorArgs) ToProjectCustomModuleCustomConfigResourceSelectorOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigResourceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigResourceSelectorOutput)
}

func (i ProjectCustomModuleCustomConfigResourceSelectorArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigResourceSelector] {
	return pulumix.Output[ProjectCustomModuleCustomConfigResourceSelector]{
		OutputState: i.ToProjectCustomModuleCustomConfigResourceSelectorOutputWithContext(ctx).OutputState,
	}
}

func (i ProjectCustomModuleCustomConfigResourceSelectorArgs) ToProjectCustomModuleCustomConfigResourceSelectorPtrOutput() ProjectCustomModuleCustomConfigResourceSelectorPtrOutput {
	return i.ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(context.Background())
}

func (i ProjectCustomModuleCustomConfigResourceSelectorArgs) ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigResourceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigResourceSelectorOutput).ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(ctx)
}

// ProjectCustomModuleCustomConfigResourceSelectorPtrInput is an input type that accepts ProjectCustomModuleCustomConfigResourceSelectorArgs, ProjectCustomModuleCustomConfigResourceSelectorPtr and ProjectCustomModuleCustomConfigResourceSelectorPtrOutput values.
// You can construct a concrete instance of `ProjectCustomModuleCustomConfigResourceSelectorPtrInput` via:
//
//	        ProjectCustomModuleCustomConfigResourceSelectorArgs{...}
//
//	or:
//
//	        nil
type ProjectCustomModuleCustomConfigResourceSelectorPtrInput interface {
	pulumi.Input

	ToProjectCustomModuleCustomConfigResourceSelectorPtrOutput() ProjectCustomModuleCustomConfigResourceSelectorPtrOutput
	ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(context.Context) ProjectCustomModuleCustomConfigResourceSelectorPtrOutput
}

type projectCustomModuleCustomConfigResourceSelectorPtrType ProjectCustomModuleCustomConfigResourceSelectorArgs

func ProjectCustomModuleCustomConfigResourceSelectorPtr(v *ProjectCustomModuleCustomConfigResourceSelectorArgs) ProjectCustomModuleCustomConfigResourceSelectorPtrInput {
	return (*projectCustomModuleCustomConfigResourceSelectorPtrType)(v)
}

func (*projectCustomModuleCustomConfigResourceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfigResourceSelector)(nil)).Elem()
}

func (i *projectCustomModuleCustomConfigResourceSelectorPtrType) ToProjectCustomModuleCustomConfigResourceSelectorPtrOutput() ProjectCustomModuleCustomConfigResourceSelectorPtrOutput {
	return i.ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(context.Background())
}

func (i *projectCustomModuleCustomConfigResourceSelectorPtrType) ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigResourceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCustomModuleCustomConfigResourceSelectorPtrOutput)
}

func (i *projectCustomModuleCustomConfigResourceSelectorPtrType) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfigResourceSelector] {
	return pulumix.Output[*ProjectCustomModuleCustomConfigResourceSelector]{
		OutputState: i.ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(ctx).OutputState,
	}
}

type ProjectCustomModuleCustomConfigResourceSelectorOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigResourceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCustomModuleCustomConfigResourceSelector)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigResourceSelectorOutput) ToProjectCustomModuleCustomConfigResourceSelectorOutput() ProjectCustomModuleCustomConfigResourceSelectorOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigResourceSelectorOutput) ToProjectCustomModuleCustomConfigResourceSelectorOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigResourceSelectorOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigResourceSelectorOutput) ToProjectCustomModuleCustomConfigResourceSelectorPtrOutput() ProjectCustomModuleCustomConfigResourceSelectorPtrOutput {
	return o.ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(context.Background())
}

func (o ProjectCustomModuleCustomConfigResourceSelectorOutput) ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigResourceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectCustomModuleCustomConfigResourceSelector) *ProjectCustomModuleCustomConfigResourceSelector {
		return &v
	}).(ProjectCustomModuleCustomConfigResourceSelectorPtrOutput)
}

func (o ProjectCustomModuleCustomConfigResourceSelectorOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectCustomModuleCustomConfigResourceSelector] {
	return pulumix.Output[ProjectCustomModuleCustomConfigResourceSelector]{
		OutputState: o.OutputState,
	}
}

// The resource types to run the detector on.
//
// ***
func (o ProjectCustomModuleCustomConfigResourceSelectorOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectCustomModuleCustomConfigResourceSelector) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type ProjectCustomModuleCustomConfigResourceSelectorPtrOutput struct{ *pulumi.OutputState }

func (ProjectCustomModuleCustomConfigResourceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCustomModuleCustomConfigResourceSelector)(nil)).Elem()
}

func (o ProjectCustomModuleCustomConfigResourceSelectorPtrOutput) ToProjectCustomModuleCustomConfigResourceSelectorPtrOutput() ProjectCustomModuleCustomConfigResourceSelectorPtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigResourceSelectorPtrOutput) ToProjectCustomModuleCustomConfigResourceSelectorPtrOutputWithContext(ctx context.Context) ProjectCustomModuleCustomConfigResourceSelectorPtrOutput {
	return o
}

func (o ProjectCustomModuleCustomConfigResourceSelectorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProjectCustomModuleCustomConfigResourceSelector] {
	return pulumix.Output[*ProjectCustomModuleCustomConfigResourceSelector]{
		OutputState: o.OutputState,
	}
}

func (o ProjectCustomModuleCustomConfigResourceSelectorPtrOutput) Elem() ProjectCustomModuleCustomConfigResourceSelectorOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigResourceSelector) ProjectCustomModuleCustomConfigResourceSelector {
		if v != nil {
			return *v
		}
		var ret ProjectCustomModuleCustomConfigResourceSelector
		return ret
	}).(ProjectCustomModuleCustomConfigResourceSelectorOutput)
}

// The resource types to run the detector on.
//
// ***
func (o ProjectCustomModuleCustomConfigResourceSelectorPtrOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectCustomModuleCustomConfigResourceSelector) []string {
		if v == nil {
			return nil
		}
		return v.ResourceTypes
	}).(pulumi.StringArrayOutput)
}

type SourceIamBindingCondition struct {
	// The description of the source (max of 1024 characters).
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// SourceIamBindingConditionInput is an input type that accepts SourceIamBindingConditionArgs and SourceIamBindingConditionOutput values.
// You can construct a concrete instance of `SourceIamBindingConditionInput` via:
//
//	SourceIamBindingConditionArgs{...}
type SourceIamBindingConditionInput interface {
	pulumi.Input

	ToSourceIamBindingConditionOutput() SourceIamBindingConditionOutput
	ToSourceIamBindingConditionOutputWithContext(context.Context) SourceIamBindingConditionOutput
}

type SourceIamBindingConditionArgs struct {
	// The description of the source (max of 1024 characters).
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SourceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceIamBindingCondition)(nil)).Elem()
}

func (i SourceIamBindingConditionArgs) ToSourceIamBindingConditionOutput() SourceIamBindingConditionOutput {
	return i.ToSourceIamBindingConditionOutputWithContext(context.Background())
}

func (i SourceIamBindingConditionArgs) ToSourceIamBindingConditionOutputWithContext(ctx context.Context) SourceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceIamBindingConditionOutput)
}

func (i SourceIamBindingConditionArgs) ToOutput(ctx context.Context) pulumix.Output[SourceIamBindingCondition] {
	return pulumix.Output[SourceIamBindingCondition]{
		OutputState: i.ToSourceIamBindingConditionOutputWithContext(ctx).OutputState,
	}
}

func (i SourceIamBindingConditionArgs) ToSourceIamBindingConditionPtrOutput() SourceIamBindingConditionPtrOutput {
	return i.ToSourceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i SourceIamBindingConditionArgs) ToSourceIamBindingConditionPtrOutputWithContext(ctx context.Context) SourceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceIamBindingConditionOutput).ToSourceIamBindingConditionPtrOutputWithContext(ctx)
}

// SourceIamBindingConditionPtrInput is an input type that accepts SourceIamBindingConditionArgs, SourceIamBindingConditionPtr and SourceIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `SourceIamBindingConditionPtrInput` via:
//
//	        SourceIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type SourceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToSourceIamBindingConditionPtrOutput() SourceIamBindingConditionPtrOutput
	ToSourceIamBindingConditionPtrOutputWithContext(context.Context) SourceIamBindingConditionPtrOutput
}

type sourceIamBindingConditionPtrType SourceIamBindingConditionArgs

func SourceIamBindingConditionPtr(v *SourceIamBindingConditionArgs) SourceIamBindingConditionPtrInput {
	return (*sourceIamBindingConditionPtrType)(v)
}

func (*sourceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceIamBindingCondition)(nil)).Elem()
}

func (i *sourceIamBindingConditionPtrType) ToSourceIamBindingConditionPtrOutput() SourceIamBindingConditionPtrOutput {
	return i.ToSourceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *sourceIamBindingConditionPtrType) ToSourceIamBindingConditionPtrOutputWithContext(ctx context.Context) SourceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceIamBindingConditionPtrOutput)
}

func (i *sourceIamBindingConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*SourceIamBindingCondition] {
	return pulumix.Output[*SourceIamBindingCondition]{
		OutputState: i.ToSourceIamBindingConditionPtrOutputWithContext(ctx).OutputState,
	}
}

type SourceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (SourceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceIamBindingCondition)(nil)).Elem()
}

func (o SourceIamBindingConditionOutput) ToSourceIamBindingConditionOutput() SourceIamBindingConditionOutput {
	return o
}

func (o SourceIamBindingConditionOutput) ToSourceIamBindingConditionOutputWithContext(ctx context.Context) SourceIamBindingConditionOutput {
	return o
}

func (o SourceIamBindingConditionOutput) ToSourceIamBindingConditionPtrOutput() SourceIamBindingConditionPtrOutput {
	return o.ToSourceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o SourceIamBindingConditionOutput) ToSourceIamBindingConditionPtrOutputWithContext(ctx context.Context) SourceIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceIamBindingCondition) *SourceIamBindingCondition {
		return &v
	}).(SourceIamBindingConditionPtrOutput)
}

func (o SourceIamBindingConditionOutput) ToOutput(ctx context.Context) pulumix.Output[SourceIamBindingCondition] {
	return pulumix.Output[SourceIamBindingCondition]{
		OutputState: o.OutputState,
	}
}

// The description of the source (max of 1024 characters).
func (o SourceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SourceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SourceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SourceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SourceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SourceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (SourceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceIamBindingCondition)(nil)).Elem()
}

func (o SourceIamBindingConditionPtrOutput) ToSourceIamBindingConditionPtrOutput() SourceIamBindingConditionPtrOutput {
	return o
}

func (o SourceIamBindingConditionPtrOutput) ToSourceIamBindingConditionPtrOutputWithContext(ctx context.Context) SourceIamBindingConditionPtrOutput {
	return o
}

func (o SourceIamBindingConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SourceIamBindingCondition] {
	return pulumix.Output[*SourceIamBindingCondition]{
		OutputState: o.OutputState,
	}
}

func (o SourceIamBindingConditionPtrOutput) Elem() SourceIamBindingConditionOutput {
	return o.ApplyT(func(v *SourceIamBindingCondition) SourceIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret SourceIamBindingCondition
		return ret
	}).(SourceIamBindingConditionOutput)
}

// The description of the source (max of 1024 characters).
func (o SourceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o SourceIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o SourceIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type SourceIamMemberCondition struct {
	// The description of the source (max of 1024 characters).
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// SourceIamMemberConditionInput is an input type that accepts SourceIamMemberConditionArgs and SourceIamMemberConditionOutput values.
// You can construct a concrete instance of `SourceIamMemberConditionInput` via:
//
//	SourceIamMemberConditionArgs{...}
type SourceIamMemberConditionInput interface {
	pulumi.Input

	ToSourceIamMemberConditionOutput() SourceIamMemberConditionOutput
	ToSourceIamMemberConditionOutputWithContext(context.Context) SourceIamMemberConditionOutput
}

type SourceIamMemberConditionArgs struct {
	// The description of the source (max of 1024 characters).
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SourceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceIamMemberCondition)(nil)).Elem()
}

func (i SourceIamMemberConditionArgs) ToSourceIamMemberConditionOutput() SourceIamMemberConditionOutput {
	return i.ToSourceIamMemberConditionOutputWithContext(context.Background())
}

func (i SourceIamMemberConditionArgs) ToSourceIamMemberConditionOutputWithContext(ctx context.Context) SourceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceIamMemberConditionOutput)
}

func (i SourceIamMemberConditionArgs) ToOutput(ctx context.Context) pulumix.Output[SourceIamMemberCondition] {
	return pulumix.Output[SourceIamMemberCondition]{
		OutputState: i.ToSourceIamMemberConditionOutputWithContext(ctx).OutputState,
	}
}

func (i SourceIamMemberConditionArgs) ToSourceIamMemberConditionPtrOutput() SourceIamMemberConditionPtrOutput {
	return i.ToSourceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i SourceIamMemberConditionArgs) ToSourceIamMemberConditionPtrOutputWithContext(ctx context.Context) SourceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceIamMemberConditionOutput).ToSourceIamMemberConditionPtrOutputWithContext(ctx)
}

// SourceIamMemberConditionPtrInput is an input type that accepts SourceIamMemberConditionArgs, SourceIamMemberConditionPtr and SourceIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `SourceIamMemberConditionPtrInput` via:
//
//	        SourceIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type SourceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToSourceIamMemberConditionPtrOutput() SourceIamMemberConditionPtrOutput
	ToSourceIamMemberConditionPtrOutputWithContext(context.Context) SourceIamMemberConditionPtrOutput
}

type sourceIamMemberConditionPtrType SourceIamMemberConditionArgs

func SourceIamMemberConditionPtr(v *SourceIamMemberConditionArgs) SourceIamMemberConditionPtrInput {
	return (*sourceIamMemberConditionPtrType)(v)
}

func (*sourceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceIamMemberCondition)(nil)).Elem()
}

func (i *sourceIamMemberConditionPtrType) ToSourceIamMemberConditionPtrOutput() SourceIamMemberConditionPtrOutput {
	return i.ToSourceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *sourceIamMemberConditionPtrType) ToSourceIamMemberConditionPtrOutputWithContext(ctx context.Context) SourceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceIamMemberConditionPtrOutput)
}

func (i *sourceIamMemberConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*SourceIamMemberCondition] {
	return pulumix.Output[*SourceIamMemberCondition]{
		OutputState: i.ToSourceIamMemberConditionPtrOutputWithContext(ctx).OutputState,
	}
}

type SourceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (SourceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceIamMemberCondition)(nil)).Elem()
}

func (o SourceIamMemberConditionOutput) ToSourceIamMemberConditionOutput() SourceIamMemberConditionOutput {
	return o
}

func (o SourceIamMemberConditionOutput) ToSourceIamMemberConditionOutputWithContext(ctx context.Context) SourceIamMemberConditionOutput {
	return o
}

func (o SourceIamMemberConditionOutput) ToSourceIamMemberConditionPtrOutput() SourceIamMemberConditionPtrOutput {
	return o.ToSourceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o SourceIamMemberConditionOutput) ToSourceIamMemberConditionPtrOutputWithContext(ctx context.Context) SourceIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceIamMemberCondition) *SourceIamMemberCondition {
		return &v
	}).(SourceIamMemberConditionPtrOutput)
}

func (o SourceIamMemberConditionOutput) ToOutput(ctx context.Context) pulumix.Output[SourceIamMemberCondition] {
	return pulumix.Output[SourceIamMemberCondition]{
		OutputState: o.OutputState,
	}
}

// The description of the source (max of 1024 characters).
func (o SourceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SourceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SourceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SourceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SourceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SourceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (SourceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceIamMemberCondition)(nil)).Elem()
}

func (o SourceIamMemberConditionPtrOutput) ToSourceIamMemberConditionPtrOutput() SourceIamMemberConditionPtrOutput {
	return o
}

func (o SourceIamMemberConditionPtrOutput) ToSourceIamMemberConditionPtrOutputWithContext(ctx context.Context) SourceIamMemberConditionPtrOutput {
	return o
}

func (o SourceIamMemberConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SourceIamMemberCondition] {
	return pulumix.Output[*SourceIamMemberCondition]{
		OutputState: o.OutputState,
	}
}

func (o SourceIamMemberConditionPtrOutput) Elem() SourceIamMemberConditionOutput {
	return o.ApplyT(func(v *SourceIamMemberCondition) SourceIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret SourceIamMemberCondition
		return ret
	}).(SourceIamMemberConditionOutput)
}

// The description of the source (max of 1024 characters).
func (o SourceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o SourceIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o SourceIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamBindingConditionPtrInput)(nil)).Elem(), InstanceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIamMemberConditionPtrInput)(nil)).Elem(), InstanceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationConfigStreamingConfigInput)(nil)).Elem(), NotificationConfigStreamingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationConfigStreamingConfigPtrInput)(nil)).Elem(), NotificationConfigStreamingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigInput)(nil)).Elem(), ProjectCustomModuleCustomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigPtrInput)(nil)).Elem(), ProjectCustomModuleCustomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputInput)(nil)).Elem(), ProjectCustomModuleCustomConfigCustomOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputPtrInput)(nil)).Elem(), ProjectCustomModuleCustomConfigCustomOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputPropertyInput)(nil)).Elem(), ProjectCustomModuleCustomConfigCustomOutputPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputPropertyArrayInput)(nil)).Elem(), ProjectCustomModuleCustomConfigCustomOutputPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionInput)(nil)).Elem(), ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrInput)(nil)).Elem(), ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigPredicateInput)(nil)).Elem(), ProjectCustomModuleCustomConfigPredicateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigPredicatePtrInput)(nil)).Elem(), ProjectCustomModuleCustomConfigPredicateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigResourceSelectorInput)(nil)).Elem(), ProjectCustomModuleCustomConfigResourceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCustomModuleCustomConfigResourceSelectorPtrInput)(nil)).Elem(), ProjectCustomModuleCustomConfigResourceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceIamBindingConditionInput)(nil)).Elem(), SourceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceIamBindingConditionPtrInput)(nil)).Elem(), SourceIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceIamMemberConditionInput)(nil)).Elem(), SourceIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceIamMemberConditionPtrInput)(nil)).Elem(), SourceIamMemberConditionArgs{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(InstanceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(NotificationConfigStreamingConfigOutput{})
	pulumi.RegisterOutputType(NotificationConfigStreamingConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigCustomOutputOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigCustomOutputPtrOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigCustomOutputPropertyOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigCustomOutputPropertyArrayOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigCustomOutputPropertyValueExpressionPtrOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigPredicateOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigPredicatePtrOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigResourceSelectorOutput{})
	pulumi.RegisterOutputType(ProjectCustomModuleCustomConfigResourceSelectorPtrOutput{})
	pulumi.RegisterOutputType(SourceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(SourceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(SourceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(SourceIamMemberConditionPtrOutput{})
}
