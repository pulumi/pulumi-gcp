// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for source
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/securitycenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := securitycenter.LookupSourceIamPolicy(ctx, &securitycenter.LookupSourceIamPolicyArgs{
//				Source: google_scc_source.Custom_source.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSourceIamPolicy(ctx *pulumi.Context, args *LookupSourceIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupSourceIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSourceIamPolicyResult
	err := ctx.Invoke("gcp:securitycenter/getSourceIamPolicy:getSourceIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceIamPolicy.
type LookupSourceIamPolicyArgs struct {
	Organization string `pulumi:"organization"`
	// Used to find the parent resource to bind the IAM policy to
	Source string `pulumi:"source"`
}

// A collection of values returned by getSourceIamPolicy.
type LookupSourceIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	Organization string `pulumi:"organization"`
	// (Required only by `securitycenter.SourceIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Source     string `pulumi:"source"`
}

func LookupSourceIamPolicyOutput(ctx *pulumi.Context, args LookupSourceIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSourceIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceIamPolicyResult, error) {
			args := v.(LookupSourceIamPolicyArgs)
			r, err := LookupSourceIamPolicy(ctx, &args, opts...)
			var s LookupSourceIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceIamPolicyResultOutput)
}

// A collection of arguments for invoking getSourceIamPolicy.
type LookupSourceIamPolicyOutputArgs struct {
	Organization pulumi.StringInput `pulumi:"organization"`
	// Used to find the parent resource to bind the IAM policy to
	Source pulumi.StringInput `pulumi:"source"`
}

func (LookupSourceIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getSourceIamPolicy.
type LookupSourceIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSourceIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceIamPolicyResult)(nil)).Elem()
}

func (o LookupSourceIamPolicyResultOutput) ToLookupSourceIamPolicyResultOutput() LookupSourceIamPolicyResultOutput {
	return o
}

func (o LookupSourceIamPolicyResultOutput) ToLookupSourceIamPolicyResultOutputWithContext(ctx context.Context) LookupSourceIamPolicyResultOutput {
	return o
}

func (o LookupSourceIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSourceIamPolicyResult] {
	return pulumix.Output[LookupSourceIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupSourceIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceIamPolicyResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceIamPolicyResult) string { return v.Organization }).(pulumi.StringOutput)
}

// (Required only by `securitycenter.SourceIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupSourceIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupSourceIamPolicyResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceIamPolicyResult) string { return v.Source }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceIamPolicyResultOutput{})
}
