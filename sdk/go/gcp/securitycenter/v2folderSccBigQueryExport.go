// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Cloud Security Command Center (Cloud SCC) Big Query Export Config.
// It represents exporting Security Command Center data, including assets, findings, and security marks
// using gcloud scc bqexports
// > **Note:** In order to use Cloud SCC resources, your organization must be enrolled
// in [SCC Standard/Premium](https://cloud.google.com/security-command-center/docs/quickstart-security-command-center).
// Without doing so, you may run into errors during resource creation.
//
// To get more information about FolderSccBigQueryExport, see:
//
// * [API documentation](https://cloud.google.com/security-command-center/docs/reference/rest/v2/folders.locations.bigQueryExports)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/security-command-center/docs/how-to-analyze-findings-in-big-query)
//
// ## Example Usage
//
// ### Scc V2 Folder Big Query Export Config Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/bigquery"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/securitycenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			folder, err := organizations.NewFolder(ctx, "folder", &organizations.FolderArgs{
//				Parent:             pulumi.String("organizations/123456789"),
//				DisplayName:        pulumi.String("folder-name"),
//				DeletionProtection: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			_default, err := bigquery.NewDataset(ctx, "default", &bigquery.DatasetArgs{
//				DatasetId:                    pulumi.String("my_dataset_id"),
//				FriendlyName:                 pulumi.String("test"),
//				Description:                  pulumi.String("This is a test description"),
//				Location:                     pulumi.String("US"),
//				DefaultTableExpirationMs:     pulumi.Int(3600000),
//				DefaultPartitionExpirationMs: nil,
//				Labels: pulumi.StringMap{
//					"env": pulumi.String("default"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = securitycenter.NewV2FolderSccBigQueryExport(ctx, "custom_big_query_export_config", &securitycenter.V2FolderSccBigQueryExportArgs{
//				BigQueryExportId: pulumi.String("my-export"),
//				Folder:           folder.FolderId,
//				Dataset:          _default.ID(),
//				Location:         pulumi.String("global"),
//				Description:      pulumi.String("Cloud Security Command Center Findings Big Query Export Config"),
//				Filter:           pulumi.String("state=\"ACTIVE\" AND NOT mute=\"MUTED\""),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// FolderSccBigQueryExport can be imported using any of these accepted formats:
//
// * `folders/{{folder}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}`
//
// * `{{folder}}/{{location}}/{{big_query_export_id}}`
//
// When using the `pulumi import` command, FolderSccBigQueryExport can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:securitycenter/v2FolderSccBigQueryExport:V2FolderSccBigQueryExport default folders/{{folder}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}
// ```
//
// ```sh
// $ pulumi import gcp:securitycenter/v2FolderSccBigQueryExport:V2FolderSccBigQueryExport default {{folder}}/{{location}}/{{big_query_export_id}}
// ```
type V2FolderSccBigQueryExport struct {
	pulumi.CustomResourceState

	// This must be unique within the organization.  It must consist of only lowercase letters,
	// numbers, and hyphens, must start with a letter, must end with either a letter or a number,
	// and must be 63 characters or less.
	//
	// ***
	BigQueryExportId pulumi.StringOutput `pulumi:"bigQueryExportId"`
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrOutput `pulumi:"dataset"`
	// The description of the notification config (max of 1024 characters).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * > , <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter pulumi.StringPtrOutput `pulumi:"filter"`
	// The folder where Cloud Security Command Center Big Query Export
	// Config lives in.
	Folder pulumi.StringOutput `pulumi:"folder"`
	// The BigQuery export configuration is stored in this location. If not provided, Use global as default.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Email address of the user who last edited the BigQuery export.
	// This field is set by the server and will be ignored if provided on export creation or update.
	MostRecentEditor pulumi.StringOutput `pulumi:"mostRecentEditor"`
	// The resource name of this export, in the format
	// `folders/{{folder}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}`.
	// This field is provided in responses, and is ignored when provided in create requests.
	Name pulumi.StringOutput `pulumi:"name"`
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal pulumi.StringOutput `pulumi:"principal"`
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewV2FolderSccBigQueryExport registers a new resource with the given unique name, arguments, and options.
func NewV2FolderSccBigQueryExport(ctx *pulumi.Context,
	name string, args *V2FolderSccBigQueryExportArgs, opts ...pulumi.ResourceOption) (*V2FolderSccBigQueryExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BigQueryExportId == nil {
		return nil, errors.New("invalid value for required argument 'BigQueryExportId'")
	}
	if args.Folder == nil {
		return nil, errors.New("invalid value for required argument 'Folder'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource V2FolderSccBigQueryExport
	err := ctx.RegisterResource("gcp:securitycenter/v2FolderSccBigQueryExport:V2FolderSccBigQueryExport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetV2FolderSccBigQueryExport gets an existing V2FolderSccBigQueryExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetV2FolderSccBigQueryExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *V2FolderSccBigQueryExportState, opts ...pulumi.ResourceOption) (*V2FolderSccBigQueryExport, error) {
	var resource V2FolderSccBigQueryExport
	err := ctx.ReadResource("gcp:securitycenter/v2FolderSccBigQueryExport:V2FolderSccBigQueryExport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering V2FolderSccBigQueryExport resources.
type v2folderSccBigQueryExportState struct {
	// This must be unique within the organization.  It must consist of only lowercase letters,
	// numbers, and hyphens, must start with a letter, must end with either a letter or a number,
	// and must be 63 characters or less.
	//
	// ***
	BigQueryExportId *string `pulumi:"bigQueryExportId"`
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset *string `pulumi:"dataset"`
	// The description of the notification config (max of 1024 characters).
	Description *string `pulumi:"description"`
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * > , <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter *string `pulumi:"filter"`
	// The folder where Cloud Security Command Center Big Query Export
	// Config lives in.
	Folder *string `pulumi:"folder"`
	// The BigQuery export configuration is stored in this location. If not provided, Use global as default.
	Location *string `pulumi:"location"`
	// Email address of the user who last edited the BigQuery export.
	// This field is set by the server and will be ignored if provided on export creation or update.
	MostRecentEditor *string `pulumi:"mostRecentEditor"`
	// The resource name of this export, in the format
	// `folders/{{folder}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}`.
	// This field is provided in responses, and is ignored when provided in create requests.
	Name *string `pulumi:"name"`
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal *string `pulumi:"principal"`
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
}

type V2FolderSccBigQueryExportState struct {
	// This must be unique within the organization.  It must consist of only lowercase letters,
	// numbers, and hyphens, must start with a letter, must end with either a letter or a number,
	// and must be 63 characters or less.
	//
	// ***
	BigQueryExportId pulumi.StringPtrInput
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrInput
	// The description of the notification config (max of 1024 characters).
	Description pulumi.StringPtrInput
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * > , <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter pulumi.StringPtrInput
	// The folder where Cloud Security Command Center Big Query Export
	// Config lives in.
	Folder pulumi.StringPtrInput
	// The BigQuery export configuration is stored in this location. If not provided, Use global as default.
	Location pulumi.StringPtrInput
	// Email address of the user who last edited the BigQuery export.
	// This field is set by the server and will be ignored if provided on export creation or update.
	MostRecentEditor pulumi.StringPtrInput
	// The resource name of this export, in the format
	// `folders/{{folder}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}`.
	// This field is provided in responses, and is ignored when provided in create requests.
	Name pulumi.StringPtrInput
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal pulumi.StringPtrInput
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
}

func (V2FolderSccBigQueryExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*v2folderSccBigQueryExportState)(nil)).Elem()
}

type v2folderSccBigQueryExportArgs struct {
	// This must be unique within the organization.  It must consist of only lowercase letters,
	// numbers, and hyphens, must start with a letter, must end with either a letter or a number,
	// and must be 63 characters or less.
	//
	// ***
	BigQueryExportId string `pulumi:"bigQueryExportId"`
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset *string `pulumi:"dataset"`
	// The description of the notification config (max of 1024 characters).
	Description *string `pulumi:"description"`
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * > , <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter *string `pulumi:"filter"`
	// The folder where Cloud Security Command Center Big Query Export
	// Config lives in.
	Folder string `pulumi:"folder"`
	// The BigQuery export configuration is stored in this location. If not provided, Use global as default.
	Location *string `pulumi:"location"`
}

// The set of arguments for constructing a V2FolderSccBigQueryExport resource.
type V2FolderSccBigQueryExportArgs struct {
	// This must be unique within the organization.  It must consist of only lowercase letters,
	// numbers, and hyphens, must start with a letter, must end with either a letter or a number,
	// and must be 63 characters or less.
	//
	// ***
	BigQueryExportId pulumi.StringInput
	// The dataset to write findings' updates to.
	// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
	// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrInput
	// The description of the notification config (max of 1024 characters).
	Description pulumi.StringPtrInput
	// Expression that defines the filter to apply across create/update
	// events of findings. The
	// expression is a list of zero or more restrictions combined via
	// logical operators AND and OR. Parentheses are supported, and OR
	// has higher precedence than AND.
	// Restrictions have the form <field> <operator> <value> and may have
	// a - character in front of them to indicate negation. The fields
	// map to those defined in the corresponding resource.
	// The supported operators are:
	// * = for all value types.
	// * > , <, >=, <= for integer values.
	// * :, meaning substring matching, for strings.
	//   The supported value types are:
	// * string literals in quotes.
	// * integer literals without quotes.
	// * boolean literals true and false without quotes.
	//   See
	//   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
	//   for information on how to write a filter.
	Filter pulumi.StringPtrInput
	// The folder where Cloud Security Command Center Big Query Export
	// Config lives in.
	Folder pulumi.StringInput
	// The BigQuery export configuration is stored in this location. If not provided, Use global as default.
	Location pulumi.StringPtrInput
}

func (V2FolderSccBigQueryExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*v2folderSccBigQueryExportArgs)(nil)).Elem()
}

type V2FolderSccBigQueryExportInput interface {
	pulumi.Input

	ToV2FolderSccBigQueryExportOutput() V2FolderSccBigQueryExportOutput
	ToV2FolderSccBigQueryExportOutputWithContext(ctx context.Context) V2FolderSccBigQueryExportOutput
}

func (*V2FolderSccBigQueryExport) ElementType() reflect.Type {
	return reflect.TypeOf((**V2FolderSccBigQueryExport)(nil)).Elem()
}

func (i *V2FolderSccBigQueryExport) ToV2FolderSccBigQueryExportOutput() V2FolderSccBigQueryExportOutput {
	return i.ToV2FolderSccBigQueryExportOutputWithContext(context.Background())
}

func (i *V2FolderSccBigQueryExport) ToV2FolderSccBigQueryExportOutputWithContext(ctx context.Context) V2FolderSccBigQueryExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2FolderSccBigQueryExportOutput)
}

// V2FolderSccBigQueryExportArrayInput is an input type that accepts V2FolderSccBigQueryExportArray and V2FolderSccBigQueryExportArrayOutput values.
// You can construct a concrete instance of `V2FolderSccBigQueryExportArrayInput` via:
//
//	V2FolderSccBigQueryExportArray{ V2FolderSccBigQueryExportArgs{...} }
type V2FolderSccBigQueryExportArrayInput interface {
	pulumi.Input

	ToV2FolderSccBigQueryExportArrayOutput() V2FolderSccBigQueryExportArrayOutput
	ToV2FolderSccBigQueryExportArrayOutputWithContext(context.Context) V2FolderSccBigQueryExportArrayOutput
}

type V2FolderSccBigQueryExportArray []V2FolderSccBigQueryExportInput

func (V2FolderSccBigQueryExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2FolderSccBigQueryExport)(nil)).Elem()
}

func (i V2FolderSccBigQueryExportArray) ToV2FolderSccBigQueryExportArrayOutput() V2FolderSccBigQueryExportArrayOutput {
	return i.ToV2FolderSccBigQueryExportArrayOutputWithContext(context.Background())
}

func (i V2FolderSccBigQueryExportArray) ToV2FolderSccBigQueryExportArrayOutputWithContext(ctx context.Context) V2FolderSccBigQueryExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2FolderSccBigQueryExportArrayOutput)
}

// V2FolderSccBigQueryExportMapInput is an input type that accepts V2FolderSccBigQueryExportMap and V2FolderSccBigQueryExportMapOutput values.
// You can construct a concrete instance of `V2FolderSccBigQueryExportMapInput` via:
//
//	V2FolderSccBigQueryExportMap{ "key": V2FolderSccBigQueryExportArgs{...} }
type V2FolderSccBigQueryExportMapInput interface {
	pulumi.Input

	ToV2FolderSccBigQueryExportMapOutput() V2FolderSccBigQueryExportMapOutput
	ToV2FolderSccBigQueryExportMapOutputWithContext(context.Context) V2FolderSccBigQueryExportMapOutput
}

type V2FolderSccBigQueryExportMap map[string]V2FolderSccBigQueryExportInput

func (V2FolderSccBigQueryExportMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2FolderSccBigQueryExport)(nil)).Elem()
}

func (i V2FolderSccBigQueryExportMap) ToV2FolderSccBigQueryExportMapOutput() V2FolderSccBigQueryExportMapOutput {
	return i.ToV2FolderSccBigQueryExportMapOutputWithContext(context.Background())
}

func (i V2FolderSccBigQueryExportMap) ToV2FolderSccBigQueryExportMapOutputWithContext(ctx context.Context) V2FolderSccBigQueryExportMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2FolderSccBigQueryExportMapOutput)
}

type V2FolderSccBigQueryExportOutput struct{ *pulumi.OutputState }

func (V2FolderSccBigQueryExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2FolderSccBigQueryExport)(nil)).Elem()
}

func (o V2FolderSccBigQueryExportOutput) ToV2FolderSccBigQueryExportOutput() V2FolderSccBigQueryExportOutput {
	return o
}

func (o V2FolderSccBigQueryExportOutput) ToV2FolderSccBigQueryExportOutputWithContext(ctx context.Context) V2FolderSccBigQueryExportOutput {
	return o
}

// This must be unique within the organization.  It must consist of only lowercase letters,
// numbers, and hyphens, must start with a letter, must end with either a letter or a number,
// and must be 63 characters or less.
//
// ***
func (o V2FolderSccBigQueryExportOutput) BigQueryExportId() pulumi.StringOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringOutput { return v.BigQueryExportId }).(pulumi.StringOutput)
}

// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o V2FolderSccBigQueryExportOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The dataset to write findings' updates to.
// Its format is "projects/[projectId]/datasets/[bigqueryDatasetId]".
// BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
func (o V2FolderSccBigQueryExportOutput) Dataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringPtrOutput { return v.Dataset }).(pulumi.StringPtrOutput)
}

// The description of the notification config (max of 1024 characters).
func (o V2FolderSccBigQueryExportOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Expression that defines the filter to apply across create/update
// events of findings. The
// expression is a list of zero or more restrictions combined via
// logical operators AND and OR. Parentheses are supported, and OR
// has higher precedence than AND.
// Restrictions have the form <field> <operator> <value> and may have
// a - character in front of them to indicate negation. The fields
// map to those defined in the corresponding resource.
// The supported operators are:
//   - = for all value types.
//   - > , <, >=, <= for integer values.
//   - :, meaning substring matching, for strings.
//     The supported value types are:
//   - string literals in quotes.
//   - integer literals without quotes.
//   - boolean literals true and false without quotes.
//     See
//     [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
//     for information on how to write a filter.
func (o V2FolderSccBigQueryExportOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringPtrOutput { return v.Filter }).(pulumi.StringPtrOutput)
}

// The folder where Cloud Security Command Center Big Query Export
// Config lives in.
func (o V2FolderSccBigQueryExportOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringOutput { return v.Folder }).(pulumi.StringOutput)
}

// The BigQuery export configuration is stored in this location. If not provided, Use global as default.
func (o V2FolderSccBigQueryExportOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Email address of the user who last edited the BigQuery export.
// This field is set by the server and will be ignored if provided on export creation or update.
func (o V2FolderSccBigQueryExportOutput) MostRecentEditor() pulumi.StringOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringOutput { return v.MostRecentEditor }).(pulumi.StringOutput)
}

// The resource name of this export, in the format
// `folders/{{folder}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}`.
// This field is provided in responses, and is ignored when provided in create requests.
func (o V2FolderSccBigQueryExportOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The service account that needs permission to create table and upload data to the BigQuery dataset.
func (o V2FolderSccBigQueryExportOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringOutput { return v.Principal }).(pulumi.StringOutput)
}

// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o V2FolderSccBigQueryExportOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *V2FolderSccBigQueryExport) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type V2FolderSccBigQueryExportArrayOutput struct{ *pulumi.OutputState }

func (V2FolderSccBigQueryExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2FolderSccBigQueryExport)(nil)).Elem()
}

func (o V2FolderSccBigQueryExportArrayOutput) ToV2FolderSccBigQueryExportArrayOutput() V2FolderSccBigQueryExportArrayOutput {
	return o
}

func (o V2FolderSccBigQueryExportArrayOutput) ToV2FolderSccBigQueryExportArrayOutputWithContext(ctx context.Context) V2FolderSccBigQueryExportArrayOutput {
	return o
}

func (o V2FolderSccBigQueryExportArrayOutput) Index(i pulumi.IntInput) V2FolderSccBigQueryExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *V2FolderSccBigQueryExport {
		return vs[0].([]*V2FolderSccBigQueryExport)[vs[1].(int)]
	}).(V2FolderSccBigQueryExportOutput)
}

type V2FolderSccBigQueryExportMapOutput struct{ *pulumi.OutputState }

func (V2FolderSccBigQueryExportMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2FolderSccBigQueryExport)(nil)).Elem()
}

func (o V2FolderSccBigQueryExportMapOutput) ToV2FolderSccBigQueryExportMapOutput() V2FolderSccBigQueryExportMapOutput {
	return o
}

func (o V2FolderSccBigQueryExportMapOutput) ToV2FolderSccBigQueryExportMapOutputWithContext(ctx context.Context) V2FolderSccBigQueryExportMapOutput {
	return o
}

func (o V2FolderSccBigQueryExportMapOutput) MapIndex(k pulumi.StringInput) V2FolderSccBigQueryExportOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *V2FolderSccBigQueryExport {
		return vs[0].(map[string]*V2FolderSccBigQueryExport)[vs[1].(string)]
	}).(V2FolderSccBigQueryExportOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*V2FolderSccBigQueryExportInput)(nil)).Elem(), &V2FolderSccBigQueryExport{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2FolderSccBigQueryExportArrayInput)(nil)).Elem(), V2FolderSccBigQueryExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2FolderSccBigQueryExportMapInput)(nil)).Elem(), V2FolderSccBigQueryExportMap{})
	pulumi.RegisterOutputType(V2FolderSccBigQueryExportOutput{})
	pulumi.RegisterOutputType(V2FolderSccBigQueryExportArrayOutput{})
	pulumi.RegisterOutputType(V2FolderSccBigQueryExportMapOutput{})
}
