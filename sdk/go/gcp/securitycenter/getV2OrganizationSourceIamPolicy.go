// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for organizationsource
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/securitycenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := securitycenter.LookupV2OrganizationSourceIamPolicy(ctx, &securitycenter.LookupV2OrganizationSourceIamPolicyArgs{
//				Source: customSource.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupV2OrganizationSourceIamPolicy(ctx *pulumi.Context, args *LookupV2OrganizationSourceIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupV2OrganizationSourceIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupV2OrganizationSourceIamPolicyResult
	err := ctx.Invoke("gcp:securitycenter/getV2OrganizationSourceIamPolicy:getV2OrganizationSourceIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getV2OrganizationSourceIamPolicy.
type LookupV2OrganizationSourceIamPolicyArgs struct {
	Organization string `pulumi:"organization"`
	// Used to find the parent resource to bind the IAM policy to
	Source string `pulumi:"source"`
}

// A collection of values returned by getV2OrganizationSourceIamPolicy.
type LookupV2OrganizationSourceIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	Organization string `pulumi:"organization"`
	// (Required only by `securitycenter.V2OrganizationSourceIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Source     string `pulumi:"source"`
}

func LookupV2OrganizationSourceIamPolicyOutput(ctx *pulumi.Context, args LookupV2OrganizationSourceIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupV2OrganizationSourceIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupV2OrganizationSourceIamPolicyResultOutput, error) {
			args := v.(LookupV2OrganizationSourceIamPolicyArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupV2OrganizationSourceIamPolicyResult
			secret, err := ctx.InvokePackageRaw("gcp:securitycenter/getV2OrganizationSourceIamPolicy:getV2OrganizationSourceIamPolicy", args, &rv, "", opts...)
			if err != nil {
				return LookupV2OrganizationSourceIamPolicyResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupV2OrganizationSourceIamPolicyResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupV2OrganizationSourceIamPolicyResultOutput), nil
			}
			return output, nil
		}).(LookupV2OrganizationSourceIamPolicyResultOutput)
}

// A collection of arguments for invoking getV2OrganizationSourceIamPolicy.
type LookupV2OrganizationSourceIamPolicyOutputArgs struct {
	Organization pulumi.StringInput `pulumi:"organization"`
	// Used to find the parent resource to bind the IAM policy to
	Source pulumi.StringInput `pulumi:"source"`
}

func (LookupV2OrganizationSourceIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupV2OrganizationSourceIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getV2OrganizationSourceIamPolicy.
type LookupV2OrganizationSourceIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupV2OrganizationSourceIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupV2OrganizationSourceIamPolicyResult)(nil)).Elem()
}

func (o LookupV2OrganizationSourceIamPolicyResultOutput) ToLookupV2OrganizationSourceIamPolicyResultOutput() LookupV2OrganizationSourceIamPolicyResultOutput {
	return o
}

func (o LookupV2OrganizationSourceIamPolicyResultOutput) ToLookupV2OrganizationSourceIamPolicyResultOutputWithContext(ctx context.Context) LookupV2OrganizationSourceIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupV2OrganizationSourceIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupV2OrganizationSourceIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupV2OrganizationSourceIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupV2OrganizationSourceIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupV2OrganizationSourceIamPolicyResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupV2OrganizationSourceIamPolicyResult) string { return v.Organization }).(pulumi.StringOutput)
}

// (Required only by `securitycenter.V2OrganizationSourceIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupV2OrganizationSourceIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupV2OrganizationSourceIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupV2OrganizationSourceIamPolicyResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupV2OrganizationSourceIamPolicyResult) string { return v.Source }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupV2OrganizationSourceIamPolicyResultOutput{})
}
