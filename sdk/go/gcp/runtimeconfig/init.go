// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package runtimeconfig

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp:runtimeconfig/config:Config":
		r = &Config{}
	case "gcp:runtimeconfig/configIamBinding:ConfigIamBinding":
		r = &ConfigIamBinding{}
	case "gcp:runtimeconfig/configIamMember:ConfigIamMember":
		r = &ConfigIamMember{}
	case "gcp:runtimeconfig/configIamPolicy:ConfigIamPolicy":
		r = &ConfigIamPolicy{}
	case "gcp:runtimeconfig/variable:Variable":
		r = &Variable{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"gcp",
		"runtimeconfig/config",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"runtimeconfig/configIamBinding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"runtimeconfig/configIamMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"runtimeconfig/configIamPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"runtimeconfig/variable",
		&module{version},
	)
}
