// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package runtimeconfig

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/runtimeconfig"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := runtimeconfig.LookupConfig(ctx, &runtimeconfig.LookupConfigArgs{
//				Name: "my-service",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupConfig(ctx *pulumi.Context, args *LookupConfigArgs, opts ...pulumi.InvokeOption) (*LookupConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	invokeOpts, optsErr := pulumi.NewInvokeOptions(opts...)
	if optsErr != nil {
		return &LookupConfigResult{}, optsErr
	}
	if len(invokeOpts.DependsOn) > 0 {
		return &LookupConfigResult{}, errors.New("DependsOn is not supported for direct form invoke LookupConfig, use LookupConfigOutput instead")
	}
	if len(invokeOpts.DependsOnInputs) > 0 {
		return &LookupConfigResult{}, errors.New("DependsOnInputs is not supported for direct form invoke LookupConfig, use LookupConfigOutput instead")
	}
	var rv LookupConfigResult
	err := ctx.Invoke("gcp:runtimeconfig/getConfig:getConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfig.
type LookupConfigArgs struct {
	// The name of the Runtime Configurator configuration.
	//
	// ***
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getConfig.
type LookupConfigResult struct {
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Name    string  `pulumi:"name"`
	Project *string `pulumi:"project"`
}

func LookupConfigOutput(ctx *pulumi.Context, args LookupConfigOutputArgs, opts ...pulumi.InvokeOption) LookupConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConfigResultOutput, error) {
			args := v.(LookupConfigArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupConfigResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:runtimeconfig/getConfig:getConfig", args, &rv, "", opts...)
			if err != nil {
				return LookupConfigResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupConfigResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupConfigResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupConfigResultOutput), nil
			}
			return output, nil
		}).(LookupConfigResultOutput)
}

// A collection of arguments for invoking getConfig.
type LookupConfigOutputArgs struct {
	// The name of the Runtime Configurator configuration.
	//
	// ***
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigArgs)(nil)).Elem()
}

// A collection of values returned by getConfig.
type LookupConfigResultOutput struct{ *pulumi.OutputState }

func (LookupConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigResult)(nil)).Elem()
}

func (o LookupConfigResultOutput) ToLookupConfigResultOutput() LookupConfigResultOutput {
	return o
}

func (o LookupConfigResultOutput) ToLookupConfigResultOutputWithContext(ctx context.Context) LookupConfigResultOutput {
	return o
}

func (o LookupConfigResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupConfigResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigResultOutput{})
}
