// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupApiIamPolicy(ctx *pulumi.Context, args *LookupApiIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupApiIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	invokeOpts, optsErr := pulumi.NewInvokeOptions(opts...)
	if optsErr != nil {
		return &LookupApiIamPolicyResult{}, optsErr
	}
	if len(invokeOpts.DependsOn) > 0 {
		return &LookupApiIamPolicyResult{}, errors.New("DependsOn is not supported for direct form invoke LookupApiIamPolicy, use LookupApiIamPolicyOutput instead")
	}
	if len(invokeOpts.DependsOnInputs) > 0 {
		return &LookupApiIamPolicyResult{}, errors.New("DependsOnInputs is not supported for direct form invoke LookupApiIamPolicy, use LookupApiIamPolicyOutput instead")
	}
	var rv LookupApiIamPolicyResult
	err := ctx.Invoke("gcp:apigateway/getApiIamPolicy:getApiIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiIamPolicy.
type LookupApiIamPolicyArgs struct {
	Api string `pulumi:"api"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getApiIamPolicy.
type LookupApiIamPolicyResult struct {
	Api string `pulumi:"api"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `apigateway.ApiIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupApiIamPolicyOutput(ctx *pulumi.Context, args LookupApiIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupApiIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApiIamPolicyResultOutput, error) {
			args := v.(LookupApiIamPolicyArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupApiIamPolicyResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:apigateway/getApiIamPolicy:getApiIamPolicy", args, &rv, "", opts...)
			if err != nil {
				return LookupApiIamPolicyResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupApiIamPolicyResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupApiIamPolicyResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupApiIamPolicyResultOutput), nil
			}
			return output, nil
		}).(LookupApiIamPolicyResultOutput)
}

// A collection of arguments for invoking getApiIamPolicy.
type LookupApiIamPolicyOutputArgs struct {
	Api pulumi.StringInput `pulumi:"api"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupApiIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getApiIamPolicy.
type LookupApiIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupApiIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiIamPolicyResult)(nil)).Elem()
}

func (o LookupApiIamPolicyResultOutput) ToLookupApiIamPolicyResultOutput() LookupApiIamPolicyResultOutput {
	return o
}

func (o LookupApiIamPolicyResultOutput) ToLookupApiIamPolicyResultOutputWithContext(ctx context.Context) LookupApiIamPolicyResultOutput {
	return o
}

func (o LookupApiIamPolicyResultOutput) Api() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiIamPolicyResult) string { return v.Api }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupApiIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApiIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `apigateway.ApiIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupApiIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupApiIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiIamPolicyResultOutput{})
}
