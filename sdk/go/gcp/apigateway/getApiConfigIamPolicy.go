// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupApiConfigIamPolicy(ctx *pulumi.Context, args *LookupApiConfigIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupApiConfigIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApiConfigIamPolicyResult
	err := ctx.Invoke("gcp:apigateway/getApiConfigIamPolicy:getApiConfigIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiConfigIamPolicy.
type LookupApiConfigIamPolicyArgs struct {
	// The API to attach the config to.
	// Used to find the parent resource to bind the IAM policy to
	Api       string `pulumi:"api"`
	ApiConfig string `pulumi:"apiConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getApiConfigIamPolicy.
type LookupApiConfigIamPolicyResult struct {
	Api       string `pulumi:"api"`
	ApiConfig string `pulumi:"apiConfig"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `apigateway.ApiConfigIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupApiConfigIamPolicyOutput(ctx *pulumi.Context, args LookupApiConfigIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupApiConfigIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApiConfigIamPolicyResult, error) {
			args := v.(LookupApiConfigIamPolicyArgs)
			r, err := LookupApiConfigIamPolicy(ctx, &args, opts...)
			var s LookupApiConfigIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApiConfigIamPolicyResultOutput)
}

// A collection of arguments for invoking getApiConfigIamPolicy.
type LookupApiConfigIamPolicyOutputArgs struct {
	// The API to attach the config to.
	// Used to find the parent resource to bind the IAM policy to
	Api       pulumi.StringInput `pulumi:"api"`
	ApiConfig pulumi.StringInput `pulumi:"apiConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupApiConfigIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiConfigIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getApiConfigIamPolicy.
type LookupApiConfigIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupApiConfigIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiConfigIamPolicyResult)(nil)).Elem()
}

func (o LookupApiConfigIamPolicyResultOutput) ToLookupApiConfigIamPolicyResultOutput() LookupApiConfigIamPolicyResultOutput {
	return o
}

func (o LookupApiConfigIamPolicyResultOutput) ToLookupApiConfigIamPolicyResultOutputWithContext(ctx context.Context) LookupApiConfigIamPolicyResultOutput {
	return o
}

func (o LookupApiConfigIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupApiConfigIamPolicyResult] {
	return pulumix.Output[LookupApiConfigIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupApiConfigIamPolicyResultOutput) Api() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConfigIamPolicyResult) string { return v.Api }).(pulumi.StringOutput)
}

func (o LookupApiConfigIamPolicyResultOutput) ApiConfig() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConfigIamPolicyResult) string { return v.ApiConfig }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupApiConfigIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConfigIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApiConfigIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConfigIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `apigateway.ApiConfigIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupApiConfigIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConfigIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupApiConfigIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConfigIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiConfigIamPolicyResultOutput{})
}
