// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupGatewayIamPolicy(ctx *pulumi.Context, args *LookupGatewayIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupGatewayIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGatewayIamPolicyResult
	err := ctx.Invoke("gcp:apigateway/getGatewayIamPolicy:getGatewayIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGatewayIamPolicy.
type LookupGatewayIamPolicyArgs struct {
	Gateway string `pulumi:"gateway"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The region of the gateway for the API.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getGatewayIamPolicy.
type LookupGatewayIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag    string `pulumi:"etag"`
	Gateway string `pulumi:"gateway"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `apigateway.GatewayIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
}

func LookupGatewayIamPolicyOutput(ctx *pulumi.Context, args LookupGatewayIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayIamPolicyResult, error) {
			args := v.(LookupGatewayIamPolicyArgs)
			r, err := LookupGatewayIamPolicy(ctx, &args, opts...)
			var s LookupGatewayIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGatewayIamPolicyResultOutput)
}

// A collection of arguments for invoking getGatewayIamPolicy.
type LookupGatewayIamPolicyOutputArgs struct {
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region of the gateway for the API.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupGatewayIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getGatewayIamPolicy.
type LookupGatewayIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayIamPolicyResult)(nil)).Elem()
}

func (o LookupGatewayIamPolicyResultOutput) ToLookupGatewayIamPolicyResultOutput() LookupGatewayIamPolicyResultOutput {
	return o
}

func (o LookupGatewayIamPolicyResultOutput) ToLookupGatewayIamPolicyResultOutputWithContext(ctx context.Context) LookupGatewayIamPolicyResultOutput {
	return o
}

func (o LookupGatewayIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupGatewayIamPolicyResult] {
	return pulumix.Output[LookupGatewayIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupGatewayIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupGatewayIamPolicyResultOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayIamPolicyResult) string { return v.Gateway }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGatewayIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `apigateway.GatewayIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupGatewayIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupGatewayIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupGatewayIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayIamPolicyResultOutput{})
}
