// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package composer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EnvironmentConfig struct {
	AirflowUri   *string `pulumi:"airflowUri"`
	DagGcsPrefix *string `pulumi:"dagGcsPrefix"`
	// The configuration settings for Cloud SQL instance used internally by Apache Airflow software.
	DatabaseConfig *EnvironmentConfigDatabaseConfig `pulumi:"databaseConfig"`
	// The encryption options for the Cloud Composer environment and its dependencies.
	EncryptionConfig  *EnvironmentConfigEncryptionConfig  `pulumi:"encryptionConfig"`
	GkeCluster        *string                             `pulumi:"gkeCluster"`
	MaintenanceWindow *EnvironmentConfigMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
	NodeConfig *EnvironmentConfigNodeConfig `pulumi:"nodeConfig"`
	// The number of nodes in the Kubernetes Engine cluster that
	// will be used to run this environment.
	NodeCount *int `pulumi:"nodeCount"`
	// The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
	PrivateEnvironmentConfig *EnvironmentConfigPrivateEnvironmentConfig `pulumi:"privateEnvironmentConfig"`
	// The configuration settings for software inside the environment.  Structure is documented below.
	SoftwareConfig *EnvironmentConfigSoftwareConfig `pulumi:"softwareConfig"`
	// The configuration settings for the Airflow web server App Engine instance.
	WebServerConfig *EnvironmentConfigWebServerConfig `pulumi:"webServerConfig"`
	// The network-level access control policy for the Airflow web server. If unspecified, no network-level access restrictions will be applied.
	WebServerNetworkAccessControl *EnvironmentConfigWebServerNetworkAccessControl `pulumi:"webServerNetworkAccessControl"`
}

// EnvironmentConfigInput is an input type that accepts EnvironmentConfigArgs and EnvironmentConfigOutput values.
// You can construct a concrete instance of `EnvironmentConfigInput` via:
//
//          EnvironmentConfigArgs{...}
type EnvironmentConfigInput interface {
	pulumi.Input

	ToEnvironmentConfigOutput() EnvironmentConfigOutput
	ToEnvironmentConfigOutputWithContext(context.Context) EnvironmentConfigOutput
}

type EnvironmentConfigArgs struct {
	AirflowUri   pulumi.StringPtrInput `pulumi:"airflowUri"`
	DagGcsPrefix pulumi.StringPtrInput `pulumi:"dagGcsPrefix"`
	// The configuration settings for Cloud SQL instance used internally by Apache Airflow software.
	DatabaseConfig EnvironmentConfigDatabaseConfigPtrInput `pulumi:"databaseConfig"`
	// The encryption options for the Cloud Composer environment and its dependencies.
	EncryptionConfig  EnvironmentConfigEncryptionConfigPtrInput  `pulumi:"encryptionConfig"`
	GkeCluster        pulumi.StringPtrInput                      `pulumi:"gkeCluster"`
	MaintenanceWindow EnvironmentConfigMaintenanceWindowPtrInput `pulumi:"maintenanceWindow"`
	// The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
	NodeConfig EnvironmentConfigNodeConfigPtrInput `pulumi:"nodeConfig"`
	// The number of nodes in the Kubernetes Engine cluster that
	// will be used to run this environment.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
	PrivateEnvironmentConfig EnvironmentConfigPrivateEnvironmentConfigPtrInput `pulumi:"privateEnvironmentConfig"`
	// The configuration settings for software inside the environment.  Structure is documented below.
	SoftwareConfig EnvironmentConfigSoftwareConfigPtrInput `pulumi:"softwareConfig"`
	// The configuration settings for the Airflow web server App Engine instance.
	WebServerConfig EnvironmentConfigWebServerConfigPtrInput `pulumi:"webServerConfig"`
	// The network-level access control policy for the Airflow web server. If unspecified, no network-level access restrictions will be applied.
	WebServerNetworkAccessControl EnvironmentConfigWebServerNetworkAccessControlPtrInput `pulumi:"webServerNetworkAccessControl"`
}

func (EnvironmentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfig)(nil)).Elem()
}

func (i EnvironmentConfigArgs) ToEnvironmentConfigOutput() EnvironmentConfigOutput {
	return i.ToEnvironmentConfigOutputWithContext(context.Background())
}

func (i EnvironmentConfigArgs) ToEnvironmentConfigOutputWithContext(ctx context.Context) EnvironmentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigOutput)
}

func (i EnvironmentConfigArgs) ToEnvironmentConfigPtrOutput() EnvironmentConfigPtrOutput {
	return i.ToEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigArgs) ToEnvironmentConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigOutput).ToEnvironmentConfigPtrOutputWithContext(ctx)
}

// EnvironmentConfigPtrInput is an input type that accepts EnvironmentConfigArgs, EnvironmentConfigPtr and EnvironmentConfigPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigPtrInput` via:
//
//          EnvironmentConfigArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigPtrOutput() EnvironmentConfigPtrOutput
	ToEnvironmentConfigPtrOutputWithContext(context.Context) EnvironmentConfigPtrOutput
}

type environmentConfigPtrType EnvironmentConfigArgs

func EnvironmentConfigPtr(v *EnvironmentConfigArgs) EnvironmentConfigPtrInput {
	return (*environmentConfigPtrType)(v)
}

func (*environmentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfig)(nil)).Elem()
}

func (i *environmentConfigPtrType) ToEnvironmentConfigPtrOutput() EnvironmentConfigPtrOutput {
	return i.ToEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i *environmentConfigPtrType) ToEnvironmentConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigPtrOutput)
}

type EnvironmentConfigOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfig)(nil)).Elem()
}

func (o EnvironmentConfigOutput) ToEnvironmentConfigOutput() EnvironmentConfigOutput {
	return o
}

func (o EnvironmentConfigOutput) ToEnvironmentConfigOutputWithContext(ctx context.Context) EnvironmentConfigOutput {
	return o
}

func (o EnvironmentConfigOutput) ToEnvironmentConfigPtrOutput() EnvironmentConfigPtrOutput {
	return o.ToEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigOutput) ToEnvironmentConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfig) *EnvironmentConfig {
		return &v
	}).(EnvironmentConfigPtrOutput)
}

func (o EnvironmentConfigOutput) AirflowUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *string { return v.AirflowUri }).(pulumi.StringPtrOutput)
}

func (o EnvironmentConfigOutput) DagGcsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *string { return v.DagGcsPrefix }).(pulumi.StringPtrOutput)
}

// The configuration settings for Cloud SQL instance used internally by Apache Airflow software.
func (o EnvironmentConfigOutput) DatabaseConfig() EnvironmentConfigDatabaseConfigPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *EnvironmentConfigDatabaseConfig { return v.DatabaseConfig }).(EnvironmentConfigDatabaseConfigPtrOutput)
}

// The encryption options for the Cloud Composer environment and its dependencies.
func (o EnvironmentConfigOutput) EncryptionConfig() EnvironmentConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *EnvironmentConfigEncryptionConfig { return v.EncryptionConfig }).(EnvironmentConfigEncryptionConfigPtrOutput)
}

func (o EnvironmentConfigOutput) GkeCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *string { return v.GkeCluster }).(pulumi.StringPtrOutput)
}

func (o EnvironmentConfigOutput) MaintenanceWindow() EnvironmentConfigMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *EnvironmentConfigMaintenanceWindow { return v.MaintenanceWindow }).(EnvironmentConfigMaintenanceWindowPtrOutput)
}

// The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
func (o EnvironmentConfigOutput) NodeConfig() EnvironmentConfigNodeConfigPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *EnvironmentConfigNodeConfig { return v.NodeConfig }).(EnvironmentConfigNodeConfigPtrOutput)
}

// The number of nodes in the Kubernetes Engine cluster that
// will be used to run this environment.
func (o EnvironmentConfigOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
func (o EnvironmentConfigOutput) PrivateEnvironmentConfig() EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *EnvironmentConfigPrivateEnvironmentConfig {
		return v.PrivateEnvironmentConfig
	}).(EnvironmentConfigPrivateEnvironmentConfigPtrOutput)
}

// The configuration settings for software inside the environment.  Structure is documented below.
func (o EnvironmentConfigOutput) SoftwareConfig() EnvironmentConfigSoftwareConfigPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *EnvironmentConfigSoftwareConfig { return v.SoftwareConfig }).(EnvironmentConfigSoftwareConfigPtrOutput)
}

// The configuration settings for the Airflow web server App Engine instance.
func (o EnvironmentConfigOutput) WebServerConfig() EnvironmentConfigWebServerConfigPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *EnvironmentConfigWebServerConfig { return v.WebServerConfig }).(EnvironmentConfigWebServerConfigPtrOutput)
}

// The network-level access control policy for the Airflow web server. If unspecified, no network-level access restrictions will be applied.
func (o EnvironmentConfigOutput) WebServerNetworkAccessControl() EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return o.ApplyT(func(v EnvironmentConfig) *EnvironmentConfigWebServerNetworkAccessControl {
		return v.WebServerNetworkAccessControl
	}).(EnvironmentConfigWebServerNetworkAccessControlPtrOutput)
}

type EnvironmentConfigPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfig)(nil)).Elem()
}

func (o EnvironmentConfigPtrOutput) ToEnvironmentConfigPtrOutput() EnvironmentConfigPtrOutput {
	return o
}

func (o EnvironmentConfigPtrOutput) ToEnvironmentConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigPtrOutput {
	return o
}

func (o EnvironmentConfigPtrOutput) Elem() EnvironmentConfigOutput {
	return o.ApplyT(func(v *EnvironmentConfig) EnvironmentConfig {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfig
		return ret
	}).(EnvironmentConfigOutput)
}

func (o EnvironmentConfigPtrOutput) AirflowUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *string {
		if v == nil {
			return nil
		}
		return v.AirflowUri
	}).(pulumi.StringPtrOutput)
}

func (o EnvironmentConfigPtrOutput) DagGcsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *string {
		if v == nil {
			return nil
		}
		return v.DagGcsPrefix
	}).(pulumi.StringPtrOutput)
}

// The configuration settings for Cloud SQL instance used internally by Apache Airflow software.
func (o EnvironmentConfigPtrOutput) DatabaseConfig() EnvironmentConfigDatabaseConfigPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *EnvironmentConfigDatabaseConfig {
		if v == nil {
			return nil
		}
		return v.DatabaseConfig
	}).(EnvironmentConfigDatabaseConfigPtrOutput)
}

// The encryption options for the Cloud Composer environment and its dependencies.
func (o EnvironmentConfigPtrOutput) EncryptionConfig() EnvironmentConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *EnvironmentConfigEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.EncryptionConfig
	}).(EnvironmentConfigEncryptionConfigPtrOutput)
}

func (o EnvironmentConfigPtrOutput) GkeCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *string {
		if v == nil {
			return nil
		}
		return v.GkeCluster
	}).(pulumi.StringPtrOutput)
}

func (o EnvironmentConfigPtrOutput) MaintenanceWindow() EnvironmentConfigMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *EnvironmentConfigMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindow
	}).(EnvironmentConfigMaintenanceWindowPtrOutput)
}

// The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
func (o EnvironmentConfigPtrOutput) NodeConfig() EnvironmentConfigNodeConfigPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *EnvironmentConfigNodeConfig {
		if v == nil {
			return nil
		}
		return v.NodeConfig
	}).(EnvironmentConfigNodeConfigPtrOutput)
}

// The number of nodes in the Kubernetes Engine cluster that
// will be used to run this environment.
func (o EnvironmentConfigPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
func (o EnvironmentConfigPtrOutput) PrivateEnvironmentConfig() EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *EnvironmentConfigPrivateEnvironmentConfig {
		if v == nil {
			return nil
		}
		return v.PrivateEnvironmentConfig
	}).(EnvironmentConfigPrivateEnvironmentConfigPtrOutput)
}

// The configuration settings for software inside the environment.  Structure is documented below.
func (o EnvironmentConfigPtrOutput) SoftwareConfig() EnvironmentConfigSoftwareConfigPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *EnvironmentConfigSoftwareConfig {
		if v == nil {
			return nil
		}
		return v.SoftwareConfig
	}).(EnvironmentConfigSoftwareConfigPtrOutput)
}

// The configuration settings for the Airflow web server App Engine instance.
func (o EnvironmentConfigPtrOutput) WebServerConfig() EnvironmentConfigWebServerConfigPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *EnvironmentConfigWebServerConfig {
		if v == nil {
			return nil
		}
		return v.WebServerConfig
	}).(EnvironmentConfigWebServerConfigPtrOutput)
}

// The network-level access control policy for the Airflow web server. If unspecified, no network-level access restrictions will be applied.
func (o EnvironmentConfigPtrOutput) WebServerNetworkAccessControl() EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfig) *EnvironmentConfigWebServerNetworkAccessControl {
		if v == nil {
			return nil
		}
		return v.WebServerNetworkAccessControl
	}).(EnvironmentConfigWebServerNetworkAccessControlPtrOutput)
}

type EnvironmentConfigDatabaseConfig struct {
	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType string `pulumi:"machineType"`
}

// EnvironmentConfigDatabaseConfigInput is an input type that accepts EnvironmentConfigDatabaseConfigArgs and EnvironmentConfigDatabaseConfigOutput values.
// You can construct a concrete instance of `EnvironmentConfigDatabaseConfigInput` via:
//
//          EnvironmentConfigDatabaseConfigArgs{...}
type EnvironmentConfigDatabaseConfigInput interface {
	pulumi.Input

	ToEnvironmentConfigDatabaseConfigOutput() EnvironmentConfigDatabaseConfigOutput
	ToEnvironmentConfigDatabaseConfigOutputWithContext(context.Context) EnvironmentConfigDatabaseConfigOutput
}

type EnvironmentConfigDatabaseConfigArgs struct {
	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType pulumi.StringInput `pulumi:"machineType"`
}

func (EnvironmentConfigDatabaseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigDatabaseConfig)(nil)).Elem()
}

func (i EnvironmentConfigDatabaseConfigArgs) ToEnvironmentConfigDatabaseConfigOutput() EnvironmentConfigDatabaseConfigOutput {
	return i.ToEnvironmentConfigDatabaseConfigOutputWithContext(context.Background())
}

func (i EnvironmentConfigDatabaseConfigArgs) ToEnvironmentConfigDatabaseConfigOutputWithContext(ctx context.Context) EnvironmentConfigDatabaseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigDatabaseConfigOutput)
}

func (i EnvironmentConfigDatabaseConfigArgs) ToEnvironmentConfigDatabaseConfigPtrOutput() EnvironmentConfigDatabaseConfigPtrOutput {
	return i.ToEnvironmentConfigDatabaseConfigPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigDatabaseConfigArgs) ToEnvironmentConfigDatabaseConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigDatabaseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigDatabaseConfigOutput).ToEnvironmentConfigDatabaseConfigPtrOutputWithContext(ctx)
}

// EnvironmentConfigDatabaseConfigPtrInput is an input type that accepts EnvironmentConfigDatabaseConfigArgs, EnvironmentConfigDatabaseConfigPtr and EnvironmentConfigDatabaseConfigPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigDatabaseConfigPtrInput` via:
//
//          EnvironmentConfigDatabaseConfigArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigDatabaseConfigPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigDatabaseConfigPtrOutput() EnvironmentConfigDatabaseConfigPtrOutput
	ToEnvironmentConfigDatabaseConfigPtrOutputWithContext(context.Context) EnvironmentConfigDatabaseConfigPtrOutput
}

type environmentConfigDatabaseConfigPtrType EnvironmentConfigDatabaseConfigArgs

func EnvironmentConfigDatabaseConfigPtr(v *EnvironmentConfigDatabaseConfigArgs) EnvironmentConfigDatabaseConfigPtrInput {
	return (*environmentConfigDatabaseConfigPtrType)(v)
}

func (*environmentConfigDatabaseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigDatabaseConfig)(nil)).Elem()
}

func (i *environmentConfigDatabaseConfigPtrType) ToEnvironmentConfigDatabaseConfigPtrOutput() EnvironmentConfigDatabaseConfigPtrOutput {
	return i.ToEnvironmentConfigDatabaseConfigPtrOutputWithContext(context.Background())
}

func (i *environmentConfigDatabaseConfigPtrType) ToEnvironmentConfigDatabaseConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigDatabaseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigDatabaseConfigPtrOutput)
}

type EnvironmentConfigDatabaseConfigOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigDatabaseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigDatabaseConfig)(nil)).Elem()
}

func (o EnvironmentConfigDatabaseConfigOutput) ToEnvironmentConfigDatabaseConfigOutput() EnvironmentConfigDatabaseConfigOutput {
	return o
}

func (o EnvironmentConfigDatabaseConfigOutput) ToEnvironmentConfigDatabaseConfigOutputWithContext(ctx context.Context) EnvironmentConfigDatabaseConfigOutput {
	return o
}

func (o EnvironmentConfigDatabaseConfigOutput) ToEnvironmentConfigDatabaseConfigPtrOutput() EnvironmentConfigDatabaseConfigPtrOutput {
	return o.ToEnvironmentConfigDatabaseConfigPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigDatabaseConfigOutput) ToEnvironmentConfigDatabaseConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigDatabaseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfigDatabaseConfig) *EnvironmentConfigDatabaseConfig {
		return &v
	}).(EnvironmentConfigDatabaseConfigPtrOutput)
}

// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
// composer-n1-webserver-4 or composer-n1-webserver-8.
// Value custom is returned only in response, if Airflow web server parameters were
// manually changed to a non-standard values.
func (o EnvironmentConfigDatabaseConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentConfigDatabaseConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

type EnvironmentConfigDatabaseConfigPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigDatabaseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigDatabaseConfig)(nil)).Elem()
}

func (o EnvironmentConfigDatabaseConfigPtrOutput) ToEnvironmentConfigDatabaseConfigPtrOutput() EnvironmentConfigDatabaseConfigPtrOutput {
	return o
}

func (o EnvironmentConfigDatabaseConfigPtrOutput) ToEnvironmentConfigDatabaseConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigDatabaseConfigPtrOutput {
	return o
}

func (o EnvironmentConfigDatabaseConfigPtrOutput) Elem() EnvironmentConfigDatabaseConfigOutput {
	return o.ApplyT(func(v *EnvironmentConfigDatabaseConfig) EnvironmentConfigDatabaseConfig {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfigDatabaseConfig
		return ret
	}).(EnvironmentConfigDatabaseConfigOutput)
}

// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
// composer-n1-webserver-4 or composer-n1-webserver-8.
// Value custom is returned only in response, if Airflow web server parameters were
// manually changed to a non-standard values.
func (o EnvironmentConfigDatabaseConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigDatabaseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.MachineType
	}).(pulumi.StringPtrOutput)
}

type EnvironmentConfigEncryptionConfig struct {
	// Customer-managed Encryption Key available through Google's Key Management Service. It must
	// be the fully qualified resource name,
	// i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
	KmsKeyName string `pulumi:"kmsKeyName"`
}

// EnvironmentConfigEncryptionConfigInput is an input type that accepts EnvironmentConfigEncryptionConfigArgs and EnvironmentConfigEncryptionConfigOutput values.
// You can construct a concrete instance of `EnvironmentConfigEncryptionConfigInput` via:
//
//          EnvironmentConfigEncryptionConfigArgs{...}
type EnvironmentConfigEncryptionConfigInput interface {
	pulumi.Input

	ToEnvironmentConfigEncryptionConfigOutput() EnvironmentConfigEncryptionConfigOutput
	ToEnvironmentConfigEncryptionConfigOutputWithContext(context.Context) EnvironmentConfigEncryptionConfigOutput
}

type EnvironmentConfigEncryptionConfigArgs struct {
	// Customer-managed Encryption Key available through Google's Key Management Service. It must
	// be the fully qualified resource name,
	// i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
	KmsKeyName pulumi.StringInput `pulumi:"kmsKeyName"`
}

func (EnvironmentConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigEncryptionConfig)(nil)).Elem()
}

func (i EnvironmentConfigEncryptionConfigArgs) ToEnvironmentConfigEncryptionConfigOutput() EnvironmentConfigEncryptionConfigOutput {
	return i.ToEnvironmentConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i EnvironmentConfigEncryptionConfigArgs) ToEnvironmentConfigEncryptionConfigOutputWithContext(ctx context.Context) EnvironmentConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigEncryptionConfigOutput)
}

func (i EnvironmentConfigEncryptionConfigArgs) ToEnvironmentConfigEncryptionConfigPtrOutput() EnvironmentConfigEncryptionConfigPtrOutput {
	return i.ToEnvironmentConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigEncryptionConfigArgs) ToEnvironmentConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigEncryptionConfigOutput).ToEnvironmentConfigEncryptionConfigPtrOutputWithContext(ctx)
}

// EnvironmentConfigEncryptionConfigPtrInput is an input type that accepts EnvironmentConfigEncryptionConfigArgs, EnvironmentConfigEncryptionConfigPtr and EnvironmentConfigEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigEncryptionConfigPtrInput` via:
//
//          EnvironmentConfigEncryptionConfigArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigEncryptionConfigPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigEncryptionConfigPtrOutput() EnvironmentConfigEncryptionConfigPtrOutput
	ToEnvironmentConfigEncryptionConfigPtrOutputWithContext(context.Context) EnvironmentConfigEncryptionConfigPtrOutput
}

type environmentConfigEncryptionConfigPtrType EnvironmentConfigEncryptionConfigArgs

func EnvironmentConfigEncryptionConfigPtr(v *EnvironmentConfigEncryptionConfigArgs) EnvironmentConfigEncryptionConfigPtrInput {
	return (*environmentConfigEncryptionConfigPtrType)(v)
}

func (*environmentConfigEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigEncryptionConfig)(nil)).Elem()
}

func (i *environmentConfigEncryptionConfigPtrType) ToEnvironmentConfigEncryptionConfigPtrOutput() EnvironmentConfigEncryptionConfigPtrOutput {
	return i.ToEnvironmentConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *environmentConfigEncryptionConfigPtrType) ToEnvironmentConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigEncryptionConfigPtrOutput)
}

type EnvironmentConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigEncryptionConfig)(nil)).Elem()
}

func (o EnvironmentConfigEncryptionConfigOutput) ToEnvironmentConfigEncryptionConfigOutput() EnvironmentConfigEncryptionConfigOutput {
	return o
}

func (o EnvironmentConfigEncryptionConfigOutput) ToEnvironmentConfigEncryptionConfigOutputWithContext(ctx context.Context) EnvironmentConfigEncryptionConfigOutput {
	return o
}

func (o EnvironmentConfigEncryptionConfigOutput) ToEnvironmentConfigEncryptionConfigPtrOutput() EnvironmentConfigEncryptionConfigPtrOutput {
	return o.ToEnvironmentConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigEncryptionConfigOutput) ToEnvironmentConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfigEncryptionConfig) *EnvironmentConfigEncryptionConfig {
		return &v
	}).(EnvironmentConfigEncryptionConfigPtrOutput)
}

// Customer-managed Encryption Key available through Google's Key Management Service. It must
// be the fully qualified resource name,
// i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
func (o EnvironmentConfigEncryptionConfigOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentConfigEncryptionConfig) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type EnvironmentConfigEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigEncryptionConfig)(nil)).Elem()
}

func (o EnvironmentConfigEncryptionConfigPtrOutput) ToEnvironmentConfigEncryptionConfigPtrOutput() EnvironmentConfigEncryptionConfigPtrOutput {
	return o
}

func (o EnvironmentConfigEncryptionConfigPtrOutput) ToEnvironmentConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigEncryptionConfigPtrOutput {
	return o
}

func (o EnvironmentConfigEncryptionConfigPtrOutput) Elem() EnvironmentConfigEncryptionConfigOutput {
	return o.ApplyT(func(v *EnvironmentConfigEncryptionConfig) EnvironmentConfigEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfigEncryptionConfig
		return ret
	}).(EnvironmentConfigEncryptionConfigOutput)
}

// Customer-managed Encryption Key available through Google's Key Management Service. It must
// be the fully qualified resource name,
// i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
func (o EnvironmentConfigEncryptionConfigPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

type EnvironmentConfigMaintenanceWindow struct {
	// Maintenance window end time. It is used only to calculate the duration of the maintenance window.
	// The value for end-time must be in the future, relative to 'start_time'.
	EndTime string `pulumi:"endTime"`
	// Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
	// The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
	// Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
	Recurrence string `pulumi:"recurrence"`
	// Start time of the first recurrence of the maintenance window.
	StartTime string `pulumi:"startTime"`
}

// EnvironmentConfigMaintenanceWindowInput is an input type that accepts EnvironmentConfigMaintenanceWindowArgs and EnvironmentConfigMaintenanceWindowOutput values.
// You can construct a concrete instance of `EnvironmentConfigMaintenanceWindowInput` via:
//
//          EnvironmentConfigMaintenanceWindowArgs{...}
type EnvironmentConfigMaintenanceWindowInput interface {
	pulumi.Input

	ToEnvironmentConfigMaintenanceWindowOutput() EnvironmentConfigMaintenanceWindowOutput
	ToEnvironmentConfigMaintenanceWindowOutputWithContext(context.Context) EnvironmentConfigMaintenanceWindowOutput
}

type EnvironmentConfigMaintenanceWindowArgs struct {
	// Maintenance window end time. It is used only to calculate the duration of the maintenance window.
	// The value for end-time must be in the future, relative to 'start_time'.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
	// The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
	// Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	// Start time of the first recurrence of the maintenance window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (EnvironmentConfigMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigMaintenanceWindow)(nil)).Elem()
}

func (i EnvironmentConfigMaintenanceWindowArgs) ToEnvironmentConfigMaintenanceWindowOutput() EnvironmentConfigMaintenanceWindowOutput {
	return i.ToEnvironmentConfigMaintenanceWindowOutputWithContext(context.Background())
}

func (i EnvironmentConfigMaintenanceWindowArgs) ToEnvironmentConfigMaintenanceWindowOutputWithContext(ctx context.Context) EnvironmentConfigMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigMaintenanceWindowOutput)
}

func (i EnvironmentConfigMaintenanceWindowArgs) ToEnvironmentConfigMaintenanceWindowPtrOutput() EnvironmentConfigMaintenanceWindowPtrOutput {
	return i.ToEnvironmentConfigMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigMaintenanceWindowArgs) ToEnvironmentConfigMaintenanceWindowPtrOutputWithContext(ctx context.Context) EnvironmentConfigMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigMaintenanceWindowOutput).ToEnvironmentConfigMaintenanceWindowPtrOutputWithContext(ctx)
}

// EnvironmentConfigMaintenanceWindowPtrInput is an input type that accepts EnvironmentConfigMaintenanceWindowArgs, EnvironmentConfigMaintenanceWindowPtr and EnvironmentConfigMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigMaintenanceWindowPtrInput` via:
//
//          EnvironmentConfigMaintenanceWindowArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigMaintenanceWindowPtrOutput() EnvironmentConfigMaintenanceWindowPtrOutput
	ToEnvironmentConfigMaintenanceWindowPtrOutputWithContext(context.Context) EnvironmentConfigMaintenanceWindowPtrOutput
}

type environmentConfigMaintenanceWindowPtrType EnvironmentConfigMaintenanceWindowArgs

func EnvironmentConfigMaintenanceWindowPtr(v *EnvironmentConfigMaintenanceWindowArgs) EnvironmentConfigMaintenanceWindowPtrInput {
	return (*environmentConfigMaintenanceWindowPtrType)(v)
}

func (*environmentConfigMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigMaintenanceWindow)(nil)).Elem()
}

func (i *environmentConfigMaintenanceWindowPtrType) ToEnvironmentConfigMaintenanceWindowPtrOutput() EnvironmentConfigMaintenanceWindowPtrOutput {
	return i.ToEnvironmentConfigMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *environmentConfigMaintenanceWindowPtrType) ToEnvironmentConfigMaintenanceWindowPtrOutputWithContext(ctx context.Context) EnvironmentConfigMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigMaintenanceWindowPtrOutput)
}

type EnvironmentConfigMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigMaintenanceWindow)(nil)).Elem()
}

func (o EnvironmentConfigMaintenanceWindowOutput) ToEnvironmentConfigMaintenanceWindowOutput() EnvironmentConfigMaintenanceWindowOutput {
	return o
}

func (o EnvironmentConfigMaintenanceWindowOutput) ToEnvironmentConfigMaintenanceWindowOutputWithContext(ctx context.Context) EnvironmentConfigMaintenanceWindowOutput {
	return o
}

func (o EnvironmentConfigMaintenanceWindowOutput) ToEnvironmentConfigMaintenanceWindowPtrOutput() EnvironmentConfigMaintenanceWindowPtrOutput {
	return o.ToEnvironmentConfigMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigMaintenanceWindowOutput) ToEnvironmentConfigMaintenanceWindowPtrOutputWithContext(ctx context.Context) EnvironmentConfigMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfigMaintenanceWindow) *EnvironmentConfigMaintenanceWindow {
		return &v
	}).(EnvironmentConfigMaintenanceWindowPtrOutput)
}

// Maintenance window end time. It is used only to calculate the duration of the maintenance window.
// The value for end-time must be in the future, relative to 'start_time'.
func (o EnvironmentConfigMaintenanceWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentConfigMaintenanceWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

// Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
// The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
// Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
func (o EnvironmentConfigMaintenanceWindowOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentConfigMaintenanceWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

// Start time of the first recurrence of the maintenance window.
func (o EnvironmentConfigMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentConfigMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type EnvironmentConfigMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigMaintenanceWindow)(nil)).Elem()
}

func (o EnvironmentConfigMaintenanceWindowPtrOutput) ToEnvironmentConfigMaintenanceWindowPtrOutput() EnvironmentConfigMaintenanceWindowPtrOutput {
	return o
}

func (o EnvironmentConfigMaintenanceWindowPtrOutput) ToEnvironmentConfigMaintenanceWindowPtrOutputWithContext(ctx context.Context) EnvironmentConfigMaintenanceWindowPtrOutput {
	return o
}

func (o EnvironmentConfigMaintenanceWindowPtrOutput) Elem() EnvironmentConfigMaintenanceWindowOutput {
	return o.ApplyT(func(v *EnvironmentConfigMaintenanceWindow) EnvironmentConfigMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfigMaintenanceWindow
		return ret
	}).(EnvironmentConfigMaintenanceWindowOutput)
}

// Maintenance window end time. It is used only to calculate the duration of the maintenance window.
// The value for end-time must be in the future, relative to 'start_time'.
func (o EnvironmentConfigMaintenanceWindowPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
// The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
// Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
func (o EnvironmentConfigMaintenanceWindowPtrOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Recurrence
	}).(pulumi.StringPtrOutput)
}

// Start time of the first recurrence of the maintenance window.
func (o EnvironmentConfigMaintenanceWindowPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type EnvironmentConfigNodeConfig struct {
	// The disk size in GB used for node VMs. Minimum size is 20GB.
	// If unspecified, defaults to 100GB. Cannot be updated.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Configuration for controlling how IPs are allocated in the GKE cluster.
	// Structure is documented below.
	// Cannot be updated.
	IpAllocationPolicy *EnvironmentConfigNodeConfigIpAllocationPolicy `pulumi:"ipAllocationPolicy"`
	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType    *string `pulumi:"machineType"`
	MaxPodsPerNode *int    `pulumi:"maxPodsPerNode"`
	// The Compute Engine network to be used for machine
	// communications, specified as a self-link, relative resource name
	// (e.g. "projects/{project}/global/networks/{network}"), by name.
	Network *string `pulumi:"network"`
	// The set of Google API scopes to be made available on all node
	// VMs. Cannot be updated. If empty, defaults to
	// `["https://www.googleapis.com/auth/cloud-platform"]`
	OauthScopes []string `pulumi:"oauthScopes"`
	// The Google Cloud Platform Service Account to be used by the
	// node VMs. If a service account is not specified, the "default"
	// Compute Engine service account is used. Cannot be updated. If given,
	// note that the service account must have `roles/composer.worker`
	// for any GCP resources created under the Cloud Composer Environment.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The Compute Engine subnetwork to be used for machine
	// communications, , specified as a self-link, relative resource name (e.g.
	// "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
	// network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
	Subnetwork *string `pulumi:"subnetwork"`
	// The list of instance tags applied to all node VMs. Tags are
	// used to identify valid sources or targets for network
	// firewalls. Each tag within the list must comply with RFC1035.
	// Cannot be updated.
	Tags []string `pulumi:"tags"`
	// The Compute Engine zone in which to deploy the VMs running the
	// Apache Airflow software, specified as the zone name or
	// relative resource name (e.g. "projects/{project}/zones/{zone}"). Must belong to the enclosing environment's project
	// and region.
	Zone string `pulumi:"zone"`
}

// EnvironmentConfigNodeConfigInput is an input type that accepts EnvironmentConfigNodeConfigArgs and EnvironmentConfigNodeConfigOutput values.
// You can construct a concrete instance of `EnvironmentConfigNodeConfigInput` via:
//
//          EnvironmentConfigNodeConfigArgs{...}
type EnvironmentConfigNodeConfigInput interface {
	pulumi.Input

	ToEnvironmentConfigNodeConfigOutput() EnvironmentConfigNodeConfigOutput
	ToEnvironmentConfigNodeConfigOutputWithContext(context.Context) EnvironmentConfigNodeConfigOutput
}

type EnvironmentConfigNodeConfigArgs struct {
	// The disk size in GB used for node VMs. Minimum size is 20GB.
	// If unspecified, defaults to 100GB. Cannot be updated.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Configuration for controlling how IPs are allocated in the GKE cluster.
	// Structure is documented below.
	// Cannot be updated.
	IpAllocationPolicy EnvironmentConfigNodeConfigIpAllocationPolicyPtrInput `pulumi:"ipAllocationPolicy"`
	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType    pulumi.StringPtrInput `pulumi:"machineType"`
	MaxPodsPerNode pulumi.IntPtrInput    `pulumi:"maxPodsPerNode"`
	// The Compute Engine network to be used for machine
	// communications, specified as a self-link, relative resource name
	// (e.g. "projects/{project}/global/networks/{network}"), by name.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// The set of Google API scopes to be made available on all node
	// VMs. Cannot be updated. If empty, defaults to
	// `["https://www.googleapis.com/auth/cloud-platform"]`
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// The Google Cloud Platform Service Account to be used by the
	// node VMs. If a service account is not specified, the "default"
	// Compute Engine service account is used. Cannot be updated. If given,
	// note that the service account must have `roles/composer.worker`
	// for any GCP resources created under the Cloud Composer Environment.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The Compute Engine subnetwork to be used for machine
	// communications, , specified as a self-link, relative resource name (e.g.
	// "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
	// network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
	// The list of instance tags applied to all node VMs. Tags are
	// used to identify valid sources or targets for network
	// firewalls. Each tag within the list must comply with RFC1035.
	// Cannot be updated.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The Compute Engine zone in which to deploy the VMs running the
	// Apache Airflow software, specified as the zone name or
	// relative resource name (e.g. "projects/{project}/zones/{zone}"). Must belong to the enclosing environment's project
	// and region.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (EnvironmentConfigNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigNodeConfig)(nil)).Elem()
}

func (i EnvironmentConfigNodeConfigArgs) ToEnvironmentConfigNodeConfigOutput() EnvironmentConfigNodeConfigOutput {
	return i.ToEnvironmentConfigNodeConfigOutputWithContext(context.Background())
}

func (i EnvironmentConfigNodeConfigArgs) ToEnvironmentConfigNodeConfigOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigNodeConfigOutput)
}

func (i EnvironmentConfigNodeConfigArgs) ToEnvironmentConfigNodeConfigPtrOutput() EnvironmentConfigNodeConfigPtrOutput {
	return i.ToEnvironmentConfigNodeConfigPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigNodeConfigArgs) ToEnvironmentConfigNodeConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigNodeConfigOutput).ToEnvironmentConfigNodeConfigPtrOutputWithContext(ctx)
}

// EnvironmentConfigNodeConfigPtrInput is an input type that accepts EnvironmentConfigNodeConfigArgs, EnvironmentConfigNodeConfigPtr and EnvironmentConfigNodeConfigPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigNodeConfigPtrInput` via:
//
//          EnvironmentConfigNodeConfigArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigNodeConfigPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigNodeConfigPtrOutput() EnvironmentConfigNodeConfigPtrOutput
	ToEnvironmentConfigNodeConfigPtrOutputWithContext(context.Context) EnvironmentConfigNodeConfigPtrOutput
}

type environmentConfigNodeConfigPtrType EnvironmentConfigNodeConfigArgs

func EnvironmentConfigNodeConfigPtr(v *EnvironmentConfigNodeConfigArgs) EnvironmentConfigNodeConfigPtrInput {
	return (*environmentConfigNodeConfigPtrType)(v)
}

func (*environmentConfigNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigNodeConfig)(nil)).Elem()
}

func (i *environmentConfigNodeConfigPtrType) ToEnvironmentConfigNodeConfigPtrOutput() EnvironmentConfigNodeConfigPtrOutput {
	return i.ToEnvironmentConfigNodeConfigPtrOutputWithContext(context.Background())
}

func (i *environmentConfigNodeConfigPtrType) ToEnvironmentConfigNodeConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigNodeConfigPtrOutput)
}

type EnvironmentConfigNodeConfigOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigNodeConfig)(nil)).Elem()
}

func (o EnvironmentConfigNodeConfigOutput) ToEnvironmentConfigNodeConfigOutput() EnvironmentConfigNodeConfigOutput {
	return o
}

func (o EnvironmentConfigNodeConfigOutput) ToEnvironmentConfigNodeConfigOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigOutput {
	return o
}

func (o EnvironmentConfigNodeConfigOutput) ToEnvironmentConfigNodeConfigPtrOutput() EnvironmentConfigNodeConfigPtrOutput {
	return o.ToEnvironmentConfigNodeConfigPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigNodeConfigOutput) ToEnvironmentConfigNodeConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfigNodeConfig) *EnvironmentConfigNodeConfig {
		return &v
	}).(EnvironmentConfigNodeConfigPtrOutput)
}

// The disk size in GB used for node VMs. Minimum size is 20GB.
// If unspecified, defaults to 100GB. Cannot be updated.
func (o EnvironmentConfigNodeConfigOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Configuration for controlling how IPs are allocated in the GKE cluster.
// Structure is documented below.
// Cannot be updated.
func (o EnvironmentConfigNodeConfigOutput) IpAllocationPolicy() EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) *EnvironmentConfigNodeConfigIpAllocationPolicy {
		return v.IpAllocationPolicy
	}).(EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput)
}

// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
// composer-n1-webserver-4 or composer-n1-webserver-8.
// Value custom is returned only in response, if Airflow web server parameters were
// manually changed to a non-standard values.
func (o EnvironmentConfigNodeConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

func (o EnvironmentConfigNodeConfigOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// The Compute Engine network to be used for machine
// communications, specified as a self-link, relative resource name
// (e.g. "projects/{project}/global/networks/{network}"), by name.
func (o EnvironmentConfigNodeConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available on all node
// VMs. Cannot be updated. If empty, defaults to
// `["https://www.googleapis.com/auth/cloud-platform"]`
func (o EnvironmentConfigNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// The Google Cloud Platform Service Account to be used by the
// node VMs. If a service account is not specified, the "default"
// Compute Engine service account is used. Cannot be updated. If given,
// note that the service account must have `roles/composer.worker`
// for any GCP resources created under the Cloud Composer Environment.
func (o EnvironmentConfigNodeConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The Compute Engine subnetwork to be used for machine
// communications, , specified as a self-link, relative resource name (e.g.
// "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
// network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
func (o EnvironmentConfigNodeConfigOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

// The list of instance tags applied to all node VMs. Tags are
// used to identify valid sources or targets for network
// firewalls. Each tag within the list must comply with RFC1035.
// Cannot be updated.
func (o EnvironmentConfigNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The Compute Engine zone in which to deploy the VMs running the
// Apache Airflow software, specified as the zone name or
// relative resource name (e.g. "projects/{project}/zones/{zone}"). Must belong to the enclosing environment's project
// and region.
func (o EnvironmentConfigNodeConfigOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfig) string { return v.Zone }).(pulumi.StringOutput)
}

type EnvironmentConfigNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigNodeConfig)(nil)).Elem()
}

func (o EnvironmentConfigNodeConfigPtrOutput) ToEnvironmentConfigNodeConfigPtrOutput() EnvironmentConfigNodeConfigPtrOutput {
	return o
}

func (o EnvironmentConfigNodeConfigPtrOutput) ToEnvironmentConfigNodeConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigPtrOutput {
	return o
}

func (o EnvironmentConfigNodeConfigPtrOutput) Elem() EnvironmentConfigNodeConfigOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) EnvironmentConfigNodeConfig {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfigNodeConfig
		return ret
	}).(EnvironmentConfigNodeConfigOutput)
}

// The disk size in GB used for node VMs. Minimum size is 20GB.
// If unspecified, defaults to 100GB. Cannot be updated.
func (o EnvironmentConfigNodeConfigPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Configuration for controlling how IPs are allocated in the GKE cluster.
// Structure is documented below.
// Cannot be updated.
func (o EnvironmentConfigNodeConfigPtrOutput) IpAllocationPolicy() EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) *EnvironmentConfigNodeConfigIpAllocationPolicy {
		if v == nil {
			return nil
		}
		return v.IpAllocationPolicy
	}).(EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput)
}

// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
// composer-n1-webserver-4 or composer-n1-webserver-8.
// Value custom is returned only in response, if Airflow web server parameters were
// manually changed to a non-standard values.
func (o EnvironmentConfigNodeConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

func (o EnvironmentConfigNodeConfigPtrOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNode
	}).(pulumi.IntPtrOutput)
}

// The Compute Engine network to be used for machine
// communications, specified as a self-link, relative resource name
// (e.g. "projects/{project}/global/networks/{network}"), by name.
func (o EnvironmentConfigNodeConfigPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available on all node
// VMs. Cannot be updated. If empty, defaults to
// `["https://www.googleapis.com/auth/cloud-platform"]`
func (o EnvironmentConfigNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// The Google Cloud Platform Service Account to be used by the
// node VMs. If a service account is not specified, the "default"
// Compute Engine service account is used. Cannot be updated. If given,
// note that the service account must have `roles/composer.worker`
// for any GCP resources created under the Cloud Composer Environment.
func (o EnvironmentConfigNodeConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// The Compute Engine subnetwork to be used for machine
// communications, , specified as a self-link, relative resource name (e.g.
// "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
// network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
func (o EnvironmentConfigNodeConfigPtrOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Subnetwork
	}).(pulumi.StringPtrOutput)
}

// The list of instance tags applied to all node VMs. Tags are
// used to identify valid sources or targets for network
// firewalls. Each tag within the list must comply with RFC1035.
// Cannot be updated.
func (o EnvironmentConfigNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// The Compute Engine zone in which to deploy the VMs running the
// Apache Airflow software, specified as the zone name or
// relative resource name (e.g. "projects/{project}/zones/{zone}"). Must belong to the enclosing environment's project
// and region.
func (o EnvironmentConfigNodeConfigPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Zone
	}).(pulumi.StringPtrOutput)
}

type EnvironmentConfigNodeConfigIpAllocationPolicy struct {
	// The IP address range used to allocate IP addresses to pods in the cluster.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either `clusterSecondaryRangeName` or `clusterIpv4CidrBlock` but not both.
	ClusterIpv4CidrBlock *string `pulumi:"clusterIpv4CidrBlock"`
	// The name of the cluster's secondary range used to allocate IP addresses to pods.
	// Specify either `clusterSecondaryRangeName` or `clusterIpv4CidrBlock` but not both.
	// This field is applicable only when `useIpAliases` is true.
	ClusterSecondaryRangeName *string `pulumi:"clusterSecondaryRangeName"`
	// The IP address range used to allocate IP addresses in this cluster.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either `servicesSecondaryRangeName` or `servicesIpv4CidrBlock` but not both.
	ServicesIpv4CidrBlock *string `pulumi:"servicesIpv4CidrBlock"`
	// The name of the services' secondary range used to allocate IP addresses to the cluster.
	// Specify either `servicesSecondaryRangeName` or `servicesIpv4CidrBlock` but not both.
	// This field is applicable only when `useIpAliases` is true.
	ServicesSecondaryRangeName *string `pulumi:"servicesSecondaryRangeName"`
	// Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
	// Defaults to true if the `ipAllocationPolicy` block is present in config.
	UseIpAliases bool `pulumi:"useIpAliases"`
}

// EnvironmentConfigNodeConfigIpAllocationPolicyInput is an input type that accepts EnvironmentConfigNodeConfigIpAllocationPolicyArgs and EnvironmentConfigNodeConfigIpAllocationPolicyOutput values.
// You can construct a concrete instance of `EnvironmentConfigNodeConfigIpAllocationPolicyInput` via:
//
//          EnvironmentConfigNodeConfigIpAllocationPolicyArgs{...}
type EnvironmentConfigNodeConfigIpAllocationPolicyInput interface {
	pulumi.Input

	ToEnvironmentConfigNodeConfigIpAllocationPolicyOutput() EnvironmentConfigNodeConfigIpAllocationPolicyOutput
	ToEnvironmentConfigNodeConfigIpAllocationPolicyOutputWithContext(context.Context) EnvironmentConfigNodeConfigIpAllocationPolicyOutput
}

type EnvironmentConfigNodeConfigIpAllocationPolicyArgs struct {
	// The IP address range used to allocate IP addresses to pods in the cluster.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either `clusterSecondaryRangeName` or `clusterIpv4CidrBlock` but not both.
	ClusterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"clusterIpv4CidrBlock"`
	// The name of the cluster's secondary range used to allocate IP addresses to pods.
	// Specify either `clusterSecondaryRangeName` or `clusterIpv4CidrBlock` but not both.
	// This field is applicable only when `useIpAliases` is true.
	ClusterSecondaryRangeName pulumi.StringPtrInput `pulumi:"clusterSecondaryRangeName"`
	// The IP address range used to allocate IP addresses in this cluster.
	// Set to blank to have GKE choose a range with the default size.
	// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
	// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
	// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
	// Specify either `servicesSecondaryRangeName` or `servicesIpv4CidrBlock` but not both.
	ServicesIpv4CidrBlock pulumi.StringPtrInput `pulumi:"servicesIpv4CidrBlock"`
	// The name of the services' secondary range used to allocate IP addresses to the cluster.
	// Specify either `servicesSecondaryRangeName` or `servicesIpv4CidrBlock` but not both.
	// This field is applicable only when `useIpAliases` is true.
	ServicesSecondaryRangeName pulumi.StringPtrInput `pulumi:"servicesSecondaryRangeName"`
	// Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
	// Defaults to true if the `ipAllocationPolicy` block is present in config.
	UseIpAliases pulumi.BoolInput `pulumi:"useIpAliases"`
}

func (EnvironmentConfigNodeConfigIpAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigNodeConfigIpAllocationPolicy)(nil)).Elem()
}

func (i EnvironmentConfigNodeConfigIpAllocationPolicyArgs) ToEnvironmentConfigNodeConfigIpAllocationPolicyOutput() EnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return i.ToEnvironmentConfigNodeConfigIpAllocationPolicyOutputWithContext(context.Background())
}

func (i EnvironmentConfigNodeConfigIpAllocationPolicyArgs) ToEnvironmentConfigNodeConfigIpAllocationPolicyOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigNodeConfigIpAllocationPolicyOutput)
}

func (i EnvironmentConfigNodeConfigIpAllocationPolicyArgs) ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput() EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return i.ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigNodeConfigIpAllocationPolicyArgs) ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigNodeConfigIpAllocationPolicyOutput).ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutputWithContext(ctx)
}

// EnvironmentConfigNodeConfigIpAllocationPolicyPtrInput is an input type that accepts EnvironmentConfigNodeConfigIpAllocationPolicyArgs, EnvironmentConfigNodeConfigIpAllocationPolicyPtr and EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigNodeConfigIpAllocationPolicyPtrInput` via:
//
//          EnvironmentConfigNodeConfigIpAllocationPolicyArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigNodeConfigIpAllocationPolicyPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput() EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput
	ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutputWithContext(context.Context) EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput
}

type environmentConfigNodeConfigIpAllocationPolicyPtrType EnvironmentConfigNodeConfigIpAllocationPolicyArgs

func EnvironmentConfigNodeConfigIpAllocationPolicyPtr(v *EnvironmentConfigNodeConfigIpAllocationPolicyArgs) EnvironmentConfigNodeConfigIpAllocationPolicyPtrInput {
	return (*environmentConfigNodeConfigIpAllocationPolicyPtrType)(v)
}

func (*environmentConfigNodeConfigIpAllocationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigNodeConfigIpAllocationPolicy)(nil)).Elem()
}

func (i *environmentConfigNodeConfigIpAllocationPolicyPtrType) ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput() EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return i.ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i *environmentConfigNodeConfigIpAllocationPolicyPtrType) ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput)
}

type EnvironmentConfigNodeConfigIpAllocationPolicyOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigNodeConfigIpAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigNodeConfigIpAllocationPolicy)(nil)).Elem()
}

func (o EnvironmentConfigNodeConfigIpAllocationPolicyOutput) ToEnvironmentConfigNodeConfigIpAllocationPolicyOutput() EnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return o
}

func (o EnvironmentConfigNodeConfigIpAllocationPolicyOutput) ToEnvironmentConfigNodeConfigIpAllocationPolicyOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return o
}

func (o EnvironmentConfigNodeConfigIpAllocationPolicyOutput) ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput() EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return o.ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigNodeConfigIpAllocationPolicyOutput) ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfigNodeConfigIpAllocationPolicy) *EnvironmentConfigNodeConfigIpAllocationPolicy {
		return &v
	}).(EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput)
}

// The IP address range used to allocate IP addresses to pods in the cluster.
// Set to blank to have GKE choose a range with the default size.
// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
// Specify either `clusterSecondaryRangeName` or `clusterIpv4CidrBlock` but not both.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyOutput) ClusterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfigIpAllocationPolicy) *string { return v.ClusterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the cluster's secondary range used to allocate IP addresses to pods.
// Specify either `clusterSecondaryRangeName` or `clusterIpv4CidrBlock` but not both.
// This field is applicable only when `useIpAliases` is true.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyOutput) ClusterSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfigIpAllocationPolicy) *string { return v.ClusterSecondaryRangeName }).(pulumi.StringPtrOutput)
}

// The IP address range used to allocate IP addresses in this cluster.
// Set to blank to have GKE choose a range with the default size.
// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
// Specify either `servicesSecondaryRangeName` or `servicesIpv4CidrBlock` but not both.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyOutput) ServicesIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfigIpAllocationPolicy) *string { return v.ServicesIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the services' secondary range used to allocate IP addresses to the cluster.
// Specify either `servicesSecondaryRangeName` or `servicesIpv4CidrBlock` but not both.
// This field is applicable only when `useIpAliases` is true.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyOutput) ServicesSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfigIpAllocationPolicy) *string { return v.ServicesSecondaryRangeName }).(pulumi.StringPtrOutput)
}

// Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
// Defaults to true if the `ipAllocationPolicy` block is present in config.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyOutput) UseIpAliases() pulumi.BoolOutput {
	return o.ApplyT(func(v EnvironmentConfigNodeConfigIpAllocationPolicy) bool { return v.UseIpAliases }).(pulumi.BoolOutput)
}

type EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigNodeConfigIpAllocationPolicy)(nil)).Elem()
}

func (o EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput) ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput() EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return o
}

func (o EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput) ToEnvironmentConfigNodeConfigIpAllocationPolicyPtrOutputWithContext(ctx context.Context) EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput {
	return o
}

func (o EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput) Elem() EnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfigIpAllocationPolicy) EnvironmentConfigNodeConfigIpAllocationPolicy {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfigNodeConfigIpAllocationPolicy
		return ret
	}).(EnvironmentConfigNodeConfigIpAllocationPolicyOutput)
}

// The IP address range used to allocate IP addresses to pods in the cluster.
// Set to blank to have GKE choose a range with the default size.
// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
// Specify either `clusterSecondaryRangeName` or `clusterIpv4CidrBlock` but not both.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput) ClusterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfigIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The name of the cluster's secondary range used to allocate IP addresses to pods.
// Specify either `clusterSecondaryRangeName` or `clusterIpv4CidrBlock` but not both.
// This field is applicable only when `useIpAliases` is true.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput) ClusterSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfigIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ClusterSecondaryRangeName
	}).(pulumi.StringPtrOutput)
}

// The IP address range used to allocate IP addresses in this cluster.
// Set to blank to have GKE choose a range with the default size.
// Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
// Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
// (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
// Specify either `servicesSecondaryRangeName` or `servicesIpv4CidrBlock` but not both.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput) ServicesIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfigIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ServicesIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The name of the services' secondary range used to allocate IP addresses to the cluster.
// Specify either `servicesSecondaryRangeName` or `servicesIpv4CidrBlock` but not both.
// This field is applicable only when `useIpAliases` is true.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput) ServicesSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfigIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ServicesSecondaryRangeName
	}).(pulumi.StringPtrOutput)
}

// Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
// Defaults to true if the `ipAllocationPolicy` block is present in config.
func (o EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput) UseIpAliases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigNodeConfigIpAllocationPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.UseIpAliases
	}).(pulumi.BoolPtrOutput)
}

type EnvironmentConfigPrivateEnvironmentConfig struct {
	// The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from `webServerIpv4CidrBlock`
	CloudSqlIpv4CidrBlock *string `pulumi:"cloudSqlIpv4CidrBlock"`
	// -
	// If true, access to the public endpoint of the GKE cluster is denied.
	EnablePrivateEndpoint *bool `pulumi:"enablePrivateEndpoint"`
	// The IP range in CIDR notation to use for the hosted master network. This range is used
	// for assigning internal IP addresses to the cluster master or set of masters and to the
	// internal load balancer virtual IP. This range must not overlap with any other ranges
	// in use within the cluster's network.
	// If left blank, the default value of is used. See [documentation](https://cloud.google.com/composer/docs/how-to/managing/configuring-private-ip#defaults) for default values per region.
	MasterIpv4CidrBlock *string `pulumi:"masterIpv4CidrBlock"`
	// The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from `masterIpv4CidrBlock` and `cloudSqlIpv4CidrBlock`.
	WebServerIpv4CidrBlock *string `pulumi:"webServerIpv4CidrBlock"`
}

// EnvironmentConfigPrivateEnvironmentConfigInput is an input type that accepts EnvironmentConfigPrivateEnvironmentConfigArgs and EnvironmentConfigPrivateEnvironmentConfigOutput values.
// You can construct a concrete instance of `EnvironmentConfigPrivateEnvironmentConfigInput` via:
//
//          EnvironmentConfigPrivateEnvironmentConfigArgs{...}
type EnvironmentConfigPrivateEnvironmentConfigInput interface {
	pulumi.Input

	ToEnvironmentConfigPrivateEnvironmentConfigOutput() EnvironmentConfigPrivateEnvironmentConfigOutput
	ToEnvironmentConfigPrivateEnvironmentConfigOutputWithContext(context.Context) EnvironmentConfigPrivateEnvironmentConfigOutput
}

type EnvironmentConfigPrivateEnvironmentConfigArgs struct {
	// The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from `webServerIpv4CidrBlock`
	CloudSqlIpv4CidrBlock pulumi.StringPtrInput `pulumi:"cloudSqlIpv4CidrBlock"`
	// -
	// If true, access to the public endpoint of the GKE cluster is denied.
	EnablePrivateEndpoint pulumi.BoolPtrInput `pulumi:"enablePrivateEndpoint"`
	// The IP range in CIDR notation to use for the hosted master network. This range is used
	// for assigning internal IP addresses to the cluster master or set of masters and to the
	// internal load balancer virtual IP. This range must not overlap with any other ranges
	// in use within the cluster's network.
	// If left blank, the default value of is used. See [documentation](https://cloud.google.com/composer/docs/how-to/managing/configuring-private-ip#defaults) for default values per region.
	MasterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"masterIpv4CidrBlock"`
	// The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from `masterIpv4CidrBlock` and `cloudSqlIpv4CidrBlock`.
	WebServerIpv4CidrBlock pulumi.StringPtrInput `pulumi:"webServerIpv4CidrBlock"`
}

func (EnvironmentConfigPrivateEnvironmentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigPrivateEnvironmentConfig)(nil)).Elem()
}

func (i EnvironmentConfigPrivateEnvironmentConfigArgs) ToEnvironmentConfigPrivateEnvironmentConfigOutput() EnvironmentConfigPrivateEnvironmentConfigOutput {
	return i.ToEnvironmentConfigPrivateEnvironmentConfigOutputWithContext(context.Background())
}

func (i EnvironmentConfigPrivateEnvironmentConfigArgs) ToEnvironmentConfigPrivateEnvironmentConfigOutputWithContext(ctx context.Context) EnvironmentConfigPrivateEnvironmentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigPrivateEnvironmentConfigOutput)
}

func (i EnvironmentConfigPrivateEnvironmentConfigArgs) ToEnvironmentConfigPrivateEnvironmentConfigPtrOutput() EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return i.ToEnvironmentConfigPrivateEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigPrivateEnvironmentConfigArgs) ToEnvironmentConfigPrivateEnvironmentConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigPrivateEnvironmentConfigOutput).ToEnvironmentConfigPrivateEnvironmentConfigPtrOutputWithContext(ctx)
}

// EnvironmentConfigPrivateEnvironmentConfigPtrInput is an input type that accepts EnvironmentConfigPrivateEnvironmentConfigArgs, EnvironmentConfigPrivateEnvironmentConfigPtr and EnvironmentConfigPrivateEnvironmentConfigPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigPrivateEnvironmentConfigPtrInput` via:
//
//          EnvironmentConfigPrivateEnvironmentConfigArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigPrivateEnvironmentConfigPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigPrivateEnvironmentConfigPtrOutput() EnvironmentConfigPrivateEnvironmentConfigPtrOutput
	ToEnvironmentConfigPrivateEnvironmentConfigPtrOutputWithContext(context.Context) EnvironmentConfigPrivateEnvironmentConfigPtrOutput
}

type environmentConfigPrivateEnvironmentConfigPtrType EnvironmentConfigPrivateEnvironmentConfigArgs

func EnvironmentConfigPrivateEnvironmentConfigPtr(v *EnvironmentConfigPrivateEnvironmentConfigArgs) EnvironmentConfigPrivateEnvironmentConfigPtrInput {
	return (*environmentConfigPrivateEnvironmentConfigPtrType)(v)
}

func (*environmentConfigPrivateEnvironmentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigPrivateEnvironmentConfig)(nil)).Elem()
}

func (i *environmentConfigPrivateEnvironmentConfigPtrType) ToEnvironmentConfigPrivateEnvironmentConfigPtrOutput() EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return i.ToEnvironmentConfigPrivateEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i *environmentConfigPrivateEnvironmentConfigPtrType) ToEnvironmentConfigPrivateEnvironmentConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigPrivateEnvironmentConfigPtrOutput)
}

type EnvironmentConfigPrivateEnvironmentConfigOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigPrivateEnvironmentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigPrivateEnvironmentConfig)(nil)).Elem()
}

func (o EnvironmentConfigPrivateEnvironmentConfigOutput) ToEnvironmentConfigPrivateEnvironmentConfigOutput() EnvironmentConfigPrivateEnvironmentConfigOutput {
	return o
}

func (o EnvironmentConfigPrivateEnvironmentConfigOutput) ToEnvironmentConfigPrivateEnvironmentConfigOutputWithContext(ctx context.Context) EnvironmentConfigPrivateEnvironmentConfigOutput {
	return o
}

func (o EnvironmentConfigPrivateEnvironmentConfigOutput) ToEnvironmentConfigPrivateEnvironmentConfigPtrOutput() EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return o.ToEnvironmentConfigPrivateEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigPrivateEnvironmentConfigOutput) ToEnvironmentConfigPrivateEnvironmentConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfigPrivateEnvironmentConfig) *EnvironmentConfigPrivateEnvironmentConfig {
		return &v
	}).(EnvironmentConfigPrivateEnvironmentConfigPtrOutput)
}

// The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from `webServerIpv4CidrBlock`
func (o EnvironmentConfigPrivateEnvironmentConfigOutput) CloudSqlIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigPrivateEnvironmentConfig) *string { return v.CloudSqlIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// -
// If true, access to the public endpoint of the GKE cluster is denied.
func (o EnvironmentConfigPrivateEnvironmentConfigOutput) EnablePrivateEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigPrivateEnvironmentConfig) *bool { return v.EnablePrivateEndpoint }).(pulumi.BoolPtrOutput)
}

// The IP range in CIDR notation to use for the hosted master network. This range is used
// for assigning internal IP addresses to the cluster master or set of masters and to the
// internal load balancer virtual IP. This range must not overlap with any other ranges
// in use within the cluster's network.
// If left blank, the default value of is used. See [documentation](https://cloud.google.com/composer/docs/how-to/managing/configuring-private-ip#defaults) for default values per region.
func (o EnvironmentConfigPrivateEnvironmentConfigOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigPrivateEnvironmentConfig) *string { return v.MasterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from `masterIpv4CidrBlock` and `cloudSqlIpv4CidrBlock`.
func (o EnvironmentConfigPrivateEnvironmentConfigOutput) WebServerIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigPrivateEnvironmentConfig) *string { return v.WebServerIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

type EnvironmentConfigPrivateEnvironmentConfigPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigPrivateEnvironmentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigPrivateEnvironmentConfig)(nil)).Elem()
}

func (o EnvironmentConfigPrivateEnvironmentConfigPtrOutput) ToEnvironmentConfigPrivateEnvironmentConfigPtrOutput() EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return o
}

func (o EnvironmentConfigPrivateEnvironmentConfigPtrOutput) ToEnvironmentConfigPrivateEnvironmentConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigPrivateEnvironmentConfigPtrOutput {
	return o
}

func (o EnvironmentConfigPrivateEnvironmentConfigPtrOutput) Elem() EnvironmentConfigPrivateEnvironmentConfigOutput {
	return o.ApplyT(func(v *EnvironmentConfigPrivateEnvironmentConfig) EnvironmentConfigPrivateEnvironmentConfig {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfigPrivateEnvironmentConfig
		return ret
	}).(EnvironmentConfigPrivateEnvironmentConfigOutput)
}

// The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from `webServerIpv4CidrBlock`
func (o EnvironmentConfigPrivateEnvironmentConfigPtrOutput) CloudSqlIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigPrivateEnvironmentConfig) *string {
		if v == nil {
			return nil
		}
		return v.CloudSqlIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// -
// If true, access to the public endpoint of the GKE cluster is denied.
func (o EnvironmentConfigPrivateEnvironmentConfigPtrOutput) EnablePrivateEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigPrivateEnvironmentConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateEndpoint
	}).(pulumi.BoolPtrOutput)
}

// The IP range in CIDR notation to use for the hosted master network. This range is used
// for assigning internal IP addresses to the cluster master or set of masters and to the
// internal load balancer virtual IP. This range must not overlap with any other ranges
// in use within the cluster's network.
// If left blank, the default value of is used. See [documentation](https://cloud.google.com/composer/docs/how-to/managing/configuring-private-ip#defaults) for default values per region.
func (o EnvironmentConfigPrivateEnvironmentConfigPtrOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigPrivateEnvironmentConfig) *string {
		if v == nil {
			return nil
		}
		return v.MasterIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from `masterIpv4CidrBlock` and `cloudSqlIpv4CidrBlock`.
func (o EnvironmentConfigPrivateEnvironmentConfigPtrOutput) WebServerIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigPrivateEnvironmentConfig) *string {
		if v == nil {
			return nil
		}
		return v.WebServerIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

type EnvironmentConfigSoftwareConfig struct {
	// -
	// (Optional) Apache Airflow configuration properties to override. Property keys contain the section and property names,
	// separated by a hyphen, for example "core-dags_are_paused_at_creation".
	AirflowConfigOverrides map[string]string `pulumi:"airflowConfigOverrides"`
	// Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
	// Environment variable names must match the regular expression `[a-zA-Z_][a-zA-Z0-9_]*`.
	// They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
	// `AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`), and they cannot match any of the following reserved names:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	EnvVariables map[string]string `pulumi:"envVariables"`
	// -
	// The version of the software running in the environment. This encapsulates both the version of Cloud Composer
	// functionality and the version of Apache Airflow. It must match the regular expression
	// `composer-[0-9]+\.[0-9]+(\.[0-9]+)?-airflow-[0-9]+\.[0-9]+(\.[0-9]+.*)?`.
	// The Cloud Composer portion of the version is a semantic version.
	// The portion of the image version following 'airflow-' is an official Apache Airflow repository release name.
	// See [documentation](https://cloud.google.com/composer/docs/reference/rest/v1beta1/projects.locations.environments#softwareconfig)
	// for allowed release names.
	ImageVersion *string `pulumi:"imageVersion"`
	// Custom Python Package Index (PyPI) packages to be installed
	// in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
	// version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
	// pinning it to a version specifier, use the empty string as the value.
	PypiPackages map[string]string `pulumi:"pypiPackages"`
	// -
	// The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
	// Can be set to '2' or '3'. If not specified, the default is '2'. Cannot be updated.
	PythonVersion *string `pulumi:"pythonVersion"`
	// -
	// The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-2.*.*.`
	SchedulerCount *int `pulumi:"schedulerCount"`
}

// EnvironmentConfigSoftwareConfigInput is an input type that accepts EnvironmentConfigSoftwareConfigArgs and EnvironmentConfigSoftwareConfigOutput values.
// You can construct a concrete instance of `EnvironmentConfigSoftwareConfigInput` via:
//
//          EnvironmentConfigSoftwareConfigArgs{...}
type EnvironmentConfigSoftwareConfigInput interface {
	pulumi.Input

	ToEnvironmentConfigSoftwareConfigOutput() EnvironmentConfigSoftwareConfigOutput
	ToEnvironmentConfigSoftwareConfigOutputWithContext(context.Context) EnvironmentConfigSoftwareConfigOutput
}

type EnvironmentConfigSoftwareConfigArgs struct {
	// -
	// (Optional) Apache Airflow configuration properties to override. Property keys contain the section and property names,
	// separated by a hyphen, for example "core-dags_are_paused_at_creation".
	AirflowConfigOverrides pulumi.StringMapInput `pulumi:"airflowConfigOverrides"`
	// Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
	// Environment variable names must match the regular expression `[a-zA-Z_][a-zA-Z0-9_]*`.
	// They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
	// `AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`), and they cannot match any of the following reserved names:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	EnvVariables pulumi.StringMapInput `pulumi:"envVariables"`
	// -
	// The version of the software running in the environment. This encapsulates both the version of Cloud Composer
	// functionality and the version of Apache Airflow. It must match the regular expression
	// `composer-[0-9]+\.[0-9]+(\.[0-9]+)?-airflow-[0-9]+\.[0-9]+(\.[0-9]+.*)?`.
	// The Cloud Composer portion of the version is a semantic version.
	// The portion of the image version following 'airflow-' is an official Apache Airflow repository release name.
	// See [documentation](https://cloud.google.com/composer/docs/reference/rest/v1beta1/projects.locations.environments#softwareconfig)
	// for allowed release names.
	ImageVersion pulumi.StringPtrInput `pulumi:"imageVersion"`
	// Custom Python Package Index (PyPI) packages to be installed
	// in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
	// version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
	// pinning it to a version specifier, use the empty string as the value.
	PypiPackages pulumi.StringMapInput `pulumi:"pypiPackages"`
	// -
	// The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
	// Can be set to '2' or '3'. If not specified, the default is '2'. Cannot be updated.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// -
	// The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-2.*.*.`
	SchedulerCount pulumi.IntPtrInput `pulumi:"schedulerCount"`
}

func (EnvironmentConfigSoftwareConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigSoftwareConfig)(nil)).Elem()
}

func (i EnvironmentConfigSoftwareConfigArgs) ToEnvironmentConfigSoftwareConfigOutput() EnvironmentConfigSoftwareConfigOutput {
	return i.ToEnvironmentConfigSoftwareConfigOutputWithContext(context.Background())
}

func (i EnvironmentConfigSoftwareConfigArgs) ToEnvironmentConfigSoftwareConfigOutputWithContext(ctx context.Context) EnvironmentConfigSoftwareConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigSoftwareConfigOutput)
}

func (i EnvironmentConfigSoftwareConfigArgs) ToEnvironmentConfigSoftwareConfigPtrOutput() EnvironmentConfigSoftwareConfigPtrOutput {
	return i.ToEnvironmentConfigSoftwareConfigPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigSoftwareConfigArgs) ToEnvironmentConfigSoftwareConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigSoftwareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigSoftwareConfigOutput).ToEnvironmentConfigSoftwareConfigPtrOutputWithContext(ctx)
}

// EnvironmentConfigSoftwareConfigPtrInput is an input type that accepts EnvironmentConfigSoftwareConfigArgs, EnvironmentConfigSoftwareConfigPtr and EnvironmentConfigSoftwareConfigPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigSoftwareConfigPtrInput` via:
//
//          EnvironmentConfigSoftwareConfigArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigSoftwareConfigPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigSoftwareConfigPtrOutput() EnvironmentConfigSoftwareConfigPtrOutput
	ToEnvironmentConfigSoftwareConfigPtrOutputWithContext(context.Context) EnvironmentConfigSoftwareConfigPtrOutput
}

type environmentConfigSoftwareConfigPtrType EnvironmentConfigSoftwareConfigArgs

func EnvironmentConfigSoftwareConfigPtr(v *EnvironmentConfigSoftwareConfigArgs) EnvironmentConfigSoftwareConfigPtrInput {
	return (*environmentConfigSoftwareConfigPtrType)(v)
}

func (*environmentConfigSoftwareConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigSoftwareConfig)(nil)).Elem()
}

func (i *environmentConfigSoftwareConfigPtrType) ToEnvironmentConfigSoftwareConfigPtrOutput() EnvironmentConfigSoftwareConfigPtrOutput {
	return i.ToEnvironmentConfigSoftwareConfigPtrOutputWithContext(context.Background())
}

func (i *environmentConfigSoftwareConfigPtrType) ToEnvironmentConfigSoftwareConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigSoftwareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigSoftwareConfigPtrOutput)
}

type EnvironmentConfigSoftwareConfigOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigSoftwareConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigSoftwareConfig)(nil)).Elem()
}

func (o EnvironmentConfigSoftwareConfigOutput) ToEnvironmentConfigSoftwareConfigOutput() EnvironmentConfigSoftwareConfigOutput {
	return o
}

func (o EnvironmentConfigSoftwareConfigOutput) ToEnvironmentConfigSoftwareConfigOutputWithContext(ctx context.Context) EnvironmentConfigSoftwareConfigOutput {
	return o
}

func (o EnvironmentConfigSoftwareConfigOutput) ToEnvironmentConfigSoftwareConfigPtrOutput() EnvironmentConfigSoftwareConfigPtrOutput {
	return o.ToEnvironmentConfigSoftwareConfigPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigSoftwareConfigOutput) ToEnvironmentConfigSoftwareConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigSoftwareConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfigSoftwareConfig) *EnvironmentConfigSoftwareConfig {
		return &v
	}).(EnvironmentConfigSoftwareConfigPtrOutput)
}

// -
// (Optional) Apache Airflow configuration properties to override. Property keys contain the section and property names,
// separated by a hyphen, for example "core-dags_are_paused_at_creation".
func (o EnvironmentConfigSoftwareConfigOutput) AirflowConfigOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentConfigSoftwareConfig) map[string]string { return v.AirflowConfigOverrides }).(pulumi.StringMapOutput)
}

// Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
// Environment variable names must match the regular expression `[a-zA-Z_][a-zA-Z0-9_]*`.
// They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
// `AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`), and they cannot match any of the following reserved names:
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		return nil
// 	})
// }
// ```
func (o EnvironmentConfigSoftwareConfigOutput) EnvVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentConfigSoftwareConfig) map[string]string { return v.EnvVariables }).(pulumi.StringMapOutput)
}

// -
// The version of the software running in the environment. This encapsulates both the version of Cloud Composer
// functionality and the version of Apache Airflow. It must match the regular expression
// `composer-[0-9]+\.[0-9]+(\.[0-9]+)?-airflow-[0-9]+\.[0-9]+(\.[0-9]+.*)?`.
// The Cloud Composer portion of the version is a semantic version.
// The portion of the image version following 'airflow-' is an official Apache Airflow repository release name.
// See [documentation](https://cloud.google.com/composer/docs/reference/rest/v1beta1/projects.locations.environments#softwareconfig)
// for allowed release names.
func (o EnvironmentConfigSoftwareConfigOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigSoftwareConfig) *string { return v.ImageVersion }).(pulumi.StringPtrOutput)
}

// Custom Python Package Index (PyPI) packages to be installed
// in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
// version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
// pinning it to a version specifier, use the empty string as the value.
func (o EnvironmentConfigSoftwareConfigOutput) PypiPackages() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentConfigSoftwareConfig) map[string]string { return v.PypiPackages }).(pulumi.StringMapOutput)
}

// -
// The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
// Can be set to '2' or '3'. If not specified, the default is '2'. Cannot be updated.
func (o EnvironmentConfigSoftwareConfigOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigSoftwareConfig) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// -
// The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-2.*.*.`
func (o EnvironmentConfigSoftwareConfigOutput) SchedulerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigSoftwareConfig) *int { return v.SchedulerCount }).(pulumi.IntPtrOutput)
}

type EnvironmentConfigSoftwareConfigPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigSoftwareConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigSoftwareConfig)(nil)).Elem()
}

func (o EnvironmentConfigSoftwareConfigPtrOutput) ToEnvironmentConfigSoftwareConfigPtrOutput() EnvironmentConfigSoftwareConfigPtrOutput {
	return o
}

func (o EnvironmentConfigSoftwareConfigPtrOutput) ToEnvironmentConfigSoftwareConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigSoftwareConfigPtrOutput {
	return o
}

func (o EnvironmentConfigSoftwareConfigPtrOutput) Elem() EnvironmentConfigSoftwareConfigOutput {
	return o.ApplyT(func(v *EnvironmentConfigSoftwareConfig) EnvironmentConfigSoftwareConfig {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfigSoftwareConfig
		return ret
	}).(EnvironmentConfigSoftwareConfigOutput)
}

// -
// (Optional) Apache Airflow configuration properties to override. Property keys contain the section and property names,
// separated by a hyphen, for example "core-dags_are_paused_at_creation".
func (o EnvironmentConfigSoftwareConfigPtrOutput) AirflowConfigOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentConfigSoftwareConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.AirflowConfigOverrides
	}).(pulumi.StringMapOutput)
}

// Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
// Environment variable names must match the regular expression `[a-zA-Z_][a-zA-Z0-9_]*`.
// They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
// `AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`), and they cannot match any of the following reserved names:
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		return nil
// 	})
// }
// ```
func (o EnvironmentConfigSoftwareConfigPtrOutput) EnvVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentConfigSoftwareConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvVariables
	}).(pulumi.StringMapOutput)
}

// -
// The version of the software running in the environment. This encapsulates both the version of Cloud Composer
// functionality and the version of Apache Airflow. It must match the regular expression
// `composer-[0-9]+\.[0-9]+(\.[0-9]+)?-airflow-[0-9]+\.[0-9]+(\.[0-9]+.*)?`.
// The Cloud Composer portion of the version is a semantic version.
// The portion of the image version following 'airflow-' is an official Apache Airflow repository release name.
// See [documentation](https://cloud.google.com/composer/docs/reference/rest/v1beta1/projects.locations.environments#softwareconfig)
// for allowed release names.
func (o EnvironmentConfigSoftwareConfigPtrOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigSoftwareConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageVersion
	}).(pulumi.StringPtrOutput)
}

// Custom Python Package Index (PyPI) packages to be installed
// in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
// version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
// pinning it to a version specifier, use the empty string as the value.
func (o EnvironmentConfigSoftwareConfigPtrOutput) PypiPackages() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EnvironmentConfigSoftwareConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.PypiPackages
	}).(pulumi.StringMapOutput)
}

// -
// The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
// Can be set to '2' or '3'. If not specified, the default is '2'. Cannot be updated.
func (o EnvironmentConfigSoftwareConfigPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigSoftwareConfig) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// -
// The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-2.*.*.`
func (o EnvironmentConfigSoftwareConfigPtrOutput) SchedulerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigSoftwareConfig) *int {
		if v == nil {
			return nil
		}
		return v.SchedulerCount
	}).(pulumi.IntPtrOutput)
}

type EnvironmentConfigWebServerConfig struct {
	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType string `pulumi:"machineType"`
}

// EnvironmentConfigWebServerConfigInput is an input type that accepts EnvironmentConfigWebServerConfigArgs and EnvironmentConfigWebServerConfigOutput values.
// You can construct a concrete instance of `EnvironmentConfigWebServerConfigInput` via:
//
//          EnvironmentConfigWebServerConfigArgs{...}
type EnvironmentConfigWebServerConfigInput interface {
	pulumi.Input

	ToEnvironmentConfigWebServerConfigOutput() EnvironmentConfigWebServerConfigOutput
	ToEnvironmentConfigWebServerConfigOutputWithContext(context.Context) EnvironmentConfigWebServerConfigOutput
}

type EnvironmentConfigWebServerConfigArgs struct {
	// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
	// composer-n1-webserver-4 or composer-n1-webserver-8.
	// Value custom is returned only in response, if Airflow web server parameters were
	// manually changed to a non-standard values.
	MachineType pulumi.StringInput `pulumi:"machineType"`
}

func (EnvironmentConfigWebServerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigWebServerConfig)(nil)).Elem()
}

func (i EnvironmentConfigWebServerConfigArgs) ToEnvironmentConfigWebServerConfigOutput() EnvironmentConfigWebServerConfigOutput {
	return i.ToEnvironmentConfigWebServerConfigOutputWithContext(context.Background())
}

func (i EnvironmentConfigWebServerConfigArgs) ToEnvironmentConfigWebServerConfigOutputWithContext(ctx context.Context) EnvironmentConfigWebServerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigWebServerConfigOutput)
}

func (i EnvironmentConfigWebServerConfigArgs) ToEnvironmentConfigWebServerConfigPtrOutput() EnvironmentConfigWebServerConfigPtrOutput {
	return i.ToEnvironmentConfigWebServerConfigPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigWebServerConfigArgs) ToEnvironmentConfigWebServerConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigWebServerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigWebServerConfigOutput).ToEnvironmentConfigWebServerConfigPtrOutputWithContext(ctx)
}

// EnvironmentConfigWebServerConfigPtrInput is an input type that accepts EnvironmentConfigWebServerConfigArgs, EnvironmentConfigWebServerConfigPtr and EnvironmentConfigWebServerConfigPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigWebServerConfigPtrInput` via:
//
//          EnvironmentConfigWebServerConfigArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigWebServerConfigPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigWebServerConfigPtrOutput() EnvironmentConfigWebServerConfigPtrOutput
	ToEnvironmentConfigWebServerConfigPtrOutputWithContext(context.Context) EnvironmentConfigWebServerConfigPtrOutput
}

type environmentConfigWebServerConfigPtrType EnvironmentConfigWebServerConfigArgs

func EnvironmentConfigWebServerConfigPtr(v *EnvironmentConfigWebServerConfigArgs) EnvironmentConfigWebServerConfigPtrInput {
	return (*environmentConfigWebServerConfigPtrType)(v)
}

func (*environmentConfigWebServerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigWebServerConfig)(nil)).Elem()
}

func (i *environmentConfigWebServerConfigPtrType) ToEnvironmentConfigWebServerConfigPtrOutput() EnvironmentConfigWebServerConfigPtrOutput {
	return i.ToEnvironmentConfigWebServerConfigPtrOutputWithContext(context.Background())
}

func (i *environmentConfigWebServerConfigPtrType) ToEnvironmentConfigWebServerConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigWebServerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigWebServerConfigPtrOutput)
}

type EnvironmentConfigWebServerConfigOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigWebServerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigWebServerConfig)(nil)).Elem()
}

func (o EnvironmentConfigWebServerConfigOutput) ToEnvironmentConfigWebServerConfigOutput() EnvironmentConfigWebServerConfigOutput {
	return o
}

func (o EnvironmentConfigWebServerConfigOutput) ToEnvironmentConfigWebServerConfigOutputWithContext(ctx context.Context) EnvironmentConfigWebServerConfigOutput {
	return o
}

func (o EnvironmentConfigWebServerConfigOutput) ToEnvironmentConfigWebServerConfigPtrOutput() EnvironmentConfigWebServerConfigPtrOutput {
	return o.ToEnvironmentConfigWebServerConfigPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigWebServerConfigOutput) ToEnvironmentConfigWebServerConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigWebServerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfigWebServerConfig) *EnvironmentConfigWebServerConfig {
		return &v
	}).(EnvironmentConfigWebServerConfigPtrOutput)
}

// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
// composer-n1-webserver-4 or composer-n1-webserver-8.
// Value custom is returned only in response, if Airflow web server parameters were
// manually changed to a non-standard values.
func (o EnvironmentConfigWebServerConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentConfigWebServerConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

type EnvironmentConfigWebServerConfigPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigWebServerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigWebServerConfig)(nil)).Elem()
}

func (o EnvironmentConfigWebServerConfigPtrOutput) ToEnvironmentConfigWebServerConfigPtrOutput() EnvironmentConfigWebServerConfigPtrOutput {
	return o
}

func (o EnvironmentConfigWebServerConfigPtrOutput) ToEnvironmentConfigWebServerConfigPtrOutputWithContext(ctx context.Context) EnvironmentConfigWebServerConfigPtrOutput {
	return o
}

func (o EnvironmentConfigWebServerConfigPtrOutput) Elem() EnvironmentConfigWebServerConfigOutput {
	return o.ApplyT(func(v *EnvironmentConfigWebServerConfig) EnvironmentConfigWebServerConfig {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfigWebServerConfig
		return ret
	}).(EnvironmentConfigWebServerConfigOutput)
}

// Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
// composer-n1-webserver-4 or composer-n1-webserver-8.
// Value custom is returned only in response, if Airflow web server parameters were
// manually changed to a non-standard values.
func (o EnvironmentConfigWebServerConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentConfigWebServerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.MachineType
	}).(pulumi.StringPtrOutput)
}

type EnvironmentConfigWebServerNetworkAccessControl struct {
	// -
	// A collection of allowed IP ranges with descriptions. Structure is documented below.
	AllowedIpRanges []EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange `pulumi:"allowedIpRanges"`
}

// EnvironmentConfigWebServerNetworkAccessControlInput is an input type that accepts EnvironmentConfigWebServerNetworkAccessControlArgs and EnvironmentConfigWebServerNetworkAccessControlOutput values.
// You can construct a concrete instance of `EnvironmentConfigWebServerNetworkAccessControlInput` via:
//
//          EnvironmentConfigWebServerNetworkAccessControlArgs{...}
type EnvironmentConfigWebServerNetworkAccessControlInput interface {
	pulumi.Input

	ToEnvironmentConfigWebServerNetworkAccessControlOutput() EnvironmentConfigWebServerNetworkAccessControlOutput
	ToEnvironmentConfigWebServerNetworkAccessControlOutputWithContext(context.Context) EnvironmentConfigWebServerNetworkAccessControlOutput
}

type EnvironmentConfigWebServerNetworkAccessControlArgs struct {
	// -
	// A collection of allowed IP ranges with descriptions. Structure is documented below.
	AllowedIpRanges EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayInput `pulumi:"allowedIpRanges"`
}

func (EnvironmentConfigWebServerNetworkAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigWebServerNetworkAccessControl)(nil)).Elem()
}

func (i EnvironmentConfigWebServerNetworkAccessControlArgs) ToEnvironmentConfigWebServerNetworkAccessControlOutput() EnvironmentConfigWebServerNetworkAccessControlOutput {
	return i.ToEnvironmentConfigWebServerNetworkAccessControlOutputWithContext(context.Background())
}

func (i EnvironmentConfigWebServerNetworkAccessControlArgs) ToEnvironmentConfigWebServerNetworkAccessControlOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigWebServerNetworkAccessControlOutput)
}

func (i EnvironmentConfigWebServerNetworkAccessControlArgs) ToEnvironmentConfigWebServerNetworkAccessControlPtrOutput() EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return i.ToEnvironmentConfigWebServerNetworkAccessControlPtrOutputWithContext(context.Background())
}

func (i EnvironmentConfigWebServerNetworkAccessControlArgs) ToEnvironmentConfigWebServerNetworkAccessControlPtrOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigWebServerNetworkAccessControlOutput).ToEnvironmentConfigWebServerNetworkAccessControlPtrOutputWithContext(ctx)
}

// EnvironmentConfigWebServerNetworkAccessControlPtrInput is an input type that accepts EnvironmentConfigWebServerNetworkAccessControlArgs, EnvironmentConfigWebServerNetworkAccessControlPtr and EnvironmentConfigWebServerNetworkAccessControlPtrOutput values.
// You can construct a concrete instance of `EnvironmentConfigWebServerNetworkAccessControlPtrInput` via:
//
//          EnvironmentConfigWebServerNetworkAccessControlArgs{...}
//
//  or:
//
//          nil
type EnvironmentConfigWebServerNetworkAccessControlPtrInput interface {
	pulumi.Input

	ToEnvironmentConfigWebServerNetworkAccessControlPtrOutput() EnvironmentConfigWebServerNetworkAccessControlPtrOutput
	ToEnvironmentConfigWebServerNetworkAccessControlPtrOutputWithContext(context.Context) EnvironmentConfigWebServerNetworkAccessControlPtrOutput
}

type environmentConfigWebServerNetworkAccessControlPtrType EnvironmentConfigWebServerNetworkAccessControlArgs

func EnvironmentConfigWebServerNetworkAccessControlPtr(v *EnvironmentConfigWebServerNetworkAccessControlArgs) EnvironmentConfigWebServerNetworkAccessControlPtrInput {
	return (*environmentConfigWebServerNetworkAccessControlPtrType)(v)
}

func (*environmentConfigWebServerNetworkAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigWebServerNetworkAccessControl)(nil)).Elem()
}

func (i *environmentConfigWebServerNetworkAccessControlPtrType) ToEnvironmentConfigWebServerNetworkAccessControlPtrOutput() EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return i.ToEnvironmentConfigWebServerNetworkAccessControlPtrOutputWithContext(context.Background())
}

func (i *environmentConfigWebServerNetworkAccessControlPtrType) ToEnvironmentConfigWebServerNetworkAccessControlPtrOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigWebServerNetworkAccessControlPtrOutput)
}

type EnvironmentConfigWebServerNetworkAccessControlOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigWebServerNetworkAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigWebServerNetworkAccessControl)(nil)).Elem()
}

func (o EnvironmentConfigWebServerNetworkAccessControlOutput) ToEnvironmentConfigWebServerNetworkAccessControlOutput() EnvironmentConfigWebServerNetworkAccessControlOutput {
	return o
}

func (o EnvironmentConfigWebServerNetworkAccessControlOutput) ToEnvironmentConfigWebServerNetworkAccessControlOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlOutput {
	return o
}

func (o EnvironmentConfigWebServerNetworkAccessControlOutput) ToEnvironmentConfigWebServerNetworkAccessControlPtrOutput() EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return o.ToEnvironmentConfigWebServerNetworkAccessControlPtrOutputWithContext(context.Background())
}

func (o EnvironmentConfigWebServerNetworkAccessControlOutput) ToEnvironmentConfigWebServerNetworkAccessControlPtrOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentConfigWebServerNetworkAccessControl) *EnvironmentConfigWebServerNetworkAccessControl {
		return &v
	}).(EnvironmentConfigWebServerNetworkAccessControlPtrOutput)
}

// -
// A collection of allowed IP ranges with descriptions. Structure is documented below.
func (o EnvironmentConfigWebServerNetworkAccessControlOutput) AllowedIpRanges() EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return o.ApplyT(func(v EnvironmentConfigWebServerNetworkAccessControl) []EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange {
		return v.AllowedIpRanges
	}).(EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput)
}

type EnvironmentConfigWebServerNetworkAccessControlPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigWebServerNetworkAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentConfigWebServerNetworkAccessControl)(nil)).Elem()
}

func (o EnvironmentConfigWebServerNetworkAccessControlPtrOutput) ToEnvironmentConfigWebServerNetworkAccessControlPtrOutput() EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return o
}

func (o EnvironmentConfigWebServerNetworkAccessControlPtrOutput) ToEnvironmentConfigWebServerNetworkAccessControlPtrOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlPtrOutput {
	return o
}

func (o EnvironmentConfigWebServerNetworkAccessControlPtrOutput) Elem() EnvironmentConfigWebServerNetworkAccessControlOutput {
	return o.ApplyT(func(v *EnvironmentConfigWebServerNetworkAccessControl) EnvironmentConfigWebServerNetworkAccessControl {
		if v != nil {
			return *v
		}
		var ret EnvironmentConfigWebServerNetworkAccessControl
		return ret
	}).(EnvironmentConfigWebServerNetworkAccessControlOutput)
}

// -
// A collection of allowed IP ranges with descriptions. Structure is documented below.
func (o EnvironmentConfigWebServerNetworkAccessControlPtrOutput) AllowedIpRanges() EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return o.ApplyT(func(v *EnvironmentConfigWebServerNetworkAccessControl) []EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange {
		if v == nil {
			return nil
		}
		return v.AllowedIpRanges
	}).(EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput)
}

type EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange struct {
	// A description of this ip range.
	Description *string `pulumi:"description"`
	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	// Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32` or `2001:0db8:0000:0042:0000:8a2e:0370:7334`.
	// IP range prefixes should be properly truncated. For example,
	// `1.2.3.4/24` should be truncated to `1.2.3.0/24`. Similarly, for IPv6, `2001:db8::1/32` should be truncated to `2001:db8::/32`.
	Value string `pulumi:"value"`
}

// EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeInput is an input type that accepts EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs and EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput values.
// You can construct a concrete instance of `EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeInput` via:
//
//          EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs{...}
type EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeInput interface {
	pulumi.Input

	ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput() EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput
	ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutputWithContext(context.Context) EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput
}

type EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs struct {
	// A description of this ip range.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	// Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32` or `2001:0db8:0000:0042:0000:8a2e:0370:7334`.
	// IP range prefixes should be properly truncated. For example,
	// `1.2.3.4/24` should be truncated to `1.2.3.0/24`. Similarly, for IPv6, `2001:db8::1/32` should be truncated to `2001:db8::/32`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)(nil)).Elem()
}

func (i EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs) ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput() EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return i.ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutputWithContext(context.Background())
}

func (i EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs) ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput)
}

// EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayInput is an input type that accepts EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray and EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput values.
// You can construct a concrete instance of `EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayInput` via:
//
//          EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray{ EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs{...} }
type EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayInput interface {
	pulumi.Input

	ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput() EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput
	ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutputWithContext(context.Context) EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput
}

type EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray []EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeInput

func (EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)(nil)).Elem()
}

func (i EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray) ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput() EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return i.ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutputWithContext(context.Background())
}

func (i EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray) ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput)
}

type EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)(nil)).Elem()
}

func (o EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput() EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return o
}

func (o EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return o
}

// A description of this ip range.
func (o EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP address or range, defined using CIDR notation, of requests that this rule applies to.
// Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32` or `2001:0db8:0000:0042:0000:8a2e:0370:7334`.
// IP range prefixes should be properly truncated. For example,
// `1.2.3.4/24` should be truncated to `1.2.3.0/24`. Similarly, for IPv6, `2001:db8::1/32` should be truncated to `2001:db8::/32`.
func (o EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)(nil)).Elem()
}

func (o EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput) ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput() EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return o
}

func (o EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput) ToEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutputWithContext(ctx context.Context) EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return o
}

func (o EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput) Index(i pulumi.IntInput) EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange {
		return vs[0].([]EnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)[vs[1].(int)]
	}).(EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput)
}

type GetEnvironmentConfig struct {
	AirflowUri                     string                                              `pulumi:"airflowUri"`
	DagGcsPrefix                   string                                              `pulumi:"dagGcsPrefix"`
	DatabaseConfigs                []GetEnvironmentConfigDatabaseConfig                `pulumi:"databaseConfigs"`
	EncryptionConfigs              []GetEnvironmentConfigEncryptionConfig              `pulumi:"encryptionConfigs"`
	GkeCluster                     string                                              `pulumi:"gkeCluster"`
	MaintenanceWindows             []GetEnvironmentConfigMaintenanceWindow             `pulumi:"maintenanceWindows"`
	NodeConfigs                    []GetEnvironmentConfigNodeConfig                    `pulumi:"nodeConfigs"`
	NodeCount                      int                                                 `pulumi:"nodeCount"`
	PrivateEnvironmentConfigs      []GetEnvironmentConfigPrivateEnvironmentConfig      `pulumi:"privateEnvironmentConfigs"`
	SoftwareConfigs                []GetEnvironmentConfigSoftwareConfig                `pulumi:"softwareConfigs"`
	WebServerConfigs               []GetEnvironmentConfigWebServerConfig               `pulumi:"webServerConfigs"`
	WebServerNetworkAccessControls []GetEnvironmentConfigWebServerNetworkAccessControl `pulumi:"webServerNetworkAccessControls"`
}

// GetEnvironmentConfigInput is an input type that accepts GetEnvironmentConfigArgs and GetEnvironmentConfigOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigInput` via:
//
//          GetEnvironmentConfigArgs{...}
type GetEnvironmentConfigInput interface {
	pulumi.Input

	ToGetEnvironmentConfigOutput() GetEnvironmentConfigOutput
	ToGetEnvironmentConfigOutputWithContext(context.Context) GetEnvironmentConfigOutput
}

type GetEnvironmentConfigArgs struct {
	AirflowUri                     pulumi.StringInput                                          `pulumi:"airflowUri"`
	DagGcsPrefix                   pulumi.StringInput                                          `pulumi:"dagGcsPrefix"`
	DatabaseConfigs                GetEnvironmentConfigDatabaseConfigArrayInput                `pulumi:"databaseConfigs"`
	EncryptionConfigs              GetEnvironmentConfigEncryptionConfigArrayInput              `pulumi:"encryptionConfigs"`
	GkeCluster                     pulumi.StringInput                                          `pulumi:"gkeCluster"`
	MaintenanceWindows             GetEnvironmentConfigMaintenanceWindowArrayInput             `pulumi:"maintenanceWindows"`
	NodeConfigs                    GetEnvironmentConfigNodeConfigArrayInput                    `pulumi:"nodeConfigs"`
	NodeCount                      pulumi.IntInput                                             `pulumi:"nodeCount"`
	PrivateEnvironmentConfigs      GetEnvironmentConfigPrivateEnvironmentConfigArrayInput      `pulumi:"privateEnvironmentConfigs"`
	SoftwareConfigs                GetEnvironmentConfigSoftwareConfigArrayInput                `pulumi:"softwareConfigs"`
	WebServerConfigs               GetEnvironmentConfigWebServerConfigArrayInput               `pulumi:"webServerConfigs"`
	WebServerNetworkAccessControls GetEnvironmentConfigWebServerNetworkAccessControlArrayInput `pulumi:"webServerNetworkAccessControls"`
}

func (GetEnvironmentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigArgs) ToGetEnvironmentConfigOutput() GetEnvironmentConfigOutput {
	return i.ToGetEnvironmentConfigOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigArgs) ToGetEnvironmentConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigOutput)
}

// GetEnvironmentConfigArrayInput is an input type that accepts GetEnvironmentConfigArray and GetEnvironmentConfigArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigArrayInput` via:
//
//          GetEnvironmentConfigArray{ GetEnvironmentConfigArgs{...} }
type GetEnvironmentConfigArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigArrayOutput() GetEnvironmentConfigArrayOutput
	ToGetEnvironmentConfigArrayOutputWithContext(context.Context) GetEnvironmentConfigArrayOutput
}

type GetEnvironmentConfigArray []GetEnvironmentConfigInput

func (GetEnvironmentConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigArray) ToGetEnvironmentConfigArrayOutput() GetEnvironmentConfigArrayOutput {
	return i.ToGetEnvironmentConfigArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigArray) ToGetEnvironmentConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigArrayOutput)
}

type GetEnvironmentConfigOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigOutput) ToGetEnvironmentConfigOutput() GetEnvironmentConfigOutput {
	return o
}

func (o GetEnvironmentConfigOutput) ToGetEnvironmentConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigOutput {
	return o
}

func (o GetEnvironmentConfigOutput) AirflowUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) string { return v.AirflowUri }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigOutput) DagGcsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) string { return v.DagGcsPrefix }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigOutput) DatabaseConfigs() GetEnvironmentConfigDatabaseConfigArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) []GetEnvironmentConfigDatabaseConfig { return v.DatabaseConfigs }).(GetEnvironmentConfigDatabaseConfigArrayOutput)
}

func (o GetEnvironmentConfigOutput) EncryptionConfigs() GetEnvironmentConfigEncryptionConfigArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) []GetEnvironmentConfigEncryptionConfig { return v.EncryptionConfigs }).(GetEnvironmentConfigEncryptionConfigArrayOutput)
}

func (o GetEnvironmentConfigOutput) GkeCluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) string { return v.GkeCluster }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigOutput) MaintenanceWindows() GetEnvironmentConfigMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) []GetEnvironmentConfigMaintenanceWindow { return v.MaintenanceWindows }).(GetEnvironmentConfigMaintenanceWindowArrayOutput)
}

func (o GetEnvironmentConfigOutput) NodeConfigs() GetEnvironmentConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) []GetEnvironmentConfigNodeConfig { return v.NodeConfigs }).(GetEnvironmentConfigNodeConfigArrayOutput)
}

func (o GetEnvironmentConfigOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) int { return v.NodeCount }).(pulumi.IntOutput)
}

func (o GetEnvironmentConfigOutput) PrivateEnvironmentConfigs() GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) []GetEnvironmentConfigPrivateEnvironmentConfig {
		return v.PrivateEnvironmentConfigs
	}).(GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput)
}

func (o GetEnvironmentConfigOutput) SoftwareConfigs() GetEnvironmentConfigSoftwareConfigArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) []GetEnvironmentConfigSoftwareConfig { return v.SoftwareConfigs }).(GetEnvironmentConfigSoftwareConfigArrayOutput)
}

func (o GetEnvironmentConfigOutput) WebServerConfigs() GetEnvironmentConfigWebServerConfigArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) []GetEnvironmentConfigWebServerConfig { return v.WebServerConfigs }).(GetEnvironmentConfigWebServerConfigArrayOutput)
}

func (o GetEnvironmentConfigOutput) WebServerNetworkAccessControls() GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfig) []GetEnvironmentConfigWebServerNetworkAccessControl {
		return v.WebServerNetworkAccessControls
	}).(GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput)
}

type GetEnvironmentConfigArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigArrayOutput) ToGetEnvironmentConfigArrayOutput() GetEnvironmentConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigArrayOutput) ToGetEnvironmentConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfig {
		return vs[0].([]GetEnvironmentConfig)[vs[1].(int)]
	}).(GetEnvironmentConfigOutput)
}

type GetEnvironmentConfigDatabaseConfig struct {
	MachineType string `pulumi:"machineType"`
}

// GetEnvironmentConfigDatabaseConfigInput is an input type that accepts GetEnvironmentConfigDatabaseConfigArgs and GetEnvironmentConfigDatabaseConfigOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigDatabaseConfigInput` via:
//
//          GetEnvironmentConfigDatabaseConfigArgs{...}
type GetEnvironmentConfigDatabaseConfigInput interface {
	pulumi.Input

	ToGetEnvironmentConfigDatabaseConfigOutput() GetEnvironmentConfigDatabaseConfigOutput
	ToGetEnvironmentConfigDatabaseConfigOutputWithContext(context.Context) GetEnvironmentConfigDatabaseConfigOutput
}

type GetEnvironmentConfigDatabaseConfigArgs struct {
	MachineType pulumi.StringInput `pulumi:"machineType"`
}

func (GetEnvironmentConfigDatabaseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigDatabaseConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigDatabaseConfigArgs) ToGetEnvironmentConfigDatabaseConfigOutput() GetEnvironmentConfigDatabaseConfigOutput {
	return i.ToGetEnvironmentConfigDatabaseConfigOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigDatabaseConfigArgs) ToGetEnvironmentConfigDatabaseConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigDatabaseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigDatabaseConfigOutput)
}

// GetEnvironmentConfigDatabaseConfigArrayInput is an input type that accepts GetEnvironmentConfigDatabaseConfigArray and GetEnvironmentConfigDatabaseConfigArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigDatabaseConfigArrayInput` via:
//
//          GetEnvironmentConfigDatabaseConfigArray{ GetEnvironmentConfigDatabaseConfigArgs{...} }
type GetEnvironmentConfigDatabaseConfigArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigDatabaseConfigArrayOutput() GetEnvironmentConfigDatabaseConfigArrayOutput
	ToGetEnvironmentConfigDatabaseConfigArrayOutputWithContext(context.Context) GetEnvironmentConfigDatabaseConfigArrayOutput
}

type GetEnvironmentConfigDatabaseConfigArray []GetEnvironmentConfigDatabaseConfigInput

func (GetEnvironmentConfigDatabaseConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigDatabaseConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigDatabaseConfigArray) ToGetEnvironmentConfigDatabaseConfigArrayOutput() GetEnvironmentConfigDatabaseConfigArrayOutput {
	return i.ToGetEnvironmentConfigDatabaseConfigArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigDatabaseConfigArray) ToGetEnvironmentConfigDatabaseConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigDatabaseConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigDatabaseConfigArrayOutput)
}

type GetEnvironmentConfigDatabaseConfigOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigDatabaseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigDatabaseConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigDatabaseConfigOutput) ToGetEnvironmentConfigDatabaseConfigOutput() GetEnvironmentConfigDatabaseConfigOutput {
	return o
}

func (o GetEnvironmentConfigDatabaseConfigOutput) ToGetEnvironmentConfigDatabaseConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigDatabaseConfigOutput {
	return o
}

func (o GetEnvironmentConfigDatabaseConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigDatabaseConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

type GetEnvironmentConfigDatabaseConfigArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigDatabaseConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigDatabaseConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigDatabaseConfigArrayOutput) ToGetEnvironmentConfigDatabaseConfigArrayOutput() GetEnvironmentConfigDatabaseConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigDatabaseConfigArrayOutput) ToGetEnvironmentConfigDatabaseConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigDatabaseConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigDatabaseConfigArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigDatabaseConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigDatabaseConfig {
		return vs[0].([]GetEnvironmentConfigDatabaseConfig)[vs[1].(int)]
	}).(GetEnvironmentConfigDatabaseConfigOutput)
}

type GetEnvironmentConfigEncryptionConfig struct {
	KmsKeyName string `pulumi:"kmsKeyName"`
}

// GetEnvironmentConfigEncryptionConfigInput is an input type that accepts GetEnvironmentConfigEncryptionConfigArgs and GetEnvironmentConfigEncryptionConfigOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigEncryptionConfigInput` via:
//
//          GetEnvironmentConfigEncryptionConfigArgs{...}
type GetEnvironmentConfigEncryptionConfigInput interface {
	pulumi.Input

	ToGetEnvironmentConfigEncryptionConfigOutput() GetEnvironmentConfigEncryptionConfigOutput
	ToGetEnvironmentConfigEncryptionConfigOutputWithContext(context.Context) GetEnvironmentConfigEncryptionConfigOutput
}

type GetEnvironmentConfigEncryptionConfigArgs struct {
	KmsKeyName pulumi.StringInput `pulumi:"kmsKeyName"`
}

func (GetEnvironmentConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigEncryptionConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigEncryptionConfigArgs) ToGetEnvironmentConfigEncryptionConfigOutput() GetEnvironmentConfigEncryptionConfigOutput {
	return i.ToGetEnvironmentConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigEncryptionConfigArgs) ToGetEnvironmentConfigEncryptionConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigEncryptionConfigOutput)
}

// GetEnvironmentConfigEncryptionConfigArrayInput is an input type that accepts GetEnvironmentConfigEncryptionConfigArray and GetEnvironmentConfigEncryptionConfigArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigEncryptionConfigArrayInput` via:
//
//          GetEnvironmentConfigEncryptionConfigArray{ GetEnvironmentConfigEncryptionConfigArgs{...} }
type GetEnvironmentConfigEncryptionConfigArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigEncryptionConfigArrayOutput() GetEnvironmentConfigEncryptionConfigArrayOutput
	ToGetEnvironmentConfigEncryptionConfigArrayOutputWithContext(context.Context) GetEnvironmentConfigEncryptionConfigArrayOutput
}

type GetEnvironmentConfigEncryptionConfigArray []GetEnvironmentConfigEncryptionConfigInput

func (GetEnvironmentConfigEncryptionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigEncryptionConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigEncryptionConfigArray) ToGetEnvironmentConfigEncryptionConfigArrayOutput() GetEnvironmentConfigEncryptionConfigArrayOutput {
	return i.ToGetEnvironmentConfigEncryptionConfigArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigEncryptionConfigArray) ToGetEnvironmentConfigEncryptionConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigEncryptionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigEncryptionConfigArrayOutput)
}

type GetEnvironmentConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigEncryptionConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigEncryptionConfigOutput) ToGetEnvironmentConfigEncryptionConfigOutput() GetEnvironmentConfigEncryptionConfigOutput {
	return o
}

func (o GetEnvironmentConfigEncryptionConfigOutput) ToGetEnvironmentConfigEncryptionConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigEncryptionConfigOutput {
	return o
}

func (o GetEnvironmentConfigEncryptionConfigOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigEncryptionConfig) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type GetEnvironmentConfigEncryptionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigEncryptionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigEncryptionConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigEncryptionConfigArrayOutput) ToGetEnvironmentConfigEncryptionConfigArrayOutput() GetEnvironmentConfigEncryptionConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigEncryptionConfigArrayOutput) ToGetEnvironmentConfigEncryptionConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigEncryptionConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigEncryptionConfigArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigEncryptionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigEncryptionConfig {
		return vs[0].([]GetEnvironmentConfigEncryptionConfig)[vs[1].(int)]
	}).(GetEnvironmentConfigEncryptionConfigOutput)
}

type GetEnvironmentConfigMaintenanceWindow struct {
	EndTime    string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime  string `pulumi:"startTime"`
}

// GetEnvironmentConfigMaintenanceWindowInput is an input type that accepts GetEnvironmentConfigMaintenanceWindowArgs and GetEnvironmentConfigMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigMaintenanceWindowInput` via:
//
//          GetEnvironmentConfigMaintenanceWindowArgs{...}
type GetEnvironmentConfigMaintenanceWindowInput interface {
	pulumi.Input

	ToGetEnvironmentConfigMaintenanceWindowOutput() GetEnvironmentConfigMaintenanceWindowOutput
	ToGetEnvironmentConfigMaintenanceWindowOutputWithContext(context.Context) GetEnvironmentConfigMaintenanceWindowOutput
}

type GetEnvironmentConfigMaintenanceWindowArgs struct {
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	StartTime  pulumi.StringInput `pulumi:"startTime"`
}

func (GetEnvironmentConfigMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigMaintenanceWindow)(nil)).Elem()
}

func (i GetEnvironmentConfigMaintenanceWindowArgs) ToGetEnvironmentConfigMaintenanceWindowOutput() GetEnvironmentConfigMaintenanceWindowOutput {
	return i.ToGetEnvironmentConfigMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigMaintenanceWindowArgs) ToGetEnvironmentConfigMaintenanceWindowOutputWithContext(ctx context.Context) GetEnvironmentConfigMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigMaintenanceWindowOutput)
}

// GetEnvironmentConfigMaintenanceWindowArrayInput is an input type that accepts GetEnvironmentConfigMaintenanceWindowArray and GetEnvironmentConfigMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigMaintenanceWindowArrayInput` via:
//
//          GetEnvironmentConfigMaintenanceWindowArray{ GetEnvironmentConfigMaintenanceWindowArgs{...} }
type GetEnvironmentConfigMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigMaintenanceWindowArrayOutput() GetEnvironmentConfigMaintenanceWindowArrayOutput
	ToGetEnvironmentConfigMaintenanceWindowArrayOutputWithContext(context.Context) GetEnvironmentConfigMaintenanceWindowArrayOutput
}

type GetEnvironmentConfigMaintenanceWindowArray []GetEnvironmentConfigMaintenanceWindowInput

func (GetEnvironmentConfigMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigMaintenanceWindow)(nil)).Elem()
}

func (i GetEnvironmentConfigMaintenanceWindowArray) ToGetEnvironmentConfigMaintenanceWindowArrayOutput() GetEnvironmentConfigMaintenanceWindowArrayOutput {
	return i.ToGetEnvironmentConfigMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigMaintenanceWindowArray) ToGetEnvironmentConfigMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigMaintenanceWindowArrayOutput)
}

type GetEnvironmentConfigMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigMaintenanceWindow)(nil)).Elem()
}

func (o GetEnvironmentConfigMaintenanceWindowOutput) ToGetEnvironmentConfigMaintenanceWindowOutput() GetEnvironmentConfigMaintenanceWindowOutput {
	return o
}

func (o GetEnvironmentConfigMaintenanceWindowOutput) ToGetEnvironmentConfigMaintenanceWindowOutputWithContext(ctx context.Context) GetEnvironmentConfigMaintenanceWindowOutput {
	return o
}

func (o GetEnvironmentConfigMaintenanceWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigMaintenanceWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigMaintenanceWindowOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigMaintenanceWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetEnvironmentConfigMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigMaintenanceWindow)(nil)).Elem()
}

func (o GetEnvironmentConfigMaintenanceWindowArrayOutput) ToGetEnvironmentConfigMaintenanceWindowArrayOutput() GetEnvironmentConfigMaintenanceWindowArrayOutput {
	return o
}

func (o GetEnvironmentConfigMaintenanceWindowArrayOutput) ToGetEnvironmentConfigMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigMaintenanceWindowArrayOutput {
	return o
}

func (o GetEnvironmentConfigMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigMaintenanceWindow {
		return vs[0].([]GetEnvironmentConfigMaintenanceWindow)[vs[1].(int)]
	}).(GetEnvironmentConfigMaintenanceWindowOutput)
}

type GetEnvironmentConfigNodeConfig struct {
	DiskSizeGb           int                                                `pulumi:"diskSizeGb"`
	IpAllocationPolicies []GetEnvironmentConfigNodeConfigIpAllocationPolicy `pulumi:"ipAllocationPolicies"`
	MachineType          string                                             `pulumi:"machineType"`
	MaxPodsPerNode       int                                                `pulumi:"maxPodsPerNode"`
	Network              string                                             `pulumi:"network"`
	OauthScopes          []string                                           `pulumi:"oauthScopes"`
	ServiceAccount       string                                             `pulumi:"serviceAccount"`
	Subnetwork           string                                             `pulumi:"subnetwork"`
	Tags                 []string                                           `pulumi:"tags"`
	Zone                 string                                             `pulumi:"zone"`
}

// GetEnvironmentConfigNodeConfigInput is an input type that accepts GetEnvironmentConfigNodeConfigArgs and GetEnvironmentConfigNodeConfigOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigNodeConfigInput` via:
//
//          GetEnvironmentConfigNodeConfigArgs{...}
type GetEnvironmentConfigNodeConfigInput interface {
	pulumi.Input

	ToGetEnvironmentConfigNodeConfigOutput() GetEnvironmentConfigNodeConfigOutput
	ToGetEnvironmentConfigNodeConfigOutputWithContext(context.Context) GetEnvironmentConfigNodeConfigOutput
}

type GetEnvironmentConfigNodeConfigArgs struct {
	DiskSizeGb           pulumi.IntInput                                            `pulumi:"diskSizeGb"`
	IpAllocationPolicies GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayInput `pulumi:"ipAllocationPolicies"`
	MachineType          pulumi.StringInput                                         `pulumi:"machineType"`
	MaxPodsPerNode       pulumi.IntInput                                            `pulumi:"maxPodsPerNode"`
	Network              pulumi.StringInput                                         `pulumi:"network"`
	OauthScopes          pulumi.StringArrayInput                                    `pulumi:"oauthScopes"`
	ServiceAccount       pulumi.StringInput                                         `pulumi:"serviceAccount"`
	Subnetwork           pulumi.StringInput                                         `pulumi:"subnetwork"`
	Tags                 pulumi.StringArrayInput                                    `pulumi:"tags"`
	Zone                 pulumi.StringInput                                         `pulumi:"zone"`
}

func (GetEnvironmentConfigNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigNodeConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigNodeConfigArgs) ToGetEnvironmentConfigNodeConfigOutput() GetEnvironmentConfigNodeConfigOutput {
	return i.ToGetEnvironmentConfigNodeConfigOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigNodeConfigArgs) ToGetEnvironmentConfigNodeConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigNodeConfigOutput)
}

// GetEnvironmentConfigNodeConfigArrayInput is an input type that accepts GetEnvironmentConfigNodeConfigArray and GetEnvironmentConfigNodeConfigArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigNodeConfigArrayInput` via:
//
//          GetEnvironmentConfigNodeConfigArray{ GetEnvironmentConfigNodeConfigArgs{...} }
type GetEnvironmentConfigNodeConfigArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigNodeConfigArrayOutput() GetEnvironmentConfigNodeConfigArrayOutput
	ToGetEnvironmentConfigNodeConfigArrayOutputWithContext(context.Context) GetEnvironmentConfigNodeConfigArrayOutput
}

type GetEnvironmentConfigNodeConfigArray []GetEnvironmentConfigNodeConfigInput

func (GetEnvironmentConfigNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigNodeConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigNodeConfigArray) ToGetEnvironmentConfigNodeConfigArrayOutput() GetEnvironmentConfigNodeConfigArrayOutput {
	return i.ToGetEnvironmentConfigNodeConfigArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigNodeConfigArray) ToGetEnvironmentConfigNodeConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigNodeConfigArrayOutput)
}

type GetEnvironmentConfigNodeConfigOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigNodeConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigNodeConfigOutput) ToGetEnvironmentConfigNodeConfigOutput() GetEnvironmentConfigNodeConfigOutput {
	return o
}

func (o GetEnvironmentConfigNodeConfigOutput) ToGetEnvironmentConfigNodeConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigNodeConfigOutput {
	return o
}

func (o GetEnvironmentConfigNodeConfigOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

func (o GetEnvironmentConfigNodeConfigOutput) IpAllocationPolicies() GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) []GetEnvironmentConfigNodeConfigIpAllocationPolicy {
		return v.IpAllocationPolicies
	}).(GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput)
}

func (o GetEnvironmentConfigNodeConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigNodeConfigOutput) MaxPodsPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) int { return v.MaxPodsPerNode }).(pulumi.IntOutput)
}

func (o GetEnvironmentConfigNodeConfigOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) string { return v.Network }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o GetEnvironmentConfigNodeConfigOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigNodeConfigOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) string { return v.Subnetwork }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetEnvironmentConfigNodeConfigOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfig) string { return v.Zone }).(pulumi.StringOutput)
}

type GetEnvironmentConfigNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigNodeConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigNodeConfigArrayOutput) ToGetEnvironmentConfigNodeConfigArrayOutput() GetEnvironmentConfigNodeConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigNodeConfigArrayOutput) ToGetEnvironmentConfigNodeConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigNodeConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigNodeConfigArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigNodeConfig {
		return vs[0].([]GetEnvironmentConfigNodeConfig)[vs[1].(int)]
	}).(GetEnvironmentConfigNodeConfigOutput)
}

type GetEnvironmentConfigNodeConfigIpAllocationPolicy struct {
	ClusterIpv4CidrBlock       string `pulumi:"clusterIpv4CidrBlock"`
	ClusterSecondaryRangeName  string `pulumi:"clusterSecondaryRangeName"`
	ServicesIpv4CidrBlock      string `pulumi:"servicesIpv4CidrBlock"`
	ServicesSecondaryRangeName string `pulumi:"servicesSecondaryRangeName"`
	UseIpAliases               bool   `pulumi:"useIpAliases"`
}

// GetEnvironmentConfigNodeConfigIpAllocationPolicyInput is an input type that accepts GetEnvironmentConfigNodeConfigIpAllocationPolicyArgs and GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigNodeConfigIpAllocationPolicyInput` via:
//
//          GetEnvironmentConfigNodeConfigIpAllocationPolicyArgs{...}
type GetEnvironmentConfigNodeConfigIpAllocationPolicyInput interface {
	pulumi.Input

	ToGetEnvironmentConfigNodeConfigIpAllocationPolicyOutput() GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput
	ToGetEnvironmentConfigNodeConfigIpAllocationPolicyOutputWithContext(context.Context) GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput
}

type GetEnvironmentConfigNodeConfigIpAllocationPolicyArgs struct {
	ClusterIpv4CidrBlock       pulumi.StringInput `pulumi:"clusterIpv4CidrBlock"`
	ClusterSecondaryRangeName  pulumi.StringInput `pulumi:"clusterSecondaryRangeName"`
	ServicesIpv4CidrBlock      pulumi.StringInput `pulumi:"servicesIpv4CidrBlock"`
	ServicesSecondaryRangeName pulumi.StringInput `pulumi:"servicesSecondaryRangeName"`
	UseIpAliases               pulumi.BoolInput   `pulumi:"useIpAliases"`
}

func (GetEnvironmentConfigNodeConfigIpAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigNodeConfigIpAllocationPolicy)(nil)).Elem()
}

func (i GetEnvironmentConfigNodeConfigIpAllocationPolicyArgs) ToGetEnvironmentConfigNodeConfigIpAllocationPolicyOutput() GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return i.ToGetEnvironmentConfigNodeConfigIpAllocationPolicyOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigNodeConfigIpAllocationPolicyArgs) ToGetEnvironmentConfigNodeConfigIpAllocationPolicyOutputWithContext(ctx context.Context) GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput)
}

// GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayInput is an input type that accepts GetEnvironmentConfigNodeConfigIpAllocationPolicyArray and GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayInput` via:
//
//          GetEnvironmentConfigNodeConfigIpAllocationPolicyArray{ GetEnvironmentConfigNodeConfigIpAllocationPolicyArgs{...} }
type GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput() GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput
	ToGetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutputWithContext(context.Context) GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput
}

type GetEnvironmentConfigNodeConfigIpAllocationPolicyArray []GetEnvironmentConfigNodeConfigIpAllocationPolicyInput

func (GetEnvironmentConfigNodeConfigIpAllocationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigNodeConfigIpAllocationPolicy)(nil)).Elem()
}

func (i GetEnvironmentConfigNodeConfigIpAllocationPolicyArray) ToGetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput() GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput {
	return i.ToGetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigNodeConfigIpAllocationPolicyArray) ToGetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput)
}

type GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigNodeConfigIpAllocationPolicy)(nil)).Elem()
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput) ToGetEnvironmentConfigNodeConfigIpAllocationPolicyOutput() GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return o
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput) ToGetEnvironmentConfigNodeConfigIpAllocationPolicyOutputWithContext(ctx context.Context) GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return o
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput) ClusterIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfigIpAllocationPolicy) string { return v.ClusterIpv4CidrBlock }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput) ClusterSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfigIpAllocationPolicy) string { return v.ClusterSecondaryRangeName }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput) ServicesIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfigIpAllocationPolicy) string { return v.ServicesIpv4CidrBlock }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput) ServicesSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfigIpAllocationPolicy) string { return v.ServicesSecondaryRangeName }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput) UseIpAliases() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnvironmentConfigNodeConfigIpAllocationPolicy) bool { return v.UseIpAliases }).(pulumi.BoolOutput)
}

type GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigNodeConfigIpAllocationPolicy)(nil)).Elem()
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput) ToGetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput() GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput {
	return o
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput) ToGetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput {
	return o
}

func (o GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigNodeConfigIpAllocationPolicy {
		return vs[0].([]GetEnvironmentConfigNodeConfigIpAllocationPolicy)[vs[1].(int)]
	}).(GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput)
}

type GetEnvironmentConfigPrivateEnvironmentConfig struct {
	CloudSqlIpv4CidrBlock  string `pulumi:"cloudSqlIpv4CidrBlock"`
	EnablePrivateEndpoint  bool   `pulumi:"enablePrivateEndpoint"`
	MasterIpv4CidrBlock    string `pulumi:"masterIpv4CidrBlock"`
	WebServerIpv4CidrBlock string `pulumi:"webServerIpv4CidrBlock"`
}

// GetEnvironmentConfigPrivateEnvironmentConfigInput is an input type that accepts GetEnvironmentConfigPrivateEnvironmentConfigArgs and GetEnvironmentConfigPrivateEnvironmentConfigOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigPrivateEnvironmentConfigInput` via:
//
//          GetEnvironmentConfigPrivateEnvironmentConfigArgs{...}
type GetEnvironmentConfigPrivateEnvironmentConfigInput interface {
	pulumi.Input

	ToGetEnvironmentConfigPrivateEnvironmentConfigOutput() GetEnvironmentConfigPrivateEnvironmentConfigOutput
	ToGetEnvironmentConfigPrivateEnvironmentConfigOutputWithContext(context.Context) GetEnvironmentConfigPrivateEnvironmentConfigOutput
}

type GetEnvironmentConfigPrivateEnvironmentConfigArgs struct {
	CloudSqlIpv4CidrBlock  pulumi.StringInput `pulumi:"cloudSqlIpv4CidrBlock"`
	EnablePrivateEndpoint  pulumi.BoolInput   `pulumi:"enablePrivateEndpoint"`
	MasterIpv4CidrBlock    pulumi.StringInput `pulumi:"masterIpv4CidrBlock"`
	WebServerIpv4CidrBlock pulumi.StringInput `pulumi:"webServerIpv4CidrBlock"`
}

func (GetEnvironmentConfigPrivateEnvironmentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigPrivateEnvironmentConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigPrivateEnvironmentConfigArgs) ToGetEnvironmentConfigPrivateEnvironmentConfigOutput() GetEnvironmentConfigPrivateEnvironmentConfigOutput {
	return i.ToGetEnvironmentConfigPrivateEnvironmentConfigOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigPrivateEnvironmentConfigArgs) ToGetEnvironmentConfigPrivateEnvironmentConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigPrivateEnvironmentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigPrivateEnvironmentConfigOutput)
}

// GetEnvironmentConfigPrivateEnvironmentConfigArrayInput is an input type that accepts GetEnvironmentConfigPrivateEnvironmentConfigArray and GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigPrivateEnvironmentConfigArrayInput` via:
//
//          GetEnvironmentConfigPrivateEnvironmentConfigArray{ GetEnvironmentConfigPrivateEnvironmentConfigArgs{...} }
type GetEnvironmentConfigPrivateEnvironmentConfigArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigPrivateEnvironmentConfigArrayOutput() GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput
	ToGetEnvironmentConfigPrivateEnvironmentConfigArrayOutputWithContext(context.Context) GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput
}

type GetEnvironmentConfigPrivateEnvironmentConfigArray []GetEnvironmentConfigPrivateEnvironmentConfigInput

func (GetEnvironmentConfigPrivateEnvironmentConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigPrivateEnvironmentConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigPrivateEnvironmentConfigArray) ToGetEnvironmentConfigPrivateEnvironmentConfigArrayOutput() GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput {
	return i.ToGetEnvironmentConfigPrivateEnvironmentConfigArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigPrivateEnvironmentConfigArray) ToGetEnvironmentConfigPrivateEnvironmentConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput)
}

type GetEnvironmentConfigPrivateEnvironmentConfigOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigPrivateEnvironmentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigPrivateEnvironmentConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigPrivateEnvironmentConfigOutput) ToGetEnvironmentConfigPrivateEnvironmentConfigOutput() GetEnvironmentConfigPrivateEnvironmentConfigOutput {
	return o
}

func (o GetEnvironmentConfigPrivateEnvironmentConfigOutput) ToGetEnvironmentConfigPrivateEnvironmentConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigPrivateEnvironmentConfigOutput {
	return o
}

func (o GetEnvironmentConfigPrivateEnvironmentConfigOutput) CloudSqlIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigPrivateEnvironmentConfig) string { return v.CloudSqlIpv4CidrBlock }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigPrivateEnvironmentConfigOutput) EnablePrivateEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnvironmentConfigPrivateEnvironmentConfig) bool { return v.EnablePrivateEndpoint }).(pulumi.BoolOutput)
}

func (o GetEnvironmentConfigPrivateEnvironmentConfigOutput) MasterIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigPrivateEnvironmentConfig) string { return v.MasterIpv4CidrBlock }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigPrivateEnvironmentConfigOutput) WebServerIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigPrivateEnvironmentConfig) string { return v.WebServerIpv4CidrBlock }).(pulumi.StringOutput)
}

type GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigPrivateEnvironmentConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput) ToGetEnvironmentConfigPrivateEnvironmentConfigArrayOutput() GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput) ToGetEnvironmentConfigPrivateEnvironmentConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigPrivateEnvironmentConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigPrivateEnvironmentConfig {
		return vs[0].([]GetEnvironmentConfigPrivateEnvironmentConfig)[vs[1].(int)]
	}).(GetEnvironmentConfigPrivateEnvironmentConfigOutput)
}

type GetEnvironmentConfigSoftwareConfig struct {
	AirflowConfigOverrides map[string]string `pulumi:"airflowConfigOverrides"`
	EnvVariables           map[string]string `pulumi:"envVariables"`
	ImageVersion           string            `pulumi:"imageVersion"`
	PypiPackages           map[string]string `pulumi:"pypiPackages"`
	PythonVersion          string            `pulumi:"pythonVersion"`
	SchedulerCount         int               `pulumi:"schedulerCount"`
}

// GetEnvironmentConfigSoftwareConfigInput is an input type that accepts GetEnvironmentConfigSoftwareConfigArgs and GetEnvironmentConfigSoftwareConfigOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigSoftwareConfigInput` via:
//
//          GetEnvironmentConfigSoftwareConfigArgs{...}
type GetEnvironmentConfigSoftwareConfigInput interface {
	pulumi.Input

	ToGetEnvironmentConfigSoftwareConfigOutput() GetEnvironmentConfigSoftwareConfigOutput
	ToGetEnvironmentConfigSoftwareConfigOutputWithContext(context.Context) GetEnvironmentConfigSoftwareConfigOutput
}

type GetEnvironmentConfigSoftwareConfigArgs struct {
	AirflowConfigOverrides pulumi.StringMapInput `pulumi:"airflowConfigOverrides"`
	EnvVariables           pulumi.StringMapInput `pulumi:"envVariables"`
	ImageVersion           pulumi.StringInput    `pulumi:"imageVersion"`
	PypiPackages           pulumi.StringMapInput `pulumi:"pypiPackages"`
	PythonVersion          pulumi.StringInput    `pulumi:"pythonVersion"`
	SchedulerCount         pulumi.IntInput       `pulumi:"schedulerCount"`
}

func (GetEnvironmentConfigSoftwareConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigSoftwareConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigSoftwareConfigArgs) ToGetEnvironmentConfigSoftwareConfigOutput() GetEnvironmentConfigSoftwareConfigOutput {
	return i.ToGetEnvironmentConfigSoftwareConfigOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigSoftwareConfigArgs) ToGetEnvironmentConfigSoftwareConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigSoftwareConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigSoftwareConfigOutput)
}

// GetEnvironmentConfigSoftwareConfigArrayInput is an input type that accepts GetEnvironmentConfigSoftwareConfigArray and GetEnvironmentConfigSoftwareConfigArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigSoftwareConfigArrayInput` via:
//
//          GetEnvironmentConfigSoftwareConfigArray{ GetEnvironmentConfigSoftwareConfigArgs{...} }
type GetEnvironmentConfigSoftwareConfigArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigSoftwareConfigArrayOutput() GetEnvironmentConfigSoftwareConfigArrayOutput
	ToGetEnvironmentConfigSoftwareConfigArrayOutputWithContext(context.Context) GetEnvironmentConfigSoftwareConfigArrayOutput
}

type GetEnvironmentConfigSoftwareConfigArray []GetEnvironmentConfigSoftwareConfigInput

func (GetEnvironmentConfigSoftwareConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigSoftwareConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigSoftwareConfigArray) ToGetEnvironmentConfigSoftwareConfigArrayOutput() GetEnvironmentConfigSoftwareConfigArrayOutput {
	return i.ToGetEnvironmentConfigSoftwareConfigArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigSoftwareConfigArray) ToGetEnvironmentConfigSoftwareConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigSoftwareConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigSoftwareConfigArrayOutput)
}

type GetEnvironmentConfigSoftwareConfigOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigSoftwareConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigSoftwareConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigSoftwareConfigOutput) ToGetEnvironmentConfigSoftwareConfigOutput() GetEnvironmentConfigSoftwareConfigOutput {
	return o
}

func (o GetEnvironmentConfigSoftwareConfigOutput) ToGetEnvironmentConfigSoftwareConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigSoftwareConfigOutput {
	return o
}

func (o GetEnvironmentConfigSoftwareConfigOutput) AirflowConfigOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEnvironmentConfigSoftwareConfig) map[string]string { return v.AirflowConfigOverrides }).(pulumi.StringMapOutput)
}

func (o GetEnvironmentConfigSoftwareConfigOutput) EnvVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEnvironmentConfigSoftwareConfig) map[string]string { return v.EnvVariables }).(pulumi.StringMapOutput)
}

func (o GetEnvironmentConfigSoftwareConfigOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigSoftwareConfig) string { return v.ImageVersion }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigSoftwareConfigOutput) PypiPackages() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEnvironmentConfigSoftwareConfig) map[string]string { return v.PypiPackages }).(pulumi.StringMapOutput)
}

func (o GetEnvironmentConfigSoftwareConfigOutput) PythonVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigSoftwareConfig) string { return v.PythonVersion }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigSoftwareConfigOutput) SchedulerCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetEnvironmentConfigSoftwareConfig) int { return v.SchedulerCount }).(pulumi.IntOutput)
}

type GetEnvironmentConfigSoftwareConfigArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigSoftwareConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigSoftwareConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigSoftwareConfigArrayOutput) ToGetEnvironmentConfigSoftwareConfigArrayOutput() GetEnvironmentConfigSoftwareConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigSoftwareConfigArrayOutput) ToGetEnvironmentConfigSoftwareConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigSoftwareConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigSoftwareConfigArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigSoftwareConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigSoftwareConfig {
		return vs[0].([]GetEnvironmentConfigSoftwareConfig)[vs[1].(int)]
	}).(GetEnvironmentConfigSoftwareConfigOutput)
}

type GetEnvironmentConfigWebServerConfig struct {
	MachineType string `pulumi:"machineType"`
}

// GetEnvironmentConfigWebServerConfigInput is an input type that accepts GetEnvironmentConfigWebServerConfigArgs and GetEnvironmentConfigWebServerConfigOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigWebServerConfigInput` via:
//
//          GetEnvironmentConfigWebServerConfigArgs{...}
type GetEnvironmentConfigWebServerConfigInput interface {
	pulumi.Input

	ToGetEnvironmentConfigWebServerConfigOutput() GetEnvironmentConfigWebServerConfigOutput
	ToGetEnvironmentConfigWebServerConfigOutputWithContext(context.Context) GetEnvironmentConfigWebServerConfigOutput
}

type GetEnvironmentConfigWebServerConfigArgs struct {
	MachineType pulumi.StringInput `pulumi:"machineType"`
}

func (GetEnvironmentConfigWebServerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigWebServerConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigWebServerConfigArgs) ToGetEnvironmentConfigWebServerConfigOutput() GetEnvironmentConfigWebServerConfigOutput {
	return i.ToGetEnvironmentConfigWebServerConfigOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigWebServerConfigArgs) ToGetEnvironmentConfigWebServerConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigWebServerConfigOutput)
}

// GetEnvironmentConfigWebServerConfigArrayInput is an input type that accepts GetEnvironmentConfigWebServerConfigArray and GetEnvironmentConfigWebServerConfigArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigWebServerConfigArrayInput` via:
//
//          GetEnvironmentConfigWebServerConfigArray{ GetEnvironmentConfigWebServerConfigArgs{...} }
type GetEnvironmentConfigWebServerConfigArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigWebServerConfigArrayOutput() GetEnvironmentConfigWebServerConfigArrayOutput
	ToGetEnvironmentConfigWebServerConfigArrayOutputWithContext(context.Context) GetEnvironmentConfigWebServerConfigArrayOutput
}

type GetEnvironmentConfigWebServerConfigArray []GetEnvironmentConfigWebServerConfigInput

func (GetEnvironmentConfigWebServerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigWebServerConfig)(nil)).Elem()
}

func (i GetEnvironmentConfigWebServerConfigArray) ToGetEnvironmentConfigWebServerConfigArrayOutput() GetEnvironmentConfigWebServerConfigArrayOutput {
	return i.ToGetEnvironmentConfigWebServerConfigArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigWebServerConfigArray) ToGetEnvironmentConfigWebServerConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigWebServerConfigArrayOutput)
}

type GetEnvironmentConfigWebServerConfigOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigWebServerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigWebServerConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigWebServerConfigOutput) ToGetEnvironmentConfigWebServerConfigOutput() GetEnvironmentConfigWebServerConfigOutput {
	return o
}

func (o GetEnvironmentConfigWebServerConfigOutput) ToGetEnvironmentConfigWebServerConfigOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerConfigOutput {
	return o
}

func (o GetEnvironmentConfigWebServerConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigWebServerConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

type GetEnvironmentConfigWebServerConfigArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigWebServerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigWebServerConfig)(nil)).Elem()
}

func (o GetEnvironmentConfigWebServerConfigArrayOutput) ToGetEnvironmentConfigWebServerConfigArrayOutput() GetEnvironmentConfigWebServerConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigWebServerConfigArrayOutput) ToGetEnvironmentConfigWebServerConfigArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerConfigArrayOutput {
	return o
}

func (o GetEnvironmentConfigWebServerConfigArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigWebServerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigWebServerConfig {
		return vs[0].([]GetEnvironmentConfigWebServerConfig)[vs[1].(int)]
	}).(GetEnvironmentConfigWebServerConfigOutput)
}

type GetEnvironmentConfigWebServerNetworkAccessControl struct {
	AllowedIpRanges []GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange `pulumi:"allowedIpRanges"`
}

// GetEnvironmentConfigWebServerNetworkAccessControlInput is an input type that accepts GetEnvironmentConfigWebServerNetworkAccessControlArgs and GetEnvironmentConfigWebServerNetworkAccessControlOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigWebServerNetworkAccessControlInput` via:
//
//          GetEnvironmentConfigWebServerNetworkAccessControlArgs{...}
type GetEnvironmentConfigWebServerNetworkAccessControlInput interface {
	pulumi.Input

	ToGetEnvironmentConfigWebServerNetworkAccessControlOutput() GetEnvironmentConfigWebServerNetworkAccessControlOutput
	ToGetEnvironmentConfigWebServerNetworkAccessControlOutputWithContext(context.Context) GetEnvironmentConfigWebServerNetworkAccessControlOutput
}

type GetEnvironmentConfigWebServerNetworkAccessControlArgs struct {
	AllowedIpRanges GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayInput `pulumi:"allowedIpRanges"`
}

func (GetEnvironmentConfigWebServerNetworkAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigWebServerNetworkAccessControl)(nil)).Elem()
}

func (i GetEnvironmentConfigWebServerNetworkAccessControlArgs) ToGetEnvironmentConfigWebServerNetworkAccessControlOutput() GetEnvironmentConfigWebServerNetworkAccessControlOutput {
	return i.ToGetEnvironmentConfigWebServerNetworkAccessControlOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigWebServerNetworkAccessControlArgs) ToGetEnvironmentConfigWebServerNetworkAccessControlOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerNetworkAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigWebServerNetworkAccessControlOutput)
}

// GetEnvironmentConfigWebServerNetworkAccessControlArrayInput is an input type that accepts GetEnvironmentConfigWebServerNetworkAccessControlArray and GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigWebServerNetworkAccessControlArrayInput` via:
//
//          GetEnvironmentConfigWebServerNetworkAccessControlArray{ GetEnvironmentConfigWebServerNetworkAccessControlArgs{...} }
type GetEnvironmentConfigWebServerNetworkAccessControlArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigWebServerNetworkAccessControlArrayOutput() GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput
	ToGetEnvironmentConfigWebServerNetworkAccessControlArrayOutputWithContext(context.Context) GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput
}

type GetEnvironmentConfigWebServerNetworkAccessControlArray []GetEnvironmentConfigWebServerNetworkAccessControlInput

func (GetEnvironmentConfigWebServerNetworkAccessControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigWebServerNetworkAccessControl)(nil)).Elem()
}

func (i GetEnvironmentConfigWebServerNetworkAccessControlArray) ToGetEnvironmentConfigWebServerNetworkAccessControlArrayOutput() GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput {
	return i.ToGetEnvironmentConfigWebServerNetworkAccessControlArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigWebServerNetworkAccessControlArray) ToGetEnvironmentConfigWebServerNetworkAccessControlArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput)
}

type GetEnvironmentConfigWebServerNetworkAccessControlOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigWebServerNetworkAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigWebServerNetworkAccessControl)(nil)).Elem()
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlOutput) ToGetEnvironmentConfigWebServerNetworkAccessControlOutput() GetEnvironmentConfigWebServerNetworkAccessControlOutput {
	return o
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlOutput) ToGetEnvironmentConfigWebServerNetworkAccessControlOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerNetworkAccessControlOutput {
	return o
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlOutput) AllowedIpRanges() GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return o.ApplyT(func(v GetEnvironmentConfigWebServerNetworkAccessControl) []GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange {
		return v.AllowedIpRanges
	}).(GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput)
}

type GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigWebServerNetworkAccessControl)(nil)).Elem()
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput) ToGetEnvironmentConfigWebServerNetworkAccessControlArrayOutput() GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput {
	return o
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput) ToGetEnvironmentConfigWebServerNetworkAccessControlArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput {
	return o
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigWebServerNetworkAccessControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigWebServerNetworkAccessControl {
		return vs[0].([]GetEnvironmentConfigWebServerNetworkAccessControl)[vs[1].(int)]
	}).(GetEnvironmentConfigWebServerNetworkAccessControlOutput)
}

type GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange struct {
	Description string `pulumi:"description"`
	Value       string `pulumi:"value"`
}

// GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeInput is an input type that accepts GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs and GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeInput` via:
//
//          GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs{...}
type GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeInput interface {
	pulumi.Input

	ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput() GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput
	ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutputWithContext(context.Context) GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput
}

type GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Value       pulumi.StringInput `pulumi:"value"`
}

func (GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)(nil)).Elem()
}

func (i GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs) ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput() GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return i.ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs) ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput)
}

// GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayInput is an input type that accepts GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray and GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayInput` via:
//
//          GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray{ GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArgs{...} }
type GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayInput interface {
	pulumi.Input

	ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput() GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput
	ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutputWithContext(context.Context) GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput
}

type GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray []GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeInput

func (GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)(nil)).Elem()
}

func (i GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray) ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput() GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return i.ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArray) ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput)
}

type GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)(nil)).Elem()
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput() GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return o
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return o
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange) string { return v.Value }).(pulumi.StringOutput)
}

type GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)(nil)).Elem()
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput) ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput() GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return o
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput) ToGetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutputWithContext(ctx context.Context) GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput {
	return o
}

func (o GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput) Index(i pulumi.IntInput) GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange {
		return vs[0].([]GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRange)[vs[1].(int)]
	}).(GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput)
}

type GetImageVersionsImageVersion struct {
	// The string identifier of the image version, in the form: "composer-x.y.z-airflow-a.b(.c)"
	ImageVersionId string `pulumi:"imageVersionId"`
	// Supported python versions for this image version
	SupportedPythonVersions []string `pulumi:"supportedPythonVersions"`
}

// GetImageVersionsImageVersionInput is an input type that accepts GetImageVersionsImageVersionArgs and GetImageVersionsImageVersionOutput values.
// You can construct a concrete instance of `GetImageVersionsImageVersionInput` via:
//
//          GetImageVersionsImageVersionArgs{...}
type GetImageVersionsImageVersionInput interface {
	pulumi.Input

	ToGetImageVersionsImageVersionOutput() GetImageVersionsImageVersionOutput
	ToGetImageVersionsImageVersionOutputWithContext(context.Context) GetImageVersionsImageVersionOutput
}

type GetImageVersionsImageVersionArgs struct {
	// The string identifier of the image version, in the form: "composer-x.y.z-airflow-a.b(.c)"
	ImageVersionId pulumi.StringInput `pulumi:"imageVersionId"`
	// Supported python versions for this image version
	SupportedPythonVersions pulumi.StringArrayInput `pulumi:"supportedPythonVersions"`
}

func (GetImageVersionsImageVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageVersionsImageVersion)(nil)).Elem()
}

func (i GetImageVersionsImageVersionArgs) ToGetImageVersionsImageVersionOutput() GetImageVersionsImageVersionOutput {
	return i.ToGetImageVersionsImageVersionOutputWithContext(context.Background())
}

func (i GetImageVersionsImageVersionArgs) ToGetImageVersionsImageVersionOutputWithContext(ctx context.Context) GetImageVersionsImageVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageVersionsImageVersionOutput)
}

// GetImageVersionsImageVersionArrayInput is an input type that accepts GetImageVersionsImageVersionArray and GetImageVersionsImageVersionArrayOutput values.
// You can construct a concrete instance of `GetImageVersionsImageVersionArrayInput` via:
//
//          GetImageVersionsImageVersionArray{ GetImageVersionsImageVersionArgs{...} }
type GetImageVersionsImageVersionArrayInput interface {
	pulumi.Input

	ToGetImageVersionsImageVersionArrayOutput() GetImageVersionsImageVersionArrayOutput
	ToGetImageVersionsImageVersionArrayOutputWithContext(context.Context) GetImageVersionsImageVersionArrayOutput
}

type GetImageVersionsImageVersionArray []GetImageVersionsImageVersionInput

func (GetImageVersionsImageVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageVersionsImageVersion)(nil)).Elem()
}

func (i GetImageVersionsImageVersionArray) ToGetImageVersionsImageVersionArrayOutput() GetImageVersionsImageVersionArrayOutput {
	return i.ToGetImageVersionsImageVersionArrayOutputWithContext(context.Background())
}

func (i GetImageVersionsImageVersionArray) ToGetImageVersionsImageVersionArrayOutputWithContext(ctx context.Context) GetImageVersionsImageVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageVersionsImageVersionArrayOutput)
}

type GetImageVersionsImageVersionOutput struct{ *pulumi.OutputState }

func (GetImageVersionsImageVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageVersionsImageVersion)(nil)).Elem()
}

func (o GetImageVersionsImageVersionOutput) ToGetImageVersionsImageVersionOutput() GetImageVersionsImageVersionOutput {
	return o
}

func (o GetImageVersionsImageVersionOutput) ToGetImageVersionsImageVersionOutputWithContext(ctx context.Context) GetImageVersionsImageVersionOutput {
	return o
}

// The string identifier of the image version, in the form: "composer-x.y.z-airflow-a.b(.c)"
func (o GetImageVersionsImageVersionOutput) ImageVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageVersionsImageVersion) string { return v.ImageVersionId }).(pulumi.StringOutput)
}

// Supported python versions for this image version
func (o GetImageVersionsImageVersionOutput) SupportedPythonVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImageVersionsImageVersion) []string { return v.SupportedPythonVersions }).(pulumi.StringArrayOutput)
}

type GetImageVersionsImageVersionArrayOutput struct{ *pulumi.OutputState }

func (GetImageVersionsImageVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageVersionsImageVersion)(nil)).Elem()
}

func (o GetImageVersionsImageVersionArrayOutput) ToGetImageVersionsImageVersionArrayOutput() GetImageVersionsImageVersionArrayOutput {
	return o
}

func (o GetImageVersionsImageVersionArrayOutput) ToGetImageVersionsImageVersionArrayOutputWithContext(ctx context.Context) GetImageVersionsImageVersionArrayOutput {
	return o
}

func (o GetImageVersionsImageVersionArrayOutput) Index(i pulumi.IntInput) GetImageVersionsImageVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageVersionsImageVersion {
		return vs[0].([]GetImageVersionsImageVersion)[vs[1].(int)]
	}).(GetImageVersionsImageVersionOutput)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentConfigOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigDatabaseConfigOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigDatabaseConfigPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigNodeConfigOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigNodeConfigIpAllocationPolicyOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigNodeConfigIpAllocationPolicyPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigPrivateEnvironmentConfigOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigPrivateEnvironmentConfigPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigSoftwareConfigOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigSoftwareConfigPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigWebServerConfigOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigWebServerConfigPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigWebServerNetworkAccessControlOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigWebServerNetworkAccessControlPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput{})
	pulumi.RegisterOutputType(EnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigDatabaseConfigOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigDatabaseConfigArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigEncryptionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigNodeConfigOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigNodeConfigIpAllocationPolicyOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigNodeConfigIpAllocationPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigPrivateEnvironmentConfigOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigPrivateEnvironmentConfigArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigSoftwareConfigOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigSoftwareConfigArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigWebServerConfigOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigWebServerConfigArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigWebServerNetworkAccessControlOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigWebServerNetworkAccessControlArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeOutput{})
	pulumi.RegisterOutputType(GetEnvironmentConfigWebServerNetworkAccessControlAllowedIpRangeArrayOutput{})
	pulumi.RegisterOutputType(GetImageVersionsImageVersionOutput{})
	pulumi.RegisterOutputType(GetImageVersionsImageVersionArrayOutput{})
}
