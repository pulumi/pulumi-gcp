// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package composer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides access to Kubernetes Secret configuration for a given project, region and Composer Environment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/composer"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleEnvironment, err := composer.NewEnvironment(ctx, "example", &composer.EnvironmentArgs{
//				Name: pulumi.String("example-environment"),
//				Config: &composer.EnvironmentConfigArgs{
//					SoftwareConfig: &composer.EnvironmentConfigSoftwareConfigArgs{
//						ImageVersion: pulumi.String("composer-3-airflow-2"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			invokeBase64encode, err := std.Base64encode(ctx, &std.Base64encodeArgs{
//				Input: "username",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			invokeBase64encode1, err := std.Base64encode(ctx, &std.Base64encodeArgs{
//				Input: "password",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = composer.NewUserWorkloadsSecret(ctx, "example", &composer.UserWorkloadsSecretArgs{
//				Environment: exampleEnvironment.Name,
//				Name:        pulumi.String("example-secret"),
//				Data: pulumi.StringMap{
//					"username": pulumi.String(invokeBase64encode.Result),
//					"password": pulumi.String(invokeBase64encode1.Result),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			example := exampleEnvironment.Name.ApplyT(func(name string) (composer.GetUserWorkloadsSecretResult, error) {
//				return composer.GetUserWorkloadsSecretResult(interface{}(composer.LookupUserWorkloadsSecretOutput(ctx, composer.GetUserWorkloadsSecretOutputArgs{
//					Environment: name,
//					Name:        googleComposerUserWorkloadsSecret.Example.Name,
//				}, nil))), nil
//			}).(composer.GetUserWorkloadsSecretResultOutput)
//			ctx.Export("debug", example)
//			return nil
//		})
//	}
//
// ```
func LookupUserWorkloadsSecret(ctx *pulumi.Context, args *LookupUserWorkloadsSecretArgs, opts ...pulumi.InvokeOption) (*LookupUserWorkloadsSecretResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserWorkloadsSecretResult
	err := ctx.Invoke("gcp:composer/getUserWorkloadsSecret:getUserWorkloadsSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserWorkloadsSecret.
type LookupUserWorkloadsSecretArgs struct {
	// Environment where the Secret is stored.
	Environment string `pulumi:"environment"`
	// Name of the Secret.
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The location or Compute Engine region of the environment.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getUserWorkloadsSecret.
type LookupUserWorkloadsSecretResult struct {
	Data        map[string]string `pulumi:"data"`
	Environment string            `pulumi:"environment"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Name    string  `pulumi:"name"`
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
}

func LookupUserWorkloadsSecretOutput(ctx *pulumi.Context, args LookupUserWorkloadsSecretOutputArgs, opts ...pulumi.InvokeOption) LookupUserWorkloadsSecretResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserWorkloadsSecretResultOutput, error) {
			args := v.(LookupUserWorkloadsSecretArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:composer/getUserWorkloadsSecret:getUserWorkloadsSecret", args, LookupUserWorkloadsSecretResultOutput{}, options).(LookupUserWorkloadsSecretResultOutput), nil
		}).(LookupUserWorkloadsSecretResultOutput)
}

// A collection of arguments for invoking getUserWorkloadsSecret.
type LookupUserWorkloadsSecretOutputArgs struct {
	// Environment where the Secret is stored.
	Environment pulumi.StringInput `pulumi:"environment"`
	// Name of the Secret.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The location or Compute Engine region of the environment.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupUserWorkloadsSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserWorkloadsSecretArgs)(nil)).Elem()
}

// A collection of values returned by getUserWorkloadsSecret.
type LookupUserWorkloadsSecretResultOutput struct{ *pulumi.OutputState }

func (LookupUserWorkloadsSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserWorkloadsSecretResult)(nil)).Elem()
}

func (o LookupUserWorkloadsSecretResultOutput) ToLookupUserWorkloadsSecretResultOutput() LookupUserWorkloadsSecretResultOutput {
	return o
}

func (o LookupUserWorkloadsSecretResultOutput) ToLookupUserWorkloadsSecretResultOutputWithContext(ctx context.Context) LookupUserWorkloadsSecretResultOutput {
	return o
}

func (o LookupUserWorkloadsSecretResultOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupUserWorkloadsSecretResult) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

func (o LookupUserWorkloadsSecretResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserWorkloadsSecretResult) string { return v.Environment }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserWorkloadsSecretResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserWorkloadsSecretResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupUserWorkloadsSecretResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserWorkloadsSecretResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupUserWorkloadsSecretResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserWorkloadsSecretResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupUserWorkloadsSecretResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserWorkloadsSecretResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserWorkloadsSecretResultOutput{})
}
