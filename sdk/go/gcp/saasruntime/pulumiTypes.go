// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package saasruntime

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type SaaSLocation struct {
	// Name of location.
	Name *string `pulumi:"name"`
}

// SaaSLocationInput is an input type that accepts SaaSLocationArgs and SaaSLocationOutput values.
// You can construct a concrete instance of `SaaSLocationInput` via:
//
//	SaaSLocationArgs{...}
type SaaSLocationInput interface {
	pulumi.Input

	ToSaaSLocationOutput() SaaSLocationOutput
	ToSaaSLocationOutputWithContext(context.Context) SaaSLocationOutput
}

type SaaSLocationArgs struct {
	// Name of location.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SaaSLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SaaSLocation)(nil)).Elem()
}

func (i SaaSLocationArgs) ToSaaSLocationOutput() SaaSLocationOutput {
	return i.ToSaaSLocationOutputWithContext(context.Background())
}

func (i SaaSLocationArgs) ToSaaSLocationOutputWithContext(ctx context.Context) SaaSLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SaaSLocationOutput)
}

// SaaSLocationArrayInput is an input type that accepts SaaSLocationArray and SaaSLocationArrayOutput values.
// You can construct a concrete instance of `SaaSLocationArrayInput` via:
//
//	SaaSLocationArray{ SaaSLocationArgs{...} }
type SaaSLocationArrayInput interface {
	pulumi.Input

	ToSaaSLocationArrayOutput() SaaSLocationArrayOutput
	ToSaaSLocationArrayOutputWithContext(context.Context) SaaSLocationArrayOutput
}

type SaaSLocationArray []SaaSLocationInput

func (SaaSLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SaaSLocation)(nil)).Elem()
}

func (i SaaSLocationArray) ToSaaSLocationArrayOutput() SaaSLocationArrayOutput {
	return i.ToSaaSLocationArrayOutputWithContext(context.Background())
}

func (i SaaSLocationArray) ToSaaSLocationArrayOutputWithContext(ctx context.Context) SaaSLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SaaSLocationArrayOutput)
}

type SaaSLocationOutput struct{ *pulumi.OutputState }

func (SaaSLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SaaSLocation)(nil)).Elem()
}

func (o SaaSLocationOutput) ToSaaSLocationOutput() SaaSLocationOutput {
	return o
}

func (o SaaSLocationOutput) ToSaaSLocationOutputWithContext(ctx context.Context) SaaSLocationOutput {
	return o
}

// Name of location.
func (o SaaSLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SaaSLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SaaSLocationArrayOutput struct{ *pulumi.OutputState }

func (SaaSLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SaaSLocation)(nil)).Elem()
}

func (o SaaSLocationArrayOutput) ToSaaSLocationArrayOutput() SaaSLocationArrayOutput {
	return o
}

func (o SaaSLocationArrayOutput) ToSaaSLocationArrayOutputWithContext(ctx context.Context) SaaSLocationArrayOutput {
	return o
}

func (o SaaSLocationArrayOutput) Index(i pulumi.IntInput) SaaSLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SaaSLocation {
		return vs[0].([]SaaSLocation)[vs[1].(int)]
	}).(SaaSLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SaaSLocationInput)(nil)).Elem(), SaaSLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SaaSLocationArrayInput)(nil)).Elem(), SaaSLocationArray{})
	pulumi.RegisterOutputType(SaaSLocationOutput{})
	pulumi.RegisterOutputType(SaaSLocationArrayOutput{})
}
