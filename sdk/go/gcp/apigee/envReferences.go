// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigee

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An `Environment Reference` in Apigee.
//
// To get more information about EnvReferences, see:
//
// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.references/create)
// * How-to Guides
//   - [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
//
// ## Import
//
// # EnvReferences can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:apigee/envReferences:EnvReferences default {{env_id}}/references/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:apigee/envReferences:EnvReferences default {{env_id}}/{{name}}
//
// ```
type EnvReferences struct {
	pulumi.CustomResourceState

	// Optional. A human-readable description of this reference.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId pulumi.StringOutput `pulumi:"envId"`
	// Required. The resource id of this reference. Values must match the regular expression [\w\s-.]+.
	Name pulumi.StringOutput `pulumi:"name"`
	// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resourceType.
	Refers pulumi.StringOutput `pulumi:"refers"`
	// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
}

// NewEnvReferences registers a new resource with the given unique name, arguments, and options.
func NewEnvReferences(ctx *pulumi.Context,
	name string, args *EnvReferencesArgs, opts ...pulumi.ResourceOption) (*EnvReferences, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvId == nil {
		return nil, errors.New("invalid value for required argument 'EnvId'")
	}
	if args.Refers == nil {
		return nil, errors.New("invalid value for required argument 'Refers'")
	}
	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	var resource EnvReferences
	err := ctx.RegisterResource("gcp:apigee/envReferences:EnvReferences", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvReferences gets an existing EnvReferences resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvReferences(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvReferencesState, opts ...pulumi.ResourceOption) (*EnvReferences, error) {
	var resource EnvReferences
	err := ctx.ReadResource("gcp:apigee/envReferences:EnvReferences", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvReferences resources.
type envReferencesState struct {
	// Optional. A human-readable description of this reference.
	Description *string `pulumi:"description"`
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId *string `pulumi:"envId"`
	// Required. The resource id of this reference. Values must match the regular expression [\w\s-.]+.
	Name *string `pulumi:"name"`
	// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resourceType.
	Refers *string `pulumi:"refers"`
	// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
	ResourceType *string `pulumi:"resourceType"`
}

type EnvReferencesState struct {
	// Optional. A human-readable description of this reference.
	Description pulumi.StringPtrInput
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId pulumi.StringPtrInput
	// Required. The resource id of this reference. Values must match the regular expression [\w\s-.]+.
	Name pulumi.StringPtrInput
	// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resourceType.
	Refers pulumi.StringPtrInput
	// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
	ResourceType pulumi.StringPtrInput
}

func (EnvReferencesState) ElementType() reflect.Type {
	return reflect.TypeOf((*envReferencesState)(nil)).Elem()
}

type envReferencesArgs struct {
	// Optional. A human-readable description of this reference.
	Description *string `pulumi:"description"`
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId string `pulumi:"envId"`
	// Required. The resource id of this reference. Values must match the regular expression [\w\s-.]+.
	Name *string `pulumi:"name"`
	// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resourceType.
	Refers string `pulumi:"refers"`
	// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
	ResourceType string `pulumi:"resourceType"`
}

// The set of arguments for constructing a EnvReferences resource.
type EnvReferencesArgs struct {
	// Optional. A human-readable description of this reference.
	Description pulumi.StringPtrInput
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId pulumi.StringInput
	// Required. The resource id of this reference. Values must match the regular expression [\w\s-.]+.
	Name pulumi.StringPtrInput
	// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resourceType.
	Refers pulumi.StringInput
	// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
	ResourceType pulumi.StringInput
}

func (EnvReferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*envReferencesArgs)(nil)).Elem()
}

type EnvReferencesInput interface {
	pulumi.Input

	ToEnvReferencesOutput() EnvReferencesOutput
	ToEnvReferencesOutputWithContext(ctx context.Context) EnvReferencesOutput
}

func (*EnvReferences) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvReferences)(nil)).Elem()
}

func (i *EnvReferences) ToEnvReferencesOutput() EnvReferencesOutput {
	return i.ToEnvReferencesOutputWithContext(context.Background())
}

func (i *EnvReferences) ToEnvReferencesOutputWithContext(ctx context.Context) EnvReferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvReferencesOutput)
}

// EnvReferencesArrayInput is an input type that accepts EnvReferencesArray and EnvReferencesArrayOutput values.
// You can construct a concrete instance of `EnvReferencesArrayInput` via:
//
//	EnvReferencesArray{ EnvReferencesArgs{...} }
type EnvReferencesArrayInput interface {
	pulumi.Input

	ToEnvReferencesArrayOutput() EnvReferencesArrayOutput
	ToEnvReferencesArrayOutputWithContext(context.Context) EnvReferencesArrayOutput
}

type EnvReferencesArray []EnvReferencesInput

func (EnvReferencesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvReferences)(nil)).Elem()
}

func (i EnvReferencesArray) ToEnvReferencesArrayOutput() EnvReferencesArrayOutput {
	return i.ToEnvReferencesArrayOutputWithContext(context.Background())
}

func (i EnvReferencesArray) ToEnvReferencesArrayOutputWithContext(ctx context.Context) EnvReferencesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvReferencesArrayOutput)
}

// EnvReferencesMapInput is an input type that accepts EnvReferencesMap and EnvReferencesMapOutput values.
// You can construct a concrete instance of `EnvReferencesMapInput` via:
//
//	EnvReferencesMap{ "key": EnvReferencesArgs{...} }
type EnvReferencesMapInput interface {
	pulumi.Input

	ToEnvReferencesMapOutput() EnvReferencesMapOutput
	ToEnvReferencesMapOutputWithContext(context.Context) EnvReferencesMapOutput
}

type EnvReferencesMap map[string]EnvReferencesInput

func (EnvReferencesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvReferences)(nil)).Elem()
}

func (i EnvReferencesMap) ToEnvReferencesMapOutput() EnvReferencesMapOutput {
	return i.ToEnvReferencesMapOutputWithContext(context.Background())
}

func (i EnvReferencesMap) ToEnvReferencesMapOutputWithContext(ctx context.Context) EnvReferencesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvReferencesMapOutput)
}

type EnvReferencesOutput struct{ *pulumi.OutputState }

func (EnvReferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvReferences)(nil)).Elem()
}

func (o EnvReferencesOutput) ToEnvReferencesOutput() EnvReferencesOutput {
	return o
}

func (o EnvReferencesOutput) ToEnvReferencesOutputWithContext(ctx context.Context) EnvReferencesOutput {
	return o
}

// Optional. A human-readable description of this reference.
func (o EnvReferencesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvReferences) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Apigee environment group associated with the Apigee environment,
// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
func (o EnvReferencesOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvReferences) pulumi.StringOutput { return v.EnvId }).(pulumi.StringOutput)
}

// Required. The resource id of this reference. Values must match the regular expression [\w\s-.]+.
func (o EnvReferencesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvReferences) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resourceType.
func (o EnvReferencesOutput) Refers() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvReferences) pulumi.StringOutput { return v.Refers }).(pulumi.StringOutput)
}

// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
func (o EnvReferencesOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvReferences) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

type EnvReferencesArrayOutput struct{ *pulumi.OutputState }

func (EnvReferencesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvReferences)(nil)).Elem()
}

func (o EnvReferencesArrayOutput) ToEnvReferencesArrayOutput() EnvReferencesArrayOutput {
	return o
}

func (o EnvReferencesArrayOutput) ToEnvReferencesArrayOutputWithContext(ctx context.Context) EnvReferencesArrayOutput {
	return o
}

func (o EnvReferencesArrayOutput) Index(i pulumi.IntInput) EnvReferencesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnvReferences {
		return vs[0].([]*EnvReferences)[vs[1].(int)]
	}).(EnvReferencesOutput)
}

type EnvReferencesMapOutput struct{ *pulumi.OutputState }

func (EnvReferencesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvReferences)(nil)).Elem()
}

func (o EnvReferencesMapOutput) ToEnvReferencesMapOutput() EnvReferencesMapOutput {
	return o
}

func (o EnvReferencesMapOutput) ToEnvReferencesMapOutputWithContext(ctx context.Context) EnvReferencesMapOutput {
	return o
}

func (o EnvReferencesMapOutput) MapIndex(k pulumi.StringInput) EnvReferencesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnvReferences {
		return vs[0].(map[string]*EnvReferences)[vs[1].(string)]
	}).(EnvReferencesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvReferencesInput)(nil)).Elem(), &EnvReferences{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvReferencesArrayInput)(nil)).Elem(), EnvReferencesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvReferencesMapInput)(nil)).Elem(), EnvReferencesMap{})
	pulumi.RegisterOutputType(EnvReferencesOutput{})
	pulumi.RegisterOutputType(EnvReferencesArrayOutput{})
	pulumi.RegisterOutputType(EnvReferencesMapOutput{})
}
