// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigee

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Security monitoring condition for risk assessment version 2 in Apigee.
//
// To get more information about SecurityMonitoringCondition, see:
//
// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.securityMonitoringConditions/create)
// * How-to Guides
//   - [Creating a security monitoring condition](https://cloud.google.com/apigee/docs/api-security/security-scores#monitoring-conditions)
//
// ## Example Usage
//
// ### Apigee Security Monitoring Condition Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/apigee"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/servicenetworking"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := organizations.GetClientConfig(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			apigeeNetwork, err := compute.NewNetwork(ctx, "apigee_network", &compute.NetworkArgs{
//				Name: pulumi.String("apigee-network"),
//			})
//			if err != nil {
//				return err
//			}
//			apigeeRange, err := compute.NewGlobalAddress(ctx, "apigee_range", &compute.GlobalAddressArgs{
//				Name:         pulumi.String("apigee-range"),
//				Purpose:      pulumi.String("VPC_PEERING"),
//				AddressType:  pulumi.String("INTERNAL"),
//				PrefixLength: pulumi.Int(16),
//				Network:      apigeeNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			apigeeVpcConnection, err := servicenetworking.NewConnection(ctx, "apigee_vpc_connection", &servicenetworking.ConnectionArgs{
//				Network: apigeeNetwork.ID(),
//				Service: pulumi.String("servicenetworking.googleapis.com"),
//				ReservedPeeringRanges: pulumi.StringArray{
//					apigeeRange.Name,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			apigeeOrg, err := apigee.NewOrganization(ctx, "apigee_org", &apigee.OrganizationArgs{
//				AnalyticsRegion:   pulumi.String("us-central1"),
//				ProjectId:         pulumi.String(current.Project),
//				AuthorizedNetwork: apigeeNetwork.ID(),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				apigeeVpcConnection,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = apigee.NewEnvironment(ctx, "env", &apigee.EnvironmentArgs{
//				Name:        pulumi.String("my-environment"),
//				Description: pulumi.String("Apigee Environment"),
//				DisplayName: pulumi.String("environment-1"),
//				OrgId:       apigeeOrg.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			apigeeOrgSecurityAddonsConfig, err := apigee.NewAddonsConfig(ctx, "apigee_org_security_addons_config", &apigee.AddonsConfigArgs{
//				Org: apigeeOrg.Name,
//				AddonsConfig: &apigee.AddonsConfigAddonsConfigArgs{
//					ApiSecurityConfig: &apigee.AddonsConfigAddonsConfigApiSecurityConfigArgs{
//						Enabled: pulumi.Bool(true),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apigee.NewSecurityMonitoringCondition(ctx, "security_monitoring_condition", &apigee.SecurityMonitoringConditionArgs{
//				ConditionId:         pulumi.String("my-condition"),
//				OrgId:               apigeeOrg.ID(),
//				Profile:             pulumi.String("google-default"),
//				Scope:               pulumi.String("my-environment"),
//				IncludeAllResources: &apigee.SecurityMonitoringConditionIncludeAllResourcesArgs{},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				apigeeOrgSecurityAddonsConfig,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SecurityMonitoringCondition can be imported using any of these accepted formats:
//
// * `{{org_id}}/securityMonitoringConditions/{{condition_id}}`
//
// * `{{org_id}}/{{condition_id}}`
//
// When using the `pulumi import` command, SecurityMonitoringCondition can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition default {{org_id}}/securityMonitoringConditions/{{condition_id}}
// ```
//
// ```sh
// $ pulumi import gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition default {{org_id}}/{{condition_id}}
// ```
type SecurityMonitoringCondition struct {
	pulumi.CustomResourceState

	// Resource ID of the security monitoring condition.
	//
	// ***
	ConditionId pulumi.StringOutput `pulumi:"conditionId"`
	// The timestamp at which this profile was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A nested object resource.
	IncludeAllResources SecurityMonitoringConditionIncludeAllResourcesPtrOutput `pulumi:"includeAllResources"`
	// Name of the security monitoring condition resource,
	// in the format `organizations/{{org_name}}/securityMonitoringConditions/{{condition_id}}`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Apigee Organization associated with the Apigee Security Monitoring Condition,
	// in the format `organizations/{{org_name}}`.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// ID of security profile of the security monitoring condition.
	Profile pulumi.StringOutput `pulumi:"profile"`
	// ID of security profile of the security monitoring condition.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// Total number of deployed resources within scope.
	TotalDeployedResources pulumi.IntOutput `pulumi:"totalDeployedResources"`
	// Total number of monitored resources within this condition.
	TotalMonitoredResources pulumi.IntOutput `pulumi:"totalMonitoredResources"`
	// The timestamp at which this profile was most recently updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewSecurityMonitoringCondition registers a new resource with the given unique name, arguments, and options.
func NewSecurityMonitoringCondition(ctx *pulumi.Context,
	name string, args *SecurityMonitoringConditionArgs, opts ...pulumi.ResourceOption) (*SecurityMonitoringCondition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConditionId == nil {
		return nil, errors.New("invalid value for required argument 'ConditionId'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.Profile == nil {
		return nil, errors.New("invalid value for required argument 'Profile'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityMonitoringCondition
	err := ctx.RegisterResource("gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityMonitoringCondition gets an existing SecurityMonitoringCondition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityMonitoringCondition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityMonitoringConditionState, opts ...pulumi.ResourceOption) (*SecurityMonitoringCondition, error) {
	var resource SecurityMonitoringCondition
	err := ctx.ReadResource("gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityMonitoringCondition resources.
type securityMonitoringConditionState struct {
	// Resource ID of the security monitoring condition.
	//
	// ***
	ConditionId *string `pulumi:"conditionId"`
	// The timestamp at which this profile was created.
	CreateTime *string `pulumi:"createTime"`
	// A nested object resource.
	IncludeAllResources *SecurityMonitoringConditionIncludeAllResources `pulumi:"includeAllResources"`
	// Name of the security monitoring condition resource,
	// in the format `organizations/{{org_name}}/securityMonitoringConditions/{{condition_id}}`.
	Name *string `pulumi:"name"`
	// The Apigee Organization associated with the Apigee Security Monitoring Condition,
	// in the format `organizations/{{org_name}}`.
	OrgId *string `pulumi:"orgId"`
	// ID of security profile of the security monitoring condition.
	Profile *string `pulumi:"profile"`
	// ID of security profile of the security monitoring condition.
	Scope *string `pulumi:"scope"`
	// Total number of deployed resources within scope.
	TotalDeployedResources *int `pulumi:"totalDeployedResources"`
	// Total number of monitored resources within this condition.
	TotalMonitoredResources *int `pulumi:"totalMonitoredResources"`
	// The timestamp at which this profile was most recently updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type SecurityMonitoringConditionState struct {
	// Resource ID of the security monitoring condition.
	//
	// ***
	ConditionId pulumi.StringPtrInput
	// The timestamp at which this profile was created.
	CreateTime pulumi.StringPtrInput
	// A nested object resource.
	IncludeAllResources SecurityMonitoringConditionIncludeAllResourcesPtrInput
	// Name of the security monitoring condition resource,
	// in the format `organizations/{{org_name}}/securityMonitoringConditions/{{condition_id}}`.
	Name pulumi.StringPtrInput
	// The Apigee Organization associated with the Apigee Security Monitoring Condition,
	// in the format `organizations/{{org_name}}`.
	OrgId pulumi.StringPtrInput
	// ID of security profile of the security monitoring condition.
	Profile pulumi.StringPtrInput
	// ID of security profile of the security monitoring condition.
	Scope pulumi.StringPtrInput
	// Total number of deployed resources within scope.
	TotalDeployedResources pulumi.IntPtrInput
	// Total number of monitored resources within this condition.
	TotalMonitoredResources pulumi.IntPtrInput
	// The timestamp at which this profile was most recently updated.
	UpdateTime pulumi.StringPtrInput
}

func (SecurityMonitoringConditionState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityMonitoringConditionState)(nil)).Elem()
}

type securityMonitoringConditionArgs struct {
	// Resource ID of the security monitoring condition.
	//
	// ***
	ConditionId string `pulumi:"conditionId"`
	// A nested object resource.
	IncludeAllResources *SecurityMonitoringConditionIncludeAllResources `pulumi:"includeAllResources"`
	// The Apigee Organization associated with the Apigee Security Monitoring Condition,
	// in the format `organizations/{{org_name}}`.
	OrgId string `pulumi:"orgId"`
	// ID of security profile of the security monitoring condition.
	Profile string `pulumi:"profile"`
	// ID of security profile of the security monitoring condition.
	Scope string `pulumi:"scope"`
}

// The set of arguments for constructing a SecurityMonitoringCondition resource.
type SecurityMonitoringConditionArgs struct {
	// Resource ID of the security monitoring condition.
	//
	// ***
	ConditionId pulumi.StringInput
	// A nested object resource.
	IncludeAllResources SecurityMonitoringConditionIncludeAllResourcesPtrInput
	// The Apigee Organization associated with the Apigee Security Monitoring Condition,
	// in the format `organizations/{{org_name}}`.
	OrgId pulumi.StringInput
	// ID of security profile of the security monitoring condition.
	Profile pulumi.StringInput
	// ID of security profile of the security monitoring condition.
	Scope pulumi.StringInput
}

func (SecurityMonitoringConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityMonitoringConditionArgs)(nil)).Elem()
}

type SecurityMonitoringConditionInput interface {
	pulumi.Input

	ToSecurityMonitoringConditionOutput() SecurityMonitoringConditionOutput
	ToSecurityMonitoringConditionOutputWithContext(ctx context.Context) SecurityMonitoringConditionOutput
}

func (*SecurityMonitoringCondition) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringCondition)(nil)).Elem()
}

func (i *SecurityMonitoringCondition) ToSecurityMonitoringConditionOutput() SecurityMonitoringConditionOutput {
	return i.ToSecurityMonitoringConditionOutputWithContext(context.Background())
}

func (i *SecurityMonitoringCondition) ToSecurityMonitoringConditionOutputWithContext(ctx context.Context) SecurityMonitoringConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringConditionOutput)
}

// SecurityMonitoringConditionArrayInput is an input type that accepts SecurityMonitoringConditionArray and SecurityMonitoringConditionArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringConditionArrayInput` via:
//
//	SecurityMonitoringConditionArray{ SecurityMonitoringConditionArgs{...} }
type SecurityMonitoringConditionArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringConditionArrayOutput() SecurityMonitoringConditionArrayOutput
	ToSecurityMonitoringConditionArrayOutputWithContext(context.Context) SecurityMonitoringConditionArrayOutput
}

type SecurityMonitoringConditionArray []SecurityMonitoringConditionInput

func (SecurityMonitoringConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityMonitoringCondition)(nil)).Elem()
}

func (i SecurityMonitoringConditionArray) ToSecurityMonitoringConditionArrayOutput() SecurityMonitoringConditionArrayOutput {
	return i.ToSecurityMonitoringConditionArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringConditionArray) ToSecurityMonitoringConditionArrayOutputWithContext(ctx context.Context) SecurityMonitoringConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringConditionArrayOutput)
}

// SecurityMonitoringConditionMapInput is an input type that accepts SecurityMonitoringConditionMap and SecurityMonitoringConditionMapOutput values.
// You can construct a concrete instance of `SecurityMonitoringConditionMapInput` via:
//
//	SecurityMonitoringConditionMap{ "key": SecurityMonitoringConditionArgs{...} }
type SecurityMonitoringConditionMapInput interface {
	pulumi.Input

	ToSecurityMonitoringConditionMapOutput() SecurityMonitoringConditionMapOutput
	ToSecurityMonitoringConditionMapOutputWithContext(context.Context) SecurityMonitoringConditionMapOutput
}

type SecurityMonitoringConditionMap map[string]SecurityMonitoringConditionInput

func (SecurityMonitoringConditionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityMonitoringCondition)(nil)).Elem()
}

func (i SecurityMonitoringConditionMap) ToSecurityMonitoringConditionMapOutput() SecurityMonitoringConditionMapOutput {
	return i.ToSecurityMonitoringConditionMapOutputWithContext(context.Background())
}

func (i SecurityMonitoringConditionMap) ToSecurityMonitoringConditionMapOutputWithContext(ctx context.Context) SecurityMonitoringConditionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringConditionMapOutput)
}

type SecurityMonitoringConditionOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringCondition)(nil)).Elem()
}

func (o SecurityMonitoringConditionOutput) ToSecurityMonitoringConditionOutput() SecurityMonitoringConditionOutput {
	return o
}

func (o SecurityMonitoringConditionOutput) ToSecurityMonitoringConditionOutputWithContext(ctx context.Context) SecurityMonitoringConditionOutput {
	return o
}

// Resource ID of the security monitoring condition.
//
// ***
func (o SecurityMonitoringConditionOutput) ConditionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) pulumi.StringOutput { return v.ConditionId }).(pulumi.StringOutput)
}

// The timestamp at which this profile was created.
func (o SecurityMonitoringConditionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A nested object resource.
func (o SecurityMonitoringConditionOutput) IncludeAllResources() SecurityMonitoringConditionIncludeAllResourcesPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) SecurityMonitoringConditionIncludeAllResourcesPtrOutput {
		return v.IncludeAllResources
	}).(SecurityMonitoringConditionIncludeAllResourcesPtrOutput)
}

// Name of the security monitoring condition resource,
// in the format `organizations/{{org_name}}/securityMonitoringConditions/{{condition_id}}`.
func (o SecurityMonitoringConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Apigee Organization associated with the Apigee Security Monitoring Condition,
// in the format `organizations/{{org_name}}`.
func (o SecurityMonitoringConditionOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// ID of security profile of the security monitoring condition.
func (o SecurityMonitoringConditionOutput) Profile() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) pulumi.StringOutput { return v.Profile }).(pulumi.StringOutput)
}

// ID of security profile of the security monitoring condition.
func (o SecurityMonitoringConditionOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// Total number of deployed resources within scope.
func (o SecurityMonitoringConditionOutput) TotalDeployedResources() pulumi.IntOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) pulumi.IntOutput { return v.TotalDeployedResources }).(pulumi.IntOutput)
}

// Total number of monitored resources within this condition.
func (o SecurityMonitoringConditionOutput) TotalMonitoredResources() pulumi.IntOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) pulumi.IntOutput { return v.TotalMonitoredResources }).(pulumi.IntOutput)
}

// The timestamp at which this profile was most recently updated.
func (o SecurityMonitoringConditionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityMonitoringCondition) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type SecurityMonitoringConditionArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityMonitoringCondition)(nil)).Elem()
}

func (o SecurityMonitoringConditionArrayOutput) ToSecurityMonitoringConditionArrayOutput() SecurityMonitoringConditionArrayOutput {
	return o
}

func (o SecurityMonitoringConditionArrayOutput) ToSecurityMonitoringConditionArrayOutputWithContext(ctx context.Context) SecurityMonitoringConditionArrayOutput {
	return o
}

func (o SecurityMonitoringConditionArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityMonitoringCondition {
		return vs[0].([]*SecurityMonitoringCondition)[vs[1].(int)]
	}).(SecurityMonitoringConditionOutput)
}

type SecurityMonitoringConditionMapOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringConditionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityMonitoringCondition)(nil)).Elem()
}

func (o SecurityMonitoringConditionMapOutput) ToSecurityMonitoringConditionMapOutput() SecurityMonitoringConditionMapOutput {
	return o
}

func (o SecurityMonitoringConditionMapOutput) ToSecurityMonitoringConditionMapOutputWithContext(ctx context.Context) SecurityMonitoringConditionMapOutput {
	return o
}

func (o SecurityMonitoringConditionMapOutput) MapIndex(k pulumi.StringInput) SecurityMonitoringConditionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityMonitoringCondition {
		return vs[0].(map[string]*SecurityMonitoringCondition)[vs[1].(string)]
	}).(SecurityMonitoringConditionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringConditionInput)(nil)).Elem(), &SecurityMonitoringCondition{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringConditionArrayInput)(nil)).Elem(), SecurityMonitoringConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringConditionMapInput)(nil)).Elem(), SecurityMonitoringConditionMap{})
	pulumi.RegisterOutputType(SecurityMonitoringConditionOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringConditionArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringConditionMapOutput{})
}
