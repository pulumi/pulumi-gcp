// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigee

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Enable/Disable add-ons for an Apigee environment.
//
// To get more information about EnvironmentAddonsConfig, see:
//
// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.addonsConfig/setAddonEnablement)
// * How-to Guides
//   - [Enable Analytics Add-On](https://cloud.google.com/apigee/docs/api-platform/reference/manage-analytics-add-on)
//
// ## Example Usage
//
// ## Import
//
// EnvironmentAddonsConfig can be imported using any of these accepted formats:
//
// * `{{env_id}}`
//
// When using the `pulumi import` command, EnvironmentAddonsConfig can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:apigee/environmentAddonsConfig:EnvironmentAddonsConfig default {{env_id}}
// ```
type EnvironmentAddonsConfig struct {
	pulumi.CustomResourceState

	// Flag to enable/disable Analytics.
	AnalyticsEnabled pulumi.BoolPtrOutput `pulumi:"analyticsEnabled"`
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId pulumi.StringOutput `pulumi:"envId"`
}

// NewEnvironmentAddonsConfig registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentAddonsConfig(ctx *pulumi.Context,
	name string, args *EnvironmentAddonsConfigArgs, opts ...pulumi.ResourceOption) (*EnvironmentAddonsConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvId == nil {
		return nil, errors.New("invalid value for required argument 'EnvId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentAddonsConfig
	err := ctx.RegisterResource("gcp:apigee/environmentAddonsConfig:EnvironmentAddonsConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentAddonsConfig gets an existing EnvironmentAddonsConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentAddonsConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentAddonsConfigState, opts ...pulumi.ResourceOption) (*EnvironmentAddonsConfig, error) {
	var resource EnvironmentAddonsConfig
	err := ctx.ReadResource("gcp:apigee/environmentAddonsConfig:EnvironmentAddonsConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentAddonsConfig resources.
type environmentAddonsConfigState struct {
	// Flag to enable/disable Analytics.
	AnalyticsEnabled *bool `pulumi:"analyticsEnabled"`
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId *string `pulumi:"envId"`
}

type EnvironmentAddonsConfigState struct {
	// Flag to enable/disable Analytics.
	AnalyticsEnabled pulumi.BoolPtrInput
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId pulumi.StringPtrInput
}

func (EnvironmentAddonsConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentAddonsConfigState)(nil)).Elem()
}

type environmentAddonsConfigArgs struct {
	// Flag to enable/disable Analytics.
	AnalyticsEnabled *bool `pulumi:"analyticsEnabled"`
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId string `pulumi:"envId"`
}

// The set of arguments for constructing a EnvironmentAddonsConfig resource.
type EnvironmentAddonsConfigArgs struct {
	// Flag to enable/disable Analytics.
	AnalyticsEnabled pulumi.BoolPtrInput
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	EnvId pulumi.StringInput
}

func (EnvironmentAddonsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentAddonsConfigArgs)(nil)).Elem()
}

type EnvironmentAddonsConfigInput interface {
	pulumi.Input

	ToEnvironmentAddonsConfigOutput() EnvironmentAddonsConfigOutput
	ToEnvironmentAddonsConfigOutputWithContext(ctx context.Context) EnvironmentAddonsConfigOutput
}

func (*EnvironmentAddonsConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentAddonsConfig)(nil)).Elem()
}

func (i *EnvironmentAddonsConfig) ToEnvironmentAddonsConfigOutput() EnvironmentAddonsConfigOutput {
	return i.ToEnvironmentAddonsConfigOutputWithContext(context.Background())
}

func (i *EnvironmentAddonsConfig) ToEnvironmentAddonsConfigOutputWithContext(ctx context.Context) EnvironmentAddonsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentAddonsConfigOutput)
}

// EnvironmentAddonsConfigArrayInput is an input type that accepts EnvironmentAddonsConfigArray and EnvironmentAddonsConfigArrayOutput values.
// You can construct a concrete instance of `EnvironmentAddonsConfigArrayInput` via:
//
//	EnvironmentAddonsConfigArray{ EnvironmentAddonsConfigArgs{...} }
type EnvironmentAddonsConfigArrayInput interface {
	pulumi.Input

	ToEnvironmentAddonsConfigArrayOutput() EnvironmentAddonsConfigArrayOutput
	ToEnvironmentAddonsConfigArrayOutputWithContext(context.Context) EnvironmentAddonsConfigArrayOutput
}

type EnvironmentAddonsConfigArray []EnvironmentAddonsConfigInput

func (EnvironmentAddonsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentAddonsConfig)(nil)).Elem()
}

func (i EnvironmentAddonsConfigArray) ToEnvironmentAddonsConfigArrayOutput() EnvironmentAddonsConfigArrayOutput {
	return i.ToEnvironmentAddonsConfigArrayOutputWithContext(context.Background())
}

func (i EnvironmentAddonsConfigArray) ToEnvironmentAddonsConfigArrayOutputWithContext(ctx context.Context) EnvironmentAddonsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentAddonsConfigArrayOutput)
}

// EnvironmentAddonsConfigMapInput is an input type that accepts EnvironmentAddonsConfigMap and EnvironmentAddonsConfigMapOutput values.
// You can construct a concrete instance of `EnvironmentAddonsConfigMapInput` via:
//
//	EnvironmentAddonsConfigMap{ "key": EnvironmentAddonsConfigArgs{...} }
type EnvironmentAddonsConfigMapInput interface {
	pulumi.Input

	ToEnvironmentAddonsConfigMapOutput() EnvironmentAddonsConfigMapOutput
	ToEnvironmentAddonsConfigMapOutputWithContext(context.Context) EnvironmentAddonsConfigMapOutput
}

type EnvironmentAddonsConfigMap map[string]EnvironmentAddonsConfigInput

func (EnvironmentAddonsConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentAddonsConfig)(nil)).Elem()
}

func (i EnvironmentAddonsConfigMap) ToEnvironmentAddonsConfigMapOutput() EnvironmentAddonsConfigMapOutput {
	return i.ToEnvironmentAddonsConfigMapOutputWithContext(context.Background())
}

func (i EnvironmentAddonsConfigMap) ToEnvironmentAddonsConfigMapOutputWithContext(ctx context.Context) EnvironmentAddonsConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentAddonsConfigMapOutput)
}

type EnvironmentAddonsConfigOutput struct{ *pulumi.OutputState }

func (EnvironmentAddonsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentAddonsConfig)(nil)).Elem()
}

func (o EnvironmentAddonsConfigOutput) ToEnvironmentAddonsConfigOutput() EnvironmentAddonsConfigOutput {
	return o
}

func (o EnvironmentAddonsConfigOutput) ToEnvironmentAddonsConfigOutputWithContext(ctx context.Context) EnvironmentAddonsConfigOutput {
	return o
}

// Flag to enable/disable Analytics.
func (o EnvironmentAddonsConfigOutput) AnalyticsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnvironmentAddonsConfig) pulumi.BoolPtrOutput { return v.AnalyticsEnabled }).(pulumi.BoolPtrOutput)
}

// The Apigee environment group associated with the Apigee environment,
// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
func (o EnvironmentAddonsConfigOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentAddonsConfig) pulumi.StringOutput { return v.EnvId }).(pulumi.StringOutput)
}

type EnvironmentAddonsConfigArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentAddonsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentAddonsConfig)(nil)).Elem()
}

func (o EnvironmentAddonsConfigArrayOutput) ToEnvironmentAddonsConfigArrayOutput() EnvironmentAddonsConfigArrayOutput {
	return o
}

func (o EnvironmentAddonsConfigArrayOutput) ToEnvironmentAddonsConfigArrayOutputWithContext(ctx context.Context) EnvironmentAddonsConfigArrayOutput {
	return o
}

func (o EnvironmentAddonsConfigArrayOutput) Index(i pulumi.IntInput) EnvironmentAddonsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnvironmentAddonsConfig {
		return vs[0].([]*EnvironmentAddonsConfig)[vs[1].(int)]
	}).(EnvironmentAddonsConfigOutput)
}

type EnvironmentAddonsConfigMapOutput struct{ *pulumi.OutputState }

func (EnvironmentAddonsConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentAddonsConfig)(nil)).Elem()
}

func (o EnvironmentAddonsConfigMapOutput) ToEnvironmentAddonsConfigMapOutput() EnvironmentAddonsConfigMapOutput {
	return o
}

func (o EnvironmentAddonsConfigMapOutput) ToEnvironmentAddonsConfigMapOutputWithContext(ctx context.Context) EnvironmentAddonsConfigMapOutput {
	return o
}

func (o EnvironmentAddonsConfigMapOutput) MapIndex(k pulumi.StringInput) EnvironmentAddonsConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnvironmentAddonsConfig {
		return vs[0].(map[string]*EnvironmentAddonsConfig)[vs[1].(string)]
	}).(EnvironmentAddonsConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentAddonsConfigInput)(nil)).Elem(), &EnvironmentAddonsConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentAddonsConfigArrayInput)(nil)).Elem(), EnvironmentAddonsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentAddonsConfigMapInput)(nil)).Elem(), EnvironmentAddonsConfigMap{})
	pulumi.RegisterOutputType(EnvironmentAddonsConfigOutput{})
	pulumi.RegisterOutputType(EnvironmentAddonsConfigArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentAddonsConfigMapOutput{})
}
