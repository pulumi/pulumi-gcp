// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigee

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a sharedflow attachment to a flowhook point.
//
// To get more information about Flowhook, see:
//
// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.flowhooks#FlowHook)
// * How-to Guides
//   - [organizations.environments.flowhooks](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.flowhooks#FlowHook)
//
// ## Import
//
// # Flowhook can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:apigee/flowhook:Flowhook default organizations/{{org_id}}/environments/{{environment}}/flowhooks/{{flow_hook_point}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:apigee/flowhook:Flowhook default {{org_id}}/{{environment}}/{{flow_hook_point}}
//
// ```
type Flowhook struct {
	pulumi.CustomResourceState

	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError pulumi.BoolPtrOutput `pulumi:"continueOnError"`
	// Description of the flow hook.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The resource ID of the environment.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook, PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint pulumi.StringOutput `pulumi:"flowHookPoint"`
	// The Apigee Organization associated with the environment
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow pulumi.StringOutput `pulumi:"sharedflow"`
}

// NewFlowhook registers a new resource with the given unique name, arguments, and options.
func NewFlowhook(ctx *pulumi.Context,
	name string, args *FlowhookArgs, opts ...pulumi.ResourceOption) (*Flowhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.FlowHookPoint == nil {
		return nil, errors.New("invalid value for required argument 'FlowHookPoint'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.Sharedflow == nil {
		return nil, errors.New("invalid value for required argument 'Sharedflow'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Flowhook
	err := ctx.RegisterResource("gcp:apigee/flowhook:Flowhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlowhook gets an existing Flowhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlowhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlowhookState, opts ...pulumi.ResourceOption) (*Flowhook, error) {
	var resource Flowhook
	err := ctx.ReadResource("gcp:apigee/flowhook:Flowhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Flowhook resources.
type flowhookState struct {
	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// Description of the flow hook.
	Description *string `pulumi:"description"`
	// The resource ID of the environment.
	Environment *string `pulumi:"environment"`
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook, PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint *string `pulumi:"flowHookPoint"`
	// The Apigee Organization associated with the environment
	OrgId *string `pulumi:"orgId"`
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow *string `pulumi:"sharedflow"`
}

type FlowhookState struct {
	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError pulumi.BoolPtrInput
	// Description of the flow hook.
	Description pulumi.StringPtrInput
	// The resource ID of the environment.
	Environment pulumi.StringPtrInput
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook, PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint pulumi.StringPtrInput
	// The Apigee Organization associated with the environment
	OrgId pulumi.StringPtrInput
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow pulumi.StringPtrInput
}

func (FlowhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*flowhookState)(nil)).Elem()
}

type flowhookArgs struct {
	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// Description of the flow hook.
	Description *string `pulumi:"description"`
	// The resource ID of the environment.
	Environment string `pulumi:"environment"`
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook, PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint string `pulumi:"flowHookPoint"`
	// The Apigee Organization associated with the environment
	OrgId string `pulumi:"orgId"`
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow string `pulumi:"sharedflow"`
}

// The set of arguments for constructing a Flowhook resource.
type FlowhookArgs struct {
	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError pulumi.BoolPtrInput
	// Description of the flow hook.
	Description pulumi.StringPtrInput
	// The resource ID of the environment.
	Environment pulumi.StringInput
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook, PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint pulumi.StringInput
	// The Apigee Organization associated with the environment
	OrgId pulumi.StringInput
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow pulumi.StringInput
}

func (FlowhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flowhookArgs)(nil)).Elem()
}

type FlowhookInput interface {
	pulumi.Input

	ToFlowhookOutput() FlowhookOutput
	ToFlowhookOutputWithContext(ctx context.Context) FlowhookOutput
}

func (*Flowhook) ElementType() reflect.Type {
	return reflect.TypeOf((**Flowhook)(nil)).Elem()
}

func (i *Flowhook) ToFlowhookOutput() FlowhookOutput {
	return i.ToFlowhookOutputWithContext(context.Background())
}

func (i *Flowhook) ToFlowhookOutputWithContext(ctx context.Context) FlowhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowhookOutput)
}

// FlowhookArrayInput is an input type that accepts FlowhookArray and FlowhookArrayOutput values.
// You can construct a concrete instance of `FlowhookArrayInput` via:
//
//	FlowhookArray{ FlowhookArgs{...} }
type FlowhookArrayInput interface {
	pulumi.Input

	ToFlowhookArrayOutput() FlowhookArrayOutput
	ToFlowhookArrayOutputWithContext(context.Context) FlowhookArrayOutput
}

type FlowhookArray []FlowhookInput

func (FlowhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Flowhook)(nil)).Elem()
}

func (i FlowhookArray) ToFlowhookArrayOutput() FlowhookArrayOutput {
	return i.ToFlowhookArrayOutputWithContext(context.Background())
}

func (i FlowhookArray) ToFlowhookArrayOutputWithContext(ctx context.Context) FlowhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowhookArrayOutput)
}

// FlowhookMapInput is an input type that accepts FlowhookMap and FlowhookMapOutput values.
// You can construct a concrete instance of `FlowhookMapInput` via:
//
//	FlowhookMap{ "key": FlowhookArgs{...} }
type FlowhookMapInput interface {
	pulumi.Input

	ToFlowhookMapOutput() FlowhookMapOutput
	ToFlowhookMapOutputWithContext(context.Context) FlowhookMapOutput
}

type FlowhookMap map[string]FlowhookInput

func (FlowhookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Flowhook)(nil)).Elem()
}

func (i FlowhookMap) ToFlowhookMapOutput() FlowhookMapOutput {
	return i.ToFlowhookMapOutputWithContext(context.Background())
}

func (i FlowhookMap) ToFlowhookMapOutputWithContext(ctx context.Context) FlowhookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowhookMapOutput)
}

type FlowhookOutput struct{ *pulumi.OutputState }

func (FlowhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Flowhook)(nil)).Elem()
}

func (o FlowhookOutput) ToFlowhookOutput() FlowhookOutput {
	return o
}

func (o FlowhookOutput) ToFlowhookOutputWithContext(ctx context.Context) FlowhookOutput {
	return o
}

// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
func (o FlowhookOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Flowhook) pulumi.BoolPtrOutput { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// Description of the flow hook.
func (o FlowhookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Flowhook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The resource ID of the environment.
func (o FlowhookOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *Flowhook) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook, PreTargetFlowHook, or PostTargetFlowHook.
func (o FlowhookOutput) FlowHookPoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Flowhook) pulumi.StringOutput { return v.FlowHookPoint }).(pulumi.StringOutput)
}

// The Apigee Organization associated with the environment
func (o FlowhookOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *Flowhook) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Id of the Sharedflow attaching to a flowhook point.
func (o FlowhookOutput) Sharedflow() pulumi.StringOutput {
	return o.ApplyT(func(v *Flowhook) pulumi.StringOutput { return v.Sharedflow }).(pulumi.StringOutput)
}

type FlowhookArrayOutput struct{ *pulumi.OutputState }

func (FlowhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Flowhook)(nil)).Elem()
}

func (o FlowhookArrayOutput) ToFlowhookArrayOutput() FlowhookArrayOutput {
	return o
}

func (o FlowhookArrayOutput) ToFlowhookArrayOutputWithContext(ctx context.Context) FlowhookArrayOutput {
	return o
}

func (o FlowhookArrayOutput) Index(i pulumi.IntInput) FlowhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Flowhook {
		return vs[0].([]*Flowhook)[vs[1].(int)]
	}).(FlowhookOutput)
}

type FlowhookMapOutput struct{ *pulumi.OutputState }

func (FlowhookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Flowhook)(nil)).Elem()
}

func (o FlowhookMapOutput) ToFlowhookMapOutput() FlowhookMapOutput {
	return o
}

func (o FlowhookMapOutput) ToFlowhookMapOutputWithContext(ctx context.Context) FlowhookMapOutput {
	return o
}

func (o FlowhookMapOutput) MapIndex(k pulumi.StringInput) FlowhookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Flowhook {
		return vs[0].(map[string]*Flowhook)[vs[1].(string)]
	}).(FlowhookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlowhookInput)(nil)).Elem(), &Flowhook{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowhookArrayInput)(nil)).Elem(), FlowhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowhookMapInput)(nil)).Elem(), FlowhookMap{})
	pulumi.RegisterOutputType(FlowhookOutput{})
	pulumi.RegisterOutputType(FlowhookArrayOutput{})
	pulumi.RegisterOutputType(FlowhookMapOutput{})
}
