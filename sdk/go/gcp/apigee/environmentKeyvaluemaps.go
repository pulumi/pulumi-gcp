// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigee

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Collection of key/value string pairs.
//
// To get more information about EnvironmentKeyvaluemaps, see:
//
// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keyvaluemaps/create)
// * How-to Guides
//   - [Using key value maps](https://cloud.google.com/apigee/docs/api-platform/cache/key-value-maps)
//
// ## Example Usage
//
// ### Apigee Environment Keyvaluemaps Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/apigee"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/servicenetworking"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := organizations.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			apigeeNetwork, err := compute.NewNetwork(ctx, "apigee_network", &compute.NetworkArgs{
//				Name: pulumi.String("apigee-network"),
//			})
//			if err != nil {
//				return err
//			}
//			apigeeRange, err := compute.NewGlobalAddress(ctx, "apigee_range", &compute.GlobalAddressArgs{
//				Name:         pulumi.String("apigee-range"),
//				Purpose:      pulumi.String("VPC_PEERING"),
//				AddressType:  pulumi.String("INTERNAL"),
//				PrefixLength: pulumi.Int(16),
//				Network:      apigeeNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			apigeeVpcConnection, err := servicenetworking.NewConnection(ctx, "apigee_vpc_connection", &servicenetworking.ConnectionArgs{
//				Network: apigeeNetwork.ID(),
//				Service: pulumi.String("servicenetworking.googleapis.com"),
//				ReservedPeeringRanges: pulumi.StringArray{
//					apigeeRange.Name,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			apigeeOrg, err := apigee.NewOrganization(ctx, "apigee_org", &apigee.OrganizationArgs{
//				AnalyticsRegion:   pulumi.String("us-central1"),
//				ProjectId:         pulumi.String(current.Project),
//				AuthorizedNetwork: apigeeNetwork.ID(),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				apigeeVpcConnection,
//			}))
//			if err != nil {
//				return err
//			}
//			apigeeEnvironment, err := apigee.NewEnvironment(ctx, "apigee_environment", &apigee.EnvironmentArgs{
//				OrgId:       apigeeOrg.ID(),
//				Name:        pulumi.String("tf-test-env"),
//				Description: pulumi.String("Apigee Environment"),
//				DisplayName: pulumi.String("Apigee Environment"),
//			})
//			if err != nil {
//				return err
//			}
//			apigeeInstance, err := apigee.NewInstance(ctx, "apigee_instance", &apigee.InstanceArgs{
//				Name:     pulumi.String("tf-test-instance"),
//				Location: pulumi.String("us-central1"),
//				OrgId:    apigeeOrg.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			apigeeInstanceAttachment, err := apigee.NewInstanceAttachment(ctx, "apigee_instance_attachment", &apigee.InstanceAttachmentArgs{
//				InstanceId:  apigeeInstance.ID(),
//				Environment: apigeeEnvironment.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apigee.NewEnvironmentKeyvaluemaps(ctx, "apigee_environment_keyvaluemaps", &apigee.EnvironmentKeyvaluemapsArgs{
//				EnvId: apigeeEnvironment.ID(),
//				Name:  pulumi.String("tf-test-env-kvms"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				apigeeOrg,
//				apigeeEnvironment,
//				apigeeInstance,
//				apigeeInstanceAttachment,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// EnvironmentKeyvaluemaps can be imported using any of these accepted formats:
//
// * `{{env_id}}/keyvaluemaps/{{name}}`
//
// * `{{env_id}}/{{name}}`
//
// When using the `pulumi import` command, EnvironmentKeyvaluemaps can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:apigee/environmentKeyvaluemaps:EnvironmentKeyvaluemaps default {{env_id}}/keyvaluemaps/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:apigee/environmentKeyvaluemaps:EnvironmentKeyvaluemaps default {{env_id}}/{{name}}
// ```
type EnvironmentKeyvaluemaps struct {
	pulumi.CustomResourceState

	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	//
	// ***
	EnvId pulumi.StringOutput `pulumi:"envId"`
	// Required. ID of the key value map.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewEnvironmentKeyvaluemaps registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentKeyvaluemaps(ctx *pulumi.Context,
	name string, args *EnvironmentKeyvaluemapsArgs, opts ...pulumi.ResourceOption) (*EnvironmentKeyvaluemaps, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvId == nil {
		return nil, errors.New("invalid value for required argument 'EnvId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentKeyvaluemaps
	err := ctx.RegisterResource("gcp:apigee/environmentKeyvaluemaps:EnvironmentKeyvaluemaps", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentKeyvaluemaps gets an existing EnvironmentKeyvaluemaps resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentKeyvaluemaps(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentKeyvaluemapsState, opts ...pulumi.ResourceOption) (*EnvironmentKeyvaluemaps, error) {
	var resource EnvironmentKeyvaluemaps
	err := ctx.ReadResource("gcp:apigee/environmentKeyvaluemaps:EnvironmentKeyvaluemaps", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentKeyvaluemaps resources.
type environmentKeyvaluemapsState struct {
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	//
	// ***
	EnvId *string `pulumi:"envId"`
	// Required. ID of the key value map.
	Name *string `pulumi:"name"`
}

type EnvironmentKeyvaluemapsState struct {
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	//
	// ***
	EnvId pulumi.StringPtrInput
	// Required. ID of the key value map.
	Name pulumi.StringPtrInput
}

func (EnvironmentKeyvaluemapsState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentKeyvaluemapsState)(nil)).Elem()
}

type environmentKeyvaluemapsArgs struct {
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	//
	// ***
	EnvId string `pulumi:"envId"`
	// Required. ID of the key value map.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a EnvironmentKeyvaluemaps resource.
type EnvironmentKeyvaluemapsArgs struct {
	// The Apigee environment group associated with the Apigee environment,
	// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
	//
	// ***
	EnvId pulumi.StringInput
	// Required. ID of the key value map.
	Name pulumi.StringPtrInput
}

func (EnvironmentKeyvaluemapsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentKeyvaluemapsArgs)(nil)).Elem()
}

type EnvironmentKeyvaluemapsInput interface {
	pulumi.Input

	ToEnvironmentKeyvaluemapsOutput() EnvironmentKeyvaluemapsOutput
	ToEnvironmentKeyvaluemapsOutputWithContext(ctx context.Context) EnvironmentKeyvaluemapsOutput
}

func (*EnvironmentKeyvaluemaps) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentKeyvaluemaps)(nil)).Elem()
}

func (i *EnvironmentKeyvaluemaps) ToEnvironmentKeyvaluemapsOutput() EnvironmentKeyvaluemapsOutput {
	return i.ToEnvironmentKeyvaluemapsOutputWithContext(context.Background())
}

func (i *EnvironmentKeyvaluemaps) ToEnvironmentKeyvaluemapsOutputWithContext(ctx context.Context) EnvironmentKeyvaluemapsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentKeyvaluemapsOutput)
}

// EnvironmentKeyvaluemapsArrayInput is an input type that accepts EnvironmentKeyvaluemapsArray and EnvironmentKeyvaluemapsArrayOutput values.
// You can construct a concrete instance of `EnvironmentKeyvaluemapsArrayInput` via:
//
//	EnvironmentKeyvaluemapsArray{ EnvironmentKeyvaluemapsArgs{...} }
type EnvironmentKeyvaluemapsArrayInput interface {
	pulumi.Input

	ToEnvironmentKeyvaluemapsArrayOutput() EnvironmentKeyvaluemapsArrayOutput
	ToEnvironmentKeyvaluemapsArrayOutputWithContext(context.Context) EnvironmentKeyvaluemapsArrayOutput
}

type EnvironmentKeyvaluemapsArray []EnvironmentKeyvaluemapsInput

func (EnvironmentKeyvaluemapsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentKeyvaluemaps)(nil)).Elem()
}

func (i EnvironmentKeyvaluemapsArray) ToEnvironmentKeyvaluemapsArrayOutput() EnvironmentKeyvaluemapsArrayOutput {
	return i.ToEnvironmentKeyvaluemapsArrayOutputWithContext(context.Background())
}

func (i EnvironmentKeyvaluemapsArray) ToEnvironmentKeyvaluemapsArrayOutputWithContext(ctx context.Context) EnvironmentKeyvaluemapsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentKeyvaluemapsArrayOutput)
}

// EnvironmentKeyvaluemapsMapInput is an input type that accepts EnvironmentKeyvaluemapsMap and EnvironmentKeyvaluemapsMapOutput values.
// You can construct a concrete instance of `EnvironmentKeyvaluemapsMapInput` via:
//
//	EnvironmentKeyvaluemapsMap{ "key": EnvironmentKeyvaluemapsArgs{...} }
type EnvironmentKeyvaluemapsMapInput interface {
	pulumi.Input

	ToEnvironmentKeyvaluemapsMapOutput() EnvironmentKeyvaluemapsMapOutput
	ToEnvironmentKeyvaluemapsMapOutputWithContext(context.Context) EnvironmentKeyvaluemapsMapOutput
}

type EnvironmentKeyvaluemapsMap map[string]EnvironmentKeyvaluemapsInput

func (EnvironmentKeyvaluemapsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentKeyvaluemaps)(nil)).Elem()
}

func (i EnvironmentKeyvaluemapsMap) ToEnvironmentKeyvaluemapsMapOutput() EnvironmentKeyvaluemapsMapOutput {
	return i.ToEnvironmentKeyvaluemapsMapOutputWithContext(context.Background())
}

func (i EnvironmentKeyvaluemapsMap) ToEnvironmentKeyvaluemapsMapOutputWithContext(ctx context.Context) EnvironmentKeyvaluemapsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentKeyvaluemapsMapOutput)
}

type EnvironmentKeyvaluemapsOutput struct{ *pulumi.OutputState }

func (EnvironmentKeyvaluemapsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentKeyvaluemaps)(nil)).Elem()
}

func (o EnvironmentKeyvaluemapsOutput) ToEnvironmentKeyvaluemapsOutput() EnvironmentKeyvaluemapsOutput {
	return o
}

func (o EnvironmentKeyvaluemapsOutput) ToEnvironmentKeyvaluemapsOutputWithContext(ctx context.Context) EnvironmentKeyvaluemapsOutput {
	return o
}

// The Apigee environment group associated with the Apigee environment,
// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
//
// ***
func (o EnvironmentKeyvaluemapsOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentKeyvaluemaps) pulumi.StringOutput { return v.EnvId }).(pulumi.StringOutput)
}

// Required. ID of the key value map.
func (o EnvironmentKeyvaluemapsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentKeyvaluemaps) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type EnvironmentKeyvaluemapsArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentKeyvaluemapsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentKeyvaluemaps)(nil)).Elem()
}

func (o EnvironmentKeyvaluemapsArrayOutput) ToEnvironmentKeyvaluemapsArrayOutput() EnvironmentKeyvaluemapsArrayOutput {
	return o
}

func (o EnvironmentKeyvaluemapsArrayOutput) ToEnvironmentKeyvaluemapsArrayOutputWithContext(ctx context.Context) EnvironmentKeyvaluemapsArrayOutput {
	return o
}

func (o EnvironmentKeyvaluemapsArrayOutput) Index(i pulumi.IntInput) EnvironmentKeyvaluemapsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnvironmentKeyvaluemaps {
		return vs[0].([]*EnvironmentKeyvaluemaps)[vs[1].(int)]
	}).(EnvironmentKeyvaluemapsOutput)
}

type EnvironmentKeyvaluemapsMapOutput struct{ *pulumi.OutputState }

func (EnvironmentKeyvaluemapsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentKeyvaluemaps)(nil)).Elem()
}

func (o EnvironmentKeyvaluemapsMapOutput) ToEnvironmentKeyvaluemapsMapOutput() EnvironmentKeyvaluemapsMapOutput {
	return o
}

func (o EnvironmentKeyvaluemapsMapOutput) ToEnvironmentKeyvaluemapsMapOutputWithContext(ctx context.Context) EnvironmentKeyvaluemapsMapOutput {
	return o
}

func (o EnvironmentKeyvaluemapsMapOutput) MapIndex(k pulumi.StringInput) EnvironmentKeyvaluemapsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnvironmentKeyvaluemaps {
		return vs[0].(map[string]*EnvironmentKeyvaluemaps)[vs[1].(string)]
	}).(EnvironmentKeyvaluemapsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentKeyvaluemapsInput)(nil)).Elem(), &EnvironmentKeyvaluemaps{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentKeyvaluemapsArrayInput)(nil)).Elem(), EnvironmentKeyvaluemapsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentKeyvaluemapsMapInput)(nil)).Elem(), EnvironmentKeyvaluemapsMap{})
	pulumi.RegisterOutputType(EnvironmentKeyvaluemapsOutput{})
	pulumi.RegisterOutputType(EnvironmentKeyvaluemapsArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentKeyvaluemapsMapOutput{})
}
