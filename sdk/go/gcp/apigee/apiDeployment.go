// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigee

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a deployment of an API proxy.
//
// To get more information about ApiDeployment, see:
//
// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.deployments)
// * How-to Guides
//   - [QUICKSTART_TITLE](https://cloud.google.com/apigee/docs/api-platform/deploy/ui-deploy-overview)
//
// ## Example Usage
//
// ## Import
//
// ApiDeployment can be imported using any of these accepted formats:
//
// * `organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}/deployments`
//
// * `organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}`
//
// * `{{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}/deployments`
//
// * `{{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}`
//
// When using the `pulumi import` command, ApiDeployment can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}/deployments
// ```
//
// ```sh
// $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}
// ```
//
// ```sh
// $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default {{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}/deployments
// ```
//
// ```sh
// $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default {{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}
// ```
type ApiDeployment struct {
	pulumi.CustomResourceState

	// The Apigee Environment associated with the Apigee API deployment.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The Apigee Organization associated with the Apigee API deployment.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// The Apigee API associated with the Apigee API deployment.
	ProxyId pulumi.StringOutput `pulumi:"proxyId"`
	// The revision of the API proxy to be deployed.
	Revision pulumi.StringOutput `pulumi:"revision"`
}

// NewApiDeployment registers a new resource with the given unique name, arguments, and options.
func NewApiDeployment(ctx *pulumi.Context,
	name string, args *ApiDeploymentArgs, opts ...pulumi.ResourceOption) (*ApiDeployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.ProxyId == nil {
		return nil, errors.New("invalid value for required argument 'ProxyId'")
	}
	if args.Revision == nil {
		return nil, errors.New("invalid value for required argument 'Revision'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiDeployment
	err := ctx.RegisterResource("gcp:apigee/apiDeployment:ApiDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiDeployment gets an existing ApiDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiDeploymentState, opts ...pulumi.ResourceOption) (*ApiDeployment, error) {
	var resource ApiDeployment
	err := ctx.ReadResource("gcp:apigee/apiDeployment:ApiDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiDeployment resources.
type apiDeploymentState struct {
	// The Apigee Environment associated with the Apigee API deployment.
	Environment *string `pulumi:"environment"`
	// The Apigee Organization associated with the Apigee API deployment.
	OrgId *string `pulumi:"orgId"`
	// The Apigee API associated with the Apigee API deployment.
	ProxyId *string `pulumi:"proxyId"`
	// The revision of the API proxy to be deployed.
	Revision *string `pulumi:"revision"`
}

type ApiDeploymentState struct {
	// The Apigee Environment associated with the Apigee API deployment.
	Environment pulumi.StringPtrInput
	// The Apigee Organization associated with the Apigee API deployment.
	OrgId pulumi.StringPtrInput
	// The Apigee API associated with the Apigee API deployment.
	ProxyId pulumi.StringPtrInput
	// The revision of the API proxy to be deployed.
	Revision pulumi.StringPtrInput
}

func (ApiDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiDeploymentState)(nil)).Elem()
}

type apiDeploymentArgs struct {
	// The Apigee Environment associated with the Apigee API deployment.
	Environment string `pulumi:"environment"`
	// The Apigee Organization associated with the Apigee API deployment.
	OrgId string `pulumi:"orgId"`
	// The Apigee API associated with the Apigee API deployment.
	ProxyId string `pulumi:"proxyId"`
	// The revision of the API proxy to be deployed.
	Revision string `pulumi:"revision"`
}

// The set of arguments for constructing a ApiDeployment resource.
type ApiDeploymentArgs struct {
	// The Apigee Environment associated with the Apigee API deployment.
	Environment pulumi.StringInput
	// The Apigee Organization associated with the Apigee API deployment.
	OrgId pulumi.StringInput
	// The Apigee API associated with the Apigee API deployment.
	ProxyId pulumi.StringInput
	// The revision of the API proxy to be deployed.
	Revision pulumi.StringInput
}

func (ApiDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiDeploymentArgs)(nil)).Elem()
}

type ApiDeploymentInput interface {
	pulumi.Input

	ToApiDeploymentOutput() ApiDeploymentOutput
	ToApiDeploymentOutputWithContext(ctx context.Context) ApiDeploymentOutput
}

func (*ApiDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDeployment)(nil)).Elem()
}

func (i *ApiDeployment) ToApiDeploymentOutput() ApiDeploymentOutput {
	return i.ToApiDeploymentOutputWithContext(context.Background())
}

func (i *ApiDeployment) ToApiDeploymentOutputWithContext(ctx context.Context) ApiDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDeploymentOutput)
}

// ApiDeploymentArrayInput is an input type that accepts ApiDeploymentArray and ApiDeploymentArrayOutput values.
// You can construct a concrete instance of `ApiDeploymentArrayInput` via:
//
//	ApiDeploymentArray{ ApiDeploymentArgs{...} }
type ApiDeploymentArrayInput interface {
	pulumi.Input

	ToApiDeploymentArrayOutput() ApiDeploymentArrayOutput
	ToApiDeploymentArrayOutputWithContext(context.Context) ApiDeploymentArrayOutput
}

type ApiDeploymentArray []ApiDeploymentInput

func (ApiDeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiDeployment)(nil)).Elem()
}

func (i ApiDeploymentArray) ToApiDeploymentArrayOutput() ApiDeploymentArrayOutput {
	return i.ToApiDeploymentArrayOutputWithContext(context.Background())
}

func (i ApiDeploymentArray) ToApiDeploymentArrayOutputWithContext(ctx context.Context) ApiDeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDeploymentArrayOutput)
}

// ApiDeploymentMapInput is an input type that accepts ApiDeploymentMap and ApiDeploymentMapOutput values.
// You can construct a concrete instance of `ApiDeploymentMapInput` via:
//
//	ApiDeploymentMap{ "key": ApiDeploymentArgs{...} }
type ApiDeploymentMapInput interface {
	pulumi.Input

	ToApiDeploymentMapOutput() ApiDeploymentMapOutput
	ToApiDeploymentMapOutputWithContext(context.Context) ApiDeploymentMapOutput
}

type ApiDeploymentMap map[string]ApiDeploymentInput

func (ApiDeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiDeployment)(nil)).Elem()
}

func (i ApiDeploymentMap) ToApiDeploymentMapOutput() ApiDeploymentMapOutput {
	return i.ToApiDeploymentMapOutputWithContext(context.Background())
}

func (i ApiDeploymentMap) ToApiDeploymentMapOutputWithContext(ctx context.Context) ApiDeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDeploymentMapOutput)
}

type ApiDeploymentOutput struct{ *pulumi.OutputState }

func (ApiDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDeployment)(nil)).Elem()
}

func (o ApiDeploymentOutput) ToApiDeploymentOutput() ApiDeploymentOutput {
	return o
}

func (o ApiDeploymentOutput) ToApiDeploymentOutputWithContext(ctx context.Context) ApiDeploymentOutput {
	return o
}

// The Apigee Environment associated with the Apigee API deployment.
func (o ApiDeploymentOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiDeployment) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// The Apigee Organization associated with the Apigee API deployment.
func (o ApiDeploymentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiDeployment) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// The Apigee API associated with the Apigee API deployment.
func (o ApiDeploymentOutput) ProxyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiDeployment) pulumi.StringOutput { return v.ProxyId }).(pulumi.StringOutput)
}

// The revision of the API proxy to be deployed.
func (o ApiDeploymentOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiDeployment) pulumi.StringOutput { return v.Revision }).(pulumi.StringOutput)
}

type ApiDeploymentArrayOutput struct{ *pulumi.OutputState }

func (ApiDeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiDeployment)(nil)).Elem()
}

func (o ApiDeploymentArrayOutput) ToApiDeploymentArrayOutput() ApiDeploymentArrayOutput {
	return o
}

func (o ApiDeploymentArrayOutput) ToApiDeploymentArrayOutputWithContext(ctx context.Context) ApiDeploymentArrayOutput {
	return o
}

func (o ApiDeploymentArrayOutput) Index(i pulumi.IntInput) ApiDeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiDeployment {
		return vs[0].([]*ApiDeployment)[vs[1].(int)]
	}).(ApiDeploymentOutput)
}

type ApiDeploymentMapOutput struct{ *pulumi.OutputState }

func (ApiDeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiDeployment)(nil)).Elem()
}

func (o ApiDeploymentMapOutput) ToApiDeploymentMapOutput() ApiDeploymentMapOutput {
	return o
}

func (o ApiDeploymentMapOutput) ToApiDeploymentMapOutputWithContext(ctx context.Context) ApiDeploymentMapOutput {
	return o
}

func (o ApiDeploymentMapOutput) MapIndex(k pulumi.StringInput) ApiDeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiDeployment {
		return vs[0].(map[string]*ApiDeployment)[vs[1].(string)]
	}).(ApiDeploymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDeploymentInput)(nil)).Elem(), &ApiDeployment{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDeploymentArrayInput)(nil)).Elem(), ApiDeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDeploymentMapInput)(nil)).Elem(), ApiDeploymentMap{})
	pulumi.RegisterOutputType(ApiDeploymentOutput{})
	pulumi.RegisterOutputType(ApiDeploymentArrayOutput{})
	pulumi.RegisterOutputType(ApiDeploymentMapOutput{})
}
