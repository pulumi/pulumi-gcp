// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigee

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// To get more information about API proxies see, see:
//
// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis)
// * How-to Guides
//   - [API proxies](https://cloud.google.com/apigee/docs/resources)
//
// ## Import
//
// An API proxy can be imported using any of these accepted formats:
//
// * `{{org_id}}/apis/{{name}}`
//
// * `{{org_id}}/{{name}}`
//
// When using the `pulumi import` command, API proxy can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:apigee/api:Api default {{org_id}}/apis/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:apigee/api:Api default {{org_id}}/{{name}}
// ```
type Api struct {
	pulumi.CustomResourceState

	// Path to the config zip bundle.
	//
	// ***
	ConfigBundle  pulumi.StringOutput    `pulumi:"configBundle"`
	DetectMd5hash pulumi.StringPtrOutput `pulumi:"detectMd5hash"`
	// The id of the most recently created revision for this API proxy.
	LatestRevisionId pulumi.StringOutput `pulumi:"latestRevisionId"`
	// (Computed) Base 64 MD5 hash of the uploaded data. It is speculative as remote does not return hash of the bundle. Remote changes are detected using returned lastModified timestamp.
	Md5hash pulumi.StringOutput `pulumi:"md5hash"`
	// Metadata describing the API proxy.
	// Structure is documented below.
	MetaDatas ApiMetaDataArrayOutput `pulumi:"metaDatas"`
	// The ID of the API proxy.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Apigee Organization name associated with the Apigee instance.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// A list of revisions of this API proxy.
	Revisions pulumi.StringArrayOutput `pulumi:"revisions"`
}

// NewApi registers a new resource with the given unique name, arguments, and options.
func NewApi(ctx *pulumi.Context,
	name string, args *ApiArgs, opts ...pulumi.ResourceOption) (*Api, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigBundle == nil {
		return nil, errors.New("invalid value for required argument 'ConfigBundle'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Api
	err := ctx.RegisterResource("gcp:apigee/api:Api", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApi gets an existing Api resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiState, opts ...pulumi.ResourceOption) (*Api, error) {
	var resource Api
	err := ctx.ReadResource("gcp:apigee/api:Api", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Api resources.
type apiState struct {
	// Path to the config zip bundle.
	//
	// ***
	ConfigBundle  *string `pulumi:"configBundle"`
	DetectMd5hash *string `pulumi:"detectMd5hash"`
	// The id of the most recently created revision for this API proxy.
	LatestRevisionId *string `pulumi:"latestRevisionId"`
	// (Computed) Base 64 MD5 hash of the uploaded data. It is speculative as remote does not return hash of the bundle. Remote changes are detected using returned lastModified timestamp.
	Md5hash *string `pulumi:"md5hash"`
	// Metadata describing the API proxy.
	// Structure is documented below.
	MetaDatas []ApiMetaData `pulumi:"metaDatas"`
	// The ID of the API proxy.
	Name *string `pulumi:"name"`
	// The Apigee Organization name associated with the Apigee instance.
	OrgId *string `pulumi:"orgId"`
	// A list of revisions of this API proxy.
	Revisions []string `pulumi:"revisions"`
}

type ApiState struct {
	// Path to the config zip bundle.
	//
	// ***
	ConfigBundle  pulumi.StringPtrInput
	DetectMd5hash pulumi.StringPtrInput
	// The id of the most recently created revision for this API proxy.
	LatestRevisionId pulumi.StringPtrInput
	// (Computed) Base 64 MD5 hash of the uploaded data. It is speculative as remote does not return hash of the bundle. Remote changes are detected using returned lastModified timestamp.
	Md5hash pulumi.StringPtrInput
	// Metadata describing the API proxy.
	// Structure is documented below.
	MetaDatas ApiMetaDataArrayInput
	// The ID of the API proxy.
	Name pulumi.StringPtrInput
	// The Apigee Organization name associated with the Apigee instance.
	OrgId pulumi.StringPtrInput
	// A list of revisions of this API proxy.
	Revisions pulumi.StringArrayInput
}

func (ApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiState)(nil)).Elem()
}

type apiArgs struct {
	// Path to the config zip bundle.
	//
	// ***
	ConfigBundle  string  `pulumi:"configBundle"`
	DetectMd5hash *string `pulumi:"detectMd5hash"`
	// The ID of the API proxy.
	Name *string `pulumi:"name"`
	// The Apigee Organization name associated with the Apigee instance.
	OrgId string `pulumi:"orgId"`
}

// The set of arguments for constructing a Api resource.
type ApiArgs struct {
	// Path to the config zip bundle.
	//
	// ***
	ConfigBundle  pulumi.StringInput
	DetectMd5hash pulumi.StringPtrInput
	// The ID of the API proxy.
	Name pulumi.StringPtrInput
	// The Apigee Organization name associated with the Apigee instance.
	OrgId pulumi.StringInput
}

func (ApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiArgs)(nil)).Elem()
}

type ApiInput interface {
	pulumi.Input

	ToApiOutput() ApiOutput
	ToApiOutputWithContext(ctx context.Context) ApiOutput
}

func (*Api) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (i *Api) ToApiOutput() ApiOutput {
	return i.ToApiOutputWithContext(context.Background())
}

func (i *Api) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOutput)
}

// ApiArrayInput is an input type that accepts ApiArray and ApiArrayOutput values.
// You can construct a concrete instance of `ApiArrayInput` via:
//
//	ApiArray{ ApiArgs{...} }
type ApiArrayInput interface {
	pulumi.Input

	ToApiArrayOutput() ApiArrayOutput
	ToApiArrayOutputWithContext(context.Context) ApiArrayOutput
}

type ApiArray []ApiInput

func (ApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Api)(nil)).Elem()
}

func (i ApiArray) ToApiArrayOutput() ApiArrayOutput {
	return i.ToApiArrayOutputWithContext(context.Background())
}

func (i ApiArray) ToApiArrayOutputWithContext(ctx context.Context) ApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiArrayOutput)
}

// ApiMapInput is an input type that accepts ApiMap and ApiMapOutput values.
// You can construct a concrete instance of `ApiMapInput` via:
//
//	ApiMap{ "key": ApiArgs{...} }
type ApiMapInput interface {
	pulumi.Input

	ToApiMapOutput() ApiMapOutput
	ToApiMapOutputWithContext(context.Context) ApiMapOutput
}

type ApiMap map[string]ApiInput

func (ApiMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Api)(nil)).Elem()
}

func (i ApiMap) ToApiMapOutput() ApiMapOutput {
	return i.ToApiMapOutputWithContext(context.Background())
}

func (i ApiMap) ToApiMapOutputWithContext(ctx context.Context) ApiMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiMapOutput)
}

type ApiOutput struct{ *pulumi.OutputState }

func (ApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (o ApiOutput) ToApiOutput() ApiOutput {
	return o
}

func (o ApiOutput) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return o
}

// Path to the config zip bundle.
//
// ***
func (o ApiOutput) ConfigBundle() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.ConfigBundle }).(pulumi.StringOutput)
}

func (o ApiOutput) DetectMd5hash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.DetectMd5hash }).(pulumi.StringPtrOutput)
}

// The id of the most recently created revision for this API proxy.
func (o ApiOutput) LatestRevisionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.LatestRevisionId }).(pulumi.StringOutput)
}

// (Computed) Base 64 MD5 hash of the uploaded data. It is speculative as remote does not return hash of the bundle. Remote changes are detected using returned lastModified timestamp.
func (o ApiOutput) Md5hash() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Md5hash }).(pulumi.StringOutput)
}

// Metadata describing the API proxy.
// Structure is documented below.
func (o ApiOutput) MetaDatas() ApiMetaDataArrayOutput {
	return o.ApplyT(func(v *Api) ApiMetaDataArrayOutput { return v.MetaDatas }).(ApiMetaDataArrayOutput)
}

// The ID of the API proxy.
func (o ApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Apigee Organization name associated with the Apigee instance.
func (o ApiOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// A list of revisions of this API proxy.
func (o ApiOutput) Revisions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Api) pulumi.StringArrayOutput { return v.Revisions }).(pulumi.StringArrayOutput)
}

type ApiArrayOutput struct{ *pulumi.OutputState }

func (ApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Api)(nil)).Elem()
}

func (o ApiArrayOutput) ToApiArrayOutput() ApiArrayOutput {
	return o
}

func (o ApiArrayOutput) ToApiArrayOutputWithContext(ctx context.Context) ApiArrayOutput {
	return o
}

func (o ApiArrayOutput) Index(i pulumi.IntInput) ApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Api {
		return vs[0].([]*Api)[vs[1].(int)]
	}).(ApiOutput)
}

type ApiMapOutput struct{ *pulumi.OutputState }

func (ApiMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Api)(nil)).Elem()
}

func (o ApiMapOutput) ToApiMapOutput() ApiMapOutput {
	return o
}

func (o ApiMapOutput) ToApiMapOutputWithContext(ctx context.Context) ApiMapOutput {
	return o
}

func (o ApiMapOutput) MapIndex(k pulumi.StringInput) ApiOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Api {
		return vs[0].(map[string]*Api)[vs[1].(string)]
	}).(ApiOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiInput)(nil)).Elem(), &Api{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiArrayInput)(nil)).Elem(), ApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiMapInput)(nil)).Elem(), ApiMap{})
	pulumi.RegisterOutputType(ApiOutput{})
	pulumi.RegisterOutputType(ApiArrayOutput{})
	pulumi.RegisterOutputType(ApiMapOutput{})
}
