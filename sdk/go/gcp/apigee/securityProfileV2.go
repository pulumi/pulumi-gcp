// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigee

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Security profile for risk assessment version 2 in Apigee.
//
// To get more information about SecurityProfileV2, see:
//
// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.securityProfilesV2/create)
// * How-to Guides
//   - [Creating a security profile](https://cloud.google.com/apigee/docs/api-security/security-scores#security-profiles-v2)
//
// ## Example Usage
//
// ### Apigee Security Profile V2 Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/apigee"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/servicenetworking"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := organizations.GetClientConfig(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			apigeeNetwork, err := compute.NewNetwork(ctx, "apigee_network", &compute.NetworkArgs{
//				Name: pulumi.String("apigee-network"),
//			})
//			if err != nil {
//				return err
//			}
//			apigeeRange, err := compute.NewGlobalAddress(ctx, "apigee_range", &compute.GlobalAddressArgs{
//				Name:         pulumi.String("apigee-range"),
//				Purpose:      pulumi.String("VPC_PEERING"),
//				AddressType:  pulumi.String("INTERNAL"),
//				PrefixLength: pulumi.Int(16),
//				Network:      apigeeNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			apigeeVpcConnection, err := servicenetworking.NewConnection(ctx, "apigee_vpc_connection", &servicenetworking.ConnectionArgs{
//				Network: apigeeNetwork.ID(),
//				Service: pulumi.String("servicenetworking.googleapis.com"),
//				ReservedPeeringRanges: pulumi.StringArray{
//					apigeeRange.Name,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			apigeeOrg, err := apigee.NewOrganization(ctx, "apigee_org", &apigee.OrganizationArgs{
//				AnalyticsRegion:   pulumi.String("us-central1"),
//				ProjectId:         pulumi.String(current.Project),
//				AuthorizedNetwork: apigeeNetwork.ID(),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				apigeeVpcConnection,
//			}))
//			if err != nil {
//				return err
//			}
//			apigeeOrgSecurityAddonsConfig, err := apigee.NewAddonsConfig(ctx, "apigee_org_security_addons_config", &apigee.AddonsConfigArgs{
//				Org: apigeeOrg.Name,
//				AddonsConfig: &apigee.AddonsConfigAddonsConfigArgs{
//					ApiSecurityConfig: &apigee.AddonsConfigAddonsConfigApiSecurityConfigArgs{
//						Enabled: pulumi.Bool(true),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apigee.NewSecurityProfileV2(ctx, "security_profile_v2", &apigee.SecurityProfileV2Args{
//				ProfileId:   pulumi.String("my-profile"),
//				OrgId:       apigeeOrg.ID(),
//				Description: pulumi.String("terraform test description"),
//				ProfileAssessmentConfigs: apigee.SecurityProfileV2ProfileAssessmentConfigArray{
//					&apigee.SecurityProfileV2ProfileAssessmentConfigArgs{
//						Assessment: pulumi.String("auth-policies-check"),
//						Weight:     pulumi.String("MAJOR"),
//					},
//					&apigee.SecurityProfileV2ProfileAssessmentConfigArgs{
//						Assessment: pulumi.String("mediation-policies-check"),
//						Weight:     pulumi.String("MODERATE"),
//					},
//					&apigee.SecurityProfileV2ProfileAssessmentConfigArgs{
//						Assessment: pulumi.String("threat-policies-check"),
//						Weight:     pulumi.String("MINOR"),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				apigeeOrgSecurityAddonsConfig,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SecurityProfileV2 can be imported using any of these accepted formats:
//
// * `{{org_id}}/securityProfilesV2/{{profile_id}}`
//
// * `{{org_id}}/{{profile_id}}`
//
// When using the `pulumi import` command, SecurityProfileV2 can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:apigee/securityProfileV2:SecurityProfileV2 default {{org_id}}/securityProfilesV2/{{profile_id}}
// ```
//
// ```sh
// $ pulumi import gcp:apigee/securityProfileV2:SecurityProfileV2 default {{org_id}}/{{profile_id}}
// ```
type SecurityProfileV2 struct {
	pulumi.CustomResourceState

	// The timestamp at which this profile was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Description of the security profile.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the security profile v2 resource,
	// in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Apigee Organization associated with the Apigee Security Profile V2,
	// in the format `organizations/{{org_name}}`.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// A map of the assessment name and the assessment config.
	// Structure is documented below.
	ProfileAssessmentConfigs SecurityProfileV2ProfileAssessmentConfigArrayOutput `pulumi:"profileAssessmentConfigs"`
	// Resource ID of the security profile.
	ProfileId pulumi.StringOutput `pulumi:"profileId"`
	// The timestamp at which this profile was most recently updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewSecurityProfileV2 registers a new resource with the given unique name, arguments, and options.
func NewSecurityProfileV2(ctx *pulumi.Context,
	name string, args *SecurityProfileV2Args, opts ...pulumi.ResourceOption) (*SecurityProfileV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.ProfileAssessmentConfigs == nil {
		return nil, errors.New("invalid value for required argument 'ProfileAssessmentConfigs'")
	}
	if args.ProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityProfileV2
	err := ctx.RegisterResource("gcp:apigee/securityProfileV2:SecurityProfileV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityProfileV2 gets an existing SecurityProfileV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityProfileV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityProfileV2State, opts ...pulumi.ResourceOption) (*SecurityProfileV2, error) {
	var resource SecurityProfileV2
	err := ctx.ReadResource("gcp:apigee/securityProfileV2:SecurityProfileV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityProfileV2 resources.
type securityProfileV2State struct {
	// The timestamp at which this profile was created.
	CreateTime *string `pulumi:"createTime"`
	// Description of the security profile.
	Description *string `pulumi:"description"`
	// Name of the security profile v2 resource,
	// in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
	Name *string `pulumi:"name"`
	// The Apigee Organization associated with the Apigee Security Profile V2,
	// in the format `organizations/{{org_name}}`.
	OrgId *string `pulumi:"orgId"`
	// A map of the assessment name and the assessment config.
	// Structure is documented below.
	ProfileAssessmentConfigs []SecurityProfileV2ProfileAssessmentConfig `pulumi:"profileAssessmentConfigs"`
	// Resource ID of the security profile.
	ProfileId *string `pulumi:"profileId"`
	// The timestamp at which this profile was most recently updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type SecurityProfileV2State struct {
	// The timestamp at which this profile was created.
	CreateTime pulumi.StringPtrInput
	// Description of the security profile.
	Description pulumi.StringPtrInput
	// Name of the security profile v2 resource,
	// in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
	Name pulumi.StringPtrInput
	// The Apigee Organization associated with the Apigee Security Profile V2,
	// in the format `organizations/{{org_name}}`.
	OrgId pulumi.StringPtrInput
	// A map of the assessment name and the assessment config.
	// Structure is documented below.
	ProfileAssessmentConfigs SecurityProfileV2ProfileAssessmentConfigArrayInput
	// Resource ID of the security profile.
	ProfileId pulumi.StringPtrInput
	// The timestamp at which this profile was most recently updated.
	UpdateTime pulumi.StringPtrInput
}

func (SecurityProfileV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*securityProfileV2State)(nil)).Elem()
}

type securityProfileV2Args struct {
	// Description of the security profile.
	Description *string `pulumi:"description"`
	// The Apigee Organization associated with the Apigee Security Profile V2,
	// in the format `organizations/{{org_name}}`.
	OrgId string `pulumi:"orgId"`
	// A map of the assessment name and the assessment config.
	// Structure is documented below.
	ProfileAssessmentConfigs []SecurityProfileV2ProfileAssessmentConfig `pulumi:"profileAssessmentConfigs"`
	// Resource ID of the security profile.
	ProfileId string `pulumi:"profileId"`
}

// The set of arguments for constructing a SecurityProfileV2 resource.
type SecurityProfileV2Args struct {
	// Description of the security profile.
	Description pulumi.StringPtrInput
	// The Apigee Organization associated with the Apigee Security Profile V2,
	// in the format `organizations/{{org_name}}`.
	OrgId pulumi.StringInput
	// A map of the assessment name and the assessment config.
	// Structure is documented below.
	ProfileAssessmentConfigs SecurityProfileV2ProfileAssessmentConfigArrayInput
	// Resource ID of the security profile.
	ProfileId pulumi.StringInput
}

func (SecurityProfileV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*securityProfileV2Args)(nil)).Elem()
}

type SecurityProfileV2Input interface {
	pulumi.Input

	ToSecurityProfileV2Output() SecurityProfileV2Output
	ToSecurityProfileV2OutputWithContext(ctx context.Context) SecurityProfileV2Output
}

func (*SecurityProfileV2) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileV2)(nil)).Elem()
}

func (i *SecurityProfileV2) ToSecurityProfileV2Output() SecurityProfileV2Output {
	return i.ToSecurityProfileV2OutputWithContext(context.Background())
}

func (i *SecurityProfileV2) ToSecurityProfileV2OutputWithContext(ctx context.Context) SecurityProfileV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileV2Output)
}

// SecurityProfileV2ArrayInput is an input type that accepts SecurityProfileV2Array and SecurityProfileV2ArrayOutput values.
// You can construct a concrete instance of `SecurityProfileV2ArrayInput` via:
//
//	SecurityProfileV2Array{ SecurityProfileV2Args{...} }
type SecurityProfileV2ArrayInput interface {
	pulumi.Input

	ToSecurityProfileV2ArrayOutput() SecurityProfileV2ArrayOutput
	ToSecurityProfileV2ArrayOutputWithContext(context.Context) SecurityProfileV2ArrayOutput
}

type SecurityProfileV2Array []SecurityProfileV2Input

func (SecurityProfileV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityProfileV2)(nil)).Elem()
}

func (i SecurityProfileV2Array) ToSecurityProfileV2ArrayOutput() SecurityProfileV2ArrayOutput {
	return i.ToSecurityProfileV2ArrayOutputWithContext(context.Background())
}

func (i SecurityProfileV2Array) ToSecurityProfileV2ArrayOutputWithContext(ctx context.Context) SecurityProfileV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileV2ArrayOutput)
}

// SecurityProfileV2MapInput is an input type that accepts SecurityProfileV2Map and SecurityProfileV2MapOutput values.
// You can construct a concrete instance of `SecurityProfileV2MapInput` via:
//
//	SecurityProfileV2Map{ "key": SecurityProfileV2Args{...} }
type SecurityProfileV2MapInput interface {
	pulumi.Input

	ToSecurityProfileV2MapOutput() SecurityProfileV2MapOutput
	ToSecurityProfileV2MapOutputWithContext(context.Context) SecurityProfileV2MapOutput
}

type SecurityProfileV2Map map[string]SecurityProfileV2Input

func (SecurityProfileV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityProfileV2)(nil)).Elem()
}

func (i SecurityProfileV2Map) ToSecurityProfileV2MapOutput() SecurityProfileV2MapOutput {
	return i.ToSecurityProfileV2MapOutputWithContext(context.Background())
}

func (i SecurityProfileV2Map) ToSecurityProfileV2MapOutputWithContext(ctx context.Context) SecurityProfileV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileV2MapOutput)
}

type SecurityProfileV2Output struct{ *pulumi.OutputState }

func (SecurityProfileV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityProfileV2)(nil)).Elem()
}

func (o SecurityProfileV2Output) ToSecurityProfileV2Output() SecurityProfileV2Output {
	return o
}

func (o SecurityProfileV2Output) ToSecurityProfileV2OutputWithContext(ctx context.Context) SecurityProfileV2Output {
	return o
}

// The timestamp at which this profile was created.
func (o SecurityProfileV2Output) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfileV2) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the security profile.
func (o SecurityProfileV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityProfileV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the security profile v2 resource,
// in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
func (o SecurityProfileV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfileV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Apigee Organization associated with the Apigee Security Profile V2,
// in the format `organizations/{{org_name}}`.
func (o SecurityProfileV2Output) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfileV2) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// A map of the assessment name and the assessment config.
// Structure is documented below.
func (o SecurityProfileV2Output) ProfileAssessmentConfigs() SecurityProfileV2ProfileAssessmentConfigArrayOutput {
	return o.ApplyT(func(v *SecurityProfileV2) SecurityProfileV2ProfileAssessmentConfigArrayOutput {
		return v.ProfileAssessmentConfigs
	}).(SecurityProfileV2ProfileAssessmentConfigArrayOutput)
}

// Resource ID of the security profile.
func (o SecurityProfileV2Output) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfileV2) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// The timestamp at which this profile was most recently updated.
func (o SecurityProfileV2Output) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityProfileV2) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type SecurityProfileV2ArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityProfileV2)(nil)).Elem()
}

func (o SecurityProfileV2ArrayOutput) ToSecurityProfileV2ArrayOutput() SecurityProfileV2ArrayOutput {
	return o
}

func (o SecurityProfileV2ArrayOutput) ToSecurityProfileV2ArrayOutputWithContext(ctx context.Context) SecurityProfileV2ArrayOutput {
	return o
}

func (o SecurityProfileV2ArrayOutput) Index(i pulumi.IntInput) SecurityProfileV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityProfileV2 {
		return vs[0].([]*SecurityProfileV2)[vs[1].(int)]
	}).(SecurityProfileV2Output)
}

type SecurityProfileV2MapOutput struct{ *pulumi.OutputState }

func (SecurityProfileV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityProfileV2)(nil)).Elem()
}

func (o SecurityProfileV2MapOutput) ToSecurityProfileV2MapOutput() SecurityProfileV2MapOutput {
	return o
}

func (o SecurityProfileV2MapOutput) ToSecurityProfileV2MapOutputWithContext(ctx context.Context) SecurityProfileV2MapOutput {
	return o
}

func (o SecurityProfileV2MapOutput) MapIndex(k pulumi.StringInput) SecurityProfileV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityProfileV2 {
		return vs[0].(map[string]*SecurityProfileV2)[vs[1].(string)]
	}).(SecurityProfileV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileV2Input)(nil)).Elem(), &SecurityProfileV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileV2ArrayInput)(nil)).Elem(), SecurityProfileV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileV2MapInput)(nil)).Elem(), SecurityProfileV2Map{})
	pulumi.RegisterOutputType(SecurityProfileV2Output{})
	pulumi.RegisterOutputType(SecurityProfileV2ArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileV2MapOutput{})
}
