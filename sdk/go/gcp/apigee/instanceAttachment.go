// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigee

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An `Instance attachment` in Apigee.
//
// To get more information about InstanceAttachment, see:
//
// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.attachments/create)
// * How-to Guides
//     * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
//
// ## Example Usage
//
// ## Import
//
// InstanceAttachment can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import gcp:apigee/instanceAttachment:InstanceAttachment default {{instance_id}}/attachments/{{name}}
// ```
//
// ```sh
//  $ pulumi import gcp:apigee/instanceAttachment:InstanceAttachment default {{instance_id}}/{{name}}
// ```
type InstanceAttachment struct {
	pulumi.CustomResourceState

	// The resource ID of the environment.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The Apigee instance associated with the Apigee environment,
	// in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The name of the newly created attachment (output parameter).
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewInstanceAttachment registers a new resource with the given unique name, arguments, and options.
func NewInstanceAttachment(ctx *pulumi.Context,
	name string, args *InstanceAttachmentArgs, opts ...pulumi.ResourceOption) (*InstanceAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	var resource InstanceAttachment
	err := ctx.RegisterResource("gcp:apigee/instanceAttachment:InstanceAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceAttachment gets an existing InstanceAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceAttachmentState, opts ...pulumi.ResourceOption) (*InstanceAttachment, error) {
	var resource InstanceAttachment
	err := ctx.ReadResource("gcp:apigee/instanceAttachment:InstanceAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceAttachment resources.
type instanceAttachmentState struct {
	// The resource ID of the environment.
	Environment *string `pulumi:"environment"`
	// The Apigee instance associated with the Apigee environment,
	// in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
	InstanceId *string `pulumi:"instanceId"`
	// The name of the newly created attachment (output parameter).
	Name *string `pulumi:"name"`
}

type InstanceAttachmentState struct {
	// The resource ID of the environment.
	Environment pulumi.StringPtrInput
	// The Apigee instance associated with the Apigee environment,
	// in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
	InstanceId pulumi.StringPtrInput
	// The name of the newly created attachment (output parameter).
	Name pulumi.StringPtrInput
}

func (InstanceAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceAttachmentState)(nil)).Elem()
}

type instanceAttachmentArgs struct {
	// The resource ID of the environment.
	Environment string `pulumi:"environment"`
	// The Apigee instance associated with the Apigee environment,
	// in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a InstanceAttachment resource.
type InstanceAttachmentArgs struct {
	// The resource ID of the environment.
	Environment pulumi.StringInput
	// The Apigee instance associated with the Apigee environment,
	// in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
	InstanceId pulumi.StringInput
}

func (InstanceAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceAttachmentArgs)(nil)).Elem()
}

type InstanceAttachmentInput interface {
	pulumi.Input

	ToInstanceAttachmentOutput() InstanceAttachmentOutput
	ToInstanceAttachmentOutputWithContext(ctx context.Context) InstanceAttachmentOutput
}

func (*InstanceAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAttachment)(nil))
}

func (i *InstanceAttachment) ToInstanceAttachmentOutput() InstanceAttachmentOutput {
	return i.ToInstanceAttachmentOutputWithContext(context.Background())
}

func (i *InstanceAttachment) ToInstanceAttachmentOutputWithContext(ctx context.Context) InstanceAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAttachmentOutput)
}

func (i *InstanceAttachment) ToInstanceAttachmentPtrOutput() InstanceAttachmentPtrOutput {
	return i.ToInstanceAttachmentPtrOutputWithContext(context.Background())
}

func (i *InstanceAttachment) ToInstanceAttachmentPtrOutputWithContext(ctx context.Context) InstanceAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAttachmentPtrOutput)
}

type InstanceAttachmentPtrInput interface {
	pulumi.Input

	ToInstanceAttachmentPtrOutput() InstanceAttachmentPtrOutput
	ToInstanceAttachmentPtrOutputWithContext(ctx context.Context) InstanceAttachmentPtrOutput
}

type instanceAttachmentPtrType InstanceAttachmentArgs

func (*instanceAttachmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAttachment)(nil))
}

func (i *instanceAttachmentPtrType) ToInstanceAttachmentPtrOutput() InstanceAttachmentPtrOutput {
	return i.ToInstanceAttachmentPtrOutputWithContext(context.Background())
}

func (i *instanceAttachmentPtrType) ToInstanceAttachmentPtrOutputWithContext(ctx context.Context) InstanceAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAttachmentPtrOutput)
}

// InstanceAttachmentArrayInput is an input type that accepts InstanceAttachmentArray and InstanceAttachmentArrayOutput values.
// You can construct a concrete instance of `InstanceAttachmentArrayInput` via:
//
//          InstanceAttachmentArray{ InstanceAttachmentArgs{...} }
type InstanceAttachmentArrayInput interface {
	pulumi.Input

	ToInstanceAttachmentArrayOutput() InstanceAttachmentArrayOutput
	ToInstanceAttachmentArrayOutputWithContext(context.Context) InstanceAttachmentArrayOutput
}

type InstanceAttachmentArray []InstanceAttachmentInput

func (InstanceAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*InstanceAttachment)(nil))
}

func (i InstanceAttachmentArray) ToInstanceAttachmentArrayOutput() InstanceAttachmentArrayOutput {
	return i.ToInstanceAttachmentArrayOutputWithContext(context.Background())
}

func (i InstanceAttachmentArray) ToInstanceAttachmentArrayOutputWithContext(ctx context.Context) InstanceAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAttachmentArrayOutput)
}

// InstanceAttachmentMapInput is an input type that accepts InstanceAttachmentMap and InstanceAttachmentMapOutput values.
// You can construct a concrete instance of `InstanceAttachmentMapInput` via:
//
//          InstanceAttachmentMap{ "key": InstanceAttachmentArgs{...} }
type InstanceAttachmentMapInput interface {
	pulumi.Input

	ToInstanceAttachmentMapOutput() InstanceAttachmentMapOutput
	ToInstanceAttachmentMapOutputWithContext(context.Context) InstanceAttachmentMapOutput
}

type InstanceAttachmentMap map[string]InstanceAttachmentInput

func (InstanceAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*InstanceAttachment)(nil))
}

func (i InstanceAttachmentMap) ToInstanceAttachmentMapOutput() InstanceAttachmentMapOutput {
	return i.ToInstanceAttachmentMapOutputWithContext(context.Background())
}

func (i InstanceAttachmentMap) ToInstanceAttachmentMapOutputWithContext(ctx context.Context) InstanceAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAttachmentMapOutput)
}

type InstanceAttachmentOutput struct {
	*pulumi.OutputState
}

func (InstanceAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAttachment)(nil))
}

func (o InstanceAttachmentOutput) ToInstanceAttachmentOutput() InstanceAttachmentOutput {
	return o
}

func (o InstanceAttachmentOutput) ToInstanceAttachmentOutputWithContext(ctx context.Context) InstanceAttachmentOutput {
	return o
}

func (o InstanceAttachmentOutput) ToInstanceAttachmentPtrOutput() InstanceAttachmentPtrOutput {
	return o.ToInstanceAttachmentPtrOutputWithContext(context.Background())
}

func (o InstanceAttachmentOutput) ToInstanceAttachmentPtrOutputWithContext(ctx context.Context) InstanceAttachmentPtrOutput {
	return o.ApplyT(func(v InstanceAttachment) *InstanceAttachment {
		return &v
	}).(InstanceAttachmentPtrOutput)
}

type InstanceAttachmentPtrOutput struct {
	*pulumi.OutputState
}

func (InstanceAttachmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAttachment)(nil))
}

func (o InstanceAttachmentPtrOutput) ToInstanceAttachmentPtrOutput() InstanceAttachmentPtrOutput {
	return o
}

func (o InstanceAttachmentPtrOutput) ToInstanceAttachmentPtrOutputWithContext(ctx context.Context) InstanceAttachmentPtrOutput {
	return o
}

type InstanceAttachmentArrayOutput struct{ *pulumi.OutputState }

func (InstanceAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceAttachment)(nil))
}

func (o InstanceAttachmentArrayOutput) ToInstanceAttachmentArrayOutput() InstanceAttachmentArrayOutput {
	return o
}

func (o InstanceAttachmentArrayOutput) ToInstanceAttachmentArrayOutputWithContext(ctx context.Context) InstanceAttachmentArrayOutput {
	return o
}

func (o InstanceAttachmentArrayOutput) Index(i pulumi.IntInput) InstanceAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceAttachment {
		return vs[0].([]InstanceAttachment)[vs[1].(int)]
	}).(InstanceAttachmentOutput)
}

type InstanceAttachmentMapOutput struct{ *pulumi.OutputState }

func (InstanceAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InstanceAttachment)(nil))
}

func (o InstanceAttachmentMapOutput) ToInstanceAttachmentMapOutput() InstanceAttachmentMapOutput {
	return o
}

func (o InstanceAttachmentMapOutput) ToInstanceAttachmentMapOutputWithContext(ctx context.Context) InstanceAttachmentMapOutput {
	return o
}

func (o InstanceAttachmentMapOutput) MapIndex(k pulumi.StringInput) InstanceAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) InstanceAttachment {
		return vs[0].(map[string]InstanceAttachment)[vs[1].(string)]
	}).(InstanceAttachmentOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceAttachmentOutput{})
	pulumi.RegisterOutputType(InstanceAttachmentPtrOutput{})
	pulumi.RegisterOutputType(InstanceAttachmentArrayOutput{})
	pulumi.RegisterOutputType(InstanceAttachmentMapOutput{})
}
