// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package migrationcenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type PreferenceSetVirtualMachinePreferences struct {
	// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
	// Possible values:
	// COMMITMENT_PLAN_UNSPECIFIED
	// COMMITMENT_PLAN_NONE
	// COMMITMENT_PLAN_ONE_YEAR
	// COMMITMENT_PLAN_THREE_YEARS
	CommitmentPlan *string `pulumi:"commitmentPlan"`
	// The user preferences relating to Compute Engine target platform.
	// Structure is documented below.
	ComputeEnginePreferences *PreferenceSetVirtualMachinePreferencesComputeEnginePreferences `pulumi:"computeEnginePreferences"`
	// The user preferences relating to target regions.
	// Structure is documented below.
	RegionPreferences *PreferenceSetVirtualMachinePreferencesRegionPreferences `pulumi:"regionPreferences"`
	// Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
	// Possible values:
	// SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED
	// SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE
	// SIZING_OPTIMIZATION_STRATEGY_MODERATE
	// SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE
	SizingOptimizationStrategy *string `pulumi:"sizingOptimizationStrategy"`
	// Preferences concerning Sole Tenancy nodes and VMs.
	// Structure is documented below.
	SoleTenancyPreferences *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences `pulumi:"soleTenancyPreferences"`
	// Target product for assets using this preference set. Specify either target product or business goal, but not both.
	// Possible values:
	// COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED
	// COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE
	// COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE
	// COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY
	TargetProduct *string `pulumi:"targetProduct"`
	// The user preferences relating to Google Cloud VMware Engine target platform.
	// Structure is documented below.
	VmwareEnginePreferences *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences `pulumi:"vmwareEnginePreferences"`
}

// PreferenceSetVirtualMachinePreferencesInput is an input type that accepts PreferenceSetVirtualMachinePreferencesArgs and PreferenceSetVirtualMachinePreferencesOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesInput` via:
//
//	PreferenceSetVirtualMachinePreferencesArgs{...}
type PreferenceSetVirtualMachinePreferencesInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesOutput() PreferenceSetVirtualMachinePreferencesOutput
	ToPreferenceSetVirtualMachinePreferencesOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesOutput
}

type PreferenceSetVirtualMachinePreferencesArgs struct {
	// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
	// Possible values:
	// COMMITMENT_PLAN_UNSPECIFIED
	// COMMITMENT_PLAN_NONE
	// COMMITMENT_PLAN_ONE_YEAR
	// COMMITMENT_PLAN_THREE_YEARS
	CommitmentPlan pulumi.StringPtrInput `pulumi:"commitmentPlan"`
	// The user preferences relating to Compute Engine target platform.
	// Structure is documented below.
	ComputeEnginePreferences PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrInput `pulumi:"computeEnginePreferences"`
	// The user preferences relating to target regions.
	// Structure is documented below.
	RegionPreferences PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrInput `pulumi:"regionPreferences"`
	// Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
	// Possible values:
	// SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED
	// SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE
	// SIZING_OPTIMIZATION_STRATEGY_MODERATE
	// SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE
	SizingOptimizationStrategy pulumi.StringPtrInput `pulumi:"sizingOptimizationStrategy"`
	// Preferences concerning Sole Tenancy nodes and VMs.
	// Structure is documented below.
	SoleTenancyPreferences PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrInput `pulumi:"soleTenancyPreferences"`
	// Target product for assets using this preference set. Specify either target product or business goal, but not both.
	// Possible values:
	// COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED
	// COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE
	// COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE
	// COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY
	TargetProduct pulumi.StringPtrInput `pulumi:"targetProduct"`
	// The user preferences relating to Google Cloud VMware Engine target platform.
	// Structure is documented below.
	VmwareEnginePreferences PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrInput `pulumi:"vmwareEnginePreferences"`
}

func (PreferenceSetVirtualMachinePreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferences)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesOutput() PreferenceSetVirtualMachinePreferencesOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesOutput)
}

func (i PreferenceSetVirtualMachinePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesPtrOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesOutput).ToPreferenceSetVirtualMachinePreferencesPtrOutputWithContext(ctx)
}

// PreferenceSetVirtualMachinePreferencesPtrInput is an input type that accepts PreferenceSetVirtualMachinePreferencesArgs, PreferenceSetVirtualMachinePreferencesPtr and PreferenceSetVirtualMachinePreferencesPtrOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesPtrInput` via:
//
//	        PreferenceSetVirtualMachinePreferencesArgs{...}
//
//	or:
//
//	        nil
type PreferenceSetVirtualMachinePreferencesPtrInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesPtrOutput
	ToPreferenceSetVirtualMachinePreferencesPtrOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesPtrOutput
}

type preferenceSetVirtualMachinePreferencesPtrType PreferenceSetVirtualMachinePreferencesArgs

func PreferenceSetVirtualMachinePreferencesPtr(v *PreferenceSetVirtualMachinePreferencesArgs) PreferenceSetVirtualMachinePreferencesPtrInput {
	return (*preferenceSetVirtualMachinePreferencesPtrType)(v)
}

func (*preferenceSetVirtualMachinePreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferences)(nil)).Elem()
}

func (i *preferenceSetVirtualMachinePreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesPtrOutputWithContext(context.Background())
}

func (i *preferenceSetVirtualMachinePreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesOutput() PreferenceSetVirtualMachinePreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesPtrOutput {
	return o.ToPreferenceSetVirtualMachinePreferencesPtrOutputWithContext(context.Background())
}

func (o PreferenceSetVirtualMachinePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreferenceSetVirtualMachinePreferences) *PreferenceSetVirtualMachinePreferences {
		return &v
	}).(PreferenceSetVirtualMachinePreferencesPtrOutput)
}

// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
// Possible values:
// COMMITMENT_PLAN_UNSPECIFIED
// COMMITMENT_PLAN_NONE
// COMMITMENT_PLAN_ONE_YEAR
// COMMITMENT_PLAN_THREE_YEARS
func (o PreferenceSetVirtualMachinePreferencesOutput) CommitmentPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferences) *string { return v.CommitmentPlan }).(pulumi.StringPtrOutput)
}

// The user preferences relating to Compute Engine target platform.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesOutput) ComputeEnginePreferences() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferences) *PreferenceSetVirtualMachinePreferencesComputeEnginePreferences {
		return v.ComputeEnginePreferences
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput)
}

// The user preferences relating to target regions.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesOutput) RegionPreferences() PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferences) *PreferenceSetVirtualMachinePreferencesRegionPreferences {
		return v.RegionPreferences
	}).(PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput)
}

// Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
// Possible values:
// SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED
// SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE
// SIZING_OPTIMIZATION_STRATEGY_MODERATE
// SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE
func (o PreferenceSetVirtualMachinePreferencesOutput) SizingOptimizationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferences) *string { return v.SizingOptimizationStrategy }).(pulumi.StringPtrOutput)
}

// Preferences concerning Sole Tenancy nodes and VMs.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesOutput) SoleTenancyPreferences() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferences) *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences {
		return v.SoleTenancyPreferences
	}).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput)
}

// Target product for assets using this preference set. Specify either target product or business goal, but not both.
// Possible values:
// COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED
// COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE
// COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE
// COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY
func (o PreferenceSetVirtualMachinePreferencesOutput) TargetProduct() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferences) *string { return v.TargetProduct }).(pulumi.StringPtrOutput)
}

// The user preferences relating to Google Cloud VMware Engine target platform.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesOutput) VmwareEnginePreferences() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferences) *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences {
		return v.VmwareEnginePreferences
	}).(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesPtrOutput) Elem() PreferenceSetVirtualMachinePreferencesOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferences) PreferenceSetVirtualMachinePreferences {
		if v != nil {
			return *v
		}
		var ret PreferenceSetVirtualMachinePreferences
		return ret
	}).(PreferenceSetVirtualMachinePreferencesOutput)
}

// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
// Possible values:
// COMMITMENT_PLAN_UNSPECIFIED
// COMMITMENT_PLAN_NONE
// COMMITMENT_PLAN_ONE_YEAR
// COMMITMENT_PLAN_THREE_YEARS
func (o PreferenceSetVirtualMachinePreferencesPtrOutput) CommitmentPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferences) *string {
		if v == nil {
			return nil
		}
		return v.CommitmentPlan
	}).(pulumi.StringPtrOutput)
}

// The user preferences relating to Compute Engine target platform.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesPtrOutput) ComputeEnginePreferences() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferences) *PreferenceSetVirtualMachinePreferencesComputeEnginePreferences {
		if v == nil {
			return nil
		}
		return v.ComputeEnginePreferences
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput)
}

// The user preferences relating to target regions.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesPtrOutput) RegionPreferences() PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferences) *PreferenceSetVirtualMachinePreferencesRegionPreferences {
		if v == nil {
			return nil
		}
		return v.RegionPreferences
	}).(PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput)
}

// Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
// Possible values:
// SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED
// SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE
// SIZING_OPTIMIZATION_STRATEGY_MODERATE
// SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE
func (o PreferenceSetVirtualMachinePreferencesPtrOutput) SizingOptimizationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferences) *string {
		if v == nil {
			return nil
		}
		return v.SizingOptimizationStrategy
	}).(pulumi.StringPtrOutput)
}

// Preferences concerning Sole Tenancy nodes and VMs.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesPtrOutput) SoleTenancyPreferences() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferences) *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences {
		if v == nil {
			return nil
		}
		return v.SoleTenancyPreferences
	}).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput)
}

// Target product for assets using this preference set. Specify either target product or business goal, but not both.
// Possible values:
// COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED
// COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE
// COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE
// COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY
func (o PreferenceSetVirtualMachinePreferencesPtrOutput) TargetProduct() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferences) *string {
		if v == nil {
			return nil
		}
		return v.TargetProduct
	}).(pulumi.StringPtrOutput)
}

// The user preferences relating to Google Cloud VMware Engine target platform.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesPtrOutput) VmwareEnginePreferences() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferences) *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences {
		if v == nil {
			return nil
		}
		return v.VmwareEnginePreferences
	}).(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferences struct {
	// License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
	// Possible values:
	// LICENSE_TYPE_UNSPECIFIED
	// LICENSE_TYPE_DEFAULT
	// LICENSE_TYPE_BRING_YOUR_OWN_LICENSE
	LicenseType *string `pulumi:"licenseType"`
	// The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
	// Structure is documented below.
	MachinePreferences *PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences `pulumi:"machinePreferences"`
}

// PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesInput is an input type that accepts PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs and PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesInput` via:
//
//	PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs{...}
type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput
	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs struct {
	// License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
	// Possible values:
	// LICENSE_TYPE_UNSPECIFIED
	// LICENSE_TYPE_DEFAULT
	// LICENSE_TYPE_BRING_YOUR_OWN_LICENSE
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
	// Structure is documented below.
	MachinePreferences PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrInput `pulumi:"machinePreferences"`
}

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferences)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput)
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput).ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutputWithContext(ctx)
}

// PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrInput is an input type that accepts PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs, PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtr and PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrInput` via:
//
//	        PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs{...}
//
//	or:
//
//	        nil
type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput
	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput
}

type preferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrType PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs

func PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtr(v *PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrInput {
	return (*preferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrType)(v)
}

func (*preferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesComputeEnginePreferences)(nil)).Elem()
}

func (i *preferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutputWithContext(context.Background())
}

func (i *preferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return o.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutputWithContext(context.Background())
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreferenceSetVirtualMachinePreferencesComputeEnginePreferences) *PreferenceSetVirtualMachinePreferencesComputeEnginePreferences {
		return &v
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput)
}

// License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
// Possible values:
// LICENSE_TYPE_UNSPECIFIED
// LICENSE_TYPE_DEFAULT
// LICENSE_TYPE_BRING_YOUR_OWN_LICENSE
func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesComputeEnginePreferences) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput) MachinePreferences() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesComputeEnginePreferences) *PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences {
		return v.MachinePreferences
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesComputeEnginePreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput) Elem() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesComputeEnginePreferences) PreferenceSetVirtualMachinePreferencesComputeEnginePreferences {
		if v != nil {
			return *v
		}
		var ret PreferenceSetVirtualMachinePreferencesComputeEnginePreferences
		return ret
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput)
}

// License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
// Possible values:
// LICENSE_TYPE_UNSPECIFIED
// LICENSE_TYPE_DEFAULT
// LICENSE_TYPE_BRING_YOUR_OWN_LICENSE
func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesComputeEnginePreferences) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput) MachinePreferences() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesComputeEnginePreferences) *PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences {
		if v == nil {
			return nil
		}
		return v.MachinePreferences
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences struct {
	// Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.
	// Structure is documented below.
	AllowedMachineSeries []PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries `pulumi:"allowedMachineSeries"`
}

// PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesInput is an input type that accepts PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs and PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesInput` via:
//
//	PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs{...}
type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput
	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs struct {
	// Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.
	// Structure is documented below.
	AllowedMachineSeries PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayInput `pulumi:"allowedMachineSeries"`
}

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput)
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput).ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutputWithContext(ctx)
}

// PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrInput is an input type that accepts PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs, PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtr and PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrInput` via:
//
//	        PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs{...}
//
//	or:
//
//	        nil
type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput
	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput
}

type preferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrType PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs

func PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtr(v *PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrInput {
	return (*preferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrType)(v)
}

func (*preferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences)(nil)).Elem()
}

func (i *preferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutputWithContext(context.Background())
}

func (i *preferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return o.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutputWithContext(context.Background())
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences) *PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences {
		return &v
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput)
}

// Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput) AllowedMachineSeries() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences) []PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries {
		return v.AllowedMachineSeries
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput)
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput) Elem() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences {
		if v != nil {
			return *v
		}
		var ret PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences
		return ret
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput)
}

// Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput) AllowedMachineSeries() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferences) []PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries {
		if v == nil {
			return nil
		}
		return v.AllowedMachineSeries
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput)
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries struct {
	// Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.
	Code *string `pulumi:"code"`
}

// PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesInput is an input type that accepts PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArgs and PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesInput` via:
//
//	PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArgs{...}
type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput
	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArgs struct {
	// Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.
	Code pulumi.StringPtrInput `pulumi:"code"`
}

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArgs) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput)
}

// PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayInput is an input type that accepts PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArray and PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayInput` via:
//
//	PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArray{ PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArgs{...} }
type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput
	ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArray []PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesInput

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArray) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArray) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput)
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput {
	return o
}

// Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.
func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries) *string {
		return v.Code
	}).(pulumi.StringPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput() PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput) ToPreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput) Index(i pulumi.IntInput) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries {
		return vs[0].([]PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeries)[vs[1].(int)]
	}).(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput)
}

type PreferenceSetVirtualMachinePreferencesRegionPreferences struct {
	// A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.
	PreferredRegions []string `pulumi:"preferredRegions"`
}

// PreferenceSetVirtualMachinePreferencesRegionPreferencesInput is an input type that accepts PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs and PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesRegionPreferencesInput` via:
//
//	PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs{...}
type PreferenceSetVirtualMachinePreferencesRegionPreferencesInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesRegionPreferencesOutput() PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput
	ToPreferenceSetVirtualMachinePreferencesRegionPreferencesOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput
}

type PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs struct {
	// A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.
	PreferredRegions pulumi.StringArrayInput `pulumi:"preferredRegions"`
}

func (PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesRegionPreferences)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesOutput() PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesRegionPreferencesOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput)
}

func (i PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput).ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutputWithContext(ctx)
}

// PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrInput is an input type that accepts PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs, PreferenceSetVirtualMachinePreferencesRegionPreferencesPtr and PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrInput` via:
//
//	        PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs{...}
//
//	or:
//
//	        nil
type PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput
	ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput
}

type preferenceSetVirtualMachinePreferencesRegionPreferencesPtrType PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs

func PreferenceSetVirtualMachinePreferencesRegionPreferencesPtr(v *PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs) PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrInput {
	return (*preferenceSetVirtualMachinePreferencesRegionPreferencesPtrType)(v)
}

func (*preferenceSetVirtualMachinePreferencesRegionPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesRegionPreferences)(nil)).Elem()
}

func (i *preferenceSetVirtualMachinePreferencesRegionPreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutputWithContext(context.Background())
}

func (i *preferenceSetVirtualMachinePreferencesRegionPreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesRegionPreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesOutput() PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return o.ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutputWithContext(context.Background())
}

func (o PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreferenceSetVirtualMachinePreferencesRegionPreferences) *PreferenceSetVirtualMachinePreferencesRegionPreferences {
		return &v
	}).(PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput)
}

// A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.
func (o PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput) PreferredRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesRegionPreferences) []string { return v.PreferredRegions }).(pulumi.StringArrayOutput)
}

type PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesRegionPreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput) Elem() PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesRegionPreferences) PreferenceSetVirtualMachinePreferencesRegionPreferences {
		if v != nil {
			return *v
		}
		var ret PreferenceSetVirtualMachinePreferencesRegionPreferences
		return ret
	}).(PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput)
}

// A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.
func (o PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput) PreferredRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesRegionPreferences) []string {
		if v == nil {
			return nil
		}
		return v.PreferredRegions
	}).(pulumi.StringArrayOutput)
}

type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences struct {
	// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
	// Possible values:
	// COMMITMENT_PLAN_UNSPECIFIED
	// ON_DEMAND
	// COMMITMENT_1_YEAR
	// COMMITMENT_3_YEAR
	CommitmentPlan *string `pulumi:"commitmentPlan"`
	// CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
	CpuOvercommitRatio *float64 `pulumi:"cpuOvercommitRatio"`
	// Sole Tenancy nodes maintenance policy.
	// Possible values:
	// HOST_MAINTENANCE_POLICY_UNSPECIFIED
	// HOST_MAINTENANCE_POLICY_DEFAULT
	// HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE
	// HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP
	HostMaintenancePolicy *string `pulumi:"hostMaintenancePolicy"`
	// A list of sole tenant node types. An empty list means that all possible node types will be considered.
	// Structure is documented below.
	NodeTypes []PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType `pulumi:"nodeTypes"`
}

// PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesInput is an input type that accepts PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs and PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesInput` via:
//
//	PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs{...}
type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput
	ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput
}

type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs struct {
	// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
	// Possible values:
	// COMMITMENT_PLAN_UNSPECIFIED
	// ON_DEMAND
	// COMMITMENT_1_YEAR
	// COMMITMENT_3_YEAR
	CommitmentPlan pulumi.StringPtrInput `pulumi:"commitmentPlan"`
	// CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
	CpuOvercommitRatio pulumi.Float64PtrInput `pulumi:"cpuOvercommitRatio"`
	// Sole Tenancy nodes maintenance policy.
	// Possible values:
	// HOST_MAINTENANCE_POLICY_UNSPECIFIED
	// HOST_MAINTENANCE_POLICY_DEFAULT
	// HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE
	// HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP
	HostMaintenancePolicy pulumi.StringPtrInput `pulumi:"hostMaintenancePolicy"`
	// A list of sole tenant node types. An empty list means that all possible node types will be considered.
	// Structure is documented below.
	NodeTypes PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayInput `pulumi:"nodeTypes"`
}

func (PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput)
}

func (i PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput).ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutputWithContext(ctx)
}

// PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrInput is an input type that accepts PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs, PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtr and PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrInput` via:
//
//	        PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs{...}
//
//	or:
//
//	        nil
type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput
	ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput
}

type preferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrType PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs

func PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtr(v *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrInput {
	return (*preferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrType)(v)
}

func (*preferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences)(nil)).Elem()
}

func (i *preferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutputWithContext(context.Background())
}

func (i *preferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return o.ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutputWithContext(context.Background())
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences {
		return &v
	}).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput)
}

// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
// Possible values:
// COMMITMENT_PLAN_UNSPECIFIED
// ON_DEMAND
// COMMITMENT_1_YEAR
// COMMITMENT_3_YEAR
func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput) CommitmentPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) *string { return v.CommitmentPlan }).(pulumi.StringPtrOutput)
}

// CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput) CpuOvercommitRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) *float64 {
		return v.CpuOvercommitRatio
	}).(pulumi.Float64PtrOutput)
}

// Sole Tenancy nodes maintenance policy.
// Possible values:
// HOST_MAINTENANCE_POLICY_UNSPECIFIED
// HOST_MAINTENANCE_POLICY_DEFAULT
// HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE
// HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP
func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput) HostMaintenancePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) *string {
		return v.HostMaintenancePolicy
	}).(pulumi.StringPtrOutput)
}

// A list of sole tenant node types. An empty list means that all possible node types will be considered.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput) NodeTypes() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) []PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType {
		return v.NodeTypes
	}).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput)
}

type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput) Elem() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences {
		if v != nil {
			return *v
		}
		var ret PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences
		return ret
	}).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput)
}

// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
// Possible values:
// COMMITMENT_PLAN_UNSPECIFIED
// ON_DEMAND
// COMMITMENT_1_YEAR
// COMMITMENT_3_YEAR
func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput) CommitmentPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) *string {
		if v == nil {
			return nil
		}
		return v.CommitmentPlan
	}).(pulumi.StringPtrOutput)
}

// CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput) CpuOvercommitRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuOvercommitRatio
	}).(pulumi.Float64PtrOutput)
}

// Sole Tenancy nodes maintenance policy.
// Possible values:
// HOST_MAINTENANCE_POLICY_UNSPECIFIED
// HOST_MAINTENANCE_POLICY_DEFAULT
// HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE
// HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP
func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput) HostMaintenancePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) *string {
		if v == nil {
			return nil
		}
		return v.HostMaintenancePolicy
	}).(pulumi.StringPtrOutput)
}

// A list of sole tenant node types. An empty list means that all possible node types will be considered.
// Structure is documented below.
func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput) NodeTypes() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences) []PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType {
		if v == nil {
			return nil
		}
		return v.NodeTypes
	}).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput)
}

type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType struct {
	// Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes
	NodeName *string `pulumi:"nodeName"`
}

// PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeInput is an input type that accepts PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs and PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeInput` via:
//
//	PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs{...}
type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput
	ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput
}

type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs struct {
	// Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
}

func (PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput)
}

// PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayInput is an input type that accepts PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArray and PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayInput` via:
//
//	PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArray{ PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs{...} }
type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput
	ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput
}

type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArray []PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeInput

func (PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArray) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArray) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput)
}

type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput {
	return o
}

// Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes
func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType) *string {
		return v.NodeName
	}).(pulumi.StringPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput() PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput) ToPreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput) Index(i pulumi.IntInput) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType {
		return vs[0].([]PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType)[vs[1].(int)]
	}).(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput)
}

type PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences struct {
	// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
	// Possible values:
	// COMMITMENT_PLAN_UNSPECIFIED
	// ON_DEMAND
	// COMMITMENT_1_YEAR_MONTHLY_PAYMENTS
	// COMMITMENT_3_YEAR_MONTHLY_PAYMENTS
	// COMMITMENT_1_YEAR_UPFRONT_PAYMENT
	// COMMITMENT_3_YEAR_UPFRONT_PAYMENT
	CommitmentPlan *string `pulumi:"commitmentPlan"`
	// CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.
	CpuOvercommitRatio *float64 `pulumi:"cpuOvercommitRatio"`
	// Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.
	MemoryOvercommitRatio *float64 `pulumi:"memoryOvercommitRatio"`
	// The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.
	StorageDeduplicationCompressionRatio *float64 `pulumi:"storageDeduplicationCompressionRatio"`
}

// PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesInput is an input type that accepts PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs and PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesInput` via:
//
//	PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs{...}
type PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput
	ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput
}

type PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs struct {
	// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
	// Possible values:
	// COMMITMENT_PLAN_UNSPECIFIED
	// ON_DEMAND
	// COMMITMENT_1_YEAR_MONTHLY_PAYMENTS
	// COMMITMENT_3_YEAR_MONTHLY_PAYMENTS
	// COMMITMENT_1_YEAR_UPFRONT_PAYMENT
	// COMMITMENT_3_YEAR_UPFRONT_PAYMENT
	CommitmentPlan pulumi.StringPtrInput `pulumi:"commitmentPlan"`
	// CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.
	CpuOvercommitRatio pulumi.Float64PtrInput `pulumi:"cpuOvercommitRatio"`
	// Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.
	MemoryOvercommitRatio pulumi.Float64PtrInput `pulumi:"memoryOvercommitRatio"`
	// The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.
	StorageDeduplicationCompressionRatio pulumi.Float64PtrInput `pulumi:"storageDeduplicationCompressionRatio"`
}

func (PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences)(nil)).Elem()
}

func (i PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput)
}

func (i PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutputWithContext(context.Background())
}

func (i PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput).ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutputWithContext(ctx)
}

// PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrInput is an input type that accepts PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs, PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtr and PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput values.
// You can construct a concrete instance of `PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrInput` via:
//
//	        PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs{...}
//
//	or:
//
//	        nil
type PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrInput interface {
	pulumi.Input

	ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput
	ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutputWithContext(context.Context) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput
}

type preferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrType PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs

func PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtr(v *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrInput {
	return (*preferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrType)(v)
}

func (*preferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences)(nil)).Elem()
}

func (i *preferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return i.ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutputWithContext(context.Background())
}

func (i *preferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrType) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput)
}

type PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return o.ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutputWithContext(context.Background())
}

func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences {
		return &v
	}).(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput)
}

// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
// Possible values:
// COMMITMENT_PLAN_UNSPECIFIED
// ON_DEMAND
// COMMITMENT_1_YEAR_MONTHLY_PAYMENTS
// COMMITMENT_3_YEAR_MONTHLY_PAYMENTS
// COMMITMENT_1_YEAR_UPFRONT_PAYMENT
// COMMITMENT_3_YEAR_UPFRONT_PAYMENT
func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput) CommitmentPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) *string { return v.CommitmentPlan }).(pulumi.StringPtrOutput)
}

// CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.
func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput) CpuOvercommitRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) *float64 {
		return v.CpuOvercommitRatio
	}).(pulumi.Float64PtrOutput)
}

// Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.
func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput) MemoryOvercommitRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) *float64 {
		return v.MemoryOvercommitRatio
	}).(pulumi.Float64PtrOutput)
}

// The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.
func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput) StorageDeduplicationCompressionRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) *float64 {
		return v.StorageDeduplicationCompressionRatio
	}).(pulumi.Float64PtrOutput)
}

type PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences)(nil)).Elem()
}

func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput) ToPreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutputWithContext(ctx context.Context) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput {
	return o
}

func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput) Elem() PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences {
		if v != nil {
			return *v
		}
		var ret PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences
		return ret
	}).(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput)
}

// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
// Possible values:
// COMMITMENT_PLAN_UNSPECIFIED
// ON_DEMAND
// COMMITMENT_1_YEAR_MONTHLY_PAYMENTS
// COMMITMENT_3_YEAR_MONTHLY_PAYMENTS
// COMMITMENT_1_YEAR_UPFRONT_PAYMENT
// COMMITMENT_3_YEAR_UPFRONT_PAYMENT
func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput) CommitmentPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) *string {
		if v == nil {
			return nil
		}
		return v.CommitmentPlan
	}).(pulumi.StringPtrOutput)
}

// CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.
func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput) CpuOvercommitRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuOvercommitRatio
	}).(pulumi.Float64PtrOutput)
}

// Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.
func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput) MemoryOvercommitRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryOvercommitRatio
	}).(pulumi.Float64PtrOutput)
}

// The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.
func (o PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput) StorageDeduplicationCompressionRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences) *float64 {
		if v == nil {
			return nil
		}
		return v.StorageDeduplicationCompressionRatio
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesPtrInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesRegionPreferencesInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrInput)(nil)).Elem(), PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesAllowedMachineSeriesArrayOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesRegionPreferencesOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesRegionPreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArrayOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesOutput{})
	pulumi.RegisterOutputType(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesPtrOutput{})
}
