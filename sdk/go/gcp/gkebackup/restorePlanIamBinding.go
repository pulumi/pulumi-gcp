// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkebackup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Represents a Restore Plan instance.
//
// To get more information about RestorePlan, see:
//
// * [API documentation](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/projects.locations.restorePlans)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke)
//
// ## Example Usage
//
// ## Import
//
// # RestorePlan can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:gkebackup/restorePlanIamBinding:RestorePlanIamBinding default projects/{{project}}/locations/{{location}}/restorePlans/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkebackup/restorePlanIamBinding:RestorePlanIamBinding default {{project}}/{{location}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkebackup/restorePlanIamBinding:RestorePlanIamBinding default {{location}}/{{name}}
//
// ```
type RestorePlanIamBinding struct {
	pulumi.CustomResourceState

	Condition RestorePlanIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag      pulumi.StringOutput                     `pulumi:"etag"`
	// The region of the Restore Plan.
	Location pulumi.StringOutput      `pulumi:"location"`
	Members  pulumi.StringArrayOutput `pulumi:"members"`
	// The full name of the BackupPlan Resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	Role    pulumi.StringOutput `pulumi:"role"`
}

// NewRestorePlanIamBinding registers a new resource with the given unique name, arguments, and options.
func NewRestorePlanIamBinding(ctx *pulumi.Context,
	name string, args *RestorePlanIamBindingArgs, opts ...pulumi.ResourceOption) (*RestorePlanIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RestorePlanIamBinding
	err := ctx.RegisterResource("gcp:gkebackup/restorePlanIamBinding:RestorePlanIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestorePlanIamBinding gets an existing RestorePlanIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestorePlanIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestorePlanIamBindingState, opts ...pulumi.ResourceOption) (*RestorePlanIamBinding, error) {
	var resource RestorePlanIamBinding
	err := ctx.ReadResource("gcp:gkebackup/restorePlanIamBinding:RestorePlanIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestorePlanIamBinding resources.
type restorePlanIamBindingState struct {
	Condition *RestorePlanIamBindingCondition `pulumi:"condition"`
	Etag      *string                         `pulumi:"etag"`
	// The region of the Restore Plan.
	Location *string  `pulumi:"location"`
	Members  []string `pulumi:"members"`
	// The full name of the BackupPlan Resource.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	Role    *string `pulumi:"role"`
}

type RestorePlanIamBindingState struct {
	Condition RestorePlanIamBindingConditionPtrInput
	Etag      pulumi.StringPtrInput
	// The region of the Restore Plan.
	Location pulumi.StringPtrInput
	Members  pulumi.StringArrayInput
	// The full name of the BackupPlan Resource.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	Role    pulumi.StringPtrInput
}

func (RestorePlanIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePlanIamBindingState)(nil)).Elem()
}

type restorePlanIamBindingArgs struct {
	Condition *RestorePlanIamBindingCondition `pulumi:"condition"`
	// The region of the Restore Plan.
	Location *string  `pulumi:"location"`
	Members  []string `pulumi:"members"`
	// The full name of the BackupPlan Resource.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	Role    string  `pulumi:"role"`
}

// The set of arguments for constructing a RestorePlanIamBinding resource.
type RestorePlanIamBindingArgs struct {
	Condition RestorePlanIamBindingConditionPtrInput
	// The region of the Restore Plan.
	Location pulumi.StringPtrInput
	Members  pulumi.StringArrayInput
	// The full name of the BackupPlan Resource.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	Role    pulumi.StringInput
}

func (RestorePlanIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePlanIamBindingArgs)(nil)).Elem()
}

type RestorePlanIamBindingInput interface {
	pulumi.Input

	ToRestorePlanIamBindingOutput() RestorePlanIamBindingOutput
	ToRestorePlanIamBindingOutputWithContext(ctx context.Context) RestorePlanIamBindingOutput
}

func (*RestorePlanIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePlanIamBinding)(nil)).Elem()
}

func (i *RestorePlanIamBinding) ToRestorePlanIamBindingOutput() RestorePlanIamBindingOutput {
	return i.ToRestorePlanIamBindingOutputWithContext(context.Background())
}

func (i *RestorePlanIamBinding) ToRestorePlanIamBindingOutputWithContext(ctx context.Context) RestorePlanIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanIamBindingOutput)
}

func (i *RestorePlanIamBinding) ToOutput(ctx context.Context) pulumix.Output[*RestorePlanIamBinding] {
	return pulumix.Output[*RestorePlanIamBinding]{
		OutputState: i.ToRestorePlanIamBindingOutputWithContext(ctx).OutputState,
	}
}

// RestorePlanIamBindingArrayInput is an input type that accepts RestorePlanIamBindingArray and RestorePlanIamBindingArrayOutput values.
// You can construct a concrete instance of `RestorePlanIamBindingArrayInput` via:
//
//	RestorePlanIamBindingArray{ RestorePlanIamBindingArgs{...} }
type RestorePlanIamBindingArrayInput interface {
	pulumi.Input

	ToRestorePlanIamBindingArrayOutput() RestorePlanIamBindingArrayOutput
	ToRestorePlanIamBindingArrayOutputWithContext(context.Context) RestorePlanIamBindingArrayOutput
}

type RestorePlanIamBindingArray []RestorePlanIamBindingInput

func (RestorePlanIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePlanIamBinding)(nil)).Elem()
}

func (i RestorePlanIamBindingArray) ToRestorePlanIamBindingArrayOutput() RestorePlanIamBindingArrayOutput {
	return i.ToRestorePlanIamBindingArrayOutputWithContext(context.Background())
}

func (i RestorePlanIamBindingArray) ToRestorePlanIamBindingArrayOutputWithContext(ctx context.Context) RestorePlanIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanIamBindingArrayOutput)
}

func (i RestorePlanIamBindingArray) ToOutput(ctx context.Context) pulumix.Output[[]*RestorePlanIamBinding] {
	return pulumix.Output[[]*RestorePlanIamBinding]{
		OutputState: i.ToRestorePlanIamBindingArrayOutputWithContext(ctx).OutputState,
	}
}

// RestorePlanIamBindingMapInput is an input type that accepts RestorePlanIamBindingMap and RestorePlanIamBindingMapOutput values.
// You can construct a concrete instance of `RestorePlanIamBindingMapInput` via:
//
//	RestorePlanIamBindingMap{ "key": RestorePlanIamBindingArgs{...} }
type RestorePlanIamBindingMapInput interface {
	pulumi.Input

	ToRestorePlanIamBindingMapOutput() RestorePlanIamBindingMapOutput
	ToRestorePlanIamBindingMapOutputWithContext(context.Context) RestorePlanIamBindingMapOutput
}

type RestorePlanIamBindingMap map[string]RestorePlanIamBindingInput

func (RestorePlanIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePlanIamBinding)(nil)).Elem()
}

func (i RestorePlanIamBindingMap) ToRestorePlanIamBindingMapOutput() RestorePlanIamBindingMapOutput {
	return i.ToRestorePlanIamBindingMapOutputWithContext(context.Background())
}

func (i RestorePlanIamBindingMap) ToRestorePlanIamBindingMapOutputWithContext(ctx context.Context) RestorePlanIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanIamBindingMapOutput)
}

func (i RestorePlanIamBindingMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*RestorePlanIamBinding] {
	return pulumix.Output[map[string]*RestorePlanIamBinding]{
		OutputState: i.ToRestorePlanIamBindingMapOutputWithContext(ctx).OutputState,
	}
}

type RestorePlanIamBindingOutput struct{ *pulumi.OutputState }

func (RestorePlanIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePlanIamBinding)(nil)).Elem()
}

func (o RestorePlanIamBindingOutput) ToRestorePlanIamBindingOutput() RestorePlanIamBindingOutput {
	return o
}

func (o RestorePlanIamBindingOutput) ToRestorePlanIamBindingOutputWithContext(ctx context.Context) RestorePlanIamBindingOutput {
	return o
}

func (o RestorePlanIamBindingOutput) ToOutput(ctx context.Context) pulumix.Output[*RestorePlanIamBinding] {
	return pulumix.Output[*RestorePlanIamBinding]{
		OutputState: o.OutputState,
	}
}

func (o RestorePlanIamBindingOutput) Condition() RestorePlanIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *RestorePlanIamBinding) RestorePlanIamBindingConditionPtrOutput { return v.Condition }).(RestorePlanIamBindingConditionPtrOutput)
}

func (o RestorePlanIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The region of the Restore Plan.
func (o RestorePlanIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o RestorePlanIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestorePlanIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The full name of the BackupPlan Resource.
func (o RestorePlanIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RestorePlanIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o RestorePlanIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type RestorePlanIamBindingArrayOutput struct{ *pulumi.OutputState }

func (RestorePlanIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePlanIamBinding)(nil)).Elem()
}

func (o RestorePlanIamBindingArrayOutput) ToRestorePlanIamBindingArrayOutput() RestorePlanIamBindingArrayOutput {
	return o
}

func (o RestorePlanIamBindingArrayOutput) ToRestorePlanIamBindingArrayOutputWithContext(ctx context.Context) RestorePlanIamBindingArrayOutput {
	return o
}

func (o RestorePlanIamBindingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*RestorePlanIamBinding] {
	return pulumix.Output[[]*RestorePlanIamBinding]{
		OutputState: o.OutputState,
	}
}

func (o RestorePlanIamBindingArrayOutput) Index(i pulumi.IntInput) RestorePlanIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RestorePlanIamBinding {
		return vs[0].([]*RestorePlanIamBinding)[vs[1].(int)]
	}).(RestorePlanIamBindingOutput)
}

type RestorePlanIamBindingMapOutput struct{ *pulumi.OutputState }

func (RestorePlanIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePlanIamBinding)(nil)).Elem()
}

func (o RestorePlanIamBindingMapOutput) ToRestorePlanIamBindingMapOutput() RestorePlanIamBindingMapOutput {
	return o
}

func (o RestorePlanIamBindingMapOutput) ToRestorePlanIamBindingMapOutputWithContext(ctx context.Context) RestorePlanIamBindingMapOutput {
	return o
}

func (o RestorePlanIamBindingMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*RestorePlanIamBinding] {
	return pulumix.Output[map[string]*RestorePlanIamBinding]{
		OutputState: o.OutputState,
	}
}

func (o RestorePlanIamBindingMapOutput) MapIndex(k pulumi.StringInput) RestorePlanIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RestorePlanIamBinding {
		return vs[0].(map[string]*RestorePlanIamBinding)[vs[1].(string)]
	}).(RestorePlanIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanIamBindingInput)(nil)).Elem(), &RestorePlanIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanIamBindingArrayInput)(nil)).Elem(), RestorePlanIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanIamBindingMapInput)(nil)).Elem(), RestorePlanIamBindingMap{})
	pulumi.RegisterOutputType(RestorePlanIamBindingOutput{})
	pulumi.RegisterOutputType(RestorePlanIamBindingArrayOutput{})
	pulumi.RegisterOutputType(RestorePlanIamBindingMapOutput{})
}
