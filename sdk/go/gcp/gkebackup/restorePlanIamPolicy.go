// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkebackup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Represents a Restore Plan instance.
//
// To get more information about RestorePlan, see:
//
// * [API documentation](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/projects.locations.restorePlans)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke)
//
// ## Example Usage
//
// ## Import
//
// # RestorePlan can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy default projects/{{project}}/locations/{{location}}/restorePlans/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy default {{project}}/{{location}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy default {{location}}/{{name}}
//
// ```
type RestorePlanIamPolicy struct {
	pulumi.CustomResourceState

	Etag pulumi.StringOutput `pulumi:"etag"`
	// The region of the Restore Plan.
	Location pulumi.StringOutput `pulumi:"location"`
	// The full name of the BackupPlan Resource.
	Name       pulumi.StringOutput `pulumi:"name"`
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewRestorePlanIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewRestorePlanIamPolicy(ctx *pulumi.Context,
	name string, args *RestorePlanIamPolicyArgs, opts ...pulumi.ResourceOption) (*RestorePlanIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RestorePlanIamPolicy
	err := ctx.RegisterResource("gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestorePlanIamPolicy gets an existing RestorePlanIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestorePlanIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestorePlanIamPolicyState, opts ...pulumi.ResourceOption) (*RestorePlanIamPolicy, error) {
	var resource RestorePlanIamPolicy
	err := ctx.ReadResource("gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestorePlanIamPolicy resources.
type restorePlanIamPolicyState struct {
	Etag *string `pulumi:"etag"`
	// The region of the Restore Plan.
	Location *string `pulumi:"location"`
	// The full name of the BackupPlan Resource.
	Name       *string `pulumi:"name"`
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

type RestorePlanIamPolicyState struct {
	Etag pulumi.StringPtrInput
	// The region of the Restore Plan.
	Location pulumi.StringPtrInput
	// The full name of the BackupPlan Resource.
	Name       pulumi.StringPtrInput
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (RestorePlanIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePlanIamPolicyState)(nil)).Elem()
}

type restorePlanIamPolicyArgs struct {
	// The region of the Restore Plan.
	Location *string `pulumi:"location"`
	// The full name of the BackupPlan Resource.
	Name       *string `pulumi:"name"`
	PolicyData string  `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a RestorePlanIamPolicy resource.
type RestorePlanIamPolicyArgs struct {
	// The region of the Restore Plan.
	Location pulumi.StringPtrInput
	// The full name of the BackupPlan Resource.
	Name       pulumi.StringPtrInput
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (RestorePlanIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePlanIamPolicyArgs)(nil)).Elem()
}

type RestorePlanIamPolicyInput interface {
	pulumi.Input

	ToRestorePlanIamPolicyOutput() RestorePlanIamPolicyOutput
	ToRestorePlanIamPolicyOutputWithContext(ctx context.Context) RestorePlanIamPolicyOutput
}

func (*RestorePlanIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePlanIamPolicy)(nil)).Elem()
}

func (i *RestorePlanIamPolicy) ToRestorePlanIamPolicyOutput() RestorePlanIamPolicyOutput {
	return i.ToRestorePlanIamPolicyOutputWithContext(context.Background())
}

func (i *RestorePlanIamPolicy) ToRestorePlanIamPolicyOutputWithContext(ctx context.Context) RestorePlanIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanIamPolicyOutput)
}

func (i *RestorePlanIamPolicy) ToOutput(ctx context.Context) pulumix.Output[*RestorePlanIamPolicy] {
	return pulumix.Output[*RestorePlanIamPolicy]{
		OutputState: i.ToRestorePlanIamPolicyOutputWithContext(ctx).OutputState,
	}
}

// RestorePlanIamPolicyArrayInput is an input type that accepts RestorePlanIamPolicyArray and RestorePlanIamPolicyArrayOutput values.
// You can construct a concrete instance of `RestorePlanIamPolicyArrayInput` via:
//
//	RestorePlanIamPolicyArray{ RestorePlanIamPolicyArgs{...} }
type RestorePlanIamPolicyArrayInput interface {
	pulumi.Input

	ToRestorePlanIamPolicyArrayOutput() RestorePlanIamPolicyArrayOutput
	ToRestorePlanIamPolicyArrayOutputWithContext(context.Context) RestorePlanIamPolicyArrayOutput
}

type RestorePlanIamPolicyArray []RestorePlanIamPolicyInput

func (RestorePlanIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePlanIamPolicy)(nil)).Elem()
}

func (i RestorePlanIamPolicyArray) ToRestorePlanIamPolicyArrayOutput() RestorePlanIamPolicyArrayOutput {
	return i.ToRestorePlanIamPolicyArrayOutputWithContext(context.Background())
}

func (i RestorePlanIamPolicyArray) ToRestorePlanIamPolicyArrayOutputWithContext(ctx context.Context) RestorePlanIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanIamPolicyArrayOutput)
}

func (i RestorePlanIamPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]*RestorePlanIamPolicy] {
	return pulumix.Output[[]*RestorePlanIamPolicy]{
		OutputState: i.ToRestorePlanIamPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

// RestorePlanIamPolicyMapInput is an input type that accepts RestorePlanIamPolicyMap and RestorePlanIamPolicyMapOutput values.
// You can construct a concrete instance of `RestorePlanIamPolicyMapInput` via:
//
//	RestorePlanIamPolicyMap{ "key": RestorePlanIamPolicyArgs{...} }
type RestorePlanIamPolicyMapInput interface {
	pulumi.Input

	ToRestorePlanIamPolicyMapOutput() RestorePlanIamPolicyMapOutput
	ToRestorePlanIamPolicyMapOutputWithContext(context.Context) RestorePlanIamPolicyMapOutput
}

type RestorePlanIamPolicyMap map[string]RestorePlanIamPolicyInput

func (RestorePlanIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePlanIamPolicy)(nil)).Elem()
}

func (i RestorePlanIamPolicyMap) ToRestorePlanIamPolicyMapOutput() RestorePlanIamPolicyMapOutput {
	return i.ToRestorePlanIamPolicyMapOutputWithContext(context.Background())
}

func (i RestorePlanIamPolicyMap) ToRestorePlanIamPolicyMapOutputWithContext(ctx context.Context) RestorePlanIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanIamPolicyMapOutput)
}

func (i RestorePlanIamPolicyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*RestorePlanIamPolicy] {
	return pulumix.Output[map[string]*RestorePlanIamPolicy]{
		OutputState: i.ToRestorePlanIamPolicyMapOutputWithContext(ctx).OutputState,
	}
}

type RestorePlanIamPolicyOutput struct{ *pulumi.OutputState }

func (RestorePlanIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePlanIamPolicy)(nil)).Elem()
}

func (o RestorePlanIamPolicyOutput) ToRestorePlanIamPolicyOutput() RestorePlanIamPolicyOutput {
	return o
}

func (o RestorePlanIamPolicyOutput) ToRestorePlanIamPolicyOutputWithContext(ctx context.Context) RestorePlanIamPolicyOutput {
	return o
}

func (o RestorePlanIamPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[*RestorePlanIamPolicy] {
	return pulumix.Output[*RestorePlanIamPolicy]{
		OutputState: o.OutputState,
	}
}

func (o RestorePlanIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The region of the Restore Plan.
func (o RestorePlanIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The full name of the BackupPlan Resource.
func (o RestorePlanIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RestorePlanIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RestorePlanIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

type RestorePlanIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (RestorePlanIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePlanIamPolicy)(nil)).Elem()
}

func (o RestorePlanIamPolicyArrayOutput) ToRestorePlanIamPolicyArrayOutput() RestorePlanIamPolicyArrayOutput {
	return o
}

func (o RestorePlanIamPolicyArrayOutput) ToRestorePlanIamPolicyArrayOutputWithContext(ctx context.Context) RestorePlanIamPolicyArrayOutput {
	return o
}

func (o RestorePlanIamPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*RestorePlanIamPolicy] {
	return pulumix.Output[[]*RestorePlanIamPolicy]{
		OutputState: o.OutputState,
	}
}

func (o RestorePlanIamPolicyArrayOutput) Index(i pulumi.IntInput) RestorePlanIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RestorePlanIamPolicy {
		return vs[0].([]*RestorePlanIamPolicy)[vs[1].(int)]
	}).(RestorePlanIamPolicyOutput)
}

type RestorePlanIamPolicyMapOutput struct{ *pulumi.OutputState }

func (RestorePlanIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePlanIamPolicy)(nil)).Elem()
}

func (o RestorePlanIamPolicyMapOutput) ToRestorePlanIamPolicyMapOutput() RestorePlanIamPolicyMapOutput {
	return o
}

func (o RestorePlanIamPolicyMapOutput) ToRestorePlanIamPolicyMapOutputWithContext(ctx context.Context) RestorePlanIamPolicyMapOutput {
	return o
}

func (o RestorePlanIamPolicyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*RestorePlanIamPolicy] {
	return pulumix.Output[map[string]*RestorePlanIamPolicy]{
		OutputState: o.OutputState,
	}
}

func (o RestorePlanIamPolicyMapOutput) MapIndex(k pulumi.StringInput) RestorePlanIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RestorePlanIamPolicy {
		return vs[0].(map[string]*RestorePlanIamPolicy)[vs[1].(string)]
	}).(RestorePlanIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanIamPolicyInput)(nil)).Elem(), &RestorePlanIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanIamPolicyArrayInput)(nil)).Elem(), RestorePlanIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanIamPolicyMapInput)(nil)).Elem(), RestorePlanIamPolicyMap{})
	pulumi.RegisterOutputType(RestorePlanIamPolicyOutput{})
	pulumi.RegisterOutputType(RestorePlanIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(RestorePlanIamPolicyMapOutput{})
}
