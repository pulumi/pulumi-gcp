// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkebackup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for Backup for GKE RestorePlan. Each of these resources serves a different use case:
//
// * `gkebackup.RestorePlanIamPolicy`: Authoritative. Sets the IAM policy for the restoreplan and replaces any existing policy already attached.
// * `gkebackup.RestorePlanIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the restoreplan are preserved.
// * `gkebackup.RestorePlanIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the restoreplan are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `gkebackup.RestorePlanIamPolicy`: Retrieves the IAM policy for the restoreplan
//
// > **Note:** `gkebackup.RestorePlanIamPolicy` **cannot** be used in conjunction with `gkebackup.RestorePlanIamBinding` and `gkebackup.RestorePlanIamMember` or they will fight over what your policy should be.
//
// > **Note:** `gkebackup.RestorePlanIamBinding` resources **can be** used in conjunction with `gkebackup.RestorePlanIamMember` resources **only if** they do not grant privilege to the same role.
//
// ## gkebackup.RestorePlanIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkebackup"
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/viewer",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = gkebackup.NewRestorePlanIamPolicy(ctx, "policy", &gkebackup.RestorePlanIamPolicyArgs{
//				Project:    pulumi.Any(allNs.Project),
//				Location:   pulumi.Any(allNs.Location),
//				Name:       pulumi.Any(allNs.Name),
//				PolicyData: pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## gkebackup.RestorePlanIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkebackup"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkebackup.NewRestorePlanIamBinding(ctx, "binding", &gkebackup.RestorePlanIamBindingArgs{
//				Project:  pulumi.Any(allNs.Project),
//				Location: pulumi.Any(allNs.Location),
//				Name:     pulumi.Any(allNs.Name),
//				Role:     pulumi.String("roles/viewer"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## gkebackup.RestorePlanIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkebackup"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkebackup.NewRestorePlanIamMember(ctx, "member", &gkebackup.RestorePlanIamMemberArgs{
//				Project:  pulumi.Any(allNs.Project),
//				Location: pulumi.Any(allNs.Location),
//				Name:     pulumi.Any(allNs.Name),
//				Role:     pulumi.String("roles/viewer"),
//				Member:   pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## This resource supports User Project Overrides.
//
// -
//
// # IAM policy for Backup for GKE RestorePlan
// Three different resources help you manage your IAM policy for Backup for GKE RestorePlan. Each of these resources serves a different use case:
//
// * `gkebackup.RestorePlanIamPolicy`: Authoritative. Sets the IAM policy for the restoreplan and replaces any existing policy already attached.
// * `gkebackup.RestorePlanIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the restoreplan are preserved.
// * `gkebackup.RestorePlanIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the restoreplan are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `gkebackup.RestorePlanIamPolicy`: Retrieves the IAM policy for the restoreplan
//
// > **Note:** `gkebackup.RestorePlanIamPolicy` **cannot** be used in conjunction with `gkebackup.RestorePlanIamBinding` and `gkebackup.RestorePlanIamMember` or they will fight over what your policy should be.
//
// > **Note:** `gkebackup.RestorePlanIamBinding` resources **can be** used in conjunction with `gkebackup.RestorePlanIamMember` resources **only if** they do not grant privilege to the same role.
//
// ## gkebackup.RestorePlanIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkebackup"
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/viewer",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = gkebackup.NewRestorePlanIamPolicy(ctx, "policy", &gkebackup.RestorePlanIamPolicyArgs{
//				Project:    pulumi.Any(allNs.Project),
//				Location:   pulumi.Any(allNs.Location),
//				Name:       pulumi.Any(allNs.Name),
//				PolicyData: pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## gkebackup.RestorePlanIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkebackup"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkebackup.NewRestorePlanIamBinding(ctx, "binding", &gkebackup.RestorePlanIamBindingArgs{
//				Project:  pulumi.Any(allNs.Project),
//				Location: pulumi.Any(allNs.Location),
//				Name:     pulumi.Any(allNs.Name),
//				Role:     pulumi.String("roles/viewer"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## gkebackup.RestorePlanIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkebackup"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkebackup.NewRestorePlanIamMember(ctx, "member", &gkebackup.RestorePlanIamMemberArgs{
//				Project:  pulumi.Any(allNs.Project),
//				Location: pulumi.Any(allNs.Location),
//				Name:     pulumi.Any(allNs.Name),
//				Role:     pulumi.String("roles/viewer"),
//				Member:   pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/locations/{{location}}/restorePlans/{{name}}
//
// * {{project}}/{{location}}/{{name}}
//
// * {{location}}/{{name}}
//
// * {{name}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Backup for GKE restoreplan IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy editor "projects/{{project}}/locations/{{location}}/restorePlans/{{restore_plan}} roles/viewer user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy editor "projects/{{project}}/locations/{{location}}/restorePlans/{{restore_plan}} roles/viewer"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy editor projects/{{project}}/locations/{{location}}/restorePlans/{{restore_plan}}
// ```
//
// -> **Custom Roles**: If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type RestorePlanIamPolicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The region of the Restore Plan.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringOutput `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringOutput `pulumi:"name"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewRestorePlanIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewRestorePlanIamPolicy(ctx *pulumi.Context,
	name string, args *RestorePlanIamPolicyArgs, opts ...pulumi.ResourceOption) (*RestorePlanIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RestorePlanIamPolicy
	err := ctx.RegisterResource("gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestorePlanIamPolicy gets an existing RestorePlanIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestorePlanIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestorePlanIamPolicyState, opts ...pulumi.ResourceOption) (*RestorePlanIamPolicy, error) {
	var resource RestorePlanIamPolicy
	err := ctx.ReadResource("gcp:gkebackup/restorePlanIamPolicy:RestorePlanIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestorePlanIamPolicy resources.
type restorePlanIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The region of the Restore Plan.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name *string `pulumi:"name"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

type RestorePlanIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The region of the Restore Plan.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
}

func (RestorePlanIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePlanIamPolicyState)(nil)).Elem()
}

type restorePlanIamPolicyArgs struct {
	// The region of the Restore Plan.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name *string `pulumi:"name"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a RestorePlanIamPolicy resource.
type RestorePlanIamPolicyArgs struct {
	// The region of the Restore Plan.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
}

func (RestorePlanIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePlanIamPolicyArgs)(nil)).Elem()
}

type RestorePlanIamPolicyInput interface {
	pulumi.Input

	ToRestorePlanIamPolicyOutput() RestorePlanIamPolicyOutput
	ToRestorePlanIamPolicyOutputWithContext(ctx context.Context) RestorePlanIamPolicyOutput
}

func (*RestorePlanIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePlanIamPolicy)(nil)).Elem()
}

func (i *RestorePlanIamPolicy) ToRestorePlanIamPolicyOutput() RestorePlanIamPolicyOutput {
	return i.ToRestorePlanIamPolicyOutputWithContext(context.Background())
}

func (i *RestorePlanIamPolicy) ToRestorePlanIamPolicyOutputWithContext(ctx context.Context) RestorePlanIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanIamPolicyOutput)
}

// RestorePlanIamPolicyArrayInput is an input type that accepts RestorePlanIamPolicyArray and RestorePlanIamPolicyArrayOutput values.
// You can construct a concrete instance of `RestorePlanIamPolicyArrayInput` via:
//
//	RestorePlanIamPolicyArray{ RestorePlanIamPolicyArgs{...} }
type RestorePlanIamPolicyArrayInput interface {
	pulumi.Input

	ToRestorePlanIamPolicyArrayOutput() RestorePlanIamPolicyArrayOutput
	ToRestorePlanIamPolicyArrayOutputWithContext(context.Context) RestorePlanIamPolicyArrayOutput
}

type RestorePlanIamPolicyArray []RestorePlanIamPolicyInput

func (RestorePlanIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePlanIamPolicy)(nil)).Elem()
}

func (i RestorePlanIamPolicyArray) ToRestorePlanIamPolicyArrayOutput() RestorePlanIamPolicyArrayOutput {
	return i.ToRestorePlanIamPolicyArrayOutputWithContext(context.Background())
}

func (i RestorePlanIamPolicyArray) ToRestorePlanIamPolicyArrayOutputWithContext(ctx context.Context) RestorePlanIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanIamPolicyArrayOutput)
}

// RestorePlanIamPolicyMapInput is an input type that accepts RestorePlanIamPolicyMap and RestorePlanIamPolicyMapOutput values.
// You can construct a concrete instance of `RestorePlanIamPolicyMapInput` via:
//
//	RestorePlanIamPolicyMap{ "key": RestorePlanIamPolicyArgs{...} }
type RestorePlanIamPolicyMapInput interface {
	pulumi.Input

	ToRestorePlanIamPolicyMapOutput() RestorePlanIamPolicyMapOutput
	ToRestorePlanIamPolicyMapOutputWithContext(context.Context) RestorePlanIamPolicyMapOutput
}

type RestorePlanIamPolicyMap map[string]RestorePlanIamPolicyInput

func (RestorePlanIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePlanIamPolicy)(nil)).Elem()
}

func (i RestorePlanIamPolicyMap) ToRestorePlanIamPolicyMapOutput() RestorePlanIamPolicyMapOutput {
	return i.ToRestorePlanIamPolicyMapOutputWithContext(context.Background())
}

func (i RestorePlanIamPolicyMap) ToRestorePlanIamPolicyMapOutputWithContext(ctx context.Context) RestorePlanIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanIamPolicyMapOutput)
}

type RestorePlanIamPolicyOutput struct{ *pulumi.OutputState }

func (RestorePlanIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePlanIamPolicy)(nil)).Elem()
}

func (o RestorePlanIamPolicyOutput) ToRestorePlanIamPolicyOutput() RestorePlanIamPolicyOutput {
	return o
}

func (o RestorePlanIamPolicyOutput) ToRestorePlanIamPolicyOutputWithContext(ctx context.Context) RestorePlanIamPolicyOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o RestorePlanIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The region of the Restore Plan.
// Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
// location is specified, it is taken from the provider configuration.
func (o RestorePlanIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o RestorePlanIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o RestorePlanIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o RestorePlanIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlanIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

type RestorePlanIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (RestorePlanIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePlanIamPolicy)(nil)).Elem()
}

func (o RestorePlanIamPolicyArrayOutput) ToRestorePlanIamPolicyArrayOutput() RestorePlanIamPolicyArrayOutput {
	return o
}

func (o RestorePlanIamPolicyArrayOutput) ToRestorePlanIamPolicyArrayOutputWithContext(ctx context.Context) RestorePlanIamPolicyArrayOutput {
	return o
}

func (o RestorePlanIamPolicyArrayOutput) Index(i pulumi.IntInput) RestorePlanIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RestorePlanIamPolicy {
		return vs[0].([]*RestorePlanIamPolicy)[vs[1].(int)]
	}).(RestorePlanIamPolicyOutput)
}

type RestorePlanIamPolicyMapOutput struct{ *pulumi.OutputState }

func (RestorePlanIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePlanIamPolicy)(nil)).Elem()
}

func (o RestorePlanIamPolicyMapOutput) ToRestorePlanIamPolicyMapOutput() RestorePlanIamPolicyMapOutput {
	return o
}

func (o RestorePlanIamPolicyMapOutput) ToRestorePlanIamPolicyMapOutputWithContext(ctx context.Context) RestorePlanIamPolicyMapOutput {
	return o
}

func (o RestorePlanIamPolicyMapOutput) MapIndex(k pulumi.StringInput) RestorePlanIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RestorePlanIamPolicy {
		return vs[0].(map[string]*RestorePlanIamPolicy)[vs[1].(string)]
	}).(RestorePlanIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanIamPolicyInput)(nil)).Elem(), &RestorePlanIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanIamPolicyArrayInput)(nil)).Elem(), RestorePlanIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanIamPolicyMapInput)(nil)).Elem(), RestorePlanIamPolicyMap{})
	pulumi.RegisterOutputType(RestorePlanIamPolicyOutput{})
	pulumi.RegisterOutputType(RestorePlanIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(RestorePlanIamPolicyMapOutput{})
}
