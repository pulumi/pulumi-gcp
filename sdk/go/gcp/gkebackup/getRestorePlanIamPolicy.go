// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkebackup

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for restoreplan
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/gkebackup"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkebackup.LookupRestorePlanIamPolicy(ctx, &gkebackup.LookupRestorePlanIamPolicyArgs{
//				Project:  pulumi.StringRef(allNs.Project),
//				Location: pulumi.StringRef(allNs.Location),
//				Name:     allNs.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRestorePlanIamPolicy(ctx *pulumi.Context, args *LookupRestorePlanIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupRestorePlanIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	invokeOpts, optsErr := pulumi.NewInvokeOptions(opts...)
	if optsErr != nil {
		return &LookupRestorePlanIamPolicyResult{}, optsErr
	}
	if len(invokeOpts.DependsOn) > 0 {
		return &LookupRestorePlanIamPolicyResult{}, errors.New("DependsOn is not supported for direct form invoke LookupRestorePlanIamPolicy, use LookupRestorePlanIamPolicyOutput instead")
	}
	if len(invokeOpts.DependsOnInputs) > 0 {
		return &LookupRestorePlanIamPolicyResult{}, errors.New("DependsOnInputs is not supported for direct form invoke LookupRestorePlanIamPolicy, use LookupRestorePlanIamPolicyOutput instead")
	}
	var rv LookupRestorePlanIamPolicyResult
	err := ctx.Invoke("gcp:gkebackup/getRestorePlanIamPolicy:getRestorePlanIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRestorePlanIamPolicy.
type LookupRestorePlanIamPolicyArgs struct {
	// The region of the Restore Plan.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getRestorePlanIamPolicy.
type LookupRestorePlanIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// (Required only by `gkebackup.RestorePlanIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupRestorePlanIamPolicyOutput(ctx *pulumi.Context, args LookupRestorePlanIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupRestorePlanIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRestorePlanIamPolicyResultOutput, error) {
			args := v.(LookupRestorePlanIamPolicyArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupRestorePlanIamPolicyResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("gcp:gkebackup/getRestorePlanIamPolicy:getRestorePlanIamPolicy", args, &rv, "", opts...)
			if err != nil {
				return LookupRestorePlanIamPolicyResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupRestorePlanIamPolicyResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupRestorePlanIamPolicyResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupRestorePlanIamPolicyResultOutput), nil
			}
			return output, nil
		}).(LookupRestorePlanIamPolicyResultOutput)
}

// A collection of arguments for invoking getRestorePlanIamPolicy.
type LookupRestorePlanIamPolicyOutputArgs struct {
	// The region of the Restore Plan.
	// Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupRestorePlanIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRestorePlanIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getRestorePlanIamPolicy.
type LookupRestorePlanIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupRestorePlanIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRestorePlanIamPolicyResult)(nil)).Elem()
}

func (o LookupRestorePlanIamPolicyResultOutput) ToLookupRestorePlanIamPolicyResultOutput() LookupRestorePlanIamPolicyResultOutput {
	return o
}

func (o LookupRestorePlanIamPolicyResultOutput) ToLookupRestorePlanIamPolicyResultOutputWithContext(ctx context.Context) LookupRestorePlanIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupRestorePlanIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRestorePlanIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRestorePlanIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupRestorePlanIamPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanIamPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Required only by `gkebackup.RestorePlanIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupRestorePlanIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupRestorePlanIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRestorePlanIamPolicyResultOutput{})
}
