// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigrationservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectionProfileAlloydb struct {
	// Required. The AlloyDB cluster ID that this connection profile is associated with.
	ClusterId string `pulumi:"clusterId"`
	// Immutable. Metadata used to create the destination AlloyDB cluster.
	// Structure is documented below.
	Settings *ConnectionProfileAlloydbSettings `pulumi:"settings"`
}

// ConnectionProfileAlloydbInput is an input type that accepts ConnectionProfileAlloydbArgs and ConnectionProfileAlloydbOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbInput` via:
//
//	ConnectionProfileAlloydbArgs{...}
type ConnectionProfileAlloydbInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbOutput() ConnectionProfileAlloydbOutput
	ToConnectionProfileAlloydbOutputWithContext(context.Context) ConnectionProfileAlloydbOutput
}

type ConnectionProfileAlloydbArgs struct {
	// Required. The AlloyDB cluster ID that this connection profile is associated with.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Immutable. Metadata used to create the destination AlloyDB cluster.
	// Structure is documented below.
	Settings ConnectionProfileAlloydbSettingsPtrInput `pulumi:"settings"`
}

func (ConnectionProfileAlloydbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydb)(nil)).Elem()
}

func (i ConnectionProfileAlloydbArgs) ToConnectionProfileAlloydbOutput() ConnectionProfileAlloydbOutput {
	return i.ToConnectionProfileAlloydbOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbArgs) ToConnectionProfileAlloydbOutputWithContext(ctx context.Context) ConnectionProfileAlloydbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbOutput)
}

func (i ConnectionProfileAlloydbArgs) ToConnectionProfileAlloydbPtrOutput() ConnectionProfileAlloydbPtrOutput {
	return i.ToConnectionProfileAlloydbPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbArgs) ToConnectionProfileAlloydbPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbOutput).ToConnectionProfileAlloydbPtrOutputWithContext(ctx)
}

// ConnectionProfileAlloydbPtrInput is an input type that accepts ConnectionProfileAlloydbArgs, ConnectionProfileAlloydbPtr and ConnectionProfileAlloydbPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbPtrInput` via:
//
//	        ConnectionProfileAlloydbArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileAlloydbPtrInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbPtrOutput() ConnectionProfileAlloydbPtrOutput
	ToConnectionProfileAlloydbPtrOutputWithContext(context.Context) ConnectionProfileAlloydbPtrOutput
}

type connectionProfileAlloydbPtrType ConnectionProfileAlloydbArgs

func ConnectionProfileAlloydbPtr(v *ConnectionProfileAlloydbArgs) ConnectionProfileAlloydbPtrInput {
	return (*connectionProfileAlloydbPtrType)(v)
}

func (*connectionProfileAlloydbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydb)(nil)).Elem()
}

func (i *connectionProfileAlloydbPtrType) ToConnectionProfileAlloydbPtrOutput() ConnectionProfileAlloydbPtrOutput {
	return i.ToConnectionProfileAlloydbPtrOutputWithContext(context.Background())
}

func (i *connectionProfileAlloydbPtrType) ToConnectionProfileAlloydbPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbPtrOutput)
}

type ConnectionProfileAlloydbOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydb)(nil)).Elem()
}

func (o ConnectionProfileAlloydbOutput) ToConnectionProfileAlloydbOutput() ConnectionProfileAlloydbOutput {
	return o
}

func (o ConnectionProfileAlloydbOutput) ToConnectionProfileAlloydbOutputWithContext(ctx context.Context) ConnectionProfileAlloydbOutput {
	return o
}

func (o ConnectionProfileAlloydbOutput) ToConnectionProfileAlloydbPtrOutput() ConnectionProfileAlloydbPtrOutput {
	return o.ToConnectionProfileAlloydbPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileAlloydbOutput) ToConnectionProfileAlloydbPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileAlloydb) *ConnectionProfileAlloydb {
		return &v
	}).(ConnectionProfileAlloydbPtrOutput)
}

// Required. The AlloyDB cluster ID that this connection profile is associated with.
func (o ConnectionProfileAlloydbOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydb) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Immutable. Metadata used to create the destination AlloyDB cluster.
// Structure is documented below.
func (o ConnectionProfileAlloydbOutput) Settings() ConnectionProfileAlloydbSettingsPtrOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydb) *ConnectionProfileAlloydbSettings { return v.Settings }).(ConnectionProfileAlloydbSettingsPtrOutput)
}

type ConnectionProfileAlloydbPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydb)(nil)).Elem()
}

func (o ConnectionProfileAlloydbPtrOutput) ToConnectionProfileAlloydbPtrOutput() ConnectionProfileAlloydbPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbPtrOutput) ToConnectionProfileAlloydbPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbPtrOutput) Elem() ConnectionProfileAlloydbOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydb) ConnectionProfileAlloydb {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileAlloydb
		return ret
	}).(ConnectionProfileAlloydbOutput)
}

// Required. The AlloyDB cluster ID that this connection profile is associated with.
func (o ConnectionProfileAlloydbPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydb) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// Immutable. Metadata used to create the destination AlloyDB cluster.
// Structure is documented below.
func (o ConnectionProfileAlloydbPtrOutput) Settings() ConnectionProfileAlloydbSettingsPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydb) *ConnectionProfileAlloydbSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(ConnectionProfileAlloydbSettingsPtrOutput)
}

type ConnectionProfileAlloydbSettings struct {
	// Required. Input only. Initial user to setup during cluster creation.
	// Structure is documented below.
	InitialUser ConnectionProfileAlloydbSettingsInitialUser `pulumi:"initialUser"`
	// Labels for the AlloyDB cluster created by DMS.
	Labels map[string]string `pulumi:"labels"`
	// Settings for the cluster's primary instance
	// Structure is documented below.
	PrimaryInstanceSettings *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings `pulumi:"primaryInstanceSettings"`
	// Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster.
	// It is specified in the form: 'projects/{project_number}/global/networks/{network_id}'. This is required to create a cluster.
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// ConnectionProfileAlloydbSettingsInput is an input type that accepts ConnectionProfileAlloydbSettingsArgs and ConnectionProfileAlloydbSettingsOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbSettingsInput` via:
//
//	ConnectionProfileAlloydbSettingsArgs{...}
type ConnectionProfileAlloydbSettingsInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbSettingsOutput() ConnectionProfileAlloydbSettingsOutput
	ToConnectionProfileAlloydbSettingsOutputWithContext(context.Context) ConnectionProfileAlloydbSettingsOutput
}

type ConnectionProfileAlloydbSettingsArgs struct {
	// Required. Input only. Initial user to setup during cluster creation.
	// Structure is documented below.
	InitialUser ConnectionProfileAlloydbSettingsInitialUserInput `pulumi:"initialUser"`
	// Labels for the AlloyDB cluster created by DMS.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Settings for the cluster's primary instance
	// Structure is documented below.
	PrimaryInstanceSettings ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrInput `pulumi:"primaryInstanceSettings"`
	// Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster.
	// It is specified in the form: 'projects/{project_number}/global/networks/{network_id}'. This is required to create a cluster.
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (ConnectionProfileAlloydbSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydbSettings)(nil)).Elem()
}

func (i ConnectionProfileAlloydbSettingsArgs) ToConnectionProfileAlloydbSettingsOutput() ConnectionProfileAlloydbSettingsOutput {
	return i.ToConnectionProfileAlloydbSettingsOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbSettingsArgs) ToConnectionProfileAlloydbSettingsOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsOutput)
}

func (i ConnectionProfileAlloydbSettingsArgs) ToConnectionProfileAlloydbSettingsPtrOutput() ConnectionProfileAlloydbSettingsPtrOutput {
	return i.ToConnectionProfileAlloydbSettingsPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbSettingsArgs) ToConnectionProfileAlloydbSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsOutput).ToConnectionProfileAlloydbSettingsPtrOutputWithContext(ctx)
}

// ConnectionProfileAlloydbSettingsPtrInput is an input type that accepts ConnectionProfileAlloydbSettingsArgs, ConnectionProfileAlloydbSettingsPtr and ConnectionProfileAlloydbSettingsPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbSettingsPtrInput` via:
//
//	        ConnectionProfileAlloydbSettingsArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileAlloydbSettingsPtrInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbSettingsPtrOutput() ConnectionProfileAlloydbSettingsPtrOutput
	ToConnectionProfileAlloydbSettingsPtrOutputWithContext(context.Context) ConnectionProfileAlloydbSettingsPtrOutput
}

type connectionProfileAlloydbSettingsPtrType ConnectionProfileAlloydbSettingsArgs

func ConnectionProfileAlloydbSettingsPtr(v *ConnectionProfileAlloydbSettingsArgs) ConnectionProfileAlloydbSettingsPtrInput {
	return (*connectionProfileAlloydbSettingsPtrType)(v)
}

func (*connectionProfileAlloydbSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydbSettings)(nil)).Elem()
}

func (i *connectionProfileAlloydbSettingsPtrType) ToConnectionProfileAlloydbSettingsPtrOutput() ConnectionProfileAlloydbSettingsPtrOutput {
	return i.ToConnectionProfileAlloydbSettingsPtrOutputWithContext(context.Background())
}

func (i *connectionProfileAlloydbSettingsPtrType) ToConnectionProfileAlloydbSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsPtrOutput)
}

type ConnectionProfileAlloydbSettingsOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydbSettings)(nil)).Elem()
}

func (o ConnectionProfileAlloydbSettingsOutput) ToConnectionProfileAlloydbSettingsOutput() ConnectionProfileAlloydbSettingsOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsOutput) ToConnectionProfileAlloydbSettingsOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsOutput) ToConnectionProfileAlloydbSettingsPtrOutput() ConnectionProfileAlloydbSettingsPtrOutput {
	return o.ToConnectionProfileAlloydbSettingsPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileAlloydbSettingsOutput) ToConnectionProfileAlloydbSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileAlloydbSettings) *ConnectionProfileAlloydbSettings {
		return &v
	}).(ConnectionProfileAlloydbSettingsPtrOutput)
}

// Required. Input only. Initial user to setup during cluster creation.
// Structure is documented below.
func (o ConnectionProfileAlloydbSettingsOutput) InitialUser() ConnectionProfileAlloydbSettingsInitialUserOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettings) ConnectionProfileAlloydbSettingsInitialUser {
		return v.InitialUser
	}).(ConnectionProfileAlloydbSettingsInitialUserOutput)
}

// Labels for the AlloyDB cluster created by DMS.
func (o ConnectionProfileAlloydbSettingsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettings) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Settings for the cluster's primary instance
// Structure is documented below.
func (o ConnectionProfileAlloydbSettingsOutput) PrimaryInstanceSettings() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettings) *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings {
		return v.PrimaryInstanceSettings
	}).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput)
}

// Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster.
// It is specified in the form: 'projects/{project_number}/global/networks/{network_id}'. This is required to create a cluster.
func (o ConnectionProfileAlloydbSettingsOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettings) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type ConnectionProfileAlloydbSettingsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydbSettings)(nil)).Elem()
}

func (o ConnectionProfileAlloydbSettingsPtrOutput) ToConnectionProfileAlloydbSettingsPtrOutput() ConnectionProfileAlloydbSettingsPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPtrOutput) ToConnectionProfileAlloydbSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPtrOutput) Elem() ConnectionProfileAlloydbSettingsOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettings) ConnectionProfileAlloydbSettings {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileAlloydbSettings
		return ret
	}).(ConnectionProfileAlloydbSettingsOutput)
}

// Required. Input only. Initial user to setup during cluster creation.
// Structure is documented below.
func (o ConnectionProfileAlloydbSettingsPtrOutput) InitialUser() ConnectionProfileAlloydbSettingsInitialUserPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettings) *ConnectionProfileAlloydbSettingsInitialUser {
		if v == nil {
			return nil
		}
		return &v.InitialUser
	}).(ConnectionProfileAlloydbSettingsInitialUserPtrOutput)
}

// Labels for the AlloyDB cluster created by DMS.
func (o ConnectionProfileAlloydbSettingsPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Settings for the cluster's primary instance
// Structure is documented below.
func (o ConnectionProfileAlloydbSettingsPtrOutput) PrimaryInstanceSettings() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettings) *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings {
		if v == nil {
			return nil
		}
		return v.PrimaryInstanceSettings
	}).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput)
}

// Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster.
// It is specified in the form: 'projects/{project_number}/global/networks/{network_id}'. This is required to create a cluster.
func (o ConnectionProfileAlloydbSettingsPtrOutput) VpcNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettings) *string {
		if v == nil {
			return nil
		}
		return &v.VpcNetwork
	}).(pulumi.StringPtrOutput)
}

type ConnectionProfileAlloydbSettingsInitialUser struct {
	// The initial password for the user.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password string `pulumi:"password"`
	// (Output)
	// Output only. Indicates if the initialUser.password field has been set.
	PasswordSet *bool `pulumi:"passwordSet"`
	// The database username.
	User string `pulumi:"user"`
}

// ConnectionProfileAlloydbSettingsInitialUserInput is an input type that accepts ConnectionProfileAlloydbSettingsInitialUserArgs and ConnectionProfileAlloydbSettingsInitialUserOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbSettingsInitialUserInput` via:
//
//	ConnectionProfileAlloydbSettingsInitialUserArgs{...}
type ConnectionProfileAlloydbSettingsInitialUserInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbSettingsInitialUserOutput() ConnectionProfileAlloydbSettingsInitialUserOutput
	ToConnectionProfileAlloydbSettingsInitialUserOutputWithContext(context.Context) ConnectionProfileAlloydbSettingsInitialUserOutput
}

type ConnectionProfileAlloydbSettingsInitialUserArgs struct {
	// The initial password for the user.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password pulumi.StringInput `pulumi:"password"`
	// (Output)
	// Output only. Indicates if the initialUser.password field has been set.
	PasswordSet pulumi.BoolPtrInput `pulumi:"passwordSet"`
	// The database username.
	User pulumi.StringInput `pulumi:"user"`
}

func (ConnectionProfileAlloydbSettingsInitialUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydbSettingsInitialUser)(nil)).Elem()
}

func (i ConnectionProfileAlloydbSettingsInitialUserArgs) ToConnectionProfileAlloydbSettingsInitialUserOutput() ConnectionProfileAlloydbSettingsInitialUserOutput {
	return i.ToConnectionProfileAlloydbSettingsInitialUserOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbSettingsInitialUserArgs) ToConnectionProfileAlloydbSettingsInitialUserOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsInitialUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsInitialUserOutput)
}

func (i ConnectionProfileAlloydbSettingsInitialUserArgs) ToConnectionProfileAlloydbSettingsInitialUserPtrOutput() ConnectionProfileAlloydbSettingsInitialUserPtrOutput {
	return i.ToConnectionProfileAlloydbSettingsInitialUserPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbSettingsInitialUserArgs) ToConnectionProfileAlloydbSettingsInitialUserPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsInitialUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsInitialUserOutput).ToConnectionProfileAlloydbSettingsInitialUserPtrOutputWithContext(ctx)
}

// ConnectionProfileAlloydbSettingsInitialUserPtrInput is an input type that accepts ConnectionProfileAlloydbSettingsInitialUserArgs, ConnectionProfileAlloydbSettingsInitialUserPtr and ConnectionProfileAlloydbSettingsInitialUserPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbSettingsInitialUserPtrInput` via:
//
//	        ConnectionProfileAlloydbSettingsInitialUserArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileAlloydbSettingsInitialUserPtrInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbSettingsInitialUserPtrOutput() ConnectionProfileAlloydbSettingsInitialUserPtrOutput
	ToConnectionProfileAlloydbSettingsInitialUserPtrOutputWithContext(context.Context) ConnectionProfileAlloydbSettingsInitialUserPtrOutput
}

type connectionProfileAlloydbSettingsInitialUserPtrType ConnectionProfileAlloydbSettingsInitialUserArgs

func ConnectionProfileAlloydbSettingsInitialUserPtr(v *ConnectionProfileAlloydbSettingsInitialUserArgs) ConnectionProfileAlloydbSettingsInitialUserPtrInput {
	return (*connectionProfileAlloydbSettingsInitialUserPtrType)(v)
}

func (*connectionProfileAlloydbSettingsInitialUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydbSettingsInitialUser)(nil)).Elem()
}

func (i *connectionProfileAlloydbSettingsInitialUserPtrType) ToConnectionProfileAlloydbSettingsInitialUserPtrOutput() ConnectionProfileAlloydbSettingsInitialUserPtrOutput {
	return i.ToConnectionProfileAlloydbSettingsInitialUserPtrOutputWithContext(context.Background())
}

func (i *connectionProfileAlloydbSettingsInitialUserPtrType) ToConnectionProfileAlloydbSettingsInitialUserPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsInitialUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsInitialUserPtrOutput)
}

type ConnectionProfileAlloydbSettingsInitialUserOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbSettingsInitialUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydbSettingsInitialUser)(nil)).Elem()
}

func (o ConnectionProfileAlloydbSettingsInitialUserOutput) ToConnectionProfileAlloydbSettingsInitialUserOutput() ConnectionProfileAlloydbSettingsInitialUserOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsInitialUserOutput) ToConnectionProfileAlloydbSettingsInitialUserOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsInitialUserOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsInitialUserOutput) ToConnectionProfileAlloydbSettingsInitialUserPtrOutput() ConnectionProfileAlloydbSettingsInitialUserPtrOutput {
	return o.ToConnectionProfileAlloydbSettingsInitialUserPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileAlloydbSettingsInitialUserOutput) ToConnectionProfileAlloydbSettingsInitialUserPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsInitialUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileAlloydbSettingsInitialUser) *ConnectionProfileAlloydbSettingsInitialUser {
		return &v
	}).(ConnectionProfileAlloydbSettingsInitialUserPtrOutput)
}

// The initial password for the user.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileAlloydbSettingsInitialUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettingsInitialUser) string { return v.Password }).(pulumi.StringOutput)
}

// (Output)
// Output only. Indicates if the initialUser.password field has been set.
func (o ConnectionProfileAlloydbSettingsInitialUserOutput) PasswordSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettingsInitialUser) *bool { return v.PasswordSet }).(pulumi.BoolPtrOutput)
}

// The database username.
func (o ConnectionProfileAlloydbSettingsInitialUserOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettingsInitialUser) string { return v.User }).(pulumi.StringOutput)
}

type ConnectionProfileAlloydbSettingsInitialUserPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbSettingsInitialUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydbSettingsInitialUser)(nil)).Elem()
}

func (o ConnectionProfileAlloydbSettingsInitialUserPtrOutput) ToConnectionProfileAlloydbSettingsInitialUserPtrOutput() ConnectionProfileAlloydbSettingsInitialUserPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsInitialUserPtrOutput) ToConnectionProfileAlloydbSettingsInitialUserPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsInitialUserPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsInitialUserPtrOutput) Elem() ConnectionProfileAlloydbSettingsInitialUserOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsInitialUser) ConnectionProfileAlloydbSettingsInitialUser {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileAlloydbSettingsInitialUser
		return ret
	}).(ConnectionProfileAlloydbSettingsInitialUserOutput)
}

// The initial password for the user.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileAlloydbSettingsInitialUserPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsInitialUser) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Indicates if the initialUser.password field has been set.
func (o ConnectionProfileAlloydbSettingsInitialUserPtrOutput) PasswordSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsInitialUser) *bool {
		if v == nil {
			return nil
		}
		return v.PasswordSet
	}).(pulumi.BoolPtrOutput)
}

// The database username.
func (o ConnectionProfileAlloydbSettingsInitialUserPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsInitialUser) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

type ConnectionProfileAlloydbSettingsPrimaryInstanceSettings struct {
	// Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.
	DatabaseFlags map[string]string `pulumi:"databaseFlags"`
	// The database username.
	Id string `pulumi:"id"`
	// Labels for the AlloyDB primary instance created by DMS.
	Labels map[string]string `pulumi:"labels"`
	// Configuration for the machines that host the underlying database engine.
	// Structure is documented below.
	MachineConfig ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig `pulumi:"machineConfig"`
	// (Output)
	// Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application.
	PrivateIp *string `pulumi:"privateIp"`
}

// ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsInput is an input type that accepts ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs and ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsInput` via:
//
//	ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs{...}
type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput
	ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutputWithContext(context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput
}

type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs struct {
	// Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.
	DatabaseFlags pulumi.StringMapInput `pulumi:"databaseFlags"`
	// The database username.
	Id pulumi.StringInput `pulumi:"id"`
	// Labels for the AlloyDB primary instance created by DMS.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Configuration for the machines that host the underlying database engine.
	// Structure is documented below.
	MachineConfig ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigInput `pulumi:"machineConfig"`
	// (Output)
	// Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
}

func (ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydbSettingsPrimaryInstanceSettings)(nil)).Elem()
}

func (i ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput {
	return i.ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput)
}

func (i ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return i.ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput).ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutputWithContext(ctx)
}

// ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrInput is an input type that accepts ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs, ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtr and ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrInput` via:
//
//	        ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput
	ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutputWithContext(context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput
}

type connectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrType ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs

func ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtr(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrInput {
	return (*connectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrType)(v)
}

func (*connectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydbSettingsPrimaryInstanceSettings)(nil)).Elem()
}

func (i *connectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrType) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return i.ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i *connectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrType) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput)
}

type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydbSettingsPrimaryInstanceSettings)(nil)).Elem()
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return o.ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings {
		return &v
	}).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput)
}

// Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) DatabaseFlags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) map[string]string {
		return v.DatabaseFlags
	}).(pulumi.StringMapOutput)
}

// The database username.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) string { return v.Id }).(pulumi.StringOutput)
}

// Labels for the AlloyDB primary instance created by DMS.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Configuration for the machines that host the underlying database engine.
// Structure is documented below.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) MachineConfig() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig {
		return v.MachineConfig
	}).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput)
}

// (Output)
// Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydbSettingsPrimaryInstanceSettings)(nil)).Elem()
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput) Elem() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) ConnectionProfileAlloydbSettingsPrimaryInstanceSettings {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileAlloydbSettingsPrimaryInstanceSettings
		return ret
	}).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput)
}

// Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput) DatabaseFlags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.DatabaseFlags
	}).(pulumi.StringMapOutput)
}

// The database username.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Labels for the AlloyDB primary instance created by DMS.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Configuration for the machines that host the underlying database engine.
// Structure is documented below.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput) MachineConfig() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) *ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig {
		if v == nil {
			return nil
		}
		return &v.MachineConfig
	}).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput)
}

// (Output)
// Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettings) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIp
	}).(pulumi.StringPtrOutput)
}

type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig struct {
	// The number of CPU's in the VM instance.
	CpuCount int `pulumi:"cpuCount"`
}

// ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigInput is an input type that accepts ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs and ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigInput` via:
//
//	ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs{...}
type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput
	ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutputWithContext(context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput
}

type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs struct {
	// The number of CPU's in the VM instance.
	CpuCount pulumi.IntInput `pulumi:"cpuCount"`
}

func (ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig)(nil)).Elem()
}

func (i ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput {
	return i.ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput)
}

func (i ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput {
	return i.ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput).ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutputWithContext(ctx)
}

// ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrInput is an input type that accepts ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs, ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtr and ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrInput` via:
//
//	        ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrInput interface {
	pulumi.Input

	ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput
	ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutputWithContext(context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput
}

type connectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrType ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs

func ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtr(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrInput {
	return (*connectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrType)(v)
}

func (*connectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig)(nil)).Elem()
}

func (i *connectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrType) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput {
	return i.ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutputWithContext(context.Background())
}

func (i *connectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrType) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput)
}

type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig)(nil)).Elem()
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput {
	return o.ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig) *ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig {
		return &v
	}).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput)
}

// The number of CPU's in the VM instance.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig) int { return v.CpuCount }).(pulumi.IntOutput)
}

type ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig)(nil)).Elem()
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput) ToConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutputWithContext(ctx context.Context) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput {
	return o
}

func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput) Elem() ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig) ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig
		return ret
	}).(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput)
}

// The number of CPU's in the VM instance.
func (o ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfig) *int {
		if v == nil {
			return nil
		}
		return &v.CpuCount
	}).(pulumi.IntPtrOutput)
}

type ConnectionProfileCloudsql struct {
	// (Output)
	// Output only. The Cloud SQL instance ID that this connection profile is associated with.
	CloudSqlId *string `pulumi:"cloudSqlId"`
	// (Output)
	// Output only. The Cloud SQL database instance's private IP.
	PrivateIp *string `pulumi:"privateIp"`
	// (Output)
	// Output only. The Cloud SQL database instance's public IP.
	PublicIp *string `pulumi:"publicIp"`
	// Immutable. Metadata used to create the destination Cloud SQL database.
	// Structure is documented below.
	Settings *ConnectionProfileCloudsqlSettings `pulumi:"settings"`
}

// ConnectionProfileCloudsqlInput is an input type that accepts ConnectionProfileCloudsqlArgs and ConnectionProfileCloudsqlOutput values.
// You can construct a concrete instance of `ConnectionProfileCloudsqlInput` via:
//
//	ConnectionProfileCloudsqlArgs{...}
type ConnectionProfileCloudsqlInput interface {
	pulumi.Input

	ToConnectionProfileCloudsqlOutput() ConnectionProfileCloudsqlOutput
	ToConnectionProfileCloudsqlOutputWithContext(context.Context) ConnectionProfileCloudsqlOutput
}

type ConnectionProfileCloudsqlArgs struct {
	// (Output)
	// Output only. The Cloud SQL instance ID that this connection profile is associated with.
	CloudSqlId pulumi.StringPtrInput `pulumi:"cloudSqlId"`
	// (Output)
	// Output only. The Cloud SQL database instance's private IP.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// (Output)
	// Output only. The Cloud SQL database instance's public IP.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// Immutable. Metadata used to create the destination Cloud SQL database.
	// Structure is documented below.
	Settings ConnectionProfileCloudsqlSettingsPtrInput `pulumi:"settings"`
}

func (ConnectionProfileCloudsqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileCloudsql)(nil)).Elem()
}

func (i ConnectionProfileCloudsqlArgs) ToConnectionProfileCloudsqlOutput() ConnectionProfileCloudsqlOutput {
	return i.ToConnectionProfileCloudsqlOutputWithContext(context.Background())
}

func (i ConnectionProfileCloudsqlArgs) ToConnectionProfileCloudsqlOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlOutput)
}

func (i ConnectionProfileCloudsqlArgs) ToConnectionProfileCloudsqlPtrOutput() ConnectionProfileCloudsqlPtrOutput {
	return i.ToConnectionProfileCloudsqlPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileCloudsqlArgs) ToConnectionProfileCloudsqlPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlOutput).ToConnectionProfileCloudsqlPtrOutputWithContext(ctx)
}

// ConnectionProfileCloudsqlPtrInput is an input type that accepts ConnectionProfileCloudsqlArgs, ConnectionProfileCloudsqlPtr and ConnectionProfileCloudsqlPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileCloudsqlPtrInput` via:
//
//	        ConnectionProfileCloudsqlArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileCloudsqlPtrInput interface {
	pulumi.Input

	ToConnectionProfileCloudsqlPtrOutput() ConnectionProfileCloudsqlPtrOutput
	ToConnectionProfileCloudsqlPtrOutputWithContext(context.Context) ConnectionProfileCloudsqlPtrOutput
}

type connectionProfileCloudsqlPtrType ConnectionProfileCloudsqlArgs

func ConnectionProfileCloudsqlPtr(v *ConnectionProfileCloudsqlArgs) ConnectionProfileCloudsqlPtrInput {
	return (*connectionProfileCloudsqlPtrType)(v)
}

func (*connectionProfileCloudsqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileCloudsql)(nil)).Elem()
}

func (i *connectionProfileCloudsqlPtrType) ToConnectionProfileCloudsqlPtrOutput() ConnectionProfileCloudsqlPtrOutput {
	return i.ToConnectionProfileCloudsqlPtrOutputWithContext(context.Background())
}

func (i *connectionProfileCloudsqlPtrType) ToConnectionProfileCloudsqlPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlPtrOutput)
}

type ConnectionProfileCloudsqlOutput struct{ *pulumi.OutputState }

func (ConnectionProfileCloudsqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileCloudsql)(nil)).Elem()
}

func (o ConnectionProfileCloudsqlOutput) ToConnectionProfileCloudsqlOutput() ConnectionProfileCloudsqlOutput {
	return o
}

func (o ConnectionProfileCloudsqlOutput) ToConnectionProfileCloudsqlOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlOutput {
	return o
}

func (o ConnectionProfileCloudsqlOutput) ToConnectionProfileCloudsqlPtrOutput() ConnectionProfileCloudsqlPtrOutput {
	return o.ToConnectionProfileCloudsqlPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileCloudsqlOutput) ToConnectionProfileCloudsqlPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileCloudsql) *ConnectionProfileCloudsql {
		return &v
	}).(ConnectionProfileCloudsqlPtrOutput)
}

// (Output)
// Output only. The Cloud SQL instance ID that this connection profile is associated with.
func (o ConnectionProfileCloudsqlOutput) CloudSqlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsql) *string { return v.CloudSqlId }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The Cloud SQL database instance's private IP.
func (o ConnectionProfileCloudsqlOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsql) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The Cloud SQL database instance's public IP.
func (o ConnectionProfileCloudsqlOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsql) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// Immutable. Metadata used to create the destination Cloud SQL database.
// Structure is documented below.
func (o ConnectionProfileCloudsqlOutput) Settings() ConnectionProfileCloudsqlSettingsPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsql) *ConnectionProfileCloudsqlSettings { return v.Settings }).(ConnectionProfileCloudsqlSettingsPtrOutput)
}

type ConnectionProfileCloudsqlPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileCloudsqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileCloudsql)(nil)).Elem()
}

func (o ConnectionProfileCloudsqlPtrOutput) ToConnectionProfileCloudsqlPtrOutput() ConnectionProfileCloudsqlPtrOutput {
	return o
}

func (o ConnectionProfileCloudsqlPtrOutput) ToConnectionProfileCloudsqlPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlPtrOutput {
	return o
}

func (o ConnectionProfileCloudsqlPtrOutput) Elem() ConnectionProfileCloudsqlOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsql) ConnectionProfileCloudsql {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileCloudsql
		return ret
	}).(ConnectionProfileCloudsqlOutput)
}

// (Output)
// Output only. The Cloud SQL instance ID that this connection profile is associated with.
func (o ConnectionProfileCloudsqlPtrOutput) CloudSqlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsql) *string {
		if v == nil {
			return nil
		}
		return v.CloudSqlId
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The Cloud SQL database instance's private IP.
func (o ConnectionProfileCloudsqlPtrOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsql) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIp
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The Cloud SQL database instance's public IP.
func (o ConnectionProfileCloudsqlPtrOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsql) *string {
		if v == nil {
			return nil
		}
		return v.PublicIp
	}).(pulumi.StringPtrOutput)
}

// Immutable. Metadata used to create the destination Cloud SQL database.
// Structure is documented below.
func (o ConnectionProfileCloudsqlPtrOutput) Settings() ConnectionProfileCloudsqlSettingsPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsql) *ConnectionProfileCloudsqlSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(ConnectionProfileCloudsqlSettingsPtrOutput)
}

type ConnectionProfileCloudsqlSettings struct {
	// The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'.
	// Possible values are: `ALWAYS`, `NEVER`.
	ActivationPolicy *string `pulumi:"activationPolicy"`
	// If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity.
	// If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.
	AutoStorageIncrease *bool `pulumi:"autoStorageIncrease"`
	// The KMS key name used for the csql instance.
	CmekKeyName *string `pulumi:"cmekKeyName"`
	// The Cloud SQL default instance level collation.
	Collation *string `pulumi:"collation"`
	// The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.
	DataDiskSizeGb *string `pulumi:"dataDiskSizeGb"`
	// The type of storage.
	// Possible values are: `PD_SSD`, `PD_HDD`.
	DataDiskType *string `pulumi:"dataDiskType"`
	// The database flags passed to the Cloud SQL instance at startup.
	DatabaseFlags map[string]string `pulumi:"databaseFlags"`
	// The database engine type and version.
	// Currently supported values located at https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles#sqldatabaseversion
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled.
	// Structure is documented below.
	IpConfig *ConnectionProfileCloudsqlSettingsIpConfig `pulumi:"ipConfig"`
	// Input only. Initial root password.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	RootPassword *string `pulumi:"rootPassword"`
	// (Output)
	// Output only. Indicates If this connection profile root password is stored.
	RootPasswordSet *bool `pulumi:"rootPasswordSet"`
	// The Database Migration Service source connection profile ID, in the format: projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID
	SourceId string `pulumi:"sourceId"`
	// The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
	StorageAutoResizeLimit *string `pulumi:"storageAutoResizeLimit"`
	// The tier (or machine type) for this instance, for example: db-n1-standard-1 (MySQL instances) or db-custom-1-3840 (PostgreSQL instances).
	// For more information, see https://cloud.google.com/sql/docs/mysql/instance-settings
	Tier *string `pulumi:"tier"`
	// The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs.
	UserLabels map[string]string `pulumi:"userLabels"`
	// The Google Cloud Platform zone where your Cloud SQL datdabse instance is located.
	Zone *string `pulumi:"zone"`
}

// ConnectionProfileCloudsqlSettingsInput is an input type that accepts ConnectionProfileCloudsqlSettingsArgs and ConnectionProfileCloudsqlSettingsOutput values.
// You can construct a concrete instance of `ConnectionProfileCloudsqlSettingsInput` via:
//
//	ConnectionProfileCloudsqlSettingsArgs{...}
type ConnectionProfileCloudsqlSettingsInput interface {
	pulumi.Input

	ToConnectionProfileCloudsqlSettingsOutput() ConnectionProfileCloudsqlSettingsOutput
	ToConnectionProfileCloudsqlSettingsOutputWithContext(context.Context) ConnectionProfileCloudsqlSettingsOutput
}

type ConnectionProfileCloudsqlSettingsArgs struct {
	// The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'.
	// Possible values are: `ALWAYS`, `NEVER`.
	ActivationPolicy pulumi.StringPtrInput `pulumi:"activationPolicy"`
	// If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity.
	// If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.
	AutoStorageIncrease pulumi.BoolPtrInput `pulumi:"autoStorageIncrease"`
	// The KMS key name used for the csql instance.
	CmekKeyName pulumi.StringPtrInput `pulumi:"cmekKeyName"`
	// The Cloud SQL default instance level collation.
	Collation pulumi.StringPtrInput `pulumi:"collation"`
	// The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.
	DataDiskSizeGb pulumi.StringPtrInput `pulumi:"dataDiskSizeGb"`
	// The type of storage.
	// Possible values are: `PD_SSD`, `PD_HDD`.
	DataDiskType pulumi.StringPtrInput `pulumi:"dataDiskType"`
	// The database flags passed to the Cloud SQL instance at startup.
	DatabaseFlags pulumi.StringMapInput `pulumi:"databaseFlags"`
	// The database engine type and version.
	// Currently supported values located at https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles#sqldatabaseversion
	DatabaseVersion pulumi.StringPtrInput `pulumi:"databaseVersion"`
	// The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled.
	// Structure is documented below.
	IpConfig ConnectionProfileCloudsqlSettingsIpConfigPtrInput `pulumi:"ipConfig"`
	// Input only. Initial root password.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	RootPassword pulumi.StringPtrInput `pulumi:"rootPassword"`
	// (Output)
	// Output only. Indicates If this connection profile root password is stored.
	RootPasswordSet pulumi.BoolPtrInput `pulumi:"rootPasswordSet"`
	// The Database Migration Service source connection profile ID, in the format: projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID
	SourceId pulumi.StringInput `pulumi:"sourceId"`
	// The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
	StorageAutoResizeLimit pulumi.StringPtrInput `pulumi:"storageAutoResizeLimit"`
	// The tier (or machine type) for this instance, for example: db-n1-standard-1 (MySQL instances) or db-custom-1-3840 (PostgreSQL instances).
	// For more information, see https://cloud.google.com/sql/docs/mysql/instance-settings
	Tier pulumi.StringPtrInput `pulumi:"tier"`
	// The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs.
	UserLabels pulumi.StringMapInput `pulumi:"userLabels"`
	// The Google Cloud Platform zone where your Cloud SQL datdabse instance is located.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (ConnectionProfileCloudsqlSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileCloudsqlSettings)(nil)).Elem()
}

func (i ConnectionProfileCloudsqlSettingsArgs) ToConnectionProfileCloudsqlSettingsOutput() ConnectionProfileCloudsqlSettingsOutput {
	return i.ToConnectionProfileCloudsqlSettingsOutputWithContext(context.Background())
}

func (i ConnectionProfileCloudsqlSettingsArgs) ToConnectionProfileCloudsqlSettingsOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlSettingsOutput)
}

func (i ConnectionProfileCloudsqlSettingsArgs) ToConnectionProfileCloudsqlSettingsPtrOutput() ConnectionProfileCloudsqlSettingsPtrOutput {
	return i.ToConnectionProfileCloudsqlSettingsPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileCloudsqlSettingsArgs) ToConnectionProfileCloudsqlSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlSettingsOutput).ToConnectionProfileCloudsqlSettingsPtrOutputWithContext(ctx)
}

// ConnectionProfileCloudsqlSettingsPtrInput is an input type that accepts ConnectionProfileCloudsqlSettingsArgs, ConnectionProfileCloudsqlSettingsPtr and ConnectionProfileCloudsqlSettingsPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileCloudsqlSettingsPtrInput` via:
//
//	        ConnectionProfileCloudsqlSettingsArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileCloudsqlSettingsPtrInput interface {
	pulumi.Input

	ToConnectionProfileCloudsqlSettingsPtrOutput() ConnectionProfileCloudsqlSettingsPtrOutput
	ToConnectionProfileCloudsqlSettingsPtrOutputWithContext(context.Context) ConnectionProfileCloudsqlSettingsPtrOutput
}

type connectionProfileCloudsqlSettingsPtrType ConnectionProfileCloudsqlSettingsArgs

func ConnectionProfileCloudsqlSettingsPtr(v *ConnectionProfileCloudsqlSettingsArgs) ConnectionProfileCloudsqlSettingsPtrInput {
	return (*connectionProfileCloudsqlSettingsPtrType)(v)
}

func (*connectionProfileCloudsqlSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileCloudsqlSettings)(nil)).Elem()
}

func (i *connectionProfileCloudsqlSettingsPtrType) ToConnectionProfileCloudsqlSettingsPtrOutput() ConnectionProfileCloudsqlSettingsPtrOutput {
	return i.ToConnectionProfileCloudsqlSettingsPtrOutputWithContext(context.Background())
}

func (i *connectionProfileCloudsqlSettingsPtrType) ToConnectionProfileCloudsqlSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlSettingsPtrOutput)
}

type ConnectionProfileCloudsqlSettingsOutput struct{ *pulumi.OutputState }

func (ConnectionProfileCloudsqlSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileCloudsqlSettings)(nil)).Elem()
}

func (o ConnectionProfileCloudsqlSettingsOutput) ToConnectionProfileCloudsqlSettingsOutput() ConnectionProfileCloudsqlSettingsOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsOutput) ToConnectionProfileCloudsqlSettingsOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsOutput) ToConnectionProfileCloudsqlSettingsPtrOutput() ConnectionProfileCloudsqlSettingsPtrOutput {
	return o.ToConnectionProfileCloudsqlSettingsPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileCloudsqlSettingsOutput) ToConnectionProfileCloudsqlSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileCloudsqlSettings) *ConnectionProfileCloudsqlSettings {
		return &v
	}).(ConnectionProfileCloudsqlSettingsPtrOutput)
}

// The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'.
// Possible values are: `ALWAYS`, `NEVER`.
func (o ConnectionProfileCloudsqlSettingsOutput) ActivationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.ActivationPolicy }).(pulumi.StringPtrOutput)
}

// If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity.
// If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.
func (o ConnectionProfileCloudsqlSettingsOutput) AutoStorageIncrease() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *bool { return v.AutoStorageIncrease }).(pulumi.BoolPtrOutput)
}

// The KMS key name used for the csql instance.
func (o ConnectionProfileCloudsqlSettingsOutput) CmekKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.CmekKeyName }).(pulumi.StringPtrOutput)
}

// The Cloud SQL default instance level collation.
func (o ConnectionProfileCloudsqlSettingsOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.Collation }).(pulumi.StringPtrOutput)
}

// The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.
func (o ConnectionProfileCloudsqlSettingsOutput) DataDiskSizeGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.DataDiskSizeGb }).(pulumi.StringPtrOutput)
}

// The type of storage.
// Possible values are: `PD_SSD`, `PD_HDD`.
func (o ConnectionProfileCloudsqlSettingsOutput) DataDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.DataDiskType }).(pulumi.StringPtrOutput)
}

// The database flags passed to the Cloud SQL instance at startup.
func (o ConnectionProfileCloudsqlSettingsOutput) DatabaseFlags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) map[string]string { return v.DatabaseFlags }).(pulumi.StringMapOutput)
}

// The database engine type and version.
// Currently supported values located at https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles#sqldatabaseversion
func (o ConnectionProfileCloudsqlSettingsOutput) DatabaseVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.DatabaseVersion }).(pulumi.StringPtrOutput)
}

// The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled.
// Structure is documented below.
func (o ConnectionProfileCloudsqlSettingsOutput) IpConfig() ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *ConnectionProfileCloudsqlSettingsIpConfig {
		return v.IpConfig
	}).(ConnectionProfileCloudsqlSettingsIpConfigPtrOutput)
}

// Input only. Initial root password.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileCloudsqlSettingsOutput) RootPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.RootPassword }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Indicates If this connection profile root password is stored.
func (o ConnectionProfileCloudsqlSettingsOutput) RootPasswordSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *bool { return v.RootPasswordSet }).(pulumi.BoolPtrOutput)
}

// The Database Migration Service source connection profile ID, in the format: projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID
func (o ConnectionProfileCloudsqlSettingsOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) string { return v.SourceId }).(pulumi.StringOutput)
}

// The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
func (o ConnectionProfileCloudsqlSettingsOutput) StorageAutoResizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.StorageAutoResizeLimit }).(pulumi.StringPtrOutput)
}

// The tier (or machine type) for this instance, for example: db-n1-standard-1 (MySQL instances) or db-custom-1-3840 (PostgreSQL instances).
// For more information, see https://cloud.google.com/sql/docs/mysql/instance-settings
func (o ConnectionProfileCloudsqlSettingsOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs.
func (o ConnectionProfileCloudsqlSettingsOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) map[string]string { return v.UserLabels }).(pulumi.StringMapOutput)
}

// The Google Cloud Platform zone where your Cloud SQL datdabse instance is located.
func (o ConnectionProfileCloudsqlSettingsOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettings) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ConnectionProfileCloudsqlSettingsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileCloudsqlSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileCloudsqlSettings)(nil)).Elem()
}

func (o ConnectionProfileCloudsqlSettingsPtrOutput) ToConnectionProfileCloudsqlSettingsPtrOutput() ConnectionProfileCloudsqlSettingsPtrOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsPtrOutput) ToConnectionProfileCloudsqlSettingsPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsPtrOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsPtrOutput) Elem() ConnectionProfileCloudsqlSettingsOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) ConnectionProfileCloudsqlSettings {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileCloudsqlSettings
		return ret
	}).(ConnectionProfileCloudsqlSettingsOutput)
}

// The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'.
// Possible values are: `ALWAYS`, `NEVER`.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) ActivationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.ActivationPolicy
	}).(pulumi.StringPtrOutput)
}

// If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity.
// If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) AutoStorageIncrease() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *bool {
		if v == nil {
			return nil
		}
		return v.AutoStorageIncrease
	}).(pulumi.BoolPtrOutput)
}

// The KMS key name used for the csql instance.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) CmekKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.CmekKeyName
	}).(pulumi.StringPtrOutput)
}

// The Cloud SQL default instance level collation.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.Collation
	}).(pulumi.StringPtrOutput)
}

// The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) DataDiskSizeGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.DataDiskSizeGb
	}).(pulumi.StringPtrOutput)
}

// The type of storage.
// Possible values are: `PD_SSD`, `PD_HDD`.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) DataDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.DataDiskType
	}).(pulumi.StringPtrOutput)
}

// The database flags passed to the Cloud SQL instance at startup.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) DatabaseFlags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.DatabaseFlags
	}).(pulumi.StringMapOutput)
}

// The database engine type and version.
// Currently supported values located at https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles#sqldatabaseversion
func (o ConnectionProfileCloudsqlSettingsPtrOutput) DatabaseVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseVersion
	}).(pulumi.StringPtrOutput)
}

// The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled.
// Structure is documented below.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) IpConfig() ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *ConnectionProfileCloudsqlSettingsIpConfig {
		if v == nil {
			return nil
		}
		return v.IpConfig
	}).(ConnectionProfileCloudsqlSettingsIpConfigPtrOutput)
}

// Input only. Initial root password.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) RootPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.RootPassword
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Indicates If this connection profile root password is stored.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) RootPasswordSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *bool {
		if v == nil {
			return nil
		}
		return v.RootPasswordSet
	}).(pulumi.BoolPtrOutput)
}

// The Database Migration Service source connection profile ID, in the format: projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID
func (o ConnectionProfileCloudsqlSettingsPtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return &v.SourceId
	}).(pulumi.StringPtrOutput)
}

// The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) StorageAutoResizeLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.StorageAutoResizeLimit
	}).(pulumi.StringPtrOutput)
}

// The tier (or machine type) for this instance, for example: db-n1-standard-1 (MySQL instances) or db-custom-1-3840 (PostgreSQL instances).
// For more information, see https://cloud.google.com/sql/docs/mysql/instance-settings
func (o ConnectionProfileCloudsqlSettingsPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserLabels
	}).(pulumi.StringMapOutput)
}

// The Google Cloud Platform zone where your Cloud SQL datdabse instance is located.
func (o ConnectionProfileCloudsqlSettingsPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettings) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ConnectionProfileCloudsqlSettingsIpConfig struct {
	// The list of external networks that are allowed to connect to the instance using the IP.
	// Structure is documented below.
	AuthorizedNetworks []ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork `pulumi:"authorizedNetworks"`
	// Whether the instance should be assigned an IPv4 address or not.
	EnableIpv4 *bool `pulumi:"enableIpv4"`
	// The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork *string `pulumi:"privateNetwork"`
	// Whether SSL connections over IP should be enforced or not.
	RequireSsl *bool `pulumi:"requireSsl"`
}

// ConnectionProfileCloudsqlSettingsIpConfigInput is an input type that accepts ConnectionProfileCloudsqlSettingsIpConfigArgs and ConnectionProfileCloudsqlSettingsIpConfigOutput values.
// You can construct a concrete instance of `ConnectionProfileCloudsqlSettingsIpConfigInput` via:
//
//	ConnectionProfileCloudsqlSettingsIpConfigArgs{...}
type ConnectionProfileCloudsqlSettingsIpConfigInput interface {
	pulumi.Input

	ToConnectionProfileCloudsqlSettingsIpConfigOutput() ConnectionProfileCloudsqlSettingsIpConfigOutput
	ToConnectionProfileCloudsqlSettingsIpConfigOutputWithContext(context.Context) ConnectionProfileCloudsqlSettingsIpConfigOutput
}

type ConnectionProfileCloudsqlSettingsIpConfigArgs struct {
	// The list of external networks that are allowed to connect to the instance using the IP.
	// Structure is documented below.
	AuthorizedNetworks ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayInput `pulumi:"authorizedNetworks"`
	// Whether the instance should be assigned an IPv4 address or not.
	EnableIpv4 pulumi.BoolPtrInput `pulumi:"enableIpv4"`
	// The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork pulumi.StringPtrInput `pulumi:"privateNetwork"`
	// Whether SSL connections over IP should be enforced or not.
	RequireSsl pulumi.BoolPtrInput `pulumi:"requireSsl"`
}

func (ConnectionProfileCloudsqlSettingsIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileCloudsqlSettingsIpConfig)(nil)).Elem()
}

func (i ConnectionProfileCloudsqlSettingsIpConfigArgs) ToConnectionProfileCloudsqlSettingsIpConfigOutput() ConnectionProfileCloudsqlSettingsIpConfigOutput {
	return i.ToConnectionProfileCloudsqlSettingsIpConfigOutputWithContext(context.Background())
}

func (i ConnectionProfileCloudsqlSettingsIpConfigArgs) ToConnectionProfileCloudsqlSettingsIpConfigOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlSettingsIpConfigOutput)
}

func (i ConnectionProfileCloudsqlSettingsIpConfigArgs) ToConnectionProfileCloudsqlSettingsIpConfigPtrOutput() ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return i.ToConnectionProfileCloudsqlSettingsIpConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileCloudsqlSettingsIpConfigArgs) ToConnectionProfileCloudsqlSettingsIpConfigPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlSettingsIpConfigOutput).ToConnectionProfileCloudsqlSettingsIpConfigPtrOutputWithContext(ctx)
}

// ConnectionProfileCloudsqlSettingsIpConfigPtrInput is an input type that accepts ConnectionProfileCloudsqlSettingsIpConfigArgs, ConnectionProfileCloudsqlSettingsIpConfigPtr and ConnectionProfileCloudsqlSettingsIpConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileCloudsqlSettingsIpConfigPtrInput` via:
//
//	        ConnectionProfileCloudsqlSettingsIpConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileCloudsqlSettingsIpConfigPtrInput interface {
	pulumi.Input

	ToConnectionProfileCloudsqlSettingsIpConfigPtrOutput() ConnectionProfileCloudsqlSettingsIpConfigPtrOutput
	ToConnectionProfileCloudsqlSettingsIpConfigPtrOutputWithContext(context.Context) ConnectionProfileCloudsqlSettingsIpConfigPtrOutput
}

type connectionProfileCloudsqlSettingsIpConfigPtrType ConnectionProfileCloudsqlSettingsIpConfigArgs

func ConnectionProfileCloudsqlSettingsIpConfigPtr(v *ConnectionProfileCloudsqlSettingsIpConfigArgs) ConnectionProfileCloudsqlSettingsIpConfigPtrInput {
	return (*connectionProfileCloudsqlSettingsIpConfigPtrType)(v)
}

func (*connectionProfileCloudsqlSettingsIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileCloudsqlSettingsIpConfig)(nil)).Elem()
}

func (i *connectionProfileCloudsqlSettingsIpConfigPtrType) ToConnectionProfileCloudsqlSettingsIpConfigPtrOutput() ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return i.ToConnectionProfileCloudsqlSettingsIpConfigPtrOutputWithContext(context.Background())
}

func (i *connectionProfileCloudsqlSettingsIpConfigPtrType) ToConnectionProfileCloudsqlSettingsIpConfigPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlSettingsIpConfigPtrOutput)
}

type ConnectionProfileCloudsqlSettingsIpConfigOutput struct{ *pulumi.OutputState }

func (ConnectionProfileCloudsqlSettingsIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileCloudsqlSettingsIpConfig)(nil)).Elem()
}

func (o ConnectionProfileCloudsqlSettingsIpConfigOutput) ToConnectionProfileCloudsqlSettingsIpConfigOutput() ConnectionProfileCloudsqlSettingsIpConfigOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsIpConfigOutput) ToConnectionProfileCloudsqlSettingsIpConfigOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsIpConfigOutput) ToConnectionProfileCloudsqlSettingsIpConfigPtrOutput() ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return o.ToConnectionProfileCloudsqlSettingsIpConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileCloudsqlSettingsIpConfigOutput) ToConnectionProfileCloudsqlSettingsIpConfigPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileCloudsqlSettingsIpConfig) *ConnectionProfileCloudsqlSettingsIpConfig {
		return &v
	}).(ConnectionProfileCloudsqlSettingsIpConfigPtrOutput)
}

// The list of external networks that are allowed to connect to the instance using the IP.
// Structure is documented below.
func (o ConnectionProfileCloudsqlSettingsIpConfigOutput) AuthorizedNetworks() ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettingsIpConfig) []ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork {
		return v.AuthorizedNetworks
	}).(ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput)
}

// Whether the instance should be assigned an IPv4 address or not.
func (o ConnectionProfileCloudsqlSettingsIpConfigOutput) EnableIpv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettingsIpConfig) *bool { return v.EnableIpv4 }).(pulumi.BoolPtrOutput)
}

// The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, projects/myProject/global/networks/default.
// This setting can be updated, but it cannot be removed after it is set.
func (o ConnectionProfileCloudsqlSettingsIpConfigOutput) PrivateNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettingsIpConfig) *string { return v.PrivateNetwork }).(pulumi.StringPtrOutput)
}

// Whether SSL connections over IP should be enforced or not.
func (o ConnectionProfileCloudsqlSettingsIpConfigOutput) RequireSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettingsIpConfig) *bool { return v.RequireSsl }).(pulumi.BoolPtrOutput)
}

type ConnectionProfileCloudsqlSettingsIpConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileCloudsqlSettingsIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileCloudsqlSettingsIpConfig)(nil)).Elem()
}

func (o ConnectionProfileCloudsqlSettingsIpConfigPtrOutput) ToConnectionProfileCloudsqlSettingsIpConfigPtrOutput() ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsIpConfigPtrOutput) ToConnectionProfileCloudsqlSettingsIpConfigPtrOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigPtrOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsIpConfigPtrOutput) Elem() ConnectionProfileCloudsqlSettingsIpConfigOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettingsIpConfig) ConnectionProfileCloudsqlSettingsIpConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileCloudsqlSettingsIpConfig
		return ret
	}).(ConnectionProfileCloudsqlSettingsIpConfigOutput)
}

// The list of external networks that are allowed to connect to the instance using the IP.
// Structure is documented below.
func (o ConnectionProfileCloudsqlSettingsIpConfigPtrOutput) AuthorizedNetworks() ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettingsIpConfig) []ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork {
		if v == nil {
			return nil
		}
		return v.AuthorizedNetworks
	}).(ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput)
}

// Whether the instance should be assigned an IPv4 address or not.
func (o ConnectionProfileCloudsqlSettingsIpConfigPtrOutput) EnableIpv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettingsIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIpv4
	}).(pulumi.BoolPtrOutput)
}

// The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, projects/myProject/global/networks/default.
// This setting can be updated, but it cannot be removed after it is set.
func (o ConnectionProfileCloudsqlSettingsIpConfigPtrOutput) PrivateNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettingsIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrivateNetwork
	}).(pulumi.StringPtrOutput)
}

// Whether SSL connections over IP should be enforced or not.
func (o ConnectionProfileCloudsqlSettingsIpConfigPtrOutput) RequireSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileCloudsqlSettingsIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RequireSsl
	}).(pulumi.BoolPtrOutput)
}

type ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork struct {
	// The time when this access control entry expires in RFC 3339 format.
	ExpireTime *string `pulumi:"expireTime"`
	// A label to identify this entry.
	Label *string `pulumi:"label"`
	// Input only. The time-to-leave of this access control entry.
	Ttl *string `pulumi:"ttl"`
	// The allowlisted value for the access control list.
	Value string `pulumi:"value"`
}

// ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkInput is an input type that accepts ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArgs and ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput values.
// You can construct a concrete instance of `ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkInput` via:
//
//	ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArgs{...}
type ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkInput interface {
	pulumi.Input

	ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput() ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput
	ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutputWithContext(context.Context) ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput
}

type ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArgs struct {
	// The time when this access control entry expires in RFC 3339 format.
	ExpireTime pulumi.StringPtrInput `pulumi:"expireTime"`
	// A label to identify this entry.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Input only. The time-to-leave of this access control entry.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
	// The allowlisted value for the access control list.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork)(nil)).Elem()
}

func (i ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArgs) ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput() ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput {
	return i.ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutputWithContext(context.Background())
}

func (i ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArgs) ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput)
}

// ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayInput is an input type that accepts ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArray and ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput values.
// You can construct a concrete instance of `ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayInput` via:
//
//	ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArray{ ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArgs{...} }
type ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayInput interface {
	pulumi.Input

	ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput() ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput
	ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutputWithContext(context.Context) ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput
}

type ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArray []ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkInput

func (ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork)(nil)).Elem()
}

func (i ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArray) ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput() ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput {
	return i.ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutputWithContext(context.Background())
}

func (i ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArray) ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput)
}

type ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput struct{ *pulumi.OutputState }

func (ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork)(nil)).Elem()
}

func (o ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput) ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput() ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput) ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput {
	return o
}

// The time when this access control entry expires in RFC 3339 format.
func (o ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

// A label to identify this entry.
func (o ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Input only. The time-to-leave of this access control entry.
func (o ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork) *string { return v.Ttl }).(pulumi.StringPtrOutput)
}

// The allowlisted value for the access control list.
func (o ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork) string { return v.Value }).(pulumi.StringOutput)
}

type ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput struct{ *pulumi.OutputState }

func (ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork)(nil)).Elem()
}

func (o ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput) ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput() ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput) ToConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutputWithContext(ctx context.Context) ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput {
	return o
}

func (o ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput) Index(i pulumi.IntInput) ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork {
		return vs[0].([]ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetwork)[vs[1].(int)]
	}).(ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput)
}

type ConnectionProfileError struct {
	// (Output)
	// The status code, which should be an enum value of google.rpc.Code.
	Code *int `pulumi:"code"`
	// (Output)
	// A list of messages that carry the error details.
	Details []map[string]interface{} `pulumi:"details"`
	// (Output)
	// Human readable message indicating details about the current status.
	Message *string `pulumi:"message"`
}

// ConnectionProfileErrorInput is an input type that accepts ConnectionProfileErrorArgs and ConnectionProfileErrorOutput values.
// You can construct a concrete instance of `ConnectionProfileErrorInput` via:
//
//	ConnectionProfileErrorArgs{...}
type ConnectionProfileErrorInput interface {
	pulumi.Input

	ToConnectionProfileErrorOutput() ConnectionProfileErrorOutput
	ToConnectionProfileErrorOutputWithContext(context.Context) ConnectionProfileErrorOutput
}

type ConnectionProfileErrorArgs struct {
	// (Output)
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// (Output)
	// A list of messages that carry the error details.
	Details pulumi.MapArrayInput `pulumi:"details"`
	// (Output)
	// Human readable message indicating details about the current status.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (ConnectionProfileErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileError)(nil)).Elem()
}

func (i ConnectionProfileErrorArgs) ToConnectionProfileErrorOutput() ConnectionProfileErrorOutput {
	return i.ToConnectionProfileErrorOutputWithContext(context.Background())
}

func (i ConnectionProfileErrorArgs) ToConnectionProfileErrorOutputWithContext(ctx context.Context) ConnectionProfileErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileErrorOutput)
}

// ConnectionProfileErrorArrayInput is an input type that accepts ConnectionProfileErrorArray and ConnectionProfileErrorArrayOutput values.
// You can construct a concrete instance of `ConnectionProfileErrorArrayInput` via:
//
//	ConnectionProfileErrorArray{ ConnectionProfileErrorArgs{...} }
type ConnectionProfileErrorArrayInput interface {
	pulumi.Input

	ToConnectionProfileErrorArrayOutput() ConnectionProfileErrorArrayOutput
	ToConnectionProfileErrorArrayOutputWithContext(context.Context) ConnectionProfileErrorArrayOutput
}

type ConnectionProfileErrorArray []ConnectionProfileErrorInput

func (ConnectionProfileErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionProfileError)(nil)).Elem()
}

func (i ConnectionProfileErrorArray) ToConnectionProfileErrorArrayOutput() ConnectionProfileErrorArrayOutput {
	return i.ToConnectionProfileErrorArrayOutputWithContext(context.Background())
}

func (i ConnectionProfileErrorArray) ToConnectionProfileErrorArrayOutputWithContext(ctx context.Context) ConnectionProfileErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileErrorArrayOutput)
}

type ConnectionProfileErrorOutput struct{ *pulumi.OutputState }

func (ConnectionProfileErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileError)(nil)).Elem()
}

func (o ConnectionProfileErrorOutput) ToConnectionProfileErrorOutput() ConnectionProfileErrorOutput {
	return o
}

func (o ConnectionProfileErrorOutput) ToConnectionProfileErrorOutputWithContext(ctx context.Context) ConnectionProfileErrorOutput {
	return o
}

// (Output)
// The status code, which should be an enum value of google.rpc.Code.
func (o ConnectionProfileErrorOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionProfileError) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// (Output)
// A list of messages that carry the error details.
func (o ConnectionProfileErrorOutput) Details() pulumi.MapArrayOutput {
	return o.ApplyT(func(v ConnectionProfileError) []map[string]interface{} { return v.Details }).(pulumi.MapArrayOutput)
}

// (Output)
// Human readable message indicating details about the current status.
func (o ConnectionProfileErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ConnectionProfileErrorArrayOutput struct{ *pulumi.OutputState }

func (ConnectionProfileErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionProfileError)(nil)).Elem()
}

func (o ConnectionProfileErrorArrayOutput) ToConnectionProfileErrorArrayOutput() ConnectionProfileErrorArrayOutput {
	return o
}

func (o ConnectionProfileErrorArrayOutput) ToConnectionProfileErrorArrayOutputWithContext(ctx context.Context) ConnectionProfileErrorArrayOutput {
	return o
}

func (o ConnectionProfileErrorArrayOutput) Index(i pulumi.IntInput) ConnectionProfileErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionProfileError {
		return vs[0].([]ConnectionProfileError)[vs[1].(int)]
	}).(ConnectionProfileErrorOutput)
}

type ConnectionProfileMysql struct {
	// If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
	CloudSqlId *string `pulumi:"cloudSqlId"`
	// Required. The IP or hostname of the source MySQL database.
	Host string `pulumi:"host"`
	// Required. Input only. The password for the user that Database Migration Service will be using to connect to the database.
	// This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password string `pulumi:"password"`
	// (Output)
	// Output only. Indicates If this connection profile password is stored.
	PasswordSet *bool `pulumi:"passwordSet"`
	// Required. The network port of the source MySQL database.
	Port int `pulumi:"port"`
	// SSL configuration for the destination to connect to the source database.
	// Structure is documented below.
	Ssl *ConnectionProfileMysqlSsl `pulumi:"ssl"`
	// Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
	Username string `pulumi:"username"`
}

// ConnectionProfileMysqlInput is an input type that accepts ConnectionProfileMysqlArgs and ConnectionProfileMysqlOutput values.
// You can construct a concrete instance of `ConnectionProfileMysqlInput` via:
//
//	ConnectionProfileMysqlArgs{...}
type ConnectionProfileMysqlInput interface {
	pulumi.Input

	ToConnectionProfileMysqlOutput() ConnectionProfileMysqlOutput
	ToConnectionProfileMysqlOutputWithContext(context.Context) ConnectionProfileMysqlOutput
}

type ConnectionProfileMysqlArgs struct {
	// If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
	CloudSqlId pulumi.StringPtrInput `pulumi:"cloudSqlId"`
	// Required. The IP or hostname of the source MySQL database.
	Host pulumi.StringInput `pulumi:"host"`
	// Required. Input only. The password for the user that Database Migration Service will be using to connect to the database.
	// This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password pulumi.StringInput `pulumi:"password"`
	// (Output)
	// Output only. Indicates If this connection profile password is stored.
	PasswordSet pulumi.BoolPtrInput `pulumi:"passwordSet"`
	// Required. The network port of the source MySQL database.
	Port pulumi.IntInput `pulumi:"port"`
	// SSL configuration for the destination to connect to the source database.
	// Structure is documented below.
	Ssl ConnectionProfileMysqlSslPtrInput `pulumi:"ssl"`
	// Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectionProfileMysqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileMysql)(nil)).Elem()
}

func (i ConnectionProfileMysqlArgs) ToConnectionProfileMysqlOutput() ConnectionProfileMysqlOutput {
	return i.ToConnectionProfileMysqlOutputWithContext(context.Background())
}

func (i ConnectionProfileMysqlArgs) ToConnectionProfileMysqlOutputWithContext(ctx context.Context) ConnectionProfileMysqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileMysqlOutput)
}

func (i ConnectionProfileMysqlArgs) ToConnectionProfileMysqlPtrOutput() ConnectionProfileMysqlPtrOutput {
	return i.ToConnectionProfileMysqlPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileMysqlArgs) ToConnectionProfileMysqlPtrOutputWithContext(ctx context.Context) ConnectionProfileMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileMysqlOutput).ToConnectionProfileMysqlPtrOutputWithContext(ctx)
}

// ConnectionProfileMysqlPtrInput is an input type that accepts ConnectionProfileMysqlArgs, ConnectionProfileMysqlPtr and ConnectionProfileMysqlPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileMysqlPtrInput` via:
//
//	        ConnectionProfileMysqlArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileMysqlPtrInput interface {
	pulumi.Input

	ToConnectionProfileMysqlPtrOutput() ConnectionProfileMysqlPtrOutput
	ToConnectionProfileMysqlPtrOutputWithContext(context.Context) ConnectionProfileMysqlPtrOutput
}

type connectionProfileMysqlPtrType ConnectionProfileMysqlArgs

func ConnectionProfileMysqlPtr(v *ConnectionProfileMysqlArgs) ConnectionProfileMysqlPtrInput {
	return (*connectionProfileMysqlPtrType)(v)
}

func (*connectionProfileMysqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileMysql)(nil)).Elem()
}

func (i *connectionProfileMysqlPtrType) ToConnectionProfileMysqlPtrOutput() ConnectionProfileMysqlPtrOutput {
	return i.ToConnectionProfileMysqlPtrOutputWithContext(context.Background())
}

func (i *connectionProfileMysqlPtrType) ToConnectionProfileMysqlPtrOutputWithContext(ctx context.Context) ConnectionProfileMysqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileMysqlPtrOutput)
}

type ConnectionProfileMysqlOutput struct{ *pulumi.OutputState }

func (ConnectionProfileMysqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileMysql)(nil)).Elem()
}

func (o ConnectionProfileMysqlOutput) ToConnectionProfileMysqlOutput() ConnectionProfileMysqlOutput {
	return o
}

func (o ConnectionProfileMysqlOutput) ToConnectionProfileMysqlOutputWithContext(ctx context.Context) ConnectionProfileMysqlOutput {
	return o
}

func (o ConnectionProfileMysqlOutput) ToConnectionProfileMysqlPtrOutput() ConnectionProfileMysqlPtrOutput {
	return o.ToConnectionProfileMysqlPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileMysqlOutput) ToConnectionProfileMysqlPtrOutputWithContext(ctx context.Context) ConnectionProfileMysqlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileMysql) *ConnectionProfileMysql {
		return &v
	}).(ConnectionProfileMysqlPtrOutput)
}

// If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
func (o ConnectionProfileMysqlOutput) CloudSqlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileMysql) *string { return v.CloudSqlId }).(pulumi.StringPtrOutput)
}

// Required. The IP or hostname of the source MySQL database.
func (o ConnectionProfileMysqlOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileMysql) string { return v.Host }).(pulumi.StringOutput)
}

// Required. Input only. The password for the user that Database Migration Service will be using to connect to the database.
// This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileMysqlOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileMysql) string { return v.Password }).(pulumi.StringOutput)
}

// (Output)
// Output only. Indicates If this connection profile password is stored.
func (o ConnectionProfileMysqlOutput) PasswordSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionProfileMysql) *bool { return v.PasswordSet }).(pulumi.BoolPtrOutput)
}

// Required. The network port of the source MySQL database.
func (o ConnectionProfileMysqlOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectionProfileMysql) int { return v.Port }).(pulumi.IntOutput)
}

// SSL configuration for the destination to connect to the source database.
// Structure is documented below.
func (o ConnectionProfileMysqlOutput) Ssl() ConnectionProfileMysqlSslPtrOutput {
	return o.ApplyT(func(v ConnectionProfileMysql) *ConnectionProfileMysqlSsl { return v.Ssl }).(ConnectionProfileMysqlSslPtrOutput)
}

// Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
func (o ConnectionProfileMysqlOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileMysql) string { return v.Username }).(pulumi.StringOutput)
}

type ConnectionProfileMysqlPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileMysqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileMysql)(nil)).Elem()
}

func (o ConnectionProfileMysqlPtrOutput) ToConnectionProfileMysqlPtrOutput() ConnectionProfileMysqlPtrOutput {
	return o
}

func (o ConnectionProfileMysqlPtrOutput) ToConnectionProfileMysqlPtrOutputWithContext(ctx context.Context) ConnectionProfileMysqlPtrOutput {
	return o
}

func (o ConnectionProfileMysqlPtrOutput) Elem() ConnectionProfileMysqlOutput {
	return o.ApplyT(func(v *ConnectionProfileMysql) ConnectionProfileMysql {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileMysql
		return ret
	}).(ConnectionProfileMysqlOutput)
}

// If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
func (o ConnectionProfileMysqlPtrOutput) CloudSqlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysql) *string {
		if v == nil {
			return nil
		}
		return v.CloudSqlId
	}).(pulumi.StringPtrOutput)
}

// Required. The IP or hostname of the source MySQL database.
func (o ConnectionProfileMysqlPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysql) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Required. Input only. The password for the user that Database Migration Service will be using to connect to the database.
// This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileMysqlPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysql) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Indicates If this connection profile password is stored.
func (o ConnectionProfileMysqlPtrOutput) PasswordSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysql) *bool {
		if v == nil {
			return nil
		}
		return v.PasswordSet
	}).(pulumi.BoolPtrOutput)
}

// Required. The network port of the source MySQL database.
func (o ConnectionProfileMysqlPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysql) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// SSL configuration for the destination to connect to the source database.
// Structure is documented below.
func (o ConnectionProfileMysqlPtrOutput) Ssl() ConnectionProfileMysqlSslPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysql) *ConnectionProfileMysqlSsl {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(ConnectionProfileMysqlSslPtrOutput)
}

// Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
func (o ConnectionProfileMysqlPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysql) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectionProfileMysqlSsl struct {
	// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
	// The replica will use this certificate to verify it's connecting to the right host.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	CaCertificate string `pulumi:"caCertificate"`
	// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
	// If this field is used then the 'clientKey' field is mandatory
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
	// If this field is used then the 'clientCertificate' field is mandatory.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ClientKey *string `pulumi:"clientKey"`
	// (Output)
	// The current connection profile state.
	Type *string `pulumi:"type"`
}

// ConnectionProfileMysqlSslInput is an input type that accepts ConnectionProfileMysqlSslArgs and ConnectionProfileMysqlSslOutput values.
// You can construct a concrete instance of `ConnectionProfileMysqlSslInput` via:
//
//	ConnectionProfileMysqlSslArgs{...}
type ConnectionProfileMysqlSslInput interface {
	pulumi.Input

	ToConnectionProfileMysqlSslOutput() ConnectionProfileMysqlSslOutput
	ToConnectionProfileMysqlSslOutputWithContext(context.Context) ConnectionProfileMysqlSslOutput
}

type ConnectionProfileMysqlSslArgs struct {
	// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
	// The replica will use this certificate to verify it's connecting to the right host.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
	// If this field is used then the 'clientKey' field is mandatory
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
	// If this field is used then the 'clientCertificate' field is mandatory.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// (Output)
	// The current connection profile state.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionProfileMysqlSslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileMysqlSsl)(nil)).Elem()
}

func (i ConnectionProfileMysqlSslArgs) ToConnectionProfileMysqlSslOutput() ConnectionProfileMysqlSslOutput {
	return i.ToConnectionProfileMysqlSslOutputWithContext(context.Background())
}

func (i ConnectionProfileMysqlSslArgs) ToConnectionProfileMysqlSslOutputWithContext(ctx context.Context) ConnectionProfileMysqlSslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileMysqlSslOutput)
}

func (i ConnectionProfileMysqlSslArgs) ToConnectionProfileMysqlSslPtrOutput() ConnectionProfileMysqlSslPtrOutput {
	return i.ToConnectionProfileMysqlSslPtrOutputWithContext(context.Background())
}

func (i ConnectionProfileMysqlSslArgs) ToConnectionProfileMysqlSslPtrOutputWithContext(ctx context.Context) ConnectionProfileMysqlSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileMysqlSslOutput).ToConnectionProfileMysqlSslPtrOutputWithContext(ctx)
}

// ConnectionProfileMysqlSslPtrInput is an input type that accepts ConnectionProfileMysqlSslArgs, ConnectionProfileMysqlSslPtr and ConnectionProfileMysqlSslPtrOutput values.
// You can construct a concrete instance of `ConnectionProfileMysqlSslPtrInput` via:
//
//	        ConnectionProfileMysqlSslArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfileMysqlSslPtrInput interface {
	pulumi.Input

	ToConnectionProfileMysqlSslPtrOutput() ConnectionProfileMysqlSslPtrOutput
	ToConnectionProfileMysqlSslPtrOutputWithContext(context.Context) ConnectionProfileMysqlSslPtrOutput
}

type connectionProfileMysqlSslPtrType ConnectionProfileMysqlSslArgs

func ConnectionProfileMysqlSslPtr(v *ConnectionProfileMysqlSslArgs) ConnectionProfileMysqlSslPtrInput {
	return (*connectionProfileMysqlSslPtrType)(v)
}

func (*connectionProfileMysqlSslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileMysqlSsl)(nil)).Elem()
}

func (i *connectionProfileMysqlSslPtrType) ToConnectionProfileMysqlSslPtrOutput() ConnectionProfileMysqlSslPtrOutput {
	return i.ToConnectionProfileMysqlSslPtrOutputWithContext(context.Background())
}

func (i *connectionProfileMysqlSslPtrType) ToConnectionProfileMysqlSslPtrOutputWithContext(ctx context.Context) ConnectionProfileMysqlSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileMysqlSslPtrOutput)
}

type ConnectionProfileMysqlSslOutput struct{ *pulumi.OutputState }

func (ConnectionProfileMysqlSslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileMysqlSsl)(nil)).Elem()
}

func (o ConnectionProfileMysqlSslOutput) ToConnectionProfileMysqlSslOutput() ConnectionProfileMysqlSslOutput {
	return o
}

func (o ConnectionProfileMysqlSslOutput) ToConnectionProfileMysqlSslOutputWithContext(ctx context.Context) ConnectionProfileMysqlSslOutput {
	return o
}

func (o ConnectionProfileMysqlSslOutput) ToConnectionProfileMysqlSslPtrOutput() ConnectionProfileMysqlSslPtrOutput {
	return o.ToConnectionProfileMysqlSslPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileMysqlSslOutput) ToConnectionProfileMysqlSslPtrOutputWithContext(ctx context.Context) ConnectionProfileMysqlSslPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileMysqlSsl) *ConnectionProfileMysqlSsl {
		return &v
	}).(ConnectionProfileMysqlSslPtrOutput)
}

// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
// The replica will use this certificate to verify it's connecting to the right host.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileMysqlSslOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfileMysqlSsl) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
// If this field is used then the 'clientKey' field is mandatory
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileMysqlSslOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileMysqlSsl) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
// If this field is used then the 'clientCertificate' field is mandatory.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileMysqlSslOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileMysqlSsl) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// (Output)
// The current connection profile state.
func (o ConnectionProfileMysqlSslOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfileMysqlSsl) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionProfileMysqlSslPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileMysqlSslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileMysqlSsl)(nil)).Elem()
}

func (o ConnectionProfileMysqlSslPtrOutput) ToConnectionProfileMysqlSslPtrOutput() ConnectionProfileMysqlSslPtrOutput {
	return o
}

func (o ConnectionProfileMysqlSslPtrOutput) ToConnectionProfileMysqlSslPtrOutputWithContext(ctx context.Context) ConnectionProfileMysqlSslPtrOutput {
	return o
}

func (o ConnectionProfileMysqlSslPtrOutput) Elem() ConnectionProfileMysqlSslOutput {
	return o.ApplyT(func(v *ConnectionProfileMysqlSsl) ConnectionProfileMysqlSsl {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileMysqlSsl
		return ret
	}).(ConnectionProfileMysqlSslOutput)
}

// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
// The replica will use this certificate to verify it's connecting to the right host.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileMysqlSslPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysqlSsl) *string {
		if v == nil {
			return nil
		}
		return &v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
// If this field is used then the 'clientKey' field is mandatory
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileMysqlSslPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysqlSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
// If this field is used then the 'clientCertificate' field is mandatory.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfileMysqlSslPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysqlSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The current connection profile state.
func (o ConnectionProfileMysqlSslPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfileMysqlSsl) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectionProfilePostgresql struct {
	// If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
	CloudSqlId *string `pulumi:"cloudSqlId"`
	// Required. The IP or hostname of the source MySQL database.
	Host string `pulumi:"host"`
	// (Output)
	// Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.
	NetworkArchitecture *string `pulumi:"networkArchitecture"`
	// Required. Input only. The password for the user that Database Migration Service will be using to connect to the database.
	// This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password string `pulumi:"password"`
	// (Output)
	// Output only. Indicates If this connection profile password is stored.
	PasswordSet *bool `pulumi:"passwordSet"`
	// Required. The network port of the source MySQL database.
	Port int `pulumi:"port"`
	// SSL configuration for the destination to connect to the source database.
	// Structure is documented below.
	Ssl *ConnectionProfilePostgresqlSsl `pulumi:"ssl"`
	// Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
	Username string `pulumi:"username"`
}

// ConnectionProfilePostgresqlInput is an input type that accepts ConnectionProfilePostgresqlArgs and ConnectionProfilePostgresqlOutput values.
// You can construct a concrete instance of `ConnectionProfilePostgresqlInput` via:
//
//	ConnectionProfilePostgresqlArgs{...}
type ConnectionProfilePostgresqlInput interface {
	pulumi.Input

	ToConnectionProfilePostgresqlOutput() ConnectionProfilePostgresqlOutput
	ToConnectionProfilePostgresqlOutputWithContext(context.Context) ConnectionProfilePostgresqlOutput
}

type ConnectionProfilePostgresqlArgs struct {
	// If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
	CloudSqlId pulumi.StringPtrInput `pulumi:"cloudSqlId"`
	// Required. The IP or hostname of the source MySQL database.
	Host pulumi.StringInput `pulumi:"host"`
	// (Output)
	// Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.
	NetworkArchitecture pulumi.StringPtrInput `pulumi:"networkArchitecture"`
	// Required. Input only. The password for the user that Database Migration Service will be using to connect to the database.
	// This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	Password pulumi.StringInput `pulumi:"password"`
	// (Output)
	// Output only. Indicates If this connection profile password is stored.
	PasswordSet pulumi.BoolPtrInput `pulumi:"passwordSet"`
	// Required. The network port of the source MySQL database.
	Port pulumi.IntInput `pulumi:"port"`
	// SSL configuration for the destination to connect to the source database.
	// Structure is documented below.
	Ssl ConnectionProfilePostgresqlSslPtrInput `pulumi:"ssl"`
	// Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectionProfilePostgresqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfilePostgresql)(nil)).Elem()
}

func (i ConnectionProfilePostgresqlArgs) ToConnectionProfilePostgresqlOutput() ConnectionProfilePostgresqlOutput {
	return i.ToConnectionProfilePostgresqlOutputWithContext(context.Background())
}

func (i ConnectionProfilePostgresqlArgs) ToConnectionProfilePostgresqlOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfilePostgresqlOutput)
}

func (i ConnectionProfilePostgresqlArgs) ToConnectionProfilePostgresqlPtrOutput() ConnectionProfilePostgresqlPtrOutput {
	return i.ToConnectionProfilePostgresqlPtrOutputWithContext(context.Background())
}

func (i ConnectionProfilePostgresqlArgs) ToConnectionProfilePostgresqlPtrOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfilePostgresqlOutput).ToConnectionProfilePostgresqlPtrOutputWithContext(ctx)
}

// ConnectionProfilePostgresqlPtrInput is an input type that accepts ConnectionProfilePostgresqlArgs, ConnectionProfilePostgresqlPtr and ConnectionProfilePostgresqlPtrOutput values.
// You can construct a concrete instance of `ConnectionProfilePostgresqlPtrInput` via:
//
//	        ConnectionProfilePostgresqlArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfilePostgresqlPtrInput interface {
	pulumi.Input

	ToConnectionProfilePostgresqlPtrOutput() ConnectionProfilePostgresqlPtrOutput
	ToConnectionProfilePostgresqlPtrOutputWithContext(context.Context) ConnectionProfilePostgresqlPtrOutput
}

type connectionProfilePostgresqlPtrType ConnectionProfilePostgresqlArgs

func ConnectionProfilePostgresqlPtr(v *ConnectionProfilePostgresqlArgs) ConnectionProfilePostgresqlPtrInput {
	return (*connectionProfilePostgresqlPtrType)(v)
}

func (*connectionProfilePostgresqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfilePostgresql)(nil)).Elem()
}

func (i *connectionProfilePostgresqlPtrType) ToConnectionProfilePostgresqlPtrOutput() ConnectionProfilePostgresqlPtrOutput {
	return i.ToConnectionProfilePostgresqlPtrOutputWithContext(context.Background())
}

func (i *connectionProfilePostgresqlPtrType) ToConnectionProfilePostgresqlPtrOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfilePostgresqlPtrOutput)
}

type ConnectionProfilePostgresqlOutput struct{ *pulumi.OutputState }

func (ConnectionProfilePostgresqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfilePostgresql)(nil)).Elem()
}

func (o ConnectionProfilePostgresqlOutput) ToConnectionProfilePostgresqlOutput() ConnectionProfilePostgresqlOutput {
	return o
}

func (o ConnectionProfilePostgresqlOutput) ToConnectionProfilePostgresqlOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlOutput {
	return o
}

func (o ConnectionProfilePostgresqlOutput) ToConnectionProfilePostgresqlPtrOutput() ConnectionProfilePostgresqlPtrOutput {
	return o.ToConnectionProfilePostgresqlPtrOutputWithContext(context.Background())
}

func (o ConnectionProfilePostgresqlOutput) ToConnectionProfilePostgresqlPtrOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfilePostgresql) *ConnectionProfilePostgresql {
		return &v
	}).(ConnectionProfilePostgresqlPtrOutput)
}

// If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
func (o ConnectionProfilePostgresqlOutput) CloudSqlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresql) *string { return v.CloudSqlId }).(pulumi.StringPtrOutput)
}

// Required. The IP or hostname of the source MySQL database.
func (o ConnectionProfilePostgresqlOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresql) string { return v.Host }).(pulumi.StringOutput)
}

// (Output)
// Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.
func (o ConnectionProfilePostgresqlOutput) NetworkArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresql) *string { return v.NetworkArchitecture }).(pulumi.StringPtrOutput)
}

// Required. Input only. The password for the user that Database Migration Service will be using to connect to the database.
// This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfilePostgresqlOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresql) string { return v.Password }).(pulumi.StringOutput)
}

// (Output)
// Output only. Indicates If this connection profile password is stored.
func (o ConnectionProfilePostgresqlOutput) PasswordSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresql) *bool { return v.PasswordSet }).(pulumi.BoolPtrOutput)
}

// Required. The network port of the source MySQL database.
func (o ConnectionProfilePostgresqlOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresql) int { return v.Port }).(pulumi.IntOutput)
}

// SSL configuration for the destination to connect to the source database.
// Structure is documented below.
func (o ConnectionProfilePostgresqlOutput) Ssl() ConnectionProfilePostgresqlSslPtrOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresql) *ConnectionProfilePostgresqlSsl { return v.Ssl }).(ConnectionProfilePostgresqlSslPtrOutput)
}

// Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
func (o ConnectionProfilePostgresqlOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresql) string { return v.Username }).(pulumi.StringOutput)
}

type ConnectionProfilePostgresqlPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfilePostgresqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfilePostgresql)(nil)).Elem()
}

func (o ConnectionProfilePostgresqlPtrOutput) ToConnectionProfilePostgresqlPtrOutput() ConnectionProfilePostgresqlPtrOutput {
	return o
}

func (o ConnectionProfilePostgresqlPtrOutput) ToConnectionProfilePostgresqlPtrOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlPtrOutput {
	return o
}

func (o ConnectionProfilePostgresqlPtrOutput) Elem() ConnectionProfilePostgresqlOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresql) ConnectionProfilePostgresql {
		if v != nil {
			return *v
		}
		var ret ConnectionProfilePostgresql
		return ret
	}).(ConnectionProfilePostgresqlOutput)
}

// If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
func (o ConnectionProfilePostgresqlPtrOutput) CloudSqlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresql) *string {
		if v == nil {
			return nil
		}
		return v.CloudSqlId
	}).(pulumi.StringPtrOutput)
}

// Required. The IP or hostname of the source MySQL database.
func (o ConnectionProfilePostgresqlPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresql) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.
func (o ConnectionProfilePostgresqlPtrOutput) NetworkArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresql) *string {
		if v == nil {
			return nil
		}
		return v.NetworkArchitecture
	}).(pulumi.StringPtrOutput)
}

// Required. Input only. The password for the user that Database Migration Service will be using to connect to the database.
// This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfilePostgresqlPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresql) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. Indicates If this connection profile password is stored.
func (o ConnectionProfilePostgresqlPtrOutput) PasswordSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresql) *bool {
		if v == nil {
			return nil
		}
		return v.PasswordSet
	}).(pulumi.BoolPtrOutput)
}

// Required. The network port of the source MySQL database.
func (o ConnectionProfilePostgresqlPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresql) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// SSL configuration for the destination to connect to the source database.
// Structure is documented below.
func (o ConnectionProfilePostgresqlPtrOutput) Ssl() ConnectionProfilePostgresqlSslPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresql) *ConnectionProfilePostgresqlSsl {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(ConnectionProfilePostgresqlSslPtrOutput)
}

// Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
func (o ConnectionProfilePostgresqlPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresql) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectionProfilePostgresqlSsl struct {
	// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
	// The replica will use this certificate to verify it's connecting to the right host.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	CaCertificate string `pulumi:"caCertificate"`
	// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
	// If this field is used then the 'clientKey' field is mandatory
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
	// If this field is used then the 'clientCertificate' field is mandatory.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ClientKey *string `pulumi:"clientKey"`
	// (Output)
	// The current connection profile state.
	Type *string `pulumi:"type"`
}

// ConnectionProfilePostgresqlSslInput is an input type that accepts ConnectionProfilePostgresqlSslArgs and ConnectionProfilePostgresqlSslOutput values.
// You can construct a concrete instance of `ConnectionProfilePostgresqlSslInput` via:
//
//	ConnectionProfilePostgresqlSslArgs{...}
type ConnectionProfilePostgresqlSslInput interface {
	pulumi.Input

	ToConnectionProfilePostgresqlSslOutput() ConnectionProfilePostgresqlSslOutput
	ToConnectionProfilePostgresqlSslOutputWithContext(context.Context) ConnectionProfilePostgresqlSslOutput
}

type ConnectionProfilePostgresqlSslArgs struct {
	// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
	// The replica will use this certificate to verify it's connecting to the right host.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
	// If this field is used then the 'clientKey' field is mandatory
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
	// If this field is used then the 'clientCertificate' field is mandatory.
	// **Note**: This property is sensitive and will not be displayed in the plan.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// (Output)
	// The current connection profile state.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionProfilePostgresqlSslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfilePostgresqlSsl)(nil)).Elem()
}

func (i ConnectionProfilePostgresqlSslArgs) ToConnectionProfilePostgresqlSslOutput() ConnectionProfilePostgresqlSslOutput {
	return i.ToConnectionProfilePostgresqlSslOutputWithContext(context.Background())
}

func (i ConnectionProfilePostgresqlSslArgs) ToConnectionProfilePostgresqlSslOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlSslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfilePostgresqlSslOutput)
}

func (i ConnectionProfilePostgresqlSslArgs) ToConnectionProfilePostgresqlSslPtrOutput() ConnectionProfilePostgresqlSslPtrOutput {
	return i.ToConnectionProfilePostgresqlSslPtrOutputWithContext(context.Background())
}

func (i ConnectionProfilePostgresqlSslArgs) ToConnectionProfilePostgresqlSslPtrOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfilePostgresqlSslOutput).ToConnectionProfilePostgresqlSslPtrOutputWithContext(ctx)
}

// ConnectionProfilePostgresqlSslPtrInput is an input type that accepts ConnectionProfilePostgresqlSslArgs, ConnectionProfilePostgresqlSslPtr and ConnectionProfilePostgresqlSslPtrOutput values.
// You can construct a concrete instance of `ConnectionProfilePostgresqlSslPtrInput` via:
//
//	        ConnectionProfilePostgresqlSslArgs{...}
//
//	or:
//
//	        nil
type ConnectionProfilePostgresqlSslPtrInput interface {
	pulumi.Input

	ToConnectionProfilePostgresqlSslPtrOutput() ConnectionProfilePostgresqlSslPtrOutput
	ToConnectionProfilePostgresqlSslPtrOutputWithContext(context.Context) ConnectionProfilePostgresqlSslPtrOutput
}

type connectionProfilePostgresqlSslPtrType ConnectionProfilePostgresqlSslArgs

func ConnectionProfilePostgresqlSslPtr(v *ConnectionProfilePostgresqlSslArgs) ConnectionProfilePostgresqlSslPtrInput {
	return (*connectionProfilePostgresqlSslPtrType)(v)
}

func (*connectionProfilePostgresqlSslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfilePostgresqlSsl)(nil)).Elem()
}

func (i *connectionProfilePostgresqlSslPtrType) ToConnectionProfilePostgresqlSslPtrOutput() ConnectionProfilePostgresqlSslPtrOutput {
	return i.ToConnectionProfilePostgresqlSslPtrOutputWithContext(context.Background())
}

func (i *connectionProfilePostgresqlSslPtrType) ToConnectionProfilePostgresqlSslPtrOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlSslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfilePostgresqlSslPtrOutput)
}

type ConnectionProfilePostgresqlSslOutput struct{ *pulumi.OutputState }

func (ConnectionProfilePostgresqlSslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfilePostgresqlSsl)(nil)).Elem()
}

func (o ConnectionProfilePostgresqlSslOutput) ToConnectionProfilePostgresqlSslOutput() ConnectionProfilePostgresqlSslOutput {
	return o
}

func (o ConnectionProfilePostgresqlSslOutput) ToConnectionProfilePostgresqlSslOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlSslOutput {
	return o
}

func (o ConnectionProfilePostgresqlSslOutput) ToConnectionProfilePostgresqlSslPtrOutput() ConnectionProfilePostgresqlSslPtrOutput {
	return o.ToConnectionProfilePostgresqlSslPtrOutputWithContext(context.Background())
}

func (o ConnectionProfilePostgresqlSslOutput) ToConnectionProfilePostgresqlSslPtrOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlSslPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfilePostgresqlSsl) *ConnectionProfilePostgresqlSsl {
		return &v
	}).(ConnectionProfilePostgresqlSslPtrOutput)
}

// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
// The replica will use this certificate to verify it's connecting to the right host.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfilePostgresqlSslOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresqlSsl) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
// If this field is used then the 'clientKey' field is mandatory
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfilePostgresqlSslOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresqlSsl) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
// If this field is used then the 'clientCertificate' field is mandatory.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfilePostgresqlSslOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresqlSsl) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// (Output)
// The current connection profile state.
func (o ConnectionProfilePostgresqlSslOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionProfilePostgresqlSsl) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionProfilePostgresqlSslPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfilePostgresqlSslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfilePostgresqlSsl)(nil)).Elem()
}

func (o ConnectionProfilePostgresqlSslPtrOutput) ToConnectionProfilePostgresqlSslPtrOutput() ConnectionProfilePostgresqlSslPtrOutput {
	return o
}

func (o ConnectionProfilePostgresqlSslPtrOutput) ToConnectionProfilePostgresqlSslPtrOutputWithContext(ctx context.Context) ConnectionProfilePostgresqlSslPtrOutput {
	return o
}

func (o ConnectionProfilePostgresqlSslPtrOutput) Elem() ConnectionProfilePostgresqlSslOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresqlSsl) ConnectionProfilePostgresqlSsl {
		if v != nil {
			return *v
		}
		var ret ConnectionProfilePostgresqlSsl
		return ret
	}).(ConnectionProfilePostgresqlSslOutput)
}

// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
// The replica will use this certificate to verify it's connecting to the right host.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfilePostgresqlSslPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresqlSsl) *string {
		if v == nil {
			return nil
		}
		return &v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
// If this field is used then the 'clientKey' field is mandatory
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfilePostgresqlSslPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresqlSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
// If this field is used then the 'clientCertificate' field is mandatory.
// **Note**: This property is sensitive and will not be displayed in the plan.
func (o ConnectionProfilePostgresqlSslPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresqlSsl) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The current connection profile state.
func (o ConnectionProfilePostgresqlSslPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfilePostgresqlSsl) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbInput)(nil)).Elem(), ConnectionProfileAlloydbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbPtrInput)(nil)).Elem(), ConnectionProfileAlloydbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbSettingsInput)(nil)).Elem(), ConnectionProfileAlloydbSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbSettingsPtrInput)(nil)).Elem(), ConnectionProfileAlloydbSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbSettingsInitialUserInput)(nil)).Elem(), ConnectionProfileAlloydbSettingsInitialUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbSettingsInitialUserPtrInput)(nil)).Elem(), ConnectionProfileAlloydbSettingsInitialUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsInput)(nil)).Elem(), ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrInput)(nil)).Elem(), ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigInput)(nil)).Elem(), ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrInput)(nil)).Elem(), ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileCloudsqlInput)(nil)).Elem(), ConnectionProfileCloudsqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileCloudsqlPtrInput)(nil)).Elem(), ConnectionProfileCloudsqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileCloudsqlSettingsInput)(nil)).Elem(), ConnectionProfileCloudsqlSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileCloudsqlSettingsPtrInput)(nil)).Elem(), ConnectionProfileCloudsqlSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileCloudsqlSettingsIpConfigInput)(nil)).Elem(), ConnectionProfileCloudsqlSettingsIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileCloudsqlSettingsIpConfigPtrInput)(nil)).Elem(), ConnectionProfileCloudsqlSettingsIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkInput)(nil)).Elem(), ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayInput)(nil)).Elem(), ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileErrorInput)(nil)).Elem(), ConnectionProfileErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileErrorArrayInput)(nil)).Elem(), ConnectionProfileErrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileMysqlInput)(nil)).Elem(), ConnectionProfileMysqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileMysqlPtrInput)(nil)).Elem(), ConnectionProfileMysqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileMysqlSslInput)(nil)).Elem(), ConnectionProfileMysqlSslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileMysqlSslPtrInput)(nil)).Elem(), ConnectionProfileMysqlSslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfilePostgresqlInput)(nil)).Elem(), ConnectionProfilePostgresqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfilePostgresqlPtrInput)(nil)).Elem(), ConnectionProfilePostgresqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfilePostgresqlSslInput)(nil)).Elem(), ConnectionProfilePostgresqlSslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfilePostgresqlSslPtrInput)(nil)).Elem(), ConnectionProfilePostgresqlSslArgs{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbOutput{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbSettingsOutput{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbSettingsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbSettingsInitialUserOutput{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbSettingsInitialUserPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsOutput{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigOutput{})
	pulumi.RegisterOutputType(ConnectionProfileAlloydbSettingsPrimaryInstanceSettingsMachineConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileCloudsqlOutput{})
	pulumi.RegisterOutputType(ConnectionProfileCloudsqlPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileCloudsqlSettingsOutput{})
	pulumi.RegisterOutputType(ConnectionProfileCloudsqlSettingsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileCloudsqlSettingsIpConfigOutput{})
	pulumi.RegisterOutputType(ConnectionProfileCloudsqlSettingsIpConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkOutput{})
	pulumi.RegisterOutputType(ConnectionProfileCloudsqlSettingsIpConfigAuthorizedNetworkArrayOutput{})
	pulumi.RegisterOutputType(ConnectionProfileErrorOutput{})
	pulumi.RegisterOutputType(ConnectionProfileErrorArrayOutput{})
	pulumi.RegisterOutputType(ConnectionProfileMysqlOutput{})
	pulumi.RegisterOutputType(ConnectionProfileMysqlPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileMysqlSslOutput{})
	pulumi.RegisterOutputType(ConnectionProfileMysqlSslPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfilePostgresqlOutput{})
	pulumi.RegisterOutputType(ConnectionProfilePostgresqlPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfilePostgresqlSslOutput{})
	pulumi.RegisterOutputType(ConnectionProfilePostgresqlSslPtrOutput{})
}
