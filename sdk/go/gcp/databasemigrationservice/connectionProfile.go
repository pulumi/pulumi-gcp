// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigrationservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// A connection profile definition.
//
// To get more information about ConnectionProfile, see:
//
// * [API documentation](https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles/create)
// * How-to Guides
//   - [Database Migration](https://cloud.google.com/database-migration/docs/)
//
// > **Warning:** All arguments including the following potentially sensitive
// values will be stored in the raw state as plain text: `mysql.password`, `mysql.ssl.client_key`, `mysql.ssl.client_certificate`, `mysql.ssl.ca_certificate`, `postgresql.password`, `postgresql.ssl.client_key`, `postgresql.ssl.client_certificate`, `postgresql.ssl.ca_certificate`, `cloudsql.settings.root_password`, `alloydb.settings.initial_user.password`.
// Read more about sensitive data in state.
//
// ## Example Usage
//
// ## Import
//
// # ConnectionProfile can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:databasemigrationservice/connectionProfile:ConnectionProfile default projects/{{project}}/locations/{{location}}/connectionProfiles/{{connection_profile_id}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:databasemigrationservice/connectionProfile:ConnectionProfile default {{project}}/{{location}}/{{connection_profile_id}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:databasemigrationservice/connectionProfile:ConnectionProfile default {{location}}/{{connection_profile_id}}
//
// ```
type ConnectionProfile struct {
	pulumi.CustomResourceState

	// Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
	// Structure is documented below.
	Alloydb ConnectionProfileAlloydbPtrOutput `pulumi:"alloydb"`
	// Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
	// Structure is documented below.
	Cloudsql ConnectionProfileCloudsqlPtrOutput `pulumi:"cloudsql"`
	// The ID of the connection profile.
	//
	// ***
	ConnectionProfileId pulumi.StringOutput `pulumi:"connectionProfileId"`
	// Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The database provider.
	Dbprovider pulumi.StringOutput `pulumi:"dbprovider"`
	// The connection profile display name.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Output only. The error details in case of state FAILED.
	// Structure is documented below.
	Errors ConnectionProfileErrorArrayOutput `pulumi:"errors"`
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location where the connection profile should reside.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Specifies connection parameters required specifically for MySQL databases.
	// Structure is documented below.
	Mysql ConnectionProfileMysqlPtrOutput `pulumi:"mysql"`
	// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies connection parameters required specifically for PostgreSQL databases.
	// Structure is documented below.
	Postgresql ConnectionProfilePostgresqlPtrOutput `pulumi:"postgresql"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The current connection profile state.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewConnectionProfile registers a new resource with the given unique name, arguments, and options.
func NewConnectionProfile(ctx *pulumi.Context,
	name string, args *ConnectionProfileArgs, opts ...pulumi.ResourceOption) (*ConnectionProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConnectionProfile
	err := ctx.RegisterResource("gcp:databasemigrationservice/connectionProfile:ConnectionProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectionProfile gets an existing ConnectionProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionProfileState, opts ...pulumi.ResourceOption) (*ConnectionProfile, error) {
	var resource ConnectionProfile
	err := ctx.ReadResource("gcp:databasemigrationservice/connectionProfile:ConnectionProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectionProfile resources.
type connectionProfileState struct {
	// Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
	// Structure is documented below.
	Alloydb *ConnectionProfileAlloydb `pulumi:"alloydb"`
	// Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
	// Structure is documented below.
	Cloudsql *ConnectionProfileCloudsql `pulumi:"cloudsql"`
	// The ID of the connection profile.
	//
	// ***
	ConnectionProfileId *string `pulumi:"connectionProfileId"`
	// Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
	CreateTime *string `pulumi:"createTime"`
	// The database provider.
	Dbprovider *string `pulumi:"dbprovider"`
	// The connection profile display name.
	DisplayName *string `pulumi:"displayName"`
	// Output only. The error details in case of state FAILED.
	// Structure is documented below.
	Errors []ConnectionProfileError `pulumi:"errors"`
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs.
	Labels map[string]string `pulumi:"labels"`
	// The location where the connection profile should reside.
	Location *string `pulumi:"location"`
	// Specifies connection parameters required specifically for MySQL databases.
	// Structure is documented below.
	Mysql *ConnectionProfileMysql `pulumi:"mysql"`
	// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
	Name *string `pulumi:"name"`
	// Specifies connection parameters required specifically for PostgreSQL databases.
	// Structure is documented below.
	Postgresql *ConnectionProfilePostgresql `pulumi:"postgresql"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The current connection profile state.
	State *string `pulumi:"state"`
}

type ConnectionProfileState struct {
	// Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
	// Structure is documented below.
	Alloydb ConnectionProfileAlloydbPtrInput
	// Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
	// Structure is documented below.
	Cloudsql ConnectionProfileCloudsqlPtrInput
	// The ID of the connection profile.
	//
	// ***
	ConnectionProfileId pulumi.StringPtrInput
	// Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
	CreateTime pulumi.StringPtrInput
	// The database provider.
	Dbprovider pulumi.StringPtrInput
	// The connection profile display name.
	DisplayName pulumi.StringPtrInput
	// Output only. The error details in case of state FAILED.
	// Structure is documented below.
	Errors ConnectionProfileErrorArrayInput
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs.
	Labels pulumi.StringMapInput
	// The location where the connection profile should reside.
	Location pulumi.StringPtrInput
	// Specifies connection parameters required specifically for MySQL databases.
	// Structure is documented below.
	Mysql ConnectionProfileMysqlPtrInput
	// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
	Name pulumi.StringPtrInput
	// Specifies connection parameters required specifically for PostgreSQL databases.
	// Structure is documented below.
	Postgresql ConnectionProfilePostgresqlPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The current connection profile state.
	State pulumi.StringPtrInput
}

func (ConnectionProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionProfileState)(nil)).Elem()
}

type connectionProfileArgs struct {
	// Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
	// Structure is documented below.
	Alloydb *ConnectionProfileAlloydb `pulumi:"alloydb"`
	// Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
	// Structure is documented below.
	Cloudsql *ConnectionProfileCloudsql `pulumi:"cloudsql"`
	// The ID of the connection profile.
	//
	// ***
	ConnectionProfileId string `pulumi:"connectionProfileId"`
	// The connection profile display name.
	DisplayName *string `pulumi:"displayName"`
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs.
	Labels map[string]string `pulumi:"labels"`
	// The location where the connection profile should reside.
	Location *string `pulumi:"location"`
	// Specifies connection parameters required specifically for MySQL databases.
	// Structure is documented below.
	Mysql *ConnectionProfileMysql `pulumi:"mysql"`
	// Specifies connection parameters required specifically for PostgreSQL databases.
	// Structure is documented below.
	Postgresql *ConnectionProfilePostgresql `pulumi:"postgresql"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a ConnectionProfile resource.
type ConnectionProfileArgs struct {
	// Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
	// Structure is documented below.
	Alloydb ConnectionProfileAlloydbPtrInput
	// Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
	// Structure is documented below.
	Cloudsql ConnectionProfileCloudsqlPtrInput
	// The ID of the connection profile.
	//
	// ***
	ConnectionProfileId pulumi.StringInput
	// The connection profile display name.
	DisplayName pulumi.StringPtrInput
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs.
	Labels pulumi.StringMapInput
	// The location where the connection profile should reside.
	Location pulumi.StringPtrInput
	// Specifies connection parameters required specifically for MySQL databases.
	// Structure is documented below.
	Mysql ConnectionProfileMysqlPtrInput
	// Specifies connection parameters required specifically for PostgreSQL databases.
	// Structure is documented below.
	Postgresql ConnectionProfilePostgresqlPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (ConnectionProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionProfileArgs)(nil)).Elem()
}

type ConnectionProfileInput interface {
	pulumi.Input

	ToConnectionProfileOutput() ConnectionProfileOutput
	ToConnectionProfileOutputWithContext(ctx context.Context) ConnectionProfileOutput
}

func (*ConnectionProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfile)(nil)).Elem()
}

func (i *ConnectionProfile) ToConnectionProfileOutput() ConnectionProfileOutput {
	return i.ToConnectionProfileOutputWithContext(context.Background())
}

func (i *ConnectionProfile) ToConnectionProfileOutputWithContext(ctx context.Context) ConnectionProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileOutput)
}

func (i *ConnectionProfile) ToOutput(ctx context.Context) pulumix.Output[*ConnectionProfile] {
	return pulumix.Output[*ConnectionProfile]{
		OutputState: i.ToConnectionProfileOutputWithContext(ctx).OutputState,
	}
}

// ConnectionProfileArrayInput is an input type that accepts ConnectionProfileArray and ConnectionProfileArrayOutput values.
// You can construct a concrete instance of `ConnectionProfileArrayInput` via:
//
//	ConnectionProfileArray{ ConnectionProfileArgs{...} }
type ConnectionProfileArrayInput interface {
	pulumi.Input

	ToConnectionProfileArrayOutput() ConnectionProfileArrayOutput
	ToConnectionProfileArrayOutputWithContext(context.Context) ConnectionProfileArrayOutput
}

type ConnectionProfileArray []ConnectionProfileInput

func (ConnectionProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectionProfile)(nil)).Elem()
}

func (i ConnectionProfileArray) ToConnectionProfileArrayOutput() ConnectionProfileArrayOutput {
	return i.ToConnectionProfileArrayOutputWithContext(context.Background())
}

func (i ConnectionProfileArray) ToConnectionProfileArrayOutputWithContext(ctx context.Context) ConnectionProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileArrayOutput)
}

func (i ConnectionProfileArray) ToOutput(ctx context.Context) pulumix.Output[[]*ConnectionProfile] {
	return pulumix.Output[[]*ConnectionProfile]{
		OutputState: i.ToConnectionProfileArrayOutputWithContext(ctx).OutputState,
	}
}

// ConnectionProfileMapInput is an input type that accepts ConnectionProfileMap and ConnectionProfileMapOutput values.
// You can construct a concrete instance of `ConnectionProfileMapInput` via:
//
//	ConnectionProfileMap{ "key": ConnectionProfileArgs{...} }
type ConnectionProfileMapInput interface {
	pulumi.Input

	ToConnectionProfileMapOutput() ConnectionProfileMapOutput
	ToConnectionProfileMapOutputWithContext(context.Context) ConnectionProfileMapOutput
}

type ConnectionProfileMap map[string]ConnectionProfileInput

func (ConnectionProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectionProfile)(nil)).Elem()
}

func (i ConnectionProfileMap) ToConnectionProfileMapOutput() ConnectionProfileMapOutput {
	return i.ToConnectionProfileMapOutputWithContext(context.Background())
}

func (i ConnectionProfileMap) ToConnectionProfileMapOutputWithContext(ctx context.Context) ConnectionProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileMapOutput)
}

func (i ConnectionProfileMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ConnectionProfile] {
	return pulumix.Output[map[string]*ConnectionProfile]{
		OutputState: i.ToConnectionProfileMapOutputWithContext(ctx).OutputState,
	}
}

type ConnectionProfileOutput struct{ *pulumi.OutputState }

func (ConnectionProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfile)(nil)).Elem()
}

func (o ConnectionProfileOutput) ToConnectionProfileOutput() ConnectionProfileOutput {
	return o
}

func (o ConnectionProfileOutput) ToConnectionProfileOutputWithContext(ctx context.Context) ConnectionProfileOutput {
	return o
}

func (o ConnectionProfileOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionProfile] {
	return pulumix.Output[*ConnectionProfile]{
		OutputState: o.OutputState,
	}
}

// Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
// Structure is documented below.
func (o ConnectionProfileOutput) Alloydb() ConnectionProfileAlloydbPtrOutput {
	return o.ApplyT(func(v *ConnectionProfile) ConnectionProfileAlloydbPtrOutput { return v.Alloydb }).(ConnectionProfileAlloydbPtrOutput)
}

// Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
// Structure is documented below.
func (o ConnectionProfileOutput) Cloudsql() ConnectionProfileCloudsqlPtrOutput {
	return o.ApplyT(func(v *ConnectionProfile) ConnectionProfileCloudsqlPtrOutput { return v.Cloudsql }).(ConnectionProfileCloudsqlPtrOutput)
}

// The ID of the connection profile.
//
// ***
func (o ConnectionProfileOutput) ConnectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.ConnectionProfileId }).(pulumi.StringOutput)
}

// Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
func (o ConnectionProfileOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The database provider.
func (o ConnectionProfileOutput) Dbprovider() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.Dbprovider }).(pulumi.StringOutput)
}

// The connection profile display name.
func (o ConnectionProfileOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Output only. The error details in case of state FAILED.
// Structure is documented below.
func (o ConnectionProfileOutput) Errors() ConnectionProfileErrorArrayOutput {
	return o.ApplyT(func(v *ConnectionProfile) ConnectionProfileErrorArrayOutput { return v.Errors }).(ConnectionProfileErrorArrayOutput)
}

// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs.
func (o ConnectionProfileOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location where the connection profile should reside.
func (o ConnectionProfileOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Specifies connection parameters required specifically for MySQL databases.
// Structure is documented below.
func (o ConnectionProfileOutput) Mysql() ConnectionProfileMysqlPtrOutput {
	return o.ApplyT(func(v *ConnectionProfile) ConnectionProfileMysqlPtrOutput { return v.Mysql }).(ConnectionProfileMysqlPtrOutput)
}

// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
func (o ConnectionProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies connection parameters required specifically for PostgreSQL databases.
// Structure is documented below.
func (o ConnectionProfileOutput) Postgresql() ConnectionProfilePostgresqlPtrOutput {
	return o.ApplyT(func(v *ConnectionProfile) ConnectionProfilePostgresqlPtrOutput { return v.Postgresql }).(ConnectionProfilePostgresqlPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o ConnectionProfileOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The current connection profile state.
func (o ConnectionProfileOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type ConnectionProfileArrayOutput struct{ *pulumi.OutputState }

func (ConnectionProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectionProfile)(nil)).Elem()
}

func (o ConnectionProfileArrayOutput) ToConnectionProfileArrayOutput() ConnectionProfileArrayOutput {
	return o
}

func (o ConnectionProfileArrayOutput) ToConnectionProfileArrayOutputWithContext(ctx context.Context) ConnectionProfileArrayOutput {
	return o
}

func (o ConnectionProfileArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ConnectionProfile] {
	return pulumix.Output[[]*ConnectionProfile]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionProfileArrayOutput) Index(i pulumi.IntInput) ConnectionProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConnectionProfile {
		return vs[0].([]*ConnectionProfile)[vs[1].(int)]
	}).(ConnectionProfileOutput)
}

type ConnectionProfileMapOutput struct{ *pulumi.OutputState }

func (ConnectionProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectionProfile)(nil)).Elem()
}

func (o ConnectionProfileMapOutput) ToConnectionProfileMapOutput() ConnectionProfileMapOutput {
	return o
}

func (o ConnectionProfileMapOutput) ToConnectionProfileMapOutputWithContext(ctx context.Context) ConnectionProfileMapOutput {
	return o
}

func (o ConnectionProfileMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ConnectionProfile] {
	return pulumix.Output[map[string]*ConnectionProfile]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionProfileMapOutput) MapIndex(k pulumi.StringInput) ConnectionProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConnectionProfile {
		return vs[0].(map[string]*ConnectionProfile)[vs[1].(string)]
	}).(ConnectionProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileInput)(nil)).Elem(), &ConnectionProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileArrayInput)(nil)).Elem(), ConnectionProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileMapInput)(nil)).Elem(), ConnectionProfileMap{})
	pulumi.RegisterOutputType(ConnectionProfileOutput{})
	pulumi.RegisterOutputType(ConnectionProfileArrayOutput{})
	pulumi.RegisterOutputType(ConnectionProfileMapOutput{})
}
