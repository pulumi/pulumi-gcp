// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package memorystore

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Memorystore Instance Desired User Created Endpoints
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/memorystore"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			network1, err := compute.NewNetwork(ctx, "network1", &compute.NetworkArgs{
//				Name:                  pulumi.String("net1"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			subnetNetwork1, err := compute.NewSubnetwork(ctx, "subnet_network1", &compute.SubnetworkArgs{
//				Name:        pulumi.String("subnet-net1"),
//				IpCidrRange: pulumi.String("10.0.0.248/29"),
//				Region:      pulumi.String("us-central1"),
//				Network:     network1.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			ip1Network1, err := compute.NewAddress(ctx, "ip1_network1", &compute.AddressArgs{
//				Name:        pulumi.String("ip1-net1"),
//				Region:      pulumi.String("us-central1"),
//				Subnetwork:  subnetNetwork1.ID(),
//				AddressType: pulumi.String("INTERNAL"),
//				Purpose:     pulumi.String("GCE_ENDPOINT"),
//			})
//			if err != nil {
//				return err
//			}
//			// Valkey instance without endpoints
//			instance_user_connInstance, err := memorystore.NewInstance(ctx, "instance-user-conn", &memorystore.InstanceArgs{
//				InstanceId:                pulumi.String("instance-user-conn"),
//				ShardCount:                pulumi.Int(1),
//				Location:                  pulumi.String("us-central1"),
//				DeletionProtectionEnabled: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			forwardingRule1Network1, err := compute.NewForwardingRule(ctx, "forwarding_rule1_network1", &compute.ForwardingRuleArgs{
//				Name:                pulumi.String("fwd1-net1"),
//				Region:              pulumi.String("us-central1"),
//				IpAddress:           ip1Network1.ID(),
//				LoadBalancingScheme: pulumi.String(""),
//				Network:             network1.ID(),
//				Target: pulumi.String(instance_user_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//					return &pscAttachmentDetails[0].ServiceAttachment, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			ip2Network1, err := compute.NewAddress(ctx, "ip2_network1", &compute.AddressArgs{
//				Name:        pulumi.String("ip2-net1"),
//				Region:      pulumi.String("us-central1"),
//				Subnetwork:  subnetNetwork1.ID(),
//				AddressType: pulumi.String("INTERNAL"),
//				Purpose:     pulumi.String("GCE_ENDPOINT"),
//			})
//			if err != nil {
//				return err
//			}
//			forwardingRule2Network1, err := compute.NewForwardingRule(ctx, "forwarding_rule2_network1", &compute.ForwardingRuleArgs{
//				Name:                pulumi.String("fwd2-net1"),
//				Region:              pulumi.String("us-central1"),
//				IpAddress:           ip2Network1.ID(),
//				LoadBalancingScheme: pulumi.String(""),
//				Network:             network1.ID(),
//				Target: pulumi.String(instance_user_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//					return &pscAttachmentDetails[1].ServiceAttachment, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			network2, err := compute.NewNetwork(ctx, "network2", &compute.NetworkArgs{
//				Name:                  pulumi.String("network2"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			subnetNetwork2, err := compute.NewSubnetwork(ctx, "subnet_network2", &compute.SubnetworkArgs{
//				Name:        pulumi.String("subnet-net2"),
//				IpCidrRange: pulumi.String("10.0.0.248/29"),
//				Region:      pulumi.String("us-central1"),
//				Network:     network2.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			ip1Network2, err := compute.NewAddress(ctx, "ip1_network2", &compute.AddressArgs{
//				Name:        pulumi.String("ip1-net2"),
//				Region:      pulumi.String("us-central1"),
//				Subnetwork:  subnetNetwork2.ID(),
//				AddressType: pulumi.String("INTERNAL"),
//				Purpose:     pulumi.String("GCE_ENDPOINT"),
//			})
//			if err != nil {
//				return err
//			}
//			forwardingRule1Network2, err := compute.NewForwardingRule(ctx, "forwarding_rule1_network2", &compute.ForwardingRuleArgs{
//				Name:                pulumi.String("fwd1-net2"),
//				Region:              pulumi.String("us-central1"),
//				IpAddress:           ip1Network2.ID(),
//				LoadBalancingScheme: pulumi.String(""),
//				Network:             network2.ID(),
//				Target: pulumi.String(instance_user_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//					return &pscAttachmentDetails[0].ServiceAttachment, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			ip2Network2, err := compute.NewAddress(ctx, "ip2_network2", &compute.AddressArgs{
//				Name:        pulumi.String("ip2-net2"),
//				Region:      pulumi.String("us-central1"),
//				Subnetwork:  subnetNetwork2.ID(),
//				AddressType: pulumi.String("INTERNAL"),
//				Purpose:     pulumi.String("GCE_ENDPOINT"),
//			})
//			if err != nil {
//				return err
//			}
//			forwardingRule2Network2, err := compute.NewForwardingRule(ctx, "forwarding_rule2_network2", &compute.ForwardingRuleArgs{
//				Name:                pulumi.String("fwd2-net2"),
//				Region:              pulumi.String("us-central1"),
//				IpAddress:           ip2Network2.ID(),
//				LoadBalancingScheme: pulumi.String(""),
//				Network:             network2.ID(),
//				Target: pulumi.String(instance_user_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//					return &pscAttachmentDetails[1].ServiceAttachment, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = memorystore.NewInstanceDesiredUserCreatedEndpoints(ctx, "instance-user-conn", &memorystore.InstanceDesiredUserCreatedEndpointsArgs{
//				Name:   pulumi.String("instance-user-conn"),
//				Region: pulumi.String("us-central1"),
//				DesiredUserCreatedEndpoints: memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArray{
//					&memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArgs{
//						Connections: memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionArray{
//							&memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionArgs{
//								PscConnection: &memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionPscConnectionArgs{
//									PscConnectionId: forwardingRule1Network1.PscConnectionId,
//									IpAddress:       ip1Network1.Address,
//									ForwardingRule:  forwardingRule1Network1.ID(),
//									Network:         network1.ID(),
//									ServiceAttachment: instance_user_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//										return &pscAttachmentDetails[0].ServiceAttachment, nil
//									}).(pulumi.StringPtrOutput),
//								},
//							},
//							&memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionArgs{
//								PscConnection: &memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionPscConnectionArgs{
//									PscConnectionId: forwardingRule2Network1.PscConnectionId,
//									IpAddress:       ip2Network1.Address,
//									ForwardingRule:  forwardingRule2Network1.ID(),
//									Network:         network1.ID(),
//									ServiceAttachment: instance_user_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//										return &pscAttachmentDetails[1].ServiceAttachment, nil
//									}).(pulumi.StringPtrOutput),
//								},
//							},
//						},
//					},
//					&memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArgs{
//						Connections: memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionArray{
//							&memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionArgs{
//								PscConnection: &memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionPscConnectionArgs{
//									PscConnectionId: forwardingRule1Network2.PscConnectionId,
//									IpAddress:       ip1Network2.Address,
//									ForwardingRule:  forwardingRule1Network2.ID(),
//									Network:         network2.ID(),
//									ServiceAttachment: instance_user_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//										return &pscAttachmentDetails[0].ServiceAttachment, nil
//									}).(pulumi.StringPtrOutput),
//								},
//							},
//							&memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionArgs{
//								PscConnection: &memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionPscConnectionArgs{
//									PscConnectionId: forwardingRule2Network2.PscConnectionId,
//									IpAddress:       ip2Network2.Address,
//									ForwardingRule:  forwardingRule2Network2.ID(),
//									Network:         network2.ID(),
//									ServiceAttachment: instance_user_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//										return &pscAttachmentDetails[1].ServiceAttachment, nil
//									}).(pulumi.StringPtrOutput),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = organizations.LookupProject(ctx, &organizations.LookupProjectArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Memorystore Instance Desired User And Auto Created Endpoints
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/memorystore"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/networkconnectivity"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			network2, err := compute.NewNetwork(ctx, "network2", &compute.NetworkArgs{
//				Name:                  pulumi.String("network2"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			subnetNetwork2, err := compute.NewSubnetwork(ctx, "subnet_network2", &compute.SubnetworkArgs{
//				Name:        pulumi.String("subnet-net2"),
//				IpCidrRange: pulumi.String("10.0.0.248/29"),
//				Region:      pulumi.String("us-central1"),
//				Network:     network2.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			ip1Network2, err := compute.NewAddress(ctx, "ip1_network2", &compute.AddressArgs{
//				Name:        pulumi.String("ip1-net2"),
//				Region:      pulumi.String("us-central1"),
//				Subnetwork:  subnetNetwork2.ID(),
//				AddressType: pulumi.String("INTERNAL"),
//				Purpose:     pulumi.String("GCE_ENDPOINT"),
//			})
//			if err != nil {
//				return err
//			}
//			network1, err := compute.NewNetwork(ctx, "network1", &compute.NetworkArgs{
//				Name:                  pulumi.String("net1"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			subnetNetwork1, err := compute.NewSubnetwork(ctx, "subnet_network1", &compute.SubnetworkArgs{
//				Name:        pulumi.String("subnet-net1"),
//				IpCidrRange: pulumi.String("10.0.0.248/29"),
//				Region:      pulumi.String("us-central1"),
//				Network:     network1.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_default, err := networkconnectivity.NewServiceConnectionPolicy(ctx, "default", &networkconnectivity.ServiceConnectionPolicyArgs{
//				Name:         pulumi.String("scpolicy"),
//				Location:     pulumi.String("us-central1"),
//				ServiceClass: pulumi.String("gcp-memorystore"),
//				Description:  pulumi.String("my basic service connection policy"),
//				Network:      network1.ID(),
//				PscConfig: &networkconnectivity.ServiceConnectionPolicyPscConfigArgs{
//					Subnetworks: pulumi.StringArray{
//						subnetNetwork1.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			project, err := organizations.LookupProject(ctx, &organizations.LookupProjectArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			// valkey instance with endpoints
//			instance_user_auto_connInstance, err := memorystore.NewInstance(ctx, "instance-user-auto-conn", &memorystore.InstanceArgs{
//				InstanceId: pulumi.String("instance-user-auto-conn"),
//				ShardCount: pulumi.Int(1),
//				DesiredAutoCreatedEndpoints: memorystore.InstanceDesiredAutoCreatedEndpointArray{
//					&memorystore.InstanceDesiredAutoCreatedEndpointArgs{
//						Network:   network1.ID(),
//						ProjectId: pulumi.String(project.ProjectId),
//					},
//				},
//				Location:                  pulumi.String("us-central1"),
//				DeletionProtectionEnabled: pulumi.Bool(false),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				_default,
//			}))
//			if err != nil {
//				return err
//			}
//			forwardingRule1Network2, err := compute.NewForwardingRule(ctx, "forwarding_rule1_network2", &compute.ForwardingRuleArgs{
//				Name:                pulumi.String("fwd1-net2"),
//				Region:              pulumi.String("us-central1"),
//				IpAddress:           ip1Network2.ID(),
//				LoadBalancingScheme: pulumi.String(""),
//				Network:             network2.ID(),
//				Target: pulumi.String(instance_user_auto_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//					return &pscAttachmentDetails[0].ServiceAttachment, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			ip2Network2, err := compute.NewAddress(ctx, "ip2_network2", &compute.AddressArgs{
//				Name:        pulumi.String("ip2-net2"),
//				Region:      pulumi.String("us-central1"),
//				Subnetwork:  subnetNetwork2.ID(),
//				AddressType: pulumi.String("INTERNAL"),
//				Purpose:     pulumi.String("GCE_ENDPOINT"),
//			})
//			if err != nil {
//				return err
//			}
//			forwardingRule2Network2, err := compute.NewForwardingRule(ctx, "forwarding_rule2_network2", &compute.ForwardingRuleArgs{
//				Name:                pulumi.String("fwd2-net2"),
//				Region:              pulumi.String("us-central1"),
//				IpAddress:           ip2Network2.ID(),
//				LoadBalancingScheme: pulumi.String(""),
//				Network:             network2.ID(),
//				Target: pulumi.String(instance_user_auto_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//					return &pscAttachmentDetails[1].ServiceAttachment, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = memorystore.NewInstanceDesiredUserCreatedEndpoints(ctx, "instance-user-auto-conn", &memorystore.InstanceDesiredUserCreatedEndpointsArgs{
//				Name:   pulumi.String("instance-user-auto-conn"),
//				Region: pulumi.String("us-central1"),
//				DesiredUserCreatedEndpoints: memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArray{
//					&memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArgs{
//						Connections: memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionArray{
//							&memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionArgs{
//								PscConnection: &memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionPscConnectionArgs{
//									PscConnectionId: forwardingRule1Network2.PscConnectionId,
//									IpAddress:       ip1Network2.Address,
//									ForwardingRule:  forwardingRule1Network2.ID(),
//									Network:         network2.ID(),
//									ServiceAttachment: instance_user_auto_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//										return &pscAttachmentDetails[0].ServiceAttachment, nil
//									}).(pulumi.StringPtrOutput),
//								},
//							},
//							&memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionArgs{
//								PscConnection: &memorystore.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointConnectionPscConnectionArgs{
//									PscConnectionId: forwardingRule2Network2.PscConnectionId,
//									IpAddress:       ip2Network2.Address,
//									ForwardingRule:  forwardingRule2Network2.ID(),
//									Network:         network2.ID(),
//									ServiceAttachment: instance_user_auto_connInstance.PscAttachmentDetails.ApplyT(func(pscAttachmentDetails []memorystore.InstancePscAttachmentDetail) (*string, error) {
//										return &pscAttachmentDetails[1].ServiceAttachment, nil
//									}).(pulumi.StringPtrOutput),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// InstanceDesiredUserCreatedEndpoints can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{region}}/instances/{{name}}`
//
// * `{{project}}/{{region}}/{{name}}`
//
// * `{{region}}/{{name}}`
//
// * `{{name}}`
//
// When using the `pulumi import` command, InstanceDesiredUserCreatedEndpoints can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:memorystore/instanceDesiredUserCreatedEndpoints:InstanceDesiredUserCreatedEndpoints default projects/{{project}}/locations/{{region}}/instances/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:memorystore/instanceDesiredUserCreatedEndpoints:InstanceDesiredUserCreatedEndpoints default {{project}}/{{region}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:memorystore/instanceDesiredUserCreatedEndpoints:InstanceDesiredUserCreatedEndpoints default {{region}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:memorystore/instanceDesiredUserCreatedEndpoints:InstanceDesiredUserCreatedEndpoints default {{name}}
// ```
type InstanceDesiredUserCreatedEndpoints struct {
	pulumi.CustomResourceState

	// A list of desired user endpoints
	// Structure is documented below.
	DesiredUserCreatedEndpoints InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArrayOutput `pulumi:"desiredUserCreatedEndpoints"`
	// The name of the Memorystore instance these endpoints should be added to.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the region of the Memorystore instance these endpoints should be added to.
	//
	// ***
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewInstanceDesiredUserCreatedEndpoints registers a new resource with the given unique name, arguments, and options.
func NewInstanceDesiredUserCreatedEndpoints(ctx *pulumi.Context,
	name string, args *InstanceDesiredUserCreatedEndpointsArgs, opts ...pulumi.ResourceOption) (*InstanceDesiredUserCreatedEndpoints, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceDesiredUserCreatedEndpoints
	err := ctx.RegisterResource("gcp:memorystore/instanceDesiredUserCreatedEndpoints:InstanceDesiredUserCreatedEndpoints", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceDesiredUserCreatedEndpoints gets an existing InstanceDesiredUserCreatedEndpoints resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceDesiredUserCreatedEndpoints(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceDesiredUserCreatedEndpointsState, opts ...pulumi.ResourceOption) (*InstanceDesiredUserCreatedEndpoints, error) {
	var resource InstanceDesiredUserCreatedEndpoints
	err := ctx.ReadResource("gcp:memorystore/instanceDesiredUserCreatedEndpoints:InstanceDesiredUserCreatedEndpoints", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceDesiredUserCreatedEndpoints resources.
type instanceDesiredUserCreatedEndpointsState struct {
	// A list of desired user endpoints
	// Structure is documented below.
	DesiredUserCreatedEndpoints []InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpoint `pulumi:"desiredUserCreatedEndpoints"`
	// The name of the Memorystore instance these endpoints should be added to.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The name of the region of the Memorystore instance these endpoints should be added to.
	//
	// ***
	Region *string `pulumi:"region"`
}

type InstanceDesiredUserCreatedEndpointsState struct {
	// A list of desired user endpoints
	// Structure is documented below.
	DesiredUserCreatedEndpoints InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArrayInput
	// The name of the Memorystore instance these endpoints should be added to.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The name of the region of the Memorystore instance these endpoints should be added to.
	//
	// ***
	Region pulumi.StringPtrInput
}

func (InstanceDesiredUserCreatedEndpointsState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceDesiredUserCreatedEndpointsState)(nil)).Elem()
}

type instanceDesiredUserCreatedEndpointsArgs struct {
	// A list of desired user endpoints
	// Structure is documented below.
	DesiredUserCreatedEndpoints []InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpoint `pulumi:"desiredUserCreatedEndpoints"`
	// The name of the Memorystore instance these endpoints should be added to.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The name of the region of the Memorystore instance these endpoints should be added to.
	//
	// ***
	Region string `pulumi:"region"`
}

// The set of arguments for constructing a InstanceDesiredUserCreatedEndpoints resource.
type InstanceDesiredUserCreatedEndpointsArgs struct {
	// A list of desired user endpoints
	// Structure is documented below.
	DesiredUserCreatedEndpoints InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArrayInput
	// The name of the Memorystore instance these endpoints should be added to.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The name of the region of the Memorystore instance these endpoints should be added to.
	//
	// ***
	Region pulumi.StringInput
}

func (InstanceDesiredUserCreatedEndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceDesiredUserCreatedEndpointsArgs)(nil)).Elem()
}

type InstanceDesiredUserCreatedEndpointsInput interface {
	pulumi.Input

	ToInstanceDesiredUserCreatedEndpointsOutput() InstanceDesiredUserCreatedEndpointsOutput
	ToInstanceDesiredUserCreatedEndpointsOutputWithContext(ctx context.Context) InstanceDesiredUserCreatedEndpointsOutput
}

func (*InstanceDesiredUserCreatedEndpoints) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDesiredUserCreatedEndpoints)(nil)).Elem()
}

func (i *InstanceDesiredUserCreatedEndpoints) ToInstanceDesiredUserCreatedEndpointsOutput() InstanceDesiredUserCreatedEndpointsOutput {
	return i.ToInstanceDesiredUserCreatedEndpointsOutputWithContext(context.Background())
}

func (i *InstanceDesiredUserCreatedEndpoints) ToInstanceDesiredUserCreatedEndpointsOutputWithContext(ctx context.Context) InstanceDesiredUserCreatedEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDesiredUserCreatedEndpointsOutput)
}

// InstanceDesiredUserCreatedEndpointsArrayInput is an input type that accepts InstanceDesiredUserCreatedEndpointsArray and InstanceDesiredUserCreatedEndpointsArrayOutput values.
// You can construct a concrete instance of `InstanceDesiredUserCreatedEndpointsArrayInput` via:
//
//	InstanceDesiredUserCreatedEndpointsArray{ InstanceDesiredUserCreatedEndpointsArgs{...} }
type InstanceDesiredUserCreatedEndpointsArrayInput interface {
	pulumi.Input

	ToInstanceDesiredUserCreatedEndpointsArrayOutput() InstanceDesiredUserCreatedEndpointsArrayOutput
	ToInstanceDesiredUserCreatedEndpointsArrayOutputWithContext(context.Context) InstanceDesiredUserCreatedEndpointsArrayOutput
}

type InstanceDesiredUserCreatedEndpointsArray []InstanceDesiredUserCreatedEndpointsInput

func (InstanceDesiredUserCreatedEndpointsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceDesiredUserCreatedEndpoints)(nil)).Elem()
}

func (i InstanceDesiredUserCreatedEndpointsArray) ToInstanceDesiredUserCreatedEndpointsArrayOutput() InstanceDesiredUserCreatedEndpointsArrayOutput {
	return i.ToInstanceDesiredUserCreatedEndpointsArrayOutputWithContext(context.Background())
}

func (i InstanceDesiredUserCreatedEndpointsArray) ToInstanceDesiredUserCreatedEndpointsArrayOutputWithContext(ctx context.Context) InstanceDesiredUserCreatedEndpointsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDesiredUserCreatedEndpointsArrayOutput)
}

// InstanceDesiredUserCreatedEndpointsMapInput is an input type that accepts InstanceDesiredUserCreatedEndpointsMap and InstanceDesiredUserCreatedEndpointsMapOutput values.
// You can construct a concrete instance of `InstanceDesiredUserCreatedEndpointsMapInput` via:
//
//	InstanceDesiredUserCreatedEndpointsMap{ "key": InstanceDesiredUserCreatedEndpointsArgs{...} }
type InstanceDesiredUserCreatedEndpointsMapInput interface {
	pulumi.Input

	ToInstanceDesiredUserCreatedEndpointsMapOutput() InstanceDesiredUserCreatedEndpointsMapOutput
	ToInstanceDesiredUserCreatedEndpointsMapOutputWithContext(context.Context) InstanceDesiredUserCreatedEndpointsMapOutput
}

type InstanceDesiredUserCreatedEndpointsMap map[string]InstanceDesiredUserCreatedEndpointsInput

func (InstanceDesiredUserCreatedEndpointsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceDesiredUserCreatedEndpoints)(nil)).Elem()
}

func (i InstanceDesiredUserCreatedEndpointsMap) ToInstanceDesiredUserCreatedEndpointsMapOutput() InstanceDesiredUserCreatedEndpointsMapOutput {
	return i.ToInstanceDesiredUserCreatedEndpointsMapOutputWithContext(context.Background())
}

func (i InstanceDesiredUserCreatedEndpointsMap) ToInstanceDesiredUserCreatedEndpointsMapOutputWithContext(ctx context.Context) InstanceDesiredUserCreatedEndpointsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDesiredUserCreatedEndpointsMapOutput)
}

type InstanceDesiredUserCreatedEndpointsOutput struct{ *pulumi.OutputState }

func (InstanceDesiredUserCreatedEndpointsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDesiredUserCreatedEndpoints)(nil)).Elem()
}

func (o InstanceDesiredUserCreatedEndpointsOutput) ToInstanceDesiredUserCreatedEndpointsOutput() InstanceDesiredUserCreatedEndpointsOutput {
	return o
}

func (o InstanceDesiredUserCreatedEndpointsOutput) ToInstanceDesiredUserCreatedEndpointsOutputWithContext(ctx context.Context) InstanceDesiredUserCreatedEndpointsOutput {
	return o
}

// A list of desired user endpoints
// Structure is documented below.
func (o InstanceDesiredUserCreatedEndpointsOutput) DesiredUserCreatedEndpoints() InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArrayOutput {
	return o.ApplyT(func(v *InstanceDesiredUserCreatedEndpoints) InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArrayOutput {
		return v.DesiredUserCreatedEndpoints
	}).(InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArrayOutput)
}

// The name of the Memorystore instance these endpoints should be added to.
func (o InstanceDesiredUserCreatedEndpointsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceDesiredUserCreatedEndpoints) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InstanceDesiredUserCreatedEndpointsOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceDesiredUserCreatedEndpoints) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The name of the region of the Memorystore instance these endpoints should be added to.
//
// ***
func (o InstanceDesiredUserCreatedEndpointsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceDesiredUserCreatedEndpoints) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type InstanceDesiredUserCreatedEndpointsArrayOutput struct{ *pulumi.OutputState }

func (InstanceDesiredUserCreatedEndpointsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceDesiredUserCreatedEndpoints)(nil)).Elem()
}

func (o InstanceDesiredUserCreatedEndpointsArrayOutput) ToInstanceDesiredUserCreatedEndpointsArrayOutput() InstanceDesiredUserCreatedEndpointsArrayOutput {
	return o
}

func (o InstanceDesiredUserCreatedEndpointsArrayOutput) ToInstanceDesiredUserCreatedEndpointsArrayOutputWithContext(ctx context.Context) InstanceDesiredUserCreatedEndpointsArrayOutput {
	return o
}

func (o InstanceDesiredUserCreatedEndpointsArrayOutput) Index(i pulumi.IntInput) InstanceDesiredUserCreatedEndpointsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceDesiredUserCreatedEndpoints {
		return vs[0].([]*InstanceDesiredUserCreatedEndpoints)[vs[1].(int)]
	}).(InstanceDesiredUserCreatedEndpointsOutput)
}

type InstanceDesiredUserCreatedEndpointsMapOutput struct{ *pulumi.OutputState }

func (InstanceDesiredUserCreatedEndpointsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceDesiredUserCreatedEndpoints)(nil)).Elem()
}

func (o InstanceDesiredUserCreatedEndpointsMapOutput) ToInstanceDesiredUserCreatedEndpointsMapOutput() InstanceDesiredUserCreatedEndpointsMapOutput {
	return o
}

func (o InstanceDesiredUserCreatedEndpointsMapOutput) ToInstanceDesiredUserCreatedEndpointsMapOutputWithContext(ctx context.Context) InstanceDesiredUserCreatedEndpointsMapOutput {
	return o
}

func (o InstanceDesiredUserCreatedEndpointsMapOutput) MapIndex(k pulumi.StringInput) InstanceDesiredUserCreatedEndpointsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceDesiredUserCreatedEndpoints {
		return vs[0].(map[string]*InstanceDesiredUserCreatedEndpoints)[vs[1].(string)]
	}).(InstanceDesiredUserCreatedEndpointsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDesiredUserCreatedEndpointsInput)(nil)).Elem(), &InstanceDesiredUserCreatedEndpoints{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDesiredUserCreatedEndpointsArrayInput)(nil)).Elem(), InstanceDesiredUserCreatedEndpointsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDesiredUserCreatedEndpointsMapInput)(nil)).Elem(), InstanceDesiredUserCreatedEndpointsMap{})
	pulumi.RegisterOutputType(InstanceDesiredUserCreatedEndpointsOutput{})
	pulumi.RegisterOutputType(InstanceDesiredUserCreatedEndpointsArrayOutput{})
	pulumi.RegisterOutputType(InstanceDesiredUserCreatedEndpointsMapOutput{})
}
