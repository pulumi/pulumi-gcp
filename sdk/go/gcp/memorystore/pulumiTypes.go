// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package memorystore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceDesiredPscAutoConnection struct {
	// (Output)
	// Output only. The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network string `pulumi:"network"`
	// (Output)
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId string `pulumi:"projectId"`
}

// InstanceDesiredPscAutoConnectionInput is an input type that accepts InstanceDesiredPscAutoConnectionArgs and InstanceDesiredPscAutoConnectionOutput values.
// You can construct a concrete instance of `InstanceDesiredPscAutoConnectionInput` via:
//
//	InstanceDesiredPscAutoConnectionArgs{...}
type InstanceDesiredPscAutoConnectionInput interface {
	pulumi.Input

	ToInstanceDesiredPscAutoConnectionOutput() InstanceDesiredPscAutoConnectionOutput
	ToInstanceDesiredPscAutoConnectionOutputWithContext(context.Context) InstanceDesiredPscAutoConnectionOutput
}

type InstanceDesiredPscAutoConnectionArgs struct {
	// (Output)
	// Output only. The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network pulumi.StringInput `pulumi:"network"`
	// (Output)
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (InstanceDesiredPscAutoConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDesiredPscAutoConnection)(nil)).Elem()
}

func (i InstanceDesiredPscAutoConnectionArgs) ToInstanceDesiredPscAutoConnectionOutput() InstanceDesiredPscAutoConnectionOutput {
	return i.ToInstanceDesiredPscAutoConnectionOutputWithContext(context.Background())
}

func (i InstanceDesiredPscAutoConnectionArgs) ToInstanceDesiredPscAutoConnectionOutputWithContext(ctx context.Context) InstanceDesiredPscAutoConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDesiredPscAutoConnectionOutput)
}

// InstanceDesiredPscAutoConnectionArrayInput is an input type that accepts InstanceDesiredPscAutoConnectionArray and InstanceDesiredPscAutoConnectionArrayOutput values.
// You can construct a concrete instance of `InstanceDesiredPscAutoConnectionArrayInput` via:
//
//	InstanceDesiredPscAutoConnectionArray{ InstanceDesiredPscAutoConnectionArgs{...} }
type InstanceDesiredPscAutoConnectionArrayInput interface {
	pulumi.Input

	ToInstanceDesiredPscAutoConnectionArrayOutput() InstanceDesiredPscAutoConnectionArrayOutput
	ToInstanceDesiredPscAutoConnectionArrayOutputWithContext(context.Context) InstanceDesiredPscAutoConnectionArrayOutput
}

type InstanceDesiredPscAutoConnectionArray []InstanceDesiredPscAutoConnectionInput

func (InstanceDesiredPscAutoConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDesiredPscAutoConnection)(nil)).Elem()
}

func (i InstanceDesiredPscAutoConnectionArray) ToInstanceDesiredPscAutoConnectionArrayOutput() InstanceDesiredPscAutoConnectionArrayOutput {
	return i.ToInstanceDesiredPscAutoConnectionArrayOutputWithContext(context.Background())
}

func (i InstanceDesiredPscAutoConnectionArray) ToInstanceDesiredPscAutoConnectionArrayOutputWithContext(ctx context.Context) InstanceDesiredPscAutoConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDesiredPscAutoConnectionArrayOutput)
}

type InstanceDesiredPscAutoConnectionOutput struct{ *pulumi.OutputState }

func (InstanceDesiredPscAutoConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDesiredPscAutoConnection)(nil)).Elem()
}

func (o InstanceDesiredPscAutoConnectionOutput) ToInstanceDesiredPscAutoConnectionOutput() InstanceDesiredPscAutoConnectionOutput {
	return o
}

func (o InstanceDesiredPscAutoConnectionOutput) ToInstanceDesiredPscAutoConnectionOutputWithContext(ctx context.Context) InstanceDesiredPscAutoConnectionOutput {
	return o
}

// (Output)
// Output only. The consumer network where the IP address resides, in the form of
// projects/{project_id}/global/networks/{network_id}.
func (o InstanceDesiredPscAutoConnectionOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDesiredPscAutoConnection) string { return v.Network }).(pulumi.StringOutput)
}

// (Output)
// Output only. The consumer projectId where the forwarding rule is created from.
func (o InstanceDesiredPscAutoConnectionOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDesiredPscAutoConnection) string { return v.ProjectId }).(pulumi.StringOutput)
}

type InstanceDesiredPscAutoConnectionArrayOutput struct{ *pulumi.OutputState }

func (InstanceDesiredPscAutoConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDesiredPscAutoConnection)(nil)).Elem()
}

func (o InstanceDesiredPscAutoConnectionArrayOutput) ToInstanceDesiredPscAutoConnectionArrayOutput() InstanceDesiredPscAutoConnectionArrayOutput {
	return o
}

func (o InstanceDesiredPscAutoConnectionArrayOutput) ToInstanceDesiredPscAutoConnectionArrayOutputWithContext(ctx context.Context) InstanceDesiredPscAutoConnectionArrayOutput {
	return o
}

func (o InstanceDesiredPscAutoConnectionArrayOutput) Index(i pulumi.IntInput) InstanceDesiredPscAutoConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDesiredPscAutoConnection {
		return vs[0].([]InstanceDesiredPscAutoConnection)[vs[1].(int)]
	}).(InstanceDesiredPscAutoConnectionOutput)
}

type InstanceDiscoveryEndpoint struct {
	// (Output)
	// Output only. IP address of the exposed endpoint clients connect to.
	Address *string `pulumi:"address"`
	// (Output)
	// Output only. The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network *string `pulumi:"network"`
	// (Output)
	// Output only. The port number of the exposed endpoint.
	Port *int `pulumi:"port"`
}

// InstanceDiscoveryEndpointInput is an input type that accepts InstanceDiscoveryEndpointArgs and InstanceDiscoveryEndpointOutput values.
// You can construct a concrete instance of `InstanceDiscoveryEndpointInput` via:
//
//	InstanceDiscoveryEndpointArgs{...}
type InstanceDiscoveryEndpointInput interface {
	pulumi.Input

	ToInstanceDiscoveryEndpointOutput() InstanceDiscoveryEndpointOutput
	ToInstanceDiscoveryEndpointOutputWithContext(context.Context) InstanceDiscoveryEndpointOutput
}

type InstanceDiscoveryEndpointArgs struct {
	// (Output)
	// Output only. IP address of the exposed endpoint clients connect to.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// (Output)
	// Output only. The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// (Output)
	// Output only. The port number of the exposed endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (InstanceDiscoveryEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDiscoveryEndpoint)(nil)).Elem()
}

func (i InstanceDiscoveryEndpointArgs) ToInstanceDiscoveryEndpointOutput() InstanceDiscoveryEndpointOutput {
	return i.ToInstanceDiscoveryEndpointOutputWithContext(context.Background())
}

func (i InstanceDiscoveryEndpointArgs) ToInstanceDiscoveryEndpointOutputWithContext(ctx context.Context) InstanceDiscoveryEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiscoveryEndpointOutput)
}

// InstanceDiscoveryEndpointArrayInput is an input type that accepts InstanceDiscoveryEndpointArray and InstanceDiscoveryEndpointArrayOutput values.
// You can construct a concrete instance of `InstanceDiscoveryEndpointArrayInput` via:
//
//	InstanceDiscoveryEndpointArray{ InstanceDiscoveryEndpointArgs{...} }
type InstanceDiscoveryEndpointArrayInput interface {
	pulumi.Input

	ToInstanceDiscoveryEndpointArrayOutput() InstanceDiscoveryEndpointArrayOutput
	ToInstanceDiscoveryEndpointArrayOutputWithContext(context.Context) InstanceDiscoveryEndpointArrayOutput
}

type InstanceDiscoveryEndpointArray []InstanceDiscoveryEndpointInput

func (InstanceDiscoveryEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDiscoveryEndpoint)(nil)).Elem()
}

func (i InstanceDiscoveryEndpointArray) ToInstanceDiscoveryEndpointArrayOutput() InstanceDiscoveryEndpointArrayOutput {
	return i.ToInstanceDiscoveryEndpointArrayOutputWithContext(context.Background())
}

func (i InstanceDiscoveryEndpointArray) ToInstanceDiscoveryEndpointArrayOutputWithContext(ctx context.Context) InstanceDiscoveryEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiscoveryEndpointArrayOutput)
}

type InstanceDiscoveryEndpointOutput struct{ *pulumi.OutputState }

func (InstanceDiscoveryEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDiscoveryEndpoint)(nil)).Elem()
}

func (o InstanceDiscoveryEndpointOutput) ToInstanceDiscoveryEndpointOutput() InstanceDiscoveryEndpointOutput {
	return o
}

func (o InstanceDiscoveryEndpointOutput) ToInstanceDiscoveryEndpointOutputWithContext(ctx context.Context) InstanceDiscoveryEndpointOutput {
	return o
}

// (Output)
// Output only. IP address of the exposed endpoint clients connect to.
func (o InstanceDiscoveryEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDiscoveryEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The consumer network where the IP address resides, in the form of
// projects/{project_id}/global/networks/{network_id}.
func (o InstanceDiscoveryEndpointOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDiscoveryEndpoint) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The port number of the exposed endpoint.
func (o InstanceDiscoveryEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDiscoveryEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type InstanceDiscoveryEndpointArrayOutput struct{ *pulumi.OutputState }

func (InstanceDiscoveryEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDiscoveryEndpoint)(nil)).Elem()
}

func (o InstanceDiscoveryEndpointArrayOutput) ToInstanceDiscoveryEndpointArrayOutput() InstanceDiscoveryEndpointArrayOutput {
	return o
}

func (o InstanceDiscoveryEndpointArrayOutput) ToInstanceDiscoveryEndpointArrayOutputWithContext(ctx context.Context) InstanceDiscoveryEndpointArrayOutput {
	return o
}

func (o InstanceDiscoveryEndpointArrayOutput) Index(i pulumi.IntInput) InstanceDiscoveryEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDiscoveryEndpoint {
		return vs[0].([]InstanceDiscoveryEndpoint)[vs[1].(int)]
	}).(InstanceDiscoveryEndpointOutput)
}

type InstanceNodeConfig struct {
	// (Output)
	// Output only. Memory size in GB of the node.
	SizeGb *float64 `pulumi:"sizeGb"`
}

// InstanceNodeConfigInput is an input type that accepts InstanceNodeConfigArgs and InstanceNodeConfigOutput values.
// You can construct a concrete instance of `InstanceNodeConfigInput` via:
//
//	InstanceNodeConfigArgs{...}
type InstanceNodeConfigInput interface {
	pulumi.Input

	ToInstanceNodeConfigOutput() InstanceNodeConfigOutput
	ToInstanceNodeConfigOutputWithContext(context.Context) InstanceNodeConfigOutput
}

type InstanceNodeConfigArgs struct {
	// (Output)
	// Output only. Memory size in GB of the node.
	SizeGb pulumi.Float64PtrInput `pulumi:"sizeGb"`
}

func (InstanceNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNodeConfig)(nil)).Elem()
}

func (i InstanceNodeConfigArgs) ToInstanceNodeConfigOutput() InstanceNodeConfigOutput {
	return i.ToInstanceNodeConfigOutputWithContext(context.Background())
}

func (i InstanceNodeConfigArgs) ToInstanceNodeConfigOutputWithContext(ctx context.Context) InstanceNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeConfigOutput)
}

// InstanceNodeConfigArrayInput is an input type that accepts InstanceNodeConfigArray and InstanceNodeConfigArrayOutput values.
// You can construct a concrete instance of `InstanceNodeConfigArrayInput` via:
//
//	InstanceNodeConfigArray{ InstanceNodeConfigArgs{...} }
type InstanceNodeConfigArrayInput interface {
	pulumi.Input

	ToInstanceNodeConfigArrayOutput() InstanceNodeConfigArrayOutput
	ToInstanceNodeConfigArrayOutputWithContext(context.Context) InstanceNodeConfigArrayOutput
}

type InstanceNodeConfigArray []InstanceNodeConfigInput

func (InstanceNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNodeConfig)(nil)).Elem()
}

func (i InstanceNodeConfigArray) ToInstanceNodeConfigArrayOutput() InstanceNodeConfigArrayOutput {
	return i.ToInstanceNodeConfigArrayOutputWithContext(context.Background())
}

func (i InstanceNodeConfigArray) ToInstanceNodeConfigArrayOutputWithContext(ctx context.Context) InstanceNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeConfigArrayOutput)
}

type InstanceNodeConfigOutput struct{ *pulumi.OutputState }

func (InstanceNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNodeConfig)(nil)).Elem()
}

func (o InstanceNodeConfigOutput) ToInstanceNodeConfigOutput() InstanceNodeConfigOutput {
	return o
}

func (o InstanceNodeConfigOutput) ToInstanceNodeConfigOutputWithContext(ctx context.Context) InstanceNodeConfigOutput {
	return o
}

// (Output)
// Output only. Memory size in GB of the node.
func (o InstanceNodeConfigOutput) SizeGb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InstanceNodeConfig) *float64 { return v.SizeGb }).(pulumi.Float64PtrOutput)
}

type InstanceNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (InstanceNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNodeConfig)(nil)).Elem()
}

func (o InstanceNodeConfigArrayOutput) ToInstanceNodeConfigArrayOutput() InstanceNodeConfigArrayOutput {
	return o
}

func (o InstanceNodeConfigArrayOutput) ToInstanceNodeConfigArrayOutputWithContext(ctx context.Context) InstanceNodeConfigArrayOutput {
	return o
}

func (o InstanceNodeConfigArrayOutput) Index(i pulumi.IntInput) InstanceNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNodeConfig {
		return vs[0].([]InstanceNodeConfig)[vs[1].(int)]
	}).(InstanceNodeConfigOutput)
}

type InstancePersistenceConfig struct {
	// Configuration for AOF based persistence.
	// Structure is documented below.
	AofConfig *InstancePersistenceConfigAofConfig `pulumi:"aofConfig"`
	// Optional. Current persistence mode.
	// Possible values:
	// DISABLED
	// RDB
	// AOF
	// Possible values are: `DISABLED`, `RDB`, `AOF`.
	Mode *string `pulumi:"mode"`
	// Configuration for RDB based persistence.
	// Structure is documented below.
	RdbConfig *InstancePersistenceConfigRdbConfig `pulumi:"rdbConfig"`
}

// InstancePersistenceConfigInput is an input type that accepts InstancePersistenceConfigArgs and InstancePersistenceConfigOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigInput` via:
//
//	InstancePersistenceConfigArgs{...}
type InstancePersistenceConfigInput interface {
	pulumi.Input

	ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput
	ToInstancePersistenceConfigOutputWithContext(context.Context) InstancePersistenceConfigOutput
}

type InstancePersistenceConfigArgs struct {
	// Configuration for AOF based persistence.
	// Structure is documented below.
	AofConfig InstancePersistenceConfigAofConfigPtrInput `pulumi:"aofConfig"`
	// Optional. Current persistence mode.
	// Possible values:
	// DISABLED
	// RDB
	// AOF
	// Possible values are: `DISABLED`, `RDB`, `AOF`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Configuration for RDB based persistence.
	// Structure is documented below.
	RdbConfig InstancePersistenceConfigRdbConfigPtrInput `pulumi:"rdbConfig"`
}

func (InstancePersistenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfig)(nil)).Elem()
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput {
	return i.ToInstancePersistenceConfigOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigOutput)
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return i.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigArgs) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigOutput).ToInstancePersistenceConfigPtrOutputWithContext(ctx)
}

// InstancePersistenceConfigPtrInput is an input type that accepts InstancePersistenceConfigArgs, InstancePersistenceConfigPtr and InstancePersistenceConfigPtrOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigPtrInput` via:
//
//	        InstancePersistenceConfigArgs{...}
//
//	or:
//
//	        nil
type InstancePersistenceConfigPtrInput interface {
	pulumi.Input

	ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput
	ToInstancePersistenceConfigPtrOutputWithContext(context.Context) InstancePersistenceConfigPtrOutput
}

type instancePersistenceConfigPtrType InstancePersistenceConfigArgs

func InstancePersistenceConfigPtr(v *InstancePersistenceConfigArgs) InstancePersistenceConfigPtrInput {
	return (*instancePersistenceConfigPtrType)(v)
}

func (*instancePersistenceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfig)(nil)).Elem()
}

func (i *instancePersistenceConfigPtrType) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return i.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (i *instancePersistenceConfigPtrType) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigPtrOutput)
}

type InstancePersistenceConfigOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigOutput() InstancePersistenceConfigOutput {
	return o
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigOutput {
	return o
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return o.ToInstancePersistenceConfigPtrOutputWithContext(context.Background())
}

func (o InstancePersistenceConfigOutput) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePersistenceConfig) *InstancePersistenceConfig {
		return &v
	}).(InstancePersistenceConfigPtrOutput)
}

// Configuration for AOF based persistence.
// Structure is documented below.
func (o InstancePersistenceConfigOutput) AofConfig() InstancePersistenceConfigAofConfigPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *InstancePersistenceConfigAofConfig { return v.AofConfig }).(InstancePersistenceConfigAofConfigPtrOutput)
}

// Optional. Current persistence mode.
// Possible values:
// DISABLED
// RDB
// AOF
// Possible values are: `DISABLED`, `RDB`, `AOF`.
func (o InstancePersistenceConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Configuration for RDB based persistence.
// Structure is documented below.
func (o InstancePersistenceConfigOutput) RdbConfig() InstancePersistenceConfigRdbConfigPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfig) *InstancePersistenceConfigRdbConfig { return v.RdbConfig }).(InstancePersistenceConfigRdbConfigPtrOutput)
}

type InstancePersistenceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigPtrOutput) ToInstancePersistenceConfigPtrOutput() InstancePersistenceConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigPtrOutput) ToInstancePersistenceConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigPtrOutput) Elem() InstancePersistenceConfigOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) InstancePersistenceConfig {
		if v != nil {
			return *v
		}
		var ret InstancePersistenceConfig
		return ret
	}).(InstancePersistenceConfigOutput)
}

// Configuration for AOF based persistence.
// Structure is documented below.
func (o InstancePersistenceConfigPtrOutput) AofConfig() InstancePersistenceConfigAofConfigPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *InstancePersistenceConfigAofConfig {
		if v == nil {
			return nil
		}
		return v.AofConfig
	}).(InstancePersistenceConfigAofConfigPtrOutput)
}

// Optional. Current persistence mode.
// Possible values:
// DISABLED
// RDB
// AOF
// Possible values are: `DISABLED`, `RDB`, `AOF`.
func (o InstancePersistenceConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Configuration for RDB based persistence.
// Structure is documented below.
func (o InstancePersistenceConfigPtrOutput) RdbConfig() InstancePersistenceConfigRdbConfigPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfig) *InstancePersistenceConfigRdbConfig {
		if v == nil {
			return nil
		}
		return v.RdbConfig
	}).(InstancePersistenceConfigRdbConfigPtrOutput)
}

type InstancePersistenceConfigAofConfig struct {
	// Optional. The fsync mode.
	// Possible values:
	// NEVER
	// EVERY_SEC
	// ALWAYS
	AppendFsync *string `pulumi:"appendFsync"`
}

// InstancePersistenceConfigAofConfigInput is an input type that accepts InstancePersistenceConfigAofConfigArgs and InstancePersistenceConfigAofConfigOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigAofConfigInput` via:
//
//	InstancePersistenceConfigAofConfigArgs{...}
type InstancePersistenceConfigAofConfigInput interface {
	pulumi.Input

	ToInstancePersistenceConfigAofConfigOutput() InstancePersistenceConfigAofConfigOutput
	ToInstancePersistenceConfigAofConfigOutputWithContext(context.Context) InstancePersistenceConfigAofConfigOutput
}

type InstancePersistenceConfigAofConfigArgs struct {
	// Optional. The fsync mode.
	// Possible values:
	// NEVER
	// EVERY_SEC
	// ALWAYS
	AppendFsync pulumi.StringPtrInput `pulumi:"appendFsync"`
}

func (InstancePersistenceConfigAofConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfigAofConfig)(nil)).Elem()
}

func (i InstancePersistenceConfigAofConfigArgs) ToInstancePersistenceConfigAofConfigOutput() InstancePersistenceConfigAofConfigOutput {
	return i.ToInstancePersistenceConfigAofConfigOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigAofConfigArgs) ToInstancePersistenceConfigAofConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigAofConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigAofConfigOutput)
}

func (i InstancePersistenceConfigAofConfigArgs) ToInstancePersistenceConfigAofConfigPtrOutput() InstancePersistenceConfigAofConfigPtrOutput {
	return i.ToInstancePersistenceConfigAofConfigPtrOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigAofConfigArgs) ToInstancePersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigAofConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigAofConfigOutput).ToInstancePersistenceConfigAofConfigPtrOutputWithContext(ctx)
}

// InstancePersistenceConfigAofConfigPtrInput is an input type that accepts InstancePersistenceConfigAofConfigArgs, InstancePersistenceConfigAofConfigPtr and InstancePersistenceConfigAofConfigPtrOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigAofConfigPtrInput` via:
//
//	        InstancePersistenceConfigAofConfigArgs{...}
//
//	or:
//
//	        nil
type InstancePersistenceConfigAofConfigPtrInput interface {
	pulumi.Input

	ToInstancePersistenceConfigAofConfigPtrOutput() InstancePersistenceConfigAofConfigPtrOutput
	ToInstancePersistenceConfigAofConfigPtrOutputWithContext(context.Context) InstancePersistenceConfigAofConfigPtrOutput
}

type instancePersistenceConfigAofConfigPtrType InstancePersistenceConfigAofConfigArgs

func InstancePersistenceConfigAofConfigPtr(v *InstancePersistenceConfigAofConfigArgs) InstancePersistenceConfigAofConfigPtrInput {
	return (*instancePersistenceConfigAofConfigPtrType)(v)
}

func (*instancePersistenceConfigAofConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfigAofConfig)(nil)).Elem()
}

func (i *instancePersistenceConfigAofConfigPtrType) ToInstancePersistenceConfigAofConfigPtrOutput() InstancePersistenceConfigAofConfigPtrOutput {
	return i.ToInstancePersistenceConfigAofConfigPtrOutputWithContext(context.Background())
}

func (i *instancePersistenceConfigAofConfigPtrType) ToInstancePersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigAofConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigAofConfigPtrOutput)
}

type InstancePersistenceConfigAofConfigOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigAofConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfigAofConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigAofConfigOutput) ToInstancePersistenceConfigAofConfigOutput() InstancePersistenceConfigAofConfigOutput {
	return o
}

func (o InstancePersistenceConfigAofConfigOutput) ToInstancePersistenceConfigAofConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigAofConfigOutput {
	return o
}

func (o InstancePersistenceConfigAofConfigOutput) ToInstancePersistenceConfigAofConfigPtrOutput() InstancePersistenceConfigAofConfigPtrOutput {
	return o.ToInstancePersistenceConfigAofConfigPtrOutputWithContext(context.Background())
}

func (o InstancePersistenceConfigAofConfigOutput) ToInstancePersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigAofConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePersistenceConfigAofConfig) *InstancePersistenceConfigAofConfig {
		return &v
	}).(InstancePersistenceConfigAofConfigPtrOutput)
}

// Optional. The fsync mode.
// Possible values:
// NEVER
// EVERY_SEC
// ALWAYS
func (o InstancePersistenceConfigAofConfigOutput) AppendFsync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfigAofConfig) *string { return v.AppendFsync }).(pulumi.StringPtrOutput)
}

type InstancePersistenceConfigAofConfigPtrOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigAofConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfigAofConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigAofConfigPtrOutput) ToInstancePersistenceConfigAofConfigPtrOutput() InstancePersistenceConfigAofConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigAofConfigPtrOutput) ToInstancePersistenceConfigAofConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigAofConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigAofConfigPtrOutput) Elem() InstancePersistenceConfigAofConfigOutput {
	return o.ApplyT(func(v *InstancePersistenceConfigAofConfig) InstancePersistenceConfigAofConfig {
		if v != nil {
			return *v
		}
		var ret InstancePersistenceConfigAofConfig
		return ret
	}).(InstancePersistenceConfigAofConfigOutput)
}

// Optional. The fsync mode.
// Possible values:
// NEVER
// EVERY_SEC
// ALWAYS
func (o InstancePersistenceConfigAofConfigPtrOutput) AppendFsync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfigAofConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppendFsync
	}).(pulumi.StringPtrOutput)
}

type InstancePersistenceConfigRdbConfig struct {
	// Optional. Period between RDB snapshots.
	// Possible values:
	// ONE_HOUR
	// SIX_HOURS
	// TWELVE_HOURS
	// TWENTY_FOUR_HOURS
	RdbSnapshotPeriod *string `pulumi:"rdbSnapshotPeriod"`
	// Optional. Time that the first snapshot was/will be attempted, and to which future
	// snapshots will be aligned. If not provided, the current time will be
	// used.
	RdbSnapshotStartTime *string `pulumi:"rdbSnapshotStartTime"`
}

// InstancePersistenceConfigRdbConfigInput is an input type that accepts InstancePersistenceConfigRdbConfigArgs and InstancePersistenceConfigRdbConfigOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigRdbConfigInput` via:
//
//	InstancePersistenceConfigRdbConfigArgs{...}
type InstancePersistenceConfigRdbConfigInput interface {
	pulumi.Input

	ToInstancePersistenceConfigRdbConfigOutput() InstancePersistenceConfigRdbConfigOutput
	ToInstancePersistenceConfigRdbConfigOutputWithContext(context.Context) InstancePersistenceConfigRdbConfigOutput
}

type InstancePersistenceConfigRdbConfigArgs struct {
	// Optional. Period between RDB snapshots.
	// Possible values:
	// ONE_HOUR
	// SIX_HOURS
	// TWELVE_HOURS
	// TWENTY_FOUR_HOURS
	RdbSnapshotPeriod pulumi.StringPtrInput `pulumi:"rdbSnapshotPeriod"`
	// Optional. Time that the first snapshot was/will be attempted, and to which future
	// snapshots will be aligned. If not provided, the current time will be
	// used.
	RdbSnapshotStartTime pulumi.StringPtrInput `pulumi:"rdbSnapshotStartTime"`
}

func (InstancePersistenceConfigRdbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfigRdbConfig)(nil)).Elem()
}

func (i InstancePersistenceConfigRdbConfigArgs) ToInstancePersistenceConfigRdbConfigOutput() InstancePersistenceConfigRdbConfigOutput {
	return i.ToInstancePersistenceConfigRdbConfigOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigRdbConfigArgs) ToInstancePersistenceConfigRdbConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigRdbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigRdbConfigOutput)
}

func (i InstancePersistenceConfigRdbConfigArgs) ToInstancePersistenceConfigRdbConfigPtrOutput() InstancePersistenceConfigRdbConfigPtrOutput {
	return i.ToInstancePersistenceConfigRdbConfigPtrOutputWithContext(context.Background())
}

func (i InstancePersistenceConfigRdbConfigArgs) ToInstancePersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigRdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigRdbConfigOutput).ToInstancePersistenceConfigRdbConfigPtrOutputWithContext(ctx)
}

// InstancePersistenceConfigRdbConfigPtrInput is an input type that accepts InstancePersistenceConfigRdbConfigArgs, InstancePersistenceConfigRdbConfigPtr and InstancePersistenceConfigRdbConfigPtrOutput values.
// You can construct a concrete instance of `InstancePersistenceConfigRdbConfigPtrInput` via:
//
//	        InstancePersistenceConfigRdbConfigArgs{...}
//
//	or:
//
//	        nil
type InstancePersistenceConfigRdbConfigPtrInput interface {
	pulumi.Input

	ToInstancePersistenceConfigRdbConfigPtrOutput() InstancePersistenceConfigRdbConfigPtrOutput
	ToInstancePersistenceConfigRdbConfigPtrOutputWithContext(context.Context) InstancePersistenceConfigRdbConfigPtrOutput
}

type instancePersistenceConfigRdbConfigPtrType InstancePersistenceConfigRdbConfigArgs

func InstancePersistenceConfigRdbConfigPtr(v *InstancePersistenceConfigRdbConfigArgs) InstancePersistenceConfigRdbConfigPtrInput {
	return (*instancePersistenceConfigRdbConfigPtrType)(v)
}

func (*instancePersistenceConfigRdbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfigRdbConfig)(nil)).Elem()
}

func (i *instancePersistenceConfigRdbConfigPtrType) ToInstancePersistenceConfigRdbConfigPtrOutput() InstancePersistenceConfigRdbConfigPtrOutput {
	return i.ToInstancePersistenceConfigRdbConfigPtrOutputWithContext(context.Background())
}

func (i *instancePersistenceConfigRdbConfigPtrType) ToInstancePersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigRdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePersistenceConfigRdbConfigPtrOutput)
}

type InstancePersistenceConfigRdbConfigOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigRdbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePersistenceConfigRdbConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigRdbConfigOutput) ToInstancePersistenceConfigRdbConfigOutput() InstancePersistenceConfigRdbConfigOutput {
	return o
}

func (o InstancePersistenceConfigRdbConfigOutput) ToInstancePersistenceConfigRdbConfigOutputWithContext(ctx context.Context) InstancePersistenceConfigRdbConfigOutput {
	return o
}

func (o InstancePersistenceConfigRdbConfigOutput) ToInstancePersistenceConfigRdbConfigPtrOutput() InstancePersistenceConfigRdbConfigPtrOutput {
	return o.ToInstancePersistenceConfigRdbConfigPtrOutputWithContext(context.Background())
}

func (o InstancePersistenceConfigRdbConfigOutput) ToInstancePersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigRdbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePersistenceConfigRdbConfig) *InstancePersistenceConfigRdbConfig {
		return &v
	}).(InstancePersistenceConfigRdbConfigPtrOutput)
}

// Optional. Period between RDB snapshots.
// Possible values:
// ONE_HOUR
// SIX_HOURS
// TWELVE_HOURS
// TWENTY_FOUR_HOURS
func (o InstancePersistenceConfigRdbConfigOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfigRdbConfig) *string { return v.RdbSnapshotPeriod }).(pulumi.StringPtrOutput)
}

// Optional. Time that the first snapshot was/will be attempted, and to which future
// snapshots will be aligned. If not provided, the current time will be
// used.
func (o InstancePersistenceConfigRdbConfigOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePersistenceConfigRdbConfig) *string { return v.RdbSnapshotStartTime }).(pulumi.StringPtrOutput)
}

type InstancePersistenceConfigRdbConfigPtrOutput struct{ *pulumi.OutputState }

func (InstancePersistenceConfigRdbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePersistenceConfigRdbConfig)(nil)).Elem()
}

func (o InstancePersistenceConfigRdbConfigPtrOutput) ToInstancePersistenceConfigRdbConfigPtrOutput() InstancePersistenceConfigRdbConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigRdbConfigPtrOutput) ToInstancePersistenceConfigRdbConfigPtrOutputWithContext(ctx context.Context) InstancePersistenceConfigRdbConfigPtrOutput {
	return o
}

func (o InstancePersistenceConfigRdbConfigPtrOutput) Elem() InstancePersistenceConfigRdbConfigOutput {
	return o.ApplyT(func(v *InstancePersistenceConfigRdbConfig) InstancePersistenceConfigRdbConfig {
		if v != nil {
			return *v
		}
		var ret InstancePersistenceConfigRdbConfig
		return ret
	}).(InstancePersistenceConfigRdbConfigOutput)
}

// Optional. Period between RDB snapshots.
// Possible values:
// ONE_HOUR
// SIX_HOURS
// TWELVE_HOURS
// TWENTY_FOUR_HOURS
func (o InstancePersistenceConfigRdbConfigPtrOutput) RdbSnapshotPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfigRdbConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotPeriod
	}).(pulumi.StringPtrOutput)
}

// Optional. Time that the first snapshot was/will be attempted, and to which future
// snapshots will be aligned. If not provided, the current time will be
// used.
func (o InstancePersistenceConfigRdbConfigPtrOutput) RdbSnapshotStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePersistenceConfigRdbConfig) *string {
		if v == nil {
			return nil
		}
		return v.RdbSnapshotStartTime
	}).(pulumi.StringPtrOutput)
}

type InstancePscAutoConnection struct {
	// (Output)
	// Output only. The URI of the consumer side forwarding rule.
	// Format:
	// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
	ForwardingRule *string `pulumi:"forwardingRule"`
	// (Output)
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	IpAddress *string `pulumi:"ipAddress"`
	// (Output)
	// Output only. The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network *string `pulumi:"network"`
	// (Output)
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId *string `pulumi:"projectId"`
	// (Output)
	// Output only. The PSC connection id of the forwarding rule connected to the
	// service attachment.
	PscConnectionId *string `pulumi:"pscConnectionId"`
}

// InstancePscAutoConnectionInput is an input type that accepts InstancePscAutoConnectionArgs and InstancePscAutoConnectionOutput values.
// You can construct a concrete instance of `InstancePscAutoConnectionInput` via:
//
//	InstancePscAutoConnectionArgs{...}
type InstancePscAutoConnectionInput interface {
	pulumi.Input

	ToInstancePscAutoConnectionOutput() InstancePscAutoConnectionOutput
	ToInstancePscAutoConnectionOutputWithContext(context.Context) InstancePscAutoConnectionOutput
}

type InstancePscAutoConnectionArgs struct {
	// (Output)
	// Output only. The URI of the consumer side forwarding rule.
	// Format:
	// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
	ForwardingRule pulumi.StringPtrInput `pulumi:"forwardingRule"`
	// (Output)
	// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// (Output)
	// Output only. The consumer network where the IP address resides, in the form of
	// projects/{project_id}/global/networks/{network_id}.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// (Output)
	// Output only. The consumer projectId where the forwarding rule is created from.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// (Output)
	// Output only. The PSC connection id of the forwarding rule connected to the
	// service attachment.
	PscConnectionId pulumi.StringPtrInput `pulumi:"pscConnectionId"`
}

func (InstancePscAutoConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePscAutoConnection)(nil)).Elem()
}

func (i InstancePscAutoConnectionArgs) ToInstancePscAutoConnectionOutput() InstancePscAutoConnectionOutput {
	return i.ToInstancePscAutoConnectionOutputWithContext(context.Background())
}

func (i InstancePscAutoConnectionArgs) ToInstancePscAutoConnectionOutputWithContext(ctx context.Context) InstancePscAutoConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePscAutoConnectionOutput)
}

// InstancePscAutoConnectionArrayInput is an input type that accepts InstancePscAutoConnectionArray and InstancePscAutoConnectionArrayOutput values.
// You can construct a concrete instance of `InstancePscAutoConnectionArrayInput` via:
//
//	InstancePscAutoConnectionArray{ InstancePscAutoConnectionArgs{...} }
type InstancePscAutoConnectionArrayInput interface {
	pulumi.Input

	ToInstancePscAutoConnectionArrayOutput() InstancePscAutoConnectionArrayOutput
	ToInstancePscAutoConnectionArrayOutputWithContext(context.Context) InstancePscAutoConnectionArrayOutput
}

type InstancePscAutoConnectionArray []InstancePscAutoConnectionInput

func (InstancePscAutoConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePscAutoConnection)(nil)).Elem()
}

func (i InstancePscAutoConnectionArray) ToInstancePscAutoConnectionArrayOutput() InstancePscAutoConnectionArrayOutput {
	return i.ToInstancePscAutoConnectionArrayOutputWithContext(context.Background())
}

func (i InstancePscAutoConnectionArray) ToInstancePscAutoConnectionArrayOutputWithContext(ctx context.Context) InstancePscAutoConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePscAutoConnectionArrayOutput)
}

type InstancePscAutoConnectionOutput struct{ *pulumi.OutputState }

func (InstancePscAutoConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePscAutoConnection)(nil)).Elem()
}

func (o InstancePscAutoConnectionOutput) ToInstancePscAutoConnectionOutput() InstancePscAutoConnectionOutput {
	return o
}

func (o InstancePscAutoConnectionOutput) ToInstancePscAutoConnectionOutputWithContext(ctx context.Context) InstancePscAutoConnectionOutput {
	return o
}

// (Output)
// Output only. The URI of the consumer side forwarding rule.
// Format:
// projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
func (o InstancePscAutoConnectionOutput) ForwardingRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePscAutoConnection) *string { return v.ForwardingRule }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The IP allocated on the consumer network for the PSC forwarding rule.
func (o InstancePscAutoConnectionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePscAutoConnection) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The consumer network where the IP address resides, in the form of
// projects/{project_id}/global/networks/{network_id}.
func (o InstancePscAutoConnectionOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePscAutoConnection) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The consumer projectId where the forwarding rule is created from.
func (o InstancePscAutoConnectionOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePscAutoConnection) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// (Output)
// Output only. The PSC connection id of the forwarding rule connected to the
// service attachment.
func (o InstancePscAutoConnectionOutput) PscConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePscAutoConnection) *string { return v.PscConnectionId }).(pulumi.StringPtrOutput)
}

type InstancePscAutoConnectionArrayOutput struct{ *pulumi.OutputState }

func (InstancePscAutoConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePscAutoConnection)(nil)).Elem()
}

func (o InstancePscAutoConnectionArrayOutput) ToInstancePscAutoConnectionArrayOutput() InstancePscAutoConnectionArrayOutput {
	return o
}

func (o InstancePscAutoConnectionArrayOutput) ToInstancePscAutoConnectionArrayOutputWithContext(ctx context.Context) InstancePscAutoConnectionArrayOutput {
	return o
}

func (o InstancePscAutoConnectionArrayOutput) Index(i pulumi.IntInput) InstancePscAutoConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancePscAutoConnection {
		return vs[0].([]InstancePscAutoConnection)[vs[1].(int)]
	}).(InstancePscAutoConnectionOutput)
}

type InstanceStateInfo struct {
	// (Output)
	// Represents information about instance with state UPDATING.
	// Structure is documented below.
	UpdateInfos []InstanceStateInfoUpdateInfo `pulumi:"updateInfos"`
}

// InstanceStateInfoInput is an input type that accepts InstanceStateInfoArgs and InstanceStateInfoOutput values.
// You can construct a concrete instance of `InstanceStateInfoInput` via:
//
//	InstanceStateInfoArgs{...}
type InstanceStateInfoInput interface {
	pulumi.Input

	ToInstanceStateInfoOutput() InstanceStateInfoOutput
	ToInstanceStateInfoOutputWithContext(context.Context) InstanceStateInfoOutput
}

type InstanceStateInfoArgs struct {
	// (Output)
	// Represents information about instance with state UPDATING.
	// Structure is documented below.
	UpdateInfos InstanceStateInfoUpdateInfoArrayInput `pulumi:"updateInfos"`
}

func (InstanceStateInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStateInfo)(nil)).Elem()
}

func (i InstanceStateInfoArgs) ToInstanceStateInfoOutput() InstanceStateInfoOutput {
	return i.ToInstanceStateInfoOutputWithContext(context.Background())
}

func (i InstanceStateInfoArgs) ToInstanceStateInfoOutputWithContext(ctx context.Context) InstanceStateInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStateInfoOutput)
}

// InstanceStateInfoArrayInput is an input type that accepts InstanceStateInfoArray and InstanceStateInfoArrayOutput values.
// You can construct a concrete instance of `InstanceStateInfoArrayInput` via:
//
//	InstanceStateInfoArray{ InstanceStateInfoArgs{...} }
type InstanceStateInfoArrayInput interface {
	pulumi.Input

	ToInstanceStateInfoArrayOutput() InstanceStateInfoArrayOutput
	ToInstanceStateInfoArrayOutputWithContext(context.Context) InstanceStateInfoArrayOutput
}

type InstanceStateInfoArray []InstanceStateInfoInput

func (InstanceStateInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStateInfo)(nil)).Elem()
}

func (i InstanceStateInfoArray) ToInstanceStateInfoArrayOutput() InstanceStateInfoArrayOutput {
	return i.ToInstanceStateInfoArrayOutputWithContext(context.Background())
}

func (i InstanceStateInfoArray) ToInstanceStateInfoArrayOutputWithContext(ctx context.Context) InstanceStateInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStateInfoArrayOutput)
}

type InstanceStateInfoOutput struct{ *pulumi.OutputState }

func (InstanceStateInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStateInfo)(nil)).Elem()
}

func (o InstanceStateInfoOutput) ToInstanceStateInfoOutput() InstanceStateInfoOutput {
	return o
}

func (o InstanceStateInfoOutput) ToInstanceStateInfoOutputWithContext(ctx context.Context) InstanceStateInfoOutput {
	return o
}

// (Output)
// Represents information about instance with state UPDATING.
// Structure is documented below.
func (o InstanceStateInfoOutput) UpdateInfos() InstanceStateInfoUpdateInfoArrayOutput {
	return o.ApplyT(func(v InstanceStateInfo) []InstanceStateInfoUpdateInfo { return v.UpdateInfos }).(InstanceStateInfoUpdateInfoArrayOutput)
}

type InstanceStateInfoArrayOutput struct{ *pulumi.OutputState }

func (InstanceStateInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStateInfo)(nil)).Elem()
}

func (o InstanceStateInfoArrayOutput) ToInstanceStateInfoArrayOutput() InstanceStateInfoArrayOutput {
	return o
}

func (o InstanceStateInfoArrayOutput) ToInstanceStateInfoArrayOutputWithContext(ctx context.Context) InstanceStateInfoArrayOutput {
	return o
}

func (o InstanceStateInfoArrayOutput) Index(i pulumi.IntInput) InstanceStateInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceStateInfo {
		return vs[0].([]InstanceStateInfo)[vs[1].(int)]
	}).(InstanceStateInfoOutput)
}

type InstanceStateInfoUpdateInfo struct {
	// (Output)
	// Output only. Target number of replica nodes per shard for the instance.
	TargetReplicaCount *int `pulumi:"targetReplicaCount"`
	// (Output)
	// Output only. Target number of shards for the instance.
	TargetShardCount *int `pulumi:"targetShardCount"`
}

// InstanceStateInfoUpdateInfoInput is an input type that accepts InstanceStateInfoUpdateInfoArgs and InstanceStateInfoUpdateInfoOutput values.
// You can construct a concrete instance of `InstanceStateInfoUpdateInfoInput` via:
//
//	InstanceStateInfoUpdateInfoArgs{...}
type InstanceStateInfoUpdateInfoInput interface {
	pulumi.Input

	ToInstanceStateInfoUpdateInfoOutput() InstanceStateInfoUpdateInfoOutput
	ToInstanceStateInfoUpdateInfoOutputWithContext(context.Context) InstanceStateInfoUpdateInfoOutput
}

type InstanceStateInfoUpdateInfoArgs struct {
	// (Output)
	// Output only. Target number of replica nodes per shard for the instance.
	TargetReplicaCount pulumi.IntPtrInput `pulumi:"targetReplicaCount"`
	// (Output)
	// Output only. Target number of shards for the instance.
	TargetShardCount pulumi.IntPtrInput `pulumi:"targetShardCount"`
}

func (InstanceStateInfoUpdateInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStateInfoUpdateInfo)(nil)).Elem()
}

func (i InstanceStateInfoUpdateInfoArgs) ToInstanceStateInfoUpdateInfoOutput() InstanceStateInfoUpdateInfoOutput {
	return i.ToInstanceStateInfoUpdateInfoOutputWithContext(context.Background())
}

func (i InstanceStateInfoUpdateInfoArgs) ToInstanceStateInfoUpdateInfoOutputWithContext(ctx context.Context) InstanceStateInfoUpdateInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStateInfoUpdateInfoOutput)
}

// InstanceStateInfoUpdateInfoArrayInput is an input type that accepts InstanceStateInfoUpdateInfoArray and InstanceStateInfoUpdateInfoArrayOutput values.
// You can construct a concrete instance of `InstanceStateInfoUpdateInfoArrayInput` via:
//
//	InstanceStateInfoUpdateInfoArray{ InstanceStateInfoUpdateInfoArgs{...} }
type InstanceStateInfoUpdateInfoArrayInput interface {
	pulumi.Input

	ToInstanceStateInfoUpdateInfoArrayOutput() InstanceStateInfoUpdateInfoArrayOutput
	ToInstanceStateInfoUpdateInfoArrayOutputWithContext(context.Context) InstanceStateInfoUpdateInfoArrayOutput
}

type InstanceStateInfoUpdateInfoArray []InstanceStateInfoUpdateInfoInput

func (InstanceStateInfoUpdateInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStateInfoUpdateInfo)(nil)).Elem()
}

func (i InstanceStateInfoUpdateInfoArray) ToInstanceStateInfoUpdateInfoArrayOutput() InstanceStateInfoUpdateInfoArrayOutput {
	return i.ToInstanceStateInfoUpdateInfoArrayOutputWithContext(context.Background())
}

func (i InstanceStateInfoUpdateInfoArray) ToInstanceStateInfoUpdateInfoArrayOutputWithContext(ctx context.Context) InstanceStateInfoUpdateInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStateInfoUpdateInfoArrayOutput)
}

type InstanceStateInfoUpdateInfoOutput struct{ *pulumi.OutputState }

func (InstanceStateInfoUpdateInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStateInfoUpdateInfo)(nil)).Elem()
}

func (o InstanceStateInfoUpdateInfoOutput) ToInstanceStateInfoUpdateInfoOutput() InstanceStateInfoUpdateInfoOutput {
	return o
}

func (o InstanceStateInfoUpdateInfoOutput) ToInstanceStateInfoUpdateInfoOutputWithContext(ctx context.Context) InstanceStateInfoUpdateInfoOutput {
	return o
}

// (Output)
// Output only. Target number of replica nodes per shard for the instance.
func (o InstanceStateInfoUpdateInfoOutput) TargetReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceStateInfoUpdateInfo) *int { return v.TargetReplicaCount }).(pulumi.IntPtrOutput)
}

// (Output)
// Output only. Target number of shards for the instance.
func (o InstanceStateInfoUpdateInfoOutput) TargetShardCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceStateInfoUpdateInfo) *int { return v.TargetShardCount }).(pulumi.IntPtrOutput)
}

type InstanceStateInfoUpdateInfoArrayOutput struct{ *pulumi.OutputState }

func (InstanceStateInfoUpdateInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceStateInfoUpdateInfo)(nil)).Elem()
}

func (o InstanceStateInfoUpdateInfoArrayOutput) ToInstanceStateInfoUpdateInfoArrayOutput() InstanceStateInfoUpdateInfoArrayOutput {
	return o
}

func (o InstanceStateInfoUpdateInfoArrayOutput) ToInstanceStateInfoUpdateInfoArrayOutputWithContext(ctx context.Context) InstanceStateInfoUpdateInfoArrayOutput {
	return o
}

func (o InstanceStateInfoUpdateInfoArrayOutput) Index(i pulumi.IntInput) InstanceStateInfoUpdateInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceStateInfoUpdateInfo {
		return vs[0].([]InstanceStateInfoUpdateInfo)[vs[1].(int)]
	}).(InstanceStateInfoUpdateInfoOutput)
}

type InstanceZoneDistributionConfig struct {
	// Optional. Current zone distribution mode. Defaults to MULTI_ZONE.
	// Possible values:
	// MULTI_ZONE
	// SINGLE_ZONE
	// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
	Mode *string `pulumi:"mode"`
	// Optional. Defines zone where all resources will be allocated with SINGLE_ZONE mode.
	// Ignored for MULTI_ZONE mode.
	Zone *string `pulumi:"zone"`
}

// InstanceZoneDistributionConfigInput is an input type that accepts InstanceZoneDistributionConfigArgs and InstanceZoneDistributionConfigOutput values.
// You can construct a concrete instance of `InstanceZoneDistributionConfigInput` via:
//
//	InstanceZoneDistributionConfigArgs{...}
type InstanceZoneDistributionConfigInput interface {
	pulumi.Input

	ToInstanceZoneDistributionConfigOutput() InstanceZoneDistributionConfigOutput
	ToInstanceZoneDistributionConfigOutputWithContext(context.Context) InstanceZoneDistributionConfigOutput
}

type InstanceZoneDistributionConfigArgs struct {
	// Optional. Current zone distribution mode. Defaults to MULTI_ZONE.
	// Possible values:
	// MULTI_ZONE
	// SINGLE_ZONE
	// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Optional. Defines zone where all resources will be allocated with SINGLE_ZONE mode.
	// Ignored for MULTI_ZONE mode.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceZoneDistributionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceZoneDistributionConfig)(nil)).Elem()
}

func (i InstanceZoneDistributionConfigArgs) ToInstanceZoneDistributionConfigOutput() InstanceZoneDistributionConfigOutput {
	return i.ToInstanceZoneDistributionConfigOutputWithContext(context.Background())
}

func (i InstanceZoneDistributionConfigArgs) ToInstanceZoneDistributionConfigOutputWithContext(ctx context.Context) InstanceZoneDistributionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceZoneDistributionConfigOutput)
}

func (i InstanceZoneDistributionConfigArgs) ToInstanceZoneDistributionConfigPtrOutput() InstanceZoneDistributionConfigPtrOutput {
	return i.ToInstanceZoneDistributionConfigPtrOutputWithContext(context.Background())
}

func (i InstanceZoneDistributionConfigArgs) ToInstanceZoneDistributionConfigPtrOutputWithContext(ctx context.Context) InstanceZoneDistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceZoneDistributionConfigOutput).ToInstanceZoneDistributionConfigPtrOutputWithContext(ctx)
}

// InstanceZoneDistributionConfigPtrInput is an input type that accepts InstanceZoneDistributionConfigArgs, InstanceZoneDistributionConfigPtr and InstanceZoneDistributionConfigPtrOutput values.
// You can construct a concrete instance of `InstanceZoneDistributionConfigPtrInput` via:
//
//	        InstanceZoneDistributionConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceZoneDistributionConfigPtrInput interface {
	pulumi.Input

	ToInstanceZoneDistributionConfigPtrOutput() InstanceZoneDistributionConfigPtrOutput
	ToInstanceZoneDistributionConfigPtrOutputWithContext(context.Context) InstanceZoneDistributionConfigPtrOutput
}

type instanceZoneDistributionConfigPtrType InstanceZoneDistributionConfigArgs

func InstanceZoneDistributionConfigPtr(v *InstanceZoneDistributionConfigArgs) InstanceZoneDistributionConfigPtrInput {
	return (*instanceZoneDistributionConfigPtrType)(v)
}

func (*instanceZoneDistributionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceZoneDistributionConfig)(nil)).Elem()
}

func (i *instanceZoneDistributionConfigPtrType) ToInstanceZoneDistributionConfigPtrOutput() InstanceZoneDistributionConfigPtrOutput {
	return i.ToInstanceZoneDistributionConfigPtrOutputWithContext(context.Background())
}

func (i *instanceZoneDistributionConfigPtrType) ToInstanceZoneDistributionConfigPtrOutputWithContext(ctx context.Context) InstanceZoneDistributionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceZoneDistributionConfigPtrOutput)
}

type InstanceZoneDistributionConfigOutput struct{ *pulumi.OutputState }

func (InstanceZoneDistributionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceZoneDistributionConfig)(nil)).Elem()
}

func (o InstanceZoneDistributionConfigOutput) ToInstanceZoneDistributionConfigOutput() InstanceZoneDistributionConfigOutput {
	return o
}

func (o InstanceZoneDistributionConfigOutput) ToInstanceZoneDistributionConfigOutputWithContext(ctx context.Context) InstanceZoneDistributionConfigOutput {
	return o
}

func (o InstanceZoneDistributionConfigOutput) ToInstanceZoneDistributionConfigPtrOutput() InstanceZoneDistributionConfigPtrOutput {
	return o.ToInstanceZoneDistributionConfigPtrOutputWithContext(context.Background())
}

func (o InstanceZoneDistributionConfigOutput) ToInstanceZoneDistributionConfigPtrOutputWithContext(ctx context.Context) InstanceZoneDistributionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceZoneDistributionConfig) *InstanceZoneDistributionConfig {
		return &v
	}).(InstanceZoneDistributionConfigPtrOutput)
}

// Optional. Current zone distribution mode. Defaults to MULTI_ZONE.
// Possible values:
// MULTI_ZONE
// SINGLE_ZONE
// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
func (o InstanceZoneDistributionConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceZoneDistributionConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Optional. Defines zone where all resources will be allocated with SINGLE_ZONE mode.
// Ignored for MULTI_ZONE mode.
func (o InstanceZoneDistributionConfigOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceZoneDistributionConfig) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceZoneDistributionConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceZoneDistributionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceZoneDistributionConfig)(nil)).Elem()
}

func (o InstanceZoneDistributionConfigPtrOutput) ToInstanceZoneDistributionConfigPtrOutput() InstanceZoneDistributionConfigPtrOutput {
	return o
}

func (o InstanceZoneDistributionConfigPtrOutput) ToInstanceZoneDistributionConfigPtrOutputWithContext(ctx context.Context) InstanceZoneDistributionConfigPtrOutput {
	return o
}

func (o InstanceZoneDistributionConfigPtrOutput) Elem() InstanceZoneDistributionConfigOutput {
	return o.ApplyT(func(v *InstanceZoneDistributionConfig) InstanceZoneDistributionConfig {
		if v != nil {
			return *v
		}
		var ret InstanceZoneDistributionConfig
		return ret
	}).(InstanceZoneDistributionConfigOutput)
}

// Optional. Current zone distribution mode. Defaults to MULTI_ZONE.
// Possible values:
// MULTI_ZONE
// SINGLE_ZONE
// Possible values are: `MULTI_ZONE`, `SINGLE_ZONE`.
func (o InstanceZoneDistributionConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceZoneDistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Optional. Defines zone where all resources will be allocated with SINGLE_ZONE mode.
// Ignored for MULTI_ZONE mode.
func (o InstanceZoneDistributionConfigPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceZoneDistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDesiredPscAutoConnectionInput)(nil)).Elem(), InstanceDesiredPscAutoConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDesiredPscAutoConnectionArrayInput)(nil)).Elem(), InstanceDesiredPscAutoConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDiscoveryEndpointInput)(nil)).Elem(), InstanceDiscoveryEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDiscoveryEndpointArrayInput)(nil)).Elem(), InstanceDiscoveryEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeConfigInput)(nil)).Elem(), InstanceNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeConfigArrayInput)(nil)).Elem(), InstanceNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigInput)(nil)).Elem(), InstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigPtrInput)(nil)).Elem(), InstancePersistenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigAofConfigInput)(nil)).Elem(), InstancePersistenceConfigAofConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigAofConfigPtrInput)(nil)).Elem(), InstancePersistenceConfigAofConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigRdbConfigInput)(nil)).Elem(), InstancePersistenceConfigRdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePersistenceConfigRdbConfigPtrInput)(nil)).Elem(), InstancePersistenceConfigRdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePscAutoConnectionInput)(nil)).Elem(), InstancePscAutoConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePscAutoConnectionArrayInput)(nil)).Elem(), InstancePscAutoConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStateInfoInput)(nil)).Elem(), InstanceStateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStateInfoArrayInput)(nil)).Elem(), InstanceStateInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStateInfoUpdateInfoInput)(nil)).Elem(), InstanceStateInfoUpdateInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStateInfoUpdateInfoArrayInput)(nil)).Elem(), InstanceStateInfoUpdateInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceZoneDistributionConfigInput)(nil)).Elem(), InstanceZoneDistributionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceZoneDistributionConfigPtrInput)(nil)).Elem(), InstanceZoneDistributionConfigArgs{})
	pulumi.RegisterOutputType(InstanceDesiredPscAutoConnectionOutput{})
	pulumi.RegisterOutputType(InstanceDesiredPscAutoConnectionArrayOutput{})
	pulumi.RegisterOutputType(InstanceDiscoveryEndpointOutput{})
	pulumi.RegisterOutputType(InstanceDiscoveryEndpointArrayOutput{})
	pulumi.RegisterOutputType(InstanceNodeConfigOutput{})
	pulumi.RegisterOutputType(InstanceNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigAofConfigOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigAofConfigPtrOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigRdbConfigOutput{})
	pulumi.RegisterOutputType(InstancePersistenceConfigRdbConfigPtrOutput{})
	pulumi.RegisterOutputType(InstancePscAutoConnectionOutput{})
	pulumi.RegisterOutputType(InstancePscAutoConnectionArrayOutput{})
	pulumi.RegisterOutputType(InstanceStateInfoOutput{})
	pulumi.RegisterOutputType(InstanceStateInfoArrayOutput{})
	pulumi.RegisterOutputType(InstanceStateInfoUpdateInfoOutput{})
	pulumi.RegisterOutputType(InstanceStateInfoUpdateInfoArrayOutput{})
	pulumi.RegisterOutputType(InstanceZoneDistributionConfigOutput{})
	pulumi.RegisterOutputType(InstanceZoneDistributionConfigPtrOutput{})
}
