// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudtasks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type QueueAppEngineRoutingOverride struct {
	// (Output)
	// The host that the task is sent to.
	Host *string `pulumi:"host"`
	// App instance.
	// By default, the task is sent to an instance which is available when the task is attempted.
	Instance *string `pulumi:"instance"`
	// App service.
	// By default, the task is sent to the service which is the default service when the task is attempted.
	Service *string `pulumi:"service"`
	// App version.
	// By default, the task is sent to the version which is the default version when the task is attempted.
	Version *string `pulumi:"version"`
}

// QueueAppEngineRoutingOverrideInput is an input type that accepts QueueAppEngineRoutingOverrideArgs and QueueAppEngineRoutingOverrideOutput values.
// You can construct a concrete instance of `QueueAppEngineRoutingOverrideInput` via:
//
//	QueueAppEngineRoutingOverrideArgs{...}
type QueueAppEngineRoutingOverrideInput interface {
	pulumi.Input

	ToQueueAppEngineRoutingOverrideOutput() QueueAppEngineRoutingOverrideOutput
	ToQueueAppEngineRoutingOverrideOutputWithContext(context.Context) QueueAppEngineRoutingOverrideOutput
}

type QueueAppEngineRoutingOverrideArgs struct {
	// (Output)
	// The host that the task is sent to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// App instance.
	// By default, the task is sent to an instance which is available when the task is attempted.
	Instance pulumi.StringPtrInput `pulumi:"instance"`
	// App service.
	// By default, the task is sent to the service which is the default service when the task is attempted.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// App version.
	// By default, the task is sent to the version which is the default version when the task is attempted.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (QueueAppEngineRoutingOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueAppEngineRoutingOverride)(nil)).Elem()
}

func (i QueueAppEngineRoutingOverrideArgs) ToQueueAppEngineRoutingOverrideOutput() QueueAppEngineRoutingOverrideOutput {
	return i.ToQueueAppEngineRoutingOverrideOutputWithContext(context.Background())
}

func (i QueueAppEngineRoutingOverrideArgs) ToQueueAppEngineRoutingOverrideOutputWithContext(ctx context.Context) QueueAppEngineRoutingOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueAppEngineRoutingOverrideOutput)
}

func (i QueueAppEngineRoutingOverrideArgs) ToQueueAppEngineRoutingOverridePtrOutput() QueueAppEngineRoutingOverridePtrOutput {
	return i.ToQueueAppEngineRoutingOverridePtrOutputWithContext(context.Background())
}

func (i QueueAppEngineRoutingOverrideArgs) ToQueueAppEngineRoutingOverridePtrOutputWithContext(ctx context.Context) QueueAppEngineRoutingOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueAppEngineRoutingOverrideOutput).ToQueueAppEngineRoutingOverridePtrOutputWithContext(ctx)
}

// QueueAppEngineRoutingOverridePtrInput is an input type that accepts QueueAppEngineRoutingOverrideArgs, QueueAppEngineRoutingOverridePtr and QueueAppEngineRoutingOverridePtrOutput values.
// You can construct a concrete instance of `QueueAppEngineRoutingOverridePtrInput` via:
//
//	        QueueAppEngineRoutingOverrideArgs{...}
//
//	or:
//
//	        nil
type QueueAppEngineRoutingOverridePtrInput interface {
	pulumi.Input

	ToQueueAppEngineRoutingOverridePtrOutput() QueueAppEngineRoutingOverridePtrOutput
	ToQueueAppEngineRoutingOverridePtrOutputWithContext(context.Context) QueueAppEngineRoutingOverridePtrOutput
}

type queueAppEngineRoutingOverridePtrType QueueAppEngineRoutingOverrideArgs

func QueueAppEngineRoutingOverridePtr(v *QueueAppEngineRoutingOverrideArgs) QueueAppEngineRoutingOverridePtrInput {
	return (*queueAppEngineRoutingOverridePtrType)(v)
}

func (*queueAppEngineRoutingOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueAppEngineRoutingOverride)(nil)).Elem()
}

func (i *queueAppEngineRoutingOverridePtrType) ToQueueAppEngineRoutingOverridePtrOutput() QueueAppEngineRoutingOverridePtrOutput {
	return i.ToQueueAppEngineRoutingOverridePtrOutputWithContext(context.Background())
}

func (i *queueAppEngineRoutingOverridePtrType) ToQueueAppEngineRoutingOverridePtrOutputWithContext(ctx context.Context) QueueAppEngineRoutingOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueAppEngineRoutingOverridePtrOutput)
}

type QueueAppEngineRoutingOverrideOutput struct{ *pulumi.OutputState }

func (QueueAppEngineRoutingOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueAppEngineRoutingOverride)(nil)).Elem()
}

func (o QueueAppEngineRoutingOverrideOutput) ToQueueAppEngineRoutingOverrideOutput() QueueAppEngineRoutingOverrideOutput {
	return o
}

func (o QueueAppEngineRoutingOverrideOutput) ToQueueAppEngineRoutingOverrideOutputWithContext(ctx context.Context) QueueAppEngineRoutingOverrideOutput {
	return o
}

func (o QueueAppEngineRoutingOverrideOutput) ToQueueAppEngineRoutingOverridePtrOutput() QueueAppEngineRoutingOverridePtrOutput {
	return o.ToQueueAppEngineRoutingOverridePtrOutputWithContext(context.Background())
}

func (o QueueAppEngineRoutingOverrideOutput) ToQueueAppEngineRoutingOverridePtrOutputWithContext(ctx context.Context) QueueAppEngineRoutingOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueAppEngineRoutingOverride) *QueueAppEngineRoutingOverride {
		return &v
	}).(QueueAppEngineRoutingOverridePtrOutput)
}

// (Output)
// The host that the task is sent to.
func (o QueueAppEngineRoutingOverrideOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueAppEngineRoutingOverride) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// App instance.
// By default, the task is sent to an instance which is available when the task is attempted.
func (o QueueAppEngineRoutingOverrideOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueAppEngineRoutingOverride) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

// App service.
// By default, the task is sent to the service which is the default service when the task is attempted.
func (o QueueAppEngineRoutingOverrideOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueAppEngineRoutingOverride) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// App version.
// By default, the task is sent to the version which is the default version when the task is attempted.
func (o QueueAppEngineRoutingOverrideOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueAppEngineRoutingOverride) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type QueueAppEngineRoutingOverridePtrOutput struct{ *pulumi.OutputState }

func (QueueAppEngineRoutingOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueAppEngineRoutingOverride)(nil)).Elem()
}

func (o QueueAppEngineRoutingOverridePtrOutput) ToQueueAppEngineRoutingOverridePtrOutput() QueueAppEngineRoutingOverridePtrOutput {
	return o
}

func (o QueueAppEngineRoutingOverridePtrOutput) ToQueueAppEngineRoutingOverridePtrOutputWithContext(ctx context.Context) QueueAppEngineRoutingOverridePtrOutput {
	return o
}

func (o QueueAppEngineRoutingOverridePtrOutput) Elem() QueueAppEngineRoutingOverrideOutput {
	return o.ApplyT(func(v *QueueAppEngineRoutingOverride) QueueAppEngineRoutingOverride {
		if v != nil {
			return *v
		}
		var ret QueueAppEngineRoutingOverride
		return ret
	}).(QueueAppEngineRoutingOverrideOutput)
}

// (Output)
// The host that the task is sent to.
func (o QueueAppEngineRoutingOverridePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueAppEngineRoutingOverride) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// App instance.
// By default, the task is sent to an instance which is available when the task is attempted.
func (o QueueAppEngineRoutingOverridePtrOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueAppEngineRoutingOverride) *string {
		if v == nil {
			return nil
		}
		return v.Instance
	}).(pulumi.StringPtrOutput)
}

// App service.
// By default, the task is sent to the service which is the default service when the task is attempted.
func (o QueueAppEngineRoutingOverridePtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueAppEngineRoutingOverride) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// App version.
// By default, the task is sent to the version which is the default version when the task is attempted.
func (o QueueAppEngineRoutingOverridePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueAppEngineRoutingOverride) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type QueueHttpTarget struct {
	// HTTP target headers.
	// This map contains the header field names and values.
	// Headers will be set when running the CreateTask and/or BufferTask.
	// These headers represent a subset of the headers that will be configured for the task's HTTP request.
	// Some HTTP request headers will be ignored or replaced.
	// Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
	// The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
	// Structure is documented below.
	HeaderOverrides []QueueHttpTargetHeaderOverride `pulumi:"headerOverrides"`
	// The HTTP method to use for the request.
	// When specified, it overrides HttpRequest for the task.
	// Note that if the value is set to GET the body of the task will be ignored at execution time.
	// Possible values are: `HTTP_METHOD_UNSPECIFIED`, `POST`, `GET`, `HEAD`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`.
	HttpMethod *string `pulumi:"httpMethod"`
	// If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
	// This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
	// Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
	// Structure is documented below.
	OauthToken *QueueHttpTargetOauthToken `pulumi:"oauthToken"`
	// If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
	// This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
	// Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
	// Structure is documented below.
	OidcToken *QueueHttpTargetOidcToken `pulumi:"oidcToken"`
	// URI override.
	// When specified, overrides the execution URI for all the tasks in the queue.
	// Structure is documented below.
	UriOverride *QueueHttpTargetUriOverride `pulumi:"uriOverride"`
}

// QueueHttpTargetInput is an input type that accepts QueueHttpTargetArgs and QueueHttpTargetOutput values.
// You can construct a concrete instance of `QueueHttpTargetInput` via:
//
//	QueueHttpTargetArgs{...}
type QueueHttpTargetInput interface {
	pulumi.Input

	ToQueueHttpTargetOutput() QueueHttpTargetOutput
	ToQueueHttpTargetOutputWithContext(context.Context) QueueHttpTargetOutput
}

type QueueHttpTargetArgs struct {
	// HTTP target headers.
	// This map contains the header field names and values.
	// Headers will be set when running the CreateTask and/or BufferTask.
	// These headers represent a subset of the headers that will be configured for the task's HTTP request.
	// Some HTTP request headers will be ignored or replaced.
	// Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
	// The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
	// Structure is documented below.
	HeaderOverrides QueueHttpTargetHeaderOverrideArrayInput `pulumi:"headerOverrides"`
	// The HTTP method to use for the request.
	// When specified, it overrides HttpRequest for the task.
	// Note that if the value is set to GET the body of the task will be ignored at execution time.
	// Possible values are: `HTTP_METHOD_UNSPECIFIED`, `POST`, `GET`, `HEAD`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`.
	HttpMethod pulumi.StringPtrInput `pulumi:"httpMethod"`
	// If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
	// This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
	// Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
	// Structure is documented below.
	OauthToken QueueHttpTargetOauthTokenPtrInput `pulumi:"oauthToken"`
	// If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
	// This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
	// Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
	// Structure is documented below.
	OidcToken QueueHttpTargetOidcTokenPtrInput `pulumi:"oidcToken"`
	// URI override.
	// When specified, overrides the execution URI for all the tasks in the queue.
	// Structure is documented below.
	UriOverride QueueHttpTargetUriOverridePtrInput `pulumi:"uriOverride"`
}

func (QueueHttpTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTarget)(nil)).Elem()
}

func (i QueueHttpTargetArgs) ToQueueHttpTargetOutput() QueueHttpTargetOutput {
	return i.ToQueueHttpTargetOutputWithContext(context.Background())
}

func (i QueueHttpTargetArgs) ToQueueHttpTargetOutputWithContext(ctx context.Context) QueueHttpTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetOutput)
}

func (i QueueHttpTargetArgs) ToQueueHttpTargetPtrOutput() QueueHttpTargetPtrOutput {
	return i.ToQueueHttpTargetPtrOutputWithContext(context.Background())
}

func (i QueueHttpTargetArgs) ToQueueHttpTargetPtrOutputWithContext(ctx context.Context) QueueHttpTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetOutput).ToQueueHttpTargetPtrOutputWithContext(ctx)
}

// QueueHttpTargetPtrInput is an input type that accepts QueueHttpTargetArgs, QueueHttpTargetPtr and QueueHttpTargetPtrOutput values.
// You can construct a concrete instance of `QueueHttpTargetPtrInput` via:
//
//	        QueueHttpTargetArgs{...}
//
//	or:
//
//	        nil
type QueueHttpTargetPtrInput interface {
	pulumi.Input

	ToQueueHttpTargetPtrOutput() QueueHttpTargetPtrOutput
	ToQueueHttpTargetPtrOutputWithContext(context.Context) QueueHttpTargetPtrOutput
}

type queueHttpTargetPtrType QueueHttpTargetArgs

func QueueHttpTargetPtr(v *QueueHttpTargetArgs) QueueHttpTargetPtrInput {
	return (*queueHttpTargetPtrType)(v)
}

func (*queueHttpTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTarget)(nil)).Elem()
}

func (i *queueHttpTargetPtrType) ToQueueHttpTargetPtrOutput() QueueHttpTargetPtrOutput {
	return i.ToQueueHttpTargetPtrOutputWithContext(context.Background())
}

func (i *queueHttpTargetPtrType) ToQueueHttpTargetPtrOutputWithContext(ctx context.Context) QueueHttpTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetPtrOutput)
}

type QueueHttpTargetOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTarget)(nil)).Elem()
}

func (o QueueHttpTargetOutput) ToQueueHttpTargetOutput() QueueHttpTargetOutput {
	return o
}

func (o QueueHttpTargetOutput) ToQueueHttpTargetOutputWithContext(ctx context.Context) QueueHttpTargetOutput {
	return o
}

func (o QueueHttpTargetOutput) ToQueueHttpTargetPtrOutput() QueueHttpTargetPtrOutput {
	return o.ToQueueHttpTargetPtrOutputWithContext(context.Background())
}

func (o QueueHttpTargetOutput) ToQueueHttpTargetPtrOutputWithContext(ctx context.Context) QueueHttpTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueHttpTarget) *QueueHttpTarget {
		return &v
	}).(QueueHttpTargetPtrOutput)
}

// HTTP target headers.
// This map contains the header field names and values.
// Headers will be set when running the CreateTask and/or BufferTask.
// These headers represent a subset of the headers that will be configured for the task's HTTP request.
// Some HTTP request headers will be ignored or replaced.
// Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
// The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
// Structure is documented below.
func (o QueueHttpTargetOutput) HeaderOverrides() QueueHttpTargetHeaderOverrideArrayOutput {
	return o.ApplyT(func(v QueueHttpTarget) []QueueHttpTargetHeaderOverride { return v.HeaderOverrides }).(QueueHttpTargetHeaderOverrideArrayOutput)
}

// The HTTP method to use for the request.
// When specified, it overrides HttpRequest for the task.
// Note that if the value is set to GET the body of the task will be ignored at execution time.
// Possible values are: `HTTP_METHOD_UNSPECIFIED`, `POST`, `GET`, `HEAD`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`.
func (o QueueHttpTargetOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueHttpTarget) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
// This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
// Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
// Structure is documented below.
func (o QueueHttpTargetOutput) OauthToken() QueueHttpTargetOauthTokenPtrOutput {
	return o.ApplyT(func(v QueueHttpTarget) *QueueHttpTargetOauthToken { return v.OauthToken }).(QueueHttpTargetOauthTokenPtrOutput)
}

// If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
// This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
// Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
// Structure is documented below.
func (o QueueHttpTargetOutput) OidcToken() QueueHttpTargetOidcTokenPtrOutput {
	return o.ApplyT(func(v QueueHttpTarget) *QueueHttpTargetOidcToken { return v.OidcToken }).(QueueHttpTargetOidcTokenPtrOutput)
}

// URI override.
// When specified, overrides the execution URI for all the tasks in the queue.
// Structure is documented below.
func (o QueueHttpTargetOutput) UriOverride() QueueHttpTargetUriOverridePtrOutput {
	return o.ApplyT(func(v QueueHttpTarget) *QueueHttpTargetUriOverride { return v.UriOverride }).(QueueHttpTargetUriOverridePtrOutput)
}

type QueueHttpTargetPtrOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTarget)(nil)).Elem()
}

func (o QueueHttpTargetPtrOutput) ToQueueHttpTargetPtrOutput() QueueHttpTargetPtrOutput {
	return o
}

func (o QueueHttpTargetPtrOutput) ToQueueHttpTargetPtrOutputWithContext(ctx context.Context) QueueHttpTargetPtrOutput {
	return o
}

func (o QueueHttpTargetPtrOutput) Elem() QueueHttpTargetOutput {
	return o.ApplyT(func(v *QueueHttpTarget) QueueHttpTarget {
		if v != nil {
			return *v
		}
		var ret QueueHttpTarget
		return ret
	}).(QueueHttpTargetOutput)
}

// HTTP target headers.
// This map contains the header field names and values.
// Headers will be set when running the CreateTask and/or BufferTask.
// These headers represent a subset of the headers that will be configured for the task's HTTP request.
// Some HTTP request headers will be ignored or replaced.
// Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
// The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
// Structure is documented below.
func (o QueueHttpTargetPtrOutput) HeaderOverrides() QueueHttpTargetHeaderOverrideArrayOutput {
	return o.ApplyT(func(v *QueueHttpTarget) []QueueHttpTargetHeaderOverride {
		if v == nil {
			return nil
		}
		return v.HeaderOverrides
	}).(QueueHttpTargetHeaderOverrideArrayOutput)
}

// The HTTP method to use for the request.
// When specified, it overrides HttpRequest for the task.
// Note that if the value is set to GET the body of the task will be ignored at execution time.
// Possible values are: `HTTP_METHOD_UNSPECIFIED`, `POST`, `GET`, `HEAD`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`.
func (o QueueHttpTargetPtrOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTarget) *string {
		if v == nil {
			return nil
		}
		return v.HttpMethod
	}).(pulumi.StringPtrOutput)
}

// If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
// This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
// Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
// Structure is documented below.
func (o QueueHttpTargetPtrOutput) OauthToken() QueueHttpTargetOauthTokenPtrOutput {
	return o.ApplyT(func(v *QueueHttpTarget) *QueueHttpTargetOauthToken {
		if v == nil {
			return nil
		}
		return v.OauthToken
	}).(QueueHttpTargetOauthTokenPtrOutput)
}

// If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
// This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
// Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
// Structure is documented below.
func (o QueueHttpTargetPtrOutput) OidcToken() QueueHttpTargetOidcTokenPtrOutput {
	return o.ApplyT(func(v *QueueHttpTarget) *QueueHttpTargetOidcToken {
		if v == nil {
			return nil
		}
		return v.OidcToken
	}).(QueueHttpTargetOidcTokenPtrOutput)
}

// URI override.
// When specified, overrides the execution URI for all the tasks in the queue.
// Structure is documented below.
func (o QueueHttpTargetPtrOutput) UriOverride() QueueHttpTargetUriOverridePtrOutput {
	return o.ApplyT(func(v *QueueHttpTarget) *QueueHttpTargetUriOverride {
		if v == nil {
			return nil
		}
		return v.UriOverride
	}).(QueueHttpTargetUriOverridePtrOutput)
}

type QueueHttpTargetHeaderOverride struct {
	// Header embodying a key and a value.
	// Structure is documented below.
	Header QueueHttpTargetHeaderOverrideHeader `pulumi:"header"`
}

// QueueHttpTargetHeaderOverrideInput is an input type that accepts QueueHttpTargetHeaderOverrideArgs and QueueHttpTargetHeaderOverrideOutput values.
// You can construct a concrete instance of `QueueHttpTargetHeaderOverrideInput` via:
//
//	QueueHttpTargetHeaderOverrideArgs{...}
type QueueHttpTargetHeaderOverrideInput interface {
	pulumi.Input

	ToQueueHttpTargetHeaderOverrideOutput() QueueHttpTargetHeaderOverrideOutput
	ToQueueHttpTargetHeaderOverrideOutputWithContext(context.Context) QueueHttpTargetHeaderOverrideOutput
}

type QueueHttpTargetHeaderOverrideArgs struct {
	// Header embodying a key and a value.
	// Structure is documented below.
	Header QueueHttpTargetHeaderOverrideHeaderInput `pulumi:"header"`
}

func (QueueHttpTargetHeaderOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetHeaderOverride)(nil)).Elem()
}

func (i QueueHttpTargetHeaderOverrideArgs) ToQueueHttpTargetHeaderOverrideOutput() QueueHttpTargetHeaderOverrideOutput {
	return i.ToQueueHttpTargetHeaderOverrideOutputWithContext(context.Background())
}

func (i QueueHttpTargetHeaderOverrideArgs) ToQueueHttpTargetHeaderOverrideOutputWithContext(ctx context.Context) QueueHttpTargetHeaderOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetHeaderOverrideOutput)
}

// QueueHttpTargetHeaderOverrideArrayInput is an input type that accepts QueueHttpTargetHeaderOverrideArray and QueueHttpTargetHeaderOverrideArrayOutput values.
// You can construct a concrete instance of `QueueHttpTargetHeaderOverrideArrayInput` via:
//
//	QueueHttpTargetHeaderOverrideArray{ QueueHttpTargetHeaderOverrideArgs{...} }
type QueueHttpTargetHeaderOverrideArrayInput interface {
	pulumi.Input

	ToQueueHttpTargetHeaderOverrideArrayOutput() QueueHttpTargetHeaderOverrideArrayOutput
	ToQueueHttpTargetHeaderOverrideArrayOutputWithContext(context.Context) QueueHttpTargetHeaderOverrideArrayOutput
}

type QueueHttpTargetHeaderOverrideArray []QueueHttpTargetHeaderOverrideInput

func (QueueHttpTargetHeaderOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueHttpTargetHeaderOverride)(nil)).Elem()
}

func (i QueueHttpTargetHeaderOverrideArray) ToQueueHttpTargetHeaderOverrideArrayOutput() QueueHttpTargetHeaderOverrideArrayOutput {
	return i.ToQueueHttpTargetHeaderOverrideArrayOutputWithContext(context.Background())
}

func (i QueueHttpTargetHeaderOverrideArray) ToQueueHttpTargetHeaderOverrideArrayOutputWithContext(ctx context.Context) QueueHttpTargetHeaderOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetHeaderOverrideArrayOutput)
}

type QueueHttpTargetHeaderOverrideOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetHeaderOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetHeaderOverride)(nil)).Elem()
}

func (o QueueHttpTargetHeaderOverrideOutput) ToQueueHttpTargetHeaderOverrideOutput() QueueHttpTargetHeaderOverrideOutput {
	return o
}

func (o QueueHttpTargetHeaderOverrideOutput) ToQueueHttpTargetHeaderOverrideOutputWithContext(ctx context.Context) QueueHttpTargetHeaderOverrideOutput {
	return o
}

// Header embodying a key and a value.
// Structure is documented below.
func (o QueueHttpTargetHeaderOverrideOutput) Header() QueueHttpTargetHeaderOverrideHeaderOutput {
	return o.ApplyT(func(v QueueHttpTargetHeaderOverride) QueueHttpTargetHeaderOverrideHeader { return v.Header }).(QueueHttpTargetHeaderOverrideHeaderOutput)
}

type QueueHttpTargetHeaderOverrideArrayOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetHeaderOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QueueHttpTargetHeaderOverride)(nil)).Elem()
}

func (o QueueHttpTargetHeaderOverrideArrayOutput) ToQueueHttpTargetHeaderOverrideArrayOutput() QueueHttpTargetHeaderOverrideArrayOutput {
	return o
}

func (o QueueHttpTargetHeaderOverrideArrayOutput) ToQueueHttpTargetHeaderOverrideArrayOutputWithContext(ctx context.Context) QueueHttpTargetHeaderOverrideArrayOutput {
	return o
}

func (o QueueHttpTargetHeaderOverrideArrayOutput) Index(i pulumi.IntInput) QueueHttpTargetHeaderOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QueueHttpTargetHeaderOverride {
		return vs[0].([]QueueHttpTargetHeaderOverride)[vs[1].(int)]
	}).(QueueHttpTargetHeaderOverrideOutput)
}

type QueueHttpTargetHeaderOverrideHeader struct {
	// The Key of the header.
	Key string `pulumi:"key"`
	// The Value of the header.
	Value string `pulumi:"value"`
}

// QueueHttpTargetHeaderOverrideHeaderInput is an input type that accepts QueueHttpTargetHeaderOverrideHeaderArgs and QueueHttpTargetHeaderOverrideHeaderOutput values.
// You can construct a concrete instance of `QueueHttpTargetHeaderOverrideHeaderInput` via:
//
//	QueueHttpTargetHeaderOverrideHeaderArgs{...}
type QueueHttpTargetHeaderOverrideHeaderInput interface {
	pulumi.Input

	ToQueueHttpTargetHeaderOverrideHeaderOutput() QueueHttpTargetHeaderOverrideHeaderOutput
	ToQueueHttpTargetHeaderOverrideHeaderOutputWithContext(context.Context) QueueHttpTargetHeaderOverrideHeaderOutput
}

type QueueHttpTargetHeaderOverrideHeaderArgs struct {
	// The Key of the header.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of the header.
	Value pulumi.StringInput `pulumi:"value"`
}

func (QueueHttpTargetHeaderOverrideHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetHeaderOverrideHeader)(nil)).Elem()
}

func (i QueueHttpTargetHeaderOverrideHeaderArgs) ToQueueHttpTargetHeaderOverrideHeaderOutput() QueueHttpTargetHeaderOverrideHeaderOutput {
	return i.ToQueueHttpTargetHeaderOverrideHeaderOutputWithContext(context.Background())
}

func (i QueueHttpTargetHeaderOverrideHeaderArgs) ToQueueHttpTargetHeaderOverrideHeaderOutputWithContext(ctx context.Context) QueueHttpTargetHeaderOverrideHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetHeaderOverrideHeaderOutput)
}

type QueueHttpTargetHeaderOverrideHeaderOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetHeaderOverrideHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetHeaderOverrideHeader)(nil)).Elem()
}

func (o QueueHttpTargetHeaderOverrideHeaderOutput) ToQueueHttpTargetHeaderOverrideHeaderOutput() QueueHttpTargetHeaderOverrideHeaderOutput {
	return o
}

func (o QueueHttpTargetHeaderOverrideHeaderOutput) ToQueueHttpTargetHeaderOverrideHeaderOutputWithContext(ctx context.Context) QueueHttpTargetHeaderOverrideHeaderOutput {
	return o
}

// The Key of the header.
func (o QueueHttpTargetHeaderOverrideHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v QueueHttpTargetHeaderOverrideHeader) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of the header.
func (o QueueHttpTargetHeaderOverrideHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v QueueHttpTargetHeaderOverrideHeader) string { return v.Value }).(pulumi.StringOutput)
}

type QueueHttpTargetOauthToken struct {
	// OAuth scope to be used for generating OAuth access token.
	// If not specified, "https://www.googleapis.com/auth/cloud-platform" will be used.
	Scope *string `pulumi:"scope"`
	// Service account email to be used for generating OAuth token.
	// The service account must be within the same project as the queue.
	// The caller must have iam.serviceAccounts.actAs permission for the service account.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
}

// QueueHttpTargetOauthTokenInput is an input type that accepts QueueHttpTargetOauthTokenArgs and QueueHttpTargetOauthTokenOutput values.
// You can construct a concrete instance of `QueueHttpTargetOauthTokenInput` via:
//
//	QueueHttpTargetOauthTokenArgs{...}
type QueueHttpTargetOauthTokenInput interface {
	pulumi.Input

	ToQueueHttpTargetOauthTokenOutput() QueueHttpTargetOauthTokenOutput
	ToQueueHttpTargetOauthTokenOutputWithContext(context.Context) QueueHttpTargetOauthTokenOutput
}

type QueueHttpTargetOauthTokenArgs struct {
	// OAuth scope to be used for generating OAuth access token.
	// If not specified, "https://www.googleapis.com/auth/cloud-platform" will be used.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Service account email to be used for generating OAuth token.
	// The service account must be within the same project as the queue.
	// The caller must have iam.serviceAccounts.actAs permission for the service account.
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
}

func (QueueHttpTargetOauthTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetOauthToken)(nil)).Elem()
}

func (i QueueHttpTargetOauthTokenArgs) ToQueueHttpTargetOauthTokenOutput() QueueHttpTargetOauthTokenOutput {
	return i.ToQueueHttpTargetOauthTokenOutputWithContext(context.Background())
}

func (i QueueHttpTargetOauthTokenArgs) ToQueueHttpTargetOauthTokenOutputWithContext(ctx context.Context) QueueHttpTargetOauthTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetOauthTokenOutput)
}

func (i QueueHttpTargetOauthTokenArgs) ToQueueHttpTargetOauthTokenPtrOutput() QueueHttpTargetOauthTokenPtrOutput {
	return i.ToQueueHttpTargetOauthTokenPtrOutputWithContext(context.Background())
}

func (i QueueHttpTargetOauthTokenArgs) ToQueueHttpTargetOauthTokenPtrOutputWithContext(ctx context.Context) QueueHttpTargetOauthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetOauthTokenOutput).ToQueueHttpTargetOauthTokenPtrOutputWithContext(ctx)
}

// QueueHttpTargetOauthTokenPtrInput is an input type that accepts QueueHttpTargetOauthTokenArgs, QueueHttpTargetOauthTokenPtr and QueueHttpTargetOauthTokenPtrOutput values.
// You can construct a concrete instance of `QueueHttpTargetOauthTokenPtrInput` via:
//
//	        QueueHttpTargetOauthTokenArgs{...}
//
//	or:
//
//	        nil
type QueueHttpTargetOauthTokenPtrInput interface {
	pulumi.Input

	ToQueueHttpTargetOauthTokenPtrOutput() QueueHttpTargetOauthTokenPtrOutput
	ToQueueHttpTargetOauthTokenPtrOutputWithContext(context.Context) QueueHttpTargetOauthTokenPtrOutput
}

type queueHttpTargetOauthTokenPtrType QueueHttpTargetOauthTokenArgs

func QueueHttpTargetOauthTokenPtr(v *QueueHttpTargetOauthTokenArgs) QueueHttpTargetOauthTokenPtrInput {
	return (*queueHttpTargetOauthTokenPtrType)(v)
}

func (*queueHttpTargetOauthTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetOauthToken)(nil)).Elem()
}

func (i *queueHttpTargetOauthTokenPtrType) ToQueueHttpTargetOauthTokenPtrOutput() QueueHttpTargetOauthTokenPtrOutput {
	return i.ToQueueHttpTargetOauthTokenPtrOutputWithContext(context.Background())
}

func (i *queueHttpTargetOauthTokenPtrType) ToQueueHttpTargetOauthTokenPtrOutputWithContext(ctx context.Context) QueueHttpTargetOauthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetOauthTokenPtrOutput)
}

type QueueHttpTargetOauthTokenOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetOauthTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetOauthToken)(nil)).Elem()
}

func (o QueueHttpTargetOauthTokenOutput) ToQueueHttpTargetOauthTokenOutput() QueueHttpTargetOauthTokenOutput {
	return o
}

func (o QueueHttpTargetOauthTokenOutput) ToQueueHttpTargetOauthTokenOutputWithContext(ctx context.Context) QueueHttpTargetOauthTokenOutput {
	return o
}

func (o QueueHttpTargetOauthTokenOutput) ToQueueHttpTargetOauthTokenPtrOutput() QueueHttpTargetOauthTokenPtrOutput {
	return o.ToQueueHttpTargetOauthTokenPtrOutputWithContext(context.Background())
}

func (o QueueHttpTargetOauthTokenOutput) ToQueueHttpTargetOauthTokenPtrOutputWithContext(ctx context.Context) QueueHttpTargetOauthTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueHttpTargetOauthToken) *QueueHttpTargetOauthToken {
		return &v
	}).(QueueHttpTargetOauthTokenPtrOutput)
}

// OAuth scope to be used for generating OAuth access token.
// If not specified, "https://www.googleapis.com/auth/cloud-platform" will be used.
func (o QueueHttpTargetOauthTokenOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueHttpTargetOauthToken) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Service account email to be used for generating OAuth token.
// The service account must be within the same project as the queue.
// The caller must have iam.serviceAccounts.actAs permission for the service account.
func (o QueueHttpTargetOauthTokenOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v QueueHttpTargetOauthToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type QueueHttpTargetOauthTokenPtrOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetOauthTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetOauthToken)(nil)).Elem()
}

func (o QueueHttpTargetOauthTokenPtrOutput) ToQueueHttpTargetOauthTokenPtrOutput() QueueHttpTargetOauthTokenPtrOutput {
	return o
}

func (o QueueHttpTargetOauthTokenPtrOutput) ToQueueHttpTargetOauthTokenPtrOutputWithContext(ctx context.Context) QueueHttpTargetOauthTokenPtrOutput {
	return o
}

func (o QueueHttpTargetOauthTokenPtrOutput) Elem() QueueHttpTargetOauthTokenOutput {
	return o.ApplyT(func(v *QueueHttpTargetOauthToken) QueueHttpTargetOauthToken {
		if v != nil {
			return *v
		}
		var ret QueueHttpTargetOauthToken
		return ret
	}).(QueueHttpTargetOauthTokenOutput)
}

// OAuth scope to be used for generating OAuth access token.
// If not specified, "https://www.googleapis.com/auth/cloud-platform" will be used.
func (o QueueHttpTargetOauthTokenPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetOauthToken) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Service account email to be used for generating OAuth token.
// The service account must be within the same project as the queue.
// The caller must have iam.serviceAccounts.actAs permission for the service account.
func (o QueueHttpTargetOauthTokenPtrOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetOauthToken) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountEmail
	}).(pulumi.StringPtrOutput)
}

type QueueHttpTargetOidcToken struct {
	// Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.
	Audience *string `pulumi:"audience"`
	// Service account email to be used for generating OIDC token.
	// The service account must be within the same project as the queue.
	// The caller must have iam.serviceAccounts.actAs permission for the service account.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
}

// QueueHttpTargetOidcTokenInput is an input type that accepts QueueHttpTargetOidcTokenArgs and QueueHttpTargetOidcTokenOutput values.
// You can construct a concrete instance of `QueueHttpTargetOidcTokenInput` via:
//
//	QueueHttpTargetOidcTokenArgs{...}
type QueueHttpTargetOidcTokenInput interface {
	pulumi.Input

	ToQueueHttpTargetOidcTokenOutput() QueueHttpTargetOidcTokenOutput
	ToQueueHttpTargetOidcTokenOutputWithContext(context.Context) QueueHttpTargetOidcTokenOutput
}

type QueueHttpTargetOidcTokenArgs struct {
	// Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Service account email to be used for generating OIDC token.
	// The service account must be within the same project as the queue.
	// The caller must have iam.serviceAccounts.actAs permission for the service account.
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
}

func (QueueHttpTargetOidcTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetOidcToken)(nil)).Elem()
}

func (i QueueHttpTargetOidcTokenArgs) ToQueueHttpTargetOidcTokenOutput() QueueHttpTargetOidcTokenOutput {
	return i.ToQueueHttpTargetOidcTokenOutputWithContext(context.Background())
}

func (i QueueHttpTargetOidcTokenArgs) ToQueueHttpTargetOidcTokenOutputWithContext(ctx context.Context) QueueHttpTargetOidcTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetOidcTokenOutput)
}

func (i QueueHttpTargetOidcTokenArgs) ToQueueHttpTargetOidcTokenPtrOutput() QueueHttpTargetOidcTokenPtrOutput {
	return i.ToQueueHttpTargetOidcTokenPtrOutputWithContext(context.Background())
}

func (i QueueHttpTargetOidcTokenArgs) ToQueueHttpTargetOidcTokenPtrOutputWithContext(ctx context.Context) QueueHttpTargetOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetOidcTokenOutput).ToQueueHttpTargetOidcTokenPtrOutputWithContext(ctx)
}

// QueueHttpTargetOidcTokenPtrInput is an input type that accepts QueueHttpTargetOidcTokenArgs, QueueHttpTargetOidcTokenPtr and QueueHttpTargetOidcTokenPtrOutput values.
// You can construct a concrete instance of `QueueHttpTargetOidcTokenPtrInput` via:
//
//	        QueueHttpTargetOidcTokenArgs{...}
//
//	or:
//
//	        nil
type QueueHttpTargetOidcTokenPtrInput interface {
	pulumi.Input

	ToQueueHttpTargetOidcTokenPtrOutput() QueueHttpTargetOidcTokenPtrOutput
	ToQueueHttpTargetOidcTokenPtrOutputWithContext(context.Context) QueueHttpTargetOidcTokenPtrOutput
}

type queueHttpTargetOidcTokenPtrType QueueHttpTargetOidcTokenArgs

func QueueHttpTargetOidcTokenPtr(v *QueueHttpTargetOidcTokenArgs) QueueHttpTargetOidcTokenPtrInput {
	return (*queueHttpTargetOidcTokenPtrType)(v)
}

func (*queueHttpTargetOidcTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetOidcToken)(nil)).Elem()
}

func (i *queueHttpTargetOidcTokenPtrType) ToQueueHttpTargetOidcTokenPtrOutput() QueueHttpTargetOidcTokenPtrOutput {
	return i.ToQueueHttpTargetOidcTokenPtrOutputWithContext(context.Background())
}

func (i *queueHttpTargetOidcTokenPtrType) ToQueueHttpTargetOidcTokenPtrOutputWithContext(ctx context.Context) QueueHttpTargetOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetOidcTokenPtrOutput)
}

type QueueHttpTargetOidcTokenOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetOidcTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetOidcToken)(nil)).Elem()
}

func (o QueueHttpTargetOidcTokenOutput) ToQueueHttpTargetOidcTokenOutput() QueueHttpTargetOidcTokenOutput {
	return o
}

func (o QueueHttpTargetOidcTokenOutput) ToQueueHttpTargetOidcTokenOutputWithContext(ctx context.Context) QueueHttpTargetOidcTokenOutput {
	return o
}

func (o QueueHttpTargetOidcTokenOutput) ToQueueHttpTargetOidcTokenPtrOutput() QueueHttpTargetOidcTokenPtrOutput {
	return o.ToQueueHttpTargetOidcTokenPtrOutputWithContext(context.Background())
}

func (o QueueHttpTargetOidcTokenOutput) ToQueueHttpTargetOidcTokenPtrOutputWithContext(ctx context.Context) QueueHttpTargetOidcTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueHttpTargetOidcToken) *QueueHttpTargetOidcToken {
		return &v
	}).(QueueHttpTargetOidcTokenPtrOutput)
}

// Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.
func (o QueueHttpTargetOidcTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueHttpTargetOidcToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Service account email to be used for generating OIDC token.
// The service account must be within the same project as the queue.
// The caller must have iam.serviceAccounts.actAs permission for the service account.
func (o QueueHttpTargetOidcTokenOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v QueueHttpTargetOidcToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type QueueHttpTargetOidcTokenPtrOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetOidcTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetOidcToken)(nil)).Elem()
}

func (o QueueHttpTargetOidcTokenPtrOutput) ToQueueHttpTargetOidcTokenPtrOutput() QueueHttpTargetOidcTokenPtrOutput {
	return o
}

func (o QueueHttpTargetOidcTokenPtrOutput) ToQueueHttpTargetOidcTokenPtrOutputWithContext(ctx context.Context) QueueHttpTargetOidcTokenPtrOutput {
	return o
}

func (o QueueHttpTargetOidcTokenPtrOutput) Elem() QueueHttpTargetOidcTokenOutput {
	return o.ApplyT(func(v *QueueHttpTargetOidcToken) QueueHttpTargetOidcToken {
		if v != nil {
			return *v
		}
		var ret QueueHttpTargetOidcToken
		return ret
	}).(QueueHttpTargetOidcTokenOutput)
}

// Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.
func (o QueueHttpTargetOidcTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetOidcToken) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Service account email to be used for generating OIDC token.
// The service account must be within the same project as the queue.
// The caller must have iam.serviceAccounts.actAs permission for the service account.
func (o QueueHttpTargetOidcTokenPtrOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetOidcToken) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountEmail
	}).(pulumi.StringPtrOutput)
}

type QueueHttpTargetUriOverride struct {
	// Host override.
	// When specified, replaces the host part of the task URL.
	// For example, if the task URL is "https://www.google.com", and host value
	// is set to "example.net", the overridden URI will be changed to "https://example.net".
	// Host value cannot be an empty string (INVALID_ARGUMENT).
	Host *string `pulumi:"host"`
	// URI path.
	// When specified, replaces the existing path of the task URL.
	// Setting the path value to an empty string clears the URI path segment.
	// Structure is documented below.
	PathOverride *QueueHttpTargetUriOverridePathOverride `pulumi:"pathOverride"`
	// Port override.
	// When specified, replaces the port part of the task URI.
	// For instance, for a URI http://www.google.com/foo and port=123, the overridden URI becomes http://www.google.com:123/foo.
	// Note that the port value must be a positive integer.
	// Setting the port to 0 (Zero) clears the URI port.
	Port *string `pulumi:"port"`
	// URI query.
	// When specified, replaces the query part of the task URI. Setting the query value to an empty string clears the URI query segment.
	// Structure is documented below.
	QueryOverride *QueueHttpTargetUriOverrideQueryOverride `pulumi:"queryOverride"`
	// Scheme override.
	// When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS).
	// Possible values are: `HTTP`, `HTTPS`.
	Scheme *string `pulumi:"scheme"`
	// URI Override Enforce Mode
	// When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS.
	// Possible values are: `ALWAYS`, `IF_NOT_EXISTS`.
	UriOverrideEnforceMode *string `pulumi:"uriOverrideEnforceMode"`
}

// QueueHttpTargetUriOverrideInput is an input type that accepts QueueHttpTargetUriOverrideArgs and QueueHttpTargetUriOverrideOutput values.
// You can construct a concrete instance of `QueueHttpTargetUriOverrideInput` via:
//
//	QueueHttpTargetUriOverrideArgs{...}
type QueueHttpTargetUriOverrideInput interface {
	pulumi.Input

	ToQueueHttpTargetUriOverrideOutput() QueueHttpTargetUriOverrideOutput
	ToQueueHttpTargetUriOverrideOutputWithContext(context.Context) QueueHttpTargetUriOverrideOutput
}

type QueueHttpTargetUriOverrideArgs struct {
	// Host override.
	// When specified, replaces the host part of the task URL.
	// For example, if the task URL is "https://www.google.com", and host value
	// is set to "example.net", the overridden URI will be changed to "https://example.net".
	// Host value cannot be an empty string (INVALID_ARGUMENT).
	Host pulumi.StringPtrInput `pulumi:"host"`
	// URI path.
	// When specified, replaces the existing path of the task URL.
	// Setting the path value to an empty string clears the URI path segment.
	// Structure is documented below.
	PathOverride QueueHttpTargetUriOverridePathOverridePtrInput `pulumi:"pathOverride"`
	// Port override.
	// When specified, replaces the port part of the task URI.
	// For instance, for a URI http://www.google.com/foo and port=123, the overridden URI becomes http://www.google.com:123/foo.
	// Note that the port value must be a positive integer.
	// Setting the port to 0 (Zero) clears the URI port.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// URI query.
	// When specified, replaces the query part of the task URI. Setting the query value to an empty string clears the URI query segment.
	// Structure is documented below.
	QueryOverride QueueHttpTargetUriOverrideQueryOverridePtrInput `pulumi:"queryOverride"`
	// Scheme override.
	// When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS).
	// Possible values are: `HTTP`, `HTTPS`.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// URI Override Enforce Mode
	// When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS.
	// Possible values are: `ALWAYS`, `IF_NOT_EXISTS`.
	UriOverrideEnforceMode pulumi.StringPtrInput `pulumi:"uriOverrideEnforceMode"`
}

func (QueueHttpTargetUriOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetUriOverride)(nil)).Elem()
}

func (i QueueHttpTargetUriOverrideArgs) ToQueueHttpTargetUriOverrideOutput() QueueHttpTargetUriOverrideOutput {
	return i.ToQueueHttpTargetUriOverrideOutputWithContext(context.Background())
}

func (i QueueHttpTargetUriOverrideArgs) ToQueueHttpTargetUriOverrideOutputWithContext(ctx context.Context) QueueHttpTargetUriOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetUriOverrideOutput)
}

func (i QueueHttpTargetUriOverrideArgs) ToQueueHttpTargetUriOverridePtrOutput() QueueHttpTargetUriOverridePtrOutput {
	return i.ToQueueHttpTargetUriOverridePtrOutputWithContext(context.Background())
}

func (i QueueHttpTargetUriOverrideArgs) ToQueueHttpTargetUriOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetUriOverrideOutput).ToQueueHttpTargetUriOverridePtrOutputWithContext(ctx)
}

// QueueHttpTargetUriOverridePtrInput is an input type that accepts QueueHttpTargetUriOverrideArgs, QueueHttpTargetUriOverridePtr and QueueHttpTargetUriOverridePtrOutput values.
// You can construct a concrete instance of `QueueHttpTargetUriOverridePtrInput` via:
//
//	        QueueHttpTargetUriOverrideArgs{...}
//
//	or:
//
//	        nil
type QueueHttpTargetUriOverridePtrInput interface {
	pulumi.Input

	ToQueueHttpTargetUriOverridePtrOutput() QueueHttpTargetUriOverridePtrOutput
	ToQueueHttpTargetUriOverridePtrOutputWithContext(context.Context) QueueHttpTargetUriOverridePtrOutput
}

type queueHttpTargetUriOverridePtrType QueueHttpTargetUriOverrideArgs

func QueueHttpTargetUriOverridePtr(v *QueueHttpTargetUriOverrideArgs) QueueHttpTargetUriOverridePtrInput {
	return (*queueHttpTargetUriOverridePtrType)(v)
}

func (*queueHttpTargetUriOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetUriOverride)(nil)).Elem()
}

func (i *queueHttpTargetUriOverridePtrType) ToQueueHttpTargetUriOverridePtrOutput() QueueHttpTargetUriOverridePtrOutput {
	return i.ToQueueHttpTargetUriOverridePtrOutputWithContext(context.Background())
}

func (i *queueHttpTargetUriOverridePtrType) ToQueueHttpTargetUriOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetUriOverridePtrOutput)
}

type QueueHttpTargetUriOverrideOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetUriOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetUriOverride)(nil)).Elem()
}

func (o QueueHttpTargetUriOverrideOutput) ToQueueHttpTargetUriOverrideOutput() QueueHttpTargetUriOverrideOutput {
	return o
}

func (o QueueHttpTargetUriOverrideOutput) ToQueueHttpTargetUriOverrideOutputWithContext(ctx context.Context) QueueHttpTargetUriOverrideOutput {
	return o
}

func (o QueueHttpTargetUriOverrideOutput) ToQueueHttpTargetUriOverridePtrOutput() QueueHttpTargetUriOverridePtrOutput {
	return o.ToQueueHttpTargetUriOverridePtrOutputWithContext(context.Background())
}

func (o QueueHttpTargetUriOverrideOutput) ToQueueHttpTargetUriOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueHttpTargetUriOverride) *QueueHttpTargetUriOverride {
		return &v
	}).(QueueHttpTargetUriOverridePtrOutput)
}

// Host override.
// When specified, replaces the host part of the task URL.
// For example, if the task URL is "https://www.google.com", and host value
// is set to "example.net", the overridden URI will be changed to "https://example.net".
// Host value cannot be an empty string (INVALID_ARGUMENT).
func (o QueueHttpTargetUriOverrideOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueHttpTargetUriOverride) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// URI path.
// When specified, replaces the existing path of the task URL.
// Setting the path value to an empty string clears the URI path segment.
// Structure is documented below.
func (o QueueHttpTargetUriOverrideOutput) PathOverride() QueueHttpTargetUriOverridePathOverridePtrOutput {
	return o.ApplyT(func(v QueueHttpTargetUriOverride) *QueueHttpTargetUriOverridePathOverride { return v.PathOverride }).(QueueHttpTargetUriOverridePathOverridePtrOutput)
}

// Port override.
// When specified, replaces the port part of the task URI.
// For instance, for a URI http://www.google.com/foo and port=123, the overridden URI becomes http://www.google.com:123/foo.
// Note that the port value must be a positive integer.
// Setting the port to 0 (Zero) clears the URI port.
func (o QueueHttpTargetUriOverrideOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueHttpTargetUriOverride) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// URI query.
// When specified, replaces the query part of the task URI. Setting the query value to an empty string clears the URI query segment.
// Structure is documented below.
func (o QueueHttpTargetUriOverrideOutput) QueryOverride() QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return o.ApplyT(func(v QueueHttpTargetUriOverride) *QueueHttpTargetUriOverrideQueryOverride { return v.QueryOverride }).(QueueHttpTargetUriOverrideQueryOverridePtrOutput)
}

// Scheme override.
// When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS).
// Possible values are: `HTTP`, `HTTPS`.
func (o QueueHttpTargetUriOverrideOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueHttpTargetUriOverride) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// URI Override Enforce Mode
// When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS.
// Possible values are: `ALWAYS`, `IF_NOT_EXISTS`.
func (o QueueHttpTargetUriOverrideOutput) UriOverrideEnforceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueHttpTargetUriOverride) *string { return v.UriOverrideEnforceMode }).(pulumi.StringPtrOutput)
}

type QueueHttpTargetUriOverridePtrOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetUriOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetUriOverride)(nil)).Elem()
}

func (o QueueHttpTargetUriOverridePtrOutput) ToQueueHttpTargetUriOverridePtrOutput() QueueHttpTargetUriOverridePtrOutput {
	return o
}

func (o QueueHttpTargetUriOverridePtrOutput) ToQueueHttpTargetUriOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePtrOutput {
	return o
}

func (o QueueHttpTargetUriOverridePtrOutput) Elem() QueueHttpTargetUriOverrideOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverride) QueueHttpTargetUriOverride {
		if v != nil {
			return *v
		}
		var ret QueueHttpTargetUriOverride
		return ret
	}).(QueueHttpTargetUriOverrideOutput)
}

// Host override.
// When specified, replaces the host part of the task URL.
// For example, if the task URL is "https://www.google.com", and host value
// is set to "example.net", the overridden URI will be changed to "https://example.net".
// Host value cannot be an empty string (INVALID_ARGUMENT).
func (o QueueHttpTargetUriOverridePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverride) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// URI path.
// When specified, replaces the existing path of the task URL.
// Setting the path value to an empty string clears the URI path segment.
// Structure is documented below.
func (o QueueHttpTargetUriOverridePtrOutput) PathOverride() QueueHttpTargetUriOverridePathOverridePtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverride) *QueueHttpTargetUriOverridePathOverride {
		if v == nil {
			return nil
		}
		return v.PathOverride
	}).(QueueHttpTargetUriOverridePathOverridePtrOutput)
}

// Port override.
// When specified, replaces the port part of the task URI.
// For instance, for a URI http://www.google.com/foo and port=123, the overridden URI becomes http://www.google.com:123/foo.
// Note that the port value must be a positive integer.
// Setting the port to 0 (Zero) clears the URI port.
func (o QueueHttpTargetUriOverridePtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverride) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// URI query.
// When specified, replaces the query part of the task URI. Setting the query value to an empty string clears the URI query segment.
// Structure is documented below.
func (o QueueHttpTargetUriOverridePtrOutput) QueryOverride() QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverride) *QueueHttpTargetUriOverrideQueryOverride {
		if v == nil {
			return nil
		}
		return v.QueryOverride
	}).(QueueHttpTargetUriOverrideQueryOverridePtrOutput)
}

// Scheme override.
// When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS).
// Possible values are: `HTTP`, `HTTPS`.
func (o QueueHttpTargetUriOverridePtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverride) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// URI Override Enforce Mode
// When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS.
// Possible values are: `ALWAYS`, `IF_NOT_EXISTS`.
func (o QueueHttpTargetUriOverridePtrOutput) UriOverrideEnforceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverride) *string {
		if v == nil {
			return nil
		}
		return v.UriOverrideEnforceMode
	}).(pulumi.StringPtrOutput)
}

type QueueHttpTargetUriOverridePathOverride struct {
	// The URI path (e.g., /users/1234). Default is an empty string.
	Path *string `pulumi:"path"`
}

// QueueHttpTargetUriOverridePathOverrideInput is an input type that accepts QueueHttpTargetUriOverridePathOverrideArgs and QueueHttpTargetUriOverridePathOverrideOutput values.
// You can construct a concrete instance of `QueueHttpTargetUriOverridePathOverrideInput` via:
//
//	QueueHttpTargetUriOverridePathOverrideArgs{...}
type QueueHttpTargetUriOverridePathOverrideInput interface {
	pulumi.Input

	ToQueueHttpTargetUriOverridePathOverrideOutput() QueueHttpTargetUriOverridePathOverrideOutput
	ToQueueHttpTargetUriOverridePathOverrideOutputWithContext(context.Context) QueueHttpTargetUriOverridePathOverrideOutput
}

type QueueHttpTargetUriOverridePathOverrideArgs struct {
	// The URI path (e.g., /users/1234). Default is an empty string.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (QueueHttpTargetUriOverridePathOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetUriOverridePathOverride)(nil)).Elem()
}

func (i QueueHttpTargetUriOverridePathOverrideArgs) ToQueueHttpTargetUriOverridePathOverrideOutput() QueueHttpTargetUriOverridePathOverrideOutput {
	return i.ToQueueHttpTargetUriOverridePathOverrideOutputWithContext(context.Background())
}

func (i QueueHttpTargetUriOverridePathOverrideArgs) ToQueueHttpTargetUriOverridePathOverrideOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePathOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetUriOverridePathOverrideOutput)
}

func (i QueueHttpTargetUriOverridePathOverrideArgs) ToQueueHttpTargetUriOverridePathOverridePtrOutput() QueueHttpTargetUriOverridePathOverridePtrOutput {
	return i.ToQueueHttpTargetUriOverridePathOverridePtrOutputWithContext(context.Background())
}

func (i QueueHttpTargetUriOverridePathOverrideArgs) ToQueueHttpTargetUriOverridePathOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePathOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetUriOverridePathOverrideOutput).ToQueueHttpTargetUriOverridePathOverridePtrOutputWithContext(ctx)
}

// QueueHttpTargetUriOverridePathOverridePtrInput is an input type that accepts QueueHttpTargetUriOverridePathOverrideArgs, QueueHttpTargetUriOverridePathOverridePtr and QueueHttpTargetUriOverridePathOverridePtrOutput values.
// You can construct a concrete instance of `QueueHttpTargetUriOverridePathOverridePtrInput` via:
//
//	        QueueHttpTargetUriOverridePathOverrideArgs{...}
//
//	or:
//
//	        nil
type QueueHttpTargetUriOverridePathOverridePtrInput interface {
	pulumi.Input

	ToQueueHttpTargetUriOverridePathOverridePtrOutput() QueueHttpTargetUriOverridePathOverridePtrOutput
	ToQueueHttpTargetUriOverridePathOverridePtrOutputWithContext(context.Context) QueueHttpTargetUriOverridePathOverridePtrOutput
}

type queueHttpTargetUriOverridePathOverridePtrType QueueHttpTargetUriOverridePathOverrideArgs

func QueueHttpTargetUriOverridePathOverridePtr(v *QueueHttpTargetUriOverridePathOverrideArgs) QueueHttpTargetUriOverridePathOverridePtrInput {
	return (*queueHttpTargetUriOverridePathOverridePtrType)(v)
}

func (*queueHttpTargetUriOverridePathOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetUriOverridePathOverride)(nil)).Elem()
}

func (i *queueHttpTargetUriOverridePathOverridePtrType) ToQueueHttpTargetUriOverridePathOverridePtrOutput() QueueHttpTargetUriOverridePathOverridePtrOutput {
	return i.ToQueueHttpTargetUriOverridePathOverridePtrOutputWithContext(context.Background())
}

func (i *queueHttpTargetUriOverridePathOverridePtrType) ToQueueHttpTargetUriOverridePathOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePathOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetUriOverridePathOverridePtrOutput)
}

type QueueHttpTargetUriOverridePathOverrideOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetUriOverridePathOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetUriOverridePathOverride)(nil)).Elem()
}

func (o QueueHttpTargetUriOverridePathOverrideOutput) ToQueueHttpTargetUriOverridePathOverrideOutput() QueueHttpTargetUriOverridePathOverrideOutput {
	return o
}

func (o QueueHttpTargetUriOverridePathOverrideOutput) ToQueueHttpTargetUriOverridePathOverrideOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePathOverrideOutput {
	return o
}

func (o QueueHttpTargetUriOverridePathOverrideOutput) ToQueueHttpTargetUriOverridePathOverridePtrOutput() QueueHttpTargetUriOverridePathOverridePtrOutput {
	return o.ToQueueHttpTargetUriOverridePathOverridePtrOutputWithContext(context.Background())
}

func (o QueueHttpTargetUriOverridePathOverrideOutput) ToQueueHttpTargetUriOverridePathOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePathOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueHttpTargetUriOverridePathOverride) *QueueHttpTargetUriOverridePathOverride {
		return &v
	}).(QueueHttpTargetUriOverridePathOverridePtrOutput)
}

// The URI path (e.g., /users/1234). Default is an empty string.
func (o QueueHttpTargetUriOverridePathOverrideOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueHttpTargetUriOverridePathOverride) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type QueueHttpTargetUriOverridePathOverridePtrOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetUriOverridePathOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetUriOverridePathOverride)(nil)).Elem()
}

func (o QueueHttpTargetUriOverridePathOverridePtrOutput) ToQueueHttpTargetUriOverridePathOverridePtrOutput() QueueHttpTargetUriOverridePathOverridePtrOutput {
	return o
}

func (o QueueHttpTargetUriOverridePathOverridePtrOutput) ToQueueHttpTargetUriOverridePathOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverridePathOverridePtrOutput {
	return o
}

func (o QueueHttpTargetUriOverridePathOverridePtrOutput) Elem() QueueHttpTargetUriOverridePathOverrideOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverridePathOverride) QueueHttpTargetUriOverridePathOverride {
		if v != nil {
			return *v
		}
		var ret QueueHttpTargetUriOverridePathOverride
		return ret
	}).(QueueHttpTargetUriOverridePathOverrideOutput)
}

// The URI path (e.g., /users/1234). Default is an empty string.
func (o QueueHttpTargetUriOverridePathOverridePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverridePathOverride) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type QueueHttpTargetUriOverrideQueryOverride struct {
	// The query parameters (e.g., qparam1=123&qparam2=456). Default is an empty string.
	QueryParams *string `pulumi:"queryParams"`
}

// QueueHttpTargetUriOverrideQueryOverrideInput is an input type that accepts QueueHttpTargetUriOverrideQueryOverrideArgs and QueueHttpTargetUriOverrideQueryOverrideOutput values.
// You can construct a concrete instance of `QueueHttpTargetUriOverrideQueryOverrideInput` via:
//
//	QueueHttpTargetUriOverrideQueryOverrideArgs{...}
type QueueHttpTargetUriOverrideQueryOverrideInput interface {
	pulumi.Input

	ToQueueHttpTargetUriOverrideQueryOverrideOutput() QueueHttpTargetUriOverrideQueryOverrideOutput
	ToQueueHttpTargetUriOverrideQueryOverrideOutputWithContext(context.Context) QueueHttpTargetUriOverrideQueryOverrideOutput
}

type QueueHttpTargetUriOverrideQueryOverrideArgs struct {
	// The query parameters (e.g., qparam1=123&qparam2=456). Default is an empty string.
	QueryParams pulumi.StringPtrInput `pulumi:"queryParams"`
}

func (QueueHttpTargetUriOverrideQueryOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetUriOverrideQueryOverride)(nil)).Elem()
}

func (i QueueHttpTargetUriOverrideQueryOverrideArgs) ToQueueHttpTargetUriOverrideQueryOverrideOutput() QueueHttpTargetUriOverrideQueryOverrideOutput {
	return i.ToQueueHttpTargetUriOverrideQueryOverrideOutputWithContext(context.Background())
}

func (i QueueHttpTargetUriOverrideQueryOverrideArgs) ToQueueHttpTargetUriOverrideQueryOverrideOutputWithContext(ctx context.Context) QueueHttpTargetUriOverrideQueryOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetUriOverrideQueryOverrideOutput)
}

func (i QueueHttpTargetUriOverrideQueryOverrideArgs) ToQueueHttpTargetUriOverrideQueryOverridePtrOutput() QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return i.ToQueueHttpTargetUriOverrideQueryOverridePtrOutputWithContext(context.Background())
}

func (i QueueHttpTargetUriOverrideQueryOverrideArgs) ToQueueHttpTargetUriOverrideQueryOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetUriOverrideQueryOverrideOutput).ToQueueHttpTargetUriOverrideQueryOverridePtrOutputWithContext(ctx)
}

// QueueHttpTargetUriOverrideQueryOverridePtrInput is an input type that accepts QueueHttpTargetUriOverrideQueryOverrideArgs, QueueHttpTargetUriOverrideQueryOverridePtr and QueueHttpTargetUriOverrideQueryOverridePtrOutput values.
// You can construct a concrete instance of `QueueHttpTargetUriOverrideQueryOverridePtrInput` via:
//
//	        QueueHttpTargetUriOverrideQueryOverrideArgs{...}
//
//	or:
//
//	        nil
type QueueHttpTargetUriOverrideQueryOverridePtrInput interface {
	pulumi.Input

	ToQueueHttpTargetUriOverrideQueryOverridePtrOutput() QueueHttpTargetUriOverrideQueryOverridePtrOutput
	ToQueueHttpTargetUriOverrideQueryOverridePtrOutputWithContext(context.Context) QueueHttpTargetUriOverrideQueryOverridePtrOutput
}

type queueHttpTargetUriOverrideQueryOverridePtrType QueueHttpTargetUriOverrideQueryOverrideArgs

func QueueHttpTargetUriOverrideQueryOverridePtr(v *QueueHttpTargetUriOverrideQueryOverrideArgs) QueueHttpTargetUriOverrideQueryOverridePtrInput {
	return (*queueHttpTargetUriOverrideQueryOverridePtrType)(v)
}

func (*queueHttpTargetUriOverrideQueryOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetUriOverrideQueryOverride)(nil)).Elem()
}

func (i *queueHttpTargetUriOverrideQueryOverridePtrType) ToQueueHttpTargetUriOverrideQueryOverridePtrOutput() QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return i.ToQueueHttpTargetUriOverrideQueryOverridePtrOutputWithContext(context.Background())
}

func (i *queueHttpTargetUriOverrideQueryOverridePtrType) ToQueueHttpTargetUriOverrideQueryOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueHttpTargetUriOverrideQueryOverridePtrOutput)
}

type QueueHttpTargetUriOverrideQueryOverrideOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetUriOverrideQueryOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueHttpTargetUriOverrideQueryOverride)(nil)).Elem()
}

func (o QueueHttpTargetUriOverrideQueryOverrideOutput) ToQueueHttpTargetUriOverrideQueryOverrideOutput() QueueHttpTargetUriOverrideQueryOverrideOutput {
	return o
}

func (o QueueHttpTargetUriOverrideQueryOverrideOutput) ToQueueHttpTargetUriOverrideQueryOverrideOutputWithContext(ctx context.Context) QueueHttpTargetUriOverrideQueryOverrideOutput {
	return o
}

func (o QueueHttpTargetUriOverrideQueryOverrideOutput) ToQueueHttpTargetUriOverrideQueryOverridePtrOutput() QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return o.ToQueueHttpTargetUriOverrideQueryOverridePtrOutputWithContext(context.Background())
}

func (o QueueHttpTargetUriOverrideQueryOverrideOutput) ToQueueHttpTargetUriOverrideQueryOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueHttpTargetUriOverrideQueryOverride) *QueueHttpTargetUriOverrideQueryOverride {
		return &v
	}).(QueueHttpTargetUriOverrideQueryOverridePtrOutput)
}

// The query parameters (e.g., qparam1=123&qparam2=456). Default is an empty string.
func (o QueueHttpTargetUriOverrideQueryOverrideOutput) QueryParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueHttpTargetUriOverrideQueryOverride) *string { return v.QueryParams }).(pulumi.StringPtrOutput)
}

type QueueHttpTargetUriOverrideQueryOverridePtrOutput struct{ *pulumi.OutputState }

func (QueueHttpTargetUriOverrideQueryOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueHttpTargetUriOverrideQueryOverride)(nil)).Elem()
}

func (o QueueHttpTargetUriOverrideQueryOverridePtrOutput) ToQueueHttpTargetUriOverrideQueryOverridePtrOutput() QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return o
}

func (o QueueHttpTargetUriOverrideQueryOverridePtrOutput) ToQueueHttpTargetUriOverrideQueryOverridePtrOutputWithContext(ctx context.Context) QueueHttpTargetUriOverrideQueryOverridePtrOutput {
	return o
}

func (o QueueHttpTargetUriOverrideQueryOverridePtrOutput) Elem() QueueHttpTargetUriOverrideQueryOverrideOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverrideQueryOverride) QueueHttpTargetUriOverrideQueryOverride {
		if v != nil {
			return *v
		}
		var ret QueueHttpTargetUriOverrideQueryOverride
		return ret
	}).(QueueHttpTargetUriOverrideQueryOverrideOutput)
}

// The query parameters (e.g., qparam1=123&qparam2=456). Default is an empty string.
func (o QueueHttpTargetUriOverrideQueryOverridePtrOutput) QueryParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueHttpTargetUriOverrideQueryOverride) *string {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(pulumi.StringPtrOutput)
}

type QueueIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// QueueIamBindingConditionInput is an input type that accepts QueueIamBindingConditionArgs and QueueIamBindingConditionOutput values.
// You can construct a concrete instance of `QueueIamBindingConditionInput` via:
//
//	QueueIamBindingConditionArgs{...}
type QueueIamBindingConditionInput interface {
	pulumi.Input

	ToQueueIamBindingConditionOutput() QueueIamBindingConditionOutput
	ToQueueIamBindingConditionOutputWithContext(context.Context) QueueIamBindingConditionOutput
}

type QueueIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (QueueIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueIamBindingCondition)(nil)).Elem()
}

func (i QueueIamBindingConditionArgs) ToQueueIamBindingConditionOutput() QueueIamBindingConditionOutput {
	return i.ToQueueIamBindingConditionOutputWithContext(context.Background())
}

func (i QueueIamBindingConditionArgs) ToQueueIamBindingConditionOutputWithContext(ctx context.Context) QueueIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueIamBindingConditionOutput)
}

func (i QueueIamBindingConditionArgs) ToQueueIamBindingConditionPtrOutput() QueueIamBindingConditionPtrOutput {
	return i.ToQueueIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i QueueIamBindingConditionArgs) ToQueueIamBindingConditionPtrOutputWithContext(ctx context.Context) QueueIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueIamBindingConditionOutput).ToQueueIamBindingConditionPtrOutputWithContext(ctx)
}

// QueueIamBindingConditionPtrInput is an input type that accepts QueueIamBindingConditionArgs, QueueIamBindingConditionPtr and QueueIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `QueueIamBindingConditionPtrInput` via:
//
//	        QueueIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type QueueIamBindingConditionPtrInput interface {
	pulumi.Input

	ToQueueIamBindingConditionPtrOutput() QueueIamBindingConditionPtrOutput
	ToQueueIamBindingConditionPtrOutputWithContext(context.Context) QueueIamBindingConditionPtrOutput
}

type queueIamBindingConditionPtrType QueueIamBindingConditionArgs

func QueueIamBindingConditionPtr(v *QueueIamBindingConditionArgs) QueueIamBindingConditionPtrInput {
	return (*queueIamBindingConditionPtrType)(v)
}

func (*queueIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueIamBindingCondition)(nil)).Elem()
}

func (i *queueIamBindingConditionPtrType) ToQueueIamBindingConditionPtrOutput() QueueIamBindingConditionPtrOutput {
	return i.ToQueueIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *queueIamBindingConditionPtrType) ToQueueIamBindingConditionPtrOutputWithContext(ctx context.Context) QueueIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueIamBindingConditionPtrOutput)
}

type QueueIamBindingConditionOutput struct{ *pulumi.OutputState }

func (QueueIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueIamBindingCondition)(nil)).Elem()
}

func (o QueueIamBindingConditionOutput) ToQueueIamBindingConditionOutput() QueueIamBindingConditionOutput {
	return o
}

func (o QueueIamBindingConditionOutput) ToQueueIamBindingConditionOutputWithContext(ctx context.Context) QueueIamBindingConditionOutput {
	return o
}

func (o QueueIamBindingConditionOutput) ToQueueIamBindingConditionPtrOutput() QueueIamBindingConditionPtrOutput {
	return o.ToQueueIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o QueueIamBindingConditionOutput) ToQueueIamBindingConditionPtrOutputWithContext(ctx context.Context) QueueIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueIamBindingCondition) *QueueIamBindingCondition {
		return &v
	}).(QueueIamBindingConditionPtrOutput)
}

func (o QueueIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o QueueIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v QueueIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o QueueIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v QueueIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type QueueIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (QueueIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueIamBindingCondition)(nil)).Elem()
}

func (o QueueIamBindingConditionPtrOutput) ToQueueIamBindingConditionPtrOutput() QueueIamBindingConditionPtrOutput {
	return o
}

func (o QueueIamBindingConditionPtrOutput) ToQueueIamBindingConditionPtrOutputWithContext(ctx context.Context) QueueIamBindingConditionPtrOutput {
	return o
}

func (o QueueIamBindingConditionPtrOutput) Elem() QueueIamBindingConditionOutput {
	return o.ApplyT(func(v *QueueIamBindingCondition) QueueIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret QueueIamBindingCondition
		return ret
	}).(QueueIamBindingConditionOutput)
}

func (o QueueIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o QueueIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o QueueIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type QueueIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// QueueIamMemberConditionInput is an input type that accepts QueueIamMemberConditionArgs and QueueIamMemberConditionOutput values.
// You can construct a concrete instance of `QueueIamMemberConditionInput` via:
//
//	QueueIamMemberConditionArgs{...}
type QueueIamMemberConditionInput interface {
	pulumi.Input

	ToQueueIamMemberConditionOutput() QueueIamMemberConditionOutput
	ToQueueIamMemberConditionOutputWithContext(context.Context) QueueIamMemberConditionOutput
}

type QueueIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (QueueIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueIamMemberCondition)(nil)).Elem()
}

func (i QueueIamMemberConditionArgs) ToQueueIamMemberConditionOutput() QueueIamMemberConditionOutput {
	return i.ToQueueIamMemberConditionOutputWithContext(context.Background())
}

func (i QueueIamMemberConditionArgs) ToQueueIamMemberConditionOutputWithContext(ctx context.Context) QueueIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueIamMemberConditionOutput)
}

func (i QueueIamMemberConditionArgs) ToQueueIamMemberConditionPtrOutput() QueueIamMemberConditionPtrOutput {
	return i.ToQueueIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i QueueIamMemberConditionArgs) ToQueueIamMemberConditionPtrOutputWithContext(ctx context.Context) QueueIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueIamMemberConditionOutput).ToQueueIamMemberConditionPtrOutputWithContext(ctx)
}

// QueueIamMemberConditionPtrInput is an input type that accepts QueueIamMemberConditionArgs, QueueIamMemberConditionPtr and QueueIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `QueueIamMemberConditionPtrInput` via:
//
//	        QueueIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type QueueIamMemberConditionPtrInput interface {
	pulumi.Input

	ToQueueIamMemberConditionPtrOutput() QueueIamMemberConditionPtrOutput
	ToQueueIamMemberConditionPtrOutputWithContext(context.Context) QueueIamMemberConditionPtrOutput
}

type queueIamMemberConditionPtrType QueueIamMemberConditionArgs

func QueueIamMemberConditionPtr(v *QueueIamMemberConditionArgs) QueueIamMemberConditionPtrInput {
	return (*queueIamMemberConditionPtrType)(v)
}

func (*queueIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueIamMemberCondition)(nil)).Elem()
}

func (i *queueIamMemberConditionPtrType) ToQueueIamMemberConditionPtrOutput() QueueIamMemberConditionPtrOutput {
	return i.ToQueueIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *queueIamMemberConditionPtrType) ToQueueIamMemberConditionPtrOutputWithContext(ctx context.Context) QueueIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueIamMemberConditionPtrOutput)
}

type QueueIamMemberConditionOutput struct{ *pulumi.OutputState }

func (QueueIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueIamMemberCondition)(nil)).Elem()
}

func (o QueueIamMemberConditionOutput) ToQueueIamMemberConditionOutput() QueueIamMemberConditionOutput {
	return o
}

func (o QueueIamMemberConditionOutput) ToQueueIamMemberConditionOutputWithContext(ctx context.Context) QueueIamMemberConditionOutput {
	return o
}

func (o QueueIamMemberConditionOutput) ToQueueIamMemberConditionPtrOutput() QueueIamMemberConditionPtrOutput {
	return o.ToQueueIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o QueueIamMemberConditionOutput) ToQueueIamMemberConditionPtrOutputWithContext(ctx context.Context) QueueIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueIamMemberCondition) *QueueIamMemberCondition {
		return &v
	}).(QueueIamMemberConditionPtrOutput)
}

func (o QueueIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o QueueIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v QueueIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o QueueIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v QueueIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type QueueIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (QueueIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueIamMemberCondition)(nil)).Elem()
}

func (o QueueIamMemberConditionPtrOutput) ToQueueIamMemberConditionPtrOutput() QueueIamMemberConditionPtrOutput {
	return o
}

func (o QueueIamMemberConditionPtrOutput) ToQueueIamMemberConditionPtrOutputWithContext(ctx context.Context) QueueIamMemberConditionPtrOutput {
	return o
}

func (o QueueIamMemberConditionPtrOutput) Elem() QueueIamMemberConditionOutput {
	return o.ApplyT(func(v *QueueIamMemberCondition) QueueIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret QueueIamMemberCondition
		return ret
	}).(QueueIamMemberConditionOutput)
}

func (o QueueIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o QueueIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o QueueIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type QueueRateLimits struct {
	// (Output)
	// The max burst size.
	// Max burst size limits how fast tasks in queue are processed when many tasks are
	// in the queue and the rate is high. This field allows the queue to have a high
	// rate so processing starts shortly after a task is enqueued, but still limits
	// resource usage when many tasks are enqueued in a short period of time.
	MaxBurstSize *int `pulumi:"maxBurstSize"`
	// The maximum number of concurrent tasks that Cloud Tasks allows to
	// be dispatched for this queue. After this threshold has been
	// reached, Cloud Tasks stops dispatching tasks until the number of
	// concurrent requests decreases.
	MaxConcurrentDispatches *int `pulumi:"maxConcurrentDispatches"`
	// The maximum rate at which tasks are dispatched from this queue.
	// If unspecified when the queue is created, Cloud Tasks will pick the default.
	MaxDispatchesPerSecond *float64 `pulumi:"maxDispatchesPerSecond"`
}

// QueueRateLimitsInput is an input type that accepts QueueRateLimitsArgs and QueueRateLimitsOutput values.
// You can construct a concrete instance of `QueueRateLimitsInput` via:
//
//	QueueRateLimitsArgs{...}
type QueueRateLimitsInput interface {
	pulumi.Input

	ToQueueRateLimitsOutput() QueueRateLimitsOutput
	ToQueueRateLimitsOutputWithContext(context.Context) QueueRateLimitsOutput
}

type QueueRateLimitsArgs struct {
	// (Output)
	// The max burst size.
	// Max burst size limits how fast tasks in queue are processed when many tasks are
	// in the queue and the rate is high. This field allows the queue to have a high
	// rate so processing starts shortly after a task is enqueued, but still limits
	// resource usage when many tasks are enqueued in a short period of time.
	MaxBurstSize pulumi.IntPtrInput `pulumi:"maxBurstSize"`
	// The maximum number of concurrent tasks that Cloud Tasks allows to
	// be dispatched for this queue. After this threshold has been
	// reached, Cloud Tasks stops dispatching tasks until the number of
	// concurrent requests decreases.
	MaxConcurrentDispatches pulumi.IntPtrInput `pulumi:"maxConcurrentDispatches"`
	// The maximum rate at which tasks are dispatched from this queue.
	// If unspecified when the queue is created, Cloud Tasks will pick the default.
	MaxDispatchesPerSecond pulumi.Float64PtrInput `pulumi:"maxDispatchesPerSecond"`
}

func (QueueRateLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueRateLimits)(nil)).Elem()
}

func (i QueueRateLimitsArgs) ToQueueRateLimitsOutput() QueueRateLimitsOutput {
	return i.ToQueueRateLimitsOutputWithContext(context.Background())
}

func (i QueueRateLimitsArgs) ToQueueRateLimitsOutputWithContext(ctx context.Context) QueueRateLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueRateLimitsOutput)
}

func (i QueueRateLimitsArgs) ToQueueRateLimitsPtrOutput() QueueRateLimitsPtrOutput {
	return i.ToQueueRateLimitsPtrOutputWithContext(context.Background())
}

func (i QueueRateLimitsArgs) ToQueueRateLimitsPtrOutputWithContext(ctx context.Context) QueueRateLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueRateLimitsOutput).ToQueueRateLimitsPtrOutputWithContext(ctx)
}

// QueueRateLimitsPtrInput is an input type that accepts QueueRateLimitsArgs, QueueRateLimitsPtr and QueueRateLimitsPtrOutput values.
// You can construct a concrete instance of `QueueRateLimitsPtrInput` via:
//
//	        QueueRateLimitsArgs{...}
//
//	or:
//
//	        nil
type QueueRateLimitsPtrInput interface {
	pulumi.Input

	ToQueueRateLimitsPtrOutput() QueueRateLimitsPtrOutput
	ToQueueRateLimitsPtrOutputWithContext(context.Context) QueueRateLimitsPtrOutput
}

type queueRateLimitsPtrType QueueRateLimitsArgs

func QueueRateLimitsPtr(v *QueueRateLimitsArgs) QueueRateLimitsPtrInput {
	return (*queueRateLimitsPtrType)(v)
}

func (*queueRateLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueRateLimits)(nil)).Elem()
}

func (i *queueRateLimitsPtrType) ToQueueRateLimitsPtrOutput() QueueRateLimitsPtrOutput {
	return i.ToQueueRateLimitsPtrOutputWithContext(context.Background())
}

func (i *queueRateLimitsPtrType) ToQueueRateLimitsPtrOutputWithContext(ctx context.Context) QueueRateLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueRateLimitsPtrOutput)
}

type QueueRateLimitsOutput struct{ *pulumi.OutputState }

func (QueueRateLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueRateLimits)(nil)).Elem()
}

func (o QueueRateLimitsOutput) ToQueueRateLimitsOutput() QueueRateLimitsOutput {
	return o
}

func (o QueueRateLimitsOutput) ToQueueRateLimitsOutputWithContext(ctx context.Context) QueueRateLimitsOutput {
	return o
}

func (o QueueRateLimitsOutput) ToQueueRateLimitsPtrOutput() QueueRateLimitsPtrOutput {
	return o.ToQueueRateLimitsPtrOutputWithContext(context.Background())
}

func (o QueueRateLimitsOutput) ToQueueRateLimitsPtrOutputWithContext(ctx context.Context) QueueRateLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueRateLimits) *QueueRateLimits {
		return &v
	}).(QueueRateLimitsPtrOutput)
}

// (Output)
// The max burst size.
// Max burst size limits how fast tasks in queue are processed when many tasks are
// in the queue and the rate is high. This field allows the queue to have a high
// rate so processing starts shortly after a task is enqueued, but still limits
// resource usage when many tasks are enqueued in a short period of time.
func (o QueueRateLimitsOutput) MaxBurstSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QueueRateLimits) *int { return v.MaxBurstSize }).(pulumi.IntPtrOutput)
}

// The maximum number of concurrent tasks that Cloud Tasks allows to
// be dispatched for this queue. After this threshold has been
// reached, Cloud Tasks stops dispatching tasks until the number of
// concurrent requests decreases.
func (o QueueRateLimitsOutput) MaxConcurrentDispatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QueueRateLimits) *int { return v.MaxConcurrentDispatches }).(pulumi.IntPtrOutput)
}

// The maximum rate at which tasks are dispatched from this queue.
// If unspecified when the queue is created, Cloud Tasks will pick the default.
func (o QueueRateLimitsOutput) MaxDispatchesPerSecond() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v QueueRateLimits) *float64 { return v.MaxDispatchesPerSecond }).(pulumi.Float64PtrOutput)
}

type QueueRateLimitsPtrOutput struct{ *pulumi.OutputState }

func (QueueRateLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueRateLimits)(nil)).Elem()
}

func (o QueueRateLimitsPtrOutput) ToQueueRateLimitsPtrOutput() QueueRateLimitsPtrOutput {
	return o
}

func (o QueueRateLimitsPtrOutput) ToQueueRateLimitsPtrOutputWithContext(ctx context.Context) QueueRateLimitsPtrOutput {
	return o
}

func (o QueueRateLimitsPtrOutput) Elem() QueueRateLimitsOutput {
	return o.ApplyT(func(v *QueueRateLimits) QueueRateLimits {
		if v != nil {
			return *v
		}
		var ret QueueRateLimits
		return ret
	}).(QueueRateLimitsOutput)
}

// (Output)
// The max burst size.
// Max burst size limits how fast tasks in queue are processed when many tasks are
// in the queue and the rate is high. This field allows the queue to have a high
// rate so processing starts shortly after a task is enqueued, but still limits
// resource usage when many tasks are enqueued in a short period of time.
func (o QueueRateLimitsPtrOutput) MaxBurstSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QueueRateLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxBurstSize
	}).(pulumi.IntPtrOutput)
}

// The maximum number of concurrent tasks that Cloud Tasks allows to
// be dispatched for this queue. After this threshold has been
// reached, Cloud Tasks stops dispatching tasks until the number of
// concurrent requests decreases.
func (o QueueRateLimitsPtrOutput) MaxConcurrentDispatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QueueRateLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentDispatches
	}).(pulumi.IntPtrOutput)
}

// The maximum rate at which tasks are dispatched from this queue.
// If unspecified when the queue is created, Cloud Tasks will pick the default.
func (o QueueRateLimitsPtrOutput) MaxDispatchesPerSecond() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *QueueRateLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxDispatchesPerSecond
	}).(pulumi.Float64PtrOutput)
}

type QueueRetryConfig struct {
	// Number of attempts per task.
	// Cloud Tasks will attempt the task maxAttempts times (that is, if
	// the first attempt fails, then there will be maxAttempts - 1
	// retries). Must be >= -1.
	// If unspecified when the queue is created, Cloud Tasks will pick
	// the default.
	// -1 indicates unlimited attempts.
	MaxAttempts *int `pulumi:"maxAttempts"`
	// A task will be scheduled for retry between minBackoff and
	// maxBackoff duration after it fails, if the queue's RetryConfig
	// specifies that the task should be retried.
	MaxBackoff *string `pulumi:"maxBackoff"`
	// The time between retries will double maxDoublings times.
	// A task's retry interval starts at minBackoff, then doubles maxDoublings times,
	// then increases linearly, and finally retries retries at intervals of maxBackoff
	// up to maxAttempts times.
	MaxDoublings *int `pulumi:"maxDoublings"`
	// If positive, maxRetryDuration specifies the time limit for
	// retrying a failed task, measured from when the task was first
	// attempted. Once maxRetryDuration time has passed and the task has
	// been attempted maxAttempts times, no further attempts will be
	// made and the task will be deleted.
	// If zero, then the task age is unlimited.
	MaxRetryDuration *string `pulumi:"maxRetryDuration"`
	// A task will be scheduled for retry between minBackoff and
	// maxBackoff duration after it fails, if the queue's RetryConfig
	// specifies that the task should be retried.
	MinBackoff *string `pulumi:"minBackoff"`
}

// QueueRetryConfigInput is an input type that accepts QueueRetryConfigArgs and QueueRetryConfigOutput values.
// You can construct a concrete instance of `QueueRetryConfigInput` via:
//
//	QueueRetryConfigArgs{...}
type QueueRetryConfigInput interface {
	pulumi.Input

	ToQueueRetryConfigOutput() QueueRetryConfigOutput
	ToQueueRetryConfigOutputWithContext(context.Context) QueueRetryConfigOutput
}

type QueueRetryConfigArgs struct {
	// Number of attempts per task.
	// Cloud Tasks will attempt the task maxAttempts times (that is, if
	// the first attempt fails, then there will be maxAttempts - 1
	// retries). Must be >= -1.
	// If unspecified when the queue is created, Cloud Tasks will pick
	// the default.
	// -1 indicates unlimited attempts.
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	// A task will be scheduled for retry between minBackoff and
	// maxBackoff duration after it fails, if the queue's RetryConfig
	// specifies that the task should be retried.
	MaxBackoff pulumi.StringPtrInput `pulumi:"maxBackoff"`
	// The time between retries will double maxDoublings times.
	// A task's retry interval starts at minBackoff, then doubles maxDoublings times,
	// then increases linearly, and finally retries retries at intervals of maxBackoff
	// up to maxAttempts times.
	MaxDoublings pulumi.IntPtrInput `pulumi:"maxDoublings"`
	// If positive, maxRetryDuration specifies the time limit for
	// retrying a failed task, measured from when the task was first
	// attempted. Once maxRetryDuration time has passed and the task has
	// been attempted maxAttempts times, no further attempts will be
	// made and the task will be deleted.
	// If zero, then the task age is unlimited.
	MaxRetryDuration pulumi.StringPtrInput `pulumi:"maxRetryDuration"`
	// A task will be scheduled for retry between minBackoff and
	// maxBackoff duration after it fails, if the queue's RetryConfig
	// specifies that the task should be retried.
	MinBackoff pulumi.StringPtrInput `pulumi:"minBackoff"`
}

func (QueueRetryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueRetryConfig)(nil)).Elem()
}

func (i QueueRetryConfigArgs) ToQueueRetryConfigOutput() QueueRetryConfigOutput {
	return i.ToQueueRetryConfigOutputWithContext(context.Background())
}

func (i QueueRetryConfigArgs) ToQueueRetryConfigOutputWithContext(ctx context.Context) QueueRetryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueRetryConfigOutput)
}

func (i QueueRetryConfigArgs) ToQueueRetryConfigPtrOutput() QueueRetryConfigPtrOutput {
	return i.ToQueueRetryConfigPtrOutputWithContext(context.Background())
}

func (i QueueRetryConfigArgs) ToQueueRetryConfigPtrOutputWithContext(ctx context.Context) QueueRetryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueRetryConfigOutput).ToQueueRetryConfigPtrOutputWithContext(ctx)
}

// QueueRetryConfigPtrInput is an input type that accepts QueueRetryConfigArgs, QueueRetryConfigPtr and QueueRetryConfigPtrOutput values.
// You can construct a concrete instance of `QueueRetryConfigPtrInput` via:
//
//	        QueueRetryConfigArgs{...}
//
//	or:
//
//	        nil
type QueueRetryConfigPtrInput interface {
	pulumi.Input

	ToQueueRetryConfigPtrOutput() QueueRetryConfigPtrOutput
	ToQueueRetryConfigPtrOutputWithContext(context.Context) QueueRetryConfigPtrOutput
}

type queueRetryConfigPtrType QueueRetryConfigArgs

func QueueRetryConfigPtr(v *QueueRetryConfigArgs) QueueRetryConfigPtrInput {
	return (*queueRetryConfigPtrType)(v)
}

func (*queueRetryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueRetryConfig)(nil)).Elem()
}

func (i *queueRetryConfigPtrType) ToQueueRetryConfigPtrOutput() QueueRetryConfigPtrOutput {
	return i.ToQueueRetryConfigPtrOutputWithContext(context.Background())
}

func (i *queueRetryConfigPtrType) ToQueueRetryConfigPtrOutputWithContext(ctx context.Context) QueueRetryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueRetryConfigPtrOutput)
}

type QueueRetryConfigOutput struct{ *pulumi.OutputState }

func (QueueRetryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueRetryConfig)(nil)).Elem()
}

func (o QueueRetryConfigOutput) ToQueueRetryConfigOutput() QueueRetryConfigOutput {
	return o
}

func (o QueueRetryConfigOutput) ToQueueRetryConfigOutputWithContext(ctx context.Context) QueueRetryConfigOutput {
	return o
}

func (o QueueRetryConfigOutput) ToQueueRetryConfigPtrOutput() QueueRetryConfigPtrOutput {
	return o.ToQueueRetryConfigPtrOutputWithContext(context.Background())
}

func (o QueueRetryConfigOutput) ToQueueRetryConfigPtrOutputWithContext(ctx context.Context) QueueRetryConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueRetryConfig) *QueueRetryConfig {
		return &v
	}).(QueueRetryConfigPtrOutput)
}

// Number of attempts per task.
// Cloud Tasks will attempt the task maxAttempts times (that is, if
// the first attempt fails, then there will be maxAttempts - 1
// retries). Must be >= -1.
// If unspecified when the queue is created, Cloud Tasks will pick
// the default.
// -1 indicates unlimited attempts.
func (o QueueRetryConfigOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QueueRetryConfig) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

// A task will be scheduled for retry between minBackoff and
// maxBackoff duration after it fails, if the queue's RetryConfig
// specifies that the task should be retried.
func (o QueueRetryConfigOutput) MaxBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueRetryConfig) *string { return v.MaxBackoff }).(pulumi.StringPtrOutput)
}

// The time between retries will double maxDoublings times.
// A task's retry interval starts at minBackoff, then doubles maxDoublings times,
// then increases linearly, and finally retries retries at intervals of maxBackoff
// up to maxAttempts times.
func (o QueueRetryConfigOutput) MaxDoublings() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QueueRetryConfig) *int { return v.MaxDoublings }).(pulumi.IntPtrOutput)
}

// If positive, maxRetryDuration specifies the time limit for
// retrying a failed task, measured from when the task was first
// attempted. Once maxRetryDuration time has passed and the task has
// been attempted maxAttempts times, no further attempts will be
// made and the task will be deleted.
// If zero, then the task age is unlimited.
func (o QueueRetryConfigOutput) MaxRetryDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueRetryConfig) *string { return v.MaxRetryDuration }).(pulumi.StringPtrOutput)
}

// A task will be scheduled for retry between minBackoff and
// maxBackoff duration after it fails, if the queue's RetryConfig
// specifies that the task should be retried.
func (o QueueRetryConfigOutput) MinBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueRetryConfig) *string { return v.MinBackoff }).(pulumi.StringPtrOutput)
}

type QueueRetryConfigPtrOutput struct{ *pulumi.OutputState }

func (QueueRetryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueRetryConfig)(nil)).Elem()
}

func (o QueueRetryConfigPtrOutput) ToQueueRetryConfigPtrOutput() QueueRetryConfigPtrOutput {
	return o
}

func (o QueueRetryConfigPtrOutput) ToQueueRetryConfigPtrOutputWithContext(ctx context.Context) QueueRetryConfigPtrOutput {
	return o
}

func (o QueueRetryConfigPtrOutput) Elem() QueueRetryConfigOutput {
	return o.ApplyT(func(v *QueueRetryConfig) QueueRetryConfig {
		if v != nil {
			return *v
		}
		var ret QueueRetryConfig
		return ret
	}).(QueueRetryConfigOutput)
}

// Number of attempts per task.
// Cloud Tasks will attempt the task maxAttempts times (that is, if
// the first attempt fails, then there will be maxAttempts - 1
// retries). Must be >= -1.
// If unspecified when the queue is created, Cloud Tasks will pick
// the default.
// -1 indicates unlimited attempts.
func (o QueueRetryConfigPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QueueRetryConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

// A task will be scheduled for retry between minBackoff and
// maxBackoff duration after it fails, if the queue's RetryConfig
// specifies that the task should be retried.
func (o QueueRetryConfigPtrOutput) MaxBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueRetryConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxBackoff
	}).(pulumi.StringPtrOutput)
}

// The time between retries will double maxDoublings times.
// A task's retry interval starts at minBackoff, then doubles maxDoublings times,
// then increases linearly, and finally retries retries at intervals of maxBackoff
// up to maxAttempts times.
func (o QueueRetryConfigPtrOutput) MaxDoublings() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QueueRetryConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxDoublings
	}).(pulumi.IntPtrOutput)
}

// If positive, maxRetryDuration specifies the time limit for
// retrying a failed task, measured from when the task was first
// attempted. Once maxRetryDuration time has passed and the task has
// been attempted maxAttempts times, no further attempts will be
// made and the task will be deleted.
// If zero, then the task age is unlimited.
func (o QueueRetryConfigPtrOutput) MaxRetryDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueRetryConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxRetryDuration
	}).(pulumi.StringPtrOutput)
}

// A task will be scheduled for retry between minBackoff and
// maxBackoff duration after it fails, if the queue's RetryConfig
// specifies that the task should be retried.
func (o QueueRetryConfigPtrOutput) MinBackoff() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueRetryConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinBackoff
	}).(pulumi.StringPtrOutput)
}

type QueueStackdriverLoggingConfig struct {
	// Specifies the fraction of operations to write to Stackdriver Logging.
	// This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
	// default and means that no operations are logged.
	SamplingRatio float64 `pulumi:"samplingRatio"`
}

// QueueStackdriverLoggingConfigInput is an input type that accepts QueueStackdriverLoggingConfigArgs and QueueStackdriverLoggingConfigOutput values.
// You can construct a concrete instance of `QueueStackdriverLoggingConfigInput` via:
//
//	QueueStackdriverLoggingConfigArgs{...}
type QueueStackdriverLoggingConfigInput interface {
	pulumi.Input

	ToQueueStackdriverLoggingConfigOutput() QueueStackdriverLoggingConfigOutput
	ToQueueStackdriverLoggingConfigOutputWithContext(context.Context) QueueStackdriverLoggingConfigOutput
}

type QueueStackdriverLoggingConfigArgs struct {
	// Specifies the fraction of operations to write to Stackdriver Logging.
	// This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
	// default and means that no operations are logged.
	SamplingRatio pulumi.Float64Input `pulumi:"samplingRatio"`
}

func (QueueStackdriverLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueStackdriverLoggingConfig)(nil)).Elem()
}

func (i QueueStackdriverLoggingConfigArgs) ToQueueStackdriverLoggingConfigOutput() QueueStackdriverLoggingConfigOutput {
	return i.ToQueueStackdriverLoggingConfigOutputWithContext(context.Background())
}

func (i QueueStackdriverLoggingConfigArgs) ToQueueStackdriverLoggingConfigOutputWithContext(ctx context.Context) QueueStackdriverLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueStackdriverLoggingConfigOutput)
}

func (i QueueStackdriverLoggingConfigArgs) ToQueueStackdriverLoggingConfigPtrOutput() QueueStackdriverLoggingConfigPtrOutput {
	return i.ToQueueStackdriverLoggingConfigPtrOutputWithContext(context.Background())
}

func (i QueueStackdriverLoggingConfigArgs) ToQueueStackdriverLoggingConfigPtrOutputWithContext(ctx context.Context) QueueStackdriverLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueStackdriverLoggingConfigOutput).ToQueueStackdriverLoggingConfigPtrOutputWithContext(ctx)
}

// QueueStackdriverLoggingConfigPtrInput is an input type that accepts QueueStackdriverLoggingConfigArgs, QueueStackdriverLoggingConfigPtr and QueueStackdriverLoggingConfigPtrOutput values.
// You can construct a concrete instance of `QueueStackdriverLoggingConfigPtrInput` via:
//
//	        QueueStackdriverLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type QueueStackdriverLoggingConfigPtrInput interface {
	pulumi.Input

	ToQueueStackdriverLoggingConfigPtrOutput() QueueStackdriverLoggingConfigPtrOutput
	ToQueueStackdriverLoggingConfigPtrOutputWithContext(context.Context) QueueStackdriverLoggingConfigPtrOutput
}

type queueStackdriverLoggingConfigPtrType QueueStackdriverLoggingConfigArgs

func QueueStackdriverLoggingConfigPtr(v *QueueStackdriverLoggingConfigArgs) QueueStackdriverLoggingConfigPtrInput {
	return (*queueStackdriverLoggingConfigPtrType)(v)
}

func (*queueStackdriverLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueStackdriverLoggingConfig)(nil)).Elem()
}

func (i *queueStackdriverLoggingConfigPtrType) ToQueueStackdriverLoggingConfigPtrOutput() QueueStackdriverLoggingConfigPtrOutput {
	return i.ToQueueStackdriverLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *queueStackdriverLoggingConfigPtrType) ToQueueStackdriverLoggingConfigPtrOutputWithContext(ctx context.Context) QueueStackdriverLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueStackdriverLoggingConfigPtrOutput)
}

type QueueStackdriverLoggingConfigOutput struct{ *pulumi.OutputState }

func (QueueStackdriverLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueStackdriverLoggingConfig)(nil)).Elem()
}

func (o QueueStackdriverLoggingConfigOutput) ToQueueStackdriverLoggingConfigOutput() QueueStackdriverLoggingConfigOutput {
	return o
}

func (o QueueStackdriverLoggingConfigOutput) ToQueueStackdriverLoggingConfigOutputWithContext(ctx context.Context) QueueStackdriverLoggingConfigOutput {
	return o
}

func (o QueueStackdriverLoggingConfigOutput) ToQueueStackdriverLoggingConfigPtrOutput() QueueStackdriverLoggingConfigPtrOutput {
	return o.ToQueueStackdriverLoggingConfigPtrOutputWithContext(context.Background())
}

func (o QueueStackdriverLoggingConfigOutput) ToQueueStackdriverLoggingConfigPtrOutputWithContext(ctx context.Context) QueueStackdriverLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueStackdriverLoggingConfig) *QueueStackdriverLoggingConfig {
		return &v
	}).(QueueStackdriverLoggingConfigPtrOutput)
}

// Specifies the fraction of operations to write to Stackdriver Logging.
// This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
// default and means that no operations are logged.
func (o QueueStackdriverLoggingConfigOutput) SamplingRatio() pulumi.Float64Output {
	return o.ApplyT(func(v QueueStackdriverLoggingConfig) float64 { return v.SamplingRatio }).(pulumi.Float64Output)
}

type QueueStackdriverLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (QueueStackdriverLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueStackdriverLoggingConfig)(nil)).Elem()
}

func (o QueueStackdriverLoggingConfigPtrOutput) ToQueueStackdriverLoggingConfigPtrOutput() QueueStackdriverLoggingConfigPtrOutput {
	return o
}

func (o QueueStackdriverLoggingConfigPtrOutput) ToQueueStackdriverLoggingConfigPtrOutputWithContext(ctx context.Context) QueueStackdriverLoggingConfigPtrOutput {
	return o
}

func (o QueueStackdriverLoggingConfigPtrOutput) Elem() QueueStackdriverLoggingConfigOutput {
	return o.ApplyT(func(v *QueueStackdriverLoggingConfig) QueueStackdriverLoggingConfig {
		if v != nil {
			return *v
		}
		var ret QueueStackdriverLoggingConfig
		return ret
	}).(QueueStackdriverLoggingConfigOutput)
}

// Specifies the fraction of operations to write to Stackdriver Logging.
// This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
// default and means that no operations are logged.
func (o QueueStackdriverLoggingConfigPtrOutput) SamplingRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *QueueStackdriverLoggingConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.SamplingRatio
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QueueAppEngineRoutingOverrideInput)(nil)).Elem(), QueueAppEngineRoutingOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueAppEngineRoutingOverridePtrInput)(nil)).Elem(), QueueAppEngineRoutingOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetInput)(nil)).Elem(), QueueHttpTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetPtrInput)(nil)).Elem(), QueueHttpTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetHeaderOverrideInput)(nil)).Elem(), QueueHttpTargetHeaderOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetHeaderOverrideArrayInput)(nil)).Elem(), QueueHttpTargetHeaderOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetHeaderOverrideHeaderInput)(nil)).Elem(), QueueHttpTargetHeaderOverrideHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetOauthTokenInput)(nil)).Elem(), QueueHttpTargetOauthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetOauthTokenPtrInput)(nil)).Elem(), QueueHttpTargetOauthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetOidcTokenInput)(nil)).Elem(), QueueHttpTargetOidcTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetOidcTokenPtrInput)(nil)).Elem(), QueueHttpTargetOidcTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetUriOverrideInput)(nil)).Elem(), QueueHttpTargetUriOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetUriOverridePtrInput)(nil)).Elem(), QueueHttpTargetUriOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetUriOverridePathOverrideInput)(nil)).Elem(), QueueHttpTargetUriOverridePathOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetUriOverridePathOverridePtrInput)(nil)).Elem(), QueueHttpTargetUriOverridePathOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetUriOverrideQueryOverrideInput)(nil)).Elem(), QueueHttpTargetUriOverrideQueryOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueHttpTargetUriOverrideQueryOverridePtrInput)(nil)).Elem(), QueueHttpTargetUriOverrideQueryOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueIamBindingConditionInput)(nil)).Elem(), QueueIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueIamBindingConditionPtrInput)(nil)).Elem(), QueueIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueIamMemberConditionInput)(nil)).Elem(), QueueIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueIamMemberConditionPtrInput)(nil)).Elem(), QueueIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueRateLimitsInput)(nil)).Elem(), QueueRateLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueRateLimitsPtrInput)(nil)).Elem(), QueueRateLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueRetryConfigInput)(nil)).Elem(), QueueRetryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueRetryConfigPtrInput)(nil)).Elem(), QueueRetryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueStackdriverLoggingConfigInput)(nil)).Elem(), QueueStackdriverLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueStackdriverLoggingConfigPtrInput)(nil)).Elem(), QueueStackdriverLoggingConfigArgs{})
	pulumi.RegisterOutputType(QueueAppEngineRoutingOverrideOutput{})
	pulumi.RegisterOutputType(QueueAppEngineRoutingOverridePtrOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetPtrOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetHeaderOverrideOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetHeaderOverrideArrayOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetHeaderOverrideHeaderOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetOauthTokenOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetOauthTokenPtrOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetOidcTokenOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetOidcTokenPtrOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetUriOverrideOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetUriOverridePtrOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetUriOverridePathOverrideOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetUriOverridePathOverridePtrOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetUriOverrideQueryOverrideOutput{})
	pulumi.RegisterOutputType(QueueHttpTargetUriOverrideQueryOverridePtrOutput{})
	pulumi.RegisterOutputType(QueueIamBindingConditionOutput{})
	pulumi.RegisterOutputType(QueueIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(QueueIamMemberConditionOutput{})
	pulumi.RegisterOutputType(QueueIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(QueueRateLimitsOutput{})
	pulumi.RegisterOutputType(QueueRateLimitsPtrOutput{})
	pulumi.RegisterOutputType(QueueRetryConfigOutput{})
	pulumi.RegisterOutputType(QueueRetryConfigPtrOutput{})
	pulumi.RegisterOutputType(QueueStackdriverLoggingConfigOutput{})
	pulumi.RegisterOutputType(QueueStackdriverLoggingConfigPtrOutput{})
}
