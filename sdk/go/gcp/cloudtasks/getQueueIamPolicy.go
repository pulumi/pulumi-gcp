// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudtasks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for queue
func LookupQueueIamPolicy(ctx *pulumi.Context, args *LookupQueueIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupQueueIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueueIamPolicyResult
	err := ctx.Invoke("gcp:cloudtasks/getQueueIamPolicy:getQueueIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueueIamPolicy.
type LookupQueueIamPolicyArgs struct {
	// The location of the queue Used to find the parent resource to bind the IAM policy to
	Location *string `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getQueueIamPolicy.
type LookupQueueIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// (Required only by `cloudtasks.QueueIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupQueueIamPolicyOutput(ctx *pulumi.Context, args LookupQueueIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupQueueIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueueIamPolicyResult, error) {
			args := v.(LookupQueueIamPolicyArgs)
			r, err := LookupQueueIamPolicy(ctx, &args, opts...)
			var s LookupQueueIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQueueIamPolicyResultOutput)
}

// A collection of arguments for invoking getQueueIamPolicy.
type LookupQueueIamPolicyOutputArgs struct {
	// The location of the queue Used to find the parent resource to bind the IAM policy to
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupQueueIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getQueueIamPolicy.
type LookupQueueIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupQueueIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueIamPolicyResult)(nil)).Elem()
}

func (o LookupQueueIamPolicyResultOutput) ToLookupQueueIamPolicyResultOutput() LookupQueueIamPolicyResultOutput {
	return o
}

func (o LookupQueueIamPolicyResultOutput) ToLookupQueueIamPolicyResultOutputWithContext(ctx context.Context) LookupQueueIamPolicyResultOutput {
	return o
}

func (o LookupQueueIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupQueueIamPolicyResult] {
	return pulumix.Output[LookupQueueIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupQueueIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQueueIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupQueueIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupQueueIamPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueIamPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Required only by `cloudtasks.QueueIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupQueueIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupQueueIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueueIamPolicyResultOutput{})
}
