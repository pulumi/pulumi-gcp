// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A connectivity test is a static analysis of your resource configurations
// that enables you to evaluate connectivity to and from Google Cloud
// resources in your Virtual Private Cloud (VPC) network. This data source allows
// you to list connectivity tests in a project.
//
// To get more information about connectivity tests, see:
//
// * [API documentation](https://cloud.google.com/network-intelligence-center/docs/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests/rerun)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/network-intelligence-center/docs)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/networkmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkmanagement.GetConnectivityTests(ctx, &networkmanagement.GetConnectivityTestsArgs{
//				Filter: pulumi.StringRef("name:projects/project-id/locations/global/connectivityTests/my-tests"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConnectivityTests(ctx *pulumi.Context, args *GetConnectivityTestsArgs, opts ...pulumi.InvokeOption) (*GetConnectivityTestsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectivityTestsResult
	err := ctx.Invoke("gcp:networkmanagement/getConnectivityTests:getConnectivityTests", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectivityTests.
type GetConnectivityTestsArgs struct {
	// Lists the ConnectivityTests that match the [filter expression](https://cloud.google.com/network-intelligence-center/docs/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests/list#query-parameters). A filter expression filters the resources listed in the response.
	Filter *string `pulumi:"filter"`
	// The ID of the project.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getConnectivityTests.
type GetConnectivityTestsResult struct {
	// A list of connectivity tests in the selected project matching the filter. Structure is defined below.
	ConnectivityTests []GetConnectivityTestsConnectivityTest `pulumi:"connectivityTests"`
	Filter            *string                                `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the project in which the resource belongs.
	Project string `pulumi:"project"`
}

func GetConnectivityTestsOutput(ctx *pulumi.Context, args GetConnectivityTestsOutputArgs, opts ...pulumi.InvokeOption) GetConnectivityTestsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetConnectivityTestsResultOutput, error) {
			args := v.(GetConnectivityTestsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:networkmanagement/getConnectivityTests:getConnectivityTests", args, GetConnectivityTestsResultOutput{}, options).(GetConnectivityTestsResultOutput), nil
		}).(GetConnectivityTestsResultOutput)
}

// A collection of arguments for invoking getConnectivityTests.
type GetConnectivityTestsOutputArgs struct {
	// Lists the ConnectivityTests that match the [filter expression](https://cloud.google.com/network-intelligence-center/docs/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests/list#query-parameters). A filter expression filters the resources listed in the response.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The ID of the project.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetConnectivityTestsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsArgs)(nil)).Elem()
}

// A collection of values returned by getConnectivityTests.
type GetConnectivityTestsResultOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsResult)(nil)).Elem()
}

func (o GetConnectivityTestsResultOutput) ToGetConnectivityTestsResultOutput() GetConnectivityTestsResultOutput {
	return o
}

func (o GetConnectivityTestsResultOutput) ToGetConnectivityTestsResultOutputWithContext(ctx context.Context) GetConnectivityTestsResultOutput {
	return o
}

// A list of connectivity tests in the selected project matching the filter. Structure is defined below.
func (o GetConnectivityTestsResultOutput) ConnectivityTests() GetConnectivityTestsConnectivityTestArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestsResult) []GetConnectivityTestsConnectivityTest { return v.ConnectivityTests }).(GetConnectivityTestsConnectivityTestArrayOutput)
}

func (o GetConnectivityTestsResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectivityTestsResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConnectivityTestsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
func (o GetConnectivityTestsResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectivityTestsResultOutput{})
}
