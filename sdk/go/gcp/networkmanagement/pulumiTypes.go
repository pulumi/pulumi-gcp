// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConnectivityTestDestination struct {
	// A Cloud SQL instance URI.
	CloudSqlInstance *string `pulumi:"cloudSqlInstance"`
	// Forwarding rule URI. Forwarding rules are frontends for load balancers,
	// PSC endpoints, and Protocol Forwarding.
	ForwardingRule *string `pulumi:"forwardingRule"`
	// A DNS endpoint of Google Kubernetes Engine cluster control plane.
	// Requires gkeMasterCluster to be set, can't be used simultaneoulsly with
	// ipAddress or network. Applicable only to destination endpoint.
	Fqdn *string `pulumi:"fqdn"`
	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster *string `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance *string `pulumi:"instance"`
	// The IP address of the endpoint, which can be an external or internal IP.
	IpAddress *string `pulumi:"ipAddress"`
	// A VPC network URI.
	Network *string `pulumi:"network"`
	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	Port *int `pulumi:"port"`
	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	// 1. Only the IP address is specified, and the IP address is within a Google
	//    Cloud project.
	// 2. When you are using Shared VPC and the IP address that you provide is
	//    from the service project. In this case, the network that the IP address
	//    resides in is defined in the host project.
	ProjectId *string `pulumi:"projectId"`
	// A Redis Cluster URI.
	RedisCluster *string `pulumi:"redisCluster"`
	// A Redis Instance URI.
	RedisInstance *string `pulumi:"redisInstance"`
}

// ConnectivityTestDestinationInput is an input type that accepts ConnectivityTestDestinationArgs and ConnectivityTestDestinationOutput values.
// You can construct a concrete instance of `ConnectivityTestDestinationInput` via:
//
//	ConnectivityTestDestinationArgs{...}
type ConnectivityTestDestinationInput interface {
	pulumi.Input

	ToConnectivityTestDestinationOutput() ConnectivityTestDestinationOutput
	ToConnectivityTestDestinationOutputWithContext(context.Context) ConnectivityTestDestinationOutput
}

type ConnectivityTestDestinationArgs struct {
	// A Cloud SQL instance URI.
	CloudSqlInstance pulumi.StringPtrInput `pulumi:"cloudSqlInstance"`
	// Forwarding rule URI. Forwarding rules are frontends for load balancers,
	// PSC endpoints, and Protocol Forwarding.
	ForwardingRule pulumi.StringPtrInput `pulumi:"forwardingRule"`
	// A DNS endpoint of Google Kubernetes Engine cluster control plane.
	// Requires gkeMasterCluster to be set, can't be used simultaneoulsly with
	// ipAddress or network. Applicable only to destination endpoint.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster pulumi.StringPtrInput `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance pulumi.StringPtrInput `pulumi:"instance"`
	// The IP address of the endpoint, which can be an external or internal IP.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// A VPC network URI.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	// 1. Only the IP address is specified, and the IP address is within a Google
	//    Cloud project.
	// 2. When you are using Shared VPC and the IP address that you provide is
	//    from the service project. In this case, the network that the IP address
	//    resides in is defined in the host project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// A Redis Cluster URI.
	RedisCluster pulumi.StringPtrInput `pulumi:"redisCluster"`
	// A Redis Instance URI.
	RedisInstance pulumi.StringPtrInput `pulumi:"redisInstance"`
}

func (ConnectivityTestDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestDestination)(nil)).Elem()
}

func (i ConnectivityTestDestinationArgs) ToConnectivityTestDestinationOutput() ConnectivityTestDestinationOutput {
	return i.ToConnectivityTestDestinationOutputWithContext(context.Background())
}

func (i ConnectivityTestDestinationArgs) ToConnectivityTestDestinationOutputWithContext(ctx context.Context) ConnectivityTestDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestDestinationOutput)
}

func (i ConnectivityTestDestinationArgs) ToConnectivityTestDestinationPtrOutput() ConnectivityTestDestinationPtrOutput {
	return i.ToConnectivityTestDestinationPtrOutputWithContext(context.Background())
}

func (i ConnectivityTestDestinationArgs) ToConnectivityTestDestinationPtrOutputWithContext(ctx context.Context) ConnectivityTestDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestDestinationOutput).ToConnectivityTestDestinationPtrOutputWithContext(ctx)
}

// ConnectivityTestDestinationPtrInput is an input type that accepts ConnectivityTestDestinationArgs, ConnectivityTestDestinationPtr and ConnectivityTestDestinationPtrOutput values.
// You can construct a concrete instance of `ConnectivityTestDestinationPtrInput` via:
//
//	        ConnectivityTestDestinationArgs{...}
//
//	or:
//
//	        nil
type ConnectivityTestDestinationPtrInput interface {
	pulumi.Input

	ToConnectivityTestDestinationPtrOutput() ConnectivityTestDestinationPtrOutput
	ToConnectivityTestDestinationPtrOutputWithContext(context.Context) ConnectivityTestDestinationPtrOutput
}

type connectivityTestDestinationPtrType ConnectivityTestDestinationArgs

func ConnectivityTestDestinationPtr(v *ConnectivityTestDestinationArgs) ConnectivityTestDestinationPtrInput {
	return (*connectivityTestDestinationPtrType)(v)
}

func (*connectivityTestDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestDestination)(nil)).Elem()
}

func (i *connectivityTestDestinationPtrType) ToConnectivityTestDestinationPtrOutput() ConnectivityTestDestinationPtrOutput {
	return i.ToConnectivityTestDestinationPtrOutputWithContext(context.Background())
}

func (i *connectivityTestDestinationPtrType) ToConnectivityTestDestinationPtrOutputWithContext(ctx context.Context) ConnectivityTestDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestDestinationPtrOutput)
}

type ConnectivityTestDestinationOutput struct{ *pulumi.OutputState }

func (ConnectivityTestDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestDestination)(nil)).Elem()
}

func (o ConnectivityTestDestinationOutput) ToConnectivityTestDestinationOutput() ConnectivityTestDestinationOutput {
	return o
}

func (o ConnectivityTestDestinationOutput) ToConnectivityTestDestinationOutputWithContext(ctx context.Context) ConnectivityTestDestinationOutput {
	return o
}

func (o ConnectivityTestDestinationOutput) ToConnectivityTestDestinationPtrOutput() ConnectivityTestDestinationPtrOutput {
	return o.ToConnectivityTestDestinationPtrOutputWithContext(context.Background())
}

func (o ConnectivityTestDestinationOutput) ToConnectivityTestDestinationPtrOutputWithContext(ctx context.Context) ConnectivityTestDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectivityTestDestination) *ConnectivityTestDestination {
		return &v
	}).(ConnectivityTestDestinationPtrOutput)
}

// A Cloud SQL instance URI.
func (o ConnectivityTestDestinationOutput) CloudSqlInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.CloudSqlInstance }).(pulumi.StringPtrOutput)
}

// Forwarding rule URI. Forwarding rules are frontends for load balancers,
// PSC endpoints, and Protocol Forwarding.
func (o ConnectivityTestDestinationOutput) ForwardingRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.ForwardingRule }).(pulumi.StringPtrOutput)
}

// A DNS endpoint of Google Kubernetes Engine cluster control plane.
// Requires gkeMasterCluster to be set, can't be used simultaneoulsly with
// ipAddress or network. Applicable only to destination endpoint.
func (o ConnectivityTestDestinationOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// A cluster URI for Google Kubernetes Engine cluster control plane.
func (o ConnectivityTestDestinationOutput) GkeMasterCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.GkeMasterCluster }).(pulumi.StringPtrOutput)
}

// A Compute Engine instance URI.
func (o ConnectivityTestDestinationOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

// The IP address of the endpoint, which can be an external or internal IP.
func (o ConnectivityTestDestinationOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// A VPC network URI.
func (o ConnectivityTestDestinationOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// The IP protocol port of the endpoint. Only applicable when protocol is
// TCP or UDP.
func (o ConnectivityTestDestinationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Project ID where the endpoint is located.
// The project ID can be derived from the URI if you provide a endpoint or
// network URI.
// The following are two cases where you may need to provide the project ID:
//  1. Only the IP address is specified, and the IP address is within a Google
//     Cloud project.
//  2. When you are using Shared VPC and the IP address that you provide is
//     from the service project. In this case, the network that the IP address
//     resides in is defined in the host project.
func (o ConnectivityTestDestinationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// A Redis Cluster URI.
func (o ConnectivityTestDestinationOutput) RedisCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.RedisCluster }).(pulumi.StringPtrOutput)
}

// A Redis Instance URI.
func (o ConnectivityTestDestinationOutput) RedisInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestDestination) *string { return v.RedisInstance }).(pulumi.StringPtrOutput)
}

type ConnectivityTestDestinationPtrOutput struct{ *pulumi.OutputState }

func (ConnectivityTestDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestDestination)(nil)).Elem()
}

func (o ConnectivityTestDestinationPtrOutput) ToConnectivityTestDestinationPtrOutput() ConnectivityTestDestinationPtrOutput {
	return o
}

func (o ConnectivityTestDestinationPtrOutput) ToConnectivityTestDestinationPtrOutputWithContext(ctx context.Context) ConnectivityTestDestinationPtrOutput {
	return o
}

func (o ConnectivityTestDestinationPtrOutput) Elem() ConnectivityTestDestinationOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) ConnectivityTestDestination {
		if v != nil {
			return *v
		}
		var ret ConnectivityTestDestination
		return ret
	}).(ConnectivityTestDestinationOutput)
}

// A Cloud SQL instance URI.
func (o ConnectivityTestDestinationPtrOutput) CloudSqlInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.CloudSqlInstance
	}).(pulumi.StringPtrOutput)
}

// Forwarding rule URI. Forwarding rules are frontends for load balancers,
// PSC endpoints, and Protocol Forwarding.
func (o ConnectivityTestDestinationPtrOutput) ForwardingRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.ForwardingRule
	}).(pulumi.StringPtrOutput)
}

// A DNS endpoint of Google Kubernetes Engine cluster control plane.
// Requires gkeMasterCluster to be set, can't be used simultaneoulsly with
// ipAddress or network. Applicable only to destination endpoint.
func (o ConnectivityTestDestinationPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// A cluster URI for Google Kubernetes Engine cluster control plane.
func (o ConnectivityTestDestinationPtrOutput) GkeMasterCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.GkeMasterCluster
	}).(pulumi.StringPtrOutput)
}

// A Compute Engine instance URI.
func (o ConnectivityTestDestinationPtrOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.Instance
	}).(pulumi.StringPtrOutput)
}

// The IP address of the endpoint, which can be an external or internal IP.
func (o ConnectivityTestDestinationPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// A VPC network URI.
func (o ConnectivityTestDestinationPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// The IP protocol port of the endpoint. Only applicable when protocol is
// TCP or UDP.
func (o ConnectivityTestDestinationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Project ID where the endpoint is located.
// The project ID can be derived from the URI if you provide a endpoint or
// network URI.
// The following are two cases where you may need to provide the project ID:
//  1. Only the IP address is specified, and the IP address is within a Google
//     Cloud project.
//  2. When you are using Shared VPC and the IP address that you provide is
//     from the service project. In this case, the network that the IP address
//     resides in is defined in the host project.
func (o ConnectivityTestDestinationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// A Redis Cluster URI.
func (o ConnectivityTestDestinationPtrOutput) RedisCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.RedisCluster
	}).(pulumi.StringPtrOutput)
}

// A Redis Instance URI.
func (o ConnectivityTestDestinationPtrOutput) RedisInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestDestination) *string {
		if v == nil {
			return nil
		}
		return v.RedisInstance
	}).(pulumi.StringPtrOutput)
}

type ConnectivityTestSource struct {
	// An App Engine service version.
	// Structure is documented below.
	AppEngineVersion *ConnectivityTestSourceAppEngineVersion `pulumi:"appEngineVersion"`
	// A Cloud Function.
	// Structure is documented below.
	CloudFunction *ConnectivityTestSourceCloudFunction `pulumi:"cloudFunction"`
	// A Cloud Run revision.
	// Structure is documented below.
	CloudRunRevision *ConnectivityTestSourceCloudRunRevision `pulumi:"cloudRunRevision"`
	// A Cloud SQL instance URI.
	CloudSqlInstance *string `pulumi:"cloudSqlInstance"`
	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster *string `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance *string `pulumi:"instance"`
	// The IP address of the endpoint, which can be an external or internal IP.
	IpAddress *string `pulumi:"ipAddress"`
	// A VPC network URI.
	Network *string `pulumi:"network"`
	// Type of the network where the endpoint is located.
	// Possible values are: `GCP_NETWORK`, `NON_GCP_NETWORK`.
	NetworkType *string `pulumi:"networkType"`
	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	Port *int `pulumi:"port"`
	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	// 1. Only the IP address is specified, and the IP address is within a Google
	//    Cloud project.
	// 2. When you are using Shared VPC and the IP address that you provide is
	//    from the service project. In this case, the network that the IP address
	//    resides in is defined in the host project.
	ProjectId *string `pulumi:"projectId"`
}

// ConnectivityTestSourceInput is an input type that accepts ConnectivityTestSourceArgs and ConnectivityTestSourceOutput values.
// You can construct a concrete instance of `ConnectivityTestSourceInput` via:
//
//	ConnectivityTestSourceArgs{...}
type ConnectivityTestSourceInput interface {
	pulumi.Input

	ToConnectivityTestSourceOutput() ConnectivityTestSourceOutput
	ToConnectivityTestSourceOutputWithContext(context.Context) ConnectivityTestSourceOutput
}

type ConnectivityTestSourceArgs struct {
	// An App Engine service version.
	// Structure is documented below.
	AppEngineVersion ConnectivityTestSourceAppEngineVersionPtrInput `pulumi:"appEngineVersion"`
	// A Cloud Function.
	// Structure is documented below.
	CloudFunction ConnectivityTestSourceCloudFunctionPtrInput `pulumi:"cloudFunction"`
	// A Cloud Run revision.
	// Structure is documented below.
	CloudRunRevision ConnectivityTestSourceCloudRunRevisionPtrInput `pulumi:"cloudRunRevision"`
	// A Cloud SQL instance URI.
	CloudSqlInstance pulumi.StringPtrInput `pulumi:"cloudSqlInstance"`
	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster pulumi.StringPtrInput `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance pulumi.StringPtrInput `pulumi:"instance"`
	// The IP address of the endpoint, which can be an external or internal IP.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// A VPC network URI.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Type of the network where the endpoint is located.
	// Possible values are: `GCP_NETWORK`, `NON_GCP_NETWORK`.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// The IP protocol port of the endpoint. Only applicable when protocol is
	// TCP or UDP.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Project ID where the endpoint is located.
	// The project ID can be derived from the URI if you provide a endpoint or
	// network URI.
	// The following are two cases where you may need to provide the project ID:
	// 1. Only the IP address is specified, and the IP address is within a Google
	//    Cloud project.
	// 2. When you are using Shared VPC and the IP address that you provide is
	//    from the service project. In this case, the network that the IP address
	//    resides in is defined in the host project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (ConnectivityTestSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestSource)(nil)).Elem()
}

func (i ConnectivityTestSourceArgs) ToConnectivityTestSourceOutput() ConnectivityTestSourceOutput {
	return i.ToConnectivityTestSourceOutputWithContext(context.Background())
}

func (i ConnectivityTestSourceArgs) ToConnectivityTestSourceOutputWithContext(ctx context.Context) ConnectivityTestSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceOutput)
}

func (i ConnectivityTestSourceArgs) ToConnectivityTestSourcePtrOutput() ConnectivityTestSourcePtrOutput {
	return i.ToConnectivityTestSourcePtrOutputWithContext(context.Background())
}

func (i ConnectivityTestSourceArgs) ToConnectivityTestSourcePtrOutputWithContext(ctx context.Context) ConnectivityTestSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceOutput).ToConnectivityTestSourcePtrOutputWithContext(ctx)
}

// ConnectivityTestSourcePtrInput is an input type that accepts ConnectivityTestSourceArgs, ConnectivityTestSourcePtr and ConnectivityTestSourcePtrOutput values.
// You can construct a concrete instance of `ConnectivityTestSourcePtrInput` via:
//
//	        ConnectivityTestSourceArgs{...}
//
//	or:
//
//	        nil
type ConnectivityTestSourcePtrInput interface {
	pulumi.Input

	ToConnectivityTestSourcePtrOutput() ConnectivityTestSourcePtrOutput
	ToConnectivityTestSourcePtrOutputWithContext(context.Context) ConnectivityTestSourcePtrOutput
}

type connectivityTestSourcePtrType ConnectivityTestSourceArgs

func ConnectivityTestSourcePtr(v *ConnectivityTestSourceArgs) ConnectivityTestSourcePtrInput {
	return (*connectivityTestSourcePtrType)(v)
}

func (*connectivityTestSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestSource)(nil)).Elem()
}

func (i *connectivityTestSourcePtrType) ToConnectivityTestSourcePtrOutput() ConnectivityTestSourcePtrOutput {
	return i.ToConnectivityTestSourcePtrOutputWithContext(context.Background())
}

func (i *connectivityTestSourcePtrType) ToConnectivityTestSourcePtrOutputWithContext(ctx context.Context) ConnectivityTestSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourcePtrOutput)
}

type ConnectivityTestSourceOutput struct{ *pulumi.OutputState }

func (ConnectivityTestSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestSource)(nil)).Elem()
}

func (o ConnectivityTestSourceOutput) ToConnectivityTestSourceOutput() ConnectivityTestSourceOutput {
	return o
}

func (o ConnectivityTestSourceOutput) ToConnectivityTestSourceOutputWithContext(ctx context.Context) ConnectivityTestSourceOutput {
	return o
}

func (o ConnectivityTestSourceOutput) ToConnectivityTestSourcePtrOutput() ConnectivityTestSourcePtrOutput {
	return o.ToConnectivityTestSourcePtrOutputWithContext(context.Background())
}

func (o ConnectivityTestSourceOutput) ToConnectivityTestSourcePtrOutputWithContext(ctx context.Context) ConnectivityTestSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectivityTestSource) *ConnectivityTestSource {
		return &v
	}).(ConnectivityTestSourcePtrOutput)
}

// An App Engine service version.
// Structure is documented below.
func (o ConnectivityTestSourceOutput) AppEngineVersion() ConnectivityTestSourceAppEngineVersionPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *ConnectivityTestSourceAppEngineVersion { return v.AppEngineVersion }).(ConnectivityTestSourceAppEngineVersionPtrOutput)
}

// A Cloud Function.
// Structure is documented below.
func (o ConnectivityTestSourceOutput) CloudFunction() ConnectivityTestSourceCloudFunctionPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *ConnectivityTestSourceCloudFunction { return v.CloudFunction }).(ConnectivityTestSourceCloudFunctionPtrOutput)
}

// A Cloud Run revision.
// Structure is documented below.
func (o ConnectivityTestSourceOutput) CloudRunRevision() ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *ConnectivityTestSourceCloudRunRevision { return v.CloudRunRevision }).(ConnectivityTestSourceCloudRunRevisionPtrOutput)
}

// A Cloud SQL instance URI.
func (o ConnectivityTestSourceOutput) CloudSqlInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *string { return v.CloudSqlInstance }).(pulumi.StringPtrOutput)
}

// A cluster URI for Google Kubernetes Engine cluster control plane.
func (o ConnectivityTestSourceOutput) GkeMasterCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *string { return v.GkeMasterCluster }).(pulumi.StringPtrOutput)
}

// A Compute Engine instance URI.
func (o ConnectivityTestSourceOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

// The IP address of the endpoint, which can be an external or internal IP.
func (o ConnectivityTestSourceOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// A VPC network URI.
func (o ConnectivityTestSourceOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Type of the network where the endpoint is located.
// Possible values are: `GCP_NETWORK`, `NON_GCP_NETWORK`.
func (o ConnectivityTestSourceOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// The IP protocol port of the endpoint. Only applicable when protocol is
// TCP or UDP.
func (o ConnectivityTestSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Project ID where the endpoint is located.
// The project ID can be derived from the URI if you provide a endpoint or
// network URI.
// The following are two cases where you may need to provide the project ID:
//  1. Only the IP address is specified, and the IP address is within a Google
//     Cloud project.
//  2. When you are using Shared VPC and the IP address that you provide is
//     from the service project. In this case, the network that the IP address
//     resides in is defined in the host project.
func (o ConnectivityTestSourceOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSource) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

type ConnectivityTestSourcePtrOutput struct{ *pulumi.OutputState }

func (ConnectivityTestSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestSource)(nil)).Elem()
}

func (o ConnectivityTestSourcePtrOutput) ToConnectivityTestSourcePtrOutput() ConnectivityTestSourcePtrOutput {
	return o
}

func (o ConnectivityTestSourcePtrOutput) ToConnectivityTestSourcePtrOutputWithContext(ctx context.Context) ConnectivityTestSourcePtrOutput {
	return o
}

func (o ConnectivityTestSourcePtrOutput) Elem() ConnectivityTestSourceOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) ConnectivityTestSource {
		if v != nil {
			return *v
		}
		var ret ConnectivityTestSource
		return ret
	}).(ConnectivityTestSourceOutput)
}

// An App Engine service version.
// Structure is documented below.
func (o ConnectivityTestSourcePtrOutput) AppEngineVersion() ConnectivityTestSourceAppEngineVersionPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *ConnectivityTestSourceAppEngineVersion {
		if v == nil {
			return nil
		}
		return v.AppEngineVersion
	}).(ConnectivityTestSourceAppEngineVersionPtrOutput)
}

// A Cloud Function.
// Structure is documented below.
func (o ConnectivityTestSourcePtrOutput) CloudFunction() ConnectivityTestSourceCloudFunctionPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *ConnectivityTestSourceCloudFunction {
		if v == nil {
			return nil
		}
		return v.CloudFunction
	}).(ConnectivityTestSourceCloudFunctionPtrOutput)
}

// A Cloud Run revision.
// Structure is documented below.
func (o ConnectivityTestSourcePtrOutput) CloudRunRevision() ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *ConnectivityTestSourceCloudRunRevision {
		if v == nil {
			return nil
		}
		return v.CloudRunRevision
	}).(ConnectivityTestSourceCloudRunRevisionPtrOutput)
}

// A Cloud SQL instance URI.
func (o ConnectivityTestSourcePtrOutput) CloudSqlInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *string {
		if v == nil {
			return nil
		}
		return v.CloudSqlInstance
	}).(pulumi.StringPtrOutput)
}

// A cluster URI for Google Kubernetes Engine cluster control plane.
func (o ConnectivityTestSourcePtrOutput) GkeMasterCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *string {
		if v == nil {
			return nil
		}
		return v.GkeMasterCluster
	}).(pulumi.StringPtrOutput)
}

// A Compute Engine instance URI.
func (o ConnectivityTestSourcePtrOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *string {
		if v == nil {
			return nil
		}
		return v.Instance
	}).(pulumi.StringPtrOutput)
}

// The IP address of the endpoint, which can be an external or internal IP.
func (o ConnectivityTestSourcePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// A VPC network URI.
func (o ConnectivityTestSourcePtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// Type of the network where the endpoint is located.
// Possible values are: `GCP_NETWORK`, `NON_GCP_NETWORK`.
func (o ConnectivityTestSourcePtrOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *string {
		if v == nil {
			return nil
		}
		return v.NetworkType
	}).(pulumi.StringPtrOutput)
}

// The IP protocol port of the endpoint. Only applicable when protocol is
// TCP or UDP.
func (o ConnectivityTestSourcePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Project ID where the endpoint is located.
// The project ID can be derived from the URI if you provide a endpoint or
// network URI.
// The following are two cases where you may need to provide the project ID:
//  1. Only the IP address is specified, and the IP address is within a Google
//     Cloud project.
//  2. When you are using Shared VPC and the IP address that you provide is
//     from the service project. In this case, the network that the IP address
//     resides in is defined in the host project.
func (o ConnectivityTestSourcePtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSource) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

type ConnectivityTestSourceAppEngineVersion struct {
	// An App Engine service version name.
	Uri *string `pulumi:"uri"`
}

// ConnectivityTestSourceAppEngineVersionInput is an input type that accepts ConnectivityTestSourceAppEngineVersionArgs and ConnectivityTestSourceAppEngineVersionOutput values.
// You can construct a concrete instance of `ConnectivityTestSourceAppEngineVersionInput` via:
//
//	ConnectivityTestSourceAppEngineVersionArgs{...}
type ConnectivityTestSourceAppEngineVersionInput interface {
	pulumi.Input

	ToConnectivityTestSourceAppEngineVersionOutput() ConnectivityTestSourceAppEngineVersionOutput
	ToConnectivityTestSourceAppEngineVersionOutputWithContext(context.Context) ConnectivityTestSourceAppEngineVersionOutput
}

type ConnectivityTestSourceAppEngineVersionArgs struct {
	// An App Engine service version name.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ConnectivityTestSourceAppEngineVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestSourceAppEngineVersion)(nil)).Elem()
}

func (i ConnectivityTestSourceAppEngineVersionArgs) ToConnectivityTestSourceAppEngineVersionOutput() ConnectivityTestSourceAppEngineVersionOutput {
	return i.ToConnectivityTestSourceAppEngineVersionOutputWithContext(context.Background())
}

func (i ConnectivityTestSourceAppEngineVersionArgs) ToConnectivityTestSourceAppEngineVersionOutputWithContext(ctx context.Context) ConnectivityTestSourceAppEngineVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceAppEngineVersionOutput)
}

func (i ConnectivityTestSourceAppEngineVersionArgs) ToConnectivityTestSourceAppEngineVersionPtrOutput() ConnectivityTestSourceAppEngineVersionPtrOutput {
	return i.ToConnectivityTestSourceAppEngineVersionPtrOutputWithContext(context.Background())
}

func (i ConnectivityTestSourceAppEngineVersionArgs) ToConnectivityTestSourceAppEngineVersionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceAppEngineVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceAppEngineVersionOutput).ToConnectivityTestSourceAppEngineVersionPtrOutputWithContext(ctx)
}

// ConnectivityTestSourceAppEngineVersionPtrInput is an input type that accepts ConnectivityTestSourceAppEngineVersionArgs, ConnectivityTestSourceAppEngineVersionPtr and ConnectivityTestSourceAppEngineVersionPtrOutput values.
// You can construct a concrete instance of `ConnectivityTestSourceAppEngineVersionPtrInput` via:
//
//	        ConnectivityTestSourceAppEngineVersionArgs{...}
//
//	or:
//
//	        nil
type ConnectivityTestSourceAppEngineVersionPtrInput interface {
	pulumi.Input

	ToConnectivityTestSourceAppEngineVersionPtrOutput() ConnectivityTestSourceAppEngineVersionPtrOutput
	ToConnectivityTestSourceAppEngineVersionPtrOutputWithContext(context.Context) ConnectivityTestSourceAppEngineVersionPtrOutput
}

type connectivityTestSourceAppEngineVersionPtrType ConnectivityTestSourceAppEngineVersionArgs

func ConnectivityTestSourceAppEngineVersionPtr(v *ConnectivityTestSourceAppEngineVersionArgs) ConnectivityTestSourceAppEngineVersionPtrInput {
	return (*connectivityTestSourceAppEngineVersionPtrType)(v)
}

func (*connectivityTestSourceAppEngineVersionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestSourceAppEngineVersion)(nil)).Elem()
}

func (i *connectivityTestSourceAppEngineVersionPtrType) ToConnectivityTestSourceAppEngineVersionPtrOutput() ConnectivityTestSourceAppEngineVersionPtrOutput {
	return i.ToConnectivityTestSourceAppEngineVersionPtrOutputWithContext(context.Background())
}

func (i *connectivityTestSourceAppEngineVersionPtrType) ToConnectivityTestSourceAppEngineVersionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceAppEngineVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceAppEngineVersionPtrOutput)
}

type ConnectivityTestSourceAppEngineVersionOutput struct{ *pulumi.OutputState }

func (ConnectivityTestSourceAppEngineVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestSourceAppEngineVersion)(nil)).Elem()
}

func (o ConnectivityTestSourceAppEngineVersionOutput) ToConnectivityTestSourceAppEngineVersionOutput() ConnectivityTestSourceAppEngineVersionOutput {
	return o
}

func (o ConnectivityTestSourceAppEngineVersionOutput) ToConnectivityTestSourceAppEngineVersionOutputWithContext(ctx context.Context) ConnectivityTestSourceAppEngineVersionOutput {
	return o
}

func (o ConnectivityTestSourceAppEngineVersionOutput) ToConnectivityTestSourceAppEngineVersionPtrOutput() ConnectivityTestSourceAppEngineVersionPtrOutput {
	return o.ToConnectivityTestSourceAppEngineVersionPtrOutputWithContext(context.Background())
}

func (o ConnectivityTestSourceAppEngineVersionOutput) ToConnectivityTestSourceAppEngineVersionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceAppEngineVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectivityTestSourceAppEngineVersion) *ConnectivityTestSourceAppEngineVersion {
		return &v
	}).(ConnectivityTestSourceAppEngineVersionPtrOutput)
}

// An App Engine service version name.
func (o ConnectivityTestSourceAppEngineVersionOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSourceAppEngineVersion) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ConnectivityTestSourceAppEngineVersionPtrOutput struct{ *pulumi.OutputState }

func (ConnectivityTestSourceAppEngineVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestSourceAppEngineVersion)(nil)).Elem()
}

func (o ConnectivityTestSourceAppEngineVersionPtrOutput) ToConnectivityTestSourceAppEngineVersionPtrOutput() ConnectivityTestSourceAppEngineVersionPtrOutput {
	return o
}

func (o ConnectivityTestSourceAppEngineVersionPtrOutput) ToConnectivityTestSourceAppEngineVersionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceAppEngineVersionPtrOutput {
	return o
}

func (o ConnectivityTestSourceAppEngineVersionPtrOutput) Elem() ConnectivityTestSourceAppEngineVersionOutput {
	return o.ApplyT(func(v *ConnectivityTestSourceAppEngineVersion) ConnectivityTestSourceAppEngineVersion {
		if v != nil {
			return *v
		}
		var ret ConnectivityTestSourceAppEngineVersion
		return ret
	}).(ConnectivityTestSourceAppEngineVersionOutput)
}

// An App Engine service version name.
func (o ConnectivityTestSourceAppEngineVersionPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSourceAppEngineVersion) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type ConnectivityTestSourceCloudFunction struct {
	// A Cloud Function name.
	Uri *string `pulumi:"uri"`
}

// ConnectivityTestSourceCloudFunctionInput is an input type that accepts ConnectivityTestSourceCloudFunctionArgs and ConnectivityTestSourceCloudFunctionOutput values.
// You can construct a concrete instance of `ConnectivityTestSourceCloudFunctionInput` via:
//
//	ConnectivityTestSourceCloudFunctionArgs{...}
type ConnectivityTestSourceCloudFunctionInput interface {
	pulumi.Input

	ToConnectivityTestSourceCloudFunctionOutput() ConnectivityTestSourceCloudFunctionOutput
	ToConnectivityTestSourceCloudFunctionOutputWithContext(context.Context) ConnectivityTestSourceCloudFunctionOutput
}

type ConnectivityTestSourceCloudFunctionArgs struct {
	// A Cloud Function name.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ConnectivityTestSourceCloudFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestSourceCloudFunction)(nil)).Elem()
}

func (i ConnectivityTestSourceCloudFunctionArgs) ToConnectivityTestSourceCloudFunctionOutput() ConnectivityTestSourceCloudFunctionOutput {
	return i.ToConnectivityTestSourceCloudFunctionOutputWithContext(context.Background())
}

func (i ConnectivityTestSourceCloudFunctionArgs) ToConnectivityTestSourceCloudFunctionOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceCloudFunctionOutput)
}

func (i ConnectivityTestSourceCloudFunctionArgs) ToConnectivityTestSourceCloudFunctionPtrOutput() ConnectivityTestSourceCloudFunctionPtrOutput {
	return i.ToConnectivityTestSourceCloudFunctionPtrOutputWithContext(context.Background())
}

func (i ConnectivityTestSourceCloudFunctionArgs) ToConnectivityTestSourceCloudFunctionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceCloudFunctionOutput).ToConnectivityTestSourceCloudFunctionPtrOutputWithContext(ctx)
}

// ConnectivityTestSourceCloudFunctionPtrInput is an input type that accepts ConnectivityTestSourceCloudFunctionArgs, ConnectivityTestSourceCloudFunctionPtr and ConnectivityTestSourceCloudFunctionPtrOutput values.
// You can construct a concrete instance of `ConnectivityTestSourceCloudFunctionPtrInput` via:
//
//	        ConnectivityTestSourceCloudFunctionArgs{...}
//
//	or:
//
//	        nil
type ConnectivityTestSourceCloudFunctionPtrInput interface {
	pulumi.Input

	ToConnectivityTestSourceCloudFunctionPtrOutput() ConnectivityTestSourceCloudFunctionPtrOutput
	ToConnectivityTestSourceCloudFunctionPtrOutputWithContext(context.Context) ConnectivityTestSourceCloudFunctionPtrOutput
}

type connectivityTestSourceCloudFunctionPtrType ConnectivityTestSourceCloudFunctionArgs

func ConnectivityTestSourceCloudFunctionPtr(v *ConnectivityTestSourceCloudFunctionArgs) ConnectivityTestSourceCloudFunctionPtrInput {
	return (*connectivityTestSourceCloudFunctionPtrType)(v)
}

func (*connectivityTestSourceCloudFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestSourceCloudFunction)(nil)).Elem()
}

func (i *connectivityTestSourceCloudFunctionPtrType) ToConnectivityTestSourceCloudFunctionPtrOutput() ConnectivityTestSourceCloudFunctionPtrOutput {
	return i.ToConnectivityTestSourceCloudFunctionPtrOutputWithContext(context.Background())
}

func (i *connectivityTestSourceCloudFunctionPtrType) ToConnectivityTestSourceCloudFunctionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceCloudFunctionPtrOutput)
}

type ConnectivityTestSourceCloudFunctionOutput struct{ *pulumi.OutputState }

func (ConnectivityTestSourceCloudFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestSourceCloudFunction)(nil)).Elem()
}

func (o ConnectivityTestSourceCloudFunctionOutput) ToConnectivityTestSourceCloudFunctionOutput() ConnectivityTestSourceCloudFunctionOutput {
	return o
}

func (o ConnectivityTestSourceCloudFunctionOutput) ToConnectivityTestSourceCloudFunctionOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudFunctionOutput {
	return o
}

func (o ConnectivityTestSourceCloudFunctionOutput) ToConnectivityTestSourceCloudFunctionPtrOutput() ConnectivityTestSourceCloudFunctionPtrOutput {
	return o.ToConnectivityTestSourceCloudFunctionPtrOutputWithContext(context.Background())
}

func (o ConnectivityTestSourceCloudFunctionOutput) ToConnectivityTestSourceCloudFunctionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectivityTestSourceCloudFunction) *ConnectivityTestSourceCloudFunction {
		return &v
	}).(ConnectivityTestSourceCloudFunctionPtrOutput)
}

// A Cloud Function name.
func (o ConnectivityTestSourceCloudFunctionOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSourceCloudFunction) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ConnectivityTestSourceCloudFunctionPtrOutput struct{ *pulumi.OutputState }

func (ConnectivityTestSourceCloudFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestSourceCloudFunction)(nil)).Elem()
}

func (o ConnectivityTestSourceCloudFunctionPtrOutput) ToConnectivityTestSourceCloudFunctionPtrOutput() ConnectivityTestSourceCloudFunctionPtrOutput {
	return o
}

func (o ConnectivityTestSourceCloudFunctionPtrOutput) ToConnectivityTestSourceCloudFunctionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudFunctionPtrOutput {
	return o
}

func (o ConnectivityTestSourceCloudFunctionPtrOutput) Elem() ConnectivityTestSourceCloudFunctionOutput {
	return o.ApplyT(func(v *ConnectivityTestSourceCloudFunction) ConnectivityTestSourceCloudFunction {
		if v != nil {
			return *v
		}
		var ret ConnectivityTestSourceCloudFunction
		return ret
	}).(ConnectivityTestSourceCloudFunctionOutput)
}

// A Cloud Function name.
func (o ConnectivityTestSourceCloudFunctionPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSourceCloudFunction) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type ConnectivityTestSourceCloudRunRevision struct {
	// A Cloud Run revision URI.
	Uri *string `pulumi:"uri"`
}

// ConnectivityTestSourceCloudRunRevisionInput is an input type that accepts ConnectivityTestSourceCloudRunRevisionArgs and ConnectivityTestSourceCloudRunRevisionOutput values.
// You can construct a concrete instance of `ConnectivityTestSourceCloudRunRevisionInput` via:
//
//	ConnectivityTestSourceCloudRunRevisionArgs{...}
type ConnectivityTestSourceCloudRunRevisionInput interface {
	pulumi.Input

	ToConnectivityTestSourceCloudRunRevisionOutput() ConnectivityTestSourceCloudRunRevisionOutput
	ToConnectivityTestSourceCloudRunRevisionOutputWithContext(context.Context) ConnectivityTestSourceCloudRunRevisionOutput
}

type ConnectivityTestSourceCloudRunRevisionArgs struct {
	// A Cloud Run revision URI.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ConnectivityTestSourceCloudRunRevisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestSourceCloudRunRevision)(nil)).Elem()
}

func (i ConnectivityTestSourceCloudRunRevisionArgs) ToConnectivityTestSourceCloudRunRevisionOutput() ConnectivityTestSourceCloudRunRevisionOutput {
	return i.ToConnectivityTestSourceCloudRunRevisionOutputWithContext(context.Background())
}

func (i ConnectivityTestSourceCloudRunRevisionArgs) ToConnectivityTestSourceCloudRunRevisionOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudRunRevisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceCloudRunRevisionOutput)
}

func (i ConnectivityTestSourceCloudRunRevisionArgs) ToConnectivityTestSourceCloudRunRevisionPtrOutput() ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return i.ToConnectivityTestSourceCloudRunRevisionPtrOutputWithContext(context.Background())
}

func (i ConnectivityTestSourceCloudRunRevisionArgs) ToConnectivityTestSourceCloudRunRevisionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceCloudRunRevisionOutput).ToConnectivityTestSourceCloudRunRevisionPtrOutputWithContext(ctx)
}

// ConnectivityTestSourceCloudRunRevisionPtrInput is an input type that accepts ConnectivityTestSourceCloudRunRevisionArgs, ConnectivityTestSourceCloudRunRevisionPtr and ConnectivityTestSourceCloudRunRevisionPtrOutput values.
// You can construct a concrete instance of `ConnectivityTestSourceCloudRunRevisionPtrInput` via:
//
//	        ConnectivityTestSourceCloudRunRevisionArgs{...}
//
//	or:
//
//	        nil
type ConnectivityTestSourceCloudRunRevisionPtrInput interface {
	pulumi.Input

	ToConnectivityTestSourceCloudRunRevisionPtrOutput() ConnectivityTestSourceCloudRunRevisionPtrOutput
	ToConnectivityTestSourceCloudRunRevisionPtrOutputWithContext(context.Context) ConnectivityTestSourceCloudRunRevisionPtrOutput
}

type connectivityTestSourceCloudRunRevisionPtrType ConnectivityTestSourceCloudRunRevisionArgs

func ConnectivityTestSourceCloudRunRevisionPtr(v *ConnectivityTestSourceCloudRunRevisionArgs) ConnectivityTestSourceCloudRunRevisionPtrInput {
	return (*connectivityTestSourceCloudRunRevisionPtrType)(v)
}

func (*connectivityTestSourceCloudRunRevisionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestSourceCloudRunRevision)(nil)).Elem()
}

func (i *connectivityTestSourceCloudRunRevisionPtrType) ToConnectivityTestSourceCloudRunRevisionPtrOutput() ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return i.ToConnectivityTestSourceCloudRunRevisionPtrOutputWithContext(context.Background())
}

func (i *connectivityTestSourceCloudRunRevisionPtrType) ToConnectivityTestSourceCloudRunRevisionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityTestSourceCloudRunRevisionPtrOutput)
}

type ConnectivityTestSourceCloudRunRevisionOutput struct{ *pulumi.OutputState }

func (ConnectivityTestSourceCloudRunRevisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityTestSourceCloudRunRevision)(nil)).Elem()
}

func (o ConnectivityTestSourceCloudRunRevisionOutput) ToConnectivityTestSourceCloudRunRevisionOutput() ConnectivityTestSourceCloudRunRevisionOutput {
	return o
}

func (o ConnectivityTestSourceCloudRunRevisionOutput) ToConnectivityTestSourceCloudRunRevisionOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudRunRevisionOutput {
	return o
}

func (o ConnectivityTestSourceCloudRunRevisionOutput) ToConnectivityTestSourceCloudRunRevisionPtrOutput() ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return o.ToConnectivityTestSourceCloudRunRevisionPtrOutputWithContext(context.Background())
}

func (o ConnectivityTestSourceCloudRunRevisionOutput) ToConnectivityTestSourceCloudRunRevisionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectivityTestSourceCloudRunRevision) *ConnectivityTestSourceCloudRunRevision {
		return &v
	}).(ConnectivityTestSourceCloudRunRevisionPtrOutput)
}

// A Cloud Run revision URI.
func (o ConnectivityTestSourceCloudRunRevisionOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityTestSourceCloudRunRevision) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ConnectivityTestSourceCloudRunRevisionPtrOutput struct{ *pulumi.OutputState }

func (ConnectivityTestSourceCloudRunRevisionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityTestSourceCloudRunRevision)(nil)).Elem()
}

func (o ConnectivityTestSourceCloudRunRevisionPtrOutput) ToConnectivityTestSourceCloudRunRevisionPtrOutput() ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return o
}

func (o ConnectivityTestSourceCloudRunRevisionPtrOutput) ToConnectivityTestSourceCloudRunRevisionPtrOutputWithContext(ctx context.Context) ConnectivityTestSourceCloudRunRevisionPtrOutput {
	return o
}

func (o ConnectivityTestSourceCloudRunRevisionPtrOutput) Elem() ConnectivityTestSourceCloudRunRevisionOutput {
	return o.ApplyT(func(v *ConnectivityTestSourceCloudRunRevision) ConnectivityTestSourceCloudRunRevision {
		if v != nil {
			return *v
		}
		var ret ConnectivityTestSourceCloudRunRevision
		return ret
	}).(ConnectivityTestSourceCloudRunRevisionOutput)
}

// A Cloud Run revision URI.
func (o ConnectivityTestSourceCloudRunRevisionPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityTestSourceCloudRunRevision) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type GetConnectivityTestRunReachabilityDetail struct {
	// (Output)
	// Status of the connectivity test: RESULT_UNSPECIFIED, REACHABLE, UNREACHABLE, AMBIGUOUS or UNDETERMINED.
	Result string `pulumi:"result"`
	// (Output)
	// List of connectivity test traces.
	// Structure is documented below.
	Traces []GetConnectivityTestRunReachabilityDetailTrace `pulumi:"traces"`
	// (Output)
	// Time when reachability details were determined. An RFC3339 timestamp in UTC time.
	// This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
	VerifyTime string `pulumi:"verifyTime"`
}

// GetConnectivityTestRunReachabilityDetailInput is an input type that accepts GetConnectivityTestRunReachabilityDetailArgs and GetConnectivityTestRunReachabilityDetailOutput values.
// You can construct a concrete instance of `GetConnectivityTestRunReachabilityDetailInput` via:
//
//	GetConnectivityTestRunReachabilityDetailArgs{...}
type GetConnectivityTestRunReachabilityDetailInput interface {
	pulumi.Input

	ToGetConnectivityTestRunReachabilityDetailOutput() GetConnectivityTestRunReachabilityDetailOutput
	ToGetConnectivityTestRunReachabilityDetailOutputWithContext(context.Context) GetConnectivityTestRunReachabilityDetailOutput
}

type GetConnectivityTestRunReachabilityDetailArgs struct {
	// (Output)
	// Status of the connectivity test: RESULT_UNSPECIFIED, REACHABLE, UNREACHABLE, AMBIGUOUS or UNDETERMINED.
	Result pulumi.StringInput `pulumi:"result"`
	// (Output)
	// List of connectivity test traces.
	// Structure is documented below.
	Traces GetConnectivityTestRunReachabilityDetailTraceArrayInput `pulumi:"traces"`
	// (Output)
	// Time when reachability details were determined. An RFC3339 timestamp in UTC time.
	// This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
	VerifyTime pulumi.StringInput `pulumi:"verifyTime"`
}

func (GetConnectivityTestRunReachabilityDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestRunReachabilityDetail)(nil)).Elem()
}

func (i GetConnectivityTestRunReachabilityDetailArgs) ToGetConnectivityTestRunReachabilityDetailOutput() GetConnectivityTestRunReachabilityDetailOutput {
	return i.ToGetConnectivityTestRunReachabilityDetailOutputWithContext(context.Background())
}

func (i GetConnectivityTestRunReachabilityDetailArgs) ToGetConnectivityTestRunReachabilityDetailOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestRunReachabilityDetailOutput)
}

// GetConnectivityTestRunReachabilityDetailArrayInput is an input type that accepts GetConnectivityTestRunReachabilityDetailArray and GetConnectivityTestRunReachabilityDetailArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestRunReachabilityDetailArrayInput` via:
//
//	GetConnectivityTestRunReachabilityDetailArray{ GetConnectivityTestRunReachabilityDetailArgs{...} }
type GetConnectivityTestRunReachabilityDetailArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestRunReachabilityDetailArrayOutput() GetConnectivityTestRunReachabilityDetailArrayOutput
	ToGetConnectivityTestRunReachabilityDetailArrayOutputWithContext(context.Context) GetConnectivityTestRunReachabilityDetailArrayOutput
}

type GetConnectivityTestRunReachabilityDetailArray []GetConnectivityTestRunReachabilityDetailInput

func (GetConnectivityTestRunReachabilityDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestRunReachabilityDetail)(nil)).Elem()
}

func (i GetConnectivityTestRunReachabilityDetailArray) ToGetConnectivityTestRunReachabilityDetailArrayOutput() GetConnectivityTestRunReachabilityDetailArrayOutput {
	return i.ToGetConnectivityTestRunReachabilityDetailArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestRunReachabilityDetailArray) ToGetConnectivityTestRunReachabilityDetailArrayOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestRunReachabilityDetailArrayOutput)
}

type GetConnectivityTestRunReachabilityDetailOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestRunReachabilityDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestRunReachabilityDetail)(nil)).Elem()
}

func (o GetConnectivityTestRunReachabilityDetailOutput) ToGetConnectivityTestRunReachabilityDetailOutput() GetConnectivityTestRunReachabilityDetailOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailOutput) ToGetConnectivityTestRunReachabilityDetailOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailOutput {
	return o
}

// (Output)
// Status of the connectivity test: RESULT_UNSPECIFIED, REACHABLE, UNREACHABLE, AMBIGUOUS or UNDETERMINED.
func (o GetConnectivityTestRunReachabilityDetailOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetail) string { return v.Result }).(pulumi.StringOutput)
}

// (Output)
// List of connectivity test traces.
// Structure is documented below.
func (o GetConnectivityTestRunReachabilityDetailOutput) Traces() GetConnectivityTestRunReachabilityDetailTraceArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetail) []GetConnectivityTestRunReachabilityDetailTrace {
		return v.Traces
	}).(GetConnectivityTestRunReachabilityDetailTraceArrayOutput)
}

// (Output)
// Time when reachability details were determined. An RFC3339 timestamp in UTC time.
// This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
func (o GetConnectivityTestRunReachabilityDetailOutput) VerifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetail) string { return v.VerifyTime }).(pulumi.StringOutput)
}

type GetConnectivityTestRunReachabilityDetailArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestRunReachabilityDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestRunReachabilityDetail)(nil)).Elem()
}

func (o GetConnectivityTestRunReachabilityDetailArrayOutput) ToGetConnectivityTestRunReachabilityDetailArrayOutput() GetConnectivityTestRunReachabilityDetailArrayOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailArrayOutput) ToGetConnectivityTestRunReachabilityDetailArrayOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailArrayOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestRunReachabilityDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestRunReachabilityDetail {
		return vs[0].([]GetConnectivityTestRunReachabilityDetail)[vs[1].(int)]
	}).(GetConnectivityTestRunReachabilityDetailOutput)
}

type GetConnectivityTestRunReachabilityDetailTrace struct {
	// (Output)
	// Derived from the source and destination endpoints definition specified by user request, and validated by the data plane model.
	// Structure is documented below.
	EndpointInfos []GetConnectivityTestRunReachabilityDetailTraceEndpointInfo `pulumi:"endpointInfos"`
	// (Output)
	// ID of the trace.
	ForwardTraceId int `pulumi:"forwardTraceId"`
	// (Output)
	// A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted).
	// Structure is documented below.
	Steps []GetConnectivityTestRunReachabilityDetailTraceStep `pulumi:"steps"`
}

// GetConnectivityTestRunReachabilityDetailTraceInput is an input type that accepts GetConnectivityTestRunReachabilityDetailTraceArgs and GetConnectivityTestRunReachabilityDetailTraceOutput values.
// You can construct a concrete instance of `GetConnectivityTestRunReachabilityDetailTraceInput` via:
//
//	GetConnectivityTestRunReachabilityDetailTraceArgs{...}
type GetConnectivityTestRunReachabilityDetailTraceInput interface {
	pulumi.Input

	ToGetConnectivityTestRunReachabilityDetailTraceOutput() GetConnectivityTestRunReachabilityDetailTraceOutput
	ToGetConnectivityTestRunReachabilityDetailTraceOutputWithContext(context.Context) GetConnectivityTestRunReachabilityDetailTraceOutput
}

type GetConnectivityTestRunReachabilityDetailTraceArgs struct {
	// (Output)
	// Derived from the source and destination endpoints definition specified by user request, and validated by the data plane model.
	// Structure is documented below.
	EndpointInfos GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayInput `pulumi:"endpointInfos"`
	// (Output)
	// ID of the trace.
	ForwardTraceId pulumi.IntInput `pulumi:"forwardTraceId"`
	// (Output)
	// A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted).
	// Structure is documented below.
	Steps GetConnectivityTestRunReachabilityDetailTraceStepArrayInput `pulumi:"steps"`
}

func (GetConnectivityTestRunReachabilityDetailTraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTrace)(nil)).Elem()
}

func (i GetConnectivityTestRunReachabilityDetailTraceArgs) ToGetConnectivityTestRunReachabilityDetailTraceOutput() GetConnectivityTestRunReachabilityDetailTraceOutput {
	return i.ToGetConnectivityTestRunReachabilityDetailTraceOutputWithContext(context.Background())
}

func (i GetConnectivityTestRunReachabilityDetailTraceArgs) ToGetConnectivityTestRunReachabilityDetailTraceOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestRunReachabilityDetailTraceOutput)
}

// GetConnectivityTestRunReachabilityDetailTraceArrayInput is an input type that accepts GetConnectivityTestRunReachabilityDetailTraceArray and GetConnectivityTestRunReachabilityDetailTraceArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestRunReachabilityDetailTraceArrayInput` via:
//
//	GetConnectivityTestRunReachabilityDetailTraceArray{ GetConnectivityTestRunReachabilityDetailTraceArgs{...} }
type GetConnectivityTestRunReachabilityDetailTraceArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestRunReachabilityDetailTraceArrayOutput() GetConnectivityTestRunReachabilityDetailTraceArrayOutput
	ToGetConnectivityTestRunReachabilityDetailTraceArrayOutputWithContext(context.Context) GetConnectivityTestRunReachabilityDetailTraceArrayOutput
}

type GetConnectivityTestRunReachabilityDetailTraceArray []GetConnectivityTestRunReachabilityDetailTraceInput

func (GetConnectivityTestRunReachabilityDetailTraceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestRunReachabilityDetailTrace)(nil)).Elem()
}

func (i GetConnectivityTestRunReachabilityDetailTraceArray) ToGetConnectivityTestRunReachabilityDetailTraceArrayOutput() GetConnectivityTestRunReachabilityDetailTraceArrayOutput {
	return i.ToGetConnectivityTestRunReachabilityDetailTraceArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestRunReachabilityDetailTraceArray) ToGetConnectivityTestRunReachabilityDetailTraceArrayOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestRunReachabilityDetailTraceArrayOutput)
}

type GetConnectivityTestRunReachabilityDetailTraceOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestRunReachabilityDetailTraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTrace)(nil)).Elem()
}

func (o GetConnectivityTestRunReachabilityDetailTraceOutput) ToGetConnectivityTestRunReachabilityDetailTraceOutput() GetConnectivityTestRunReachabilityDetailTraceOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailTraceOutput) ToGetConnectivityTestRunReachabilityDetailTraceOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceOutput {
	return o
}

// (Output)
// Derived from the source and destination endpoints definition specified by user request, and validated by the data plane model.
// Structure is documented below.
func (o GetConnectivityTestRunReachabilityDetailTraceOutput) EndpointInfos() GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTrace) []GetConnectivityTestRunReachabilityDetailTraceEndpointInfo {
		return v.EndpointInfos
	}).(GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput)
}

// (Output)
// ID of the trace.
func (o GetConnectivityTestRunReachabilityDetailTraceOutput) ForwardTraceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTrace) int { return v.ForwardTraceId }).(pulumi.IntOutput)
}

// (Output)
// A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted).
// Structure is documented below.
func (o GetConnectivityTestRunReachabilityDetailTraceOutput) Steps() GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTrace) []GetConnectivityTestRunReachabilityDetailTraceStep {
		return v.Steps
	}).(GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput)
}

type GetConnectivityTestRunReachabilityDetailTraceArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestRunReachabilityDetailTraceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestRunReachabilityDetailTrace)(nil)).Elem()
}

func (o GetConnectivityTestRunReachabilityDetailTraceArrayOutput) ToGetConnectivityTestRunReachabilityDetailTraceArrayOutput() GetConnectivityTestRunReachabilityDetailTraceArrayOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailTraceArrayOutput) ToGetConnectivityTestRunReachabilityDetailTraceArrayOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceArrayOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailTraceArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestRunReachabilityDetailTraceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestRunReachabilityDetailTrace {
		return vs[0].([]GetConnectivityTestRunReachabilityDetailTrace)[vs[1].(int)]
	}).(GetConnectivityTestRunReachabilityDetailTraceOutput)
}

type GetConnectivityTestRunReachabilityDetailTraceEndpointInfo struct {
	// (Output)
	// Destination IP address.
	DestinationIp string `pulumi:"destinationIp"`
	// (Output)
	// URI of the network where this packet is sent to.
	DestinationNetworkUri string `pulumi:"destinationNetworkUri"`
	// (Output)
	// Destination port. Only valid when protocol is TCP or UDP.
	DestinationPort int `pulumi:"destinationPort"`
	// (Output)
	// IP protocol in string format, for example: "TCP", "UDP", "ICMP".
	Protocol string `pulumi:"protocol"`
	// (Output)
	// URI of the source telemetry agent this packet originates from.
	SourceAgentUri string `pulumi:"sourceAgentUri"`
	// (Output)
	// Source IP address.
	SourceIp string `pulumi:"sourceIp"`
	// (Output)
	// URI of the network where this packet originates from.
	SourceNetworkUri string `pulumi:"sourceNetworkUri"`
	// (Output)
	// Source port. Only valid when protocol is TCP or UDP.
	SourcePort int `pulumi:"sourcePort"`
}

// GetConnectivityTestRunReachabilityDetailTraceEndpointInfoInput is an input type that accepts GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArgs and GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput values.
// You can construct a concrete instance of `GetConnectivityTestRunReachabilityDetailTraceEndpointInfoInput` via:
//
//	GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArgs{...}
type GetConnectivityTestRunReachabilityDetailTraceEndpointInfoInput interface {
	pulumi.Input

	ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput() GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput
	ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutputWithContext(context.Context) GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput
}

type GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArgs struct {
	// (Output)
	// Destination IP address.
	DestinationIp pulumi.StringInput `pulumi:"destinationIp"`
	// (Output)
	// URI of the network where this packet is sent to.
	DestinationNetworkUri pulumi.StringInput `pulumi:"destinationNetworkUri"`
	// (Output)
	// Destination port. Only valid when protocol is TCP or UDP.
	DestinationPort pulumi.IntInput `pulumi:"destinationPort"`
	// (Output)
	// IP protocol in string format, for example: "TCP", "UDP", "ICMP".
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// (Output)
	// URI of the source telemetry agent this packet originates from.
	SourceAgentUri pulumi.StringInput `pulumi:"sourceAgentUri"`
	// (Output)
	// Source IP address.
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
	// (Output)
	// URI of the network where this packet originates from.
	SourceNetworkUri pulumi.StringInput `pulumi:"sourceNetworkUri"`
	// (Output)
	// Source port. Only valid when protocol is TCP or UDP.
	SourcePort pulumi.IntInput `pulumi:"sourcePort"`
}

func (GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceEndpointInfo)(nil)).Elem()
}

func (i GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArgs) ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput() GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput {
	return i.ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutputWithContext(context.Background())
}

func (i GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArgs) ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput)
}

// GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayInput is an input type that accepts GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArray and GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayInput` via:
//
//	GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArray{ GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArgs{...} }
type GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput() GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput
	ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutputWithContext(context.Context) GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput
}

type GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArray []GetConnectivityTestRunReachabilityDetailTraceEndpointInfoInput

func (GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestRunReachabilityDetailTraceEndpointInfo)(nil)).Elem()
}

func (i GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArray) ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput() GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput {
	return i.ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArray) ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput)
}

type GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceEndpointInfo)(nil)).Elem()
}

func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput() GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput {
	return o
}

// (Output)
// Destination IP address.
func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) DestinationIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceEndpointInfo) string { return v.DestinationIp }).(pulumi.StringOutput)
}

// (Output)
// URI of the network where this packet is sent to.
func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) DestinationNetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceEndpointInfo) string {
		return v.DestinationNetworkUri
	}).(pulumi.StringOutput)
}

// (Output)
// Destination port. Only valid when protocol is TCP or UDP.
func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) DestinationPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceEndpointInfo) int { return v.DestinationPort }).(pulumi.IntOutput)
}

// (Output)
// IP protocol in string format, for example: "TCP", "UDP", "ICMP".
func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceEndpointInfo) string { return v.Protocol }).(pulumi.StringOutput)
}

// (Output)
// URI of the source telemetry agent this packet originates from.
func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) SourceAgentUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceEndpointInfo) string { return v.SourceAgentUri }).(pulumi.StringOutput)
}

// (Output)
// Source IP address.
func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceEndpointInfo) string { return v.SourceIp }).(pulumi.StringOutput)
}

// (Output)
// URI of the network where this packet originates from.
func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) SourceNetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceEndpointInfo) string { return v.SourceNetworkUri }).(pulumi.StringOutput)
}

// (Output)
// Source port. Only valid when protocol is TCP or UDP.
func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput) SourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceEndpointInfo) int { return v.SourcePort }).(pulumi.IntOutput)
}

type GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestRunReachabilityDetailTraceEndpointInfo)(nil)).Elem()
}

func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput) ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput() GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput) ToGetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestRunReachabilityDetailTraceEndpointInfo {
		return vs[0].([]GetConnectivityTestRunReachabilityDetailTraceEndpointInfo)[vs[1].(int)]
	}).(GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput)
}

type GetConnectivityTestRunReachabilityDetailTraceStep struct {
	// (Output)
	// If this step leads to the final state Drop.
	CausesDrop bool `pulumi:"causesDrop"`
	// (Output)
	// Description of the connectivity test step.
	Description string `pulumi:"description"`
	// (Output)
	// Project ID of the connectivity test step.
	ProjectId string `pulumi:"projectId"`
	// (Output)
	// State of the connectivity test step.
	State string `pulumi:"state"`
}

// GetConnectivityTestRunReachabilityDetailTraceStepInput is an input type that accepts GetConnectivityTestRunReachabilityDetailTraceStepArgs and GetConnectivityTestRunReachabilityDetailTraceStepOutput values.
// You can construct a concrete instance of `GetConnectivityTestRunReachabilityDetailTraceStepInput` via:
//
//	GetConnectivityTestRunReachabilityDetailTraceStepArgs{...}
type GetConnectivityTestRunReachabilityDetailTraceStepInput interface {
	pulumi.Input

	ToGetConnectivityTestRunReachabilityDetailTraceStepOutput() GetConnectivityTestRunReachabilityDetailTraceStepOutput
	ToGetConnectivityTestRunReachabilityDetailTraceStepOutputWithContext(context.Context) GetConnectivityTestRunReachabilityDetailTraceStepOutput
}

type GetConnectivityTestRunReachabilityDetailTraceStepArgs struct {
	// (Output)
	// If this step leads to the final state Drop.
	CausesDrop pulumi.BoolInput `pulumi:"causesDrop"`
	// (Output)
	// Description of the connectivity test step.
	Description pulumi.StringInput `pulumi:"description"`
	// (Output)
	// Project ID of the connectivity test step.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// (Output)
	// State of the connectivity test step.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetConnectivityTestRunReachabilityDetailTraceStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceStep)(nil)).Elem()
}

func (i GetConnectivityTestRunReachabilityDetailTraceStepArgs) ToGetConnectivityTestRunReachabilityDetailTraceStepOutput() GetConnectivityTestRunReachabilityDetailTraceStepOutput {
	return i.ToGetConnectivityTestRunReachabilityDetailTraceStepOutputWithContext(context.Background())
}

func (i GetConnectivityTestRunReachabilityDetailTraceStepArgs) ToGetConnectivityTestRunReachabilityDetailTraceStepOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestRunReachabilityDetailTraceStepOutput)
}

// GetConnectivityTestRunReachabilityDetailTraceStepArrayInput is an input type that accepts GetConnectivityTestRunReachabilityDetailTraceStepArray and GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestRunReachabilityDetailTraceStepArrayInput` via:
//
//	GetConnectivityTestRunReachabilityDetailTraceStepArray{ GetConnectivityTestRunReachabilityDetailTraceStepArgs{...} }
type GetConnectivityTestRunReachabilityDetailTraceStepArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestRunReachabilityDetailTraceStepArrayOutput() GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput
	ToGetConnectivityTestRunReachabilityDetailTraceStepArrayOutputWithContext(context.Context) GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput
}

type GetConnectivityTestRunReachabilityDetailTraceStepArray []GetConnectivityTestRunReachabilityDetailTraceStepInput

func (GetConnectivityTestRunReachabilityDetailTraceStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestRunReachabilityDetailTraceStep)(nil)).Elem()
}

func (i GetConnectivityTestRunReachabilityDetailTraceStepArray) ToGetConnectivityTestRunReachabilityDetailTraceStepArrayOutput() GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput {
	return i.ToGetConnectivityTestRunReachabilityDetailTraceStepArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestRunReachabilityDetailTraceStepArray) ToGetConnectivityTestRunReachabilityDetailTraceStepArrayOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput)
}

type GetConnectivityTestRunReachabilityDetailTraceStepOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestRunReachabilityDetailTraceStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceStep)(nil)).Elem()
}

func (o GetConnectivityTestRunReachabilityDetailTraceStepOutput) ToGetConnectivityTestRunReachabilityDetailTraceStepOutput() GetConnectivityTestRunReachabilityDetailTraceStepOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailTraceStepOutput) ToGetConnectivityTestRunReachabilityDetailTraceStepOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceStepOutput {
	return o
}

// (Output)
// If this step leads to the final state Drop.
func (o GetConnectivityTestRunReachabilityDetailTraceStepOutput) CausesDrop() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceStep) bool { return v.CausesDrop }).(pulumi.BoolOutput)
}

// (Output)
// Description of the connectivity test step.
func (o GetConnectivityTestRunReachabilityDetailTraceStepOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceStep) string { return v.Description }).(pulumi.StringOutput)
}

// (Output)
// Project ID of the connectivity test step.
func (o GetConnectivityTestRunReachabilityDetailTraceStepOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceStep) string { return v.ProjectId }).(pulumi.StringOutput)
}

// (Output)
// State of the connectivity test step.
func (o GetConnectivityTestRunReachabilityDetailTraceStepOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestRunReachabilityDetailTraceStep) string { return v.State }).(pulumi.StringOutput)
}

type GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestRunReachabilityDetailTraceStep)(nil)).Elem()
}

func (o GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput) ToGetConnectivityTestRunReachabilityDetailTraceStepArrayOutput() GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput) ToGetConnectivityTestRunReachabilityDetailTraceStepArrayOutputWithContext(ctx context.Context) GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput {
	return o
}

func (o GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestRunReachabilityDetailTraceStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestRunReachabilityDetailTraceStep {
		return vs[0].([]GetConnectivityTestRunReachabilityDetailTraceStep)[vs[1].(int)]
	}).(GetConnectivityTestRunReachabilityDetailTraceStepOutput)
}

type GetConnectivityTestsConnectivityTest struct {
	// Whether the analysis should skip firewall checking.
	BypassFirewallChecks bool `pulumi:"bypassFirewallChecks"`
	// The user-supplied description of the Connectivity Test.
	Description string `pulumi:"description"`
	// Destination specification of the Connectivity Test.
	// Structure is documented below.
	Destinations    []GetConnectivityTestsConnectivityTestDestination `pulumi:"destinations"`
	EffectiveLabels map[string]string                                 `pulumi:"effectiveLabels"`
	// Resource labels to represent user-provided metadata.
	Labels map[string]string `pulumi:"labels"`
	// Unique name for the connectivity test.
	Name string `pulumi:"name"`
	// The ID of the project.
	Project string `pulumi:"project"`
	// IP Protocol of the test.
	Protocol string `pulumi:"protocol"`
	// The combination of labels configured directly on the resource
	//  and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Other projects that may be relevant for reachability analysis.
	RelatedProjects []string `pulumi:"relatedProjects"`
	// Whether run analysis for the return path from destination to source.
	RoundTrip bool `pulumi:"roundTrip"`
	// Source specification of the Connectivity Test.
	// Structure is documented below.
	Sources []GetConnectivityTestsConnectivityTestSource `pulumi:"sources"`
}

// GetConnectivityTestsConnectivityTestInput is an input type that accepts GetConnectivityTestsConnectivityTestArgs and GetConnectivityTestsConnectivityTestOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestInput` via:
//
//	GetConnectivityTestsConnectivityTestArgs{...}
type GetConnectivityTestsConnectivityTestInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestOutput() GetConnectivityTestsConnectivityTestOutput
	ToGetConnectivityTestsConnectivityTestOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestOutput
}

type GetConnectivityTestsConnectivityTestArgs struct {
	// Whether the analysis should skip firewall checking.
	BypassFirewallChecks pulumi.BoolInput `pulumi:"bypassFirewallChecks"`
	// The user-supplied description of the Connectivity Test.
	Description pulumi.StringInput `pulumi:"description"`
	// Destination specification of the Connectivity Test.
	// Structure is documented below.
	Destinations    GetConnectivityTestsConnectivityTestDestinationArrayInput `pulumi:"destinations"`
	EffectiveLabels pulumi.StringMapInput                                     `pulumi:"effectiveLabels"`
	// Resource labels to represent user-provided metadata.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Unique name for the connectivity test.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project.
	Project pulumi.StringInput `pulumi:"project"`
	// IP Protocol of the test.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The combination of labels configured directly on the resource
	//  and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput `pulumi:"pulumiLabels"`
	// Other projects that may be relevant for reachability analysis.
	RelatedProjects pulumi.StringArrayInput `pulumi:"relatedProjects"`
	// Whether run analysis for the return path from destination to source.
	RoundTrip pulumi.BoolInput `pulumi:"roundTrip"`
	// Source specification of the Connectivity Test.
	// Structure is documented below.
	Sources GetConnectivityTestsConnectivityTestSourceArrayInput `pulumi:"sources"`
}

func (GetConnectivityTestsConnectivityTestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTest)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestArgs) ToGetConnectivityTestsConnectivityTestOutput() GetConnectivityTestsConnectivityTestOutput {
	return i.ToGetConnectivityTestsConnectivityTestOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestArgs) ToGetConnectivityTestsConnectivityTestOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestOutput)
}

// GetConnectivityTestsConnectivityTestArrayInput is an input type that accepts GetConnectivityTestsConnectivityTestArray and GetConnectivityTestsConnectivityTestArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestArrayInput` via:
//
//	GetConnectivityTestsConnectivityTestArray{ GetConnectivityTestsConnectivityTestArgs{...} }
type GetConnectivityTestsConnectivityTestArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestArrayOutput() GetConnectivityTestsConnectivityTestArrayOutput
	ToGetConnectivityTestsConnectivityTestArrayOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestArrayOutput
}

type GetConnectivityTestsConnectivityTestArray []GetConnectivityTestsConnectivityTestInput

func (GetConnectivityTestsConnectivityTestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTest)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestArray) ToGetConnectivityTestsConnectivityTestArrayOutput() GetConnectivityTestsConnectivityTestArrayOutput {
	return i.ToGetConnectivityTestsConnectivityTestArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestArray) ToGetConnectivityTestsConnectivityTestArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestArrayOutput)
}

type GetConnectivityTestsConnectivityTestOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTest)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestOutput) ToGetConnectivityTestsConnectivityTestOutput() GetConnectivityTestsConnectivityTestOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestOutput) ToGetConnectivityTestsConnectivityTestOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestOutput {
	return o
}

// Whether the analysis should skip firewall checking.
func (o GetConnectivityTestsConnectivityTestOutput) BypassFirewallChecks() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) bool { return v.BypassFirewallChecks }).(pulumi.BoolOutput)
}

// The user-supplied description of the Connectivity Test.
func (o GetConnectivityTestsConnectivityTestOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) string { return v.Description }).(pulumi.StringOutput)
}

// Destination specification of the Connectivity Test.
// Structure is documented below.
func (o GetConnectivityTestsConnectivityTestOutput) Destinations() GetConnectivityTestsConnectivityTestDestinationArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) []GetConnectivityTestsConnectivityTestDestination {
		return v.Destinations
	}).(GetConnectivityTestsConnectivityTestDestinationArrayOutput)
}

func (o GetConnectivityTestsConnectivityTestOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Resource labels to represent user-provided metadata.
func (o GetConnectivityTestsConnectivityTestOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Unique name for the connectivity test.
func (o GetConnectivityTestsConnectivityTestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project.
func (o GetConnectivityTestsConnectivityTestOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) string { return v.Project }).(pulumi.StringOutput)
}

// IP Protocol of the test.
func (o GetConnectivityTestsConnectivityTestOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) string { return v.Protocol }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
//
//	and default labels configured on the provider.
func (o GetConnectivityTestsConnectivityTestOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) map[string]string { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Other projects that may be relevant for reachability analysis.
func (o GetConnectivityTestsConnectivityTestOutput) RelatedProjects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) []string { return v.RelatedProjects }).(pulumi.StringArrayOutput)
}

// Whether run analysis for the return path from destination to source.
func (o GetConnectivityTestsConnectivityTestOutput) RoundTrip() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) bool { return v.RoundTrip }).(pulumi.BoolOutput)
}

// Source specification of the Connectivity Test.
// Structure is documented below.
func (o GetConnectivityTestsConnectivityTestOutput) Sources() GetConnectivityTestsConnectivityTestSourceArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTest) []GetConnectivityTestsConnectivityTestSource {
		return v.Sources
	}).(GetConnectivityTestsConnectivityTestSourceArrayOutput)
}

type GetConnectivityTestsConnectivityTestArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTest)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestArrayOutput) ToGetConnectivityTestsConnectivityTestArrayOutput() GetConnectivityTestsConnectivityTestArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestArrayOutput) ToGetConnectivityTestsConnectivityTestArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestsConnectivityTestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestsConnectivityTest {
		return vs[0].([]GetConnectivityTestsConnectivityTest)[vs[1].(int)]
	}).(GetConnectivityTestsConnectivityTestOutput)
}

type GetConnectivityTestsConnectivityTestDestination struct {
	// A Cloud SQL instance URI.
	CloudSqlInstance string `pulumi:"cloudSqlInstance"`
	// Forwarding rule URI. Forwarding rules are frontends for load balancers,
	// PSC endpoints, and Protocol Forwarding.
	ForwardingRule string `pulumi:"forwardingRule"`
	// A DNS endpoint of Google Kubernetes Engine cluster control plane.
	Fqdn string `pulumi:"fqdn"`
	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster string `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance string `pulumi:"instance"`
	// The IP address of the endpoint.
	IpAddress string `pulumi:"ipAddress"`
	// A VPC network URI.
	Network string `pulumi:"network"`
	// The IP protocol port of the endpoint.
	Port int `pulumi:"port"`
	// Project ID where the endpoint is located.
	ProjectId string `pulumi:"projectId"`
	// A Redis Cluster URI.
	RedisCluster string `pulumi:"redisCluster"`
	// A Redis Instance URI.
	RedisInstance string `pulumi:"redisInstance"`
}

// GetConnectivityTestsConnectivityTestDestinationInput is an input type that accepts GetConnectivityTestsConnectivityTestDestinationArgs and GetConnectivityTestsConnectivityTestDestinationOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestDestinationInput` via:
//
//	GetConnectivityTestsConnectivityTestDestinationArgs{...}
type GetConnectivityTestsConnectivityTestDestinationInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestDestinationOutput() GetConnectivityTestsConnectivityTestDestinationOutput
	ToGetConnectivityTestsConnectivityTestDestinationOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestDestinationOutput
}

type GetConnectivityTestsConnectivityTestDestinationArgs struct {
	// A Cloud SQL instance URI.
	CloudSqlInstance pulumi.StringInput `pulumi:"cloudSqlInstance"`
	// Forwarding rule URI. Forwarding rules are frontends for load balancers,
	// PSC endpoints, and Protocol Forwarding.
	ForwardingRule pulumi.StringInput `pulumi:"forwardingRule"`
	// A DNS endpoint of Google Kubernetes Engine cluster control plane.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster pulumi.StringInput `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance pulumi.StringInput `pulumi:"instance"`
	// The IP address of the endpoint.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// A VPC network URI.
	Network pulumi.StringInput `pulumi:"network"`
	// The IP protocol port of the endpoint.
	Port pulumi.IntInput `pulumi:"port"`
	// Project ID where the endpoint is located.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// A Redis Cluster URI.
	RedisCluster pulumi.StringInput `pulumi:"redisCluster"`
	// A Redis Instance URI.
	RedisInstance pulumi.StringInput `pulumi:"redisInstance"`
}

func (GetConnectivityTestsConnectivityTestDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestDestination)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestDestinationArgs) ToGetConnectivityTestsConnectivityTestDestinationOutput() GetConnectivityTestsConnectivityTestDestinationOutput {
	return i.ToGetConnectivityTestsConnectivityTestDestinationOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestDestinationArgs) ToGetConnectivityTestsConnectivityTestDestinationOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestDestinationOutput)
}

// GetConnectivityTestsConnectivityTestDestinationArrayInput is an input type that accepts GetConnectivityTestsConnectivityTestDestinationArray and GetConnectivityTestsConnectivityTestDestinationArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestDestinationArrayInput` via:
//
//	GetConnectivityTestsConnectivityTestDestinationArray{ GetConnectivityTestsConnectivityTestDestinationArgs{...} }
type GetConnectivityTestsConnectivityTestDestinationArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestDestinationArrayOutput() GetConnectivityTestsConnectivityTestDestinationArrayOutput
	ToGetConnectivityTestsConnectivityTestDestinationArrayOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestDestinationArrayOutput
}

type GetConnectivityTestsConnectivityTestDestinationArray []GetConnectivityTestsConnectivityTestDestinationInput

func (GetConnectivityTestsConnectivityTestDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestDestination)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestDestinationArray) ToGetConnectivityTestsConnectivityTestDestinationArrayOutput() GetConnectivityTestsConnectivityTestDestinationArrayOutput {
	return i.ToGetConnectivityTestsConnectivityTestDestinationArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestDestinationArray) ToGetConnectivityTestsConnectivityTestDestinationArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestDestinationArrayOutput)
}

type GetConnectivityTestsConnectivityTestDestinationOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestDestination)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestDestinationOutput) ToGetConnectivityTestsConnectivityTestDestinationOutput() GetConnectivityTestsConnectivityTestDestinationOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestDestinationOutput) ToGetConnectivityTestsConnectivityTestDestinationOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestDestinationOutput {
	return o
}

// A Cloud SQL instance URI.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) CloudSqlInstance() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.CloudSqlInstance }).(pulumi.StringOutput)
}

// Forwarding rule URI. Forwarding rules are frontends for load balancers,
// PSC endpoints, and Protocol Forwarding.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) ForwardingRule() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.ForwardingRule }).(pulumi.StringOutput)
}

// A DNS endpoint of Google Kubernetes Engine cluster control plane.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.Fqdn }).(pulumi.StringOutput)
}

// A cluster URI for Google Kubernetes Engine cluster control plane.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) GkeMasterCluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.GkeMasterCluster }).(pulumi.StringOutput)
}

// A Compute Engine instance URI.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.Instance }).(pulumi.StringOutput)
}

// The IP address of the endpoint.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.IpAddress }).(pulumi.StringOutput)
}

// A VPC network URI.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.Network }).(pulumi.StringOutput)
}

// The IP protocol port of the endpoint.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) int { return v.Port }).(pulumi.IntOutput)
}

// Project ID where the endpoint is located.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.ProjectId }).(pulumi.StringOutput)
}

// A Redis Cluster URI.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) RedisCluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.RedisCluster }).(pulumi.StringOutput)
}

// A Redis Instance URI.
func (o GetConnectivityTestsConnectivityTestDestinationOutput) RedisInstance() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestDestination) string { return v.RedisInstance }).(pulumi.StringOutput)
}

type GetConnectivityTestsConnectivityTestDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestDestination)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestDestinationArrayOutput) ToGetConnectivityTestsConnectivityTestDestinationArrayOutput() GetConnectivityTestsConnectivityTestDestinationArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestDestinationArrayOutput) ToGetConnectivityTestsConnectivityTestDestinationArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestDestinationArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestDestinationArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestsConnectivityTestDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestsConnectivityTestDestination {
		return vs[0].([]GetConnectivityTestsConnectivityTestDestination)[vs[1].(int)]
	}).(GetConnectivityTestsConnectivityTestDestinationOutput)
}

type GetConnectivityTestsConnectivityTestSource struct {
	// An App Engine service version.
	// Structure is documented below.
	AppEngineVersions []GetConnectivityTestsConnectivityTestSourceAppEngineVersion `pulumi:"appEngineVersions"`
	// A Cloud Function.
	// Structure is documented below.
	CloudFunctions []GetConnectivityTestsConnectivityTestSourceCloudFunction `pulumi:"cloudFunctions"`
	// A Cloud Run revision.
	// Structure is documented below.
	CloudRunRevisions []GetConnectivityTestsConnectivityTestSourceCloudRunRevision `pulumi:"cloudRunRevisions"`
	// A Cloud SQL instance URI.
	CloudSqlInstance string `pulumi:"cloudSqlInstance"`
	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster string `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance string `pulumi:"instance"`
	// The IP address of the endpoint.
	IpAddress string `pulumi:"ipAddress"`
	// A VPC network URI.
	Network string `pulumi:"network"`
	// Type of the network where the endpoint is located.
	NetworkType string `pulumi:"networkType"`
	// The IP protocol port of the endpoint.
	Port int `pulumi:"port"`
	// Project ID where the endpoint is located.
	ProjectId string `pulumi:"projectId"`
}

// GetConnectivityTestsConnectivityTestSourceInput is an input type that accepts GetConnectivityTestsConnectivityTestSourceArgs and GetConnectivityTestsConnectivityTestSourceOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestSourceInput` via:
//
//	GetConnectivityTestsConnectivityTestSourceArgs{...}
type GetConnectivityTestsConnectivityTestSourceInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestSourceOutput() GetConnectivityTestsConnectivityTestSourceOutput
	ToGetConnectivityTestsConnectivityTestSourceOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestSourceOutput
}

type GetConnectivityTestsConnectivityTestSourceArgs struct {
	// An App Engine service version.
	// Structure is documented below.
	AppEngineVersions GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayInput `pulumi:"appEngineVersions"`
	// A Cloud Function.
	// Structure is documented below.
	CloudFunctions GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayInput `pulumi:"cloudFunctions"`
	// A Cloud Run revision.
	// Structure is documented below.
	CloudRunRevisions GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayInput `pulumi:"cloudRunRevisions"`
	// A Cloud SQL instance URI.
	CloudSqlInstance pulumi.StringInput `pulumi:"cloudSqlInstance"`
	// A cluster URI for Google Kubernetes Engine cluster control plane.
	GkeMasterCluster pulumi.StringInput `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance pulumi.StringInput `pulumi:"instance"`
	// The IP address of the endpoint.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// A VPC network URI.
	Network pulumi.StringInput `pulumi:"network"`
	// Type of the network where the endpoint is located.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The IP protocol port of the endpoint.
	Port pulumi.IntInput `pulumi:"port"`
	// Project ID where the endpoint is located.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetConnectivityTestsConnectivityTestSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestSource)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestSourceArgs) ToGetConnectivityTestsConnectivityTestSourceOutput() GetConnectivityTestsConnectivityTestSourceOutput {
	return i.ToGetConnectivityTestsConnectivityTestSourceOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestSourceArgs) ToGetConnectivityTestsConnectivityTestSourceOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestSourceOutput)
}

// GetConnectivityTestsConnectivityTestSourceArrayInput is an input type that accepts GetConnectivityTestsConnectivityTestSourceArray and GetConnectivityTestsConnectivityTestSourceArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestSourceArrayInput` via:
//
//	GetConnectivityTestsConnectivityTestSourceArray{ GetConnectivityTestsConnectivityTestSourceArgs{...} }
type GetConnectivityTestsConnectivityTestSourceArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestSourceArrayOutput() GetConnectivityTestsConnectivityTestSourceArrayOutput
	ToGetConnectivityTestsConnectivityTestSourceArrayOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestSourceArrayOutput
}

type GetConnectivityTestsConnectivityTestSourceArray []GetConnectivityTestsConnectivityTestSourceInput

func (GetConnectivityTestsConnectivityTestSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestSource)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestSourceArray) ToGetConnectivityTestsConnectivityTestSourceArrayOutput() GetConnectivityTestsConnectivityTestSourceArrayOutput {
	return i.ToGetConnectivityTestsConnectivityTestSourceArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestSourceArray) ToGetConnectivityTestsConnectivityTestSourceArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestSourceArrayOutput)
}

type GetConnectivityTestsConnectivityTestSourceOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestSource)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestSourceOutput) ToGetConnectivityTestsConnectivityTestSourceOutput() GetConnectivityTestsConnectivityTestSourceOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceOutput) ToGetConnectivityTestsConnectivityTestSourceOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceOutput {
	return o
}

// An App Engine service version.
// Structure is documented below.
func (o GetConnectivityTestsConnectivityTestSourceOutput) AppEngineVersions() GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) []GetConnectivityTestsConnectivityTestSourceAppEngineVersion {
		return v.AppEngineVersions
	}).(GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput)
}

// A Cloud Function.
// Structure is documented below.
func (o GetConnectivityTestsConnectivityTestSourceOutput) CloudFunctions() GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) []GetConnectivityTestsConnectivityTestSourceCloudFunction {
		return v.CloudFunctions
	}).(GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput)
}

// A Cloud Run revision.
// Structure is documented below.
func (o GetConnectivityTestsConnectivityTestSourceOutput) CloudRunRevisions() GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) []GetConnectivityTestsConnectivityTestSourceCloudRunRevision {
		return v.CloudRunRevisions
	}).(GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput)
}

// A Cloud SQL instance URI.
func (o GetConnectivityTestsConnectivityTestSourceOutput) CloudSqlInstance() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) string { return v.CloudSqlInstance }).(pulumi.StringOutput)
}

// A cluster URI for Google Kubernetes Engine cluster control plane.
func (o GetConnectivityTestsConnectivityTestSourceOutput) GkeMasterCluster() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) string { return v.GkeMasterCluster }).(pulumi.StringOutput)
}

// A Compute Engine instance URI.
func (o GetConnectivityTestsConnectivityTestSourceOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) string { return v.Instance }).(pulumi.StringOutput)
}

// The IP address of the endpoint.
func (o GetConnectivityTestsConnectivityTestSourceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) string { return v.IpAddress }).(pulumi.StringOutput)
}

// A VPC network URI.
func (o GetConnectivityTestsConnectivityTestSourceOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) string { return v.Network }).(pulumi.StringOutput)
}

// Type of the network where the endpoint is located.
func (o GetConnectivityTestsConnectivityTestSourceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The IP protocol port of the endpoint.
func (o GetConnectivityTestsConnectivityTestSourceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) int { return v.Port }).(pulumi.IntOutput)
}

// Project ID where the endpoint is located.
func (o GetConnectivityTestsConnectivityTestSourceOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSource) string { return v.ProjectId }).(pulumi.StringOutput)
}

type GetConnectivityTestsConnectivityTestSourceArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestSource)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestSourceArrayOutput) ToGetConnectivityTestsConnectivityTestSourceArrayOutput() GetConnectivityTestsConnectivityTestSourceArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceArrayOutput) ToGetConnectivityTestsConnectivityTestSourceArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestsConnectivityTestSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestsConnectivityTestSource {
		return vs[0].([]GetConnectivityTestsConnectivityTestSource)[vs[1].(int)]
	}).(GetConnectivityTestsConnectivityTestSourceOutput)
}

type GetConnectivityTestsConnectivityTestSourceAppEngineVersion struct {
	// A Cloud Run revision URI.
	Uri string `pulumi:"uri"`
}

// GetConnectivityTestsConnectivityTestSourceAppEngineVersionInput is an input type that accepts GetConnectivityTestsConnectivityTestSourceAppEngineVersionArgs and GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestSourceAppEngineVersionInput` via:
//
//	GetConnectivityTestsConnectivityTestSourceAppEngineVersionArgs{...}
type GetConnectivityTestsConnectivityTestSourceAppEngineVersionInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput() GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput
	ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput
}

type GetConnectivityTestsConnectivityTestSourceAppEngineVersionArgs struct {
	// A Cloud Run revision URI.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetConnectivityTestsConnectivityTestSourceAppEngineVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceAppEngineVersion)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestSourceAppEngineVersionArgs) ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput() GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput {
	return i.ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestSourceAppEngineVersionArgs) ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput)
}

// GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayInput is an input type that accepts GetConnectivityTestsConnectivityTestSourceAppEngineVersionArray and GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayInput` via:
//
//	GetConnectivityTestsConnectivityTestSourceAppEngineVersionArray{ GetConnectivityTestsConnectivityTestSourceAppEngineVersionArgs{...} }
type GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput() GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput
	ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput
}

type GetConnectivityTestsConnectivityTestSourceAppEngineVersionArray []GetConnectivityTestsConnectivityTestSourceAppEngineVersionInput

func (GetConnectivityTestsConnectivityTestSourceAppEngineVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestSourceAppEngineVersion)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestSourceAppEngineVersionArray) ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput() GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput {
	return i.ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestSourceAppEngineVersionArray) ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput)
}

type GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceAppEngineVersion)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput) ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput() GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput) ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput {
	return o
}

// A Cloud Run revision URI.
func (o GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSourceAppEngineVersion) string { return v.Uri }).(pulumi.StringOutput)
}

type GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestSourceAppEngineVersion)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput) ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput() GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput) ToGetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestsConnectivityTestSourceAppEngineVersion {
		return vs[0].([]GetConnectivityTestsConnectivityTestSourceAppEngineVersion)[vs[1].(int)]
	}).(GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput)
}

type GetConnectivityTestsConnectivityTestSourceCloudFunction struct {
	// A Cloud Run revision URI.
	Uri string `pulumi:"uri"`
}

// GetConnectivityTestsConnectivityTestSourceCloudFunctionInput is an input type that accepts GetConnectivityTestsConnectivityTestSourceCloudFunctionArgs and GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestSourceCloudFunctionInput` via:
//
//	GetConnectivityTestsConnectivityTestSourceCloudFunctionArgs{...}
type GetConnectivityTestsConnectivityTestSourceCloudFunctionInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestSourceCloudFunctionOutput() GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput
	ToGetConnectivityTestsConnectivityTestSourceCloudFunctionOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput
}

type GetConnectivityTestsConnectivityTestSourceCloudFunctionArgs struct {
	// A Cloud Run revision URI.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetConnectivityTestsConnectivityTestSourceCloudFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceCloudFunction)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestSourceCloudFunctionArgs) ToGetConnectivityTestsConnectivityTestSourceCloudFunctionOutput() GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput {
	return i.ToGetConnectivityTestsConnectivityTestSourceCloudFunctionOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestSourceCloudFunctionArgs) ToGetConnectivityTestsConnectivityTestSourceCloudFunctionOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput)
}

// GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayInput is an input type that accepts GetConnectivityTestsConnectivityTestSourceCloudFunctionArray and GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayInput` via:
//
//	GetConnectivityTestsConnectivityTestSourceCloudFunctionArray{ GetConnectivityTestsConnectivityTestSourceCloudFunctionArgs{...} }
type GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput() GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput
	ToGetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput
}

type GetConnectivityTestsConnectivityTestSourceCloudFunctionArray []GetConnectivityTestsConnectivityTestSourceCloudFunctionInput

func (GetConnectivityTestsConnectivityTestSourceCloudFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestSourceCloudFunction)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestSourceCloudFunctionArray) ToGetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput() GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput {
	return i.ToGetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestSourceCloudFunctionArray) ToGetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput)
}

type GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceCloudFunction)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput) ToGetConnectivityTestsConnectivityTestSourceCloudFunctionOutput() GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput) ToGetConnectivityTestsConnectivityTestSourceCloudFunctionOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput {
	return o
}

// A Cloud Run revision URI.
func (o GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSourceCloudFunction) string { return v.Uri }).(pulumi.StringOutput)
}

type GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestSourceCloudFunction)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput) ToGetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput() GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput) ToGetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestsConnectivityTestSourceCloudFunction {
		return vs[0].([]GetConnectivityTestsConnectivityTestSourceCloudFunction)[vs[1].(int)]
	}).(GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput)
}

type GetConnectivityTestsConnectivityTestSourceCloudRunRevision struct {
	// A Cloud Run revision URI.
	Uri string `pulumi:"uri"`
}

// GetConnectivityTestsConnectivityTestSourceCloudRunRevisionInput is an input type that accepts GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArgs and GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestSourceCloudRunRevisionInput` via:
//
//	GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArgs{...}
type GetConnectivityTestsConnectivityTestSourceCloudRunRevisionInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput() GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput
	ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput
}

type GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArgs struct {
	// A Cloud Run revision URI.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceCloudRunRevision)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArgs) ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput() GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput {
	return i.ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArgs) ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput)
}

// GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayInput is an input type that accepts GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArray and GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput values.
// You can construct a concrete instance of `GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayInput` via:
//
//	GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArray{ GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArgs{...} }
type GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayInput interface {
	pulumi.Input

	ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput() GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput
	ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutputWithContext(context.Context) GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput
}

type GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArray []GetConnectivityTestsConnectivityTestSourceCloudRunRevisionInput

func (GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestSourceCloudRunRevision)(nil)).Elem()
}

func (i GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArray) ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput() GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput {
	return i.ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutputWithContext(context.Background())
}

func (i GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArray) ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput)
}

type GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceCloudRunRevision)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput) ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput() GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput) ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput {
	return o
}

// A Cloud Run revision URI.
func (o GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectivityTestsConnectivityTestSourceCloudRunRevision) string { return v.Uri }).(pulumi.StringOutput)
}

type GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput struct{ *pulumi.OutputState }

func (GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectivityTestsConnectivityTestSourceCloudRunRevision)(nil)).Elem()
}

func (o GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput) ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput() GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput) ToGetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutputWithContext(ctx context.Context) GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput {
	return o
}

func (o GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput) Index(i pulumi.IntInput) GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectivityTestsConnectivityTestSourceCloudRunRevision {
		return vs[0].([]GetConnectivityTestsConnectivityTestSourceCloudRunRevision)[vs[1].(int)]
	}).(GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestDestinationInput)(nil)).Elem(), ConnectivityTestDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestDestinationPtrInput)(nil)).Elem(), ConnectivityTestDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestSourceInput)(nil)).Elem(), ConnectivityTestSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestSourcePtrInput)(nil)).Elem(), ConnectivityTestSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestSourceAppEngineVersionInput)(nil)).Elem(), ConnectivityTestSourceAppEngineVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestSourceAppEngineVersionPtrInput)(nil)).Elem(), ConnectivityTestSourceAppEngineVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestSourceCloudFunctionInput)(nil)).Elem(), ConnectivityTestSourceCloudFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestSourceCloudFunctionPtrInput)(nil)).Elem(), ConnectivityTestSourceCloudFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestSourceCloudRunRevisionInput)(nil)).Elem(), ConnectivityTestSourceCloudRunRevisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectivityTestSourceCloudRunRevisionPtrInput)(nil)).Elem(), ConnectivityTestSourceCloudRunRevisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailInput)(nil)).Elem(), GetConnectivityTestRunReachabilityDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailArrayInput)(nil)).Elem(), GetConnectivityTestRunReachabilityDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceInput)(nil)).Elem(), GetConnectivityTestRunReachabilityDetailTraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceArrayInput)(nil)).Elem(), GetConnectivityTestRunReachabilityDetailTraceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceEndpointInfoInput)(nil)).Elem(), GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayInput)(nil)).Elem(), GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceStepInput)(nil)).Elem(), GetConnectivityTestRunReachabilityDetailTraceStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestRunReachabilityDetailTraceStepArrayInput)(nil)).Elem(), GetConnectivityTestRunReachabilityDetailTraceStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestArrayInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestDestinationInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestDestinationArrayInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceArrayInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceAppEngineVersionInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestSourceAppEngineVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestSourceAppEngineVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceCloudFunctionInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestSourceCloudFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestSourceCloudFunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceCloudRunRevisionInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayInput)(nil)).Elem(), GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArray{})
	pulumi.RegisterOutputType(ConnectivityTestDestinationOutput{})
	pulumi.RegisterOutputType(ConnectivityTestDestinationPtrOutput{})
	pulumi.RegisterOutputType(ConnectivityTestSourceOutput{})
	pulumi.RegisterOutputType(ConnectivityTestSourcePtrOutput{})
	pulumi.RegisterOutputType(ConnectivityTestSourceAppEngineVersionOutput{})
	pulumi.RegisterOutputType(ConnectivityTestSourceAppEngineVersionPtrOutput{})
	pulumi.RegisterOutputType(ConnectivityTestSourceCloudFunctionOutput{})
	pulumi.RegisterOutputType(ConnectivityTestSourceCloudFunctionPtrOutput{})
	pulumi.RegisterOutputType(ConnectivityTestSourceCloudRunRevisionOutput{})
	pulumi.RegisterOutputType(ConnectivityTestSourceCloudRunRevisionPtrOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestRunReachabilityDetailOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestRunReachabilityDetailArrayOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestRunReachabilityDetailTraceOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestRunReachabilityDetailTraceArrayOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestRunReachabilityDetailTraceEndpointInfoOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestRunReachabilityDetailTraceEndpointInfoArrayOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestRunReachabilityDetailTraceStepOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestRunReachabilityDetailTraceStepArrayOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestArrayOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestDestinationOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestSourceOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestSourceArrayOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestSourceAppEngineVersionOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestSourceAppEngineVersionArrayOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestSourceCloudFunctionOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestSourceCloudFunctionArrayOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestSourceCloudRunRevisionOutput{})
	pulumi.RegisterOutputType(GetConnectivityTestsConnectivityTestSourceCloudRunRevisionArrayOutput{})
}
