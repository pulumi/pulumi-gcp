// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VPC Flow Logs Config is a resource that lets you configure Flow Logs for Organization.
//
// ## Example Usage
//
// ### Network Management Org Vpc Flow Logs Config Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/networkmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkmanagement.NewOrganizationVpcFlowLogsConfig(ctx, "org-test", &networkmanagement.OrganizationVpcFlowLogsConfigArgs{
//				VpcFlowLogsConfigId: pulumi.String("basic-org-test-id"),
//				Location:            pulumi.String("global"),
//				Organization:        pulumi.String("123456789"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OrganizationVpcFlowLogsConfig can be imported using any of these accepted formats:
//
// * `organizations/{{organization}}/locations/{{location}}/vpcFlowLogsConfigs/{{vpc_flow_logs_config_id}}`
//
// * `{{organization}}/{{location}}/{{vpc_flow_logs_config_id}}`
//
// When using the `pulumi import` command, OrganizationVpcFlowLogsConfig can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:networkmanagement/organizationVpcFlowLogsConfig:OrganizationVpcFlowLogsConfig default organizations/{{organization}}/locations/{{location}}/vpcFlowLogsConfigs/{{vpc_flow_logs_config_id}}
// ```
//
// ```sh
// $ pulumi import gcp:networkmanagement/organizationVpcFlowLogsConfig:OrganizationVpcFlowLogsConfig default {{organization}}/{{location}}/{{vpc_flow_logs_config_id}}
// ```
type OrganizationVpcFlowLogsConfig struct {
	pulumi.CustomResourceState

	// Optional. The aggregation interval for the logs. Default value is
	// INTERVAL_5_SEC.   Possible values: INTERVAL_5_SEC INTERVAL_30_SEC INTERVAL_1_MIN INTERVAL_5_MIN INTERVAL_10_MIN INTERVAL_15_MIN
	AggregationInterval pulumi.StringOutput `pulumi:"aggregationInterval"`
	// Output only. The time the config was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Determines whether to include cross project annotations in the logs.
	// This field is available only for organization configurations. If not
	// specified in org configs will be set to CROSS_PROJECT_METADATA_ENABLED.
	// Possible values:
	// CROSS_PROJECT_METADATA_ENABLED
	// CROSS_PROJECT_METADATA_DISABLED
	// Possible values are: `CROSS_PROJECT_METADATA_ENABLED`, `CROSS_PROJECT_METADATA_DISABLED`.
	CrossProjectMetadata pulumi.StringOutput `pulumi:"crossProjectMetadata"`
	// Optional. The user-supplied description of the VPC Flow Logs configuration. Maximum
	// of 512 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. Export filter used to define which VPC Flow Logs should be logged.
	FilterExpr pulumi.StringPtrOutput `pulumi:"filterExpr"`
	// Optional. The value of the field must be in (0, 1]. The sampling rate
	// of VPC Flow Logs where 1.0 means all collected logs are reported. Setting the
	// sampling rate to 0.0 is not allowed. If you want to disable VPC Flow Logs, use
	// the state field instead. Default value is 1.0.
	FlowSampling pulumi.Float64Output `pulumi:"flowSampling"`
	// Optional. Resource labels to represent the user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource
	// within its parent collection as described in https://google.aip.dev/122. See documentation
	// for resource type `networkmanagement.googleapis.com/VpcFlowLogsConfig`.
	Location pulumi.StringOutput `pulumi:"location"`
	// Optional. Configures whether all, none or a subset of metadata fields
	// should be added to the reported VPC flow logs. Default value is INCLUDE_ALL_METADATA.
	// Possible values:  METADATA_UNSPECIFIED INCLUDE_ALL_METADATA EXCLUDE_ALL_METADATA CUSTOM_METADATA
	Metadata pulumi.StringOutput `pulumi:"metadata"`
	// Optional. Custom metadata fields to include in the reported VPC flow
	// logs. Can only be specified if \"metadata\" was set to CUSTOM_METADATA.
	MetadataFields pulumi.StringArrayOutput `pulumi:"metadataFields"`
	// Identifier. Unique name of the configuration using the form:     `organizations/{org_id}/locations/global/vpcFlowLogsConfigs/{vpc_flow_logs_config_id}`
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Organization pulumi.StringOutput `pulumi:"organization"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Optional. The state of the VPC Flow Log configuration. Default value
	// is ENABLED. When creating a new configuration, it must be enabled.
	// Possible values: ENABLED DISABLED
	State pulumi.StringOutput `pulumi:"state"`
	// Output only. The time the config was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Required. ID of the `VpcFlowLogsConfig`.
	VpcFlowLogsConfigId pulumi.StringOutput `pulumi:"vpcFlowLogsConfigId"`
}

// NewOrganizationVpcFlowLogsConfig registers a new resource with the given unique name, arguments, and options.
func NewOrganizationVpcFlowLogsConfig(ctx *pulumi.Context,
	name string, args *OrganizationVpcFlowLogsConfigArgs, opts ...pulumi.ResourceOption) (*OrganizationVpcFlowLogsConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.VpcFlowLogsConfigId == nil {
		return nil, errors.New("invalid value for required argument 'VpcFlowLogsConfigId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationVpcFlowLogsConfig
	err := ctx.RegisterResource("gcp:networkmanagement/organizationVpcFlowLogsConfig:OrganizationVpcFlowLogsConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationVpcFlowLogsConfig gets an existing OrganizationVpcFlowLogsConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationVpcFlowLogsConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationVpcFlowLogsConfigState, opts ...pulumi.ResourceOption) (*OrganizationVpcFlowLogsConfig, error) {
	var resource OrganizationVpcFlowLogsConfig
	err := ctx.ReadResource("gcp:networkmanagement/organizationVpcFlowLogsConfig:OrganizationVpcFlowLogsConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationVpcFlowLogsConfig resources.
type organizationVpcFlowLogsConfigState struct {
	// Optional. The aggregation interval for the logs. Default value is
	// INTERVAL_5_SEC.   Possible values: INTERVAL_5_SEC INTERVAL_30_SEC INTERVAL_1_MIN INTERVAL_5_MIN INTERVAL_10_MIN INTERVAL_15_MIN
	AggregationInterval *string `pulumi:"aggregationInterval"`
	// Output only. The time the config was created.
	CreateTime *string `pulumi:"createTime"`
	// Determines whether to include cross project annotations in the logs.
	// This field is available only for organization configurations. If not
	// specified in org configs will be set to CROSS_PROJECT_METADATA_ENABLED.
	// Possible values:
	// CROSS_PROJECT_METADATA_ENABLED
	// CROSS_PROJECT_METADATA_DISABLED
	// Possible values are: `CROSS_PROJECT_METADATA_ENABLED`, `CROSS_PROJECT_METADATA_DISABLED`.
	CrossProjectMetadata *string `pulumi:"crossProjectMetadata"`
	// Optional. The user-supplied description of the VPC Flow Logs configuration. Maximum
	// of 512 characters.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Optional. Export filter used to define which VPC Flow Logs should be logged.
	FilterExpr *string `pulumi:"filterExpr"`
	// Optional. The value of the field must be in (0, 1]. The sampling rate
	// of VPC Flow Logs where 1.0 means all collected logs are reported. Setting the
	// sampling rate to 0.0 is not allowed. If you want to disable VPC Flow Logs, use
	// the state field instead. Default value is 1.0.
	FlowSampling *float64 `pulumi:"flowSampling"`
	// Optional. Resource labels to represent the user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource
	// within its parent collection as described in https://google.aip.dev/122. See documentation
	// for resource type `networkmanagement.googleapis.com/VpcFlowLogsConfig`.
	Location *string `pulumi:"location"`
	// Optional. Configures whether all, none or a subset of metadata fields
	// should be added to the reported VPC flow logs. Default value is INCLUDE_ALL_METADATA.
	// Possible values:  METADATA_UNSPECIFIED INCLUDE_ALL_METADATA EXCLUDE_ALL_METADATA CUSTOM_METADATA
	Metadata *string `pulumi:"metadata"`
	// Optional. Custom metadata fields to include in the reported VPC flow
	// logs. Can only be specified if \"metadata\" was set to CUSTOM_METADATA.
	MetadataFields []string `pulumi:"metadataFields"`
	// Identifier. Unique name of the configuration using the form:     `organizations/{org_id}/locations/global/vpcFlowLogsConfigs/{vpc_flow_logs_config_id}`
	Name *string `pulumi:"name"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Organization *string `pulumi:"organization"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Optional. The state of the VPC Flow Log configuration. Default value
	// is ENABLED. When creating a new configuration, it must be enabled.
	// Possible values: ENABLED DISABLED
	State *string `pulumi:"state"`
	// Output only. The time the config was updated.
	UpdateTime *string `pulumi:"updateTime"`
	// Required. ID of the `VpcFlowLogsConfig`.
	VpcFlowLogsConfigId *string `pulumi:"vpcFlowLogsConfigId"`
}

type OrganizationVpcFlowLogsConfigState struct {
	// Optional. The aggregation interval for the logs. Default value is
	// INTERVAL_5_SEC.   Possible values: INTERVAL_5_SEC INTERVAL_30_SEC INTERVAL_1_MIN INTERVAL_5_MIN INTERVAL_10_MIN INTERVAL_15_MIN
	AggregationInterval pulumi.StringPtrInput
	// Output only. The time the config was created.
	CreateTime pulumi.StringPtrInput
	// Determines whether to include cross project annotations in the logs.
	// This field is available only for organization configurations. If not
	// specified in org configs will be set to CROSS_PROJECT_METADATA_ENABLED.
	// Possible values:
	// CROSS_PROJECT_METADATA_ENABLED
	// CROSS_PROJECT_METADATA_DISABLED
	// Possible values are: `CROSS_PROJECT_METADATA_ENABLED`, `CROSS_PROJECT_METADATA_DISABLED`.
	CrossProjectMetadata pulumi.StringPtrInput
	// Optional. The user-supplied description of the VPC Flow Logs configuration. Maximum
	// of 512 characters.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Optional. Export filter used to define which VPC Flow Logs should be logged.
	FilterExpr pulumi.StringPtrInput
	// Optional. The value of the field must be in (0, 1]. The sampling rate
	// of VPC Flow Logs where 1.0 means all collected logs are reported. Setting the
	// sampling rate to 0.0 is not allowed. If you want to disable VPC Flow Logs, use
	// the state field instead. Default value is 1.0.
	FlowSampling pulumi.Float64PtrInput
	// Optional. Resource labels to represent the user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource
	// within its parent collection as described in https://google.aip.dev/122. See documentation
	// for resource type `networkmanagement.googleapis.com/VpcFlowLogsConfig`.
	Location pulumi.StringPtrInput
	// Optional. Configures whether all, none or a subset of metadata fields
	// should be added to the reported VPC flow logs. Default value is INCLUDE_ALL_METADATA.
	// Possible values:  METADATA_UNSPECIFIED INCLUDE_ALL_METADATA EXCLUDE_ALL_METADATA CUSTOM_METADATA
	Metadata pulumi.StringPtrInput
	// Optional. Custom metadata fields to include in the reported VPC flow
	// logs. Can only be specified if \"metadata\" was set to CUSTOM_METADATA.
	MetadataFields pulumi.StringArrayInput
	// Identifier. Unique name of the configuration using the form:     `organizations/{org_id}/locations/global/vpcFlowLogsConfigs/{vpc_flow_logs_config_id}`
	Name pulumi.StringPtrInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Organization pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Optional. The state of the VPC Flow Log configuration. Default value
	// is ENABLED. When creating a new configuration, it must be enabled.
	// Possible values: ENABLED DISABLED
	State pulumi.StringPtrInput
	// Output only. The time the config was updated.
	UpdateTime pulumi.StringPtrInput
	// Required. ID of the `VpcFlowLogsConfig`.
	VpcFlowLogsConfigId pulumi.StringPtrInput
}

func (OrganizationVpcFlowLogsConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationVpcFlowLogsConfigState)(nil)).Elem()
}

type organizationVpcFlowLogsConfigArgs struct {
	// Optional. The aggregation interval for the logs. Default value is
	// INTERVAL_5_SEC.   Possible values: INTERVAL_5_SEC INTERVAL_30_SEC INTERVAL_1_MIN INTERVAL_5_MIN INTERVAL_10_MIN INTERVAL_15_MIN
	AggregationInterval *string `pulumi:"aggregationInterval"`
	// Determines whether to include cross project annotations in the logs.
	// This field is available only for organization configurations. If not
	// specified in org configs will be set to CROSS_PROJECT_METADATA_ENABLED.
	// Possible values:
	// CROSS_PROJECT_METADATA_ENABLED
	// CROSS_PROJECT_METADATA_DISABLED
	// Possible values are: `CROSS_PROJECT_METADATA_ENABLED`, `CROSS_PROJECT_METADATA_DISABLED`.
	CrossProjectMetadata *string `pulumi:"crossProjectMetadata"`
	// Optional. The user-supplied description of the VPC Flow Logs configuration. Maximum
	// of 512 characters.
	Description *string `pulumi:"description"`
	// Optional. Export filter used to define which VPC Flow Logs should be logged.
	FilterExpr *string `pulumi:"filterExpr"`
	// Optional. The value of the field must be in (0, 1]. The sampling rate
	// of VPC Flow Logs where 1.0 means all collected logs are reported. Setting the
	// sampling rate to 0.0 is not allowed. If you want to disable VPC Flow Logs, use
	// the state field instead. Default value is 1.0.
	FlowSampling *float64 `pulumi:"flowSampling"`
	// Optional. Resource labels to represent the user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource `name`. It identifies the resource
	// within its parent collection as described in https://google.aip.dev/122. See documentation
	// for resource type `networkmanagement.googleapis.com/VpcFlowLogsConfig`.
	Location string `pulumi:"location"`
	// Optional. Configures whether all, none or a subset of metadata fields
	// should be added to the reported VPC flow logs. Default value is INCLUDE_ALL_METADATA.
	// Possible values:  METADATA_UNSPECIFIED INCLUDE_ALL_METADATA EXCLUDE_ALL_METADATA CUSTOM_METADATA
	Metadata *string `pulumi:"metadata"`
	// Optional. Custom metadata fields to include in the reported VPC flow
	// logs. Can only be specified if \"metadata\" was set to CUSTOM_METADATA.
	MetadataFields []string `pulumi:"metadataFields"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Organization string `pulumi:"organization"`
	// Optional. The state of the VPC Flow Log configuration. Default value
	// is ENABLED. When creating a new configuration, it must be enabled.
	// Possible values: ENABLED DISABLED
	State *string `pulumi:"state"`
	// Required. ID of the `VpcFlowLogsConfig`.
	VpcFlowLogsConfigId string `pulumi:"vpcFlowLogsConfigId"`
}

// The set of arguments for constructing a OrganizationVpcFlowLogsConfig resource.
type OrganizationVpcFlowLogsConfigArgs struct {
	// Optional. The aggregation interval for the logs. Default value is
	// INTERVAL_5_SEC.   Possible values: INTERVAL_5_SEC INTERVAL_30_SEC INTERVAL_1_MIN INTERVAL_5_MIN INTERVAL_10_MIN INTERVAL_15_MIN
	AggregationInterval pulumi.StringPtrInput
	// Determines whether to include cross project annotations in the logs.
	// This field is available only for organization configurations. If not
	// specified in org configs will be set to CROSS_PROJECT_METADATA_ENABLED.
	// Possible values:
	// CROSS_PROJECT_METADATA_ENABLED
	// CROSS_PROJECT_METADATA_DISABLED
	// Possible values are: `CROSS_PROJECT_METADATA_ENABLED`, `CROSS_PROJECT_METADATA_DISABLED`.
	CrossProjectMetadata pulumi.StringPtrInput
	// Optional. The user-supplied description of the VPC Flow Logs configuration. Maximum
	// of 512 characters.
	Description pulumi.StringPtrInput
	// Optional. Export filter used to define which VPC Flow Logs should be logged.
	FilterExpr pulumi.StringPtrInput
	// Optional. The value of the field must be in (0, 1]. The sampling rate
	// of VPC Flow Logs where 1.0 means all collected logs are reported. Setting the
	// sampling rate to 0.0 is not allowed. If you want to disable VPC Flow Logs, use
	// the state field instead. Default value is 1.0.
	FlowSampling pulumi.Float64PtrInput
	// Optional. Resource labels to represent the user-provided metadata.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource `name`. It identifies the resource
	// within its parent collection as described in https://google.aip.dev/122. See documentation
	// for resource type `networkmanagement.googleapis.com/VpcFlowLogsConfig`.
	Location pulumi.StringInput
	// Optional. Configures whether all, none or a subset of metadata fields
	// should be added to the reported VPC flow logs. Default value is INCLUDE_ALL_METADATA.
	// Possible values:  METADATA_UNSPECIFIED INCLUDE_ALL_METADATA EXCLUDE_ALL_METADATA CUSTOM_METADATA
	Metadata pulumi.StringPtrInput
	// Optional. Custom metadata fields to include in the reported VPC flow
	// logs. Can only be specified if \"metadata\" was set to CUSTOM_METADATA.
	MetadataFields pulumi.StringArrayInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
	Organization pulumi.StringInput
	// Optional. The state of the VPC Flow Log configuration. Default value
	// is ENABLED. When creating a new configuration, it must be enabled.
	// Possible values: ENABLED DISABLED
	State pulumi.StringPtrInput
	// Required. ID of the `VpcFlowLogsConfig`.
	VpcFlowLogsConfigId pulumi.StringInput
}

func (OrganizationVpcFlowLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationVpcFlowLogsConfigArgs)(nil)).Elem()
}

type OrganizationVpcFlowLogsConfigInput interface {
	pulumi.Input

	ToOrganizationVpcFlowLogsConfigOutput() OrganizationVpcFlowLogsConfigOutput
	ToOrganizationVpcFlowLogsConfigOutputWithContext(ctx context.Context) OrganizationVpcFlowLogsConfigOutput
}

func (*OrganizationVpcFlowLogsConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationVpcFlowLogsConfig)(nil)).Elem()
}

func (i *OrganizationVpcFlowLogsConfig) ToOrganizationVpcFlowLogsConfigOutput() OrganizationVpcFlowLogsConfigOutput {
	return i.ToOrganizationVpcFlowLogsConfigOutputWithContext(context.Background())
}

func (i *OrganizationVpcFlowLogsConfig) ToOrganizationVpcFlowLogsConfigOutputWithContext(ctx context.Context) OrganizationVpcFlowLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationVpcFlowLogsConfigOutput)
}

// OrganizationVpcFlowLogsConfigArrayInput is an input type that accepts OrganizationVpcFlowLogsConfigArray and OrganizationVpcFlowLogsConfigArrayOutput values.
// You can construct a concrete instance of `OrganizationVpcFlowLogsConfigArrayInput` via:
//
//	OrganizationVpcFlowLogsConfigArray{ OrganizationVpcFlowLogsConfigArgs{...} }
type OrganizationVpcFlowLogsConfigArrayInput interface {
	pulumi.Input

	ToOrganizationVpcFlowLogsConfigArrayOutput() OrganizationVpcFlowLogsConfigArrayOutput
	ToOrganizationVpcFlowLogsConfigArrayOutputWithContext(context.Context) OrganizationVpcFlowLogsConfigArrayOutput
}

type OrganizationVpcFlowLogsConfigArray []OrganizationVpcFlowLogsConfigInput

func (OrganizationVpcFlowLogsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationVpcFlowLogsConfig)(nil)).Elem()
}

func (i OrganizationVpcFlowLogsConfigArray) ToOrganizationVpcFlowLogsConfigArrayOutput() OrganizationVpcFlowLogsConfigArrayOutput {
	return i.ToOrganizationVpcFlowLogsConfigArrayOutputWithContext(context.Background())
}

func (i OrganizationVpcFlowLogsConfigArray) ToOrganizationVpcFlowLogsConfigArrayOutputWithContext(ctx context.Context) OrganizationVpcFlowLogsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationVpcFlowLogsConfigArrayOutput)
}

// OrganizationVpcFlowLogsConfigMapInput is an input type that accepts OrganizationVpcFlowLogsConfigMap and OrganizationVpcFlowLogsConfigMapOutput values.
// You can construct a concrete instance of `OrganizationVpcFlowLogsConfigMapInput` via:
//
//	OrganizationVpcFlowLogsConfigMap{ "key": OrganizationVpcFlowLogsConfigArgs{...} }
type OrganizationVpcFlowLogsConfigMapInput interface {
	pulumi.Input

	ToOrganizationVpcFlowLogsConfigMapOutput() OrganizationVpcFlowLogsConfigMapOutput
	ToOrganizationVpcFlowLogsConfigMapOutputWithContext(context.Context) OrganizationVpcFlowLogsConfigMapOutput
}

type OrganizationVpcFlowLogsConfigMap map[string]OrganizationVpcFlowLogsConfigInput

func (OrganizationVpcFlowLogsConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationVpcFlowLogsConfig)(nil)).Elem()
}

func (i OrganizationVpcFlowLogsConfigMap) ToOrganizationVpcFlowLogsConfigMapOutput() OrganizationVpcFlowLogsConfigMapOutput {
	return i.ToOrganizationVpcFlowLogsConfigMapOutputWithContext(context.Background())
}

func (i OrganizationVpcFlowLogsConfigMap) ToOrganizationVpcFlowLogsConfigMapOutputWithContext(ctx context.Context) OrganizationVpcFlowLogsConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationVpcFlowLogsConfigMapOutput)
}

type OrganizationVpcFlowLogsConfigOutput struct{ *pulumi.OutputState }

func (OrganizationVpcFlowLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationVpcFlowLogsConfig)(nil)).Elem()
}

func (o OrganizationVpcFlowLogsConfigOutput) ToOrganizationVpcFlowLogsConfigOutput() OrganizationVpcFlowLogsConfigOutput {
	return o
}

func (o OrganizationVpcFlowLogsConfigOutput) ToOrganizationVpcFlowLogsConfigOutputWithContext(ctx context.Context) OrganizationVpcFlowLogsConfigOutput {
	return o
}

// Optional. The aggregation interval for the logs. Default value is
// INTERVAL_5_SEC.   Possible values: INTERVAL_5_SEC INTERVAL_30_SEC INTERVAL_1_MIN INTERVAL_5_MIN INTERVAL_10_MIN INTERVAL_15_MIN
func (o OrganizationVpcFlowLogsConfigOutput) AggregationInterval() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.AggregationInterval }).(pulumi.StringOutput)
}

// Output only. The time the config was created.
func (o OrganizationVpcFlowLogsConfigOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Determines whether to include cross project annotations in the logs.
// This field is available only for organization configurations. If not
// specified in org configs will be set to CROSS_PROJECT_METADATA_ENABLED.
// Possible values:
// CROSS_PROJECT_METADATA_ENABLED
// CROSS_PROJECT_METADATA_DISABLED
// Possible values are: `CROSS_PROJECT_METADATA_ENABLED`, `CROSS_PROJECT_METADATA_DISABLED`.
func (o OrganizationVpcFlowLogsConfigOutput) CrossProjectMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.CrossProjectMetadata }).(pulumi.StringOutput)
}

// Optional. The user-supplied description of the VPC Flow Logs configuration. Maximum
// of 512 characters.
func (o OrganizationVpcFlowLogsConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o OrganizationVpcFlowLogsConfigOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. Export filter used to define which VPC Flow Logs should be logged.
func (o OrganizationVpcFlowLogsConfigOutput) FilterExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringPtrOutput { return v.FilterExpr }).(pulumi.StringPtrOutput)
}

// Optional. The value of the field must be in (0, 1]. The sampling rate
// of VPC Flow Logs where 1.0 means all collected logs are reported. Setting the
// sampling rate to 0.0 is not allowed. If you want to disable VPC Flow Logs, use
// the state field instead. Default value is 1.0.
func (o OrganizationVpcFlowLogsConfigOutput) FlowSampling() pulumi.Float64Output {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.Float64Output { return v.FlowSampling }).(pulumi.Float64Output)
}

// Optional. Resource labels to represent the user-provided metadata.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o OrganizationVpcFlowLogsConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource
// within its parent collection as described in https://google.aip.dev/122. See documentation
// for resource type `networkmanagement.googleapis.com/VpcFlowLogsConfig`.
func (o OrganizationVpcFlowLogsConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Optional. Configures whether all, none or a subset of metadata fields
// should be added to the reported VPC flow logs. Default value is INCLUDE_ALL_METADATA.
// Possible values:  METADATA_UNSPECIFIED INCLUDE_ALL_METADATA EXCLUDE_ALL_METADATA CUSTOM_METADATA
func (o OrganizationVpcFlowLogsConfigOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.Metadata }).(pulumi.StringOutput)
}

// Optional. Custom metadata fields to include in the reported VPC flow
// logs. Can only be specified if \"metadata\" was set to CUSTOM_METADATA.
func (o OrganizationVpcFlowLogsConfigOutput) MetadataFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringArrayOutput { return v.MetadataFields }).(pulumi.StringArrayOutput)
}

// Identifier. Unique name of the configuration using the form:     `organizations/{org_id}/locations/global/vpcFlowLogsConfigs/{vpc_flow_logs_config_id}`
func (o OrganizationVpcFlowLogsConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
func (o OrganizationVpcFlowLogsConfigOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o OrganizationVpcFlowLogsConfigOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Optional. The state of the VPC Flow Log configuration. Default value
// is ENABLED. When creating a new configuration, it must be enabled.
// Possible values: ENABLED DISABLED
func (o OrganizationVpcFlowLogsConfigOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Output only. The time the config was updated.
func (o OrganizationVpcFlowLogsConfigOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Required. ID of the `VpcFlowLogsConfig`.
func (o OrganizationVpcFlowLogsConfigOutput) VpcFlowLogsConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationVpcFlowLogsConfig) pulumi.StringOutput { return v.VpcFlowLogsConfigId }).(pulumi.StringOutput)
}

type OrganizationVpcFlowLogsConfigArrayOutput struct{ *pulumi.OutputState }

func (OrganizationVpcFlowLogsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationVpcFlowLogsConfig)(nil)).Elem()
}

func (o OrganizationVpcFlowLogsConfigArrayOutput) ToOrganizationVpcFlowLogsConfigArrayOutput() OrganizationVpcFlowLogsConfigArrayOutput {
	return o
}

func (o OrganizationVpcFlowLogsConfigArrayOutput) ToOrganizationVpcFlowLogsConfigArrayOutputWithContext(ctx context.Context) OrganizationVpcFlowLogsConfigArrayOutput {
	return o
}

func (o OrganizationVpcFlowLogsConfigArrayOutput) Index(i pulumi.IntInput) OrganizationVpcFlowLogsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationVpcFlowLogsConfig {
		return vs[0].([]*OrganizationVpcFlowLogsConfig)[vs[1].(int)]
	}).(OrganizationVpcFlowLogsConfigOutput)
}

type OrganizationVpcFlowLogsConfigMapOutput struct{ *pulumi.OutputState }

func (OrganizationVpcFlowLogsConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationVpcFlowLogsConfig)(nil)).Elem()
}

func (o OrganizationVpcFlowLogsConfigMapOutput) ToOrganizationVpcFlowLogsConfigMapOutput() OrganizationVpcFlowLogsConfigMapOutput {
	return o
}

func (o OrganizationVpcFlowLogsConfigMapOutput) ToOrganizationVpcFlowLogsConfigMapOutputWithContext(ctx context.Context) OrganizationVpcFlowLogsConfigMapOutput {
	return o
}

func (o OrganizationVpcFlowLogsConfigMapOutput) MapIndex(k pulumi.StringInput) OrganizationVpcFlowLogsConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationVpcFlowLogsConfig {
		return vs[0].(map[string]*OrganizationVpcFlowLogsConfig)[vs[1].(string)]
	}).(OrganizationVpcFlowLogsConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationVpcFlowLogsConfigInput)(nil)).Elem(), &OrganizationVpcFlowLogsConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationVpcFlowLogsConfigArrayInput)(nil)).Elem(), OrganizationVpcFlowLogsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationVpcFlowLogsConfigMapInput)(nil)).Elem(), OrganizationVpcFlowLogsConfigMap{})
	pulumi.RegisterOutputType(OrganizationVpcFlowLogsConfigOutput{})
	pulumi.RegisterOutputType(OrganizationVpcFlowLogsConfigArrayOutput{})
	pulumi.RegisterOutputType(OrganizationVpcFlowLogsConfigMapOutput{})
}
