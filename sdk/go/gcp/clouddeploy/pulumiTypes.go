// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clouddeploy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeliveryPipelineCondition struct {
	PipelineReadyConditions  []DeliveryPipelineConditionPipelineReadyCondition  `pulumi:"pipelineReadyConditions"`
	TargetsPresentConditions []DeliveryPipelineConditionTargetsPresentCondition `pulumi:"targetsPresentConditions"`
}

// DeliveryPipelineConditionInput is an input type that accepts DeliveryPipelineConditionArgs and DeliveryPipelineConditionOutput values.
// You can construct a concrete instance of `DeliveryPipelineConditionInput` via:
//
//	DeliveryPipelineConditionArgs{...}
type DeliveryPipelineConditionInput interface {
	pulumi.Input

	ToDeliveryPipelineConditionOutput() DeliveryPipelineConditionOutput
	ToDeliveryPipelineConditionOutputWithContext(context.Context) DeliveryPipelineConditionOutput
}

type DeliveryPipelineConditionArgs struct {
	PipelineReadyConditions  DeliveryPipelineConditionPipelineReadyConditionArrayInput  `pulumi:"pipelineReadyConditions"`
	TargetsPresentConditions DeliveryPipelineConditionTargetsPresentConditionArrayInput `pulumi:"targetsPresentConditions"`
}

func (DeliveryPipelineConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineCondition)(nil)).Elem()
}

func (i DeliveryPipelineConditionArgs) ToDeliveryPipelineConditionOutput() DeliveryPipelineConditionOutput {
	return i.ToDeliveryPipelineConditionOutputWithContext(context.Background())
}

func (i DeliveryPipelineConditionArgs) ToDeliveryPipelineConditionOutputWithContext(ctx context.Context) DeliveryPipelineConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineConditionOutput)
}

// DeliveryPipelineConditionArrayInput is an input type that accepts DeliveryPipelineConditionArray and DeliveryPipelineConditionArrayOutput values.
// You can construct a concrete instance of `DeliveryPipelineConditionArrayInput` via:
//
//	DeliveryPipelineConditionArray{ DeliveryPipelineConditionArgs{...} }
type DeliveryPipelineConditionArrayInput interface {
	pulumi.Input

	ToDeliveryPipelineConditionArrayOutput() DeliveryPipelineConditionArrayOutput
	ToDeliveryPipelineConditionArrayOutputWithContext(context.Context) DeliveryPipelineConditionArrayOutput
}

type DeliveryPipelineConditionArray []DeliveryPipelineConditionInput

func (DeliveryPipelineConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryPipelineCondition)(nil)).Elem()
}

func (i DeliveryPipelineConditionArray) ToDeliveryPipelineConditionArrayOutput() DeliveryPipelineConditionArrayOutput {
	return i.ToDeliveryPipelineConditionArrayOutputWithContext(context.Background())
}

func (i DeliveryPipelineConditionArray) ToDeliveryPipelineConditionArrayOutputWithContext(ctx context.Context) DeliveryPipelineConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineConditionArrayOutput)
}

type DeliveryPipelineConditionOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineCondition)(nil)).Elem()
}

func (o DeliveryPipelineConditionOutput) ToDeliveryPipelineConditionOutput() DeliveryPipelineConditionOutput {
	return o
}

func (o DeliveryPipelineConditionOutput) ToDeliveryPipelineConditionOutputWithContext(ctx context.Context) DeliveryPipelineConditionOutput {
	return o
}

func (o DeliveryPipelineConditionOutput) PipelineReadyConditions() DeliveryPipelineConditionPipelineReadyConditionArrayOutput {
	return o.ApplyT(func(v DeliveryPipelineCondition) []DeliveryPipelineConditionPipelineReadyCondition {
		return v.PipelineReadyConditions
	}).(DeliveryPipelineConditionPipelineReadyConditionArrayOutput)
}

func (o DeliveryPipelineConditionOutput) TargetsPresentConditions() DeliveryPipelineConditionTargetsPresentConditionArrayOutput {
	return o.ApplyT(func(v DeliveryPipelineCondition) []DeliveryPipelineConditionTargetsPresentCondition {
		return v.TargetsPresentConditions
	}).(DeliveryPipelineConditionTargetsPresentConditionArrayOutput)
}

type DeliveryPipelineConditionArrayOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryPipelineCondition)(nil)).Elem()
}

func (o DeliveryPipelineConditionArrayOutput) ToDeliveryPipelineConditionArrayOutput() DeliveryPipelineConditionArrayOutput {
	return o
}

func (o DeliveryPipelineConditionArrayOutput) ToDeliveryPipelineConditionArrayOutputWithContext(ctx context.Context) DeliveryPipelineConditionArrayOutput {
	return o
}

func (o DeliveryPipelineConditionArrayOutput) Index(i pulumi.IntInput) DeliveryPipelineConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryPipelineCondition {
		return vs[0].([]DeliveryPipelineCondition)[vs[1].(int)]
	}).(DeliveryPipelineConditionOutput)
}

type DeliveryPipelineConditionPipelineReadyCondition struct {
	Status     *bool   `pulumi:"status"`
	UpdateTime *string `pulumi:"updateTime"`
}

// DeliveryPipelineConditionPipelineReadyConditionInput is an input type that accepts DeliveryPipelineConditionPipelineReadyConditionArgs and DeliveryPipelineConditionPipelineReadyConditionOutput values.
// You can construct a concrete instance of `DeliveryPipelineConditionPipelineReadyConditionInput` via:
//
//	DeliveryPipelineConditionPipelineReadyConditionArgs{...}
type DeliveryPipelineConditionPipelineReadyConditionInput interface {
	pulumi.Input

	ToDeliveryPipelineConditionPipelineReadyConditionOutput() DeliveryPipelineConditionPipelineReadyConditionOutput
	ToDeliveryPipelineConditionPipelineReadyConditionOutputWithContext(context.Context) DeliveryPipelineConditionPipelineReadyConditionOutput
}

type DeliveryPipelineConditionPipelineReadyConditionArgs struct {
	Status     pulumi.BoolPtrInput   `pulumi:"status"`
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
}

func (DeliveryPipelineConditionPipelineReadyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineConditionPipelineReadyCondition)(nil)).Elem()
}

func (i DeliveryPipelineConditionPipelineReadyConditionArgs) ToDeliveryPipelineConditionPipelineReadyConditionOutput() DeliveryPipelineConditionPipelineReadyConditionOutput {
	return i.ToDeliveryPipelineConditionPipelineReadyConditionOutputWithContext(context.Background())
}

func (i DeliveryPipelineConditionPipelineReadyConditionArgs) ToDeliveryPipelineConditionPipelineReadyConditionOutputWithContext(ctx context.Context) DeliveryPipelineConditionPipelineReadyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineConditionPipelineReadyConditionOutput)
}

// DeliveryPipelineConditionPipelineReadyConditionArrayInput is an input type that accepts DeliveryPipelineConditionPipelineReadyConditionArray and DeliveryPipelineConditionPipelineReadyConditionArrayOutput values.
// You can construct a concrete instance of `DeliveryPipelineConditionPipelineReadyConditionArrayInput` via:
//
//	DeliveryPipelineConditionPipelineReadyConditionArray{ DeliveryPipelineConditionPipelineReadyConditionArgs{...} }
type DeliveryPipelineConditionPipelineReadyConditionArrayInput interface {
	pulumi.Input

	ToDeliveryPipelineConditionPipelineReadyConditionArrayOutput() DeliveryPipelineConditionPipelineReadyConditionArrayOutput
	ToDeliveryPipelineConditionPipelineReadyConditionArrayOutputWithContext(context.Context) DeliveryPipelineConditionPipelineReadyConditionArrayOutput
}

type DeliveryPipelineConditionPipelineReadyConditionArray []DeliveryPipelineConditionPipelineReadyConditionInput

func (DeliveryPipelineConditionPipelineReadyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryPipelineConditionPipelineReadyCondition)(nil)).Elem()
}

func (i DeliveryPipelineConditionPipelineReadyConditionArray) ToDeliveryPipelineConditionPipelineReadyConditionArrayOutput() DeliveryPipelineConditionPipelineReadyConditionArrayOutput {
	return i.ToDeliveryPipelineConditionPipelineReadyConditionArrayOutputWithContext(context.Background())
}

func (i DeliveryPipelineConditionPipelineReadyConditionArray) ToDeliveryPipelineConditionPipelineReadyConditionArrayOutputWithContext(ctx context.Context) DeliveryPipelineConditionPipelineReadyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineConditionPipelineReadyConditionArrayOutput)
}

type DeliveryPipelineConditionPipelineReadyConditionOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineConditionPipelineReadyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineConditionPipelineReadyCondition)(nil)).Elem()
}

func (o DeliveryPipelineConditionPipelineReadyConditionOutput) ToDeliveryPipelineConditionPipelineReadyConditionOutput() DeliveryPipelineConditionPipelineReadyConditionOutput {
	return o
}

func (o DeliveryPipelineConditionPipelineReadyConditionOutput) ToDeliveryPipelineConditionPipelineReadyConditionOutputWithContext(ctx context.Context) DeliveryPipelineConditionPipelineReadyConditionOutput {
	return o
}

func (o DeliveryPipelineConditionPipelineReadyConditionOutput) Status() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryPipelineConditionPipelineReadyCondition) *bool { return v.Status }).(pulumi.BoolPtrOutput)
}

func (o DeliveryPipelineConditionPipelineReadyConditionOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryPipelineConditionPipelineReadyCondition) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type DeliveryPipelineConditionPipelineReadyConditionArrayOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineConditionPipelineReadyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryPipelineConditionPipelineReadyCondition)(nil)).Elem()
}

func (o DeliveryPipelineConditionPipelineReadyConditionArrayOutput) ToDeliveryPipelineConditionPipelineReadyConditionArrayOutput() DeliveryPipelineConditionPipelineReadyConditionArrayOutput {
	return o
}

func (o DeliveryPipelineConditionPipelineReadyConditionArrayOutput) ToDeliveryPipelineConditionPipelineReadyConditionArrayOutputWithContext(ctx context.Context) DeliveryPipelineConditionPipelineReadyConditionArrayOutput {
	return o
}

func (o DeliveryPipelineConditionPipelineReadyConditionArrayOutput) Index(i pulumi.IntInput) DeliveryPipelineConditionPipelineReadyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryPipelineConditionPipelineReadyCondition {
		return vs[0].([]DeliveryPipelineConditionPipelineReadyCondition)[vs[1].(int)]
	}).(DeliveryPipelineConditionPipelineReadyConditionOutput)
}

type DeliveryPipelineConditionTargetsPresentCondition struct {
	MissingTargets []string `pulumi:"missingTargets"`
	Status         *bool    `pulumi:"status"`
	UpdateTime     *string  `pulumi:"updateTime"`
}

// DeliveryPipelineConditionTargetsPresentConditionInput is an input type that accepts DeliveryPipelineConditionTargetsPresentConditionArgs and DeliveryPipelineConditionTargetsPresentConditionOutput values.
// You can construct a concrete instance of `DeliveryPipelineConditionTargetsPresentConditionInput` via:
//
//	DeliveryPipelineConditionTargetsPresentConditionArgs{...}
type DeliveryPipelineConditionTargetsPresentConditionInput interface {
	pulumi.Input

	ToDeliveryPipelineConditionTargetsPresentConditionOutput() DeliveryPipelineConditionTargetsPresentConditionOutput
	ToDeliveryPipelineConditionTargetsPresentConditionOutputWithContext(context.Context) DeliveryPipelineConditionTargetsPresentConditionOutput
}

type DeliveryPipelineConditionTargetsPresentConditionArgs struct {
	MissingTargets pulumi.StringArrayInput `pulumi:"missingTargets"`
	Status         pulumi.BoolPtrInput     `pulumi:"status"`
	UpdateTime     pulumi.StringPtrInput   `pulumi:"updateTime"`
}

func (DeliveryPipelineConditionTargetsPresentConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineConditionTargetsPresentCondition)(nil)).Elem()
}

func (i DeliveryPipelineConditionTargetsPresentConditionArgs) ToDeliveryPipelineConditionTargetsPresentConditionOutput() DeliveryPipelineConditionTargetsPresentConditionOutput {
	return i.ToDeliveryPipelineConditionTargetsPresentConditionOutputWithContext(context.Background())
}

func (i DeliveryPipelineConditionTargetsPresentConditionArgs) ToDeliveryPipelineConditionTargetsPresentConditionOutputWithContext(ctx context.Context) DeliveryPipelineConditionTargetsPresentConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineConditionTargetsPresentConditionOutput)
}

// DeliveryPipelineConditionTargetsPresentConditionArrayInput is an input type that accepts DeliveryPipelineConditionTargetsPresentConditionArray and DeliveryPipelineConditionTargetsPresentConditionArrayOutput values.
// You can construct a concrete instance of `DeliveryPipelineConditionTargetsPresentConditionArrayInput` via:
//
//	DeliveryPipelineConditionTargetsPresentConditionArray{ DeliveryPipelineConditionTargetsPresentConditionArgs{...} }
type DeliveryPipelineConditionTargetsPresentConditionArrayInput interface {
	pulumi.Input

	ToDeliveryPipelineConditionTargetsPresentConditionArrayOutput() DeliveryPipelineConditionTargetsPresentConditionArrayOutput
	ToDeliveryPipelineConditionTargetsPresentConditionArrayOutputWithContext(context.Context) DeliveryPipelineConditionTargetsPresentConditionArrayOutput
}

type DeliveryPipelineConditionTargetsPresentConditionArray []DeliveryPipelineConditionTargetsPresentConditionInput

func (DeliveryPipelineConditionTargetsPresentConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryPipelineConditionTargetsPresentCondition)(nil)).Elem()
}

func (i DeliveryPipelineConditionTargetsPresentConditionArray) ToDeliveryPipelineConditionTargetsPresentConditionArrayOutput() DeliveryPipelineConditionTargetsPresentConditionArrayOutput {
	return i.ToDeliveryPipelineConditionTargetsPresentConditionArrayOutputWithContext(context.Background())
}

func (i DeliveryPipelineConditionTargetsPresentConditionArray) ToDeliveryPipelineConditionTargetsPresentConditionArrayOutputWithContext(ctx context.Context) DeliveryPipelineConditionTargetsPresentConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineConditionTargetsPresentConditionArrayOutput)
}

type DeliveryPipelineConditionTargetsPresentConditionOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineConditionTargetsPresentConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineConditionTargetsPresentCondition)(nil)).Elem()
}

func (o DeliveryPipelineConditionTargetsPresentConditionOutput) ToDeliveryPipelineConditionTargetsPresentConditionOutput() DeliveryPipelineConditionTargetsPresentConditionOutput {
	return o
}

func (o DeliveryPipelineConditionTargetsPresentConditionOutput) ToDeliveryPipelineConditionTargetsPresentConditionOutputWithContext(ctx context.Context) DeliveryPipelineConditionTargetsPresentConditionOutput {
	return o
}

func (o DeliveryPipelineConditionTargetsPresentConditionOutput) MissingTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeliveryPipelineConditionTargetsPresentCondition) []string { return v.MissingTargets }).(pulumi.StringArrayOutput)
}

func (o DeliveryPipelineConditionTargetsPresentConditionOutput) Status() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryPipelineConditionTargetsPresentCondition) *bool { return v.Status }).(pulumi.BoolPtrOutput)
}

func (o DeliveryPipelineConditionTargetsPresentConditionOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryPipelineConditionTargetsPresentCondition) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type DeliveryPipelineConditionTargetsPresentConditionArrayOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineConditionTargetsPresentConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryPipelineConditionTargetsPresentCondition)(nil)).Elem()
}

func (o DeliveryPipelineConditionTargetsPresentConditionArrayOutput) ToDeliveryPipelineConditionTargetsPresentConditionArrayOutput() DeliveryPipelineConditionTargetsPresentConditionArrayOutput {
	return o
}

func (o DeliveryPipelineConditionTargetsPresentConditionArrayOutput) ToDeliveryPipelineConditionTargetsPresentConditionArrayOutputWithContext(ctx context.Context) DeliveryPipelineConditionTargetsPresentConditionArrayOutput {
	return o
}

func (o DeliveryPipelineConditionTargetsPresentConditionArrayOutput) Index(i pulumi.IntInput) DeliveryPipelineConditionTargetsPresentConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryPipelineConditionTargetsPresentCondition {
		return vs[0].([]DeliveryPipelineConditionTargetsPresentCondition)[vs[1].(int)]
	}).(DeliveryPipelineConditionTargetsPresentConditionOutput)
}

type DeliveryPipelineSerialPipeline struct {
	// Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.
	Stages []DeliveryPipelineSerialPipelineStage `pulumi:"stages"`
}

// DeliveryPipelineSerialPipelineInput is an input type that accepts DeliveryPipelineSerialPipelineArgs and DeliveryPipelineSerialPipelineOutput values.
// You can construct a concrete instance of `DeliveryPipelineSerialPipelineInput` via:
//
//	DeliveryPipelineSerialPipelineArgs{...}
type DeliveryPipelineSerialPipelineInput interface {
	pulumi.Input

	ToDeliveryPipelineSerialPipelineOutput() DeliveryPipelineSerialPipelineOutput
	ToDeliveryPipelineSerialPipelineOutputWithContext(context.Context) DeliveryPipelineSerialPipelineOutput
}

type DeliveryPipelineSerialPipelineArgs struct {
	// Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.
	Stages DeliveryPipelineSerialPipelineStageArrayInput `pulumi:"stages"`
}

func (DeliveryPipelineSerialPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineSerialPipeline)(nil)).Elem()
}

func (i DeliveryPipelineSerialPipelineArgs) ToDeliveryPipelineSerialPipelineOutput() DeliveryPipelineSerialPipelineOutput {
	return i.ToDeliveryPipelineSerialPipelineOutputWithContext(context.Background())
}

func (i DeliveryPipelineSerialPipelineArgs) ToDeliveryPipelineSerialPipelineOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineSerialPipelineOutput)
}

func (i DeliveryPipelineSerialPipelineArgs) ToDeliveryPipelineSerialPipelinePtrOutput() DeliveryPipelineSerialPipelinePtrOutput {
	return i.ToDeliveryPipelineSerialPipelinePtrOutputWithContext(context.Background())
}

func (i DeliveryPipelineSerialPipelineArgs) ToDeliveryPipelineSerialPipelinePtrOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineSerialPipelineOutput).ToDeliveryPipelineSerialPipelinePtrOutputWithContext(ctx)
}

// DeliveryPipelineSerialPipelinePtrInput is an input type that accepts DeliveryPipelineSerialPipelineArgs, DeliveryPipelineSerialPipelinePtr and DeliveryPipelineSerialPipelinePtrOutput values.
// You can construct a concrete instance of `DeliveryPipelineSerialPipelinePtrInput` via:
//
//	        DeliveryPipelineSerialPipelineArgs{...}
//
//	or:
//
//	        nil
type DeliveryPipelineSerialPipelinePtrInput interface {
	pulumi.Input

	ToDeliveryPipelineSerialPipelinePtrOutput() DeliveryPipelineSerialPipelinePtrOutput
	ToDeliveryPipelineSerialPipelinePtrOutputWithContext(context.Context) DeliveryPipelineSerialPipelinePtrOutput
}

type deliveryPipelineSerialPipelinePtrType DeliveryPipelineSerialPipelineArgs

func DeliveryPipelineSerialPipelinePtr(v *DeliveryPipelineSerialPipelineArgs) DeliveryPipelineSerialPipelinePtrInput {
	return (*deliveryPipelineSerialPipelinePtrType)(v)
}

func (*deliveryPipelineSerialPipelinePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryPipelineSerialPipeline)(nil)).Elem()
}

func (i *deliveryPipelineSerialPipelinePtrType) ToDeliveryPipelineSerialPipelinePtrOutput() DeliveryPipelineSerialPipelinePtrOutput {
	return i.ToDeliveryPipelineSerialPipelinePtrOutputWithContext(context.Background())
}

func (i *deliveryPipelineSerialPipelinePtrType) ToDeliveryPipelineSerialPipelinePtrOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineSerialPipelinePtrOutput)
}

type DeliveryPipelineSerialPipelineOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineSerialPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineSerialPipeline)(nil)).Elem()
}

func (o DeliveryPipelineSerialPipelineOutput) ToDeliveryPipelineSerialPipelineOutput() DeliveryPipelineSerialPipelineOutput {
	return o
}

func (o DeliveryPipelineSerialPipelineOutput) ToDeliveryPipelineSerialPipelineOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelineOutput {
	return o
}

func (o DeliveryPipelineSerialPipelineOutput) ToDeliveryPipelineSerialPipelinePtrOutput() DeliveryPipelineSerialPipelinePtrOutput {
	return o.ToDeliveryPipelineSerialPipelinePtrOutputWithContext(context.Background())
}

func (o DeliveryPipelineSerialPipelineOutput) ToDeliveryPipelineSerialPipelinePtrOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelinePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryPipelineSerialPipeline) *DeliveryPipelineSerialPipeline {
		return &v
	}).(DeliveryPipelineSerialPipelinePtrOutput)
}

// Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.
func (o DeliveryPipelineSerialPipelineOutput) Stages() DeliveryPipelineSerialPipelineStageArrayOutput {
	return o.ApplyT(func(v DeliveryPipelineSerialPipeline) []DeliveryPipelineSerialPipelineStage { return v.Stages }).(DeliveryPipelineSerialPipelineStageArrayOutput)
}

type DeliveryPipelineSerialPipelinePtrOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineSerialPipelinePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryPipelineSerialPipeline)(nil)).Elem()
}

func (o DeliveryPipelineSerialPipelinePtrOutput) ToDeliveryPipelineSerialPipelinePtrOutput() DeliveryPipelineSerialPipelinePtrOutput {
	return o
}

func (o DeliveryPipelineSerialPipelinePtrOutput) ToDeliveryPipelineSerialPipelinePtrOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelinePtrOutput {
	return o
}

func (o DeliveryPipelineSerialPipelinePtrOutput) Elem() DeliveryPipelineSerialPipelineOutput {
	return o.ApplyT(func(v *DeliveryPipelineSerialPipeline) DeliveryPipelineSerialPipeline {
		if v != nil {
			return *v
		}
		var ret DeliveryPipelineSerialPipeline
		return ret
	}).(DeliveryPipelineSerialPipelineOutput)
}

// Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.
func (o DeliveryPipelineSerialPipelinePtrOutput) Stages() DeliveryPipelineSerialPipelineStageArrayOutput {
	return o.ApplyT(func(v *DeliveryPipelineSerialPipeline) []DeliveryPipelineSerialPipelineStage {
		if v == nil {
			return nil
		}
		return v.Stages
	}).(DeliveryPipelineSerialPipelineStageArrayOutput)
}

type DeliveryPipelineSerialPipelineStage struct {
	// Skaffold profiles to use when rendering the manifest for this stage's `Target`.
	Profiles []string `pulumi:"profiles"`
	// The targetId to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.
	TargetId *string `pulumi:"targetId"`
}

// DeliveryPipelineSerialPipelineStageInput is an input type that accepts DeliveryPipelineSerialPipelineStageArgs and DeliveryPipelineSerialPipelineStageOutput values.
// You can construct a concrete instance of `DeliveryPipelineSerialPipelineStageInput` via:
//
//	DeliveryPipelineSerialPipelineStageArgs{...}
type DeliveryPipelineSerialPipelineStageInput interface {
	pulumi.Input

	ToDeliveryPipelineSerialPipelineStageOutput() DeliveryPipelineSerialPipelineStageOutput
	ToDeliveryPipelineSerialPipelineStageOutputWithContext(context.Context) DeliveryPipelineSerialPipelineStageOutput
}

type DeliveryPipelineSerialPipelineStageArgs struct {
	// Skaffold profiles to use when rendering the manifest for this stage's `Target`.
	Profiles pulumi.StringArrayInput `pulumi:"profiles"`
	// The targetId to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (DeliveryPipelineSerialPipelineStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineSerialPipelineStage)(nil)).Elem()
}

func (i DeliveryPipelineSerialPipelineStageArgs) ToDeliveryPipelineSerialPipelineStageOutput() DeliveryPipelineSerialPipelineStageOutput {
	return i.ToDeliveryPipelineSerialPipelineStageOutputWithContext(context.Background())
}

func (i DeliveryPipelineSerialPipelineStageArgs) ToDeliveryPipelineSerialPipelineStageOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelineStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineSerialPipelineStageOutput)
}

// DeliveryPipelineSerialPipelineStageArrayInput is an input type that accepts DeliveryPipelineSerialPipelineStageArray and DeliveryPipelineSerialPipelineStageArrayOutput values.
// You can construct a concrete instance of `DeliveryPipelineSerialPipelineStageArrayInput` via:
//
//	DeliveryPipelineSerialPipelineStageArray{ DeliveryPipelineSerialPipelineStageArgs{...} }
type DeliveryPipelineSerialPipelineStageArrayInput interface {
	pulumi.Input

	ToDeliveryPipelineSerialPipelineStageArrayOutput() DeliveryPipelineSerialPipelineStageArrayOutput
	ToDeliveryPipelineSerialPipelineStageArrayOutputWithContext(context.Context) DeliveryPipelineSerialPipelineStageArrayOutput
}

type DeliveryPipelineSerialPipelineStageArray []DeliveryPipelineSerialPipelineStageInput

func (DeliveryPipelineSerialPipelineStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryPipelineSerialPipelineStage)(nil)).Elem()
}

func (i DeliveryPipelineSerialPipelineStageArray) ToDeliveryPipelineSerialPipelineStageArrayOutput() DeliveryPipelineSerialPipelineStageArrayOutput {
	return i.ToDeliveryPipelineSerialPipelineStageArrayOutputWithContext(context.Background())
}

func (i DeliveryPipelineSerialPipelineStageArray) ToDeliveryPipelineSerialPipelineStageArrayOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelineStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineSerialPipelineStageArrayOutput)
}

type DeliveryPipelineSerialPipelineStageOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineSerialPipelineStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryPipelineSerialPipelineStage)(nil)).Elem()
}

func (o DeliveryPipelineSerialPipelineStageOutput) ToDeliveryPipelineSerialPipelineStageOutput() DeliveryPipelineSerialPipelineStageOutput {
	return o
}

func (o DeliveryPipelineSerialPipelineStageOutput) ToDeliveryPipelineSerialPipelineStageOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelineStageOutput {
	return o
}

// Skaffold profiles to use when rendering the manifest for this stage's `Target`.
func (o DeliveryPipelineSerialPipelineStageOutput) Profiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeliveryPipelineSerialPipelineStage) []string { return v.Profiles }).(pulumi.StringArrayOutput)
}

// The targetId to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.
func (o DeliveryPipelineSerialPipelineStageOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryPipelineSerialPipelineStage) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type DeliveryPipelineSerialPipelineStageArrayOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineSerialPipelineStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryPipelineSerialPipelineStage)(nil)).Elem()
}

func (o DeliveryPipelineSerialPipelineStageArrayOutput) ToDeliveryPipelineSerialPipelineStageArrayOutput() DeliveryPipelineSerialPipelineStageArrayOutput {
	return o
}

func (o DeliveryPipelineSerialPipelineStageArrayOutput) ToDeliveryPipelineSerialPipelineStageArrayOutputWithContext(ctx context.Context) DeliveryPipelineSerialPipelineStageArrayOutput {
	return o
}

func (o DeliveryPipelineSerialPipelineStageArrayOutput) Index(i pulumi.IntInput) DeliveryPipelineSerialPipelineStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryPipelineSerialPipelineStage {
		return vs[0].([]DeliveryPipelineSerialPipelineStage)[vs[1].(int)]
	}).(DeliveryPipelineSerialPipelineStageOutput)
}

type TargetAnthosCluster struct {
	// Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.
	Membership *string `pulumi:"membership"`
}

// TargetAnthosClusterInput is an input type that accepts TargetAnthosClusterArgs and TargetAnthosClusterOutput values.
// You can construct a concrete instance of `TargetAnthosClusterInput` via:
//
//	TargetAnthosClusterArgs{...}
type TargetAnthosClusterInput interface {
	pulumi.Input

	ToTargetAnthosClusterOutput() TargetAnthosClusterOutput
	ToTargetAnthosClusterOutputWithContext(context.Context) TargetAnthosClusterOutput
}

type TargetAnthosClusterArgs struct {
	// Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.
	Membership pulumi.StringPtrInput `pulumi:"membership"`
}

func (TargetAnthosClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetAnthosCluster)(nil)).Elem()
}

func (i TargetAnthosClusterArgs) ToTargetAnthosClusterOutput() TargetAnthosClusterOutput {
	return i.ToTargetAnthosClusterOutputWithContext(context.Background())
}

func (i TargetAnthosClusterArgs) ToTargetAnthosClusterOutputWithContext(ctx context.Context) TargetAnthosClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetAnthosClusterOutput)
}

func (i TargetAnthosClusterArgs) ToTargetAnthosClusterPtrOutput() TargetAnthosClusterPtrOutput {
	return i.ToTargetAnthosClusterPtrOutputWithContext(context.Background())
}

func (i TargetAnthosClusterArgs) ToTargetAnthosClusterPtrOutputWithContext(ctx context.Context) TargetAnthosClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetAnthosClusterOutput).ToTargetAnthosClusterPtrOutputWithContext(ctx)
}

// TargetAnthosClusterPtrInput is an input type that accepts TargetAnthosClusterArgs, TargetAnthosClusterPtr and TargetAnthosClusterPtrOutput values.
// You can construct a concrete instance of `TargetAnthosClusterPtrInput` via:
//
//	        TargetAnthosClusterArgs{...}
//
//	or:
//
//	        nil
type TargetAnthosClusterPtrInput interface {
	pulumi.Input

	ToTargetAnthosClusterPtrOutput() TargetAnthosClusterPtrOutput
	ToTargetAnthosClusterPtrOutputWithContext(context.Context) TargetAnthosClusterPtrOutput
}

type targetAnthosClusterPtrType TargetAnthosClusterArgs

func TargetAnthosClusterPtr(v *TargetAnthosClusterArgs) TargetAnthosClusterPtrInput {
	return (*targetAnthosClusterPtrType)(v)
}

func (*targetAnthosClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetAnthosCluster)(nil)).Elem()
}

func (i *targetAnthosClusterPtrType) ToTargetAnthosClusterPtrOutput() TargetAnthosClusterPtrOutput {
	return i.ToTargetAnthosClusterPtrOutputWithContext(context.Background())
}

func (i *targetAnthosClusterPtrType) ToTargetAnthosClusterPtrOutputWithContext(ctx context.Context) TargetAnthosClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetAnthosClusterPtrOutput)
}

type TargetAnthosClusterOutput struct{ *pulumi.OutputState }

func (TargetAnthosClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetAnthosCluster)(nil)).Elem()
}

func (o TargetAnthosClusterOutput) ToTargetAnthosClusterOutput() TargetAnthosClusterOutput {
	return o
}

func (o TargetAnthosClusterOutput) ToTargetAnthosClusterOutputWithContext(ctx context.Context) TargetAnthosClusterOutput {
	return o
}

func (o TargetAnthosClusterOutput) ToTargetAnthosClusterPtrOutput() TargetAnthosClusterPtrOutput {
	return o.ToTargetAnthosClusterPtrOutputWithContext(context.Background())
}

func (o TargetAnthosClusterOutput) ToTargetAnthosClusterPtrOutputWithContext(ctx context.Context) TargetAnthosClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetAnthosCluster) *TargetAnthosCluster {
		return &v
	}).(TargetAnthosClusterPtrOutput)
}

// Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.
func (o TargetAnthosClusterOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetAnthosCluster) *string { return v.Membership }).(pulumi.StringPtrOutput)
}

type TargetAnthosClusterPtrOutput struct{ *pulumi.OutputState }

func (TargetAnthosClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetAnthosCluster)(nil)).Elem()
}

func (o TargetAnthosClusterPtrOutput) ToTargetAnthosClusterPtrOutput() TargetAnthosClusterPtrOutput {
	return o
}

func (o TargetAnthosClusterPtrOutput) ToTargetAnthosClusterPtrOutputWithContext(ctx context.Context) TargetAnthosClusterPtrOutput {
	return o
}

func (o TargetAnthosClusterPtrOutput) Elem() TargetAnthosClusterOutput {
	return o.ApplyT(func(v *TargetAnthosCluster) TargetAnthosCluster {
		if v != nil {
			return *v
		}
		var ret TargetAnthosCluster
		return ret
	}).(TargetAnthosClusterOutput)
}

// Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.
func (o TargetAnthosClusterPtrOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetAnthosCluster) *string {
		if v == nil {
			return nil
		}
		return v.Membership
	}).(pulumi.StringPtrOutput)
}

type TargetExecutionConfig struct {
	// Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
	ArtifactStorage *string `pulumi:"artifactStorage"`
	// Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Required. Usages when this configuration should be applied.
	Usages []string `pulumi:"usages"`
	// Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
	WorkerPool *string `pulumi:"workerPool"`
}

// TargetExecutionConfigInput is an input type that accepts TargetExecutionConfigArgs and TargetExecutionConfigOutput values.
// You can construct a concrete instance of `TargetExecutionConfigInput` via:
//
//	TargetExecutionConfigArgs{...}
type TargetExecutionConfigInput interface {
	pulumi.Input

	ToTargetExecutionConfigOutput() TargetExecutionConfigOutput
	ToTargetExecutionConfigOutputWithContext(context.Context) TargetExecutionConfigOutput
}

type TargetExecutionConfigArgs struct {
	// Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
	ArtifactStorage pulumi.StringPtrInput `pulumi:"artifactStorage"`
	// Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Required. Usages when this configuration should be applied.
	Usages pulumi.StringArrayInput `pulumi:"usages"`
	// Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
	WorkerPool pulumi.StringPtrInput `pulumi:"workerPool"`
}

func (TargetExecutionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetExecutionConfig)(nil)).Elem()
}

func (i TargetExecutionConfigArgs) ToTargetExecutionConfigOutput() TargetExecutionConfigOutput {
	return i.ToTargetExecutionConfigOutputWithContext(context.Background())
}

func (i TargetExecutionConfigArgs) ToTargetExecutionConfigOutputWithContext(ctx context.Context) TargetExecutionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetExecutionConfigOutput)
}

// TargetExecutionConfigArrayInput is an input type that accepts TargetExecutionConfigArray and TargetExecutionConfigArrayOutput values.
// You can construct a concrete instance of `TargetExecutionConfigArrayInput` via:
//
//	TargetExecutionConfigArray{ TargetExecutionConfigArgs{...} }
type TargetExecutionConfigArrayInput interface {
	pulumi.Input

	ToTargetExecutionConfigArrayOutput() TargetExecutionConfigArrayOutput
	ToTargetExecutionConfigArrayOutputWithContext(context.Context) TargetExecutionConfigArrayOutput
}

type TargetExecutionConfigArray []TargetExecutionConfigInput

func (TargetExecutionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetExecutionConfig)(nil)).Elem()
}

func (i TargetExecutionConfigArray) ToTargetExecutionConfigArrayOutput() TargetExecutionConfigArrayOutput {
	return i.ToTargetExecutionConfigArrayOutputWithContext(context.Background())
}

func (i TargetExecutionConfigArray) ToTargetExecutionConfigArrayOutputWithContext(ctx context.Context) TargetExecutionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetExecutionConfigArrayOutput)
}

type TargetExecutionConfigOutput struct{ *pulumi.OutputState }

func (TargetExecutionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetExecutionConfig)(nil)).Elem()
}

func (o TargetExecutionConfigOutput) ToTargetExecutionConfigOutput() TargetExecutionConfigOutput {
	return o
}

func (o TargetExecutionConfigOutput) ToTargetExecutionConfigOutputWithContext(ctx context.Context) TargetExecutionConfigOutput {
	return o
}

// Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
func (o TargetExecutionConfigOutput) ArtifactStorage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetExecutionConfig) *string { return v.ArtifactStorage }).(pulumi.StringPtrOutput)
}

// Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
func (o TargetExecutionConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetExecutionConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Required. Usages when this configuration should be applied.
func (o TargetExecutionConfigOutput) Usages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetExecutionConfig) []string { return v.Usages }).(pulumi.StringArrayOutput)
}

// Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
func (o TargetExecutionConfigOutput) WorkerPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetExecutionConfig) *string { return v.WorkerPool }).(pulumi.StringPtrOutput)
}

type TargetExecutionConfigArrayOutput struct{ *pulumi.OutputState }

func (TargetExecutionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetExecutionConfig)(nil)).Elem()
}

func (o TargetExecutionConfigArrayOutput) ToTargetExecutionConfigArrayOutput() TargetExecutionConfigArrayOutput {
	return o
}

func (o TargetExecutionConfigArrayOutput) ToTargetExecutionConfigArrayOutputWithContext(ctx context.Context) TargetExecutionConfigArrayOutput {
	return o
}

func (o TargetExecutionConfigArrayOutput) Index(i pulumi.IntInput) TargetExecutionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetExecutionConfig {
		return vs[0].([]TargetExecutionConfig)[vs[1].(int)]
	}).(TargetExecutionConfigOutput)
}

type TargetGke struct {
	// Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}.
	Cluster *string `pulumi:"cluster"`
	// Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
	InternalIp *bool `pulumi:"internalIp"`
}

// TargetGkeInput is an input type that accepts TargetGkeArgs and TargetGkeOutput values.
// You can construct a concrete instance of `TargetGkeInput` via:
//
//	TargetGkeArgs{...}
type TargetGkeInput interface {
	pulumi.Input

	ToTargetGkeOutput() TargetGkeOutput
	ToTargetGkeOutputWithContext(context.Context) TargetGkeOutput
}

type TargetGkeArgs struct {
	// Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}.
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
	InternalIp pulumi.BoolPtrInput `pulumi:"internalIp"`
}

func (TargetGkeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGke)(nil)).Elem()
}

func (i TargetGkeArgs) ToTargetGkeOutput() TargetGkeOutput {
	return i.ToTargetGkeOutputWithContext(context.Background())
}

func (i TargetGkeArgs) ToTargetGkeOutputWithContext(ctx context.Context) TargetGkeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGkeOutput)
}

func (i TargetGkeArgs) ToTargetGkePtrOutput() TargetGkePtrOutput {
	return i.ToTargetGkePtrOutputWithContext(context.Background())
}

func (i TargetGkeArgs) ToTargetGkePtrOutputWithContext(ctx context.Context) TargetGkePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGkeOutput).ToTargetGkePtrOutputWithContext(ctx)
}

// TargetGkePtrInput is an input type that accepts TargetGkeArgs, TargetGkePtr and TargetGkePtrOutput values.
// You can construct a concrete instance of `TargetGkePtrInput` via:
//
//	        TargetGkeArgs{...}
//
//	or:
//
//	        nil
type TargetGkePtrInput interface {
	pulumi.Input

	ToTargetGkePtrOutput() TargetGkePtrOutput
	ToTargetGkePtrOutputWithContext(context.Context) TargetGkePtrOutput
}

type targetGkePtrType TargetGkeArgs

func TargetGkePtr(v *TargetGkeArgs) TargetGkePtrInput {
	return (*targetGkePtrType)(v)
}

func (*targetGkePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGke)(nil)).Elem()
}

func (i *targetGkePtrType) ToTargetGkePtrOutput() TargetGkePtrOutput {
	return i.ToTargetGkePtrOutputWithContext(context.Background())
}

func (i *targetGkePtrType) ToTargetGkePtrOutputWithContext(ctx context.Context) TargetGkePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGkePtrOutput)
}

type TargetGkeOutput struct{ *pulumi.OutputState }

func (TargetGkeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGke)(nil)).Elem()
}

func (o TargetGkeOutput) ToTargetGkeOutput() TargetGkeOutput {
	return o
}

func (o TargetGkeOutput) ToTargetGkeOutputWithContext(ctx context.Context) TargetGkeOutput {
	return o
}

func (o TargetGkeOutput) ToTargetGkePtrOutput() TargetGkePtrOutput {
	return o.ToTargetGkePtrOutputWithContext(context.Background())
}

func (o TargetGkeOutput) ToTargetGkePtrOutputWithContext(ctx context.Context) TargetGkePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetGke) *TargetGke {
		return &v
	}).(TargetGkePtrOutput)
}

// Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}.
func (o TargetGkeOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGke) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
func (o TargetGkeOutput) InternalIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGke) *bool { return v.InternalIp }).(pulumi.BoolPtrOutput)
}

type TargetGkePtrOutput struct{ *pulumi.OutputState }

func (TargetGkePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGke)(nil)).Elem()
}

func (o TargetGkePtrOutput) ToTargetGkePtrOutput() TargetGkePtrOutput {
	return o
}

func (o TargetGkePtrOutput) ToTargetGkePtrOutputWithContext(ctx context.Context) TargetGkePtrOutput {
	return o
}

func (o TargetGkePtrOutput) Elem() TargetGkeOutput {
	return o.ApplyT(func(v *TargetGke) TargetGke {
		if v != nil {
			return *v
		}
		var ret TargetGke
		return ret
	}).(TargetGkeOutput)
}

// Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}.
func (o TargetGkePtrOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGke) *string {
		if v == nil {
			return nil
		}
		return v.Cluster
	}).(pulumi.StringPtrOutput)
}

// Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
func (o TargetGkePtrOutput) InternalIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetGke) *bool {
		if v == nil {
			return nil
		}
		return v.InternalIp
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineConditionInput)(nil)).Elem(), DeliveryPipelineConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineConditionArrayInput)(nil)).Elem(), DeliveryPipelineConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineConditionPipelineReadyConditionInput)(nil)).Elem(), DeliveryPipelineConditionPipelineReadyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineConditionPipelineReadyConditionArrayInput)(nil)).Elem(), DeliveryPipelineConditionPipelineReadyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineConditionTargetsPresentConditionInput)(nil)).Elem(), DeliveryPipelineConditionTargetsPresentConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineConditionTargetsPresentConditionArrayInput)(nil)).Elem(), DeliveryPipelineConditionTargetsPresentConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineSerialPipelineInput)(nil)).Elem(), DeliveryPipelineSerialPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineSerialPipelinePtrInput)(nil)).Elem(), DeliveryPipelineSerialPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineSerialPipelineStageInput)(nil)).Elem(), DeliveryPipelineSerialPipelineStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineSerialPipelineStageArrayInput)(nil)).Elem(), DeliveryPipelineSerialPipelineStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetAnthosClusterInput)(nil)).Elem(), TargetAnthosClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetAnthosClusterPtrInput)(nil)).Elem(), TargetAnthosClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetExecutionConfigInput)(nil)).Elem(), TargetExecutionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetExecutionConfigArrayInput)(nil)).Elem(), TargetExecutionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGkeInput)(nil)).Elem(), TargetGkeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGkePtrInput)(nil)).Elem(), TargetGkeArgs{})
	pulumi.RegisterOutputType(DeliveryPipelineConditionOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineConditionArrayOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineConditionPipelineReadyConditionOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineConditionPipelineReadyConditionArrayOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineConditionTargetsPresentConditionOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineConditionTargetsPresentConditionArrayOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineSerialPipelineOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineSerialPipelinePtrOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineSerialPipelineStageOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineSerialPipelineStageArrayOutput{})
	pulumi.RegisterOutputType(TargetAnthosClusterOutput{})
	pulumi.RegisterOutputType(TargetAnthosClusterPtrOutput{})
	pulumi.RegisterOutputType(TargetExecutionConfigOutput{})
	pulumi.RegisterOutputType(TargetExecutionConfigArrayOutput{})
	pulumi.RegisterOutputType(TargetGkeOutput{})
	pulumi.RegisterOutputType(TargetGkePtrOutput{})
}
