// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clouddeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeliveryPipelineIamMember struct {
	pulumi.CustomResourceState

	Condition DeliveryPipelineIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag      pulumi.StringOutput                         `pulumi:"etag"`
	Location  pulumi.StringOutput                         `pulumi:"location"`
	Member    pulumi.StringOutput                         `pulumi:"member"`
	Name      pulumi.StringOutput                         `pulumi:"name"`
	Project   pulumi.StringOutput                         `pulumi:"project"`
	Role      pulumi.StringOutput                         `pulumi:"role"`
}

// NewDeliveryPipelineIamMember registers a new resource with the given unique name, arguments, and options.
func NewDeliveryPipelineIamMember(ctx *pulumi.Context,
	name string, args *DeliveryPipelineIamMemberArgs, opts ...pulumi.ResourceOption) (*DeliveryPipelineIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeliveryPipelineIamMember
	err := ctx.RegisterResource("gcp:clouddeploy/deliveryPipelineIamMember:DeliveryPipelineIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeliveryPipelineIamMember gets an existing DeliveryPipelineIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeliveryPipelineIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeliveryPipelineIamMemberState, opts ...pulumi.ResourceOption) (*DeliveryPipelineIamMember, error) {
	var resource DeliveryPipelineIamMember
	err := ctx.ReadResource("gcp:clouddeploy/deliveryPipelineIamMember:DeliveryPipelineIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeliveryPipelineIamMember resources.
type deliveryPipelineIamMemberState struct {
	Condition *DeliveryPipelineIamMemberCondition `pulumi:"condition"`
	Etag      *string                             `pulumi:"etag"`
	Location  *string                             `pulumi:"location"`
	Member    *string                             `pulumi:"member"`
	Name      *string                             `pulumi:"name"`
	Project   *string                             `pulumi:"project"`
	Role      *string                             `pulumi:"role"`
}

type DeliveryPipelineIamMemberState struct {
	Condition DeliveryPipelineIamMemberConditionPtrInput
	Etag      pulumi.StringPtrInput
	Location  pulumi.StringPtrInput
	Member    pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringPtrInput
}

func (DeliveryPipelineIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryPipelineIamMemberState)(nil)).Elem()
}

type deliveryPipelineIamMemberArgs struct {
	Condition *DeliveryPipelineIamMemberCondition `pulumi:"condition"`
	Location  *string                             `pulumi:"location"`
	Member    string                              `pulumi:"member"`
	Name      *string                             `pulumi:"name"`
	Project   *string                             `pulumi:"project"`
	Role      string                              `pulumi:"role"`
}

// The set of arguments for constructing a DeliveryPipelineIamMember resource.
type DeliveryPipelineIamMemberArgs struct {
	Condition DeliveryPipelineIamMemberConditionPtrInput
	Location  pulumi.StringPtrInput
	Member    pulumi.StringInput
	Name      pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringInput
}

func (DeliveryPipelineIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryPipelineIamMemberArgs)(nil)).Elem()
}

type DeliveryPipelineIamMemberInput interface {
	pulumi.Input

	ToDeliveryPipelineIamMemberOutput() DeliveryPipelineIamMemberOutput
	ToDeliveryPipelineIamMemberOutputWithContext(ctx context.Context) DeliveryPipelineIamMemberOutput
}

func (*DeliveryPipelineIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryPipelineIamMember)(nil)).Elem()
}

func (i *DeliveryPipelineIamMember) ToDeliveryPipelineIamMemberOutput() DeliveryPipelineIamMemberOutput {
	return i.ToDeliveryPipelineIamMemberOutputWithContext(context.Background())
}

func (i *DeliveryPipelineIamMember) ToDeliveryPipelineIamMemberOutputWithContext(ctx context.Context) DeliveryPipelineIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineIamMemberOutput)
}

// DeliveryPipelineIamMemberArrayInput is an input type that accepts DeliveryPipelineIamMemberArray and DeliveryPipelineIamMemberArrayOutput values.
// You can construct a concrete instance of `DeliveryPipelineIamMemberArrayInput` via:
//
//	DeliveryPipelineIamMemberArray{ DeliveryPipelineIamMemberArgs{...} }
type DeliveryPipelineIamMemberArrayInput interface {
	pulumi.Input

	ToDeliveryPipelineIamMemberArrayOutput() DeliveryPipelineIamMemberArrayOutput
	ToDeliveryPipelineIamMemberArrayOutputWithContext(context.Context) DeliveryPipelineIamMemberArrayOutput
}

type DeliveryPipelineIamMemberArray []DeliveryPipelineIamMemberInput

func (DeliveryPipelineIamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryPipelineIamMember)(nil)).Elem()
}

func (i DeliveryPipelineIamMemberArray) ToDeliveryPipelineIamMemberArrayOutput() DeliveryPipelineIamMemberArrayOutput {
	return i.ToDeliveryPipelineIamMemberArrayOutputWithContext(context.Background())
}

func (i DeliveryPipelineIamMemberArray) ToDeliveryPipelineIamMemberArrayOutputWithContext(ctx context.Context) DeliveryPipelineIamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineIamMemberArrayOutput)
}

// DeliveryPipelineIamMemberMapInput is an input type that accepts DeliveryPipelineIamMemberMap and DeliveryPipelineIamMemberMapOutput values.
// You can construct a concrete instance of `DeliveryPipelineIamMemberMapInput` via:
//
//	DeliveryPipelineIamMemberMap{ "key": DeliveryPipelineIamMemberArgs{...} }
type DeliveryPipelineIamMemberMapInput interface {
	pulumi.Input

	ToDeliveryPipelineIamMemberMapOutput() DeliveryPipelineIamMemberMapOutput
	ToDeliveryPipelineIamMemberMapOutputWithContext(context.Context) DeliveryPipelineIamMemberMapOutput
}

type DeliveryPipelineIamMemberMap map[string]DeliveryPipelineIamMemberInput

func (DeliveryPipelineIamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryPipelineIamMember)(nil)).Elem()
}

func (i DeliveryPipelineIamMemberMap) ToDeliveryPipelineIamMemberMapOutput() DeliveryPipelineIamMemberMapOutput {
	return i.ToDeliveryPipelineIamMemberMapOutputWithContext(context.Background())
}

func (i DeliveryPipelineIamMemberMap) ToDeliveryPipelineIamMemberMapOutputWithContext(ctx context.Context) DeliveryPipelineIamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineIamMemberMapOutput)
}

type DeliveryPipelineIamMemberOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryPipelineIamMember)(nil)).Elem()
}

func (o DeliveryPipelineIamMemberOutput) ToDeliveryPipelineIamMemberOutput() DeliveryPipelineIamMemberOutput {
	return o
}

func (o DeliveryPipelineIamMemberOutput) ToDeliveryPipelineIamMemberOutputWithContext(ctx context.Context) DeliveryPipelineIamMemberOutput {
	return o
}

func (o DeliveryPipelineIamMemberOutput) Condition() DeliveryPipelineIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamMember) DeliveryPipelineIamMemberConditionPtrOutput { return v.Condition }).(DeliveryPipelineIamMemberConditionPtrOutput)
}

func (o DeliveryPipelineIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type DeliveryPipelineIamMemberArrayOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineIamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryPipelineIamMember)(nil)).Elem()
}

func (o DeliveryPipelineIamMemberArrayOutput) ToDeliveryPipelineIamMemberArrayOutput() DeliveryPipelineIamMemberArrayOutput {
	return o
}

func (o DeliveryPipelineIamMemberArrayOutput) ToDeliveryPipelineIamMemberArrayOutputWithContext(ctx context.Context) DeliveryPipelineIamMemberArrayOutput {
	return o
}

func (o DeliveryPipelineIamMemberArrayOutput) Index(i pulumi.IntInput) DeliveryPipelineIamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeliveryPipelineIamMember {
		return vs[0].([]*DeliveryPipelineIamMember)[vs[1].(int)]
	}).(DeliveryPipelineIamMemberOutput)
}

type DeliveryPipelineIamMemberMapOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineIamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryPipelineIamMember)(nil)).Elem()
}

func (o DeliveryPipelineIamMemberMapOutput) ToDeliveryPipelineIamMemberMapOutput() DeliveryPipelineIamMemberMapOutput {
	return o
}

func (o DeliveryPipelineIamMemberMapOutput) ToDeliveryPipelineIamMemberMapOutputWithContext(ctx context.Context) DeliveryPipelineIamMemberMapOutput {
	return o
}

func (o DeliveryPipelineIamMemberMapOutput) MapIndex(k pulumi.StringInput) DeliveryPipelineIamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeliveryPipelineIamMember {
		return vs[0].(map[string]*DeliveryPipelineIamMember)[vs[1].(string)]
	}).(DeliveryPipelineIamMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineIamMemberInput)(nil)).Elem(), &DeliveryPipelineIamMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineIamMemberArrayInput)(nil)).Elem(), DeliveryPipelineIamMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineIamMemberMapInput)(nil)).Elem(), DeliveryPipelineIamMemberMap{})
	pulumi.RegisterOutputType(DeliveryPipelineIamMemberOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineIamMemberArrayOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineIamMemberMapOutput{})
}
