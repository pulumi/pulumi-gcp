// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clouddeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeliveryPipelineIamBinding struct {
	pulumi.CustomResourceState

	Condition DeliveryPipelineIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag      pulumi.StringOutput                          `pulumi:"etag"`
	Location  pulumi.StringOutput                          `pulumi:"location"`
	Members   pulumi.StringArrayOutput                     `pulumi:"members"`
	Name      pulumi.StringOutput                          `pulumi:"name"`
	Project   pulumi.StringOutput                          `pulumi:"project"`
	Role      pulumi.StringOutput                          `pulumi:"role"`
}

// NewDeliveryPipelineIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDeliveryPipelineIamBinding(ctx *pulumi.Context,
	name string, args *DeliveryPipelineIamBindingArgs, opts ...pulumi.ResourceOption) (*DeliveryPipelineIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeliveryPipelineIamBinding
	err := ctx.RegisterResource("gcp:clouddeploy/deliveryPipelineIamBinding:DeliveryPipelineIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeliveryPipelineIamBinding gets an existing DeliveryPipelineIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeliveryPipelineIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeliveryPipelineIamBindingState, opts ...pulumi.ResourceOption) (*DeliveryPipelineIamBinding, error) {
	var resource DeliveryPipelineIamBinding
	err := ctx.ReadResource("gcp:clouddeploy/deliveryPipelineIamBinding:DeliveryPipelineIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeliveryPipelineIamBinding resources.
type deliveryPipelineIamBindingState struct {
	Condition *DeliveryPipelineIamBindingCondition `pulumi:"condition"`
	Etag      *string                              `pulumi:"etag"`
	Location  *string                              `pulumi:"location"`
	Members   []string                             `pulumi:"members"`
	Name      *string                              `pulumi:"name"`
	Project   *string                              `pulumi:"project"`
	Role      *string                              `pulumi:"role"`
}

type DeliveryPipelineIamBindingState struct {
	Condition DeliveryPipelineIamBindingConditionPtrInput
	Etag      pulumi.StringPtrInput
	Location  pulumi.StringPtrInput
	Members   pulumi.StringArrayInput
	Name      pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringPtrInput
}

func (DeliveryPipelineIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryPipelineIamBindingState)(nil)).Elem()
}

type deliveryPipelineIamBindingArgs struct {
	Condition *DeliveryPipelineIamBindingCondition `pulumi:"condition"`
	Location  *string                              `pulumi:"location"`
	Members   []string                             `pulumi:"members"`
	Name      *string                              `pulumi:"name"`
	Project   *string                              `pulumi:"project"`
	Role      string                               `pulumi:"role"`
}

// The set of arguments for constructing a DeliveryPipelineIamBinding resource.
type DeliveryPipelineIamBindingArgs struct {
	Condition DeliveryPipelineIamBindingConditionPtrInput
	Location  pulumi.StringPtrInput
	Members   pulumi.StringArrayInput
	Name      pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringInput
}

func (DeliveryPipelineIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryPipelineIamBindingArgs)(nil)).Elem()
}

type DeliveryPipelineIamBindingInput interface {
	pulumi.Input

	ToDeliveryPipelineIamBindingOutput() DeliveryPipelineIamBindingOutput
	ToDeliveryPipelineIamBindingOutputWithContext(ctx context.Context) DeliveryPipelineIamBindingOutput
}

func (*DeliveryPipelineIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryPipelineIamBinding)(nil)).Elem()
}

func (i *DeliveryPipelineIamBinding) ToDeliveryPipelineIamBindingOutput() DeliveryPipelineIamBindingOutput {
	return i.ToDeliveryPipelineIamBindingOutputWithContext(context.Background())
}

func (i *DeliveryPipelineIamBinding) ToDeliveryPipelineIamBindingOutputWithContext(ctx context.Context) DeliveryPipelineIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineIamBindingOutput)
}

// DeliveryPipelineIamBindingArrayInput is an input type that accepts DeliveryPipelineIamBindingArray and DeliveryPipelineIamBindingArrayOutput values.
// You can construct a concrete instance of `DeliveryPipelineIamBindingArrayInput` via:
//
//	DeliveryPipelineIamBindingArray{ DeliveryPipelineIamBindingArgs{...} }
type DeliveryPipelineIamBindingArrayInput interface {
	pulumi.Input

	ToDeliveryPipelineIamBindingArrayOutput() DeliveryPipelineIamBindingArrayOutput
	ToDeliveryPipelineIamBindingArrayOutputWithContext(context.Context) DeliveryPipelineIamBindingArrayOutput
}

type DeliveryPipelineIamBindingArray []DeliveryPipelineIamBindingInput

func (DeliveryPipelineIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryPipelineIamBinding)(nil)).Elem()
}

func (i DeliveryPipelineIamBindingArray) ToDeliveryPipelineIamBindingArrayOutput() DeliveryPipelineIamBindingArrayOutput {
	return i.ToDeliveryPipelineIamBindingArrayOutputWithContext(context.Background())
}

func (i DeliveryPipelineIamBindingArray) ToDeliveryPipelineIamBindingArrayOutputWithContext(ctx context.Context) DeliveryPipelineIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineIamBindingArrayOutput)
}

// DeliveryPipelineIamBindingMapInput is an input type that accepts DeliveryPipelineIamBindingMap and DeliveryPipelineIamBindingMapOutput values.
// You can construct a concrete instance of `DeliveryPipelineIamBindingMapInput` via:
//
//	DeliveryPipelineIamBindingMap{ "key": DeliveryPipelineIamBindingArgs{...} }
type DeliveryPipelineIamBindingMapInput interface {
	pulumi.Input

	ToDeliveryPipelineIamBindingMapOutput() DeliveryPipelineIamBindingMapOutput
	ToDeliveryPipelineIamBindingMapOutputWithContext(context.Context) DeliveryPipelineIamBindingMapOutput
}

type DeliveryPipelineIamBindingMap map[string]DeliveryPipelineIamBindingInput

func (DeliveryPipelineIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryPipelineIamBinding)(nil)).Elem()
}

func (i DeliveryPipelineIamBindingMap) ToDeliveryPipelineIamBindingMapOutput() DeliveryPipelineIamBindingMapOutput {
	return i.ToDeliveryPipelineIamBindingMapOutputWithContext(context.Background())
}

func (i DeliveryPipelineIamBindingMap) ToDeliveryPipelineIamBindingMapOutputWithContext(ctx context.Context) DeliveryPipelineIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineIamBindingMapOutput)
}

type DeliveryPipelineIamBindingOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryPipelineIamBinding)(nil)).Elem()
}

func (o DeliveryPipelineIamBindingOutput) ToDeliveryPipelineIamBindingOutput() DeliveryPipelineIamBindingOutput {
	return o
}

func (o DeliveryPipelineIamBindingOutput) ToDeliveryPipelineIamBindingOutputWithContext(ctx context.Context) DeliveryPipelineIamBindingOutput {
	return o
}

func (o DeliveryPipelineIamBindingOutput) Condition() DeliveryPipelineIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamBinding) DeliveryPipelineIamBindingConditionPtrOutput { return v.Condition }).(DeliveryPipelineIamBindingConditionPtrOutput)
}

func (o DeliveryPipelineIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DeliveryPipelineIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type DeliveryPipelineIamBindingArrayOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryPipelineIamBinding)(nil)).Elem()
}

func (o DeliveryPipelineIamBindingArrayOutput) ToDeliveryPipelineIamBindingArrayOutput() DeliveryPipelineIamBindingArrayOutput {
	return o
}

func (o DeliveryPipelineIamBindingArrayOutput) ToDeliveryPipelineIamBindingArrayOutputWithContext(ctx context.Context) DeliveryPipelineIamBindingArrayOutput {
	return o
}

func (o DeliveryPipelineIamBindingArrayOutput) Index(i pulumi.IntInput) DeliveryPipelineIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeliveryPipelineIamBinding {
		return vs[0].([]*DeliveryPipelineIamBinding)[vs[1].(int)]
	}).(DeliveryPipelineIamBindingOutput)
}

type DeliveryPipelineIamBindingMapOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryPipelineIamBinding)(nil)).Elem()
}

func (o DeliveryPipelineIamBindingMapOutput) ToDeliveryPipelineIamBindingMapOutput() DeliveryPipelineIamBindingMapOutput {
	return o
}

func (o DeliveryPipelineIamBindingMapOutput) ToDeliveryPipelineIamBindingMapOutputWithContext(ctx context.Context) DeliveryPipelineIamBindingMapOutput {
	return o
}

func (o DeliveryPipelineIamBindingMapOutput) MapIndex(k pulumi.StringInput) DeliveryPipelineIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeliveryPipelineIamBinding {
		return vs[0].(map[string]*DeliveryPipelineIamBinding)[vs[1].(string)]
	}).(DeliveryPipelineIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineIamBindingInput)(nil)).Elem(), &DeliveryPipelineIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineIamBindingArrayInput)(nil)).Elem(), DeliveryPipelineIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineIamBindingMapInput)(nil)).Elem(), DeliveryPipelineIamBindingMap{})
	pulumi.RegisterOutputType(DeliveryPipelineIamBindingOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineIamBindingArrayOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineIamBindingMapOutput{})
}
