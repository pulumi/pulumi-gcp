// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clouddeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CustomTargetTypeIamPolicy struct {
	pulumi.CustomResourceState

	Etag       pulumi.StringOutput `pulumi:"etag"`
	Location   pulumi.StringOutput `pulumi:"location"`
	Name       pulumi.StringOutput `pulumi:"name"`
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	Project    pulumi.StringOutput `pulumi:"project"`
}

// NewCustomTargetTypeIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewCustomTargetTypeIamPolicy(ctx *pulumi.Context,
	name string, args *CustomTargetTypeIamPolicyArgs, opts ...pulumi.ResourceOption) (*CustomTargetTypeIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomTargetTypeIamPolicy
	err := ctx.RegisterResource("gcp:clouddeploy/customTargetTypeIamPolicy:CustomTargetTypeIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomTargetTypeIamPolicy gets an existing CustomTargetTypeIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomTargetTypeIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomTargetTypeIamPolicyState, opts ...pulumi.ResourceOption) (*CustomTargetTypeIamPolicy, error) {
	var resource CustomTargetTypeIamPolicy
	err := ctx.ReadResource("gcp:clouddeploy/customTargetTypeIamPolicy:CustomTargetTypeIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomTargetTypeIamPolicy resources.
type customTargetTypeIamPolicyState struct {
	Etag       *string `pulumi:"etag"`
	Location   *string `pulumi:"location"`
	Name       *string `pulumi:"name"`
	PolicyData *string `pulumi:"policyData"`
	Project    *string `pulumi:"project"`
}

type CustomTargetTypeIamPolicyState struct {
	Etag       pulumi.StringPtrInput
	Location   pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	PolicyData pulumi.StringPtrInput
	Project    pulumi.StringPtrInput
}

func (CustomTargetTypeIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*customTargetTypeIamPolicyState)(nil)).Elem()
}

type customTargetTypeIamPolicyArgs struct {
	Location   *string `pulumi:"location"`
	Name       *string `pulumi:"name"`
	PolicyData string  `pulumi:"policyData"`
	Project    *string `pulumi:"project"`
}

// The set of arguments for constructing a CustomTargetTypeIamPolicy resource.
type CustomTargetTypeIamPolicyArgs struct {
	Location   pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	PolicyData pulumi.StringInput
	Project    pulumi.StringPtrInput
}

func (CustomTargetTypeIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customTargetTypeIamPolicyArgs)(nil)).Elem()
}

type CustomTargetTypeIamPolicyInput interface {
	pulumi.Input

	ToCustomTargetTypeIamPolicyOutput() CustomTargetTypeIamPolicyOutput
	ToCustomTargetTypeIamPolicyOutputWithContext(ctx context.Context) CustomTargetTypeIamPolicyOutput
}

func (*CustomTargetTypeIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomTargetTypeIamPolicy)(nil)).Elem()
}

func (i *CustomTargetTypeIamPolicy) ToCustomTargetTypeIamPolicyOutput() CustomTargetTypeIamPolicyOutput {
	return i.ToCustomTargetTypeIamPolicyOutputWithContext(context.Background())
}

func (i *CustomTargetTypeIamPolicy) ToCustomTargetTypeIamPolicyOutputWithContext(ctx context.Context) CustomTargetTypeIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTargetTypeIamPolicyOutput)
}

// CustomTargetTypeIamPolicyArrayInput is an input type that accepts CustomTargetTypeIamPolicyArray and CustomTargetTypeIamPolicyArrayOutput values.
// You can construct a concrete instance of `CustomTargetTypeIamPolicyArrayInput` via:
//
//	CustomTargetTypeIamPolicyArray{ CustomTargetTypeIamPolicyArgs{...} }
type CustomTargetTypeIamPolicyArrayInput interface {
	pulumi.Input

	ToCustomTargetTypeIamPolicyArrayOutput() CustomTargetTypeIamPolicyArrayOutput
	ToCustomTargetTypeIamPolicyArrayOutputWithContext(context.Context) CustomTargetTypeIamPolicyArrayOutput
}

type CustomTargetTypeIamPolicyArray []CustomTargetTypeIamPolicyInput

func (CustomTargetTypeIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomTargetTypeIamPolicy)(nil)).Elem()
}

func (i CustomTargetTypeIamPolicyArray) ToCustomTargetTypeIamPolicyArrayOutput() CustomTargetTypeIamPolicyArrayOutput {
	return i.ToCustomTargetTypeIamPolicyArrayOutputWithContext(context.Background())
}

func (i CustomTargetTypeIamPolicyArray) ToCustomTargetTypeIamPolicyArrayOutputWithContext(ctx context.Context) CustomTargetTypeIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTargetTypeIamPolicyArrayOutput)
}

// CustomTargetTypeIamPolicyMapInput is an input type that accepts CustomTargetTypeIamPolicyMap and CustomTargetTypeIamPolicyMapOutput values.
// You can construct a concrete instance of `CustomTargetTypeIamPolicyMapInput` via:
//
//	CustomTargetTypeIamPolicyMap{ "key": CustomTargetTypeIamPolicyArgs{...} }
type CustomTargetTypeIamPolicyMapInput interface {
	pulumi.Input

	ToCustomTargetTypeIamPolicyMapOutput() CustomTargetTypeIamPolicyMapOutput
	ToCustomTargetTypeIamPolicyMapOutputWithContext(context.Context) CustomTargetTypeIamPolicyMapOutput
}

type CustomTargetTypeIamPolicyMap map[string]CustomTargetTypeIamPolicyInput

func (CustomTargetTypeIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomTargetTypeIamPolicy)(nil)).Elem()
}

func (i CustomTargetTypeIamPolicyMap) ToCustomTargetTypeIamPolicyMapOutput() CustomTargetTypeIamPolicyMapOutput {
	return i.ToCustomTargetTypeIamPolicyMapOutputWithContext(context.Background())
}

func (i CustomTargetTypeIamPolicyMap) ToCustomTargetTypeIamPolicyMapOutputWithContext(ctx context.Context) CustomTargetTypeIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTargetTypeIamPolicyMapOutput)
}

type CustomTargetTypeIamPolicyOutput struct{ *pulumi.OutputState }

func (CustomTargetTypeIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomTargetTypeIamPolicy)(nil)).Elem()
}

func (o CustomTargetTypeIamPolicyOutput) ToCustomTargetTypeIamPolicyOutput() CustomTargetTypeIamPolicyOutput {
	return o
}

func (o CustomTargetTypeIamPolicyOutput) ToCustomTargetTypeIamPolicyOutputWithContext(ctx context.Context) CustomTargetTypeIamPolicyOutput {
	return o
}

func (o CustomTargetTypeIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetTypeIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o CustomTargetTypeIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetTypeIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o CustomTargetTypeIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetTypeIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CustomTargetTypeIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetTypeIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o CustomTargetTypeIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetTypeIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

type CustomTargetTypeIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (CustomTargetTypeIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomTargetTypeIamPolicy)(nil)).Elem()
}

func (o CustomTargetTypeIamPolicyArrayOutput) ToCustomTargetTypeIamPolicyArrayOutput() CustomTargetTypeIamPolicyArrayOutput {
	return o
}

func (o CustomTargetTypeIamPolicyArrayOutput) ToCustomTargetTypeIamPolicyArrayOutputWithContext(ctx context.Context) CustomTargetTypeIamPolicyArrayOutput {
	return o
}

func (o CustomTargetTypeIamPolicyArrayOutput) Index(i pulumi.IntInput) CustomTargetTypeIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomTargetTypeIamPolicy {
		return vs[0].([]*CustomTargetTypeIamPolicy)[vs[1].(int)]
	}).(CustomTargetTypeIamPolicyOutput)
}

type CustomTargetTypeIamPolicyMapOutput struct{ *pulumi.OutputState }

func (CustomTargetTypeIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomTargetTypeIamPolicy)(nil)).Elem()
}

func (o CustomTargetTypeIamPolicyMapOutput) ToCustomTargetTypeIamPolicyMapOutput() CustomTargetTypeIamPolicyMapOutput {
	return o
}

func (o CustomTargetTypeIamPolicyMapOutput) ToCustomTargetTypeIamPolicyMapOutputWithContext(ctx context.Context) CustomTargetTypeIamPolicyMapOutput {
	return o
}

func (o CustomTargetTypeIamPolicyMapOutput) MapIndex(k pulumi.StringInput) CustomTargetTypeIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomTargetTypeIamPolicy {
		return vs[0].(map[string]*CustomTargetTypeIamPolicy)[vs[1].(string)]
	}).(CustomTargetTypeIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTargetTypeIamPolicyInput)(nil)).Elem(), &CustomTargetTypeIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTargetTypeIamPolicyArrayInput)(nil)).Elem(), CustomTargetTypeIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTargetTypeIamPolicyMapInput)(nil)).Elem(), CustomTargetTypeIamPolicyMap{})
	pulumi.RegisterOutputType(CustomTargetTypeIamPolicyOutput{})
	pulumi.RegisterOutputType(CustomTargetTypeIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(CustomTargetTypeIamPolicyMapOutput{})
}
