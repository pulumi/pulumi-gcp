// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clouddeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeliveryPipelineIamPolicy struct {
	pulumi.CustomResourceState

	Etag       pulumi.StringOutput `pulumi:"etag"`
	Location   pulumi.StringOutput `pulumi:"location"`
	Name       pulumi.StringOutput `pulumi:"name"`
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	Project    pulumi.StringOutput `pulumi:"project"`
}

// NewDeliveryPipelineIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDeliveryPipelineIamPolicy(ctx *pulumi.Context,
	name string, args *DeliveryPipelineIamPolicyArgs, opts ...pulumi.ResourceOption) (*DeliveryPipelineIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeliveryPipelineIamPolicy
	err := ctx.RegisterResource("gcp:clouddeploy/deliveryPipelineIamPolicy:DeliveryPipelineIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeliveryPipelineIamPolicy gets an existing DeliveryPipelineIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeliveryPipelineIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeliveryPipelineIamPolicyState, opts ...pulumi.ResourceOption) (*DeliveryPipelineIamPolicy, error) {
	var resource DeliveryPipelineIamPolicy
	err := ctx.ReadResource("gcp:clouddeploy/deliveryPipelineIamPolicy:DeliveryPipelineIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeliveryPipelineIamPolicy resources.
type deliveryPipelineIamPolicyState struct {
	Etag       *string `pulumi:"etag"`
	Location   *string `pulumi:"location"`
	Name       *string `pulumi:"name"`
	PolicyData *string `pulumi:"policyData"`
	Project    *string `pulumi:"project"`
}

type DeliveryPipelineIamPolicyState struct {
	Etag       pulumi.StringPtrInput
	Location   pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	PolicyData pulumi.StringPtrInput
	Project    pulumi.StringPtrInput
}

func (DeliveryPipelineIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryPipelineIamPolicyState)(nil)).Elem()
}

type deliveryPipelineIamPolicyArgs struct {
	Location   *string `pulumi:"location"`
	Name       *string `pulumi:"name"`
	PolicyData string  `pulumi:"policyData"`
	Project    *string `pulumi:"project"`
}

// The set of arguments for constructing a DeliveryPipelineIamPolicy resource.
type DeliveryPipelineIamPolicyArgs struct {
	Location   pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	PolicyData pulumi.StringInput
	Project    pulumi.StringPtrInput
}

func (DeliveryPipelineIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryPipelineIamPolicyArgs)(nil)).Elem()
}

type DeliveryPipelineIamPolicyInput interface {
	pulumi.Input

	ToDeliveryPipelineIamPolicyOutput() DeliveryPipelineIamPolicyOutput
	ToDeliveryPipelineIamPolicyOutputWithContext(ctx context.Context) DeliveryPipelineIamPolicyOutput
}

func (*DeliveryPipelineIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryPipelineIamPolicy)(nil)).Elem()
}

func (i *DeliveryPipelineIamPolicy) ToDeliveryPipelineIamPolicyOutput() DeliveryPipelineIamPolicyOutput {
	return i.ToDeliveryPipelineIamPolicyOutputWithContext(context.Background())
}

func (i *DeliveryPipelineIamPolicy) ToDeliveryPipelineIamPolicyOutputWithContext(ctx context.Context) DeliveryPipelineIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineIamPolicyOutput)
}

// DeliveryPipelineIamPolicyArrayInput is an input type that accepts DeliveryPipelineIamPolicyArray and DeliveryPipelineIamPolicyArrayOutput values.
// You can construct a concrete instance of `DeliveryPipelineIamPolicyArrayInput` via:
//
//	DeliveryPipelineIamPolicyArray{ DeliveryPipelineIamPolicyArgs{...} }
type DeliveryPipelineIamPolicyArrayInput interface {
	pulumi.Input

	ToDeliveryPipelineIamPolicyArrayOutput() DeliveryPipelineIamPolicyArrayOutput
	ToDeliveryPipelineIamPolicyArrayOutputWithContext(context.Context) DeliveryPipelineIamPolicyArrayOutput
}

type DeliveryPipelineIamPolicyArray []DeliveryPipelineIamPolicyInput

func (DeliveryPipelineIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryPipelineIamPolicy)(nil)).Elem()
}

func (i DeliveryPipelineIamPolicyArray) ToDeliveryPipelineIamPolicyArrayOutput() DeliveryPipelineIamPolicyArrayOutput {
	return i.ToDeliveryPipelineIamPolicyArrayOutputWithContext(context.Background())
}

func (i DeliveryPipelineIamPolicyArray) ToDeliveryPipelineIamPolicyArrayOutputWithContext(ctx context.Context) DeliveryPipelineIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineIamPolicyArrayOutput)
}

// DeliveryPipelineIamPolicyMapInput is an input type that accepts DeliveryPipelineIamPolicyMap and DeliveryPipelineIamPolicyMapOutput values.
// You can construct a concrete instance of `DeliveryPipelineIamPolicyMapInput` via:
//
//	DeliveryPipelineIamPolicyMap{ "key": DeliveryPipelineIamPolicyArgs{...} }
type DeliveryPipelineIamPolicyMapInput interface {
	pulumi.Input

	ToDeliveryPipelineIamPolicyMapOutput() DeliveryPipelineIamPolicyMapOutput
	ToDeliveryPipelineIamPolicyMapOutputWithContext(context.Context) DeliveryPipelineIamPolicyMapOutput
}

type DeliveryPipelineIamPolicyMap map[string]DeliveryPipelineIamPolicyInput

func (DeliveryPipelineIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryPipelineIamPolicy)(nil)).Elem()
}

func (i DeliveryPipelineIamPolicyMap) ToDeliveryPipelineIamPolicyMapOutput() DeliveryPipelineIamPolicyMapOutput {
	return i.ToDeliveryPipelineIamPolicyMapOutputWithContext(context.Background())
}

func (i DeliveryPipelineIamPolicyMap) ToDeliveryPipelineIamPolicyMapOutputWithContext(ctx context.Context) DeliveryPipelineIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryPipelineIamPolicyMapOutput)
}

type DeliveryPipelineIamPolicyOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryPipelineIamPolicy)(nil)).Elem()
}

func (o DeliveryPipelineIamPolicyOutput) ToDeliveryPipelineIamPolicyOutput() DeliveryPipelineIamPolicyOutput {
	return o
}

func (o DeliveryPipelineIamPolicyOutput) ToDeliveryPipelineIamPolicyOutputWithContext(ctx context.Context) DeliveryPipelineIamPolicyOutput {
	return o
}

func (o DeliveryPipelineIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o DeliveryPipelineIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryPipelineIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

type DeliveryPipelineIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryPipelineIamPolicy)(nil)).Elem()
}

func (o DeliveryPipelineIamPolicyArrayOutput) ToDeliveryPipelineIamPolicyArrayOutput() DeliveryPipelineIamPolicyArrayOutput {
	return o
}

func (o DeliveryPipelineIamPolicyArrayOutput) ToDeliveryPipelineIamPolicyArrayOutputWithContext(ctx context.Context) DeliveryPipelineIamPolicyArrayOutput {
	return o
}

func (o DeliveryPipelineIamPolicyArrayOutput) Index(i pulumi.IntInput) DeliveryPipelineIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeliveryPipelineIamPolicy {
		return vs[0].([]*DeliveryPipelineIamPolicy)[vs[1].(int)]
	}).(DeliveryPipelineIamPolicyOutput)
}

type DeliveryPipelineIamPolicyMapOutput struct{ *pulumi.OutputState }

func (DeliveryPipelineIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryPipelineIamPolicy)(nil)).Elem()
}

func (o DeliveryPipelineIamPolicyMapOutput) ToDeliveryPipelineIamPolicyMapOutput() DeliveryPipelineIamPolicyMapOutput {
	return o
}

func (o DeliveryPipelineIamPolicyMapOutput) ToDeliveryPipelineIamPolicyMapOutputWithContext(ctx context.Context) DeliveryPipelineIamPolicyMapOutput {
	return o
}

func (o DeliveryPipelineIamPolicyMapOutput) MapIndex(k pulumi.StringInput) DeliveryPipelineIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeliveryPipelineIamPolicy {
		return vs[0].(map[string]*DeliveryPipelineIamPolicy)[vs[1].(string)]
	}).(DeliveryPipelineIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineIamPolicyInput)(nil)).Elem(), &DeliveryPipelineIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineIamPolicyArrayInput)(nil)).Elem(), DeliveryPipelineIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryPipelineIamPolicyMapInput)(nil)).Elem(), DeliveryPipelineIamPolicyMap{})
	pulumi.RegisterOutputType(DeliveryPipelineIamPolicyOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(DeliveryPipelineIamPolicyMapOutput{})
}
