// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clouddeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An `Automation` enables the automation of manually driven actions for a Delivery Pipeline, which includes Release promotion amongst Targets, Rollout repair and Rollout deployment strategy advancement.
//
// To get more information about Automation, see:
//
// * [API documentation](https://cloud.google.com/deploy/docs/api/reference/rest/v1/projects.locations.deliveryPipelines.automations)
// * How-to Guides
//   - [Automate your deployment](https://cloud.google.com/deploy/docs/automation)
//
// ## Example Usage
//
// ### Clouddeploy Automation Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/clouddeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			pipeline, err := clouddeploy.NewDeliveryPipeline(ctx, "pipeline", &clouddeploy.DeliveryPipelineArgs{
//				Name:     pulumi.String("cd-pipeline"),
//				Location: pulumi.String("us-central1"),
//				SerialPipeline: &clouddeploy.DeliveryPipelineSerialPipelineArgs{
//					Stages: clouddeploy.DeliveryPipelineSerialPipelineStageArray{
//						&clouddeploy.DeliveryPipelineSerialPipelineStageArgs{
//							TargetId: pulumi.String("test"),
//							Profiles: pulumi.StringArray{},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = clouddeploy.NewAutomation(ctx, "b-automation", &clouddeploy.AutomationArgs{
//				Name:             pulumi.String("cd-automation"),
//				Project:          pipeline.Project,
//				Location:         pipeline.Location,
//				DeliveryPipeline: pipeline.Name,
//				ServiceAccount:   pulumi.String("my@service-account.com"),
//				Selector: &clouddeploy.AutomationSelectorArgs{
//					Targets: clouddeploy.AutomationSelectorTargetArray{
//						&clouddeploy.AutomationSelectorTargetArgs{
//							Id: pulumi.String("*"),
//						},
//					},
//				},
//				Rules: clouddeploy.AutomationRuleArray{
//					&clouddeploy.AutomationRuleArgs{
//						PromoteReleaseRule: &clouddeploy.AutomationRulePromoteReleaseRuleArgs{
//							Id: pulumi.String("promote-release"),
//						},
//					},
//					&clouddeploy.AutomationRuleArgs{
//						AdvanceRolloutRule: &clouddeploy.AutomationRuleAdvanceRolloutRuleArgs{
//							Id: pulumi.String("advance-rollout"),
//						},
//					},
//					&clouddeploy.AutomationRuleArgs{
//						RepairRolloutRule: &clouddeploy.AutomationRuleRepairRolloutRuleArgs{
//							Id: pulumi.String("repair-rollout"),
//							RepairPhases: clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseArray{
//								&clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseArgs{
//									Retry: &clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseRetryArgs{
//										Attempts: pulumi.String("1"),
//									},
//								},
//								&clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseArgs{
//									Rollback: &clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseRollbackArgs{},
//								},
//							},
//						},
//					},
//					&clouddeploy.AutomationRuleArgs{
//						TimedPromoteReleaseRule: &clouddeploy.AutomationRuleTimedPromoteReleaseRuleArgs{
//							Id:       pulumi.String("timed-promote-release"),
//							Schedule: pulumi.String("0 9 * * 1"),
//							TimeZone: pulumi.String("America/New_York"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Clouddeploy Automation Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/clouddeploy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			pipeline, err := clouddeploy.NewDeliveryPipeline(ctx, "pipeline", &clouddeploy.DeliveryPipelineArgs{
//				Name:     pulumi.String("cd-pipeline"),
//				Location: pulumi.String("us-central1"),
//				SerialPipeline: &clouddeploy.DeliveryPipelineSerialPipelineArgs{
//					Stages: clouddeploy.DeliveryPipelineSerialPipelineStageArray{
//						&clouddeploy.DeliveryPipelineSerialPipelineStageArgs{
//							TargetId: pulumi.String("test"),
//							Profiles: pulumi.StringArray{
//								pulumi.String("test-profile"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = clouddeploy.NewAutomation(ctx, "f-automation", &clouddeploy.AutomationArgs{
//				Name:             pulumi.String("cd-automation"),
//				Location:         pulumi.String("us-central1"),
//				DeliveryPipeline: pipeline.Name,
//				ServiceAccount:   pulumi.String("my@service-account.com"),
//				Annotations: pulumi.StringMap{
//					"my_first_annotation":  pulumi.String("example-annotation-1"),
//					"my_second_annotation": pulumi.String("example-annotation-2"),
//				},
//				Labels: pulumi.StringMap{
//					"my_first_label":  pulumi.String("example-label-1"),
//					"my_second_label": pulumi.String("example-label-2"),
//				},
//				Description: pulumi.String("automation resource"),
//				Selector: &clouddeploy.AutomationSelectorArgs{
//					Targets: clouddeploy.AutomationSelectorTargetArray{
//						&clouddeploy.AutomationSelectorTargetArgs{
//							Id: pulumi.String("test"),
//							Labels: pulumi.StringMap{
//								"foo": pulumi.String("bar"),
//							},
//						},
//					},
//				},
//				Suspended: pulumi.Bool(true),
//				Rules: clouddeploy.AutomationRuleArray{
//					&clouddeploy.AutomationRuleArgs{
//						PromoteReleaseRule: &clouddeploy.AutomationRulePromoteReleaseRuleArgs{
//							Id:                  pulumi.String("promote-release"),
//							Wait:                pulumi.String("200s"),
//							DestinationTargetId: pulumi.String("@next"),
//							DestinationPhase:    pulumi.String("stable"),
//						},
//					},
//					&clouddeploy.AutomationRuleArgs{
//						AdvanceRolloutRule: &clouddeploy.AutomationRuleAdvanceRolloutRuleArgs{
//							Id: pulumi.String("advance-rollout"),
//							SourcePhases: pulumi.StringArray{
//								pulumi.String("canary"),
//							},
//							Wait: pulumi.String("200s"),
//						},
//					},
//					&clouddeploy.AutomationRuleArgs{
//						RepairRolloutRule: &clouddeploy.AutomationRuleRepairRolloutRuleArgs{
//							Id: pulumi.String("repair-rollout"),
//							Phases: pulumi.StringArray{
//								pulumi.String("stable"),
//							},
//							Jobs: pulumi.StringArray{
//								pulumi.String("deploy"),
//							},
//							RepairPhases: clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseArray{
//								&clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseArgs{
//									Retry: &clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseRetryArgs{
//										Attempts:    pulumi.String("1"),
//										Wait:        pulumi.String("200s"),
//										BackoffMode: pulumi.String("BACKOFF_MODE_LINEAR"),
//									},
//								},
//								&clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseArgs{
//									Rollback: &clouddeploy.AutomationRuleRepairRolloutRuleRepairPhaseRollbackArgs{
//										DestinationPhase:                pulumi.String("stable"),
//										DisableRollbackIfRolloutPending: pulumi.Bool(true),
//									},
//								},
//							},
//						},
//					},
//					&clouddeploy.AutomationRuleArgs{
//						TimedPromoteReleaseRule: &clouddeploy.AutomationRuleTimedPromoteReleaseRuleArgs{
//							Id:                  pulumi.String("timed-promote-release"),
//							DestinationTargetId: pulumi.String("@next"),
//							Schedule:            pulumi.String("0 9 * * 1"),
//							TimeZone:            pulumi.String("America/New_York"),
//							DestinationPhase:    pulumi.String("stable"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Automation can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/deliveryPipelines/{{delivery_pipeline}}/automations/{{name}}`
//
// * `{{project}}/{{location}}/{{delivery_pipeline}}/{{name}}`
//
// * `{{location}}/{{delivery_pipeline}}/{{name}}`
//
// When using the `pulumi import` command, Automation can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:clouddeploy/automation:Automation default projects/{{project}}/locations/{{location}}/deliveryPipelines/{{delivery_pipeline}}/automations/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:clouddeploy/automation:Automation default {{project}}/{{location}}/{{delivery_pipeline}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:clouddeploy/automation:Automation default {{location}}/{{delivery_pipeline}}/{{name}}
// ```
type Automation struct {
	pulumi.CustomResourceState

	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Output only. Time at which the automation was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The deliveryPipeline for the resource
	DeliveryPipeline pulumi.StringOutput `pulumi:"deliveryPipeline"`
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. The weak etag of the `Automation` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the `Automation`.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	// Structure is documented below.
	Rules AutomationRuleArrayOutput `pulumi:"rules"`
	// Required. Selected resources to which the automation will be applied.
	// Structure is documented below.
	Selector AutomationSelectorOutput `pulumi:"selector"`
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended pulumi.BoolPtrOutput `pulumi:"suspended"`
	// Output only. Unique identifier of the `Automation`.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. Time at which the automation was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAutomation registers a new resource with the given unique name, arguments, and options.
func NewAutomation(ctx *pulumi.Context,
	name string, args *AutomationArgs, opts ...pulumi.ResourceOption) (*Automation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeliveryPipeline == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryPipeline'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.Selector == nil {
		return nil, errors.New("invalid value for required argument 'Selector'")
	}
	if args.ServiceAccount == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccount'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Automation
	err := ctx.RegisterResource("gcp:clouddeploy/automation:Automation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutomation gets an existing Automation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutomation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutomationState, opts ...pulumi.ResourceOption) (*Automation, error) {
	var resource Automation
	err := ctx.ReadResource("gcp:clouddeploy/automation:Automation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Automation resources.
type automationState struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Output only. Time at which the automation was created.
	CreateTime *string `pulumi:"createTime"`
	// The deliveryPipeline for the resource
	DeliveryPipeline *string `pulumi:"deliveryPipeline"`
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description          *string           `pulumi:"description"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Optional. The weak etag of the `Automation` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// Name of the `Automation`.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	// Structure is documented below.
	Rules []AutomationRule `pulumi:"rules"`
	// Required. Selected resources to which the automation will be applied.
	// Structure is documented below.
	Selector *AutomationSelector `pulumi:"selector"`
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended *bool `pulumi:"suspended"`
	// Output only. Unique identifier of the `Automation`.
	Uid *string `pulumi:"uid"`
	// Output only. Time at which the automation was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type AutomationState struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Output only. Time at which the automation was created.
	CreateTime pulumi.StringPtrInput
	// The deliveryPipeline for the resource
	DeliveryPipeline pulumi.StringPtrInput
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Optional. The weak etag of the `Automation` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// Name of the `Automation`.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	// Structure is documented below.
	Rules AutomationRuleArrayInput
	// Required. Selected resources to which the automation will be applied.
	// Structure is documented below.
	Selector AutomationSelectorPtrInput
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount pulumi.StringPtrInput
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended pulumi.BoolPtrInput
	// Output only. Unique identifier of the `Automation`.
	Uid pulumi.StringPtrInput
	// Output only. Time at which the automation was updated.
	UpdateTime pulumi.StringPtrInput
}

func (AutomationState) ElementType() reflect.Type {
	return reflect.TypeOf((*automationState)(nil)).Elem()
}

type automationArgs struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// The deliveryPipeline for the resource
	DeliveryPipeline string `pulumi:"deliveryPipeline"`
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description *string `pulumi:"description"`
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location string `pulumi:"location"`
	// Name of the `Automation`.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	// Structure is documented below.
	Rules []AutomationRule `pulumi:"rules"`
	// Required. Selected resources to which the automation will be applied.
	// Structure is documented below.
	Selector AutomationSelector `pulumi:"selector"`
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended *bool `pulumi:"suspended"`
}

// The set of arguments for constructing a Automation resource.
type AutomationArgs struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// The deliveryPipeline for the resource
	DeliveryPipeline pulumi.StringInput
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description pulumi.StringPtrInput
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringInput
	// Name of the `Automation`.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	// Structure is documented below.
	Rules AutomationRuleArrayInput
	// Required. Selected resources to which the automation will be applied.
	// Structure is documented below.
	Selector AutomationSelectorInput
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount pulumi.StringInput
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended pulumi.BoolPtrInput
}

func (AutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*automationArgs)(nil)).Elem()
}

type AutomationInput interface {
	pulumi.Input

	ToAutomationOutput() AutomationOutput
	ToAutomationOutputWithContext(ctx context.Context) AutomationOutput
}

func (*Automation) ElementType() reflect.Type {
	return reflect.TypeOf((**Automation)(nil)).Elem()
}

func (i *Automation) ToAutomationOutput() AutomationOutput {
	return i.ToAutomationOutputWithContext(context.Background())
}

func (i *Automation) ToAutomationOutputWithContext(ctx context.Context) AutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationOutput)
}

// AutomationArrayInput is an input type that accepts AutomationArray and AutomationArrayOutput values.
// You can construct a concrete instance of `AutomationArrayInput` via:
//
//	AutomationArray{ AutomationArgs{...} }
type AutomationArrayInput interface {
	pulumi.Input

	ToAutomationArrayOutput() AutomationArrayOutput
	ToAutomationArrayOutputWithContext(context.Context) AutomationArrayOutput
}

type AutomationArray []AutomationInput

func (AutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Automation)(nil)).Elem()
}

func (i AutomationArray) ToAutomationArrayOutput() AutomationArrayOutput {
	return i.ToAutomationArrayOutputWithContext(context.Background())
}

func (i AutomationArray) ToAutomationArrayOutputWithContext(ctx context.Context) AutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationArrayOutput)
}

// AutomationMapInput is an input type that accepts AutomationMap and AutomationMapOutput values.
// You can construct a concrete instance of `AutomationMapInput` via:
//
//	AutomationMap{ "key": AutomationArgs{...} }
type AutomationMapInput interface {
	pulumi.Input

	ToAutomationMapOutput() AutomationMapOutput
	ToAutomationMapOutputWithContext(context.Context) AutomationMapOutput
}

type AutomationMap map[string]AutomationInput

func (AutomationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Automation)(nil)).Elem()
}

func (i AutomationMap) ToAutomationMapOutput() AutomationMapOutput {
	return i.ToAutomationMapOutputWithContext(context.Background())
}

func (i AutomationMap) ToAutomationMapOutputWithContext(ctx context.Context) AutomationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationMapOutput)
}

type AutomationOutput struct{ *pulumi.OutputState }

func (AutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Automation)(nil)).Elem()
}

func (o AutomationOutput) ToAutomationOutput() AutomationOutput {
	return o
}

func (o AutomationOutput) ToAutomationOutputWithContext(ctx context.Context) AutomationOutput {
	return o
}

// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
func (o AutomationOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Output only. Time at which the automation was created.
func (o AutomationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The deliveryPipeline for the resource
func (o AutomationOutput) DeliveryPipeline() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.DeliveryPipeline }).(pulumi.StringOutput)
}

// Optional. Description of the 'Automation'. Max length is 255 characters.
func (o AutomationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AutomationOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o AutomationOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. The weak etag of the `Automation` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o AutomationOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o AutomationOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location for the resource
func (o AutomationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the `Automation`.
func (o AutomationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AutomationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o AutomationOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
// Structure is documented below.
func (o AutomationOutput) Rules() AutomationRuleArrayOutput {
	return o.ApplyT(func(v *Automation) AutomationRuleArrayOutput { return v.Rules }).(AutomationRuleArrayOutput)
}

// Required. Selected resources to which the automation will be applied.
// Structure is documented below.
func (o AutomationOutput) Selector() AutomationSelectorOutput {
	return o.ApplyT(func(v *Automation) AutomationSelectorOutput { return v.Selector }).(AutomationSelectorOutput)
}

// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
func (o AutomationOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Optional. When Suspended, automation is deactivated from execution.
func (o AutomationOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Automation) pulumi.BoolPtrOutput { return v.Suspended }).(pulumi.BoolPtrOutput)
}

// Output only. Unique identifier of the `Automation`.
func (o AutomationOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. Time at which the automation was updated.
func (o AutomationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Automation) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type AutomationArrayOutput struct{ *pulumi.OutputState }

func (AutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Automation)(nil)).Elem()
}

func (o AutomationArrayOutput) ToAutomationArrayOutput() AutomationArrayOutput {
	return o
}

func (o AutomationArrayOutput) ToAutomationArrayOutputWithContext(ctx context.Context) AutomationArrayOutput {
	return o
}

func (o AutomationArrayOutput) Index(i pulumi.IntInput) AutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Automation {
		return vs[0].([]*Automation)[vs[1].(int)]
	}).(AutomationOutput)
}

type AutomationMapOutput struct{ *pulumi.OutputState }

func (AutomationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Automation)(nil)).Elem()
}

func (o AutomationMapOutput) ToAutomationMapOutput() AutomationMapOutput {
	return o
}

func (o AutomationMapOutput) ToAutomationMapOutputWithContext(ctx context.Context) AutomationMapOutput {
	return o
}

func (o AutomationMapOutput) MapIndex(k pulumi.StringInput) AutomationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Automation {
		return vs[0].(map[string]*Automation)[vs[1].(string)]
	}).(AutomationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationInput)(nil)).Elem(), &Automation{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationArrayInput)(nil)).Elem(), AutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationMapInput)(nil)).Elem(), AutomationMap{})
	pulumi.RegisterOutputType(AutomationOutput{})
	pulumi.RegisterOutputType(AutomationArrayOutput{})
	pulumi.RegisterOutputType(AutomationMapOutput{})
}
