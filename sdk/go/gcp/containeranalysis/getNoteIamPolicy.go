// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containeranalysis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for note
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/containeranalysis"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := containeranalysis.LookupNoteIamPolicy(ctx, &containeranalysis.LookupNoteIamPolicyArgs{
//				Project: pulumi.StringRef(google_container_analysis_note.Note.Project),
//				Note:    google_container_analysis_note.Note.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNoteIamPolicy(ctx *pulumi.Context, args *LookupNoteIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupNoteIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNoteIamPolicyResult
	err := ctx.Invoke("gcp:containeranalysis/getNoteIamPolicy:getNoteIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNoteIamPolicy.
type LookupNoteIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Note string `pulumi:"note"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getNoteIamPolicy.
type LookupNoteIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Note string `pulumi:"note"`
	// (Required only by `containeranalysis.NoteIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupNoteIamPolicyOutput(ctx *pulumi.Context, args LookupNoteIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupNoteIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNoteIamPolicyResult, error) {
			args := v.(LookupNoteIamPolicyArgs)
			r, err := LookupNoteIamPolicy(ctx, &args, opts...)
			var s LookupNoteIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNoteIamPolicyResultOutput)
}

// A collection of arguments for invoking getNoteIamPolicy.
type LookupNoteIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Note pulumi.StringInput `pulumi:"note"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupNoteIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNoteIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getNoteIamPolicy.
type LookupNoteIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupNoteIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNoteIamPolicyResult)(nil)).Elem()
}

func (o LookupNoteIamPolicyResultOutput) ToLookupNoteIamPolicyResultOutput() LookupNoteIamPolicyResultOutput {
	return o
}

func (o LookupNoteIamPolicyResultOutput) ToLookupNoteIamPolicyResultOutputWithContext(ctx context.Context) LookupNoteIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupNoteIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNoteIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNoteIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNoteIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNoteIamPolicyResultOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNoteIamPolicyResult) string { return v.Note }).(pulumi.StringOutput)
}

// (Required only by `containeranalysis.NoteIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupNoteIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNoteIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupNoteIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNoteIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNoteIamPolicyResultOutput{})
}
