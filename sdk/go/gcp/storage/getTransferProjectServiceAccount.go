// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve Storage Transfer service account for this project
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := storage.GetTransferProjectServiceAccount(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("defaultAccount", _default.Email)
//			return nil
//		})
//	}
//
// ```
func GetTransferProjectServiceAccount(ctx *pulumi.Context, args *GetTransferProjectServiceAccountArgs, opts ...pulumi.InvokeOption) (*GetTransferProjectServiceAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTransferProjectServiceAccountResult
	err := ctx.Invoke("gcp:storage/getTransferProjectServiceAccount:getTransferProjectServiceAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransferProjectServiceAccount.
type GetTransferProjectServiceAccountArgs struct {
	// The project ID. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getTransferProjectServiceAccount.
type GetTransferProjectServiceAccountResult struct {
	// Email address of the default service account used by Storage Transfer Jobs running in this project.
	Email string `pulumi:"email"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Identity of the service account in the form `serviceAccount:{email}`. This value is often used to refer to the service account in order to grant IAM permissions.
	Member  string `pulumi:"member"`
	Project string `pulumi:"project"`
	// Unique identifier for the service account.
	SubjectId string `pulumi:"subjectId"`
}

func GetTransferProjectServiceAccountOutput(ctx *pulumi.Context, args GetTransferProjectServiceAccountOutputArgs, opts ...pulumi.InvokeOption) GetTransferProjectServiceAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTransferProjectServiceAccountResult, error) {
			args := v.(GetTransferProjectServiceAccountArgs)
			r, err := GetTransferProjectServiceAccount(ctx, &args, opts...)
			var s GetTransferProjectServiceAccountResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTransferProjectServiceAccountResultOutput)
}

// A collection of arguments for invoking getTransferProjectServiceAccount.
type GetTransferProjectServiceAccountOutputArgs struct {
	// The project ID. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetTransferProjectServiceAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransferProjectServiceAccountArgs)(nil)).Elem()
}

// A collection of values returned by getTransferProjectServiceAccount.
type GetTransferProjectServiceAccountResultOutput struct{ *pulumi.OutputState }

func (GetTransferProjectServiceAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransferProjectServiceAccountResult)(nil)).Elem()
}

func (o GetTransferProjectServiceAccountResultOutput) ToGetTransferProjectServiceAccountResultOutput() GetTransferProjectServiceAccountResultOutput {
	return o
}

func (o GetTransferProjectServiceAccountResultOutput) ToGetTransferProjectServiceAccountResultOutputWithContext(ctx context.Context) GetTransferProjectServiceAccountResultOutput {
	return o
}

// Email address of the default service account used by Storage Transfer Jobs running in this project.
func (o GetTransferProjectServiceAccountResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransferProjectServiceAccountResult) string { return v.Email }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTransferProjectServiceAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransferProjectServiceAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Identity of the service account in the form `serviceAccount:{email}`. This value is often used to refer to the service account in order to grant IAM permissions.
func (o GetTransferProjectServiceAccountResultOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransferProjectServiceAccountResult) string { return v.Member }).(pulumi.StringOutput)
}

func (o GetTransferProjectServiceAccountResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransferProjectServiceAccountResult) string { return v.Project }).(pulumi.StringOutput)
}

// Unique identifier for the service account.
func (o GetTransferProjectServiceAccountResultOutput) SubjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransferProjectServiceAccountResult) string { return v.SubjectId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTransferProjectServiceAccountResultOutput{})
}
