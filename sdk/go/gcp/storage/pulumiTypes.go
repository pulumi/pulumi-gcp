// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type BucketCor struct {
	// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Methods []string `pulumi:"methods"`
	// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origins []string `pulumi:"origins"`
	// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
	ResponseHeaders []string `pulumi:"responseHeaders"`
}

// BucketCorInput is an input type that accepts BucketCorArgs and BucketCorOutput values.
// You can construct a concrete instance of `BucketCorInput` via:
//
// 		 BucketCorArgs{...}
//
type BucketCorInput interface {
	pulumi.Input

	ToBucketCorOutput() BucketCorOutput
	ToBucketCorOutputWithContext(context.Context) BucketCorOutput
}

type BucketCorArgs struct {
	// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origins pulumi.StringArrayInput `pulumi:"origins"`
	// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
	ResponseHeaders pulumi.StringArrayInput `pulumi:"responseHeaders"`
}

func (BucketCorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCor)(nil)).Elem()
}

func (i BucketCorArgs) ToBucketCorOutput() BucketCorOutput {
	return i.ToBucketCorOutputWithContext(context.Background())
}

func (i BucketCorArgs) ToBucketCorOutputWithContext(ctx context.Context) BucketCorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorOutput)
}

// BucketCorArrayInput is an input type that accepts BucketCorArray and BucketCorArrayOutput values.
// You can construct a concrete instance of `BucketCorArrayInput` via:
//
// 		 BucketCorArray{ BucketCorArgs{...} }
//
type BucketCorArrayInput interface {
	pulumi.Input

	ToBucketCorArrayOutput() BucketCorArrayOutput
	ToBucketCorArrayOutputWithContext(context.Context) BucketCorArrayOutput
}

type BucketCorArray []BucketCorInput

func (BucketCorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCor)(nil)).Elem()
}

func (i BucketCorArray) ToBucketCorArrayOutput() BucketCorArrayOutput {
	return i.ToBucketCorArrayOutputWithContext(context.Background())
}

func (i BucketCorArray) ToBucketCorArrayOutputWithContext(ctx context.Context) BucketCorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorArrayOutput)
}

type BucketCorOutput struct{ *pulumi.OutputState }

func (BucketCorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCor)(nil)).Elem()
}

func (o BucketCorOutput) ToBucketCorOutput() BucketCorOutput {
	return o
}

func (o BucketCorOutput) ToBucketCorOutputWithContext(ctx context.Context) BucketCorOutput {
	return o
}

// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
func (o BucketCorOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketCor) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
func (o BucketCorOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCor) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
func (o BucketCorOutput) Origins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCor) []string { return v.Origins }).(pulumi.StringArrayOutput)
}

// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
func (o BucketCorOutput) ResponseHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCor) []string { return v.ResponseHeaders }).(pulumi.StringArrayOutput)
}

type BucketCorArrayOutput struct{ *pulumi.OutputState }

func (BucketCorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCor)(nil)).Elem()
}

func (o BucketCorArrayOutput) ToBucketCorArrayOutput() BucketCorArrayOutput {
	return o
}

func (o BucketCorArrayOutput) ToBucketCorArrayOutputWithContext(ctx context.Context) BucketCorArrayOutput {
	return o
}

func (o BucketCorArrayOutput) Index(i pulumi.IntInput) BucketCorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketCor {
		return vs[0].([]BucketCor)[vs[1].(int)]
	}).(BucketCorOutput)
}

type BucketEncryption struct {
	DefaultKmsKeyName string `pulumi:"defaultKmsKeyName"`
}

// BucketEncryptionInput is an input type that accepts BucketEncryptionArgs and BucketEncryptionOutput values.
// You can construct a concrete instance of `BucketEncryptionInput` via:
//
// 		 BucketEncryptionArgs{...}
//
type BucketEncryptionInput interface {
	pulumi.Input

	ToBucketEncryptionOutput() BucketEncryptionOutput
	ToBucketEncryptionOutputWithContext(context.Context) BucketEncryptionOutput
}

type BucketEncryptionArgs struct {
	DefaultKmsKeyName pulumi.StringInput `pulumi:"defaultKmsKeyName"`
}

func (BucketEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryption)(nil)).Elem()
}

func (i BucketEncryptionArgs) ToBucketEncryptionOutput() BucketEncryptionOutput {
	return i.ToBucketEncryptionOutputWithContext(context.Background())
}

func (i BucketEncryptionArgs) ToBucketEncryptionOutputWithContext(ctx context.Context) BucketEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionOutput)
}

func (i BucketEncryptionArgs) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return i.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i BucketEncryptionArgs) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionOutput).ToBucketEncryptionPtrOutputWithContext(ctx)
}

// BucketEncryptionPtrInput is an input type that accepts BucketEncryptionArgs, BucketEncryptionPtr and BucketEncryptionPtrOutput values.
// You can construct a concrete instance of `BucketEncryptionPtrInput` via:
//
// 		 BucketEncryptionArgs{...}
//
//  or:
//
// 		 nil
//
type BucketEncryptionPtrInput interface {
	pulumi.Input

	ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput
	ToBucketEncryptionPtrOutputWithContext(context.Context) BucketEncryptionPtrOutput
}

type bucketEncryptionPtrType BucketEncryptionArgs

func BucketEncryptionPtr(v *BucketEncryptionArgs) BucketEncryptionPtrInput {
	return (*bucketEncryptionPtrType)(v)
}

func (*bucketEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryption)(nil)).Elem()
}

func (i *bucketEncryptionPtrType) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return i.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i *bucketEncryptionPtrType) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionPtrOutput)
}

type BucketEncryptionOutput struct{ *pulumi.OutputState }

func (BucketEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryption)(nil)).Elem()
}

func (o BucketEncryptionOutput) ToBucketEncryptionOutput() BucketEncryptionOutput {
	return o
}

func (o BucketEncryptionOutput) ToBucketEncryptionOutputWithContext(ctx context.Context) BucketEncryptionOutput {
	return o
}

func (o BucketEncryptionOutput) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return o.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (o BucketEncryptionOutput) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return o.ApplyT(func(v BucketEncryption) *BucketEncryption {
		return &v
	}).(BucketEncryptionPtrOutput)
}
func (o BucketEncryptionOutput) DefaultKmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v BucketEncryption) string { return v.DefaultKmsKeyName }).(pulumi.StringOutput)
}

type BucketEncryptionPtrOutput struct{ *pulumi.OutputState }

func (BucketEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryption)(nil)).Elem()
}

func (o BucketEncryptionPtrOutput) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return o
}

func (o BucketEncryptionPtrOutput) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return o
}

func (o BucketEncryptionPtrOutput) Elem() BucketEncryptionOutput {
	return o.ApplyT(func(v *BucketEncryption) BucketEncryption { return *v }).(BucketEncryptionOutput)
}

func (o BucketEncryptionPtrOutput) DefaultKmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultKmsKeyName
	}).(pulumi.StringPtrOutput)
}

type BucketIAMBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// BucketIAMBindingConditionInput is an input type that accepts BucketIAMBindingConditionArgs and BucketIAMBindingConditionOutput values.
// You can construct a concrete instance of `BucketIAMBindingConditionInput` via:
//
// 		 BucketIAMBindingConditionArgs{...}
//
type BucketIAMBindingConditionInput interface {
	pulumi.Input

	ToBucketIAMBindingConditionOutput() BucketIAMBindingConditionOutput
	ToBucketIAMBindingConditionOutputWithContext(context.Context) BucketIAMBindingConditionOutput
}

type BucketIAMBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (BucketIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMBindingCondition)(nil)).Elem()
}

func (i BucketIAMBindingConditionArgs) ToBucketIAMBindingConditionOutput() BucketIAMBindingConditionOutput {
	return i.ToBucketIAMBindingConditionOutputWithContext(context.Background())
}

func (i BucketIAMBindingConditionArgs) ToBucketIAMBindingConditionOutputWithContext(ctx context.Context) BucketIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionOutput)
}

func (i BucketIAMBindingConditionArgs) ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput {
	return i.ToBucketIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i BucketIAMBindingConditionArgs) ToBucketIAMBindingConditionPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionOutput).ToBucketIAMBindingConditionPtrOutputWithContext(ctx)
}

// BucketIAMBindingConditionPtrInput is an input type that accepts BucketIAMBindingConditionArgs, BucketIAMBindingConditionPtr and BucketIAMBindingConditionPtrOutput values.
// You can construct a concrete instance of `BucketIAMBindingConditionPtrInput` via:
//
// 		 BucketIAMBindingConditionArgs{...}
//
//  or:
//
// 		 nil
//
type BucketIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput
	ToBucketIAMBindingConditionPtrOutputWithContext(context.Context) BucketIAMBindingConditionPtrOutput
}

type bucketIAMBindingConditionPtrType BucketIAMBindingConditionArgs

func BucketIAMBindingConditionPtr(v *BucketIAMBindingConditionArgs) BucketIAMBindingConditionPtrInput {
	return (*bucketIAMBindingConditionPtrType)(v)
}

func (*bucketIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMBindingCondition)(nil)).Elem()
}

func (i *bucketIAMBindingConditionPtrType) ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput {
	return i.ToBucketIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *bucketIAMBindingConditionPtrType) ToBucketIAMBindingConditionPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionPtrOutput)
}

type BucketIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (BucketIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMBindingCondition)(nil)).Elem()
}

func (o BucketIAMBindingConditionOutput) ToBucketIAMBindingConditionOutput() BucketIAMBindingConditionOutput {
	return o
}

func (o BucketIAMBindingConditionOutput) ToBucketIAMBindingConditionOutputWithContext(ctx context.Context) BucketIAMBindingConditionOutput {
	return o
}

func (o BucketIAMBindingConditionOutput) ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput {
	return o.ToBucketIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o BucketIAMBindingConditionOutput) ToBucketIAMBindingConditionPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) *BucketIAMBindingCondition {
		return &v
	}).(BucketIAMBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (BucketIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMBindingCondition)(nil)).Elem()
}

func (o BucketIAMBindingConditionPtrOutput) ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput {
	return o
}

func (o BucketIAMBindingConditionPtrOutput) ToBucketIAMBindingConditionPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionPtrOutput {
	return o
}

func (o BucketIAMBindingConditionPtrOutput) Elem() BucketIAMBindingConditionOutput {
	return o.ApplyT(func(v *BucketIAMBindingCondition) BucketIAMBindingCondition { return *v }).(BucketIAMBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type BucketIAMMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// BucketIAMMemberConditionInput is an input type that accepts BucketIAMMemberConditionArgs and BucketIAMMemberConditionOutput values.
// You can construct a concrete instance of `BucketIAMMemberConditionInput` via:
//
// 		 BucketIAMMemberConditionArgs{...}
//
type BucketIAMMemberConditionInput interface {
	pulumi.Input

	ToBucketIAMMemberConditionOutput() BucketIAMMemberConditionOutput
	ToBucketIAMMemberConditionOutputWithContext(context.Context) BucketIAMMemberConditionOutput
}

type BucketIAMMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (BucketIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMemberCondition)(nil)).Elem()
}

func (i BucketIAMMemberConditionArgs) ToBucketIAMMemberConditionOutput() BucketIAMMemberConditionOutput {
	return i.ToBucketIAMMemberConditionOutputWithContext(context.Background())
}

func (i BucketIAMMemberConditionArgs) ToBucketIAMMemberConditionOutputWithContext(ctx context.Context) BucketIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionOutput)
}

func (i BucketIAMMemberConditionArgs) ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput {
	return i.ToBucketIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i BucketIAMMemberConditionArgs) ToBucketIAMMemberConditionPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionOutput).ToBucketIAMMemberConditionPtrOutputWithContext(ctx)
}

// BucketIAMMemberConditionPtrInput is an input type that accepts BucketIAMMemberConditionArgs, BucketIAMMemberConditionPtr and BucketIAMMemberConditionPtrOutput values.
// You can construct a concrete instance of `BucketIAMMemberConditionPtrInput` via:
//
// 		 BucketIAMMemberConditionArgs{...}
//
//  or:
//
// 		 nil
//
type BucketIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput
	ToBucketIAMMemberConditionPtrOutputWithContext(context.Context) BucketIAMMemberConditionPtrOutput
}

type bucketIAMMemberConditionPtrType BucketIAMMemberConditionArgs

func BucketIAMMemberConditionPtr(v *BucketIAMMemberConditionArgs) BucketIAMMemberConditionPtrInput {
	return (*bucketIAMMemberConditionPtrType)(v)
}

func (*bucketIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMMemberCondition)(nil)).Elem()
}

func (i *bucketIAMMemberConditionPtrType) ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput {
	return i.ToBucketIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *bucketIAMMemberConditionPtrType) ToBucketIAMMemberConditionPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionPtrOutput)
}

type BucketIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (BucketIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMemberCondition)(nil)).Elem()
}

func (o BucketIAMMemberConditionOutput) ToBucketIAMMemberConditionOutput() BucketIAMMemberConditionOutput {
	return o
}

func (o BucketIAMMemberConditionOutput) ToBucketIAMMemberConditionOutputWithContext(ctx context.Context) BucketIAMMemberConditionOutput {
	return o
}

func (o BucketIAMMemberConditionOutput) ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput {
	return o.ToBucketIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o BucketIAMMemberConditionOutput) ToBucketIAMMemberConditionPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) *BucketIAMMemberCondition {
		return &v
	}).(BucketIAMMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (BucketIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMMemberCondition)(nil)).Elem()
}

func (o BucketIAMMemberConditionPtrOutput) ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput {
	return o
}

func (o BucketIAMMemberConditionPtrOutput) ToBucketIAMMemberConditionPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionPtrOutput {
	return o
}

func (o BucketIAMMemberConditionPtrOutput) Elem() BucketIAMMemberConditionOutput {
	return o.ApplyT(func(v *BucketIAMMemberCondition) BucketIAMMemberCondition { return *v }).(BucketIAMMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type BucketLifecycleRule struct {
	// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
	Action BucketLifecycleRuleAction `pulumi:"action"`
	// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
	Condition BucketLifecycleRuleCondition `pulumi:"condition"`
}

// BucketLifecycleRuleInput is an input type that accepts BucketLifecycleRuleArgs and BucketLifecycleRuleOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleInput` via:
//
// 		 BucketLifecycleRuleArgs{...}
//
type BucketLifecycleRuleInput interface {
	pulumi.Input

	ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput
	ToBucketLifecycleRuleOutputWithContext(context.Context) BucketLifecycleRuleOutput
}

type BucketLifecycleRuleArgs struct {
	// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
	Action BucketLifecycleRuleActionInput `pulumi:"action"`
	// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
	Condition BucketLifecycleRuleConditionInput `pulumi:"condition"`
}

func (BucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRule)(nil)).Elem()
}

func (i BucketLifecycleRuleArgs) ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput {
	return i.ToBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArgs) ToBucketLifecycleRuleOutputWithContext(ctx context.Context) BucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleOutput)
}

// BucketLifecycleRuleArrayInput is an input type that accepts BucketLifecycleRuleArray and BucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleArrayInput` via:
//
// 		 BucketLifecycleRuleArray{ BucketLifecycleRuleArgs{...} }
//
type BucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput
	ToBucketLifecycleRuleArrayOutputWithContext(context.Context) BucketLifecycleRuleArrayOutput
}

type BucketLifecycleRuleArray []BucketLifecycleRuleInput

func (BucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRule)(nil)).Elem()
}

func (i BucketLifecycleRuleArray) ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput {
	return i.ToBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArray) ToBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleArrayOutput)
}

type BucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRule)(nil)).Elem()
}

func (o BucketLifecycleRuleOutput) ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput {
	return o
}

func (o BucketLifecycleRuleOutput) ToBucketLifecycleRuleOutputWithContext(ctx context.Context) BucketLifecycleRuleOutput {
	return o
}

// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
func (o BucketLifecycleRuleOutput) Action() BucketLifecycleRuleActionOutput {
	return o.ApplyT(func(v BucketLifecycleRule) BucketLifecycleRuleAction { return v.Action }).(BucketLifecycleRuleActionOutput)
}

// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
func (o BucketLifecycleRuleOutput) Condition() BucketLifecycleRuleConditionOutput {
	return o.ApplyT(func(v BucketLifecycleRule) BucketLifecycleRuleCondition { return v.Condition }).(BucketLifecycleRuleConditionOutput)
}

type BucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRule)(nil)).Elem()
}

func (o BucketLifecycleRuleArrayOutput) ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput {
	return o
}

func (o BucketLifecycleRuleArrayOutput) ToBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArrayOutput {
	return o
}

func (o BucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRule {
		return vs[0].([]BucketLifecycleRule)[vs[1].(int)]
	}).(BucketLifecycleRuleOutput)
}

type BucketLifecycleRuleAction struct {
	// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
	StorageClass *string `pulumi:"storageClass"`
	// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
	Type string `pulumi:"type"`
}

// BucketLifecycleRuleActionInput is an input type that accepts BucketLifecycleRuleActionArgs and BucketLifecycleRuleActionOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleActionInput` via:
//
// 		 BucketLifecycleRuleActionArgs{...}
//
type BucketLifecycleRuleActionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleActionOutput() BucketLifecycleRuleActionOutput
	ToBucketLifecycleRuleActionOutputWithContext(context.Context) BucketLifecycleRuleActionOutput
}

type BucketLifecycleRuleActionArgs struct {
	// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
	// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BucketLifecycleRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleAction)(nil)).Elem()
}

func (i BucketLifecycleRuleActionArgs) ToBucketLifecycleRuleActionOutput() BucketLifecycleRuleActionOutput {
	return i.ToBucketLifecycleRuleActionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleActionArgs) ToBucketLifecycleRuleActionOutputWithContext(ctx context.Context) BucketLifecycleRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleActionOutput)
}

type BucketLifecycleRuleActionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleAction)(nil)).Elem()
}

func (o BucketLifecycleRuleActionOutput) ToBucketLifecycleRuleActionOutput() BucketLifecycleRuleActionOutput {
	return o
}

func (o BucketLifecycleRuleActionOutput) ToBucketLifecycleRuleActionOutputWithContext(ctx context.Context) BucketLifecycleRuleActionOutput {
	return o
}

// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
func (o BucketLifecycleRuleActionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleAction) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
func (o BucketLifecycleRuleActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleAction) string { return v.Type }).(pulumi.StringOutput)
}

type BucketLifecycleRuleCondition struct {
	// Minimum age of an object in days to satisfy this condition.
	Age *int `pulumi:"age"`
	// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
	CreatedBefore *string `pulumi:"createdBefore"`
	// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
	MatchesStorageClasses []string `pulumi:"matchesStorageClasses"`
	// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
	NumNewerVersions *int `pulumi:"numNewerVersions"`
	// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
	WithState *string `pulumi:"withState"`
}

// BucketLifecycleRuleConditionInput is an input type that accepts BucketLifecycleRuleConditionArgs and BucketLifecycleRuleConditionOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleConditionInput` via:
//
// 		 BucketLifecycleRuleConditionArgs{...}
//
type BucketLifecycleRuleConditionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleConditionOutput() BucketLifecycleRuleConditionOutput
	ToBucketLifecycleRuleConditionOutputWithContext(context.Context) BucketLifecycleRuleConditionOutput
}

type BucketLifecycleRuleConditionArgs struct {
	// Minimum age of an object in days to satisfy this condition.
	Age pulumi.IntPtrInput `pulumi:"age"`
	// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
	CreatedBefore pulumi.StringPtrInput `pulumi:"createdBefore"`
	// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
	MatchesStorageClasses pulumi.StringArrayInput `pulumi:"matchesStorageClasses"`
	// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
	NumNewerVersions pulumi.IntPtrInput `pulumi:"numNewerVersions"`
	// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
	WithState pulumi.StringPtrInput `pulumi:"withState"`
}

func (BucketLifecycleRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleCondition)(nil)).Elem()
}

func (i BucketLifecycleRuleConditionArgs) ToBucketLifecycleRuleConditionOutput() BucketLifecycleRuleConditionOutput {
	return i.ToBucketLifecycleRuleConditionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleConditionArgs) ToBucketLifecycleRuleConditionOutputWithContext(ctx context.Context) BucketLifecycleRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleConditionOutput)
}

type BucketLifecycleRuleConditionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleCondition)(nil)).Elem()
}

func (o BucketLifecycleRuleConditionOutput) ToBucketLifecycleRuleConditionOutput() BucketLifecycleRuleConditionOutput {
	return o
}

func (o BucketLifecycleRuleConditionOutput) ToBucketLifecycleRuleConditionOutputWithContext(ctx context.Context) BucketLifecycleRuleConditionOutput {
	return o
}

// Minimum age of an object in days to satisfy this condition.
func (o BucketLifecycleRuleConditionOutput) Age() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) *int { return v.Age }).(pulumi.IntPtrOutput)
}

// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
func (o BucketLifecycleRuleConditionOutput) CreatedBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) *string { return v.CreatedBefore }).(pulumi.StringPtrOutput)
}

// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
func (o BucketLifecycleRuleConditionOutput) MatchesStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) []string { return v.MatchesStorageClasses }).(pulumi.StringArrayOutput)
}

// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
func (o BucketLifecycleRuleConditionOutput) NumNewerVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) *int { return v.NumNewerVersions }).(pulumi.IntPtrOutput)
}

// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
func (o BucketLifecycleRuleConditionOutput) WithState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) *string { return v.WithState }).(pulumi.StringPtrOutput)
}

type BucketLogging struct {
	// The bucket that will receive log objects.
	LogBucket string `pulumi:"logBucket"`
	// The object prefix for log objects. If it's not provided,
	// by default GCS sets this to this bucket's name.
	LogObjectPrefix *string `pulumi:"logObjectPrefix"`
}

// BucketLoggingInput is an input type that accepts BucketLoggingArgs and BucketLoggingOutput values.
// You can construct a concrete instance of `BucketLoggingInput` via:
//
// 		 BucketLoggingArgs{...}
//
type BucketLoggingInput interface {
	pulumi.Input

	ToBucketLoggingOutput() BucketLoggingOutput
	ToBucketLoggingOutputWithContext(context.Context) BucketLoggingOutput
}

type BucketLoggingArgs struct {
	// The bucket that will receive log objects.
	LogBucket pulumi.StringInput `pulumi:"logBucket"`
	// The object prefix for log objects. If it's not provided,
	// by default GCS sets this to this bucket's name.
	LogObjectPrefix pulumi.StringPtrInput `pulumi:"logObjectPrefix"`
}

func (BucketLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (i BucketLoggingArgs) ToBucketLoggingOutput() BucketLoggingOutput {
	return i.ToBucketLoggingOutputWithContext(context.Background())
}

func (i BucketLoggingArgs) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingOutput)
}

func (i BucketLoggingArgs) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return i.ToBucketLoggingPtrOutputWithContext(context.Background())
}

func (i BucketLoggingArgs) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingOutput).ToBucketLoggingPtrOutputWithContext(ctx)
}

// BucketLoggingPtrInput is an input type that accepts BucketLoggingArgs, BucketLoggingPtr and BucketLoggingPtrOutput values.
// You can construct a concrete instance of `BucketLoggingPtrInput` via:
//
// 		 BucketLoggingArgs{...}
//
//  or:
//
// 		 nil
//
type BucketLoggingPtrInput interface {
	pulumi.Input

	ToBucketLoggingPtrOutput() BucketLoggingPtrOutput
	ToBucketLoggingPtrOutputWithContext(context.Context) BucketLoggingPtrOutput
}

type bucketLoggingPtrType BucketLoggingArgs

func BucketLoggingPtr(v *BucketLoggingArgs) BucketLoggingPtrInput {
	return (*bucketLoggingPtrType)(v)
}

func (*bucketLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLogging)(nil)).Elem()
}

func (i *bucketLoggingPtrType) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return i.ToBucketLoggingPtrOutputWithContext(context.Background())
}

func (i *bucketLoggingPtrType) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingPtrOutput)
}

type BucketLoggingOutput struct{ *pulumi.OutputState }

func (BucketLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (o BucketLoggingOutput) ToBucketLoggingOutput() BucketLoggingOutput {
	return o
}

func (o BucketLoggingOutput) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return o
}

func (o BucketLoggingOutput) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return o.ToBucketLoggingPtrOutputWithContext(context.Background())
}

func (o BucketLoggingOutput) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return o.ApplyT(func(v BucketLogging) *BucketLogging {
		return &v
	}).(BucketLoggingPtrOutput)
}

// The bucket that will receive log objects.
func (o BucketLoggingOutput) LogBucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLogging) string { return v.LogBucket }).(pulumi.StringOutput)
}

// The object prefix for log objects. If it's not provided,
// by default GCS sets this to this bucket's name.
func (o BucketLoggingOutput) LogObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLogging) *string { return v.LogObjectPrefix }).(pulumi.StringPtrOutput)
}

type BucketLoggingPtrOutput struct{ *pulumi.OutputState }

func (BucketLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLogging)(nil)).Elem()
}

func (o BucketLoggingPtrOutput) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return o
}

func (o BucketLoggingPtrOutput) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return o
}

func (o BucketLoggingPtrOutput) Elem() BucketLoggingOutput {
	return o.ApplyT(func(v *BucketLogging) BucketLogging { return *v }).(BucketLoggingOutput)
}

// The bucket that will receive log objects.
func (o BucketLoggingPtrOutput) LogBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLogging) *string {
		if v == nil {
			return nil
		}
		return &v.LogBucket
	}).(pulumi.StringPtrOutput)
}

// The object prefix for log objects. If it's not provided,
// by default GCS sets this to this bucket's name.
func (o BucketLoggingPtrOutput) LogObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLogging) *string {
		if v == nil {
			return nil
		}
		return v.LogObjectPrefix
	}).(pulumi.StringPtrOutput)
}

type BucketRetentionPolicy struct {
	// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
	IsLocked *bool `pulumi:"isLocked"`
	// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
	RetentionPeriod int `pulumi:"retentionPeriod"`
}

// BucketRetentionPolicyInput is an input type that accepts BucketRetentionPolicyArgs and BucketRetentionPolicyOutput values.
// You can construct a concrete instance of `BucketRetentionPolicyInput` via:
//
// 		 BucketRetentionPolicyArgs{...}
//
type BucketRetentionPolicyInput interface {
	pulumi.Input

	ToBucketRetentionPolicyOutput() BucketRetentionPolicyOutput
	ToBucketRetentionPolicyOutputWithContext(context.Context) BucketRetentionPolicyOutput
}

type BucketRetentionPolicyArgs struct {
	// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
	IsLocked pulumi.BoolPtrInput `pulumi:"isLocked"`
	// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
	RetentionPeriod pulumi.IntInput `pulumi:"retentionPeriod"`
}

func (BucketRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicy)(nil)).Elem()
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyOutput() BucketRetentionPolicyOutput {
	return i.ToBucketRetentionPolicyOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyOutputWithContext(ctx context.Context) BucketRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyOutput)
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return i.ToBucketRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyOutput).ToBucketRetentionPolicyPtrOutputWithContext(ctx)
}

// BucketRetentionPolicyPtrInput is an input type that accepts BucketRetentionPolicyArgs, BucketRetentionPolicyPtr and BucketRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `BucketRetentionPolicyPtrInput` via:
//
// 		 BucketRetentionPolicyArgs{...}
//
//  or:
//
// 		 nil
//
type BucketRetentionPolicyPtrInput interface {
	pulumi.Input

	ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput
	ToBucketRetentionPolicyPtrOutputWithContext(context.Context) BucketRetentionPolicyPtrOutput
}

type bucketRetentionPolicyPtrType BucketRetentionPolicyArgs

func BucketRetentionPolicyPtr(v *BucketRetentionPolicyArgs) BucketRetentionPolicyPtrInput {
	return (*bucketRetentionPolicyPtrType)(v)
}

func (*bucketRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicy)(nil)).Elem()
}

func (i *bucketRetentionPolicyPtrType) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return i.ToBucketRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *bucketRetentionPolicyPtrType) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyPtrOutput)
}

type BucketRetentionPolicyOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicy)(nil)).Elem()
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyOutput() BucketRetentionPolicyOutput {
	return o
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyOutputWithContext(ctx context.Context) BucketRetentionPolicyOutput {
	return o
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return o.ToBucketRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) *BucketRetentionPolicy {
		return &v
	}).(BucketRetentionPolicyPtrOutput)
}

// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
func (o BucketRetentionPolicyOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) *bool { return v.IsLocked }).(pulumi.BoolPtrOutput)
}

// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
func (o BucketRetentionPolicyOutput) RetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) int { return v.RetentionPeriod }).(pulumi.IntOutput)
}

type BucketRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicy)(nil)).Elem()
}

func (o BucketRetentionPolicyPtrOutput) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return o
}

func (o BucketRetentionPolicyPtrOutput) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return o
}

func (o BucketRetentionPolicyPtrOutput) Elem() BucketRetentionPolicyOutput {
	return o.ApplyT(func(v *BucketRetentionPolicy) BucketRetentionPolicy { return *v }).(BucketRetentionPolicyOutput)
}

// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
func (o BucketRetentionPolicyPtrOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketRetentionPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.IsLocked
	}).(pulumi.BoolPtrOutput)
}

// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
func (o BucketRetentionPolicyPtrOutput) RetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionPeriod
	}).(pulumi.IntPtrOutput)
}

type BucketVersioning struct {
	// While set to `true`, versioning is fully enabled for this bucket.
	Enabled bool `pulumi:"enabled"`
}

// BucketVersioningInput is an input type that accepts BucketVersioningArgs and BucketVersioningOutput values.
// You can construct a concrete instance of `BucketVersioningInput` via:
//
// 		 BucketVersioningArgs{...}
//
type BucketVersioningInput interface {
	pulumi.Input

	ToBucketVersioningOutput() BucketVersioningOutput
	ToBucketVersioningOutputWithContext(context.Context) BucketVersioningOutput
}

type BucketVersioningArgs struct {
	// While set to `true`, versioning is fully enabled for this bucket.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (BucketVersioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioning)(nil)).Elem()
}

func (i BucketVersioningArgs) ToBucketVersioningOutput() BucketVersioningOutput {
	return i.ToBucketVersioningOutputWithContext(context.Background())
}

func (i BucketVersioningArgs) ToBucketVersioningOutputWithContext(ctx context.Context) BucketVersioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningOutput)
}

func (i BucketVersioningArgs) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return i.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (i BucketVersioningArgs) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningOutput).ToBucketVersioningPtrOutputWithContext(ctx)
}

// BucketVersioningPtrInput is an input type that accepts BucketVersioningArgs, BucketVersioningPtr and BucketVersioningPtrOutput values.
// You can construct a concrete instance of `BucketVersioningPtrInput` via:
//
// 		 BucketVersioningArgs{...}
//
//  or:
//
// 		 nil
//
type BucketVersioningPtrInput interface {
	pulumi.Input

	ToBucketVersioningPtrOutput() BucketVersioningPtrOutput
	ToBucketVersioningPtrOutputWithContext(context.Context) BucketVersioningPtrOutput
}

type bucketVersioningPtrType BucketVersioningArgs

func BucketVersioningPtr(v *BucketVersioningArgs) BucketVersioningPtrInput {
	return (*bucketVersioningPtrType)(v)
}

func (*bucketVersioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioning)(nil)).Elem()
}

func (i *bucketVersioningPtrType) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return i.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (i *bucketVersioningPtrType) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningPtrOutput)
}

type BucketVersioningOutput struct{ *pulumi.OutputState }

func (BucketVersioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioning)(nil)).Elem()
}

func (o BucketVersioningOutput) ToBucketVersioningOutput() BucketVersioningOutput {
	return o
}

func (o BucketVersioningOutput) ToBucketVersioningOutputWithContext(ctx context.Context) BucketVersioningOutput {
	return o
}

func (o BucketVersioningOutput) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return o.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (o BucketVersioningOutput) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return o.ApplyT(func(v BucketVersioning) *BucketVersioning {
		return &v
	}).(BucketVersioningPtrOutput)
}

// While set to `true`, versioning is fully enabled for this bucket.
func (o BucketVersioningOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketVersioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BucketVersioningPtrOutput struct{ *pulumi.OutputState }

func (BucketVersioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioning)(nil)).Elem()
}

func (o BucketVersioningPtrOutput) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return o
}

func (o BucketVersioningPtrOutput) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return o
}

func (o BucketVersioningPtrOutput) Elem() BucketVersioningOutput {
	return o.ApplyT(func(v *BucketVersioning) BucketVersioning { return *v }).(BucketVersioningOutput)
}

// While set to `true`, versioning is fully enabled for this bucket.
func (o BucketVersioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketVersioning) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type BucketWebsite struct {
	// Behaves as the bucket's directory index where
	// missing objects are treated as potential directories.
	MainPageSuffix *string `pulumi:"mainPageSuffix"`
	// The custom object to return when a requested
	// resource is not found.
	NotFoundPage *string `pulumi:"notFoundPage"`
}

// BucketWebsiteInput is an input type that accepts BucketWebsiteArgs and BucketWebsiteOutput values.
// You can construct a concrete instance of `BucketWebsiteInput` via:
//
// 		 BucketWebsiteArgs{...}
//
type BucketWebsiteInput interface {
	pulumi.Input

	ToBucketWebsiteOutput() BucketWebsiteOutput
	ToBucketWebsiteOutputWithContext(context.Context) BucketWebsiteOutput
}

type BucketWebsiteArgs struct {
	// Behaves as the bucket's directory index where
	// missing objects are treated as potential directories.
	MainPageSuffix pulumi.StringPtrInput `pulumi:"mainPageSuffix"`
	// The custom object to return when a requested
	// resource is not found.
	NotFoundPage pulumi.StringPtrInput `pulumi:"notFoundPage"`
}

func (BucketWebsiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return i.ToBucketWebsiteOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput)
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput).ToBucketWebsitePtrOutputWithContext(ctx)
}

// BucketWebsitePtrInput is an input type that accepts BucketWebsiteArgs, BucketWebsitePtr and BucketWebsitePtrOutput values.
// You can construct a concrete instance of `BucketWebsitePtrInput` via:
//
// 		 BucketWebsiteArgs{...}
//
//  or:
//
// 		 nil
//
type BucketWebsitePtrInput interface {
	pulumi.Input

	ToBucketWebsitePtrOutput() BucketWebsitePtrOutput
	ToBucketWebsitePtrOutputWithContext(context.Context) BucketWebsitePtrOutput
}

type bucketWebsitePtrType BucketWebsiteArgs

func BucketWebsitePtr(v *BucketWebsiteArgs) BucketWebsitePtrInput {
	return (*bucketWebsitePtrType)(v)
}

func (*bucketWebsitePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsitePtrOutput)
}

type BucketWebsiteOutput struct{ *pulumi.OutputState }

func (BucketWebsiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o.ApplyT(func(v BucketWebsite) *BucketWebsite {
		return &v
	}).(BucketWebsitePtrOutput)
}

// Behaves as the bucket's directory index where
// missing objects are treated as potential directories.
func (o BucketWebsiteOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.MainPageSuffix }).(pulumi.StringPtrOutput)
}

// The custom object to return when a requested
// resource is not found.
func (o BucketWebsiteOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.NotFoundPage }).(pulumi.StringPtrOutput)
}

type BucketWebsitePtrOutput struct{ *pulumi.OutputState }

func (BucketWebsitePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) Elem() BucketWebsiteOutput {
	return o.ApplyT(func(v *BucketWebsite) BucketWebsite { return *v }).(BucketWebsiteOutput)
}

// Behaves as the bucket's directory index where
// missing objects are treated as potential directories.
func (o BucketWebsitePtrOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.MainPageSuffix
	}).(pulumi.StringPtrOutput)
}

// The custom object to return when a requested
// resource is not found.
func (o BucketWebsitePtrOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.NotFoundPage
	}).(pulumi.StringPtrOutput)
}

type DefaultObjectAccessControlProjectTeam struct {
	ProjectNumber *string `pulumi:"projectNumber"`
	Team          *string `pulumi:"team"`
}

// DefaultObjectAccessControlProjectTeamInput is an input type that accepts DefaultObjectAccessControlProjectTeamArgs and DefaultObjectAccessControlProjectTeamOutput values.
// You can construct a concrete instance of `DefaultObjectAccessControlProjectTeamInput` via:
//
// 		 DefaultObjectAccessControlProjectTeamArgs{...}
//
type DefaultObjectAccessControlProjectTeamInput interface {
	pulumi.Input

	ToDefaultObjectAccessControlProjectTeamOutput() DefaultObjectAccessControlProjectTeamOutput
	ToDefaultObjectAccessControlProjectTeamOutputWithContext(context.Context) DefaultObjectAccessControlProjectTeamOutput
}

type DefaultObjectAccessControlProjectTeamArgs struct {
	ProjectNumber pulumi.StringPtrInput `pulumi:"projectNumber"`
	Team          pulumi.StringPtrInput `pulumi:"team"`
}

func (DefaultObjectAccessControlProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamOutput() DefaultObjectAccessControlProjectTeamOutput {
	return i.ToDefaultObjectAccessControlProjectTeamOutputWithContext(context.Background())
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamOutput)
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return i.ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamOutput).ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx)
}

// DefaultObjectAccessControlProjectTeamPtrInput is an input type that accepts DefaultObjectAccessControlProjectTeamArgs, DefaultObjectAccessControlProjectTeamPtr and DefaultObjectAccessControlProjectTeamPtrOutput values.
// You can construct a concrete instance of `DefaultObjectAccessControlProjectTeamPtrInput` via:
//
// 		 DefaultObjectAccessControlProjectTeamArgs{...}
//
//  or:
//
// 		 nil
//
type DefaultObjectAccessControlProjectTeamPtrInput interface {
	pulumi.Input

	ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput
	ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Context) DefaultObjectAccessControlProjectTeamPtrOutput
}

type defaultObjectAccessControlProjectTeamPtrType DefaultObjectAccessControlProjectTeamArgs

func DefaultObjectAccessControlProjectTeamPtr(v *DefaultObjectAccessControlProjectTeamArgs) DefaultObjectAccessControlProjectTeamPtrInput {
	return (*defaultObjectAccessControlProjectTeamPtrType)(v)
}

func (*defaultObjectAccessControlProjectTeamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i *defaultObjectAccessControlProjectTeamPtrType) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return i.ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i *defaultObjectAccessControlProjectTeamPtrType) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamPtrOutput)
}

type DefaultObjectAccessControlProjectTeamOutput struct{ *pulumi.OutputState }

func (DefaultObjectAccessControlProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamOutput() DefaultObjectAccessControlProjectTeamOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return o.ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *DefaultObjectAccessControlProjectTeam {
		return &v
	}).(DefaultObjectAccessControlProjectTeamPtrOutput)
}
func (o DefaultObjectAccessControlProjectTeamOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

func (o DefaultObjectAccessControlProjectTeamOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type DefaultObjectAccessControlProjectTeamPtrOutput struct{ *pulumi.OutputState }

func (DefaultObjectAccessControlProjectTeamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) Elem() DefaultObjectAccessControlProjectTeamOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeam) DefaultObjectAccessControlProjectTeam { return *v }).(DefaultObjectAccessControlProjectTeamOutput)
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.ProjectNumber
	}).(pulumi.StringPtrOutput)
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.Team
	}).(pulumi.StringPtrOutput)
}

type ObjectAccessControlProjectTeam struct {
	ProjectNumber *string `pulumi:"projectNumber"`
	Team          *string `pulumi:"team"`
}

// ObjectAccessControlProjectTeamInput is an input type that accepts ObjectAccessControlProjectTeamArgs and ObjectAccessControlProjectTeamOutput values.
// You can construct a concrete instance of `ObjectAccessControlProjectTeamInput` via:
//
// 		 ObjectAccessControlProjectTeamArgs{...}
//
type ObjectAccessControlProjectTeamInput interface {
	pulumi.Input

	ToObjectAccessControlProjectTeamOutput() ObjectAccessControlProjectTeamOutput
	ToObjectAccessControlProjectTeamOutputWithContext(context.Context) ObjectAccessControlProjectTeamOutput
}

type ObjectAccessControlProjectTeamArgs struct {
	ProjectNumber pulumi.StringPtrInput `pulumi:"projectNumber"`
	Team          pulumi.StringPtrInput `pulumi:"team"`
}

func (ObjectAccessControlProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamOutput() ObjectAccessControlProjectTeamOutput {
	return i.ToObjectAccessControlProjectTeamOutputWithContext(context.Background())
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamOutput)
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return i.ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamOutput).ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx)
}

// ObjectAccessControlProjectTeamPtrInput is an input type that accepts ObjectAccessControlProjectTeamArgs, ObjectAccessControlProjectTeamPtr and ObjectAccessControlProjectTeamPtrOutput values.
// You can construct a concrete instance of `ObjectAccessControlProjectTeamPtrInput` via:
//
// 		 ObjectAccessControlProjectTeamArgs{...}
//
//  or:
//
// 		 nil
//
type ObjectAccessControlProjectTeamPtrInput interface {
	pulumi.Input

	ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput
	ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Context) ObjectAccessControlProjectTeamPtrOutput
}

type objectAccessControlProjectTeamPtrType ObjectAccessControlProjectTeamArgs

func ObjectAccessControlProjectTeamPtr(v *ObjectAccessControlProjectTeamArgs) ObjectAccessControlProjectTeamPtrInput {
	return (*objectAccessControlProjectTeamPtrType)(v)
}

func (*objectAccessControlProjectTeamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i *objectAccessControlProjectTeamPtrType) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return i.ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i *objectAccessControlProjectTeamPtrType) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamPtrOutput)
}

type ObjectAccessControlProjectTeamOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamOutput() ObjectAccessControlProjectTeamOutput {
	return o
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamOutput {
	return o
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return o.ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *ObjectAccessControlProjectTeam {
		return &v
	}).(ObjectAccessControlProjectTeamPtrOutput)
}
func (o ObjectAccessControlProjectTeamOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

func (o ObjectAccessControlProjectTeamOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type ObjectAccessControlProjectTeamPtrOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlProjectTeamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o ObjectAccessControlProjectTeamPtrOutput) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o ObjectAccessControlProjectTeamPtrOutput) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o ObjectAccessControlProjectTeamPtrOutput) Elem() ObjectAccessControlProjectTeamOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeam) ObjectAccessControlProjectTeam { return *v }).(ObjectAccessControlProjectTeamOutput)
}

func (o ObjectAccessControlProjectTeamPtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.ProjectNumber
	}).(pulumi.StringPtrOutput)
}

func (o ObjectAccessControlProjectTeamPtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.Team
	}).(pulumi.StringPtrOutput)
}

type TransferJobSchedule struct {
	// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
	ScheduleEndDate *TransferJobScheduleScheduleEndDate `pulumi:"scheduleEndDate"`
	// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
	ScheduleStartDate TransferJobScheduleScheduleStartDate `pulumi:"scheduleStartDate"`
	// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
	StartTimeOfDay *TransferJobScheduleStartTimeOfDay `pulumi:"startTimeOfDay"`
}

// TransferJobScheduleInput is an input type that accepts TransferJobScheduleArgs and TransferJobScheduleOutput values.
// You can construct a concrete instance of `TransferJobScheduleInput` via:
//
// 		 TransferJobScheduleArgs{...}
//
type TransferJobScheduleInput interface {
	pulumi.Input

	ToTransferJobScheduleOutput() TransferJobScheduleOutput
	ToTransferJobScheduleOutputWithContext(context.Context) TransferJobScheduleOutput
}

type TransferJobScheduleArgs struct {
	// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
	ScheduleEndDate TransferJobScheduleScheduleEndDatePtrInput `pulumi:"scheduleEndDate"`
	// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
	ScheduleStartDate TransferJobScheduleScheduleStartDateInput `pulumi:"scheduleStartDate"`
	// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
	StartTimeOfDay TransferJobScheduleStartTimeOfDayPtrInput `pulumi:"startTimeOfDay"`
}

func (TransferJobScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobSchedule)(nil)).Elem()
}

func (i TransferJobScheduleArgs) ToTransferJobScheduleOutput() TransferJobScheduleOutput {
	return i.ToTransferJobScheduleOutputWithContext(context.Background())
}

func (i TransferJobScheduleArgs) ToTransferJobScheduleOutputWithContext(ctx context.Context) TransferJobScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleOutput)
}

func (i TransferJobScheduleArgs) ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput {
	return i.ToTransferJobSchedulePtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleArgs) ToTransferJobSchedulePtrOutputWithContext(ctx context.Context) TransferJobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleOutput).ToTransferJobSchedulePtrOutputWithContext(ctx)
}

// TransferJobSchedulePtrInput is an input type that accepts TransferJobScheduleArgs, TransferJobSchedulePtr and TransferJobSchedulePtrOutput values.
// You can construct a concrete instance of `TransferJobSchedulePtrInput` via:
//
// 		 TransferJobScheduleArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobSchedulePtrInput interface {
	pulumi.Input

	ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput
	ToTransferJobSchedulePtrOutputWithContext(context.Context) TransferJobSchedulePtrOutput
}

type transferJobSchedulePtrType TransferJobScheduleArgs

func TransferJobSchedulePtr(v *TransferJobScheduleArgs) TransferJobSchedulePtrInput {
	return (*transferJobSchedulePtrType)(v)
}

func (*transferJobSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobSchedule)(nil)).Elem()
}

func (i *transferJobSchedulePtrType) ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput {
	return i.ToTransferJobSchedulePtrOutputWithContext(context.Background())
}

func (i *transferJobSchedulePtrType) ToTransferJobSchedulePtrOutputWithContext(ctx context.Context) TransferJobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobSchedulePtrOutput)
}

type TransferJobScheduleOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobSchedule)(nil)).Elem()
}

func (o TransferJobScheduleOutput) ToTransferJobScheduleOutput() TransferJobScheduleOutput {
	return o
}

func (o TransferJobScheduleOutput) ToTransferJobScheduleOutputWithContext(ctx context.Context) TransferJobScheduleOutput {
	return o
}

func (o TransferJobScheduleOutput) ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput {
	return o.ToTransferJobSchedulePtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleOutput) ToTransferJobSchedulePtrOutputWithContext(ctx context.Context) TransferJobSchedulePtrOutput {
	return o.ApplyT(func(v TransferJobSchedule) *TransferJobSchedule {
		return &v
	}).(TransferJobSchedulePtrOutput)
}

// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
func (o TransferJobScheduleOutput) ScheduleEndDate() TransferJobScheduleScheduleEndDatePtrOutput {
	return o.ApplyT(func(v TransferJobSchedule) *TransferJobScheduleScheduleEndDate { return v.ScheduleEndDate }).(TransferJobScheduleScheduleEndDatePtrOutput)
}

// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
func (o TransferJobScheduleOutput) ScheduleStartDate() TransferJobScheduleScheduleStartDateOutput {
	return o.ApplyT(func(v TransferJobSchedule) TransferJobScheduleScheduleStartDate { return v.ScheduleStartDate }).(TransferJobScheduleScheduleStartDateOutput)
}

// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
func (o TransferJobScheduleOutput) StartTimeOfDay() TransferJobScheduleStartTimeOfDayPtrOutput {
	return o.ApplyT(func(v TransferJobSchedule) *TransferJobScheduleStartTimeOfDay { return v.StartTimeOfDay }).(TransferJobScheduleStartTimeOfDayPtrOutput)
}

type TransferJobSchedulePtrOutput struct{ *pulumi.OutputState }

func (TransferJobSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobSchedule)(nil)).Elem()
}

func (o TransferJobSchedulePtrOutput) ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput {
	return o
}

func (o TransferJobSchedulePtrOutput) ToTransferJobSchedulePtrOutputWithContext(ctx context.Context) TransferJobSchedulePtrOutput {
	return o
}

func (o TransferJobSchedulePtrOutput) Elem() TransferJobScheduleOutput {
	return o.ApplyT(func(v *TransferJobSchedule) TransferJobSchedule { return *v }).(TransferJobScheduleOutput)
}

// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
func (o TransferJobSchedulePtrOutput) ScheduleEndDate() TransferJobScheduleScheduleEndDatePtrOutput {
	return o.ApplyT(func(v *TransferJobSchedule) *TransferJobScheduleScheduleEndDate {
		if v == nil {
			return nil
		}
		return v.ScheduleEndDate
	}).(TransferJobScheduleScheduleEndDatePtrOutput)
}

// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
func (o TransferJobSchedulePtrOutput) ScheduleStartDate() TransferJobScheduleScheduleStartDatePtrOutput {
	return o.ApplyT(func(v *TransferJobSchedule) *TransferJobScheduleScheduleStartDate {
		if v == nil {
			return nil
		}
		return &v.ScheduleStartDate
	}).(TransferJobScheduleScheduleStartDatePtrOutput)
}

// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
func (o TransferJobSchedulePtrOutput) StartTimeOfDay() TransferJobScheduleStartTimeOfDayPtrOutput {
	return o.ApplyT(func(v *TransferJobSchedule) *TransferJobScheduleStartTimeOfDay {
		if v == nil {
			return nil
		}
		return v.StartTimeOfDay
	}).(TransferJobScheduleStartTimeOfDayPtrOutput)
}

type TransferJobScheduleScheduleEndDate struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day int `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month int `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year int `pulumi:"year"`
}

// TransferJobScheduleScheduleEndDateInput is an input type that accepts TransferJobScheduleScheduleEndDateArgs and TransferJobScheduleScheduleEndDateOutput values.
// You can construct a concrete instance of `TransferJobScheduleScheduleEndDateInput` via:
//
// 		 TransferJobScheduleScheduleEndDateArgs{...}
//
type TransferJobScheduleScheduleEndDateInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleEndDateOutput() TransferJobScheduleScheduleEndDateOutput
	ToTransferJobScheduleScheduleEndDateOutputWithContext(context.Context) TransferJobScheduleScheduleEndDateOutput
}

type TransferJobScheduleScheduleEndDateArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year pulumi.IntInput `pulumi:"year"`
}

func (TransferJobScheduleScheduleEndDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleEndDate)(nil)).Elem()
}

func (i TransferJobScheduleScheduleEndDateArgs) ToTransferJobScheduleScheduleEndDateOutput() TransferJobScheduleScheduleEndDateOutput {
	return i.ToTransferJobScheduleScheduleEndDateOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleEndDateArgs) ToTransferJobScheduleScheduleEndDateOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleEndDateOutput)
}

func (i TransferJobScheduleScheduleEndDateArgs) ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput {
	return i.ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleEndDateArgs) ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleEndDateOutput).ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx)
}

// TransferJobScheduleScheduleEndDatePtrInput is an input type that accepts TransferJobScheduleScheduleEndDateArgs, TransferJobScheduleScheduleEndDatePtr and TransferJobScheduleScheduleEndDatePtrOutput values.
// You can construct a concrete instance of `TransferJobScheduleScheduleEndDatePtrInput` via:
//
// 		 TransferJobScheduleScheduleEndDateArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobScheduleScheduleEndDatePtrInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput
	ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(context.Context) TransferJobScheduleScheduleEndDatePtrOutput
}

type transferJobScheduleScheduleEndDatePtrType TransferJobScheduleScheduleEndDateArgs

func TransferJobScheduleScheduleEndDatePtr(v *TransferJobScheduleScheduleEndDateArgs) TransferJobScheduleScheduleEndDatePtrInput {
	return (*transferJobScheduleScheduleEndDatePtrType)(v)
}

func (*transferJobScheduleScheduleEndDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleScheduleEndDate)(nil)).Elem()
}

func (i *transferJobScheduleScheduleEndDatePtrType) ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput {
	return i.ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleScheduleEndDatePtrType) ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleEndDatePtrOutput)
}

type TransferJobScheduleScheduleEndDateOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleEndDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleEndDate)(nil)).Elem()
}

func (o TransferJobScheduleScheduleEndDateOutput) ToTransferJobScheduleScheduleEndDateOutput() TransferJobScheduleScheduleEndDateOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDateOutput) ToTransferJobScheduleScheduleEndDateOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDateOutput) ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput {
	return o.ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleScheduleEndDateOutput) ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDatePtrOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) *TransferJobScheduleScheduleEndDate {
		return &v
	}).(TransferJobScheduleScheduleEndDatePtrOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleEndDateOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleEndDateOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleEndDateOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleScheduleEndDatePtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleEndDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleScheduleEndDate)(nil)).Elem()
}

func (o TransferJobScheduleScheduleEndDatePtrOutput) ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDatePtrOutput) ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDatePtrOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDatePtrOutput) Elem() TransferJobScheduleScheduleEndDateOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleEndDate) TransferJobScheduleScheduleEndDate { return *v }).(TransferJobScheduleScheduleEndDateOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleEndDatePtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleEndDate) *int {
		if v == nil {
			return nil
		}
		return &v.Day
	}).(pulumi.IntPtrOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleEndDatePtrOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleEndDate) *int {
		if v == nil {
			return nil
		}
		return &v.Month
	}).(pulumi.IntPtrOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleEndDatePtrOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleEndDate) *int {
		if v == nil {
			return nil
		}
		return &v.Year
	}).(pulumi.IntPtrOutput)
}

type TransferJobScheduleScheduleStartDate struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day int `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month int `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year int `pulumi:"year"`
}

// TransferJobScheduleScheduleStartDateInput is an input type that accepts TransferJobScheduleScheduleStartDateArgs and TransferJobScheduleScheduleStartDateOutput values.
// You can construct a concrete instance of `TransferJobScheduleScheduleStartDateInput` via:
//
// 		 TransferJobScheduleScheduleStartDateArgs{...}
//
type TransferJobScheduleScheduleStartDateInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleStartDateOutput() TransferJobScheduleScheduleStartDateOutput
	ToTransferJobScheduleScheduleStartDateOutputWithContext(context.Context) TransferJobScheduleScheduleStartDateOutput
}

type TransferJobScheduleScheduleStartDateArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year pulumi.IntInput `pulumi:"year"`
}

func (TransferJobScheduleScheduleStartDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleStartDate)(nil)).Elem()
}

func (i TransferJobScheduleScheduleStartDateArgs) ToTransferJobScheduleScheduleStartDateOutput() TransferJobScheduleScheduleStartDateOutput {
	return i.ToTransferJobScheduleScheduleStartDateOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleStartDateArgs) ToTransferJobScheduleScheduleStartDateOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleStartDateOutput)
}

func (i TransferJobScheduleScheduleStartDateArgs) ToTransferJobScheduleScheduleStartDatePtrOutput() TransferJobScheduleScheduleStartDatePtrOutput {
	return i.ToTransferJobScheduleScheduleStartDatePtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleStartDateArgs) ToTransferJobScheduleScheduleStartDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleStartDateOutput).ToTransferJobScheduleScheduleStartDatePtrOutputWithContext(ctx)
}

// TransferJobScheduleScheduleStartDatePtrInput is an input type that accepts TransferJobScheduleScheduleStartDateArgs, TransferJobScheduleScheduleStartDatePtr and TransferJobScheduleScheduleStartDatePtrOutput values.
// You can construct a concrete instance of `TransferJobScheduleScheduleStartDatePtrInput` via:
//
// 		 TransferJobScheduleScheduleStartDateArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobScheduleScheduleStartDatePtrInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleStartDatePtrOutput() TransferJobScheduleScheduleStartDatePtrOutput
	ToTransferJobScheduleScheduleStartDatePtrOutputWithContext(context.Context) TransferJobScheduleScheduleStartDatePtrOutput
}

type transferJobScheduleScheduleStartDatePtrType TransferJobScheduleScheduleStartDateArgs

func TransferJobScheduleScheduleStartDatePtr(v *TransferJobScheduleScheduleStartDateArgs) TransferJobScheduleScheduleStartDatePtrInput {
	return (*transferJobScheduleScheduleStartDatePtrType)(v)
}

func (*transferJobScheduleScheduleStartDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleScheduleStartDate)(nil)).Elem()
}

func (i *transferJobScheduleScheduleStartDatePtrType) ToTransferJobScheduleScheduleStartDatePtrOutput() TransferJobScheduleScheduleStartDatePtrOutput {
	return i.ToTransferJobScheduleScheduleStartDatePtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleScheduleStartDatePtrType) ToTransferJobScheduleScheduleStartDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleStartDatePtrOutput)
}

type TransferJobScheduleScheduleStartDateOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleStartDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleStartDate)(nil)).Elem()
}

func (o TransferJobScheduleScheduleStartDateOutput) ToTransferJobScheduleScheduleStartDateOutput() TransferJobScheduleScheduleStartDateOutput {
	return o
}

func (o TransferJobScheduleScheduleStartDateOutput) ToTransferJobScheduleScheduleStartDateOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDateOutput {
	return o
}

func (o TransferJobScheduleScheduleStartDateOutput) ToTransferJobScheduleScheduleStartDatePtrOutput() TransferJobScheduleScheduleStartDatePtrOutput {
	return o.ToTransferJobScheduleScheduleStartDatePtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleScheduleStartDateOutput) ToTransferJobScheduleScheduleStartDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDatePtrOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDate) *TransferJobScheduleScheduleStartDate {
		return &v
	}).(TransferJobScheduleScheduleStartDatePtrOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleStartDateOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDate) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleStartDateOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDate) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleStartDateOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDate) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleScheduleStartDatePtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleStartDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleScheduleStartDate)(nil)).Elem()
}

func (o TransferJobScheduleScheduleStartDatePtrOutput) ToTransferJobScheduleScheduleStartDatePtrOutput() TransferJobScheduleScheduleStartDatePtrOutput {
	return o
}

func (o TransferJobScheduleScheduleStartDatePtrOutput) ToTransferJobScheduleScheduleStartDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDatePtrOutput {
	return o
}

func (o TransferJobScheduleScheduleStartDatePtrOutput) Elem() TransferJobScheduleScheduleStartDateOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleStartDate) TransferJobScheduleScheduleStartDate { return *v }).(TransferJobScheduleScheduleStartDateOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleStartDatePtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleStartDate) *int {
		if v == nil {
			return nil
		}
		return &v.Day
	}).(pulumi.IntPtrOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleStartDatePtrOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleStartDate) *int {
		if v == nil {
			return nil
		}
		return &v.Month
	}).(pulumi.IntPtrOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleStartDatePtrOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleStartDate) *int {
		if v == nil {
			return nil
		}
		return &v.Year
	}).(pulumi.IntPtrOutput)
}

type TransferJobScheduleStartTimeOfDay struct {
	// Hours of day in 24 hour format. Should be from 0 to 23
	Hours int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds int `pulumi:"seconds"`
}

// TransferJobScheduleStartTimeOfDayInput is an input type that accepts TransferJobScheduleStartTimeOfDayArgs and TransferJobScheduleStartTimeOfDayOutput values.
// You can construct a concrete instance of `TransferJobScheduleStartTimeOfDayInput` via:
//
// 		 TransferJobScheduleStartTimeOfDayArgs{...}
//
type TransferJobScheduleStartTimeOfDayInput interface {
	pulumi.Input

	ToTransferJobScheduleStartTimeOfDayOutput() TransferJobScheduleStartTimeOfDayOutput
	ToTransferJobScheduleStartTimeOfDayOutputWithContext(context.Context) TransferJobScheduleStartTimeOfDayOutput
}

type TransferJobScheduleStartTimeOfDayArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TransferJobScheduleStartTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStartTimeOfDay)(nil)).Elem()
}

func (i TransferJobScheduleStartTimeOfDayArgs) ToTransferJobScheduleStartTimeOfDayOutput() TransferJobScheduleStartTimeOfDayOutput {
	return i.ToTransferJobScheduleStartTimeOfDayOutputWithContext(context.Background())
}

func (i TransferJobScheduleStartTimeOfDayArgs) ToTransferJobScheduleStartTimeOfDayOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStartTimeOfDayOutput)
}

func (i TransferJobScheduleStartTimeOfDayArgs) ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput {
	return i.ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleStartTimeOfDayArgs) ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStartTimeOfDayOutput).ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx)
}

// TransferJobScheduleStartTimeOfDayPtrInput is an input type that accepts TransferJobScheduleStartTimeOfDayArgs, TransferJobScheduleStartTimeOfDayPtr and TransferJobScheduleStartTimeOfDayPtrOutput values.
// You can construct a concrete instance of `TransferJobScheduleStartTimeOfDayPtrInput` via:
//
// 		 TransferJobScheduleStartTimeOfDayArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobScheduleStartTimeOfDayPtrInput interface {
	pulumi.Input

	ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput
	ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(context.Context) TransferJobScheduleStartTimeOfDayPtrOutput
}

type transferJobScheduleStartTimeOfDayPtrType TransferJobScheduleStartTimeOfDayArgs

func TransferJobScheduleStartTimeOfDayPtr(v *TransferJobScheduleStartTimeOfDayArgs) TransferJobScheduleStartTimeOfDayPtrInput {
	return (*transferJobScheduleStartTimeOfDayPtrType)(v)
}

func (*transferJobScheduleStartTimeOfDayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStartTimeOfDay)(nil)).Elem()
}

func (i *transferJobScheduleStartTimeOfDayPtrType) ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput {
	return i.ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleStartTimeOfDayPtrType) ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStartTimeOfDayPtrOutput)
}

type TransferJobScheduleStartTimeOfDayOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStartTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStartTimeOfDay)(nil)).Elem()
}

func (o TransferJobScheduleStartTimeOfDayOutput) ToTransferJobScheduleStartTimeOfDayOutput() TransferJobScheduleStartTimeOfDayOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayOutput) ToTransferJobScheduleStartTimeOfDayOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayOutput) ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput {
	return o.ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleStartTimeOfDayOutput) ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) *TransferJobScheduleStartTimeOfDay {
		return &v
	}).(TransferJobScheduleStartTimeOfDayPtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23
func (o TransferJobScheduleStartTimeOfDayOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TransferJobScheduleStartTimeOfDayOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Seconds }).(pulumi.IntOutput)
}

type TransferJobScheduleStartTimeOfDayPtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStartTimeOfDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStartTimeOfDay)(nil)).Elem()
}

func (o TransferJobScheduleStartTimeOfDayPtrOutput) ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayPtrOutput) ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayPtrOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayPtrOutput) Elem() TransferJobScheduleStartTimeOfDayOutput {
	return o.ApplyT(func(v *TransferJobScheduleStartTimeOfDay) TransferJobScheduleStartTimeOfDay { return *v }).(TransferJobScheduleStartTimeOfDayOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23
func (o TransferJobScheduleStartTimeOfDayPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleStartTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleStartTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TransferJobScheduleStartTimeOfDayPtrOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleStartTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return &v.Nanos
	}).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransferJobScheduleStartTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

type TransferJobTransferSpec struct {
	// An AWS S3 data source. Structure documented below.
	AwsS3DataSource *TransferJobTransferSpecAwsS3DataSource `pulumi:"awsS3DataSource"`
	// A Google Cloud Storage data sink. Structure documented below.
	GcsDataSink *TransferJobTransferSpecGcsDataSink `pulumi:"gcsDataSink"`
	// A Google Cloud Storage data source. Structure documented below.
	GcsDataSource *TransferJobTransferSpecGcsDataSource `pulumi:"gcsDataSource"`
	// An HTTP URL data source. Structure documented below.
	HttpDataSource *TransferJobTransferSpecHttpDataSource `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
	ObjectConditions *TransferJobTransferSpecObjectConditions `pulumi:"objectConditions"`
	// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
	TransferOptions *TransferJobTransferSpecTransferOptions `pulumi:"transferOptions"`
}

// TransferJobTransferSpecInput is an input type that accepts TransferJobTransferSpecArgs and TransferJobTransferSpecOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecInput` via:
//
// 		 TransferJobTransferSpecArgs{...}
//
type TransferJobTransferSpecInput interface {
	pulumi.Input

	ToTransferJobTransferSpecOutput() TransferJobTransferSpecOutput
	ToTransferJobTransferSpecOutputWithContext(context.Context) TransferJobTransferSpecOutput
}

type TransferJobTransferSpecArgs struct {
	// An AWS S3 data source. Structure documented below.
	AwsS3DataSource TransferJobTransferSpecAwsS3DataSourcePtrInput `pulumi:"awsS3DataSource"`
	// A Google Cloud Storage data sink. Structure documented below.
	GcsDataSink TransferJobTransferSpecGcsDataSinkPtrInput `pulumi:"gcsDataSink"`
	// A Google Cloud Storage data source. Structure documented below.
	GcsDataSource TransferJobTransferSpecGcsDataSourcePtrInput `pulumi:"gcsDataSource"`
	// An HTTP URL data source. Structure documented below.
	HttpDataSource TransferJobTransferSpecHttpDataSourcePtrInput `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
	ObjectConditions TransferJobTransferSpecObjectConditionsPtrInput `pulumi:"objectConditions"`
	// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
	TransferOptions TransferJobTransferSpecTransferOptionsPtrInput `pulumi:"transferOptions"`
}

func (TransferJobTransferSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpec)(nil)).Elem()
}

func (i TransferJobTransferSpecArgs) ToTransferJobTransferSpecOutput() TransferJobTransferSpecOutput {
	return i.ToTransferJobTransferSpecOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecArgs) ToTransferJobTransferSpecOutputWithContext(ctx context.Context) TransferJobTransferSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecOutput)
}

func (i TransferJobTransferSpecArgs) ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput {
	return i.ToTransferJobTransferSpecPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecArgs) ToTransferJobTransferSpecPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecOutput).ToTransferJobTransferSpecPtrOutputWithContext(ctx)
}

// TransferJobTransferSpecPtrInput is an input type that accepts TransferJobTransferSpecArgs, TransferJobTransferSpecPtr and TransferJobTransferSpecPtrOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecPtrInput` via:
//
// 		 TransferJobTransferSpecArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobTransferSpecPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput
	ToTransferJobTransferSpecPtrOutputWithContext(context.Context) TransferJobTransferSpecPtrOutput
}

type transferJobTransferSpecPtrType TransferJobTransferSpecArgs

func TransferJobTransferSpecPtr(v *TransferJobTransferSpecArgs) TransferJobTransferSpecPtrInput {
	return (*transferJobTransferSpecPtrType)(v)
}

func (*transferJobTransferSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpec)(nil)).Elem()
}

func (i *transferJobTransferSpecPtrType) ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput {
	return i.ToTransferJobTransferSpecPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecPtrType) ToTransferJobTransferSpecPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecPtrOutput)
}

type TransferJobTransferSpecOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpec)(nil)).Elem()
}

func (o TransferJobTransferSpecOutput) ToTransferJobTransferSpecOutput() TransferJobTransferSpecOutput {
	return o
}

func (o TransferJobTransferSpecOutput) ToTransferJobTransferSpecOutputWithContext(ctx context.Context) TransferJobTransferSpecOutput {
	return o
}

func (o TransferJobTransferSpecOutput) ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput {
	return o.ToTransferJobTransferSpecPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecOutput) ToTransferJobTransferSpecPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpec {
		return &v
	}).(TransferJobTransferSpecPtrOutput)
}

// An AWS S3 data source. Structure documented below.
func (o TransferJobTransferSpecOutput) AwsS3DataSource() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecAwsS3DataSource { return v.AwsS3DataSource }).(TransferJobTransferSpecAwsS3DataSourcePtrOutput)
}

// A Google Cloud Storage data sink. Structure documented below.
func (o TransferJobTransferSpecOutput) GcsDataSink() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecGcsDataSink { return v.GcsDataSink }).(TransferJobTransferSpecGcsDataSinkPtrOutput)
}

// A Google Cloud Storage data source. Structure documented below.
func (o TransferJobTransferSpecOutput) GcsDataSource() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecGcsDataSource { return v.GcsDataSource }).(TransferJobTransferSpecGcsDataSourcePtrOutput)
}

// An HTTP URL data source. Structure documented below.
func (o TransferJobTransferSpecOutput) HttpDataSource() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecHttpDataSource { return v.HttpDataSource }).(TransferJobTransferSpecHttpDataSourcePtrOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
func (o TransferJobTransferSpecOutput) ObjectConditions() TransferJobTransferSpecObjectConditionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecObjectConditions { return v.ObjectConditions }).(TransferJobTransferSpecObjectConditionsPtrOutput)
}

// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
func (o TransferJobTransferSpecOutput) TransferOptions() TransferJobTransferSpecTransferOptionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecTransferOptions { return v.TransferOptions }).(TransferJobTransferSpecTransferOptionsPtrOutput)
}

type TransferJobTransferSpecPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpec)(nil)).Elem()
}

func (o TransferJobTransferSpecPtrOutput) ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput {
	return o
}

func (o TransferJobTransferSpecPtrOutput) ToTransferJobTransferSpecPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecPtrOutput {
	return o
}

func (o TransferJobTransferSpecPtrOutput) Elem() TransferJobTransferSpecOutput {
	return o.ApplyT(func(v *TransferJobTransferSpec) TransferJobTransferSpec { return *v }).(TransferJobTransferSpecOutput)
}

// An AWS S3 data source. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) AwsS3DataSource() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpec) *TransferJobTransferSpecAwsS3DataSource {
		if v == nil {
			return nil
		}
		return v.AwsS3DataSource
	}).(TransferJobTransferSpecAwsS3DataSourcePtrOutput)
}

// A Google Cloud Storage data sink. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) GcsDataSink() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpec) *TransferJobTransferSpecGcsDataSink {
		if v == nil {
			return nil
		}
		return v.GcsDataSink
	}).(TransferJobTransferSpecGcsDataSinkPtrOutput)
}

// A Google Cloud Storage data source. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) GcsDataSource() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpec) *TransferJobTransferSpecGcsDataSource {
		if v == nil {
			return nil
		}
		return v.GcsDataSource
	}).(TransferJobTransferSpecGcsDataSourcePtrOutput)
}

// An HTTP URL data source. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) HttpDataSource() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpec) *TransferJobTransferSpecHttpDataSource {
		if v == nil {
			return nil
		}
		return v.HttpDataSource
	}).(TransferJobTransferSpecHttpDataSourcePtrOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) ObjectConditions() TransferJobTransferSpecObjectConditionsPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpec) *TransferJobTransferSpecObjectConditions {
		if v == nil {
			return nil
		}
		return v.ObjectConditions
	}).(TransferJobTransferSpecObjectConditionsPtrOutput)
}

// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) TransferOptions() TransferJobTransferSpecTransferOptionsPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpec) *TransferJobTransferSpecTransferOptions {
		if v == nil {
			return nil
		}
		return v.TransferOptions
	}).(TransferJobTransferSpecTransferOptionsPtrOutput)
}

type TransferJobTransferSpecAwsS3DataSource struct {
	// AWS credentials block.
	AwsAccessKey TransferJobTransferSpecAwsS3DataSourceAwsAccessKey `pulumi:"awsAccessKey"`
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

// TransferJobTransferSpecAwsS3DataSourceInput is an input type that accepts TransferJobTransferSpecAwsS3DataSourceArgs and TransferJobTransferSpecAwsS3DataSourceOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecAwsS3DataSourceInput` via:
//
// 		 TransferJobTransferSpecAwsS3DataSourceArgs{...}
//
type TransferJobTransferSpecAwsS3DataSourceInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourceOutput() TransferJobTransferSpecAwsS3DataSourceOutput
	ToTransferJobTransferSpecAwsS3DataSourceOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourceOutput
}

type TransferJobTransferSpecAwsS3DataSourceArgs struct {
	// AWS credentials block.
	AwsAccessKey TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyInput `pulumi:"awsAccessKey"`
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecAwsS3DataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSource)(nil)).Elem()
}

func (i TransferJobTransferSpecAwsS3DataSourceArgs) ToTransferJobTransferSpecAwsS3DataSourceOutput() TransferJobTransferSpecAwsS3DataSourceOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceArgs) ToTransferJobTransferSpecAwsS3DataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceOutput)
}

func (i TransferJobTransferSpecAwsS3DataSourceArgs) ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceArgs) ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceOutput).ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx)
}

// TransferJobTransferSpecAwsS3DataSourcePtrInput is an input type that accepts TransferJobTransferSpecAwsS3DataSourceArgs, TransferJobTransferSpecAwsS3DataSourcePtr and TransferJobTransferSpecAwsS3DataSourcePtrOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecAwsS3DataSourcePtrInput` via:
//
// 		 TransferJobTransferSpecAwsS3DataSourceArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobTransferSpecAwsS3DataSourcePtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput
	ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput
}

type transferJobTransferSpecAwsS3DataSourcePtrType TransferJobTransferSpecAwsS3DataSourceArgs

func TransferJobTransferSpecAwsS3DataSourcePtr(v *TransferJobTransferSpecAwsS3DataSourceArgs) TransferJobTransferSpecAwsS3DataSourcePtrInput {
	return (*transferJobTransferSpecAwsS3DataSourcePtrType)(v)
}

func (*transferJobTransferSpecAwsS3DataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecAwsS3DataSource)(nil)).Elem()
}

func (i *transferJobTransferSpecAwsS3DataSourcePtrType) ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecAwsS3DataSourcePtrType) ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourcePtrOutput)
}

type TransferJobTransferSpecAwsS3DataSourceOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourceOutput) ToTransferJobTransferSpecAwsS3DataSourceOutput() TransferJobTransferSpecAwsS3DataSourceOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceOutput) ToTransferJobTransferSpecAwsS3DataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceOutput) ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o.ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecAwsS3DataSourceOutput) ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSource) *TransferJobTransferSpecAwsS3DataSource {
		return &v
	}).(TransferJobTransferSpecAwsS3DataSourcePtrOutput)
}

// AWS credentials block.
func (o TransferJobTransferSpecAwsS3DataSourceOutput) AwsAccessKey() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSource) TransferJobTransferSpecAwsS3DataSourceAwsAccessKey {
		return v.AwsAccessKey
	}).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecAwsS3DataSourceOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecAwsS3DataSourcePtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecAwsS3DataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) Elem() TransferJobTransferSpecAwsS3DataSourceOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecAwsS3DataSource) TransferJobTransferSpecAwsS3DataSource { return *v }).(TransferJobTransferSpecAwsS3DataSourceOutput)
}

// AWS credentials block.
func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) AwsAccessKey() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecAwsS3DataSource) *TransferJobTransferSpecAwsS3DataSourceAwsAccessKey {
		if v == nil {
			return nil
		}
		return &v.AwsAccessKey
	}).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecAwsS3DataSource) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKey struct {
	// AWS Key ID.
	AccessKeyId string `pulumi:"accessKeyId"`
	// AWS Secret Access Key.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyInput is an input type that accepts TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs and TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyInput` via:
//
// 		 TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs{...}
//
type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput
	ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs struct {
	// AWS Key ID.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// AWS Secret Access Key.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSourceAwsAccessKey)(nil)).Elem()
}

func (i TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput)
}

func (i TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput).ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutputWithContext(ctx)
}

// TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrInput is an input type that accepts TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs, TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtr and TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrInput` via:
//
// 		 TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput
	ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput
}

type transferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrType TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs

func TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtr(v *TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrInput {
	return (*transferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrType)(v)
}

func (*transferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecAwsS3DataSourceAwsAccessKey)(nil)).Elem()
}

func (i *transferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrType) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrType) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput)
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSourceAwsAccessKey)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput {
	return o.ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceAwsAccessKey) *TransferJobTransferSpecAwsS3DataSourceAwsAccessKey {
		return &v
	}).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput)
}

// AWS Key ID.
func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceAwsAccessKey) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// AWS Secret Access Key.
func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceAwsAccessKey) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecAwsS3DataSourceAwsAccessKey)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput) Elem() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecAwsS3DataSourceAwsAccessKey) TransferJobTransferSpecAwsS3DataSourceAwsAccessKey {
		return *v
	}).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput)
}

// AWS Key ID.
func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecAwsS3DataSourceAwsAccessKey) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// AWS Secret Access Key.
func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecAwsS3DataSourceAwsAccessKey) *string {
		if v == nil {
			return nil
		}
		return &v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecGcsDataSink struct {
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

// TransferJobTransferSpecGcsDataSinkInput is an input type that accepts TransferJobTransferSpecGcsDataSinkArgs and TransferJobTransferSpecGcsDataSinkOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecGcsDataSinkInput` via:
//
// 		 TransferJobTransferSpecGcsDataSinkArgs{...}
//
type TransferJobTransferSpecGcsDataSinkInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSinkOutput() TransferJobTransferSpecGcsDataSinkOutput
	ToTransferJobTransferSpecGcsDataSinkOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSinkOutput
}

type TransferJobTransferSpecGcsDataSinkArgs struct {
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecGcsDataSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSink)(nil)).Elem()
}

func (i TransferJobTransferSpecGcsDataSinkArgs) ToTransferJobTransferSpecGcsDataSinkOutput() TransferJobTransferSpecGcsDataSinkOutput {
	return i.ToTransferJobTransferSpecGcsDataSinkOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSinkArgs) ToTransferJobTransferSpecGcsDataSinkOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSinkOutput)
}

func (i TransferJobTransferSpecGcsDataSinkArgs) ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSinkArgs) ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSinkOutput).ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx)
}

// TransferJobTransferSpecGcsDataSinkPtrInput is an input type that accepts TransferJobTransferSpecGcsDataSinkArgs, TransferJobTransferSpecGcsDataSinkPtr and TransferJobTransferSpecGcsDataSinkPtrOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecGcsDataSinkPtrInput` via:
//
// 		 TransferJobTransferSpecGcsDataSinkArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobTransferSpecGcsDataSinkPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput
	ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput
}

type transferJobTransferSpecGcsDataSinkPtrType TransferJobTransferSpecGcsDataSinkArgs

func TransferJobTransferSpecGcsDataSinkPtr(v *TransferJobTransferSpecGcsDataSinkArgs) TransferJobTransferSpecGcsDataSinkPtrInput {
	return (*transferJobTransferSpecGcsDataSinkPtrType)(v)
}

func (*transferJobTransferSpecGcsDataSinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSink)(nil)).Elem()
}

func (i *transferJobTransferSpecGcsDataSinkPtrType) ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecGcsDataSinkPtrType) ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSinkPtrOutput)
}

type TransferJobTransferSpecGcsDataSinkOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSink)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSinkOutput) ToTransferJobTransferSpecGcsDataSinkOutput() TransferJobTransferSpecGcsDataSinkOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkOutput) ToTransferJobTransferSpecGcsDataSinkOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkOutput) ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o.ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecGcsDataSinkOutput) ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSink) *TransferJobTransferSpecGcsDataSink {
		return &v
	}).(TransferJobTransferSpecGcsDataSinkPtrOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSinkOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSink) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSinkPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSink)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSinkPtrOutput) ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkPtrOutput) ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkPtrOutput) Elem() TransferJobTransferSpecGcsDataSinkOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecGcsDataSink) TransferJobTransferSpecGcsDataSink { return *v }).(TransferJobTransferSpecGcsDataSinkOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSinkPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecGcsDataSink) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecGcsDataSource struct {
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

// TransferJobTransferSpecGcsDataSourceInput is an input type that accepts TransferJobTransferSpecGcsDataSourceArgs and TransferJobTransferSpecGcsDataSourceOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecGcsDataSourceInput` via:
//
// 		 TransferJobTransferSpecGcsDataSourceArgs{...}
//
type TransferJobTransferSpecGcsDataSourceInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSourceOutput() TransferJobTransferSpecGcsDataSourceOutput
	ToTransferJobTransferSpecGcsDataSourceOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSourceOutput
}

type TransferJobTransferSpecGcsDataSourceArgs struct {
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecGcsDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSource)(nil)).Elem()
}

func (i TransferJobTransferSpecGcsDataSourceArgs) ToTransferJobTransferSpecGcsDataSourceOutput() TransferJobTransferSpecGcsDataSourceOutput {
	return i.ToTransferJobTransferSpecGcsDataSourceOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSourceArgs) ToTransferJobTransferSpecGcsDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSourceOutput)
}

func (i TransferJobTransferSpecGcsDataSourceArgs) ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSourceArgs) ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSourceOutput).ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx)
}

// TransferJobTransferSpecGcsDataSourcePtrInput is an input type that accepts TransferJobTransferSpecGcsDataSourceArgs, TransferJobTransferSpecGcsDataSourcePtr and TransferJobTransferSpecGcsDataSourcePtrOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecGcsDataSourcePtrInput` via:
//
// 		 TransferJobTransferSpecGcsDataSourceArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobTransferSpecGcsDataSourcePtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput
	ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput
}

type transferJobTransferSpecGcsDataSourcePtrType TransferJobTransferSpecGcsDataSourceArgs

func TransferJobTransferSpecGcsDataSourcePtr(v *TransferJobTransferSpecGcsDataSourceArgs) TransferJobTransferSpecGcsDataSourcePtrInput {
	return (*transferJobTransferSpecGcsDataSourcePtrType)(v)
}

func (*transferJobTransferSpecGcsDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSource)(nil)).Elem()
}

func (i *transferJobTransferSpecGcsDataSourcePtrType) ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecGcsDataSourcePtrType) ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSourcePtrOutput)
}

type TransferJobTransferSpecGcsDataSourceOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSourceOutput) ToTransferJobTransferSpecGcsDataSourceOutput() TransferJobTransferSpecGcsDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourceOutput) ToTransferJobTransferSpecGcsDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourceOutput) ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o.ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecGcsDataSourceOutput) ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSource) *TransferJobTransferSpecGcsDataSource {
		return &v
	}).(TransferJobTransferSpecGcsDataSourcePtrOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSourceOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSourcePtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSourcePtrOutput) ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourcePtrOutput) ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourcePtrOutput) Elem() TransferJobTransferSpecGcsDataSourceOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecGcsDataSource) TransferJobTransferSpecGcsDataSource { return *v }).(TransferJobTransferSpecGcsDataSourceOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSourcePtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecGcsDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecHttpDataSource struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl string `pulumi:"listUrl"`
}

// TransferJobTransferSpecHttpDataSourceInput is an input type that accepts TransferJobTransferSpecHttpDataSourceArgs and TransferJobTransferSpecHttpDataSourceOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecHttpDataSourceInput` via:
//
// 		 TransferJobTransferSpecHttpDataSourceArgs{...}
//
type TransferJobTransferSpecHttpDataSourceInput interface {
	pulumi.Input

	ToTransferJobTransferSpecHttpDataSourceOutput() TransferJobTransferSpecHttpDataSourceOutput
	ToTransferJobTransferSpecHttpDataSourceOutputWithContext(context.Context) TransferJobTransferSpecHttpDataSourceOutput
}

type TransferJobTransferSpecHttpDataSourceArgs struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl pulumi.StringInput `pulumi:"listUrl"`
}

func (TransferJobTransferSpecHttpDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecHttpDataSource)(nil)).Elem()
}

func (i TransferJobTransferSpecHttpDataSourceArgs) ToTransferJobTransferSpecHttpDataSourceOutput() TransferJobTransferSpecHttpDataSourceOutput {
	return i.ToTransferJobTransferSpecHttpDataSourceOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecHttpDataSourceArgs) ToTransferJobTransferSpecHttpDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecHttpDataSourceOutput)
}

func (i TransferJobTransferSpecHttpDataSourceArgs) ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecHttpDataSourceArgs) ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecHttpDataSourceOutput).ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx)
}

// TransferJobTransferSpecHttpDataSourcePtrInput is an input type that accepts TransferJobTransferSpecHttpDataSourceArgs, TransferJobTransferSpecHttpDataSourcePtr and TransferJobTransferSpecHttpDataSourcePtrOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecHttpDataSourcePtrInput` via:
//
// 		 TransferJobTransferSpecHttpDataSourceArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobTransferSpecHttpDataSourcePtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput
	ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput
}

type transferJobTransferSpecHttpDataSourcePtrType TransferJobTransferSpecHttpDataSourceArgs

func TransferJobTransferSpecHttpDataSourcePtr(v *TransferJobTransferSpecHttpDataSourceArgs) TransferJobTransferSpecHttpDataSourcePtrInput {
	return (*transferJobTransferSpecHttpDataSourcePtrType)(v)
}

func (*transferJobTransferSpecHttpDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecHttpDataSource)(nil)).Elem()
}

func (i *transferJobTransferSpecHttpDataSourcePtrType) ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecHttpDataSourcePtrType) ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecHttpDataSourcePtrOutput)
}

type TransferJobTransferSpecHttpDataSourceOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecHttpDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecHttpDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecHttpDataSourceOutput) ToTransferJobTransferSpecHttpDataSourceOutput() TransferJobTransferSpecHttpDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourceOutput) ToTransferJobTransferSpecHttpDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourceOutput) ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o.ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecHttpDataSourceOutput) ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecHttpDataSource) *TransferJobTransferSpecHttpDataSource {
		return &v
	}).(TransferJobTransferSpecHttpDataSourcePtrOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o TransferJobTransferSpecHttpDataSourceOutput) ListUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecHttpDataSource) string { return v.ListUrl }).(pulumi.StringOutput)
}

type TransferJobTransferSpecHttpDataSourcePtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecHttpDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecHttpDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecHttpDataSourcePtrOutput) ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourcePtrOutput) ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourcePtrOutput) Elem() TransferJobTransferSpecHttpDataSourceOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecHttpDataSource) TransferJobTransferSpecHttpDataSource { return *v }).(TransferJobTransferSpecHttpDataSourceOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o TransferJobTransferSpecHttpDataSourcePtrOutput) ListUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecHttpDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.ListUrl
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecObjectConditions struct {
	// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	ExcludePrefixes []string `pulumi:"excludePrefixes"`
	// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	IncludePrefixes []string `pulumi:"includePrefixes"`
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MaxTimeElapsedSinceLastModification *string `pulumi:"maxTimeElapsedSinceLastModification"`
	//
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MinTimeElapsedSinceLastModification *string `pulumi:"minTimeElapsedSinceLastModification"`
}

// TransferJobTransferSpecObjectConditionsInput is an input type that accepts TransferJobTransferSpecObjectConditionsArgs and TransferJobTransferSpecObjectConditionsOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecObjectConditionsInput` via:
//
// 		 TransferJobTransferSpecObjectConditionsArgs{...}
//
type TransferJobTransferSpecObjectConditionsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecObjectConditionsOutput() TransferJobTransferSpecObjectConditionsOutput
	ToTransferJobTransferSpecObjectConditionsOutputWithContext(context.Context) TransferJobTransferSpecObjectConditionsOutput
}

type TransferJobTransferSpecObjectConditionsArgs struct {
	// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	ExcludePrefixes pulumi.StringArrayInput `pulumi:"excludePrefixes"`
	// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	IncludePrefixes pulumi.StringArrayInput `pulumi:"includePrefixes"`
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MaxTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"maxTimeElapsedSinceLastModification"`
	//
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MinTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"minTimeElapsedSinceLastModification"`
}

func (TransferJobTransferSpecObjectConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecObjectConditions)(nil)).Elem()
}

func (i TransferJobTransferSpecObjectConditionsArgs) ToTransferJobTransferSpecObjectConditionsOutput() TransferJobTransferSpecObjectConditionsOutput {
	return i.ToTransferJobTransferSpecObjectConditionsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecObjectConditionsArgs) ToTransferJobTransferSpecObjectConditionsOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecObjectConditionsOutput)
}

func (i TransferJobTransferSpecObjectConditionsArgs) ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput {
	return i.ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecObjectConditionsArgs) ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecObjectConditionsOutput).ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx)
}

// TransferJobTransferSpecObjectConditionsPtrInput is an input type that accepts TransferJobTransferSpecObjectConditionsArgs, TransferJobTransferSpecObjectConditionsPtr and TransferJobTransferSpecObjectConditionsPtrOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecObjectConditionsPtrInput` via:
//
// 		 TransferJobTransferSpecObjectConditionsArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobTransferSpecObjectConditionsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput
	ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(context.Context) TransferJobTransferSpecObjectConditionsPtrOutput
}

type transferJobTransferSpecObjectConditionsPtrType TransferJobTransferSpecObjectConditionsArgs

func TransferJobTransferSpecObjectConditionsPtr(v *TransferJobTransferSpecObjectConditionsArgs) TransferJobTransferSpecObjectConditionsPtrInput {
	return (*transferJobTransferSpecObjectConditionsPtrType)(v)
}

func (*transferJobTransferSpecObjectConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecObjectConditions)(nil)).Elem()
}

func (i *transferJobTransferSpecObjectConditionsPtrType) ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput {
	return i.ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecObjectConditionsPtrType) ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecObjectConditionsPtrOutput)
}

type TransferJobTransferSpecObjectConditionsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecObjectConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecObjectConditions)(nil)).Elem()
}

func (o TransferJobTransferSpecObjectConditionsOutput) ToTransferJobTransferSpecObjectConditionsOutput() TransferJobTransferSpecObjectConditionsOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsOutput) ToTransferJobTransferSpecObjectConditionsOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsOutput) ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput {
	return o.ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecObjectConditionsOutput) ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) *TransferJobTransferSpecObjectConditions {
		return &v
	}).(TransferJobTransferSpecObjectConditionsPtrOutput)
}

// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) []string { return v.ExcludePrefixes }).(pulumi.StringArrayOutput)
}

// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) []string { return v.IncludePrefixes }).(pulumi.StringArrayOutput)
}

// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) *string { return v.MaxTimeElapsedSinceLastModification }).(pulumi.StringPtrOutput)
}

//
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) *string { return v.MinTimeElapsedSinceLastModification }).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecObjectConditionsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecObjectConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecObjectConditions)(nil)).Elem()
}

func (o TransferJobTransferSpecObjectConditionsPtrOutput) ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsPtrOutput) ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsPtrOutput) Elem() TransferJobTransferSpecObjectConditionsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecObjectConditions) TransferJobTransferSpecObjectConditions { return *v }).(TransferJobTransferSpecObjectConditionsOutput)
}

// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsPtrOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecObjectConditions) []string {
		if v == nil {
			return nil
		}
		return v.ExcludePrefixes
	}).(pulumi.StringArrayOutput)
}

// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsPtrOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecObjectConditions) []string {
		if v == nil {
			return nil
		}
		return v.IncludePrefixes
	}).(pulumi.StringArrayOutput)
}

// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsPtrOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecObjectConditions) *string {
		if v == nil {
			return nil
		}
		return v.MaxTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

//
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsPtrOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecObjectConditions) *string {
		if v == nil {
			return nil
		}
		return v.MinTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecTransferOptions struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer *bool `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. Note that this option and
	// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
	DeleteObjectsUniqueInSink *bool `pulumi:"deleteObjectsUniqueInSink"`
	// Whether overwriting objects that already exist in the sink is allowed.
	OverwriteObjectsAlreadyExistingInSink *bool `pulumi:"overwriteObjectsAlreadyExistingInSink"`
}

// TransferJobTransferSpecTransferOptionsInput is an input type that accepts TransferJobTransferSpecTransferOptionsArgs and TransferJobTransferSpecTransferOptionsOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecTransferOptionsInput` via:
//
// 		 TransferJobTransferSpecTransferOptionsArgs{...}
//
type TransferJobTransferSpecTransferOptionsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecTransferOptionsOutput() TransferJobTransferSpecTransferOptionsOutput
	ToTransferJobTransferSpecTransferOptionsOutputWithContext(context.Context) TransferJobTransferSpecTransferOptionsOutput
}

type TransferJobTransferSpecTransferOptionsArgs struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer pulumi.BoolPtrInput `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. Note that this option and
	// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
	DeleteObjectsUniqueInSink pulumi.BoolPtrInput `pulumi:"deleteObjectsUniqueInSink"`
	// Whether overwriting objects that already exist in the sink is allowed.
	OverwriteObjectsAlreadyExistingInSink pulumi.BoolPtrInput `pulumi:"overwriteObjectsAlreadyExistingInSink"`
}

func (TransferJobTransferSpecTransferOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecTransferOptions)(nil)).Elem()
}

func (i TransferJobTransferSpecTransferOptionsArgs) ToTransferJobTransferSpecTransferOptionsOutput() TransferJobTransferSpecTransferOptionsOutput {
	return i.ToTransferJobTransferSpecTransferOptionsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecTransferOptionsArgs) ToTransferJobTransferSpecTransferOptionsOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecTransferOptionsOutput)
}

func (i TransferJobTransferSpecTransferOptionsArgs) ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput {
	return i.ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecTransferOptionsArgs) ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecTransferOptionsOutput).ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx)
}

// TransferJobTransferSpecTransferOptionsPtrInput is an input type that accepts TransferJobTransferSpecTransferOptionsArgs, TransferJobTransferSpecTransferOptionsPtr and TransferJobTransferSpecTransferOptionsPtrOutput values.
// You can construct a concrete instance of `TransferJobTransferSpecTransferOptionsPtrInput` via:
//
// 		 TransferJobTransferSpecTransferOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type TransferJobTransferSpecTransferOptionsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput
	ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(context.Context) TransferJobTransferSpecTransferOptionsPtrOutput
}

type transferJobTransferSpecTransferOptionsPtrType TransferJobTransferSpecTransferOptionsArgs

func TransferJobTransferSpecTransferOptionsPtr(v *TransferJobTransferSpecTransferOptionsArgs) TransferJobTransferSpecTransferOptionsPtrInput {
	return (*transferJobTransferSpecTransferOptionsPtrType)(v)
}

func (*transferJobTransferSpecTransferOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecTransferOptions)(nil)).Elem()
}

func (i *transferJobTransferSpecTransferOptionsPtrType) ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput {
	return i.ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecTransferOptionsPtrType) ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecTransferOptionsPtrOutput)
}

type TransferJobTransferSpecTransferOptionsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecTransferOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecTransferOptions)(nil)).Elem()
}

func (o TransferJobTransferSpecTransferOptionsOutput) ToTransferJobTransferSpecTransferOptionsOutput() TransferJobTransferSpecTransferOptionsOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsOutput) ToTransferJobTransferSpecTransferOptionsOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsOutput) ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput {
	return o.ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecTransferOptionsOutput) ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *TransferJobTransferSpecTransferOptions {
		return &v
	}).(TransferJobTransferSpecTransferOptionsPtrOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *bool { return v.DeleteObjectsFromSourceAfterTransfer }).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. Note that this option and
// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *bool { return v.DeleteObjectsUniqueInSink }).(pulumi.BoolPtrOutput)
}

// Whether overwriting objects that already exist in the sink is allowed.
func (o TransferJobTransferSpecTransferOptionsOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *bool { return v.OverwriteObjectsAlreadyExistingInSink }).(pulumi.BoolPtrOutput)
}

type TransferJobTransferSpecTransferOptionsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecTransferOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecTransferOptions)(nil)).Elem()
}

func (o TransferJobTransferSpecTransferOptionsPtrOutput) ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsPtrOutput) ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsPtrOutput) Elem() TransferJobTransferSpecTransferOptionsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecTransferOptions) TransferJobTransferSpecTransferOptions { return *v }).(TransferJobTransferSpecTransferOptionsOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsPtrOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecTransferOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteObjectsFromSourceAfterTransfer
	}).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. Note that this option and
// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsPtrOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecTransferOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteObjectsUniqueInSink
	}).(pulumi.BoolPtrOutput)
}

// Whether overwriting objects that already exist in the sink is allowed.
func (o TransferJobTransferSpecTransferOptionsPtrOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecTransferOptions) *bool {
		if v == nil {
			return nil
		}
		return v.OverwriteObjectsAlreadyExistingInSink
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketCorOutput{})
	pulumi.RegisterOutputType(BucketCorArrayOutput{})
	pulumi.RegisterOutputType(BucketEncryptionOutput{})
	pulumi.RegisterOutputType(BucketEncryptionPtrOutput{})
	pulumi.RegisterOutputType(BucketIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(BucketIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleActionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleConditionOutput{})
	pulumi.RegisterOutputType(BucketLoggingOutput{})
	pulumi.RegisterOutputType(BucketLoggingPtrOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(BucketVersioningOutput{})
	pulumi.RegisterOutputType(BucketVersioningPtrOutput{})
	pulumi.RegisterOutputType(BucketWebsiteOutput{})
	pulumi.RegisterOutputType(BucketWebsitePtrOutput{})
	pulumi.RegisterOutputType(DefaultObjectAccessControlProjectTeamOutput{})
	pulumi.RegisterOutputType(DefaultObjectAccessControlProjectTeamPtrOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlProjectTeamOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlProjectTeamPtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleOutput{})
	pulumi.RegisterOutputType(TransferJobSchedulePtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleEndDateOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleEndDatePtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleStartDateOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleStartDatePtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStartTimeOfDayOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStartTimeOfDayPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourceOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourcePtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSinkOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSinkPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSourceOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSourcePtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecHttpDataSourceOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecHttpDataSourcePtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecObjectConditionsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecObjectConditionsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecTransferOptionsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecTransferOptionsPtrOutput{})
}
