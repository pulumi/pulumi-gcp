// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### Pub/Sub Notifications
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			gcsAccount, err := storage.GetProjectServiceAccount(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = pubsub.NewTopicIAMBinding(ctx, "binding", &pubsub.TopicIAMBindingArgs{
//				Topic: pulumi.Any(google_pubsub_topic.Topic.Name),
//				Role:  pulumi.String("roles/pubsub.publisher"),
//				Members: pulumi.StringArray{
//					pulumi.String(fmt.Sprintf("serviceAccount:%v", gcsAccount.EmailAddress)),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Cloud KMS Keys
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/kms"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			gcsAccount, err := storage.GetProjectServiceAccount(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			binding, err := kms.NewCryptoKeyIAMBinding(ctx, "binding", &kms.CryptoKeyIAMBindingArgs{
//				CryptoKeyId: pulumi.String("your-crypto-key-id"),
//				Role:        pulumi.String("roles/cloudkms.cryptoKeyEncrypterDecrypter"),
//				Members: pulumi.StringArray{
//					pulumi.String(fmt.Sprintf("serviceAccount:%v", gcsAccount.EmailAddress)),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = storage.NewBucket(ctx, "bucket", &storage.BucketArgs{
//				Location: pulumi.String("US"),
//				Encryption: &storage.BucketEncryptionArgs{
//					DefaultKmsKeyName: pulumi.String("your-crypto-key-id"),
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				binding,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetProjectServiceAccount(ctx *pulumi.Context, args *GetProjectServiceAccountArgs, opts ...pulumi.InvokeOption) (*GetProjectServiceAccountResult, error) {
	var rv GetProjectServiceAccountResult
	err := ctx.Invoke("gcp:storage/getProjectServiceAccount:getProjectServiceAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectServiceAccount.
type GetProjectServiceAccountArgs struct {
	// The project the unique service account was created for. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The project the lookup originates from. This field is used if you are making the request
	// from a different account than the one you are finding the service account for.
	UserProject *string `pulumi:"userProject"`
}

// A collection of values returned by getProjectServiceAccount.
type GetProjectServiceAccountResult struct {
	// The email address of the service account. This value is often used to refer to the service account
	// in order to grant IAM permissions.
	EmailAddress string `pulumi:"emailAddress"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Identity of the service account in the form `serviceAccount:{email_address}`. This value is often used to refer to the service account in order to grant IAM permissions.
	Member      string  `pulumi:"member"`
	Project     string  `pulumi:"project"`
	UserProject *string `pulumi:"userProject"`
}

func GetProjectServiceAccountOutput(ctx *pulumi.Context, args GetProjectServiceAccountOutputArgs, opts ...pulumi.InvokeOption) GetProjectServiceAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProjectServiceAccountResult, error) {
			args := v.(GetProjectServiceAccountArgs)
			r, err := GetProjectServiceAccount(ctx, &args, opts...)
			var s GetProjectServiceAccountResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetProjectServiceAccountResultOutput)
}

// A collection of arguments for invoking getProjectServiceAccount.
type GetProjectServiceAccountOutputArgs struct {
	// The project the unique service account was created for. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The project the lookup originates from. This field is used if you are making the request
	// from a different account than the one you are finding the service account for.
	UserProject pulumi.StringPtrInput `pulumi:"userProject"`
}

func (GetProjectServiceAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectServiceAccountArgs)(nil)).Elem()
}

// A collection of values returned by getProjectServiceAccount.
type GetProjectServiceAccountResultOutput struct{ *pulumi.OutputState }

func (GetProjectServiceAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectServiceAccountResult)(nil)).Elem()
}

func (o GetProjectServiceAccountResultOutput) ToGetProjectServiceAccountResultOutput() GetProjectServiceAccountResultOutput {
	return o
}

func (o GetProjectServiceAccountResultOutput) ToGetProjectServiceAccountResultOutputWithContext(ctx context.Context) GetProjectServiceAccountResultOutput {
	return o
}

// The email address of the service account. This value is often used to refer to the service account
// in order to grant IAM permissions.
func (o GetProjectServiceAccountResultOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectServiceAccountResult) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetProjectServiceAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectServiceAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Identity of the service account in the form `serviceAccount:{email_address}`. This value is often used to refer to the service account in order to grant IAM permissions.
func (o GetProjectServiceAccountResultOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectServiceAccountResult) string { return v.Member }).(pulumi.StringOutput)
}

func (o GetProjectServiceAccountResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectServiceAccountResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetProjectServiceAccountResultOutput) UserProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectServiceAccountResult) *string { return v.UserProject }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProjectServiceAccountResultOutput{})
}
