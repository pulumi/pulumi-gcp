// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Storage Control Organization Intelligence Config Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := storage.NewControlOrganizationIntelligenceConfig(ctx, "example", &storage.ControlOrganizationIntelligenceConfigArgs{
//				Name:          pulumi.String("12345678"),
//				EditionConfig: pulumi.String("STANDARD"),
//				Filter: &storage.ControlOrganizationIntelligenceConfigFilterArgs{
//					ExcludedCloudStorageBuckets: &storage.ControlOrganizationIntelligenceConfigFilterExcludedCloudStorageBucketsArgs{
//						BucketIdRegexes: pulumi.StringArray{
//							pulumi.String("test-id-1*"),
//							pulumi.String("test-id-2*"),
//						},
//					},
//					IncludedCloudStorageLocations: &storage.ControlOrganizationIntelligenceConfigFilterIncludedCloudStorageLocationsArgs{
//						Locations: pulumi.StringArray{
//							pulumi.String("test-location-1*"),
//							pulumi.String("test-locations-2*"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OrganizationIntelligenceConfig can be imported using any of these accepted formats:
//
// * `organizations/{{name}}/locations/global/intelligenceConfig`
//
// * `{{name}}`
//
// When using the `pulumi import` command, OrganizationIntelligenceConfig can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:storage/controlOrganizationIntelligenceConfig:ControlOrganizationIntelligenceConfig default organizations/{{name}}/locations/global/intelligenceConfig
// ```
//
// ```sh
// $ pulumi import gcp:storage/controlOrganizationIntelligenceConfig:ControlOrganizationIntelligenceConfig default {{name}}
// ```
type ControlOrganizationIntelligenceConfig struct {
	pulumi.CustomResourceState

	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, DISABLED, TRIAL and STANDARD.
	EditionConfig pulumi.StringOutput `pulumi:"editionConfig"`
	// The Intelligence config that is effective for the resource.
	// Structure is documented below.
	EffectiveIntelligenceConfigs ControlOrganizationIntelligenceConfigEffectiveIntelligenceConfigArrayOutput `pulumi:"effectiveIntelligenceConfigs"`
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter ControlOrganizationIntelligenceConfigFilterPtrOutput `pulumi:"filter"`
	// Identifier of the GCP Organization. For GCP org, this field should be organization number.
	//
	// ***
	Name pulumi.StringOutput `pulumi:"name"`
	// The time at which the Storage Intelligence Config resource is last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewControlOrganizationIntelligenceConfig registers a new resource with the given unique name, arguments, and options.
func NewControlOrganizationIntelligenceConfig(ctx *pulumi.Context,
	name string, args *ControlOrganizationIntelligenceConfigArgs, opts ...pulumi.ResourceOption) (*ControlOrganizationIntelligenceConfig, error) {
	if args == nil {
		args = &ControlOrganizationIntelligenceConfigArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ControlOrganizationIntelligenceConfig
	err := ctx.RegisterResource("gcp:storage/controlOrganizationIntelligenceConfig:ControlOrganizationIntelligenceConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetControlOrganizationIntelligenceConfig gets an existing ControlOrganizationIntelligenceConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetControlOrganizationIntelligenceConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ControlOrganizationIntelligenceConfigState, opts ...pulumi.ResourceOption) (*ControlOrganizationIntelligenceConfig, error) {
	var resource ControlOrganizationIntelligenceConfig
	err := ctx.ReadResource("gcp:storage/controlOrganizationIntelligenceConfig:ControlOrganizationIntelligenceConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ControlOrganizationIntelligenceConfig resources.
type controlOrganizationIntelligenceConfigState struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, DISABLED, TRIAL and STANDARD.
	EditionConfig *string `pulumi:"editionConfig"`
	// The Intelligence config that is effective for the resource.
	// Structure is documented below.
	EffectiveIntelligenceConfigs []ControlOrganizationIntelligenceConfigEffectiveIntelligenceConfig `pulumi:"effectiveIntelligenceConfigs"`
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter *ControlOrganizationIntelligenceConfigFilter `pulumi:"filter"`
	// Identifier of the GCP Organization. For GCP org, this field should be organization number.
	//
	// ***
	Name *string `pulumi:"name"`
	// The time at which the Storage Intelligence Config resource is last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ControlOrganizationIntelligenceConfigState struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, DISABLED, TRIAL and STANDARD.
	EditionConfig pulumi.StringPtrInput
	// The Intelligence config that is effective for the resource.
	// Structure is documented below.
	EffectiveIntelligenceConfigs ControlOrganizationIntelligenceConfigEffectiveIntelligenceConfigArrayInput
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter ControlOrganizationIntelligenceConfigFilterPtrInput
	// Identifier of the GCP Organization. For GCP org, this field should be organization number.
	//
	// ***
	Name pulumi.StringPtrInput
	// The time at which the Storage Intelligence Config resource is last updated.
	UpdateTime pulumi.StringPtrInput
}

func (ControlOrganizationIntelligenceConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*controlOrganizationIntelligenceConfigState)(nil)).Elem()
}

type controlOrganizationIntelligenceConfigArgs struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, DISABLED, TRIAL and STANDARD.
	EditionConfig *string `pulumi:"editionConfig"`
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter *ControlOrganizationIntelligenceConfigFilter `pulumi:"filter"`
	// Identifier of the GCP Organization. For GCP org, this field should be organization number.
	//
	// ***
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ControlOrganizationIntelligenceConfig resource.
type ControlOrganizationIntelligenceConfigArgs struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, DISABLED, TRIAL and STANDARD.
	EditionConfig pulumi.StringPtrInput
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter ControlOrganizationIntelligenceConfigFilterPtrInput
	// Identifier of the GCP Organization. For GCP org, this field should be organization number.
	//
	// ***
	Name pulumi.StringPtrInput
}

func (ControlOrganizationIntelligenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*controlOrganizationIntelligenceConfigArgs)(nil)).Elem()
}

type ControlOrganizationIntelligenceConfigInput interface {
	pulumi.Input

	ToControlOrganizationIntelligenceConfigOutput() ControlOrganizationIntelligenceConfigOutput
	ToControlOrganizationIntelligenceConfigOutputWithContext(ctx context.Context) ControlOrganizationIntelligenceConfigOutput
}

func (*ControlOrganizationIntelligenceConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlOrganizationIntelligenceConfig)(nil)).Elem()
}

func (i *ControlOrganizationIntelligenceConfig) ToControlOrganizationIntelligenceConfigOutput() ControlOrganizationIntelligenceConfigOutput {
	return i.ToControlOrganizationIntelligenceConfigOutputWithContext(context.Background())
}

func (i *ControlOrganizationIntelligenceConfig) ToControlOrganizationIntelligenceConfigOutputWithContext(ctx context.Context) ControlOrganizationIntelligenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlOrganizationIntelligenceConfigOutput)
}

// ControlOrganizationIntelligenceConfigArrayInput is an input type that accepts ControlOrganizationIntelligenceConfigArray and ControlOrganizationIntelligenceConfigArrayOutput values.
// You can construct a concrete instance of `ControlOrganizationIntelligenceConfigArrayInput` via:
//
//	ControlOrganizationIntelligenceConfigArray{ ControlOrganizationIntelligenceConfigArgs{...} }
type ControlOrganizationIntelligenceConfigArrayInput interface {
	pulumi.Input

	ToControlOrganizationIntelligenceConfigArrayOutput() ControlOrganizationIntelligenceConfigArrayOutput
	ToControlOrganizationIntelligenceConfigArrayOutputWithContext(context.Context) ControlOrganizationIntelligenceConfigArrayOutput
}

type ControlOrganizationIntelligenceConfigArray []ControlOrganizationIntelligenceConfigInput

func (ControlOrganizationIntelligenceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ControlOrganizationIntelligenceConfig)(nil)).Elem()
}

func (i ControlOrganizationIntelligenceConfigArray) ToControlOrganizationIntelligenceConfigArrayOutput() ControlOrganizationIntelligenceConfigArrayOutput {
	return i.ToControlOrganizationIntelligenceConfigArrayOutputWithContext(context.Background())
}

func (i ControlOrganizationIntelligenceConfigArray) ToControlOrganizationIntelligenceConfigArrayOutputWithContext(ctx context.Context) ControlOrganizationIntelligenceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlOrganizationIntelligenceConfigArrayOutput)
}

// ControlOrganizationIntelligenceConfigMapInput is an input type that accepts ControlOrganizationIntelligenceConfigMap and ControlOrganizationIntelligenceConfigMapOutput values.
// You can construct a concrete instance of `ControlOrganizationIntelligenceConfigMapInput` via:
//
//	ControlOrganizationIntelligenceConfigMap{ "key": ControlOrganizationIntelligenceConfigArgs{...} }
type ControlOrganizationIntelligenceConfigMapInput interface {
	pulumi.Input

	ToControlOrganizationIntelligenceConfigMapOutput() ControlOrganizationIntelligenceConfigMapOutput
	ToControlOrganizationIntelligenceConfigMapOutputWithContext(context.Context) ControlOrganizationIntelligenceConfigMapOutput
}

type ControlOrganizationIntelligenceConfigMap map[string]ControlOrganizationIntelligenceConfigInput

func (ControlOrganizationIntelligenceConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ControlOrganizationIntelligenceConfig)(nil)).Elem()
}

func (i ControlOrganizationIntelligenceConfigMap) ToControlOrganizationIntelligenceConfigMapOutput() ControlOrganizationIntelligenceConfigMapOutput {
	return i.ToControlOrganizationIntelligenceConfigMapOutputWithContext(context.Background())
}

func (i ControlOrganizationIntelligenceConfigMap) ToControlOrganizationIntelligenceConfigMapOutputWithContext(ctx context.Context) ControlOrganizationIntelligenceConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlOrganizationIntelligenceConfigMapOutput)
}

type ControlOrganizationIntelligenceConfigOutput struct{ *pulumi.OutputState }

func (ControlOrganizationIntelligenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlOrganizationIntelligenceConfig)(nil)).Elem()
}

func (o ControlOrganizationIntelligenceConfigOutput) ToControlOrganizationIntelligenceConfigOutput() ControlOrganizationIntelligenceConfigOutput {
	return o
}

func (o ControlOrganizationIntelligenceConfigOutput) ToControlOrganizationIntelligenceConfigOutputWithContext(ctx context.Context) ControlOrganizationIntelligenceConfigOutput {
	return o
}

// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, DISABLED, TRIAL and STANDARD.
func (o ControlOrganizationIntelligenceConfigOutput) EditionConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlOrganizationIntelligenceConfig) pulumi.StringOutput { return v.EditionConfig }).(pulumi.StringOutput)
}

// The Intelligence config that is effective for the resource.
// Structure is documented below.
func (o ControlOrganizationIntelligenceConfigOutput) EffectiveIntelligenceConfigs() ControlOrganizationIntelligenceConfigEffectiveIntelligenceConfigArrayOutput {
	return o.ApplyT(func(v *ControlOrganizationIntelligenceConfig) ControlOrganizationIntelligenceConfigEffectiveIntelligenceConfigArrayOutput {
		return v.EffectiveIntelligenceConfigs
	}).(ControlOrganizationIntelligenceConfigEffectiveIntelligenceConfigArrayOutput)
}

// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
// Structure is documented below.
func (o ControlOrganizationIntelligenceConfigOutput) Filter() ControlOrganizationIntelligenceConfigFilterPtrOutput {
	return o.ApplyT(func(v *ControlOrganizationIntelligenceConfig) ControlOrganizationIntelligenceConfigFilterPtrOutput {
		return v.Filter
	}).(ControlOrganizationIntelligenceConfigFilterPtrOutput)
}

// Identifier of the GCP Organization. For GCP org, this field should be organization number.
//
// ***
func (o ControlOrganizationIntelligenceConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlOrganizationIntelligenceConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The time at which the Storage Intelligence Config resource is last updated.
func (o ControlOrganizationIntelligenceConfigOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlOrganizationIntelligenceConfig) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ControlOrganizationIntelligenceConfigArrayOutput struct{ *pulumi.OutputState }

func (ControlOrganizationIntelligenceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ControlOrganizationIntelligenceConfig)(nil)).Elem()
}

func (o ControlOrganizationIntelligenceConfigArrayOutput) ToControlOrganizationIntelligenceConfigArrayOutput() ControlOrganizationIntelligenceConfigArrayOutput {
	return o
}

func (o ControlOrganizationIntelligenceConfigArrayOutput) ToControlOrganizationIntelligenceConfigArrayOutputWithContext(ctx context.Context) ControlOrganizationIntelligenceConfigArrayOutput {
	return o
}

func (o ControlOrganizationIntelligenceConfigArrayOutput) Index(i pulumi.IntInput) ControlOrganizationIntelligenceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ControlOrganizationIntelligenceConfig {
		return vs[0].([]*ControlOrganizationIntelligenceConfig)[vs[1].(int)]
	}).(ControlOrganizationIntelligenceConfigOutput)
}

type ControlOrganizationIntelligenceConfigMapOutput struct{ *pulumi.OutputState }

func (ControlOrganizationIntelligenceConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ControlOrganizationIntelligenceConfig)(nil)).Elem()
}

func (o ControlOrganizationIntelligenceConfigMapOutput) ToControlOrganizationIntelligenceConfigMapOutput() ControlOrganizationIntelligenceConfigMapOutput {
	return o
}

func (o ControlOrganizationIntelligenceConfigMapOutput) ToControlOrganizationIntelligenceConfigMapOutputWithContext(ctx context.Context) ControlOrganizationIntelligenceConfigMapOutput {
	return o
}

func (o ControlOrganizationIntelligenceConfigMapOutput) MapIndex(k pulumi.StringInput) ControlOrganizationIntelligenceConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ControlOrganizationIntelligenceConfig {
		return vs[0].(map[string]*ControlOrganizationIntelligenceConfig)[vs[1].(string)]
	}).(ControlOrganizationIntelligenceConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ControlOrganizationIntelligenceConfigInput)(nil)).Elem(), &ControlOrganizationIntelligenceConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlOrganizationIntelligenceConfigArrayInput)(nil)).Elem(), ControlOrganizationIntelligenceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlOrganizationIntelligenceConfigMapInput)(nil)).Elem(), ControlOrganizationIntelligenceConfigMap{})
	pulumi.RegisterOutputType(ControlOrganizationIntelligenceConfigOutput{})
	pulumi.RegisterOutputType(ControlOrganizationIntelligenceConfigArrayOutput{})
	pulumi.RegisterOutputType(ControlOrganizationIntelligenceConfigMapOutput{})
}
