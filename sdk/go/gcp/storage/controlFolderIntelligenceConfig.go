// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Storage Control Folder Intelligence Config Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := storage.NewControlFolderIntelligenceConfig(ctx, "example", &storage.ControlFolderIntelligenceConfigArgs{
//				Name:          pulumi.String("12345678"),
//				EditionConfig: pulumi.String("STANDARD"),
//				Filter: &storage.ControlFolderIntelligenceConfigFilterArgs{
//					IncludedCloudStorageBuckets: &storage.ControlFolderIntelligenceConfigFilterIncludedCloudStorageBucketsArgs{
//						BucketIdRegexes: pulumi.StringArray{
//							pulumi.String("test-id-1*"),
//							pulumi.String("test-id-2*"),
//						},
//					},
//					ExcludedCloudStorageLocations: &storage.ControlFolderIntelligenceConfigFilterExcludedCloudStorageLocationsArgs{
//						Locations: pulumi.StringArray{
//							pulumi.String("test-location-1*"),
//							pulumi.String("test-locations-2*"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// FolderIntelligenceConfig can be imported using any of these accepted formats:
//
// * `folders/{{name}}/locations/global/intelligenceConfig`
//
// * `{{name}}`
//
// When using the `pulumi import` command, FolderIntelligenceConfig can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:storage/controlFolderIntelligenceConfig:ControlFolderIntelligenceConfig default folders/{{name}}/locations/global/intelligenceConfig
// ```
//
// ```sh
// $ pulumi import gcp:storage/controlFolderIntelligenceConfig:ControlFolderIntelligenceConfig default {{name}}
// ```
type ControlFolderIntelligenceConfig struct {
	pulumi.CustomResourceState

	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig pulumi.StringOutput `pulumi:"editionConfig"`
	// The Intelligence config that is effective for the resource.
	// Structure is documented below.
	EffectiveIntelligenceConfigs ControlFolderIntelligenceConfigEffectiveIntelligenceConfigArrayOutput `pulumi:"effectiveIntelligenceConfigs"`
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter ControlFolderIntelligenceConfigFilterPtrOutput `pulumi:"filter"`
	// Identifier of the GCP Folder. For GCP Folder, this field can be folder number.
	Name pulumi.StringOutput `pulumi:"name"`
	// The trial configuration of the Storage Intelligence resource.
	// Structure is documented below.
	TrialConfigs ControlFolderIntelligenceConfigTrialConfigArrayOutput `pulumi:"trialConfigs"`
	// The time at which the Storage Intelligence Config resource is last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewControlFolderIntelligenceConfig registers a new resource with the given unique name, arguments, and options.
func NewControlFolderIntelligenceConfig(ctx *pulumi.Context,
	name string, args *ControlFolderIntelligenceConfigArgs, opts ...pulumi.ResourceOption) (*ControlFolderIntelligenceConfig, error) {
	if args == nil {
		args = &ControlFolderIntelligenceConfigArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ControlFolderIntelligenceConfig
	err := ctx.RegisterResource("gcp:storage/controlFolderIntelligenceConfig:ControlFolderIntelligenceConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetControlFolderIntelligenceConfig gets an existing ControlFolderIntelligenceConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetControlFolderIntelligenceConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ControlFolderIntelligenceConfigState, opts ...pulumi.ResourceOption) (*ControlFolderIntelligenceConfig, error) {
	var resource ControlFolderIntelligenceConfig
	err := ctx.ReadResource("gcp:storage/controlFolderIntelligenceConfig:ControlFolderIntelligenceConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ControlFolderIntelligenceConfig resources.
type controlFolderIntelligenceConfigState struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig *string `pulumi:"editionConfig"`
	// The Intelligence config that is effective for the resource.
	// Structure is documented below.
	EffectiveIntelligenceConfigs []ControlFolderIntelligenceConfigEffectiveIntelligenceConfig `pulumi:"effectiveIntelligenceConfigs"`
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter *ControlFolderIntelligenceConfigFilter `pulumi:"filter"`
	// Identifier of the GCP Folder. For GCP Folder, this field can be folder number.
	Name *string `pulumi:"name"`
	// The trial configuration of the Storage Intelligence resource.
	// Structure is documented below.
	TrialConfigs []ControlFolderIntelligenceConfigTrialConfig `pulumi:"trialConfigs"`
	// The time at which the Storage Intelligence Config resource is last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ControlFolderIntelligenceConfigState struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig pulumi.StringPtrInput
	// The Intelligence config that is effective for the resource.
	// Structure is documented below.
	EffectiveIntelligenceConfigs ControlFolderIntelligenceConfigEffectiveIntelligenceConfigArrayInput
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter ControlFolderIntelligenceConfigFilterPtrInput
	// Identifier of the GCP Folder. For GCP Folder, this field can be folder number.
	Name pulumi.StringPtrInput
	// The trial configuration of the Storage Intelligence resource.
	// Structure is documented below.
	TrialConfigs ControlFolderIntelligenceConfigTrialConfigArrayInput
	// The time at which the Storage Intelligence Config resource is last updated.
	UpdateTime pulumi.StringPtrInput
}

func (ControlFolderIntelligenceConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*controlFolderIntelligenceConfigState)(nil)).Elem()
}

type controlFolderIntelligenceConfigArgs struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig *string `pulumi:"editionConfig"`
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter *ControlFolderIntelligenceConfigFilter `pulumi:"filter"`
	// Identifier of the GCP Folder. For GCP Folder, this field can be folder number.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ControlFolderIntelligenceConfig resource.
type ControlFolderIntelligenceConfigArgs struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig pulumi.StringPtrInput
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter ControlFolderIntelligenceConfigFilterPtrInput
	// Identifier of the GCP Folder. For GCP Folder, this field can be folder number.
	Name pulumi.StringPtrInput
}

func (ControlFolderIntelligenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*controlFolderIntelligenceConfigArgs)(nil)).Elem()
}

type ControlFolderIntelligenceConfigInput interface {
	pulumi.Input

	ToControlFolderIntelligenceConfigOutput() ControlFolderIntelligenceConfigOutput
	ToControlFolderIntelligenceConfigOutputWithContext(ctx context.Context) ControlFolderIntelligenceConfigOutput
}

func (*ControlFolderIntelligenceConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlFolderIntelligenceConfig)(nil)).Elem()
}

func (i *ControlFolderIntelligenceConfig) ToControlFolderIntelligenceConfigOutput() ControlFolderIntelligenceConfigOutput {
	return i.ToControlFolderIntelligenceConfigOutputWithContext(context.Background())
}

func (i *ControlFolderIntelligenceConfig) ToControlFolderIntelligenceConfigOutputWithContext(ctx context.Context) ControlFolderIntelligenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlFolderIntelligenceConfigOutput)
}

// ControlFolderIntelligenceConfigArrayInput is an input type that accepts ControlFolderIntelligenceConfigArray and ControlFolderIntelligenceConfigArrayOutput values.
// You can construct a concrete instance of `ControlFolderIntelligenceConfigArrayInput` via:
//
//	ControlFolderIntelligenceConfigArray{ ControlFolderIntelligenceConfigArgs{...} }
type ControlFolderIntelligenceConfigArrayInput interface {
	pulumi.Input

	ToControlFolderIntelligenceConfigArrayOutput() ControlFolderIntelligenceConfigArrayOutput
	ToControlFolderIntelligenceConfigArrayOutputWithContext(context.Context) ControlFolderIntelligenceConfigArrayOutput
}

type ControlFolderIntelligenceConfigArray []ControlFolderIntelligenceConfigInput

func (ControlFolderIntelligenceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ControlFolderIntelligenceConfig)(nil)).Elem()
}

func (i ControlFolderIntelligenceConfigArray) ToControlFolderIntelligenceConfigArrayOutput() ControlFolderIntelligenceConfigArrayOutput {
	return i.ToControlFolderIntelligenceConfigArrayOutputWithContext(context.Background())
}

func (i ControlFolderIntelligenceConfigArray) ToControlFolderIntelligenceConfigArrayOutputWithContext(ctx context.Context) ControlFolderIntelligenceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlFolderIntelligenceConfigArrayOutput)
}

// ControlFolderIntelligenceConfigMapInput is an input type that accepts ControlFolderIntelligenceConfigMap and ControlFolderIntelligenceConfigMapOutput values.
// You can construct a concrete instance of `ControlFolderIntelligenceConfigMapInput` via:
//
//	ControlFolderIntelligenceConfigMap{ "key": ControlFolderIntelligenceConfigArgs{...} }
type ControlFolderIntelligenceConfigMapInput interface {
	pulumi.Input

	ToControlFolderIntelligenceConfigMapOutput() ControlFolderIntelligenceConfigMapOutput
	ToControlFolderIntelligenceConfigMapOutputWithContext(context.Context) ControlFolderIntelligenceConfigMapOutput
}

type ControlFolderIntelligenceConfigMap map[string]ControlFolderIntelligenceConfigInput

func (ControlFolderIntelligenceConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ControlFolderIntelligenceConfig)(nil)).Elem()
}

func (i ControlFolderIntelligenceConfigMap) ToControlFolderIntelligenceConfigMapOutput() ControlFolderIntelligenceConfigMapOutput {
	return i.ToControlFolderIntelligenceConfigMapOutputWithContext(context.Background())
}

func (i ControlFolderIntelligenceConfigMap) ToControlFolderIntelligenceConfigMapOutputWithContext(ctx context.Context) ControlFolderIntelligenceConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlFolderIntelligenceConfigMapOutput)
}

type ControlFolderIntelligenceConfigOutput struct{ *pulumi.OutputState }

func (ControlFolderIntelligenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlFolderIntelligenceConfig)(nil)).Elem()
}

func (o ControlFolderIntelligenceConfigOutput) ToControlFolderIntelligenceConfigOutput() ControlFolderIntelligenceConfigOutput {
	return o
}

func (o ControlFolderIntelligenceConfigOutput) ToControlFolderIntelligenceConfigOutputWithContext(ctx context.Context) ControlFolderIntelligenceConfigOutput {
	return o
}

// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
func (o ControlFolderIntelligenceConfigOutput) EditionConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlFolderIntelligenceConfig) pulumi.StringOutput { return v.EditionConfig }).(pulumi.StringOutput)
}

// The Intelligence config that is effective for the resource.
// Structure is documented below.
func (o ControlFolderIntelligenceConfigOutput) EffectiveIntelligenceConfigs() ControlFolderIntelligenceConfigEffectiveIntelligenceConfigArrayOutput {
	return o.ApplyT(func(v *ControlFolderIntelligenceConfig) ControlFolderIntelligenceConfigEffectiveIntelligenceConfigArrayOutput {
		return v.EffectiveIntelligenceConfigs
	}).(ControlFolderIntelligenceConfigEffectiveIntelligenceConfigArrayOutput)
}

// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
// Structure is documented below.
func (o ControlFolderIntelligenceConfigOutput) Filter() ControlFolderIntelligenceConfigFilterPtrOutput {
	return o.ApplyT(func(v *ControlFolderIntelligenceConfig) ControlFolderIntelligenceConfigFilterPtrOutput {
		return v.Filter
	}).(ControlFolderIntelligenceConfigFilterPtrOutput)
}

// Identifier of the GCP Folder. For GCP Folder, this field can be folder number.
func (o ControlFolderIntelligenceConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlFolderIntelligenceConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The trial configuration of the Storage Intelligence resource.
// Structure is documented below.
func (o ControlFolderIntelligenceConfigOutput) TrialConfigs() ControlFolderIntelligenceConfigTrialConfigArrayOutput {
	return o.ApplyT(func(v *ControlFolderIntelligenceConfig) ControlFolderIntelligenceConfigTrialConfigArrayOutput {
		return v.TrialConfigs
	}).(ControlFolderIntelligenceConfigTrialConfigArrayOutput)
}

// The time at which the Storage Intelligence Config resource is last updated.
func (o ControlFolderIntelligenceConfigOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlFolderIntelligenceConfig) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ControlFolderIntelligenceConfigArrayOutput struct{ *pulumi.OutputState }

func (ControlFolderIntelligenceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ControlFolderIntelligenceConfig)(nil)).Elem()
}

func (o ControlFolderIntelligenceConfigArrayOutput) ToControlFolderIntelligenceConfigArrayOutput() ControlFolderIntelligenceConfigArrayOutput {
	return o
}

func (o ControlFolderIntelligenceConfigArrayOutput) ToControlFolderIntelligenceConfigArrayOutputWithContext(ctx context.Context) ControlFolderIntelligenceConfigArrayOutput {
	return o
}

func (o ControlFolderIntelligenceConfigArrayOutput) Index(i pulumi.IntInput) ControlFolderIntelligenceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ControlFolderIntelligenceConfig {
		return vs[0].([]*ControlFolderIntelligenceConfig)[vs[1].(int)]
	}).(ControlFolderIntelligenceConfigOutput)
}

type ControlFolderIntelligenceConfigMapOutput struct{ *pulumi.OutputState }

func (ControlFolderIntelligenceConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ControlFolderIntelligenceConfig)(nil)).Elem()
}

func (o ControlFolderIntelligenceConfigMapOutput) ToControlFolderIntelligenceConfigMapOutput() ControlFolderIntelligenceConfigMapOutput {
	return o
}

func (o ControlFolderIntelligenceConfigMapOutput) ToControlFolderIntelligenceConfigMapOutputWithContext(ctx context.Context) ControlFolderIntelligenceConfigMapOutput {
	return o
}

func (o ControlFolderIntelligenceConfigMapOutput) MapIndex(k pulumi.StringInput) ControlFolderIntelligenceConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ControlFolderIntelligenceConfig {
		return vs[0].(map[string]*ControlFolderIntelligenceConfig)[vs[1].(string)]
	}).(ControlFolderIntelligenceConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ControlFolderIntelligenceConfigInput)(nil)).Elem(), &ControlFolderIntelligenceConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlFolderIntelligenceConfigArrayInput)(nil)).Elem(), ControlFolderIntelligenceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlFolderIntelligenceConfigMapInput)(nil)).Elem(), ControlFolderIntelligenceConfigMap{})
	pulumi.RegisterOutputType(ControlFolderIntelligenceConfigOutput{})
	pulumi.RegisterOutputType(ControlFolderIntelligenceConfigArrayOutput{})
	pulumi.RegisterOutputType(ControlFolderIntelligenceConfigMapOutput{})
}
