// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Represents an inventory report configuration.
//
// To get more information about ReportConfig, see:
//
// * [API documentation](https://cloud.google.com/storage/docs/json_api/v1/reportConfig)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/storage/docs/insights/using-storage-insights)
//
// ## Example Usage
// ### Storage Insights Report Config
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			project, err := organizations.LookupProject(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			reportBucket, err := storage.NewBucket(ctx, "reportBucket", &storage.BucketArgs{
//				Location:                 pulumi.String("us-central1"),
//				ForceDestroy:             pulumi.Bool(true),
//				UniformBucketLevelAccess: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = storage.NewInsightsReportConfig(ctx, "config", &storage.InsightsReportConfigArgs{
//				DisplayName: pulumi.String("Test Report Config"),
//				Location:    pulumi.String("us-central1"),
//				FrequencyOptions: &storage.InsightsReportConfigFrequencyOptionsArgs{
//					Frequency: pulumi.String("WEEKLY"),
//					StartDate: &storage.InsightsReportConfigFrequencyOptionsStartDateArgs{
//						Day:   pulumi.Int(15),
//						Month: pulumi.Int(3),
//						Year:  pulumi.Int(2050),
//					},
//					EndDate: &storage.InsightsReportConfigFrequencyOptionsEndDateArgs{
//						Day:   pulumi.Int(15),
//						Month: pulumi.Int(4),
//						Year:  pulumi.Int(2050),
//					},
//				},
//				CsvOptions: &storage.InsightsReportConfigCsvOptionsArgs{
//					RecordSeparator: pulumi.String("\n"),
//					Delimiter:       pulumi.String(","),
//					HeaderRequired:  pulumi.Bool(false),
//				},
//				ObjectMetadataReportOptions: &storage.InsightsReportConfigObjectMetadataReportOptionsArgs{
//					MetadataFields: pulumi.StringArray{
//						pulumi.String("bucket"),
//						pulumi.String("name"),
//						pulumi.String("project"),
//					},
//					StorageFilters: &storage.InsightsReportConfigObjectMetadataReportOptionsStorageFiltersArgs{
//						Bucket: reportBucket.Name,
//					},
//					StorageDestinationOptions: &storage.InsightsReportConfigObjectMetadataReportOptionsStorageDestinationOptionsArgs{
//						Bucket:          reportBucket.Name,
//						DestinationPath: pulumi.String("test-insights-reports"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = storage.NewBucketIAMMember(ctx, "admin", &storage.BucketIAMMemberArgs{
//				Bucket: reportBucket.Name,
//				Role:   pulumi.String("roles/storage.admin"),
//				Member: pulumi.String(fmt.Sprintf("serviceAccount:service-%v@gcp-sa-storageinsights.iam.gserviceaccount.com", project.Number)),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # ReportConfig can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:storage/insightsReportConfig:InsightsReportConfig default projects/{{project}}/locations/{{location}}/reportConfigs/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:storage/insightsReportConfig:InsightsReportConfig default {{project}}/{{location}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:storage/insightsReportConfig:InsightsReportConfig default {{location}}/{{name}}
//
// ```
type InsightsReportConfig struct {
	pulumi.CustomResourceState

	// Options for configuring the format of the inventory report CSV file.
	// Structure is documented below.
	CsvOptions InsightsReportConfigCsvOptionsOutput `pulumi:"csvOptions"`
	// The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Options for configuring how inventory reports are generated.
	// Structure is documented below.
	FrequencyOptions InsightsReportConfigFrequencyOptionsPtrOutput `pulumi:"frequencyOptions"`
	// The location of the ReportConfig. The source and destination buckets specified in the ReportConfig
	// must be in the same location.
	Location pulumi.StringOutput `pulumi:"location"`
	// The UUID of the inventory report configuration.
	Name pulumi.StringOutput `pulumi:"name"`
	// Options for including metadata in an inventory report.
	// Structure is documented below.
	ObjectMetadataReportOptions InsightsReportConfigObjectMetadataReportOptionsPtrOutput `pulumi:"objectMetadataReportOptions"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewInsightsReportConfig registers a new resource with the given unique name, arguments, and options.
func NewInsightsReportConfig(ctx *pulumi.Context,
	name string, args *InsightsReportConfigArgs, opts ...pulumi.ResourceOption) (*InsightsReportConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CsvOptions == nil {
		return nil, errors.New("invalid value for required argument 'CsvOptions'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InsightsReportConfig
	err := ctx.RegisterResource("gcp:storage/insightsReportConfig:InsightsReportConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInsightsReportConfig gets an existing InsightsReportConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInsightsReportConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InsightsReportConfigState, opts ...pulumi.ResourceOption) (*InsightsReportConfig, error) {
	var resource InsightsReportConfig
	err := ctx.ReadResource("gcp:storage/insightsReportConfig:InsightsReportConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InsightsReportConfig resources.
type insightsReportConfigState struct {
	// Options for configuring the format of the inventory report CSV file.
	// Structure is documented below.
	CsvOptions *InsightsReportConfigCsvOptions `pulumi:"csvOptions"`
	// The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
	DisplayName *string `pulumi:"displayName"`
	// Options for configuring how inventory reports are generated.
	// Structure is documented below.
	FrequencyOptions *InsightsReportConfigFrequencyOptions `pulumi:"frequencyOptions"`
	// The location of the ReportConfig. The source and destination buckets specified in the ReportConfig
	// must be in the same location.
	Location *string `pulumi:"location"`
	// The UUID of the inventory report configuration.
	Name *string `pulumi:"name"`
	// Options for including metadata in an inventory report.
	// Structure is documented below.
	ObjectMetadataReportOptions *InsightsReportConfigObjectMetadataReportOptions `pulumi:"objectMetadataReportOptions"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

type InsightsReportConfigState struct {
	// Options for configuring the format of the inventory report CSV file.
	// Structure is documented below.
	CsvOptions InsightsReportConfigCsvOptionsPtrInput
	// The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
	DisplayName pulumi.StringPtrInput
	// Options for configuring how inventory reports are generated.
	// Structure is documented below.
	FrequencyOptions InsightsReportConfigFrequencyOptionsPtrInput
	// The location of the ReportConfig. The source and destination buckets specified in the ReportConfig
	// must be in the same location.
	Location pulumi.StringPtrInput
	// The UUID of the inventory report configuration.
	Name pulumi.StringPtrInput
	// Options for including metadata in an inventory report.
	// Structure is documented below.
	ObjectMetadataReportOptions InsightsReportConfigObjectMetadataReportOptionsPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (InsightsReportConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*insightsReportConfigState)(nil)).Elem()
}

type insightsReportConfigArgs struct {
	// Options for configuring the format of the inventory report CSV file.
	// Structure is documented below.
	CsvOptions InsightsReportConfigCsvOptions `pulumi:"csvOptions"`
	// The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
	DisplayName *string `pulumi:"displayName"`
	// Options for configuring how inventory reports are generated.
	// Structure is documented below.
	FrequencyOptions *InsightsReportConfigFrequencyOptions `pulumi:"frequencyOptions"`
	// The location of the ReportConfig. The source and destination buckets specified in the ReportConfig
	// must be in the same location.
	Location string `pulumi:"location"`
	// Options for including metadata in an inventory report.
	// Structure is documented below.
	ObjectMetadataReportOptions *InsightsReportConfigObjectMetadataReportOptions `pulumi:"objectMetadataReportOptions"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a InsightsReportConfig resource.
type InsightsReportConfigArgs struct {
	// Options for configuring the format of the inventory report CSV file.
	// Structure is documented below.
	CsvOptions InsightsReportConfigCsvOptionsInput
	// The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
	DisplayName pulumi.StringPtrInput
	// Options for configuring how inventory reports are generated.
	// Structure is documented below.
	FrequencyOptions InsightsReportConfigFrequencyOptionsPtrInput
	// The location of the ReportConfig. The source and destination buckets specified in the ReportConfig
	// must be in the same location.
	Location pulumi.StringInput
	// Options for including metadata in an inventory report.
	// Structure is documented below.
	ObjectMetadataReportOptions InsightsReportConfigObjectMetadataReportOptionsPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
}

func (InsightsReportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*insightsReportConfigArgs)(nil)).Elem()
}

type InsightsReportConfigInput interface {
	pulumi.Input

	ToInsightsReportConfigOutput() InsightsReportConfigOutput
	ToInsightsReportConfigOutputWithContext(ctx context.Context) InsightsReportConfigOutput
}

func (*InsightsReportConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsReportConfig)(nil)).Elem()
}

func (i *InsightsReportConfig) ToInsightsReportConfigOutput() InsightsReportConfigOutput {
	return i.ToInsightsReportConfigOutputWithContext(context.Background())
}

func (i *InsightsReportConfig) ToInsightsReportConfigOutputWithContext(ctx context.Context) InsightsReportConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsReportConfigOutput)
}

func (i *InsightsReportConfig) ToOutput(ctx context.Context) pulumix.Output[*InsightsReportConfig] {
	return pulumix.Output[*InsightsReportConfig]{
		OutputState: i.ToInsightsReportConfigOutputWithContext(ctx).OutputState,
	}
}

// InsightsReportConfigArrayInput is an input type that accepts InsightsReportConfigArray and InsightsReportConfigArrayOutput values.
// You can construct a concrete instance of `InsightsReportConfigArrayInput` via:
//
//	InsightsReportConfigArray{ InsightsReportConfigArgs{...} }
type InsightsReportConfigArrayInput interface {
	pulumi.Input

	ToInsightsReportConfigArrayOutput() InsightsReportConfigArrayOutput
	ToInsightsReportConfigArrayOutputWithContext(context.Context) InsightsReportConfigArrayOutput
}

type InsightsReportConfigArray []InsightsReportConfigInput

func (InsightsReportConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InsightsReportConfig)(nil)).Elem()
}

func (i InsightsReportConfigArray) ToInsightsReportConfigArrayOutput() InsightsReportConfigArrayOutput {
	return i.ToInsightsReportConfigArrayOutputWithContext(context.Background())
}

func (i InsightsReportConfigArray) ToInsightsReportConfigArrayOutputWithContext(ctx context.Context) InsightsReportConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsReportConfigArrayOutput)
}

func (i InsightsReportConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]*InsightsReportConfig] {
	return pulumix.Output[[]*InsightsReportConfig]{
		OutputState: i.ToInsightsReportConfigArrayOutputWithContext(ctx).OutputState,
	}
}

// InsightsReportConfigMapInput is an input type that accepts InsightsReportConfigMap and InsightsReportConfigMapOutput values.
// You can construct a concrete instance of `InsightsReportConfigMapInput` via:
//
//	InsightsReportConfigMap{ "key": InsightsReportConfigArgs{...} }
type InsightsReportConfigMapInput interface {
	pulumi.Input

	ToInsightsReportConfigMapOutput() InsightsReportConfigMapOutput
	ToInsightsReportConfigMapOutputWithContext(context.Context) InsightsReportConfigMapOutput
}

type InsightsReportConfigMap map[string]InsightsReportConfigInput

func (InsightsReportConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InsightsReportConfig)(nil)).Elem()
}

func (i InsightsReportConfigMap) ToInsightsReportConfigMapOutput() InsightsReportConfigMapOutput {
	return i.ToInsightsReportConfigMapOutputWithContext(context.Background())
}

func (i InsightsReportConfigMap) ToInsightsReportConfigMapOutputWithContext(ctx context.Context) InsightsReportConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsReportConfigMapOutput)
}

func (i InsightsReportConfigMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*InsightsReportConfig] {
	return pulumix.Output[map[string]*InsightsReportConfig]{
		OutputState: i.ToInsightsReportConfigMapOutputWithContext(ctx).OutputState,
	}
}

type InsightsReportConfigOutput struct{ *pulumi.OutputState }

func (InsightsReportConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsReportConfig)(nil)).Elem()
}

func (o InsightsReportConfigOutput) ToInsightsReportConfigOutput() InsightsReportConfigOutput {
	return o
}

func (o InsightsReportConfigOutput) ToInsightsReportConfigOutputWithContext(ctx context.Context) InsightsReportConfigOutput {
	return o
}

func (o InsightsReportConfigOutput) ToOutput(ctx context.Context) pulumix.Output[*InsightsReportConfig] {
	return pulumix.Output[*InsightsReportConfig]{
		OutputState: o.OutputState,
	}
}

// Options for configuring the format of the inventory report CSV file.
// Structure is documented below.
func (o InsightsReportConfigOutput) CsvOptions() InsightsReportConfigCsvOptionsOutput {
	return o.ApplyT(func(v *InsightsReportConfig) InsightsReportConfigCsvOptionsOutput { return v.CsvOptions }).(InsightsReportConfigCsvOptionsOutput)
}

// The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
func (o InsightsReportConfigOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InsightsReportConfig) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Options for configuring how inventory reports are generated.
// Structure is documented below.
func (o InsightsReportConfigOutput) FrequencyOptions() InsightsReportConfigFrequencyOptionsPtrOutput {
	return o.ApplyT(func(v *InsightsReportConfig) InsightsReportConfigFrequencyOptionsPtrOutput { return v.FrequencyOptions }).(InsightsReportConfigFrequencyOptionsPtrOutput)
}

// The location of the ReportConfig. The source and destination buckets specified in the ReportConfig
// must be in the same location.
func (o InsightsReportConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *InsightsReportConfig) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The UUID of the inventory report configuration.
func (o InsightsReportConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InsightsReportConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Options for including metadata in an inventory report.
// Structure is documented below.
func (o InsightsReportConfigOutput) ObjectMetadataReportOptions() InsightsReportConfigObjectMetadataReportOptionsPtrOutput {
	return o.ApplyT(func(v *InsightsReportConfig) InsightsReportConfigObjectMetadataReportOptionsPtrOutput {
		return v.ObjectMetadataReportOptions
	}).(InsightsReportConfigObjectMetadataReportOptionsPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InsightsReportConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InsightsReportConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

type InsightsReportConfigArrayOutput struct{ *pulumi.OutputState }

func (InsightsReportConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InsightsReportConfig)(nil)).Elem()
}

func (o InsightsReportConfigArrayOutput) ToInsightsReportConfigArrayOutput() InsightsReportConfigArrayOutput {
	return o
}

func (o InsightsReportConfigArrayOutput) ToInsightsReportConfigArrayOutputWithContext(ctx context.Context) InsightsReportConfigArrayOutput {
	return o
}

func (o InsightsReportConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*InsightsReportConfig] {
	return pulumix.Output[[]*InsightsReportConfig]{
		OutputState: o.OutputState,
	}
}

func (o InsightsReportConfigArrayOutput) Index(i pulumi.IntInput) InsightsReportConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InsightsReportConfig {
		return vs[0].([]*InsightsReportConfig)[vs[1].(int)]
	}).(InsightsReportConfigOutput)
}

type InsightsReportConfigMapOutput struct{ *pulumi.OutputState }

func (InsightsReportConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InsightsReportConfig)(nil)).Elem()
}

func (o InsightsReportConfigMapOutput) ToInsightsReportConfigMapOutput() InsightsReportConfigMapOutput {
	return o
}

func (o InsightsReportConfigMapOutput) ToInsightsReportConfigMapOutputWithContext(ctx context.Context) InsightsReportConfigMapOutput {
	return o
}

func (o InsightsReportConfigMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*InsightsReportConfig] {
	return pulumix.Output[map[string]*InsightsReportConfig]{
		OutputState: o.OutputState,
	}
}

func (o InsightsReportConfigMapOutput) MapIndex(k pulumi.StringInput) InsightsReportConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InsightsReportConfig {
		return vs[0].(map[string]*InsightsReportConfig)[vs[1].(string)]
	}).(InsightsReportConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InsightsReportConfigInput)(nil)).Elem(), &InsightsReportConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightsReportConfigArrayInput)(nil)).Elem(), InsightsReportConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightsReportConfigMapInput)(nil)).Elem(), InsightsReportConfigMap{})
	pulumi.RegisterOutputType(InsightsReportConfigOutput{})
	pulumi.RegisterOutputType(InsightsReportConfigArrayOutput{})
	pulumi.RegisterOutputType(InsightsReportConfigMapOutput{})
}
