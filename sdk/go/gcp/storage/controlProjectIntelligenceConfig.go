// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Storage Control Project Intelligence Config Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := storage.NewControlProjectIntelligenceConfig(ctx, "example", &storage.ControlProjectIntelligenceConfigArgs{
//				Name:          pulumi.String("test-project"),
//				EditionConfig: pulumi.String("TRIAL"),
//				Filter: &storage.ControlProjectIntelligenceConfigFilterArgs{
//					IncludedCloudStorageBuckets: &storage.ControlProjectIntelligenceConfigFilterIncludedCloudStorageBucketsArgs{
//						BucketIdRegexes: pulumi.StringArray{
//							pulumi.String("test-id-1*"),
//							pulumi.String("test-id-2*"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ProjectIntelligenceConfig can be imported using any of these accepted formats:
//
// * `projects/{{name}}/locations/global/intelligenceConfig`
//
// * `{{name}}`
//
// When using the `pulumi import` command, ProjectIntelligenceConfig can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:storage/controlProjectIntelligenceConfig:ControlProjectIntelligenceConfig default projects/{{name}}/locations/global/intelligenceConfig
// ```
//
// ```sh
// $ pulumi import gcp:storage/controlProjectIntelligenceConfig:ControlProjectIntelligenceConfig default {{name}}
// ```
type ControlProjectIntelligenceConfig struct {
	pulumi.CustomResourceState

	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig pulumi.StringOutput `pulumi:"editionConfig"`
	// The Intelligence config that is effective for the resource.
	// Structure is documented below.
	EffectiveIntelligenceConfigs ControlProjectIntelligenceConfigEffectiveIntelligenceConfigArrayOutput `pulumi:"effectiveIntelligenceConfigs"`
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter ControlProjectIntelligenceConfigFilterPtrOutput `pulumi:"filter"`
	// Identifier of the GCP project. For GCP project, this field can be project name or project number.
	Name pulumi.StringOutput `pulumi:"name"`
	// The trial configuration of the Storage Intelligence resource.
	// Structure is documented below.
	TrialConfigs ControlProjectIntelligenceConfigTrialConfigArrayOutput `pulumi:"trialConfigs"`
	// The time at which the Storage Intelligence Config resource is last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewControlProjectIntelligenceConfig registers a new resource with the given unique name, arguments, and options.
func NewControlProjectIntelligenceConfig(ctx *pulumi.Context,
	name string, args *ControlProjectIntelligenceConfigArgs, opts ...pulumi.ResourceOption) (*ControlProjectIntelligenceConfig, error) {
	if args == nil {
		args = &ControlProjectIntelligenceConfigArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ControlProjectIntelligenceConfig
	err := ctx.RegisterResource("gcp:storage/controlProjectIntelligenceConfig:ControlProjectIntelligenceConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetControlProjectIntelligenceConfig gets an existing ControlProjectIntelligenceConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetControlProjectIntelligenceConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ControlProjectIntelligenceConfigState, opts ...pulumi.ResourceOption) (*ControlProjectIntelligenceConfig, error) {
	var resource ControlProjectIntelligenceConfig
	err := ctx.ReadResource("gcp:storage/controlProjectIntelligenceConfig:ControlProjectIntelligenceConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ControlProjectIntelligenceConfig resources.
type controlProjectIntelligenceConfigState struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig *string `pulumi:"editionConfig"`
	// The Intelligence config that is effective for the resource.
	// Structure is documented below.
	EffectiveIntelligenceConfigs []ControlProjectIntelligenceConfigEffectiveIntelligenceConfig `pulumi:"effectiveIntelligenceConfigs"`
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter *ControlProjectIntelligenceConfigFilter `pulumi:"filter"`
	// Identifier of the GCP project. For GCP project, this field can be project name or project number.
	Name *string `pulumi:"name"`
	// The trial configuration of the Storage Intelligence resource.
	// Structure is documented below.
	TrialConfigs []ControlProjectIntelligenceConfigTrialConfig `pulumi:"trialConfigs"`
	// The time at which the Storage Intelligence Config resource is last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ControlProjectIntelligenceConfigState struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig pulumi.StringPtrInput
	// The Intelligence config that is effective for the resource.
	// Structure is documented below.
	EffectiveIntelligenceConfigs ControlProjectIntelligenceConfigEffectiveIntelligenceConfigArrayInput
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter ControlProjectIntelligenceConfigFilterPtrInput
	// Identifier of the GCP project. For GCP project, this field can be project name or project number.
	Name pulumi.StringPtrInput
	// The trial configuration of the Storage Intelligence resource.
	// Structure is documented below.
	TrialConfigs ControlProjectIntelligenceConfigTrialConfigArrayInput
	// The time at which the Storage Intelligence Config resource is last updated.
	UpdateTime pulumi.StringPtrInput
}

func (ControlProjectIntelligenceConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*controlProjectIntelligenceConfigState)(nil)).Elem()
}

type controlProjectIntelligenceConfigArgs struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig *string `pulumi:"editionConfig"`
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter *ControlProjectIntelligenceConfigFilter `pulumi:"filter"`
	// Identifier of the GCP project. For GCP project, this field can be project name or project number.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ControlProjectIntelligenceConfig resource.
type ControlProjectIntelligenceConfigArgs struct {
	// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
	EditionConfig pulumi.StringPtrInput
	// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
	// Structure is documented below.
	Filter ControlProjectIntelligenceConfigFilterPtrInput
	// Identifier of the GCP project. For GCP project, this field can be project name or project number.
	Name pulumi.StringPtrInput
}

func (ControlProjectIntelligenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*controlProjectIntelligenceConfigArgs)(nil)).Elem()
}

type ControlProjectIntelligenceConfigInput interface {
	pulumi.Input

	ToControlProjectIntelligenceConfigOutput() ControlProjectIntelligenceConfigOutput
	ToControlProjectIntelligenceConfigOutputWithContext(ctx context.Context) ControlProjectIntelligenceConfigOutput
}

func (*ControlProjectIntelligenceConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlProjectIntelligenceConfig)(nil)).Elem()
}

func (i *ControlProjectIntelligenceConfig) ToControlProjectIntelligenceConfigOutput() ControlProjectIntelligenceConfigOutput {
	return i.ToControlProjectIntelligenceConfigOutputWithContext(context.Background())
}

func (i *ControlProjectIntelligenceConfig) ToControlProjectIntelligenceConfigOutputWithContext(ctx context.Context) ControlProjectIntelligenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlProjectIntelligenceConfigOutput)
}

// ControlProjectIntelligenceConfigArrayInput is an input type that accepts ControlProjectIntelligenceConfigArray and ControlProjectIntelligenceConfigArrayOutput values.
// You can construct a concrete instance of `ControlProjectIntelligenceConfigArrayInput` via:
//
//	ControlProjectIntelligenceConfigArray{ ControlProjectIntelligenceConfigArgs{...} }
type ControlProjectIntelligenceConfigArrayInput interface {
	pulumi.Input

	ToControlProjectIntelligenceConfigArrayOutput() ControlProjectIntelligenceConfigArrayOutput
	ToControlProjectIntelligenceConfigArrayOutputWithContext(context.Context) ControlProjectIntelligenceConfigArrayOutput
}

type ControlProjectIntelligenceConfigArray []ControlProjectIntelligenceConfigInput

func (ControlProjectIntelligenceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ControlProjectIntelligenceConfig)(nil)).Elem()
}

func (i ControlProjectIntelligenceConfigArray) ToControlProjectIntelligenceConfigArrayOutput() ControlProjectIntelligenceConfigArrayOutput {
	return i.ToControlProjectIntelligenceConfigArrayOutputWithContext(context.Background())
}

func (i ControlProjectIntelligenceConfigArray) ToControlProjectIntelligenceConfigArrayOutputWithContext(ctx context.Context) ControlProjectIntelligenceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlProjectIntelligenceConfigArrayOutput)
}

// ControlProjectIntelligenceConfigMapInput is an input type that accepts ControlProjectIntelligenceConfigMap and ControlProjectIntelligenceConfigMapOutput values.
// You can construct a concrete instance of `ControlProjectIntelligenceConfigMapInput` via:
//
//	ControlProjectIntelligenceConfigMap{ "key": ControlProjectIntelligenceConfigArgs{...} }
type ControlProjectIntelligenceConfigMapInput interface {
	pulumi.Input

	ToControlProjectIntelligenceConfigMapOutput() ControlProjectIntelligenceConfigMapOutput
	ToControlProjectIntelligenceConfigMapOutputWithContext(context.Context) ControlProjectIntelligenceConfigMapOutput
}

type ControlProjectIntelligenceConfigMap map[string]ControlProjectIntelligenceConfigInput

func (ControlProjectIntelligenceConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ControlProjectIntelligenceConfig)(nil)).Elem()
}

func (i ControlProjectIntelligenceConfigMap) ToControlProjectIntelligenceConfigMapOutput() ControlProjectIntelligenceConfigMapOutput {
	return i.ToControlProjectIntelligenceConfigMapOutputWithContext(context.Background())
}

func (i ControlProjectIntelligenceConfigMap) ToControlProjectIntelligenceConfigMapOutputWithContext(ctx context.Context) ControlProjectIntelligenceConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlProjectIntelligenceConfigMapOutput)
}

type ControlProjectIntelligenceConfigOutput struct{ *pulumi.OutputState }

func (ControlProjectIntelligenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlProjectIntelligenceConfig)(nil)).Elem()
}

func (o ControlProjectIntelligenceConfigOutput) ToControlProjectIntelligenceConfigOutput() ControlProjectIntelligenceConfigOutput {
	return o
}

func (o ControlProjectIntelligenceConfigOutput) ToControlProjectIntelligenceConfigOutputWithContext(ctx context.Context) ControlProjectIntelligenceConfigOutput {
	return o
}

// Edition configuration of the Storage Intelligence resource. Valid values are INHERIT, TRIAL, DISABLED and STANDARD.
func (o ControlProjectIntelligenceConfigOutput) EditionConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlProjectIntelligenceConfig) pulumi.StringOutput { return v.EditionConfig }).(pulumi.StringOutput)
}

// The Intelligence config that is effective for the resource.
// Structure is documented below.
func (o ControlProjectIntelligenceConfigOutput) EffectiveIntelligenceConfigs() ControlProjectIntelligenceConfigEffectiveIntelligenceConfigArrayOutput {
	return o.ApplyT(func(v *ControlProjectIntelligenceConfig) ControlProjectIntelligenceConfigEffectiveIntelligenceConfigArrayOutput {
		return v.EffectiveIntelligenceConfigs
	}).(ControlProjectIntelligenceConfigEffectiveIntelligenceConfigArrayOutput)
}

// Filter over location and bucket using include or exclude semantics. Resources that match the include or exclude filter are exclusively included or excluded from the Storage Intelligence plan.
// Structure is documented below.
func (o ControlProjectIntelligenceConfigOutput) Filter() ControlProjectIntelligenceConfigFilterPtrOutput {
	return o.ApplyT(func(v *ControlProjectIntelligenceConfig) ControlProjectIntelligenceConfigFilterPtrOutput {
		return v.Filter
	}).(ControlProjectIntelligenceConfigFilterPtrOutput)
}

// Identifier of the GCP project. For GCP project, this field can be project name or project number.
func (o ControlProjectIntelligenceConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlProjectIntelligenceConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The trial configuration of the Storage Intelligence resource.
// Structure is documented below.
func (o ControlProjectIntelligenceConfigOutput) TrialConfigs() ControlProjectIntelligenceConfigTrialConfigArrayOutput {
	return o.ApplyT(func(v *ControlProjectIntelligenceConfig) ControlProjectIntelligenceConfigTrialConfigArrayOutput {
		return v.TrialConfigs
	}).(ControlProjectIntelligenceConfigTrialConfigArrayOutput)
}

// The time at which the Storage Intelligence Config resource is last updated.
func (o ControlProjectIntelligenceConfigOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ControlProjectIntelligenceConfig) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ControlProjectIntelligenceConfigArrayOutput struct{ *pulumi.OutputState }

func (ControlProjectIntelligenceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ControlProjectIntelligenceConfig)(nil)).Elem()
}

func (o ControlProjectIntelligenceConfigArrayOutput) ToControlProjectIntelligenceConfigArrayOutput() ControlProjectIntelligenceConfigArrayOutput {
	return o
}

func (o ControlProjectIntelligenceConfigArrayOutput) ToControlProjectIntelligenceConfigArrayOutputWithContext(ctx context.Context) ControlProjectIntelligenceConfigArrayOutput {
	return o
}

func (o ControlProjectIntelligenceConfigArrayOutput) Index(i pulumi.IntInput) ControlProjectIntelligenceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ControlProjectIntelligenceConfig {
		return vs[0].([]*ControlProjectIntelligenceConfig)[vs[1].(int)]
	}).(ControlProjectIntelligenceConfigOutput)
}

type ControlProjectIntelligenceConfigMapOutput struct{ *pulumi.OutputState }

func (ControlProjectIntelligenceConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ControlProjectIntelligenceConfig)(nil)).Elem()
}

func (o ControlProjectIntelligenceConfigMapOutput) ToControlProjectIntelligenceConfigMapOutput() ControlProjectIntelligenceConfigMapOutput {
	return o
}

func (o ControlProjectIntelligenceConfigMapOutput) ToControlProjectIntelligenceConfigMapOutputWithContext(ctx context.Context) ControlProjectIntelligenceConfigMapOutput {
	return o
}

func (o ControlProjectIntelligenceConfigMapOutput) MapIndex(k pulumi.StringInput) ControlProjectIntelligenceConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ControlProjectIntelligenceConfig {
		return vs[0].(map[string]*ControlProjectIntelligenceConfig)[vs[1].(string)]
	}).(ControlProjectIntelligenceConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ControlProjectIntelligenceConfigInput)(nil)).Elem(), &ControlProjectIntelligenceConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlProjectIntelligenceConfigArrayInput)(nil)).Elem(), ControlProjectIntelligenceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlProjectIntelligenceConfigMapInput)(nil)).Elem(), ControlProjectIntelligenceConfigMap{})
	pulumi.RegisterOutputType(ControlProjectIntelligenceConfigOutput{})
	pulumi.RegisterOutputType(ControlProjectIntelligenceConfigArrayOutput{})
	pulumi.RegisterOutputType(ControlProjectIntelligenceConfigMapOutput{})
}
