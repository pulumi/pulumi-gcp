// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms* b/{{name}} * {{name}} Any variables not passed in the import command will be taken from the provider configuration. Cloud Storage bucket IAM resources can be imported using the resource identifiers, role, and member. IAM member imports use space-delimited identifiersthe resource in question, the role, and the member identity, e.g.
//
// ```sh
//  $ pulumi import gcp:storage/bucketIAMMember:BucketIAMMember editor "b/{{bucket}} roles/storage.objectViewer user:jane@example.com"
// ```
//
//  IAM binding imports use space-delimited identifiersthe resource in question and the role, e.g.
//
// ```sh
//  $ pulumi import gcp:storage/bucketIAMMember:BucketIAMMember editor "b/{{bucket}} roles/storage.objectViewer"
// ```
//
//  IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
//  $ pulumi import gcp:storage/bucketIAMMember:BucketIAMMember editor b/{{bucket}}
// ```
//
//  -> **Custom Roles**If you're importing a IAM resource with a custom role, make sure to use the
//
// full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type BucketIAMMember struct {
	pulumi.CustomResourceState

	// Used to find the parent resource to bind the IAM policy to
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition BucketIAMMemberConditionPtrOutput `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag   pulumi.StringOutput `pulumi:"etag"`
	Member pulumi.StringOutput `pulumi:"member"`
	// The role that should be applied. Only one
	// `storage.BucketIAMBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringOutput `pulumi:"role"`
}

// NewBucketIAMMember registers a new resource with the given unique name, arguments, and options.
func NewBucketIAMMember(ctx *pulumi.Context,
	name string, args *BucketIAMMemberArgs, opts ...pulumi.ResourceOption) (*BucketIAMMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	var resource BucketIAMMember
	err := ctx.RegisterResource("gcp:storage/bucketIAMMember:BucketIAMMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketIAMMember gets an existing BucketIAMMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketIAMMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketIAMMemberState, opts ...pulumi.ResourceOption) (*BucketIAMMember, error) {
	var resource BucketIAMMember
	err := ctx.ReadResource("gcp:storage/bucketIAMMember:BucketIAMMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketIAMMember resources.
type bucketIAMMemberState struct {
	// Used to find the parent resource to bind the IAM policy to
	Bucket *string `pulumi:"bucket"`
	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *BucketIAMMemberCondition `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag   *string `pulumi:"etag"`
	Member *string `pulumi:"member"`
	// The role that should be applied. Only one
	// `storage.BucketIAMBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role *string `pulumi:"role"`
}

type BucketIAMMemberState struct {
	// Used to find the parent resource to bind the IAM policy to
	Bucket pulumi.StringPtrInput
	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition BucketIAMMemberConditionPtrInput
	// (Computed) The etag of the IAM policy.
	Etag   pulumi.StringPtrInput
	Member pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `storage.BucketIAMBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringPtrInput
}

func (BucketIAMMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketIAMMemberState)(nil)).Elem()
}

type bucketIAMMemberArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Bucket string `pulumi:"bucket"`
	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *BucketIAMMemberCondition `pulumi:"condition"`
	Member    string                    `pulumi:"member"`
	// The role that should be applied. Only one
	// `storage.BucketIAMBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a BucketIAMMember resource.
type BucketIAMMemberArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	Bucket pulumi.StringInput
	// ) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition BucketIAMMemberConditionPtrInput
	Member    pulumi.StringInput
	// The role that should be applied. Only one
	// `storage.BucketIAMBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput
}

func (BucketIAMMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketIAMMemberArgs)(nil)).Elem()
}

type BucketIAMMemberInput interface {
	pulumi.Input

	ToBucketIAMMemberOutput() BucketIAMMemberOutput
	ToBucketIAMMemberOutputWithContext(ctx context.Context) BucketIAMMemberOutput
}

func (*BucketIAMMember) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMember)(nil))
}

func (i *BucketIAMMember) ToBucketIAMMemberOutput() BucketIAMMemberOutput {
	return i.ToBucketIAMMemberOutputWithContext(context.Background())
}

func (i *BucketIAMMember) ToBucketIAMMemberOutputWithContext(ctx context.Context) BucketIAMMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberOutput)
}

func (i *BucketIAMMember) ToBucketIAMMemberPtrOutput() BucketIAMMemberPtrOutput {
	return i.ToBucketIAMMemberPtrOutputWithContext(context.Background())
}

func (i *BucketIAMMember) ToBucketIAMMemberPtrOutputWithContext(ctx context.Context) BucketIAMMemberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberPtrOutput)
}

type BucketIAMMemberPtrInput interface {
	pulumi.Input

	ToBucketIAMMemberPtrOutput() BucketIAMMemberPtrOutput
	ToBucketIAMMemberPtrOutputWithContext(ctx context.Context) BucketIAMMemberPtrOutput
}

type bucketIAMMemberPtrType BucketIAMMemberArgs

func (*bucketIAMMemberPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMMember)(nil))
}

func (i *bucketIAMMemberPtrType) ToBucketIAMMemberPtrOutput() BucketIAMMemberPtrOutput {
	return i.ToBucketIAMMemberPtrOutputWithContext(context.Background())
}

func (i *bucketIAMMemberPtrType) ToBucketIAMMemberPtrOutputWithContext(ctx context.Context) BucketIAMMemberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberPtrOutput)
}

// BucketIAMMemberArrayInput is an input type that accepts BucketIAMMemberArray and BucketIAMMemberArrayOutput values.
// You can construct a concrete instance of `BucketIAMMemberArrayInput` via:
//
//          BucketIAMMemberArray{ BucketIAMMemberArgs{...} }
type BucketIAMMemberArrayInput interface {
	pulumi.Input

	ToBucketIAMMemberArrayOutput() BucketIAMMemberArrayOutput
	ToBucketIAMMemberArrayOutputWithContext(context.Context) BucketIAMMemberArrayOutput
}

type BucketIAMMemberArray []BucketIAMMemberInput

func (BucketIAMMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*BucketIAMMember)(nil))
}

func (i BucketIAMMemberArray) ToBucketIAMMemberArrayOutput() BucketIAMMemberArrayOutput {
	return i.ToBucketIAMMemberArrayOutputWithContext(context.Background())
}

func (i BucketIAMMemberArray) ToBucketIAMMemberArrayOutputWithContext(ctx context.Context) BucketIAMMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberArrayOutput)
}

// BucketIAMMemberMapInput is an input type that accepts BucketIAMMemberMap and BucketIAMMemberMapOutput values.
// You can construct a concrete instance of `BucketIAMMemberMapInput` via:
//
//          BucketIAMMemberMap{ "key": BucketIAMMemberArgs{...} }
type BucketIAMMemberMapInput interface {
	pulumi.Input

	ToBucketIAMMemberMapOutput() BucketIAMMemberMapOutput
	ToBucketIAMMemberMapOutputWithContext(context.Context) BucketIAMMemberMapOutput
}

type BucketIAMMemberMap map[string]BucketIAMMemberInput

func (BucketIAMMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*BucketIAMMember)(nil))
}

func (i BucketIAMMemberMap) ToBucketIAMMemberMapOutput() BucketIAMMemberMapOutput {
	return i.ToBucketIAMMemberMapOutputWithContext(context.Background())
}

func (i BucketIAMMemberMap) ToBucketIAMMemberMapOutputWithContext(ctx context.Context) BucketIAMMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberMapOutput)
}

type BucketIAMMemberOutput struct {
	*pulumi.OutputState
}

func (BucketIAMMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMember)(nil))
}

func (o BucketIAMMemberOutput) ToBucketIAMMemberOutput() BucketIAMMemberOutput {
	return o
}

func (o BucketIAMMemberOutput) ToBucketIAMMemberOutputWithContext(ctx context.Context) BucketIAMMemberOutput {
	return o
}

func (o BucketIAMMemberOutput) ToBucketIAMMemberPtrOutput() BucketIAMMemberPtrOutput {
	return o.ToBucketIAMMemberPtrOutputWithContext(context.Background())
}

func (o BucketIAMMemberOutput) ToBucketIAMMemberPtrOutputWithContext(ctx context.Context) BucketIAMMemberPtrOutput {
	return o.ApplyT(func(v BucketIAMMember) *BucketIAMMember {
		return &v
	}).(BucketIAMMemberPtrOutput)
}

type BucketIAMMemberPtrOutput struct {
	*pulumi.OutputState
}

func (BucketIAMMemberPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMMember)(nil))
}

func (o BucketIAMMemberPtrOutput) ToBucketIAMMemberPtrOutput() BucketIAMMemberPtrOutput {
	return o
}

func (o BucketIAMMemberPtrOutput) ToBucketIAMMemberPtrOutputWithContext(ctx context.Context) BucketIAMMemberPtrOutput {
	return o
}

type BucketIAMMemberArrayOutput struct{ *pulumi.OutputState }

func (BucketIAMMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketIAMMember)(nil))
}

func (o BucketIAMMemberArrayOutput) ToBucketIAMMemberArrayOutput() BucketIAMMemberArrayOutput {
	return o
}

func (o BucketIAMMemberArrayOutput) ToBucketIAMMemberArrayOutputWithContext(ctx context.Context) BucketIAMMemberArrayOutput {
	return o
}

func (o BucketIAMMemberArrayOutput) Index(i pulumi.IntInput) BucketIAMMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketIAMMember {
		return vs[0].([]BucketIAMMember)[vs[1].(int)]
	}).(BucketIAMMemberOutput)
}

type BucketIAMMemberMapOutput struct{ *pulumi.OutputState }

func (BucketIAMMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BucketIAMMember)(nil))
}

func (o BucketIAMMemberMapOutput) ToBucketIAMMemberMapOutput() BucketIAMMemberMapOutput {
	return o
}

func (o BucketIAMMemberMapOutput) ToBucketIAMMemberMapOutputWithContext(ctx context.Context) BucketIAMMemberMapOutput {
	return o
}

func (o BucketIAMMemberMapOutput) MapIndex(k pulumi.StringInput) BucketIAMMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BucketIAMMember {
		return vs[0].(map[string]BucketIAMMember)[vs[1].(string)]
	}).(BucketIAMMemberOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketIAMMemberOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberPtrOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberArrayOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberMapOutput{})
}
