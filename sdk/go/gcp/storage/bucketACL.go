// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Authoritatively manages a bucket's ACLs in Google cloud storage service (GCS). For more information see
// [the official documentation](https://cloud.google.com/storage/docs/access-control/lists)
// and
// [API](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls).
//
// Bucket ACLs can be managed non authoritatively using the `storageBucketAccessControl` resource. Do not use these two resources in conjunction to manage the same bucket.
//
// Permissions can be granted either by ACLs or Cloud IAM policies. In general, permissions granted by Cloud IAM policies do not appear in ACLs, and permissions granted by ACLs do not appear in Cloud IAM policies. The only exception is for ACLs applied directly on a bucket and certain bucket-level Cloud IAM policies, as described in [Cloud IAM relation to ACLs](https://cloud.google.com/storage/docs/access-control/iam#acls).
//
// **NOTE** This resource will not remove the `project-owners-<project_id>` entity from the `OWNER` role.
//
// ## Example Usage
//
// Example creating an ACL on a bucket with one owner, and one reader.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v4/go/gcp/storage"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := storage.NewBucket(ctx, "image_store", &storage.BucketArgs{
// 			Location: pulumi.String("EU"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = storage.NewBucketACL(ctx, "image_store_acl", &storage.BucketACLArgs{
// 			Bucket: image_store.Name,
// 			RoleEntities: pulumi.StringArray{
// 				pulumi.String("OWNER:user-my.email@gmail.com"),
// 				pulumi.String("READER:group-mygroup"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// This resource does not support import.
type BucketACL struct {
	pulumi.CustomResourceState

	// The name of the bucket it applies to.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// Configure this ACL to be the default ACL.
	DefaultAcl pulumi.StringPtrOutput `pulumi:"defaultAcl"`
	// The [canned GCS ACL](https://cloud.google.com/storage/docs/access-control/lists#predefined-acl) to apply. Must be set if `roleEntity` is not.
	PredefinedAcl pulumi.StringPtrOutput `pulumi:"predefinedAcl"`
	// List of role/entity pairs in the form `ROLE:entity`. See [GCS Bucket ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls)  for more details. Must be set if `predefinedAcl` is not.
	RoleEntities pulumi.StringArrayOutput `pulumi:"roleEntities"`
}

// NewBucketACL registers a new resource with the given unique name, arguments, and options.
func NewBucketACL(ctx *pulumi.Context,
	name string, args *BucketACLArgs, opts ...pulumi.ResourceOption) (*BucketACL, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	var resource BucketACL
	err := ctx.RegisterResource("gcp:storage/bucketACL:BucketACL", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketACL gets an existing BucketACL resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketACL(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketACLState, opts ...pulumi.ResourceOption) (*BucketACL, error) {
	var resource BucketACL
	err := ctx.ReadResource("gcp:storage/bucketACL:BucketACL", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketACL resources.
type bucketACLState struct {
	// The name of the bucket it applies to.
	Bucket *string `pulumi:"bucket"`
	// Configure this ACL to be the default ACL.
	DefaultAcl *string `pulumi:"defaultAcl"`
	// The [canned GCS ACL](https://cloud.google.com/storage/docs/access-control/lists#predefined-acl) to apply. Must be set if `roleEntity` is not.
	PredefinedAcl *string `pulumi:"predefinedAcl"`
	// List of role/entity pairs in the form `ROLE:entity`. See [GCS Bucket ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls)  for more details. Must be set if `predefinedAcl` is not.
	RoleEntities []string `pulumi:"roleEntities"`
}

type BucketACLState struct {
	// The name of the bucket it applies to.
	Bucket pulumi.StringPtrInput
	// Configure this ACL to be the default ACL.
	DefaultAcl pulumi.StringPtrInput
	// The [canned GCS ACL](https://cloud.google.com/storage/docs/access-control/lists#predefined-acl) to apply. Must be set if `roleEntity` is not.
	PredefinedAcl pulumi.StringPtrInput
	// List of role/entity pairs in the form `ROLE:entity`. See [GCS Bucket ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls)  for more details. Must be set if `predefinedAcl` is not.
	RoleEntities pulumi.StringArrayInput
}

func (BucketACLState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketACLState)(nil)).Elem()
}

type bucketACLArgs struct {
	// The name of the bucket it applies to.
	Bucket string `pulumi:"bucket"`
	// Configure this ACL to be the default ACL.
	DefaultAcl *string `pulumi:"defaultAcl"`
	// The [canned GCS ACL](https://cloud.google.com/storage/docs/access-control/lists#predefined-acl) to apply. Must be set if `roleEntity` is not.
	PredefinedAcl *string `pulumi:"predefinedAcl"`
	// List of role/entity pairs in the form `ROLE:entity`. See [GCS Bucket ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls)  for more details. Must be set if `predefinedAcl` is not.
	RoleEntities []string `pulumi:"roleEntities"`
}

// The set of arguments for constructing a BucketACL resource.
type BucketACLArgs struct {
	// The name of the bucket it applies to.
	Bucket pulumi.StringInput
	// Configure this ACL to be the default ACL.
	DefaultAcl pulumi.StringPtrInput
	// The [canned GCS ACL](https://cloud.google.com/storage/docs/access-control/lists#predefined-acl) to apply. Must be set if `roleEntity` is not.
	PredefinedAcl pulumi.StringPtrInput
	// List of role/entity pairs in the form `ROLE:entity`. See [GCS Bucket ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls)  for more details. Must be set if `predefinedAcl` is not.
	RoleEntities pulumi.StringArrayInput
}

func (BucketACLArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketACLArgs)(nil)).Elem()
}

type BucketACLInput interface {
	pulumi.Input

	ToBucketACLOutput() BucketACLOutput
	ToBucketACLOutputWithContext(ctx context.Context) BucketACLOutput
}

func (*BucketACL) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketACL)(nil))
}

func (i *BucketACL) ToBucketACLOutput() BucketACLOutput {
	return i.ToBucketACLOutputWithContext(context.Background())
}

func (i *BucketACL) ToBucketACLOutputWithContext(ctx context.Context) BucketACLOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketACLOutput)
}

func (i *BucketACL) ToBucketACLPtrOutput() BucketACLPtrOutput {
	return i.ToBucketACLPtrOutputWithContext(context.Background())
}

func (i *BucketACL) ToBucketACLPtrOutputWithContext(ctx context.Context) BucketACLPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketACLPtrOutput)
}

type BucketACLPtrInput interface {
	pulumi.Input

	ToBucketACLPtrOutput() BucketACLPtrOutput
	ToBucketACLPtrOutputWithContext(ctx context.Context) BucketACLPtrOutput
}

type bucketACLPtrType BucketACLArgs

func (*bucketACLPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketACL)(nil))
}

func (i *bucketACLPtrType) ToBucketACLPtrOutput() BucketACLPtrOutput {
	return i.ToBucketACLPtrOutputWithContext(context.Background())
}

func (i *bucketACLPtrType) ToBucketACLPtrOutputWithContext(ctx context.Context) BucketACLPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketACLPtrOutput)
}

// BucketACLArrayInput is an input type that accepts BucketACLArray and BucketACLArrayOutput values.
// You can construct a concrete instance of `BucketACLArrayInput` via:
//
//          BucketACLArray{ BucketACLArgs{...} }
type BucketACLArrayInput interface {
	pulumi.Input

	ToBucketACLArrayOutput() BucketACLArrayOutput
	ToBucketACLArrayOutputWithContext(context.Context) BucketACLArrayOutput
}

type BucketACLArray []BucketACLInput

func (BucketACLArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*BucketACL)(nil))
}

func (i BucketACLArray) ToBucketACLArrayOutput() BucketACLArrayOutput {
	return i.ToBucketACLArrayOutputWithContext(context.Background())
}

func (i BucketACLArray) ToBucketACLArrayOutputWithContext(ctx context.Context) BucketACLArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketACLArrayOutput)
}

// BucketACLMapInput is an input type that accepts BucketACLMap and BucketACLMapOutput values.
// You can construct a concrete instance of `BucketACLMapInput` via:
//
//          BucketACLMap{ "key": BucketACLArgs{...} }
type BucketACLMapInput interface {
	pulumi.Input

	ToBucketACLMapOutput() BucketACLMapOutput
	ToBucketACLMapOutputWithContext(context.Context) BucketACLMapOutput
}

type BucketACLMap map[string]BucketACLInput

func (BucketACLMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*BucketACL)(nil))
}

func (i BucketACLMap) ToBucketACLMapOutput() BucketACLMapOutput {
	return i.ToBucketACLMapOutputWithContext(context.Background())
}

func (i BucketACLMap) ToBucketACLMapOutputWithContext(ctx context.Context) BucketACLMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketACLMapOutput)
}

type BucketACLOutput struct {
	*pulumi.OutputState
}

func (BucketACLOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketACL)(nil))
}

func (o BucketACLOutput) ToBucketACLOutput() BucketACLOutput {
	return o
}

func (o BucketACLOutput) ToBucketACLOutputWithContext(ctx context.Context) BucketACLOutput {
	return o
}

func (o BucketACLOutput) ToBucketACLPtrOutput() BucketACLPtrOutput {
	return o.ToBucketACLPtrOutputWithContext(context.Background())
}

func (o BucketACLOutput) ToBucketACLPtrOutputWithContext(ctx context.Context) BucketACLPtrOutput {
	return o.ApplyT(func(v BucketACL) *BucketACL {
		return &v
	}).(BucketACLPtrOutput)
}

type BucketACLPtrOutput struct {
	*pulumi.OutputState
}

func (BucketACLPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketACL)(nil))
}

func (o BucketACLPtrOutput) ToBucketACLPtrOutput() BucketACLPtrOutput {
	return o
}

func (o BucketACLPtrOutput) ToBucketACLPtrOutputWithContext(ctx context.Context) BucketACLPtrOutput {
	return o
}

type BucketACLArrayOutput struct{ *pulumi.OutputState }

func (BucketACLArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketACL)(nil))
}

func (o BucketACLArrayOutput) ToBucketACLArrayOutput() BucketACLArrayOutput {
	return o
}

func (o BucketACLArrayOutput) ToBucketACLArrayOutputWithContext(ctx context.Context) BucketACLArrayOutput {
	return o
}

func (o BucketACLArrayOutput) Index(i pulumi.IntInput) BucketACLOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketACL {
		return vs[0].([]BucketACL)[vs[1].(int)]
	}).(BucketACLOutput)
}

type BucketACLMapOutput struct{ *pulumi.OutputState }

func (BucketACLMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BucketACL)(nil))
}

func (o BucketACLMapOutput) ToBucketACLMapOutput() BucketACLMapOutput {
	return o
}

func (o BucketACLMapOutput) ToBucketACLMapOutputWithContext(ctx context.Context) BucketACLMapOutput {
	return o
}

func (o BucketACLMapOutput) MapIndex(k pulumi.StringInput) BucketACLOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BucketACL {
		return vs[0].(map[string]BucketACL)[vs[1].(string)]
	}).(BucketACLOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketACLOutput{})
	pulumi.RegisterOutputType(BucketACLPtrOutput{})
	pulumi.RegisterOutputType(BucketACLArrayOutput{})
	pulumi.RegisterOutputType(BucketACLMapOutput{})
}
