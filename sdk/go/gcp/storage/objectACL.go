// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Authoritatively manages the access control list (ACL) for an object in a Google
// Cloud Storage (GCS) bucket. Removing a `google_storage_object_acl` sets the
// acl to the `private` [predefined ACL](https://cloud.google.com/storage/docs/access-control#predefined-acl).
// 
// For more information see
// [the official documentation](https://cloud.google.com/storage/docs/access-control/lists) 
// and 
// [API](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls).
// 
// > Want fine-grained control over object ACLs? Use `google_storage_object_access_control` to control individual
// role entity pairs.
type ObjectACL struct {
	s *pulumi.ResourceState
}

// NewObjectACL registers a new resource with the given unique name, arguments, and options.
func NewObjectACL(ctx *pulumi.Context,
	name string, args *ObjectACLArgs, opts ...pulumi.ResourceOpt) (*ObjectACL, error) {
	if args == nil || args.Bucket == nil {
		return nil, errors.New("missing required argument 'Bucket'")
	}
	if args == nil || args.Object == nil {
		return nil, errors.New("missing required argument 'Object'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bucket"] = nil
		inputs["object"] = nil
		inputs["predefinedAcl"] = nil
		inputs["roleEntities"] = nil
	} else {
		inputs["bucket"] = args.Bucket
		inputs["object"] = args.Object
		inputs["predefinedAcl"] = args.PredefinedAcl
		inputs["roleEntities"] = args.RoleEntities
	}
	s, err := ctx.RegisterResource("gcp:storage/objectACL:ObjectACL", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ObjectACL{s: s}, nil
}

// GetObjectACL gets an existing ObjectACL resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectACL(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ObjectACLState, opts ...pulumi.ResourceOpt) (*ObjectACL, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bucket"] = state.Bucket
		inputs["object"] = state.Object
		inputs["predefinedAcl"] = state.PredefinedAcl
		inputs["roleEntities"] = state.RoleEntities
	}
	s, err := ctx.ReadResource("gcp:storage/objectACL:ObjectACL", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ObjectACL{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ObjectACL) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ObjectACL) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the bucket the object is stored in.
func (r *ObjectACL) Bucket() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["bucket"])
}

// The name of the object to apply the acl to.
func (r *ObjectACL) Object() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["object"])
}

// The "canned" [predefined ACL](https://cloud.google.com/storage/docs/access-control#predefined-acl) to apply. Must be set if `role_entity` is not.
func (r *ObjectACL) PredefinedAcl() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["predefinedAcl"])
}

// List of role/entity pairs in the form `ROLE:entity`. See [GCS Object ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls) for more details.
// Must be set if `predefined_acl` is not.
func (r *ObjectACL) RoleEntities() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["roleEntities"])
}

// Input properties used for looking up and filtering ObjectACL resources.
type ObjectACLState struct {
	// The name of the bucket the object is stored in.
	Bucket interface{}
	// The name of the object to apply the acl to.
	Object interface{}
	// The "canned" [predefined ACL](https://cloud.google.com/storage/docs/access-control#predefined-acl) to apply. Must be set if `role_entity` is not.
	PredefinedAcl interface{}
	// List of role/entity pairs in the form `ROLE:entity`. See [GCS Object ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls) for more details.
	// Must be set if `predefined_acl` is not.
	RoleEntities interface{}
}

// The set of arguments for constructing a ObjectACL resource.
type ObjectACLArgs struct {
	// The name of the bucket the object is stored in.
	Bucket interface{}
	// The name of the object to apply the acl to.
	Object interface{}
	// The "canned" [predefined ACL](https://cloud.google.com/storage/docs/access-control#predefined-acl) to apply. Must be set if `role_entity` is not.
	PredefinedAcl interface{}
	// List of role/entity pairs in the form `ROLE:entity`. See [GCS Object ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls) for more details.
	// Must be set if `predefined_acl` is not.
	RoleEntities interface{}
}
