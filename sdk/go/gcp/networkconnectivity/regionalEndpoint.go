// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkconnectivity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Regional Private Service Connect (PSC) endpoint resource.
//
// To get more information about RegionalEndpoint, see:
//
// * [API documentation](https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest/v1/projects.locations.regionalEndpoints)
// * How-to Guides
//   - [Access regional Google APIs through endpoints](https://cloud.google.com/vpc/docs/access-regional-google-apis-endpoints)
//
// ## Example Usage
//
// ### Network Connectivity Regional Endpoint Regional Access
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/networkconnectivity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myNetwork, err := compute.NewNetwork(ctx, "my_network", &compute.NetworkArgs{
//				Name:                  pulumi.String("my-network"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			mySubnetwork, err := compute.NewSubnetwork(ctx, "my_subnetwork", &compute.SubnetworkArgs{
//				Name:        pulumi.String("my-subnetwork"),
//				IpCidrRange: pulumi.String("192.168.0.0/24"),
//				Region:      pulumi.String("us-central1"),
//				Network:     myNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networkconnectivity.NewRegionalEndpoint(ctx, "default", &networkconnectivity.RegionalEndpointArgs{
//				Name:            pulumi.String("my-rep"),
//				Location:        pulumi.String("us-central1"),
//				TargetGoogleApi: pulumi.String("boqcodelabjaimin-pa.us-central1.p.rep.googleapis.com"),
//				AccessType:      pulumi.String("REGIONAL"),
//				Address:         pulumi.String("192.168.0.5"),
//				Network:         myNetwork.ID(),
//				Subnetwork:      mySubnetwork.ID(),
//				Description:     pulumi.String("My RegionalEndpoint targeting Google API boqcodelabjaimin-pa.us-central1.p.rep.googleapis.com"),
//				Labels: pulumi.StringMap{
//					"env": pulumi.String("default"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Network Connectivity Regional Endpoint Global Access
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/networkconnectivity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myNetwork, err := compute.NewNetwork(ctx, "my_network", &compute.NetworkArgs{
//				Name:                  pulumi.String("my-network"),
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			mySubnetwork, err := compute.NewSubnetwork(ctx, "my_subnetwork", &compute.SubnetworkArgs{
//				Name:        pulumi.String("my-subnetwork"),
//				IpCidrRange: pulumi.String("192.168.0.0/24"),
//				Region:      pulumi.String("us-central1"),
//				Network:     myNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networkconnectivity.NewRegionalEndpoint(ctx, "default", &networkconnectivity.RegionalEndpointArgs{
//				Name:            pulumi.String("my-rep"),
//				Location:        pulumi.String("us-central1"),
//				TargetGoogleApi: pulumi.String("boqcodelabjaimin-pa.us-central1.p.rep.googleapis.com"),
//				AccessType:      pulumi.String("GLOBAL"),
//				Address:         pulumi.String("192.168.0.4"),
//				Network:         myNetwork.ID(),
//				Subnetwork:      mySubnetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RegionalEndpoint can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/regionalEndpoints/{{name}}`
//
// * `{{project}}/{{location}}/{{name}}`
//
// * `{{location}}/{{name}}`
//
// When using the `pulumi import` command, RegionalEndpoint can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:networkconnectivity/regionalEndpoint:RegionalEndpoint default projects/{{project}}/locations/{{location}}/regionalEndpoints/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:networkconnectivity/regionalEndpoint:RegionalEndpoint default {{project}}/{{location}}/{{name}}
// ```
//
// ```sh
// $ pulumi import gcp:networkconnectivity/regionalEndpoint:RegionalEndpoint default {{location}}/{{name}}
// ```
type RegionalEndpoint struct {
	pulumi.CustomResourceState

	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable global access.
	// Possible values are: `GLOBAL`, `REGIONAL`.
	AccessType pulumi.StringOutput `pulumi:"accessType"`
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of the following formats: * IPv4 address as in `10.0.0.1` * Address resource URI as in `projects/{project}/regions/{region}/addresses/{address_name}`
	// > **Note:** This field accepts both a reference to a Compute Address resource, which is the resource name of which format is given in the description, and IP literal value. If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4 version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address pulumi.StringOutput `pulumi:"address"`
	// Time when the RegionalEndpoint was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// User-defined labels.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the RegionalEndpoint.
	//
	// ***
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the RegionalEndpoint.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the VPC network for this private regional endpoint. Format: `projects/{project}/global/networks/{network}`
	Network pulumi.StringOutput `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format: `//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}`
	PscForwardingRule pulumi.StringOutput `pulumi:"pscForwardingRule"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// The name of the subnetwork from which the IP address will be allocated. Format: `projects/{project}/regions/{region}/subnetworks/{subnetwork}`
	Subnetwork pulumi.StringOutput `pulumi:"subnetwork"`
	// The service endpoint this private regional endpoint connects to. Format: `{apiname}.{region}.p.rep.googleapis.com` Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi pulumi.StringOutput `pulumi:"targetGoogleApi"`
	// Time when the RegionalEndpoint was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewRegionalEndpoint registers a new resource with the given unique name, arguments, and options.
func NewRegionalEndpoint(ctx *pulumi.Context,
	name string, args *RegionalEndpointArgs, opts ...pulumi.ResourceOption) (*RegionalEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessType == nil {
		return nil, errors.New("invalid value for required argument 'AccessType'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.TargetGoogleApi == nil {
		return nil, errors.New("invalid value for required argument 'TargetGoogleApi'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RegionalEndpoint
	err := ctx.RegisterResource("gcp:networkconnectivity/regionalEndpoint:RegionalEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionalEndpoint gets an existing RegionalEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionalEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionalEndpointState, opts ...pulumi.ResourceOption) (*RegionalEndpoint, error) {
	var resource RegionalEndpoint
	err := ctx.ReadResource("gcp:networkconnectivity/regionalEndpoint:RegionalEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionalEndpoint resources.
type regionalEndpointState struct {
	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable global access.
	// Possible values are: `GLOBAL`, `REGIONAL`.
	AccessType *string `pulumi:"accessType"`
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of the following formats: * IPv4 address as in `10.0.0.1` * Address resource URI as in `projects/{project}/regions/{region}/addresses/{address_name}`
	// > **Note:** This field accepts both a reference to a Compute Address resource, which is the resource name of which format is given in the description, and IP literal value. If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4 version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address *string `pulumi:"address"`
	// Time when the RegionalEndpoint was created.
	CreateTime *string `pulumi:"createTime"`
	// A description of this resource.
	Description *string `pulumi:"description"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// User-defined labels.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the RegionalEndpoint.
	//
	// ***
	Location *string `pulumi:"location"`
	// The name of the RegionalEndpoint.
	Name *string `pulumi:"name"`
	// The name of the VPC network for this private regional endpoint. Format: `projects/{project}/global/networks/{network}`
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format: `//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}`
	PscForwardingRule *string `pulumi:"pscForwardingRule"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// The name of the subnetwork from which the IP address will be allocated. Format: `projects/{project}/regions/{region}/subnetworks/{subnetwork}`
	Subnetwork *string `pulumi:"subnetwork"`
	// The service endpoint this private regional endpoint connects to. Format: `{apiname}.{region}.p.rep.googleapis.com` Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi *string `pulumi:"targetGoogleApi"`
	// Time when the RegionalEndpoint was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type RegionalEndpointState struct {
	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable global access.
	// Possible values are: `GLOBAL`, `REGIONAL`.
	AccessType pulumi.StringPtrInput
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of the following formats: * IPv4 address as in `10.0.0.1` * Address resource URI as in `projects/{project}/regions/{region}/addresses/{address_name}`
	// > **Note:** This field accepts both a reference to a Compute Address resource, which is the resource name of which format is given in the description, and IP literal value. If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4 version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address pulumi.StringPtrInput
	// Time when the RegionalEndpoint was created.
	CreateTime pulumi.StringPtrInput
	// A description of this resource.
	Description pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// User-defined labels.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the RegionalEndpoint.
	//
	// ***
	Location pulumi.StringPtrInput
	// The name of the RegionalEndpoint.
	Name pulumi.StringPtrInput
	// The name of the VPC network for this private regional endpoint. Format: `projects/{project}/global/networks/{network}`
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format: `//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}`
	PscForwardingRule pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// The name of the subnetwork from which the IP address will be allocated. Format: `projects/{project}/regions/{region}/subnetworks/{subnetwork}`
	Subnetwork pulumi.StringPtrInput
	// The service endpoint this private regional endpoint connects to. Format: `{apiname}.{region}.p.rep.googleapis.com` Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi pulumi.StringPtrInput
	// Time when the RegionalEndpoint was updated.
	UpdateTime pulumi.StringPtrInput
}

func (RegionalEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionalEndpointState)(nil)).Elem()
}

type regionalEndpointArgs struct {
	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable global access.
	// Possible values are: `GLOBAL`, `REGIONAL`.
	AccessType string `pulumi:"accessType"`
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of the following formats: * IPv4 address as in `10.0.0.1` * Address resource URI as in `projects/{project}/regions/{region}/addresses/{address_name}`
	// > **Note:** This field accepts both a reference to a Compute Address resource, which is the resource name of which format is given in the description, and IP literal value. If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4 version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address *string `pulumi:"address"`
	// A description of this resource.
	Description *string `pulumi:"description"`
	// User-defined labels.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the RegionalEndpoint.
	//
	// ***
	Location string `pulumi:"location"`
	// The name of the RegionalEndpoint.
	Name *string `pulumi:"name"`
	// The name of the VPC network for this private regional endpoint. Format: `projects/{project}/global/networks/{network}`
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The name of the subnetwork from which the IP address will be allocated. Format: `projects/{project}/regions/{region}/subnetworks/{subnetwork}`
	Subnetwork *string `pulumi:"subnetwork"`
	// The service endpoint this private regional endpoint connects to. Format: `{apiname}.{region}.p.rep.googleapis.com` Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi string `pulumi:"targetGoogleApi"`
}

// The set of arguments for constructing a RegionalEndpoint resource.
type RegionalEndpointArgs struct {
	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable global access.
	// Possible values are: `GLOBAL`, `REGIONAL`.
	AccessType pulumi.StringInput
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of the following formats: * IPv4 address as in `10.0.0.1` * Address resource URI as in `projects/{project}/regions/{region}/addresses/{address_name}`
	// > **Note:** This field accepts both a reference to a Compute Address resource, which is the resource name of which format is given in the description, and IP literal value. If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4 version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address pulumi.StringPtrInput
	// A description of this resource.
	Description pulumi.StringPtrInput
	// User-defined labels.
	//
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the RegionalEndpoint.
	//
	// ***
	Location pulumi.StringInput
	// The name of the RegionalEndpoint.
	Name pulumi.StringPtrInput
	// The name of the VPC network for this private regional endpoint. Format: `projects/{project}/global/networks/{network}`
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The name of the subnetwork from which the IP address will be allocated. Format: `projects/{project}/regions/{region}/subnetworks/{subnetwork}`
	Subnetwork pulumi.StringPtrInput
	// The service endpoint this private regional endpoint connects to. Format: `{apiname}.{region}.p.rep.googleapis.com` Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi pulumi.StringInput
}

func (RegionalEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionalEndpointArgs)(nil)).Elem()
}

type RegionalEndpointInput interface {
	pulumi.Input

	ToRegionalEndpointOutput() RegionalEndpointOutput
	ToRegionalEndpointOutputWithContext(ctx context.Context) RegionalEndpointOutput
}

func (*RegionalEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionalEndpoint)(nil)).Elem()
}

func (i *RegionalEndpoint) ToRegionalEndpointOutput() RegionalEndpointOutput {
	return i.ToRegionalEndpointOutputWithContext(context.Background())
}

func (i *RegionalEndpoint) ToRegionalEndpointOutputWithContext(ctx context.Context) RegionalEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionalEndpointOutput)
}

// RegionalEndpointArrayInput is an input type that accepts RegionalEndpointArray and RegionalEndpointArrayOutput values.
// You can construct a concrete instance of `RegionalEndpointArrayInput` via:
//
//	RegionalEndpointArray{ RegionalEndpointArgs{...} }
type RegionalEndpointArrayInput interface {
	pulumi.Input

	ToRegionalEndpointArrayOutput() RegionalEndpointArrayOutput
	ToRegionalEndpointArrayOutputWithContext(context.Context) RegionalEndpointArrayOutput
}

type RegionalEndpointArray []RegionalEndpointInput

func (RegionalEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionalEndpoint)(nil)).Elem()
}

func (i RegionalEndpointArray) ToRegionalEndpointArrayOutput() RegionalEndpointArrayOutput {
	return i.ToRegionalEndpointArrayOutputWithContext(context.Background())
}

func (i RegionalEndpointArray) ToRegionalEndpointArrayOutputWithContext(ctx context.Context) RegionalEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionalEndpointArrayOutput)
}

// RegionalEndpointMapInput is an input type that accepts RegionalEndpointMap and RegionalEndpointMapOutput values.
// You can construct a concrete instance of `RegionalEndpointMapInput` via:
//
//	RegionalEndpointMap{ "key": RegionalEndpointArgs{...} }
type RegionalEndpointMapInput interface {
	pulumi.Input

	ToRegionalEndpointMapOutput() RegionalEndpointMapOutput
	ToRegionalEndpointMapOutputWithContext(context.Context) RegionalEndpointMapOutput
}

type RegionalEndpointMap map[string]RegionalEndpointInput

func (RegionalEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionalEndpoint)(nil)).Elem()
}

func (i RegionalEndpointMap) ToRegionalEndpointMapOutput() RegionalEndpointMapOutput {
	return i.ToRegionalEndpointMapOutputWithContext(context.Background())
}

func (i RegionalEndpointMap) ToRegionalEndpointMapOutputWithContext(ctx context.Context) RegionalEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionalEndpointMapOutput)
}

type RegionalEndpointOutput struct{ *pulumi.OutputState }

func (RegionalEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionalEndpoint)(nil)).Elem()
}

func (o RegionalEndpointOutput) ToRegionalEndpointOutput() RegionalEndpointOutput {
	return o
}

func (o RegionalEndpointOutput) ToRegionalEndpointOutputWithContext(ctx context.Context) RegionalEndpointOutput {
	return o
}

// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable global access.
// Possible values are: `GLOBAL`, `REGIONAL`.
func (o RegionalEndpointOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.AccessType }).(pulumi.StringOutput)
}

// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of the following formats: * IPv4 address as in `10.0.0.1` * Address resource URI as in `projects/{project}/regions/{region}/addresses/{address_name}`
// > **Note:** This field accepts both a reference to a Compute Address resource, which is the resource name of which format is given in the description, and IP literal value. If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4 version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
func (o RegionalEndpointOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Time when the RegionalEndpoint was created.
func (o RegionalEndpointOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of this resource.
func (o RegionalEndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o RegionalEndpointOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// User-defined labels.
//
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o RegionalEndpointOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the RegionalEndpoint.
//
// ***
func (o RegionalEndpointOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the RegionalEndpoint.
func (o RegionalEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the VPC network for this private regional endpoint. Format: `projects/{project}/global/networks/{network}`
func (o RegionalEndpointOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o RegionalEndpointOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format: `//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}`
func (o RegionalEndpointOutput) PscForwardingRule() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.PscForwardingRule }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o RegionalEndpointOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// The name of the subnetwork from which the IP address will be allocated. Format: `projects/{project}/regions/{region}/subnetworks/{subnetwork}`
func (o RegionalEndpointOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.Subnetwork }).(pulumi.StringOutput)
}

// The service endpoint this private regional endpoint connects to. Format: `{apiname}.{region}.p.rep.googleapis.com` Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
func (o RegionalEndpointOutput) TargetGoogleApi() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.TargetGoogleApi }).(pulumi.StringOutput)
}

// Time when the RegionalEndpoint was updated.
func (o RegionalEndpointOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionalEndpoint) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type RegionalEndpointArrayOutput struct{ *pulumi.OutputState }

func (RegionalEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegionalEndpoint)(nil)).Elem()
}

func (o RegionalEndpointArrayOutput) ToRegionalEndpointArrayOutput() RegionalEndpointArrayOutput {
	return o
}

func (o RegionalEndpointArrayOutput) ToRegionalEndpointArrayOutputWithContext(ctx context.Context) RegionalEndpointArrayOutput {
	return o
}

func (o RegionalEndpointArrayOutput) Index(i pulumi.IntInput) RegionalEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RegionalEndpoint {
		return vs[0].([]*RegionalEndpoint)[vs[1].(int)]
	}).(RegionalEndpointOutput)
}

type RegionalEndpointMapOutput struct{ *pulumi.OutputState }

func (RegionalEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegionalEndpoint)(nil)).Elem()
}

func (o RegionalEndpointMapOutput) ToRegionalEndpointMapOutput() RegionalEndpointMapOutput {
	return o
}

func (o RegionalEndpointMapOutput) ToRegionalEndpointMapOutputWithContext(ctx context.Context) RegionalEndpointMapOutput {
	return o
}

func (o RegionalEndpointMapOutput) MapIndex(k pulumi.StringInput) RegionalEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RegionalEndpoint {
		return vs[0].(map[string]*RegionalEndpoint)[vs[1].(string)]
	}).(RegionalEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegionalEndpointInput)(nil)).Elem(), &RegionalEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionalEndpointArrayInput)(nil)).Elem(), RegionalEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionalEndpointMapInput)(nil)).Elem(), RegionalEndpointMap{})
	pulumi.RegisterOutputType(RegionalEndpointOutput{})
	pulumi.RegisterOutputType(RegionalEndpointArrayOutput{})
	pulumi.RegisterOutputType(RegionalEndpointMapOutput{})
}
