// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkconnectivity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manage Service Connection Policies.
//
// To get more information about ServiceConnectionPolicy, see:
//
// * [API documentation](https://cloud.google.com/secure-web-proxy/docs/reference/networkconnectivity/rest/v1/projects.locations.networkConnectionPolicies)
// * How-to Guides
//   - [About Service Connection Policies](https://cloud.google.com/vpc/docs/about-service-connection-policies#service-policies)
//
// ## Example Usage
// ### Network Connectivity Policy Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/networkconnectivity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			producerNet, err := compute.NewNetwork(ctx, "producerNet", &compute.NetworkArgs{
//				AutoCreateSubnetworks: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			producerSubnet, err := compute.NewSubnetwork(ctx, "producerSubnet", &compute.SubnetworkArgs{
//				IpCidrRange: pulumi.String("10.0.0.0/16"),
//				Region:      pulumi.String("us-central1"),
//				Network:     producerNet.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networkconnectivity.NewServiceConnectionPolicy(ctx, "default", &networkconnectivity.ServiceConnectionPolicyArgs{
//				Location:     pulumi.String("us-central1"),
//				ServiceClass: pulumi.String("my-basic-service-class"),
//				Description:  pulumi.String("my basic service connection policy"),
//				Network:      producerNet.ID(),
//				PscConfig: &networkconnectivity.ServiceConnectionPolicyPscConfigArgs{
//					Subnetworks: pulumi.StringArray{
//						producerSubnet.ID(),
//					},
//					Limit: pulumi.String("2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # ServiceConnectionPolicy can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:networkconnectivity/serviceConnectionPolicy:ServiceConnectionPolicy default projects/{{project}}/locations/{{location}}/serviceConnectionPolicies/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:networkconnectivity/serviceConnectionPolicy:ServiceConnectionPolicy default {{project}}/{{location}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:networkconnectivity/serviceConnectionPolicy:ServiceConnectionPolicy default {{location}}/{{name}}
//
// ```
type ServiceConnectionPolicy struct {
	pulumi.CustomResourceState

	// The timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Free-text description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The type of underlying resources used to create the connection.
	Infrastructure pulumi.StringOutput `pulumi:"infrastructure"`
	// User-defined labels.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the ServiceConnectionPolicy.
	//
	// ***
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	Network pulumi.StringOutput `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	// Structure is documented below.
	PscConfig ServiceConnectionPolicyPscConfigPtrOutput `pulumi:"pscConfig"`
	// Information about each Private Service Connect connection.
	// Structure is documented below.
	PscConnections ServiceConnectionPolicyPscConnectionArrayOutput `pulumi:"pscConnections"`
	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
	// It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass pulumi.StringOutput `pulumi:"serviceClass"`
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewServiceConnectionPolicy registers a new resource with the given unique name, arguments, and options.
func NewServiceConnectionPolicy(ctx *pulumi.Context,
	name string, args *ServiceConnectionPolicyArgs, opts ...pulumi.ResourceOption) (*ServiceConnectionPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.ServiceClass == nil {
		return nil, errors.New("invalid value for required argument 'ServiceClass'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceConnectionPolicy
	err := ctx.RegisterResource("gcp:networkconnectivity/serviceConnectionPolicy:ServiceConnectionPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceConnectionPolicy gets an existing ServiceConnectionPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceConnectionPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceConnectionPolicyState, opts ...pulumi.ResourceOption) (*ServiceConnectionPolicy, error) {
	var resource ServiceConnectionPolicy
	err := ctx.ReadResource("gcp:networkconnectivity/serviceConnectionPolicy:ServiceConnectionPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceConnectionPolicy resources.
type serviceConnectionPolicyState struct {
	// The timestamp when the resource was created.
	CreateTime *string `pulumi:"createTime"`
	// Free-text description of the resource.
	Description *string `pulumi:"description"`
	// The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// The type of underlying resources used to create the connection.
	Infrastructure *string `pulumi:"infrastructure"`
	// User-defined labels.
	Labels map[string]string `pulumi:"labels"`
	// The location of the ServiceConnectionPolicy.
	//
	// ***
	Location *string `pulumi:"location"`
	// The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
	Name *string `pulumi:"name"`
	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	// Structure is documented below.
	PscConfig *ServiceConnectionPolicyPscConfig `pulumi:"pscConfig"`
	// Information about each Private Service Connect connection.
	// Structure is documented below.
	PscConnections []ServiceConnectionPolicyPscConnection `pulumi:"pscConnections"`
	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
	// It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass *string `pulumi:"serviceClass"`
	// The timestamp when the resource was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ServiceConnectionPolicyState struct {
	// The timestamp when the resource was created.
	CreateTime pulumi.StringPtrInput
	// Free-text description of the resource.
	Description pulumi.StringPtrInput
	// The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// The type of underlying resources used to create the connection.
	Infrastructure pulumi.StringPtrInput
	// User-defined labels.
	Labels pulumi.StringMapInput
	// The location of the ServiceConnectionPolicy.
	//
	// ***
	Location pulumi.StringPtrInput
	// The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringPtrInput
	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	// Structure is documented below.
	PscConfig ServiceConnectionPolicyPscConfigPtrInput
	// Information about each Private Service Connect connection.
	// Structure is documented below.
	PscConnections ServiceConnectionPolicyPscConnectionArrayInput
	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
	// It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass pulumi.StringPtrInput
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringPtrInput
}

func (ServiceConnectionPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionPolicyState)(nil)).Elem()
}

type serviceConnectionPolicyArgs struct {
	// Free-text description of the resource.
	Description *string `pulumi:"description"`
	// User-defined labels.
	Labels map[string]string `pulumi:"labels"`
	// The location of the ServiceConnectionPolicy.
	//
	// ***
	Location string `pulumi:"location"`
	// The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
	Name *string `pulumi:"name"`
	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	Network string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	// Structure is documented below.
	PscConfig *ServiceConnectionPolicyPscConfig `pulumi:"pscConfig"`
	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
	// It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass string `pulumi:"serviceClass"`
}

// The set of arguments for constructing a ServiceConnectionPolicy resource.
type ServiceConnectionPolicyArgs struct {
	// Free-text description of the resource.
	Description pulumi.StringPtrInput
	// User-defined labels.
	Labels pulumi.StringMapInput
	// The location of the ServiceConnectionPolicy.
	//
	// ***
	Location pulumi.StringInput
	// The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringPtrInput
	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	Network pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	// Structure is documented below.
	PscConfig ServiceConnectionPolicyPscConfigPtrInput
	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
	// It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass pulumi.StringInput
}

func (ServiceConnectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionPolicyArgs)(nil)).Elem()
}

type ServiceConnectionPolicyInput interface {
	pulumi.Input

	ToServiceConnectionPolicyOutput() ServiceConnectionPolicyOutput
	ToServiceConnectionPolicyOutputWithContext(ctx context.Context) ServiceConnectionPolicyOutput
}

func (*ServiceConnectionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicy)(nil)).Elem()
}

func (i *ServiceConnectionPolicy) ToServiceConnectionPolicyOutput() ServiceConnectionPolicyOutput {
	return i.ToServiceConnectionPolicyOutputWithContext(context.Background())
}

func (i *ServiceConnectionPolicy) ToServiceConnectionPolicyOutputWithContext(ctx context.Context) ServiceConnectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyOutput)
}

func (i *ServiceConnectionPolicy) ToOutput(ctx context.Context) pulumix.Output[*ServiceConnectionPolicy] {
	return pulumix.Output[*ServiceConnectionPolicy]{
		OutputState: i.ToServiceConnectionPolicyOutputWithContext(ctx).OutputState,
	}
}

// ServiceConnectionPolicyArrayInput is an input type that accepts ServiceConnectionPolicyArray and ServiceConnectionPolicyArrayOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyArrayInput` via:
//
//	ServiceConnectionPolicyArray{ ServiceConnectionPolicyArgs{...} }
type ServiceConnectionPolicyArrayInput interface {
	pulumi.Input

	ToServiceConnectionPolicyArrayOutput() ServiceConnectionPolicyArrayOutput
	ToServiceConnectionPolicyArrayOutputWithContext(context.Context) ServiceConnectionPolicyArrayOutput
}

type ServiceConnectionPolicyArray []ServiceConnectionPolicyInput

func (ServiceConnectionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceConnectionPolicy)(nil)).Elem()
}

func (i ServiceConnectionPolicyArray) ToServiceConnectionPolicyArrayOutput() ServiceConnectionPolicyArrayOutput {
	return i.ToServiceConnectionPolicyArrayOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyArray) ToServiceConnectionPolicyArrayOutputWithContext(ctx context.Context) ServiceConnectionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyArrayOutput)
}

func (i ServiceConnectionPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]*ServiceConnectionPolicy] {
	return pulumix.Output[[]*ServiceConnectionPolicy]{
		OutputState: i.ToServiceConnectionPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

// ServiceConnectionPolicyMapInput is an input type that accepts ServiceConnectionPolicyMap and ServiceConnectionPolicyMapOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyMapInput` via:
//
//	ServiceConnectionPolicyMap{ "key": ServiceConnectionPolicyArgs{...} }
type ServiceConnectionPolicyMapInput interface {
	pulumi.Input

	ToServiceConnectionPolicyMapOutput() ServiceConnectionPolicyMapOutput
	ToServiceConnectionPolicyMapOutputWithContext(context.Context) ServiceConnectionPolicyMapOutput
}

type ServiceConnectionPolicyMap map[string]ServiceConnectionPolicyInput

func (ServiceConnectionPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceConnectionPolicy)(nil)).Elem()
}

func (i ServiceConnectionPolicyMap) ToServiceConnectionPolicyMapOutput() ServiceConnectionPolicyMapOutput {
	return i.ToServiceConnectionPolicyMapOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyMap) ToServiceConnectionPolicyMapOutputWithContext(ctx context.Context) ServiceConnectionPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyMapOutput)
}

func (i ServiceConnectionPolicyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ServiceConnectionPolicy] {
	return pulumix.Output[map[string]*ServiceConnectionPolicy]{
		OutputState: i.ToServiceConnectionPolicyMapOutputWithContext(ctx).OutputState,
	}
}

type ServiceConnectionPolicyOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicy)(nil)).Elem()
}

func (o ServiceConnectionPolicyOutput) ToServiceConnectionPolicyOutput() ServiceConnectionPolicyOutput {
	return o
}

func (o ServiceConnectionPolicyOutput) ToServiceConnectionPolicyOutputWithContext(ctx context.Context) ServiceConnectionPolicyOutput {
	return o
}

func (o ServiceConnectionPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceConnectionPolicy] {
	return pulumix.Output[*ServiceConnectionPolicy]{
		OutputState: o.OutputState,
	}
}

// The timestamp when the resource was created.
func (o ServiceConnectionPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Free-text description of the resource.
func (o ServiceConnectionPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o ServiceConnectionPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The type of underlying resources used to create the connection.
func (o ServiceConnectionPolicyOutput) Infrastructure() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Infrastructure }).(pulumi.StringOutput)
}

// User-defined labels.
func (o ServiceConnectionPolicyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the ServiceConnectionPolicy.
//
// ***
func (o ServiceConnectionPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
func (o ServiceConnectionPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
func (o ServiceConnectionPolicyOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o ServiceConnectionPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
// Structure is documented below.
func (o ServiceConnectionPolicyOutput) PscConfig() ServiceConnectionPolicyPscConfigPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) ServiceConnectionPolicyPscConfigPtrOutput { return v.PscConfig }).(ServiceConnectionPolicyPscConfigPtrOutput)
}

// Information about each Private Service Connect connection.
// Structure is documented below.
func (o ServiceConnectionPolicyOutput) PscConnections() ServiceConnectionPolicyPscConnectionArrayOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) ServiceConnectionPolicyPscConnectionArrayOutput {
		return v.PscConnections
	}).(ServiceConnectionPolicyPscConnectionArrayOutput)
}

// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
// It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
func (o ServiceConnectionPolicyOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.ServiceClass }).(pulumi.StringOutput)
}

// The timestamp when the resource was updated.
func (o ServiceConnectionPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type ServiceConnectionPolicyArrayOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceConnectionPolicy)(nil)).Elem()
}

func (o ServiceConnectionPolicyArrayOutput) ToServiceConnectionPolicyArrayOutput() ServiceConnectionPolicyArrayOutput {
	return o
}

func (o ServiceConnectionPolicyArrayOutput) ToServiceConnectionPolicyArrayOutputWithContext(ctx context.Context) ServiceConnectionPolicyArrayOutput {
	return o
}

func (o ServiceConnectionPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ServiceConnectionPolicy] {
	return pulumix.Output[[]*ServiceConnectionPolicy]{
		OutputState: o.OutputState,
	}
}

func (o ServiceConnectionPolicyArrayOutput) Index(i pulumi.IntInput) ServiceConnectionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceConnectionPolicy {
		return vs[0].([]*ServiceConnectionPolicy)[vs[1].(int)]
	}).(ServiceConnectionPolicyOutput)
}

type ServiceConnectionPolicyMapOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceConnectionPolicy)(nil)).Elem()
}

func (o ServiceConnectionPolicyMapOutput) ToServiceConnectionPolicyMapOutput() ServiceConnectionPolicyMapOutput {
	return o
}

func (o ServiceConnectionPolicyMapOutput) ToServiceConnectionPolicyMapOutputWithContext(ctx context.Context) ServiceConnectionPolicyMapOutput {
	return o
}

func (o ServiceConnectionPolicyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ServiceConnectionPolicy] {
	return pulumix.Output[map[string]*ServiceConnectionPolicy]{
		OutputState: o.OutputState,
	}
}

func (o ServiceConnectionPolicyMapOutput) MapIndex(k pulumi.StringInput) ServiceConnectionPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceConnectionPolicy {
		return vs[0].(map[string]*ServiceConnectionPolicy)[vs[1].(string)]
	}).(ServiceConnectionPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyInput)(nil)).Elem(), &ServiceConnectionPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyArrayInput)(nil)).Elem(), ServiceConnectionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyMapInput)(nil)).Elem(), ServiceConnectionPolicyMap{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyArrayOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyMapOutput{})
}
