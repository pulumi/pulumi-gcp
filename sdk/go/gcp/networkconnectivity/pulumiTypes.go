// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkconnectivity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GroupAutoAccept struct {
	// A list of project ids or project numbers for which you want to enable auto-accept. The auto-accept setting is applied to spokes being created or updated in these projects.
	AutoAcceptProjects []string `pulumi:"autoAcceptProjects"`
}

// GroupAutoAcceptInput is an input type that accepts GroupAutoAcceptArgs and GroupAutoAcceptOutput values.
// You can construct a concrete instance of `GroupAutoAcceptInput` via:
//
//	GroupAutoAcceptArgs{...}
type GroupAutoAcceptInput interface {
	pulumi.Input

	ToGroupAutoAcceptOutput() GroupAutoAcceptOutput
	ToGroupAutoAcceptOutputWithContext(context.Context) GroupAutoAcceptOutput
}

type GroupAutoAcceptArgs struct {
	// A list of project ids or project numbers for which you want to enable auto-accept. The auto-accept setting is applied to spokes being created or updated in these projects.
	AutoAcceptProjects pulumi.StringArrayInput `pulumi:"autoAcceptProjects"`
}

func (GroupAutoAcceptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupAutoAccept)(nil)).Elem()
}

func (i GroupAutoAcceptArgs) ToGroupAutoAcceptOutput() GroupAutoAcceptOutput {
	return i.ToGroupAutoAcceptOutputWithContext(context.Background())
}

func (i GroupAutoAcceptArgs) ToGroupAutoAcceptOutputWithContext(ctx context.Context) GroupAutoAcceptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupAutoAcceptOutput)
}

func (i GroupAutoAcceptArgs) ToGroupAutoAcceptPtrOutput() GroupAutoAcceptPtrOutput {
	return i.ToGroupAutoAcceptPtrOutputWithContext(context.Background())
}

func (i GroupAutoAcceptArgs) ToGroupAutoAcceptPtrOutputWithContext(ctx context.Context) GroupAutoAcceptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupAutoAcceptOutput).ToGroupAutoAcceptPtrOutputWithContext(ctx)
}

// GroupAutoAcceptPtrInput is an input type that accepts GroupAutoAcceptArgs, GroupAutoAcceptPtr and GroupAutoAcceptPtrOutput values.
// You can construct a concrete instance of `GroupAutoAcceptPtrInput` via:
//
//	        GroupAutoAcceptArgs{...}
//
//	or:
//
//	        nil
type GroupAutoAcceptPtrInput interface {
	pulumi.Input

	ToGroupAutoAcceptPtrOutput() GroupAutoAcceptPtrOutput
	ToGroupAutoAcceptPtrOutputWithContext(context.Context) GroupAutoAcceptPtrOutput
}

type groupAutoAcceptPtrType GroupAutoAcceptArgs

func GroupAutoAcceptPtr(v *GroupAutoAcceptArgs) GroupAutoAcceptPtrInput {
	return (*groupAutoAcceptPtrType)(v)
}

func (*groupAutoAcceptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupAutoAccept)(nil)).Elem()
}

func (i *groupAutoAcceptPtrType) ToGroupAutoAcceptPtrOutput() GroupAutoAcceptPtrOutput {
	return i.ToGroupAutoAcceptPtrOutputWithContext(context.Background())
}

func (i *groupAutoAcceptPtrType) ToGroupAutoAcceptPtrOutputWithContext(ctx context.Context) GroupAutoAcceptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupAutoAcceptPtrOutput)
}

type GroupAutoAcceptOutput struct{ *pulumi.OutputState }

func (GroupAutoAcceptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupAutoAccept)(nil)).Elem()
}

func (o GroupAutoAcceptOutput) ToGroupAutoAcceptOutput() GroupAutoAcceptOutput {
	return o
}

func (o GroupAutoAcceptOutput) ToGroupAutoAcceptOutputWithContext(ctx context.Context) GroupAutoAcceptOutput {
	return o
}

func (o GroupAutoAcceptOutput) ToGroupAutoAcceptPtrOutput() GroupAutoAcceptPtrOutput {
	return o.ToGroupAutoAcceptPtrOutputWithContext(context.Background())
}

func (o GroupAutoAcceptOutput) ToGroupAutoAcceptPtrOutputWithContext(ctx context.Context) GroupAutoAcceptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupAutoAccept) *GroupAutoAccept {
		return &v
	}).(GroupAutoAcceptPtrOutput)
}

// A list of project ids or project numbers for which you want to enable auto-accept. The auto-accept setting is applied to spokes being created or updated in these projects.
func (o GroupAutoAcceptOutput) AutoAcceptProjects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupAutoAccept) []string { return v.AutoAcceptProjects }).(pulumi.StringArrayOutput)
}

type GroupAutoAcceptPtrOutput struct{ *pulumi.OutputState }

func (GroupAutoAcceptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupAutoAccept)(nil)).Elem()
}

func (o GroupAutoAcceptPtrOutput) ToGroupAutoAcceptPtrOutput() GroupAutoAcceptPtrOutput {
	return o
}

func (o GroupAutoAcceptPtrOutput) ToGroupAutoAcceptPtrOutputWithContext(ctx context.Context) GroupAutoAcceptPtrOutput {
	return o
}

func (o GroupAutoAcceptPtrOutput) Elem() GroupAutoAcceptOutput {
	return o.ApplyT(func(v *GroupAutoAccept) GroupAutoAccept {
		if v != nil {
			return *v
		}
		var ret GroupAutoAccept
		return ret
	}).(GroupAutoAcceptOutput)
}

// A list of project ids or project numbers for which you want to enable auto-accept. The auto-accept setting is applied to spokes being created or updated in these projects.
func (o GroupAutoAcceptPtrOutput) AutoAcceptProjects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupAutoAccept) []string {
		if v == nil {
			return nil
		}
		return v.AutoAcceptProjects
	}).(pulumi.StringArrayOutput)
}

type HubRoutingVpc struct {
	// The URI of the VPC network.
	Uri *string `pulumi:"uri"`
}

// HubRoutingVpcInput is an input type that accepts HubRoutingVpcArgs and HubRoutingVpcOutput values.
// You can construct a concrete instance of `HubRoutingVpcInput` via:
//
//	HubRoutingVpcArgs{...}
type HubRoutingVpcInput interface {
	pulumi.Input

	ToHubRoutingVpcOutput() HubRoutingVpcOutput
	ToHubRoutingVpcOutputWithContext(context.Context) HubRoutingVpcOutput
}

type HubRoutingVpcArgs struct {
	// The URI of the VPC network.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (HubRoutingVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubRoutingVpc)(nil)).Elem()
}

func (i HubRoutingVpcArgs) ToHubRoutingVpcOutput() HubRoutingVpcOutput {
	return i.ToHubRoutingVpcOutputWithContext(context.Background())
}

func (i HubRoutingVpcArgs) ToHubRoutingVpcOutputWithContext(ctx context.Context) HubRoutingVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubRoutingVpcOutput)
}

// HubRoutingVpcArrayInput is an input type that accepts HubRoutingVpcArray and HubRoutingVpcArrayOutput values.
// You can construct a concrete instance of `HubRoutingVpcArrayInput` via:
//
//	HubRoutingVpcArray{ HubRoutingVpcArgs{...} }
type HubRoutingVpcArrayInput interface {
	pulumi.Input

	ToHubRoutingVpcArrayOutput() HubRoutingVpcArrayOutput
	ToHubRoutingVpcArrayOutputWithContext(context.Context) HubRoutingVpcArrayOutput
}

type HubRoutingVpcArray []HubRoutingVpcInput

func (HubRoutingVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubRoutingVpc)(nil)).Elem()
}

func (i HubRoutingVpcArray) ToHubRoutingVpcArrayOutput() HubRoutingVpcArrayOutput {
	return i.ToHubRoutingVpcArrayOutputWithContext(context.Background())
}

func (i HubRoutingVpcArray) ToHubRoutingVpcArrayOutputWithContext(ctx context.Context) HubRoutingVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubRoutingVpcArrayOutput)
}

type HubRoutingVpcOutput struct{ *pulumi.OutputState }

func (HubRoutingVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubRoutingVpc)(nil)).Elem()
}

func (o HubRoutingVpcOutput) ToHubRoutingVpcOutput() HubRoutingVpcOutput {
	return o
}

func (o HubRoutingVpcOutput) ToHubRoutingVpcOutputWithContext(ctx context.Context) HubRoutingVpcOutput {
	return o
}

// The URI of the VPC network.
func (o HubRoutingVpcOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubRoutingVpc) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type HubRoutingVpcArrayOutput struct{ *pulumi.OutputState }

func (HubRoutingVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubRoutingVpc)(nil)).Elem()
}

func (o HubRoutingVpcArrayOutput) ToHubRoutingVpcArrayOutput() HubRoutingVpcArrayOutput {
	return o
}

func (o HubRoutingVpcArrayOutput) ToHubRoutingVpcArrayOutputWithContext(ctx context.Context) HubRoutingVpcArrayOutput {
	return o
}

func (o HubRoutingVpcArrayOutput) Index(i pulumi.IntInput) HubRoutingVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubRoutingVpc {
		return vs[0].([]HubRoutingVpc)[vs[1].(int)]
	}).(HubRoutingVpcOutput)
}

type InternalRangeMigration struct {
	// Resource path as an URI of the source resource, for example a subnet.
	// The project for the source resource should match the project for the
	// InternalRange.
	// An example /projects/{project}/regions/{region}/subnetworks/{subnet}
	Source string `pulumi:"source"`
	// Resource path of the target resource. The target project can be
	// different, as in the cases when migrating to peer networks. The resource
	// may not exist yet.
	// For example /projects/{project}/regions/{region}/subnetworks/{subnet}
	Target string `pulumi:"target"`
}

// InternalRangeMigrationInput is an input type that accepts InternalRangeMigrationArgs and InternalRangeMigrationOutput values.
// You can construct a concrete instance of `InternalRangeMigrationInput` via:
//
//	InternalRangeMigrationArgs{...}
type InternalRangeMigrationInput interface {
	pulumi.Input

	ToInternalRangeMigrationOutput() InternalRangeMigrationOutput
	ToInternalRangeMigrationOutputWithContext(context.Context) InternalRangeMigrationOutput
}

type InternalRangeMigrationArgs struct {
	// Resource path as an URI of the source resource, for example a subnet.
	// The project for the source resource should match the project for the
	// InternalRange.
	// An example /projects/{project}/regions/{region}/subnetworks/{subnet}
	Source pulumi.StringInput `pulumi:"source"`
	// Resource path of the target resource. The target project can be
	// different, as in the cases when migrating to peer networks. The resource
	// may not exist yet.
	// For example /projects/{project}/regions/{region}/subnetworks/{subnet}
	Target pulumi.StringInput `pulumi:"target"`
}

func (InternalRangeMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternalRangeMigration)(nil)).Elem()
}

func (i InternalRangeMigrationArgs) ToInternalRangeMigrationOutput() InternalRangeMigrationOutput {
	return i.ToInternalRangeMigrationOutputWithContext(context.Background())
}

func (i InternalRangeMigrationArgs) ToInternalRangeMigrationOutputWithContext(ctx context.Context) InternalRangeMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternalRangeMigrationOutput)
}

func (i InternalRangeMigrationArgs) ToInternalRangeMigrationPtrOutput() InternalRangeMigrationPtrOutput {
	return i.ToInternalRangeMigrationPtrOutputWithContext(context.Background())
}

func (i InternalRangeMigrationArgs) ToInternalRangeMigrationPtrOutputWithContext(ctx context.Context) InternalRangeMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternalRangeMigrationOutput).ToInternalRangeMigrationPtrOutputWithContext(ctx)
}

// InternalRangeMigrationPtrInput is an input type that accepts InternalRangeMigrationArgs, InternalRangeMigrationPtr and InternalRangeMigrationPtrOutput values.
// You can construct a concrete instance of `InternalRangeMigrationPtrInput` via:
//
//	        InternalRangeMigrationArgs{...}
//
//	or:
//
//	        nil
type InternalRangeMigrationPtrInput interface {
	pulumi.Input

	ToInternalRangeMigrationPtrOutput() InternalRangeMigrationPtrOutput
	ToInternalRangeMigrationPtrOutputWithContext(context.Context) InternalRangeMigrationPtrOutput
}

type internalRangeMigrationPtrType InternalRangeMigrationArgs

func InternalRangeMigrationPtr(v *InternalRangeMigrationArgs) InternalRangeMigrationPtrInput {
	return (*internalRangeMigrationPtrType)(v)
}

func (*internalRangeMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InternalRangeMigration)(nil)).Elem()
}

func (i *internalRangeMigrationPtrType) ToInternalRangeMigrationPtrOutput() InternalRangeMigrationPtrOutput {
	return i.ToInternalRangeMigrationPtrOutputWithContext(context.Background())
}

func (i *internalRangeMigrationPtrType) ToInternalRangeMigrationPtrOutputWithContext(ctx context.Context) InternalRangeMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternalRangeMigrationPtrOutput)
}

type InternalRangeMigrationOutput struct{ *pulumi.OutputState }

func (InternalRangeMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternalRangeMigration)(nil)).Elem()
}

func (o InternalRangeMigrationOutput) ToInternalRangeMigrationOutput() InternalRangeMigrationOutput {
	return o
}

func (o InternalRangeMigrationOutput) ToInternalRangeMigrationOutputWithContext(ctx context.Context) InternalRangeMigrationOutput {
	return o
}

func (o InternalRangeMigrationOutput) ToInternalRangeMigrationPtrOutput() InternalRangeMigrationPtrOutput {
	return o.ToInternalRangeMigrationPtrOutputWithContext(context.Background())
}

func (o InternalRangeMigrationOutput) ToInternalRangeMigrationPtrOutputWithContext(ctx context.Context) InternalRangeMigrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InternalRangeMigration) *InternalRangeMigration {
		return &v
	}).(InternalRangeMigrationPtrOutput)
}

// Resource path as an URI of the source resource, for example a subnet.
// The project for the source resource should match the project for the
// InternalRange.
// An example /projects/{project}/regions/{region}/subnetworks/{subnet}
func (o InternalRangeMigrationOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v InternalRangeMigration) string { return v.Source }).(pulumi.StringOutput)
}

// Resource path of the target resource. The target project can be
// different, as in the cases when migrating to peer networks. The resource
// may not exist yet.
// For example /projects/{project}/regions/{region}/subnetworks/{subnet}
func (o InternalRangeMigrationOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v InternalRangeMigration) string { return v.Target }).(pulumi.StringOutput)
}

type InternalRangeMigrationPtrOutput struct{ *pulumi.OutputState }

func (InternalRangeMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternalRangeMigration)(nil)).Elem()
}

func (o InternalRangeMigrationPtrOutput) ToInternalRangeMigrationPtrOutput() InternalRangeMigrationPtrOutput {
	return o
}

func (o InternalRangeMigrationPtrOutput) ToInternalRangeMigrationPtrOutputWithContext(ctx context.Context) InternalRangeMigrationPtrOutput {
	return o
}

func (o InternalRangeMigrationPtrOutput) Elem() InternalRangeMigrationOutput {
	return o.ApplyT(func(v *InternalRangeMigration) InternalRangeMigration {
		if v != nil {
			return *v
		}
		var ret InternalRangeMigration
		return ret
	}).(InternalRangeMigrationOutput)
}

// Resource path as an URI of the source resource, for example a subnet.
// The project for the source resource should match the project for the
// InternalRange.
// An example /projects/{project}/regions/{region}/subnetworks/{subnet}
func (o InternalRangeMigrationPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternalRangeMigration) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

// Resource path of the target resource. The target project can be
// different, as in the cases when migrating to peer networks. The resource
// may not exist yet.
// For example /projects/{project}/regions/{region}/subnetworks/{subnet}
func (o InternalRangeMigrationPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternalRangeMigration) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

type PolicyBasedRouteFilter struct {
	// The destination IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
	//
	// ***
	DestRange *string `pulumi:"destRange"`
	// The IP protocol that this policy-based route applies to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
	IpProtocol *string `pulumi:"ipProtocol"`
	// Internet protocol versions this policy-based route applies to.
	// Possible values are: `IPV4`.
	ProtocolVersion string `pulumi:"protocolVersion"`
	// The source IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
	SrcRange *string `pulumi:"srcRange"`
}

// PolicyBasedRouteFilterInput is an input type that accepts PolicyBasedRouteFilterArgs and PolicyBasedRouteFilterOutput values.
// You can construct a concrete instance of `PolicyBasedRouteFilterInput` via:
//
//	PolicyBasedRouteFilterArgs{...}
type PolicyBasedRouteFilterInput interface {
	pulumi.Input

	ToPolicyBasedRouteFilterOutput() PolicyBasedRouteFilterOutput
	ToPolicyBasedRouteFilterOutputWithContext(context.Context) PolicyBasedRouteFilterOutput
}

type PolicyBasedRouteFilterArgs struct {
	// The destination IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
	//
	// ***
	DestRange pulumi.StringPtrInput `pulumi:"destRange"`
	// The IP protocol that this policy-based route applies to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// Internet protocol versions this policy-based route applies to.
	// Possible values are: `IPV4`.
	ProtocolVersion pulumi.StringInput `pulumi:"protocolVersion"`
	// The source IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
	SrcRange pulumi.StringPtrInput `pulumi:"srcRange"`
}

func (PolicyBasedRouteFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBasedRouteFilter)(nil)).Elem()
}

func (i PolicyBasedRouteFilterArgs) ToPolicyBasedRouteFilterOutput() PolicyBasedRouteFilterOutput {
	return i.ToPolicyBasedRouteFilterOutputWithContext(context.Background())
}

func (i PolicyBasedRouteFilterArgs) ToPolicyBasedRouteFilterOutputWithContext(ctx context.Context) PolicyBasedRouteFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteFilterOutput)
}

func (i PolicyBasedRouteFilterArgs) ToPolicyBasedRouteFilterPtrOutput() PolicyBasedRouteFilterPtrOutput {
	return i.ToPolicyBasedRouteFilterPtrOutputWithContext(context.Background())
}

func (i PolicyBasedRouteFilterArgs) ToPolicyBasedRouteFilterPtrOutputWithContext(ctx context.Context) PolicyBasedRouteFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteFilterOutput).ToPolicyBasedRouteFilterPtrOutputWithContext(ctx)
}

// PolicyBasedRouteFilterPtrInput is an input type that accepts PolicyBasedRouteFilterArgs, PolicyBasedRouteFilterPtr and PolicyBasedRouteFilterPtrOutput values.
// You can construct a concrete instance of `PolicyBasedRouteFilterPtrInput` via:
//
//	        PolicyBasedRouteFilterArgs{...}
//
//	or:
//
//	        nil
type PolicyBasedRouteFilterPtrInput interface {
	pulumi.Input

	ToPolicyBasedRouteFilterPtrOutput() PolicyBasedRouteFilterPtrOutput
	ToPolicyBasedRouteFilterPtrOutputWithContext(context.Context) PolicyBasedRouteFilterPtrOutput
}

type policyBasedRouteFilterPtrType PolicyBasedRouteFilterArgs

func PolicyBasedRouteFilterPtr(v *PolicyBasedRouteFilterArgs) PolicyBasedRouteFilterPtrInput {
	return (*policyBasedRouteFilterPtrType)(v)
}

func (*policyBasedRouteFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBasedRouteFilter)(nil)).Elem()
}

func (i *policyBasedRouteFilterPtrType) ToPolicyBasedRouteFilterPtrOutput() PolicyBasedRouteFilterPtrOutput {
	return i.ToPolicyBasedRouteFilterPtrOutputWithContext(context.Background())
}

func (i *policyBasedRouteFilterPtrType) ToPolicyBasedRouteFilterPtrOutputWithContext(ctx context.Context) PolicyBasedRouteFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteFilterPtrOutput)
}

type PolicyBasedRouteFilterOutput struct{ *pulumi.OutputState }

func (PolicyBasedRouteFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBasedRouteFilter)(nil)).Elem()
}

func (o PolicyBasedRouteFilterOutput) ToPolicyBasedRouteFilterOutput() PolicyBasedRouteFilterOutput {
	return o
}

func (o PolicyBasedRouteFilterOutput) ToPolicyBasedRouteFilterOutputWithContext(ctx context.Context) PolicyBasedRouteFilterOutput {
	return o
}

func (o PolicyBasedRouteFilterOutput) ToPolicyBasedRouteFilterPtrOutput() PolicyBasedRouteFilterPtrOutput {
	return o.ToPolicyBasedRouteFilterPtrOutputWithContext(context.Background())
}

func (o PolicyBasedRouteFilterOutput) ToPolicyBasedRouteFilterPtrOutputWithContext(ctx context.Context) PolicyBasedRouteFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyBasedRouteFilter) *PolicyBasedRouteFilter {
		return &v
	}).(PolicyBasedRouteFilterPtrOutput)
}

// The destination IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
//
// ***
func (o PolicyBasedRouteFilterOutput) DestRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBasedRouteFilter) *string { return v.DestRange }).(pulumi.StringPtrOutput)
}

// The IP protocol that this policy-based route applies to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
func (o PolicyBasedRouteFilterOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBasedRouteFilter) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// Internet protocol versions this policy-based route applies to.
// Possible values are: `IPV4`.
func (o PolicyBasedRouteFilterOutput) ProtocolVersion() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyBasedRouteFilter) string { return v.ProtocolVersion }).(pulumi.StringOutput)
}

// The source IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
func (o PolicyBasedRouteFilterOutput) SrcRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBasedRouteFilter) *string { return v.SrcRange }).(pulumi.StringPtrOutput)
}

type PolicyBasedRouteFilterPtrOutput struct{ *pulumi.OutputState }

func (PolicyBasedRouteFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBasedRouteFilter)(nil)).Elem()
}

func (o PolicyBasedRouteFilterPtrOutput) ToPolicyBasedRouteFilterPtrOutput() PolicyBasedRouteFilterPtrOutput {
	return o
}

func (o PolicyBasedRouteFilterPtrOutput) ToPolicyBasedRouteFilterPtrOutputWithContext(ctx context.Context) PolicyBasedRouteFilterPtrOutput {
	return o
}

func (o PolicyBasedRouteFilterPtrOutput) Elem() PolicyBasedRouteFilterOutput {
	return o.ApplyT(func(v *PolicyBasedRouteFilter) PolicyBasedRouteFilter {
		if v != nil {
			return *v
		}
		var ret PolicyBasedRouteFilter
		return ret
	}).(PolicyBasedRouteFilterOutput)
}

// The destination IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
//
// ***
func (o PolicyBasedRouteFilterPtrOutput) DestRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBasedRouteFilter) *string {
		if v == nil {
			return nil
		}
		return v.DestRange
	}).(pulumi.StringPtrOutput)
}

// The IP protocol that this policy-based route applies to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
func (o PolicyBasedRouteFilterPtrOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBasedRouteFilter) *string {
		if v == nil {
			return nil
		}
		return v.IpProtocol
	}).(pulumi.StringPtrOutput)
}

// Internet protocol versions this policy-based route applies to.
// Possible values are: `IPV4`.
func (o PolicyBasedRouteFilterPtrOutput) ProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBasedRouteFilter) *string {
		if v == nil {
			return nil
		}
		return &v.ProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// The source IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
func (o PolicyBasedRouteFilterPtrOutput) SrcRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBasedRouteFilter) *string {
		if v == nil {
			return nil
		}
		return v.SrcRange
	}).(pulumi.StringPtrOutput)
}

type PolicyBasedRouteInterconnectAttachment struct {
	// Cloud region to install this policy-based route on for Interconnect attachments. Use `all` to install it on all Interconnect attachments.
	Region string `pulumi:"region"`
}

// PolicyBasedRouteInterconnectAttachmentInput is an input type that accepts PolicyBasedRouteInterconnectAttachmentArgs and PolicyBasedRouteInterconnectAttachmentOutput values.
// You can construct a concrete instance of `PolicyBasedRouteInterconnectAttachmentInput` via:
//
//	PolicyBasedRouteInterconnectAttachmentArgs{...}
type PolicyBasedRouteInterconnectAttachmentInput interface {
	pulumi.Input

	ToPolicyBasedRouteInterconnectAttachmentOutput() PolicyBasedRouteInterconnectAttachmentOutput
	ToPolicyBasedRouteInterconnectAttachmentOutputWithContext(context.Context) PolicyBasedRouteInterconnectAttachmentOutput
}

type PolicyBasedRouteInterconnectAttachmentArgs struct {
	// Cloud region to install this policy-based route on for Interconnect attachments. Use `all` to install it on all Interconnect attachments.
	Region pulumi.StringInput `pulumi:"region"`
}

func (PolicyBasedRouteInterconnectAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBasedRouteInterconnectAttachment)(nil)).Elem()
}

func (i PolicyBasedRouteInterconnectAttachmentArgs) ToPolicyBasedRouteInterconnectAttachmentOutput() PolicyBasedRouteInterconnectAttachmentOutput {
	return i.ToPolicyBasedRouteInterconnectAttachmentOutputWithContext(context.Background())
}

func (i PolicyBasedRouteInterconnectAttachmentArgs) ToPolicyBasedRouteInterconnectAttachmentOutputWithContext(ctx context.Context) PolicyBasedRouteInterconnectAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteInterconnectAttachmentOutput)
}

func (i PolicyBasedRouteInterconnectAttachmentArgs) ToPolicyBasedRouteInterconnectAttachmentPtrOutput() PolicyBasedRouteInterconnectAttachmentPtrOutput {
	return i.ToPolicyBasedRouteInterconnectAttachmentPtrOutputWithContext(context.Background())
}

func (i PolicyBasedRouteInterconnectAttachmentArgs) ToPolicyBasedRouteInterconnectAttachmentPtrOutputWithContext(ctx context.Context) PolicyBasedRouteInterconnectAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteInterconnectAttachmentOutput).ToPolicyBasedRouteInterconnectAttachmentPtrOutputWithContext(ctx)
}

// PolicyBasedRouteInterconnectAttachmentPtrInput is an input type that accepts PolicyBasedRouteInterconnectAttachmentArgs, PolicyBasedRouteInterconnectAttachmentPtr and PolicyBasedRouteInterconnectAttachmentPtrOutput values.
// You can construct a concrete instance of `PolicyBasedRouteInterconnectAttachmentPtrInput` via:
//
//	        PolicyBasedRouteInterconnectAttachmentArgs{...}
//
//	or:
//
//	        nil
type PolicyBasedRouteInterconnectAttachmentPtrInput interface {
	pulumi.Input

	ToPolicyBasedRouteInterconnectAttachmentPtrOutput() PolicyBasedRouteInterconnectAttachmentPtrOutput
	ToPolicyBasedRouteInterconnectAttachmentPtrOutputWithContext(context.Context) PolicyBasedRouteInterconnectAttachmentPtrOutput
}

type policyBasedRouteInterconnectAttachmentPtrType PolicyBasedRouteInterconnectAttachmentArgs

func PolicyBasedRouteInterconnectAttachmentPtr(v *PolicyBasedRouteInterconnectAttachmentArgs) PolicyBasedRouteInterconnectAttachmentPtrInput {
	return (*policyBasedRouteInterconnectAttachmentPtrType)(v)
}

func (*policyBasedRouteInterconnectAttachmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBasedRouteInterconnectAttachment)(nil)).Elem()
}

func (i *policyBasedRouteInterconnectAttachmentPtrType) ToPolicyBasedRouteInterconnectAttachmentPtrOutput() PolicyBasedRouteInterconnectAttachmentPtrOutput {
	return i.ToPolicyBasedRouteInterconnectAttachmentPtrOutputWithContext(context.Background())
}

func (i *policyBasedRouteInterconnectAttachmentPtrType) ToPolicyBasedRouteInterconnectAttachmentPtrOutputWithContext(ctx context.Context) PolicyBasedRouteInterconnectAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteInterconnectAttachmentPtrOutput)
}

type PolicyBasedRouteInterconnectAttachmentOutput struct{ *pulumi.OutputState }

func (PolicyBasedRouteInterconnectAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBasedRouteInterconnectAttachment)(nil)).Elem()
}

func (o PolicyBasedRouteInterconnectAttachmentOutput) ToPolicyBasedRouteInterconnectAttachmentOutput() PolicyBasedRouteInterconnectAttachmentOutput {
	return o
}

func (o PolicyBasedRouteInterconnectAttachmentOutput) ToPolicyBasedRouteInterconnectAttachmentOutputWithContext(ctx context.Context) PolicyBasedRouteInterconnectAttachmentOutput {
	return o
}

func (o PolicyBasedRouteInterconnectAttachmentOutput) ToPolicyBasedRouteInterconnectAttachmentPtrOutput() PolicyBasedRouteInterconnectAttachmentPtrOutput {
	return o.ToPolicyBasedRouteInterconnectAttachmentPtrOutputWithContext(context.Background())
}

func (o PolicyBasedRouteInterconnectAttachmentOutput) ToPolicyBasedRouteInterconnectAttachmentPtrOutputWithContext(ctx context.Context) PolicyBasedRouteInterconnectAttachmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyBasedRouteInterconnectAttachment) *PolicyBasedRouteInterconnectAttachment {
		return &v
	}).(PolicyBasedRouteInterconnectAttachmentPtrOutput)
}

// Cloud region to install this policy-based route on for Interconnect attachments. Use `all` to install it on all Interconnect attachments.
func (o PolicyBasedRouteInterconnectAttachmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyBasedRouteInterconnectAttachment) string { return v.Region }).(pulumi.StringOutput)
}

type PolicyBasedRouteInterconnectAttachmentPtrOutput struct{ *pulumi.OutputState }

func (PolicyBasedRouteInterconnectAttachmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBasedRouteInterconnectAttachment)(nil)).Elem()
}

func (o PolicyBasedRouteInterconnectAttachmentPtrOutput) ToPolicyBasedRouteInterconnectAttachmentPtrOutput() PolicyBasedRouteInterconnectAttachmentPtrOutput {
	return o
}

func (o PolicyBasedRouteInterconnectAttachmentPtrOutput) ToPolicyBasedRouteInterconnectAttachmentPtrOutputWithContext(ctx context.Context) PolicyBasedRouteInterconnectAttachmentPtrOutput {
	return o
}

func (o PolicyBasedRouteInterconnectAttachmentPtrOutput) Elem() PolicyBasedRouteInterconnectAttachmentOutput {
	return o.ApplyT(func(v *PolicyBasedRouteInterconnectAttachment) PolicyBasedRouteInterconnectAttachment {
		if v != nil {
			return *v
		}
		var ret PolicyBasedRouteInterconnectAttachment
		return ret
	}).(PolicyBasedRouteInterconnectAttachmentOutput)
}

// Cloud region to install this policy-based route on for Interconnect attachments. Use `all` to install it on all Interconnect attachments.
func (o PolicyBasedRouteInterconnectAttachmentPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyBasedRouteInterconnectAttachment) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type PolicyBasedRouteVirtualMachine struct {
	// A list of VM instance tags that this policy-based route applies to. VM instances that have ANY of tags specified here will install this PBR.
	Tags []string `pulumi:"tags"`
}

// PolicyBasedRouteVirtualMachineInput is an input type that accepts PolicyBasedRouteVirtualMachineArgs and PolicyBasedRouteVirtualMachineOutput values.
// You can construct a concrete instance of `PolicyBasedRouteVirtualMachineInput` via:
//
//	PolicyBasedRouteVirtualMachineArgs{...}
type PolicyBasedRouteVirtualMachineInput interface {
	pulumi.Input

	ToPolicyBasedRouteVirtualMachineOutput() PolicyBasedRouteVirtualMachineOutput
	ToPolicyBasedRouteVirtualMachineOutputWithContext(context.Context) PolicyBasedRouteVirtualMachineOutput
}

type PolicyBasedRouteVirtualMachineArgs struct {
	// A list of VM instance tags that this policy-based route applies to. VM instances that have ANY of tags specified here will install this PBR.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (PolicyBasedRouteVirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBasedRouteVirtualMachine)(nil)).Elem()
}

func (i PolicyBasedRouteVirtualMachineArgs) ToPolicyBasedRouteVirtualMachineOutput() PolicyBasedRouteVirtualMachineOutput {
	return i.ToPolicyBasedRouteVirtualMachineOutputWithContext(context.Background())
}

func (i PolicyBasedRouteVirtualMachineArgs) ToPolicyBasedRouteVirtualMachineOutputWithContext(ctx context.Context) PolicyBasedRouteVirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteVirtualMachineOutput)
}

func (i PolicyBasedRouteVirtualMachineArgs) ToPolicyBasedRouteVirtualMachinePtrOutput() PolicyBasedRouteVirtualMachinePtrOutput {
	return i.ToPolicyBasedRouteVirtualMachinePtrOutputWithContext(context.Background())
}

func (i PolicyBasedRouteVirtualMachineArgs) ToPolicyBasedRouteVirtualMachinePtrOutputWithContext(ctx context.Context) PolicyBasedRouteVirtualMachinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteVirtualMachineOutput).ToPolicyBasedRouteVirtualMachinePtrOutputWithContext(ctx)
}

// PolicyBasedRouteVirtualMachinePtrInput is an input type that accepts PolicyBasedRouteVirtualMachineArgs, PolicyBasedRouteVirtualMachinePtr and PolicyBasedRouteVirtualMachinePtrOutput values.
// You can construct a concrete instance of `PolicyBasedRouteVirtualMachinePtrInput` via:
//
//	        PolicyBasedRouteVirtualMachineArgs{...}
//
//	or:
//
//	        nil
type PolicyBasedRouteVirtualMachinePtrInput interface {
	pulumi.Input

	ToPolicyBasedRouteVirtualMachinePtrOutput() PolicyBasedRouteVirtualMachinePtrOutput
	ToPolicyBasedRouteVirtualMachinePtrOutputWithContext(context.Context) PolicyBasedRouteVirtualMachinePtrOutput
}

type policyBasedRouteVirtualMachinePtrType PolicyBasedRouteVirtualMachineArgs

func PolicyBasedRouteVirtualMachinePtr(v *PolicyBasedRouteVirtualMachineArgs) PolicyBasedRouteVirtualMachinePtrInput {
	return (*policyBasedRouteVirtualMachinePtrType)(v)
}

func (*policyBasedRouteVirtualMachinePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBasedRouteVirtualMachine)(nil)).Elem()
}

func (i *policyBasedRouteVirtualMachinePtrType) ToPolicyBasedRouteVirtualMachinePtrOutput() PolicyBasedRouteVirtualMachinePtrOutput {
	return i.ToPolicyBasedRouteVirtualMachinePtrOutputWithContext(context.Background())
}

func (i *policyBasedRouteVirtualMachinePtrType) ToPolicyBasedRouteVirtualMachinePtrOutputWithContext(ctx context.Context) PolicyBasedRouteVirtualMachinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteVirtualMachinePtrOutput)
}

type PolicyBasedRouteVirtualMachineOutput struct{ *pulumi.OutputState }

func (PolicyBasedRouteVirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBasedRouteVirtualMachine)(nil)).Elem()
}

func (o PolicyBasedRouteVirtualMachineOutput) ToPolicyBasedRouteVirtualMachineOutput() PolicyBasedRouteVirtualMachineOutput {
	return o
}

func (o PolicyBasedRouteVirtualMachineOutput) ToPolicyBasedRouteVirtualMachineOutputWithContext(ctx context.Context) PolicyBasedRouteVirtualMachineOutput {
	return o
}

func (o PolicyBasedRouteVirtualMachineOutput) ToPolicyBasedRouteVirtualMachinePtrOutput() PolicyBasedRouteVirtualMachinePtrOutput {
	return o.ToPolicyBasedRouteVirtualMachinePtrOutputWithContext(context.Background())
}

func (o PolicyBasedRouteVirtualMachineOutput) ToPolicyBasedRouteVirtualMachinePtrOutputWithContext(ctx context.Context) PolicyBasedRouteVirtualMachinePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyBasedRouteVirtualMachine) *PolicyBasedRouteVirtualMachine {
		return &v
	}).(PolicyBasedRouteVirtualMachinePtrOutput)
}

// A list of VM instance tags that this policy-based route applies to. VM instances that have ANY of tags specified here will install this PBR.
func (o PolicyBasedRouteVirtualMachineOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyBasedRouteVirtualMachine) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type PolicyBasedRouteVirtualMachinePtrOutput struct{ *pulumi.OutputState }

func (PolicyBasedRouteVirtualMachinePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBasedRouteVirtualMachine)(nil)).Elem()
}

func (o PolicyBasedRouteVirtualMachinePtrOutput) ToPolicyBasedRouteVirtualMachinePtrOutput() PolicyBasedRouteVirtualMachinePtrOutput {
	return o
}

func (o PolicyBasedRouteVirtualMachinePtrOutput) ToPolicyBasedRouteVirtualMachinePtrOutputWithContext(ctx context.Context) PolicyBasedRouteVirtualMachinePtrOutput {
	return o
}

func (o PolicyBasedRouteVirtualMachinePtrOutput) Elem() PolicyBasedRouteVirtualMachineOutput {
	return o.ApplyT(func(v *PolicyBasedRouteVirtualMachine) PolicyBasedRouteVirtualMachine {
		if v != nil {
			return *v
		}
		var ret PolicyBasedRouteVirtualMachine
		return ret
	}).(PolicyBasedRouteVirtualMachineOutput)
}

// A list of VM instance tags that this policy-based route applies to. VM instances that have ANY of tags specified here will install this PBR.
func (o PolicyBasedRouteVirtualMachinePtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyBasedRouteVirtualMachine) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

type PolicyBasedRouteWarning struct {
	// (Output)
	// A warning code, if applicable.
	Code *string `pulumi:"code"`
	// (Output)
	// Metadata about this warning in key: value format. The key should provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement.
	Data map[string]string `pulumi:"data"`
	// (Output)
	// A human-readable description of the warning code.
	WarningMessage *string `pulumi:"warningMessage"`
}

// PolicyBasedRouteWarningInput is an input type that accepts PolicyBasedRouteWarningArgs and PolicyBasedRouteWarningOutput values.
// You can construct a concrete instance of `PolicyBasedRouteWarningInput` via:
//
//	PolicyBasedRouteWarningArgs{...}
type PolicyBasedRouteWarningInput interface {
	pulumi.Input

	ToPolicyBasedRouteWarningOutput() PolicyBasedRouteWarningOutput
	ToPolicyBasedRouteWarningOutputWithContext(context.Context) PolicyBasedRouteWarningOutput
}

type PolicyBasedRouteWarningArgs struct {
	// (Output)
	// A warning code, if applicable.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// (Output)
	// Metadata about this warning in key: value format. The key should provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement.
	Data pulumi.StringMapInput `pulumi:"data"`
	// (Output)
	// A human-readable description of the warning code.
	WarningMessage pulumi.StringPtrInput `pulumi:"warningMessage"`
}

func (PolicyBasedRouteWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBasedRouteWarning)(nil)).Elem()
}

func (i PolicyBasedRouteWarningArgs) ToPolicyBasedRouteWarningOutput() PolicyBasedRouteWarningOutput {
	return i.ToPolicyBasedRouteWarningOutputWithContext(context.Background())
}

func (i PolicyBasedRouteWarningArgs) ToPolicyBasedRouteWarningOutputWithContext(ctx context.Context) PolicyBasedRouteWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteWarningOutput)
}

// PolicyBasedRouteWarningArrayInput is an input type that accepts PolicyBasedRouteWarningArray and PolicyBasedRouteWarningArrayOutput values.
// You can construct a concrete instance of `PolicyBasedRouteWarningArrayInput` via:
//
//	PolicyBasedRouteWarningArray{ PolicyBasedRouteWarningArgs{...} }
type PolicyBasedRouteWarningArrayInput interface {
	pulumi.Input

	ToPolicyBasedRouteWarningArrayOutput() PolicyBasedRouteWarningArrayOutput
	ToPolicyBasedRouteWarningArrayOutputWithContext(context.Context) PolicyBasedRouteWarningArrayOutput
}

type PolicyBasedRouteWarningArray []PolicyBasedRouteWarningInput

func (PolicyBasedRouteWarningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBasedRouteWarning)(nil)).Elem()
}

func (i PolicyBasedRouteWarningArray) ToPolicyBasedRouteWarningArrayOutput() PolicyBasedRouteWarningArrayOutput {
	return i.ToPolicyBasedRouteWarningArrayOutputWithContext(context.Background())
}

func (i PolicyBasedRouteWarningArray) ToPolicyBasedRouteWarningArrayOutputWithContext(ctx context.Context) PolicyBasedRouteWarningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBasedRouteWarningArrayOutput)
}

type PolicyBasedRouteWarningOutput struct{ *pulumi.OutputState }

func (PolicyBasedRouteWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBasedRouteWarning)(nil)).Elem()
}

func (o PolicyBasedRouteWarningOutput) ToPolicyBasedRouteWarningOutput() PolicyBasedRouteWarningOutput {
	return o
}

func (o PolicyBasedRouteWarningOutput) ToPolicyBasedRouteWarningOutputWithContext(ctx context.Context) PolicyBasedRouteWarningOutput {
	return o
}

// (Output)
// A warning code, if applicable.
func (o PolicyBasedRouteWarningOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBasedRouteWarning) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// (Output)
// Metadata about this warning in key: value format. The key should provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement.
func (o PolicyBasedRouteWarningOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v PolicyBasedRouteWarning) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

// (Output)
// A human-readable description of the warning code.
func (o PolicyBasedRouteWarningOutput) WarningMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBasedRouteWarning) *string { return v.WarningMessage }).(pulumi.StringPtrOutput)
}

type PolicyBasedRouteWarningArrayOutput struct{ *pulumi.OutputState }

func (PolicyBasedRouteWarningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBasedRouteWarning)(nil)).Elem()
}

func (o PolicyBasedRouteWarningArrayOutput) ToPolicyBasedRouteWarningArrayOutput() PolicyBasedRouteWarningArrayOutput {
	return o
}

func (o PolicyBasedRouteWarningArrayOutput) ToPolicyBasedRouteWarningArrayOutputWithContext(ctx context.Context) PolicyBasedRouteWarningArrayOutput {
	return o
}

func (o PolicyBasedRouteWarningArrayOutput) Index(i pulumi.IntInput) PolicyBasedRouteWarningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyBasedRouteWarning {
		return vs[0].([]PolicyBasedRouteWarning)[vs[1].(int)]
	}).(PolicyBasedRouteWarningOutput)
}

type ServiceConnectionPolicyPscConfig struct {
	// Max number of PSC connections for this policy.
	Limit *string `pulumi:"limit"`
	// IDs of the subnetworks or fully qualified identifiers for the subnetworks
	Subnetworks []string `pulumi:"subnetworks"`
}

// ServiceConnectionPolicyPscConfigInput is an input type that accepts ServiceConnectionPolicyPscConfigArgs and ServiceConnectionPolicyPscConfigOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyPscConfigInput` via:
//
//	ServiceConnectionPolicyPscConfigArgs{...}
type ServiceConnectionPolicyPscConfigInput interface {
	pulumi.Input

	ToServiceConnectionPolicyPscConfigOutput() ServiceConnectionPolicyPscConfigOutput
	ToServiceConnectionPolicyPscConfigOutputWithContext(context.Context) ServiceConnectionPolicyPscConfigOutput
}

type ServiceConnectionPolicyPscConfigArgs struct {
	// Max number of PSC connections for this policy.
	Limit pulumi.StringPtrInput `pulumi:"limit"`
	// IDs of the subnetworks or fully qualified identifiers for the subnetworks
	Subnetworks pulumi.StringArrayInput `pulumi:"subnetworks"`
}

func (ServiceConnectionPolicyPscConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectionPolicyPscConfig)(nil)).Elem()
}

func (i ServiceConnectionPolicyPscConfigArgs) ToServiceConnectionPolicyPscConfigOutput() ServiceConnectionPolicyPscConfigOutput {
	return i.ToServiceConnectionPolicyPscConfigOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyPscConfigArgs) ToServiceConnectionPolicyPscConfigOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConfigOutput)
}

func (i ServiceConnectionPolicyPscConfigArgs) ToServiceConnectionPolicyPscConfigPtrOutput() ServiceConnectionPolicyPscConfigPtrOutput {
	return i.ToServiceConnectionPolicyPscConfigPtrOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyPscConfigArgs) ToServiceConnectionPolicyPscConfigPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConfigOutput).ToServiceConnectionPolicyPscConfigPtrOutputWithContext(ctx)
}

// ServiceConnectionPolicyPscConfigPtrInput is an input type that accepts ServiceConnectionPolicyPscConfigArgs, ServiceConnectionPolicyPscConfigPtr and ServiceConnectionPolicyPscConfigPtrOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyPscConfigPtrInput` via:
//
//	        ServiceConnectionPolicyPscConfigArgs{...}
//
//	or:
//
//	        nil
type ServiceConnectionPolicyPscConfigPtrInput interface {
	pulumi.Input

	ToServiceConnectionPolicyPscConfigPtrOutput() ServiceConnectionPolicyPscConfigPtrOutput
	ToServiceConnectionPolicyPscConfigPtrOutputWithContext(context.Context) ServiceConnectionPolicyPscConfigPtrOutput
}

type serviceConnectionPolicyPscConfigPtrType ServiceConnectionPolicyPscConfigArgs

func ServiceConnectionPolicyPscConfigPtr(v *ServiceConnectionPolicyPscConfigArgs) ServiceConnectionPolicyPscConfigPtrInput {
	return (*serviceConnectionPolicyPscConfigPtrType)(v)
}

func (*serviceConnectionPolicyPscConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicyPscConfig)(nil)).Elem()
}

func (i *serviceConnectionPolicyPscConfigPtrType) ToServiceConnectionPolicyPscConfigPtrOutput() ServiceConnectionPolicyPscConfigPtrOutput {
	return i.ToServiceConnectionPolicyPscConfigPtrOutputWithContext(context.Background())
}

func (i *serviceConnectionPolicyPscConfigPtrType) ToServiceConnectionPolicyPscConfigPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConfigPtrOutput)
}

type ServiceConnectionPolicyPscConfigOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyPscConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectionPolicyPscConfig)(nil)).Elem()
}

func (o ServiceConnectionPolicyPscConfigOutput) ToServiceConnectionPolicyPscConfigOutput() ServiceConnectionPolicyPscConfigOutput {
	return o
}

func (o ServiceConnectionPolicyPscConfigOutput) ToServiceConnectionPolicyPscConfigOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConfigOutput {
	return o
}

func (o ServiceConnectionPolicyPscConfigOutput) ToServiceConnectionPolicyPscConfigPtrOutput() ServiceConnectionPolicyPscConfigPtrOutput {
	return o.ToServiceConnectionPolicyPscConfigPtrOutputWithContext(context.Background())
}

func (o ServiceConnectionPolicyPscConfigOutput) ToServiceConnectionPolicyPscConfigPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceConnectionPolicyPscConfig) *ServiceConnectionPolicyPscConfig {
		return &v
	}).(ServiceConnectionPolicyPscConfigPtrOutput)
}

// Max number of PSC connections for this policy.
func (o ServiceConnectionPolicyPscConfigOutput) Limit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConfig) *string { return v.Limit }).(pulumi.StringPtrOutput)
}

// IDs of the subnetworks or fully qualified identifiers for the subnetworks
func (o ServiceConnectionPolicyPscConfigOutput) Subnetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConfig) []string { return v.Subnetworks }).(pulumi.StringArrayOutput)
}

type ServiceConnectionPolicyPscConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyPscConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicyPscConfig)(nil)).Elem()
}

func (o ServiceConnectionPolicyPscConfigPtrOutput) ToServiceConnectionPolicyPscConfigPtrOutput() ServiceConnectionPolicyPscConfigPtrOutput {
	return o
}

func (o ServiceConnectionPolicyPscConfigPtrOutput) ToServiceConnectionPolicyPscConfigPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConfigPtrOutput {
	return o
}

func (o ServiceConnectionPolicyPscConfigPtrOutput) Elem() ServiceConnectionPolicyPscConfigOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConfig) ServiceConnectionPolicyPscConfig {
		if v != nil {
			return *v
		}
		var ret ServiceConnectionPolicyPscConfig
		return ret
	}).(ServiceConnectionPolicyPscConfigOutput)
}

// Max number of PSC connections for this policy.
func (o ServiceConnectionPolicyPscConfigPtrOutput) Limit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConfig) *string {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.StringPtrOutput)
}

// IDs of the subnetworks or fully qualified identifiers for the subnetworks
func (o ServiceConnectionPolicyPscConfigPtrOutput) Subnetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnetworks
	}).(pulumi.StringArrayOutput)
}

type ServiceConnectionPolicyPscConnection struct {
	// The resource reference of the consumer address.
	ConsumerAddress *string `pulumi:"consumerAddress"`
	// The resource reference of the PSC Forwarding Rule within the consumer VPC.
	ConsumerForwardingRule *string `pulumi:"consumerForwardingRule"`
	// The project where the PSC connection is created.
	ConsumerTargetProject *string `pulumi:"consumerTargetProject"`
	// The most recent error during operating this connection.
	// Structure is documented below.
	Error *ServiceConnectionPolicyPscConnectionError `pulumi:"error"`
	// The error info for the latest error during operating this connection.
	// Structure is documented below.
	ErrorInfo *ServiceConnectionPolicyPscConnectionErrorInfo `pulumi:"errorInfo"`
	// The error type indicates whether the error is consumer facing, producer
	// facing or system internal.
	// Possible values are: `CONNECTION_ERROR_TYPE_UNSPECIFIED`, `ERROR_INTERNAL`, `ERROR_CONSUMER_SIDE`, `ERROR_PRODUCER_SIDE`.
	ErrorType *string `pulumi:"errorType"`
	// The last Compute Engine operation to setup PSC connection.
	GceOperation *string `pulumi:"gceOperation"`
	// The PSC connection id of the PSC forwarding rule.
	PscConnectionId *string `pulumi:"pscConnectionId"`
	// The state of the PSC connection.
	// Possible values are: `STATE_UNSPECIFIED`, `ACTIVE`, `CREATING`, `DELETING`, `FAILED`.
	State *string `pulumi:"state"`
}

// ServiceConnectionPolicyPscConnectionInput is an input type that accepts ServiceConnectionPolicyPscConnectionArgs and ServiceConnectionPolicyPscConnectionOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyPscConnectionInput` via:
//
//	ServiceConnectionPolicyPscConnectionArgs{...}
type ServiceConnectionPolicyPscConnectionInput interface {
	pulumi.Input

	ToServiceConnectionPolicyPscConnectionOutput() ServiceConnectionPolicyPscConnectionOutput
	ToServiceConnectionPolicyPscConnectionOutputWithContext(context.Context) ServiceConnectionPolicyPscConnectionOutput
}

type ServiceConnectionPolicyPscConnectionArgs struct {
	// The resource reference of the consumer address.
	ConsumerAddress pulumi.StringPtrInput `pulumi:"consumerAddress"`
	// The resource reference of the PSC Forwarding Rule within the consumer VPC.
	ConsumerForwardingRule pulumi.StringPtrInput `pulumi:"consumerForwardingRule"`
	// The project where the PSC connection is created.
	ConsumerTargetProject pulumi.StringPtrInput `pulumi:"consumerTargetProject"`
	// The most recent error during operating this connection.
	// Structure is documented below.
	Error ServiceConnectionPolicyPscConnectionErrorPtrInput `pulumi:"error"`
	// The error info for the latest error during operating this connection.
	// Structure is documented below.
	ErrorInfo ServiceConnectionPolicyPscConnectionErrorInfoPtrInput `pulumi:"errorInfo"`
	// The error type indicates whether the error is consumer facing, producer
	// facing or system internal.
	// Possible values are: `CONNECTION_ERROR_TYPE_UNSPECIFIED`, `ERROR_INTERNAL`, `ERROR_CONSUMER_SIDE`, `ERROR_PRODUCER_SIDE`.
	ErrorType pulumi.StringPtrInput `pulumi:"errorType"`
	// The last Compute Engine operation to setup PSC connection.
	GceOperation pulumi.StringPtrInput `pulumi:"gceOperation"`
	// The PSC connection id of the PSC forwarding rule.
	PscConnectionId pulumi.StringPtrInput `pulumi:"pscConnectionId"`
	// The state of the PSC connection.
	// Possible values are: `STATE_UNSPECIFIED`, `ACTIVE`, `CREATING`, `DELETING`, `FAILED`.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ServiceConnectionPolicyPscConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectionPolicyPscConnection)(nil)).Elem()
}

func (i ServiceConnectionPolicyPscConnectionArgs) ToServiceConnectionPolicyPscConnectionOutput() ServiceConnectionPolicyPscConnectionOutput {
	return i.ToServiceConnectionPolicyPscConnectionOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyPscConnectionArgs) ToServiceConnectionPolicyPscConnectionOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConnectionOutput)
}

// ServiceConnectionPolicyPscConnectionArrayInput is an input type that accepts ServiceConnectionPolicyPscConnectionArray and ServiceConnectionPolicyPscConnectionArrayOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyPscConnectionArrayInput` via:
//
//	ServiceConnectionPolicyPscConnectionArray{ ServiceConnectionPolicyPscConnectionArgs{...} }
type ServiceConnectionPolicyPscConnectionArrayInput interface {
	pulumi.Input

	ToServiceConnectionPolicyPscConnectionArrayOutput() ServiceConnectionPolicyPscConnectionArrayOutput
	ToServiceConnectionPolicyPscConnectionArrayOutputWithContext(context.Context) ServiceConnectionPolicyPscConnectionArrayOutput
}

type ServiceConnectionPolicyPscConnectionArray []ServiceConnectionPolicyPscConnectionInput

func (ServiceConnectionPolicyPscConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnectionPolicyPscConnection)(nil)).Elem()
}

func (i ServiceConnectionPolicyPscConnectionArray) ToServiceConnectionPolicyPscConnectionArrayOutput() ServiceConnectionPolicyPscConnectionArrayOutput {
	return i.ToServiceConnectionPolicyPscConnectionArrayOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyPscConnectionArray) ToServiceConnectionPolicyPscConnectionArrayOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConnectionArrayOutput)
}

type ServiceConnectionPolicyPscConnectionOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyPscConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectionPolicyPscConnection)(nil)).Elem()
}

func (o ServiceConnectionPolicyPscConnectionOutput) ToServiceConnectionPolicyPscConnectionOutput() ServiceConnectionPolicyPscConnectionOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionOutput) ToServiceConnectionPolicyPscConnectionOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionOutput {
	return o
}

// The resource reference of the consumer address.
func (o ServiceConnectionPolicyPscConnectionOutput) ConsumerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnection) *string { return v.ConsumerAddress }).(pulumi.StringPtrOutput)
}

// The resource reference of the PSC Forwarding Rule within the consumer VPC.
func (o ServiceConnectionPolicyPscConnectionOutput) ConsumerForwardingRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnection) *string { return v.ConsumerForwardingRule }).(pulumi.StringPtrOutput)
}

// The project where the PSC connection is created.
func (o ServiceConnectionPolicyPscConnectionOutput) ConsumerTargetProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnection) *string { return v.ConsumerTargetProject }).(pulumi.StringPtrOutput)
}

// The most recent error during operating this connection.
// Structure is documented below.
func (o ServiceConnectionPolicyPscConnectionOutput) Error() ServiceConnectionPolicyPscConnectionErrorPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnection) *ServiceConnectionPolicyPscConnectionError {
		return v.Error
	}).(ServiceConnectionPolicyPscConnectionErrorPtrOutput)
}

// The error info for the latest error during operating this connection.
// Structure is documented below.
func (o ServiceConnectionPolicyPscConnectionOutput) ErrorInfo() ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnection) *ServiceConnectionPolicyPscConnectionErrorInfo {
		return v.ErrorInfo
	}).(ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput)
}

// The error type indicates whether the error is consumer facing, producer
// facing or system internal.
// Possible values are: `CONNECTION_ERROR_TYPE_UNSPECIFIED`, `ERROR_INTERNAL`, `ERROR_CONSUMER_SIDE`, `ERROR_PRODUCER_SIDE`.
func (o ServiceConnectionPolicyPscConnectionOutput) ErrorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnection) *string { return v.ErrorType }).(pulumi.StringPtrOutput)
}

// The last Compute Engine operation to setup PSC connection.
func (o ServiceConnectionPolicyPscConnectionOutput) GceOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnection) *string { return v.GceOperation }).(pulumi.StringPtrOutput)
}

// The PSC connection id of the PSC forwarding rule.
func (o ServiceConnectionPolicyPscConnectionOutput) PscConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnection) *string { return v.PscConnectionId }).(pulumi.StringPtrOutput)
}

// The state of the PSC connection.
// Possible values are: `STATE_UNSPECIFIED`, `ACTIVE`, `CREATING`, `DELETING`, `FAILED`.
func (o ServiceConnectionPolicyPscConnectionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnection) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ServiceConnectionPolicyPscConnectionArrayOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyPscConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnectionPolicyPscConnection)(nil)).Elem()
}

func (o ServiceConnectionPolicyPscConnectionArrayOutput) ToServiceConnectionPolicyPscConnectionArrayOutput() ServiceConnectionPolicyPscConnectionArrayOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionArrayOutput) ToServiceConnectionPolicyPscConnectionArrayOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionArrayOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionArrayOutput) Index(i pulumi.IntInput) ServiceConnectionPolicyPscConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceConnectionPolicyPscConnection {
		return vs[0].([]ServiceConnectionPolicyPscConnection)[vs[1].(int)]
	}).(ServiceConnectionPolicyPscConnectionOutput)
}

type ServiceConnectionPolicyPscConnectionError struct {
	// The status code, which should be an enum value of [google.rpc.Code][].
	Code *int `pulumi:"code"`
	// (Output)
	// A list of messages that carry the error details.
	Details []map[string]string `pulumi:"details"`
	// A developer-facing error message.
	Message *string `pulumi:"message"`
}

// ServiceConnectionPolicyPscConnectionErrorInput is an input type that accepts ServiceConnectionPolicyPscConnectionErrorArgs and ServiceConnectionPolicyPscConnectionErrorOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyPscConnectionErrorInput` via:
//
//	ServiceConnectionPolicyPscConnectionErrorArgs{...}
type ServiceConnectionPolicyPscConnectionErrorInput interface {
	pulumi.Input

	ToServiceConnectionPolicyPscConnectionErrorOutput() ServiceConnectionPolicyPscConnectionErrorOutput
	ToServiceConnectionPolicyPscConnectionErrorOutputWithContext(context.Context) ServiceConnectionPolicyPscConnectionErrorOutput
}

type ServiceConnectionPolicyPscConnectionErrorArgs struct {
	// The status code, which should be an enum value of [google.rpc.Code][].
	Code pulumi.IntPtrInput `pulumi:"code"`
	// (Output)
	// A list of messages that carry the error details.
	Details pulumi.StringMapArrayInput `pulumi:"details"`
	// A developer-facing error message.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (ServiceConnectionPolicyPscConnectionErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectionPolicyPscConnectionError)(nil)).Elem()
}

func (i ServiceConnectionPolicyPscConnectionErrorArgs) ToServiceConnectionPolicyPscConnectionErrorOutput() ServiceConnectionPolicyPscConnectionErrorOutput {
	return i.ToServiceConnectionPolicyPscConnectionErrorOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyPscConnectionErrorArgs) ToServiceConnectionPolicyPscConnectionErrorOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConnectionErrorOutput)
}

func (i ServiceConnectionPolicyPscConnectionErrorArgs) ToServiceConnectionPolicyPscConnectionErrorPtrOutput() ServiceConnectionPolicyPscConnectionErrorPtrOutput {
	return i.ToServiceConnectionPolicyPscConnectionErrorPtrOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyPscConnectionErrorArgs) ToServiceConnectionPolicyPscConnectionErrorPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConnectionErrorOutput).ToServiceConnectionPolicyPscConnectionErrorPtrOutputWithContext(ctx)
}

// ServiceConnectionPolicyPscConnectionErrorPtrInput is an input type that accepts ServiceConnectionPolicyPscConnectionErrorArgs, ServiceConnectionPolicyPscConnectionErrorPtr and ServiceConnectionPolicyPscConnectionErrorPtrOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyPscConnectionErrorPtrInput` via:
//
//	        ServiceConnectionPolicyPscConnectionErrorArgs{...}
//
//	or:
//
//	        nil
type ServiceConnectionPolicyPscConnectionErrorPtrInput interface {
	pulumi.Input

	ToServiceConnectionPolicyPscConnectionErrorPtrOutput() ServiceConnectionPolicyPscConnectionErrorPtrOutput
	ToServiceConnectionPolicyPscConnectionErrorPtrOutputWithContext(context.Context) ServiceConnectionPolicyPscConnectionErrorPtrOutput
}

type serviceConnectionPolicyPscConnectionErrorPtrType ServiceConnectionPolicyPscConnectionErrorArgs

func ServiceConnectionPolicyPscConnectionErrorPtr(v *ServiceConnectionPolicyPscConnectionErrorArgs) ServiceConnectionPolicyPscConnectionErrorPtrInput {
	return (*serviceConnectionPolicyPscConnectionErrorPtrType)(v)
}

func (*serviceConnectionPolicyPscConnectionErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicyPscConnectionError)(nil)).Elem()
}

func (i *serviceConnectionPolicyPscConnectionErrorPtrType) ToServiceConnectionPolicyPscConnectionErrorPtrOutput() ServiceConnectionPolicyPscConnectionErrorPtrOutput {
	return i.ToServiceConnectionPolicyPscConnectionErrorPtrOutputWithContext(context.Background())
}

func (i *serviceConnectionPolicyPscConnectionErrorPtrType) ToServiceConnectionPolicyPscConnectionErrorPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConnectionErrorPtrOutput)
}

type ServiceConnectionPolicyPscConnectionErrorOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyPscConnectionErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectionPolicyPscConnectionError)(nil)).Elem()
}

func (o ServiceConnectionPolicyPscConnectionErrorOutput) ToServiceConnectionPolicyPscConnectionErrorOutput() ServiceConnectionPolicyPscConnectionErrorOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionErrorOutput) ToServiceConnectionPolicyPscConnectionErrorOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionErrorOutput) ToServiceConnectionPolicyPscConnectionErrorPtrOutput() ServiceConnectionPolicyPscConnectionErrorPtrOutput {
	return o.ToServiceConnectionPolicyPscConnectionErrorPtrOutputWithContext(context.Background())
}

func (o ServiceConnectionPolicyPscConnectionErrorOutput) ToServiceConnectionPolicyPscConnectionErrorPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceConnectionPolicyPscConnectionError) *ServiceConnectionPolicyPscConnectionError {
		return &v
	}).(ServiceConnectionPolicyPscConnectionErrorPtrOutput)
}

// The status code, which should be an enum value of [google.rpc.Code][].
func (o ServiceConnectionPolicyPscConnectionErrorOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnectionError) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// (Output)
// A list of messages that carry the error details.
func (o ServiceConnectionPolicyPscConnectionErrorOutput) Details() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnectionError) []map[string]string { return v.Details }).(pulumi.StringMapArrayOutput)
}

// A developer-facing error message.
func (o ServiceConnectionPolicyPscConnectionErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnectionError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ServiceConnectionPolicyPscConnectionErrorPtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyPscConnectionErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicyPscConnectionError)(nil)).Elem()
}

func (o ServiceConnectionPolicyPscConnectionErrorPtrOutput) ToServiceConnectionPolicyPscConnectionErrorPtrOutput() ServiceConnectionPolicyPscConnectionErrorPtrOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionErrorPtrOutput) ToServiceConnectionPolicyPscConnectionErrorPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorPtrOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionErrorPtrOutput) Elem() ServiceConnectionPolicyPscConnectionErrorOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConnectionError) ServiceConnectionPolicyPscConnectionError {
		if v != nil {
			return *v
		}
		var ret ServiceConnectionPolicyPscConnectionError
		return ret
	}).(ServiceConnectionPolicyPscConnectionErrorOutput)
}

// The status code, which should be an enum value of [google.rpc.Code][].
func (o ServiceConnectionPolicyPscConnectionErrorPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConnectionError) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// (Output)
// A list of messages that carry the error details.
func (o ServiceConnectionPolicyPscConnectionErrorPtrOutput) Details() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConnectionError) []map[string]string {
		if v == nil {
			return nil
		}
		return v.Details
	}).(pulumi.StringMapArrayOutput)
}

// A developer-facing error message.
func (o ServiceConnectionPolicyPscConnectionErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConnectionError) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

type ServiceConnectionPolicyPscConnectionErrorInfo struct {
	// The logical grouping to which the "reason" belongs.
	Domain *string `pulumi:"domain"`
	// Additional structured details about this error.
	Metadata map[string]string `pulumi:"metadata"`
	// The reason of the error.
	Reason *string `pulumi:"reason"`
}

// ServiceConnectionPolicyPscConnectionErrorInfoInput is an input type that accepts ServiceConnectionPolicyPscConnectionErrorInfoArgs and ServiceConnectionPolicyPscConnectionErrorInfoOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyPscConnectionErrorInfoInput` via:
//
//	ServiceConnectionPolicyPscConnectionErrorInfoArgs{...}
type ServiceConnectionPolicyPscConnectionErrorInfoInput interface {
	pulumi.Input

	ToServiceConnectionPolicyPscConnectionErrorInfoOutput() ServiceConnectionPolicyPscConnectionErrorInfoOutput
	ToServiceConnectionPolicyPscConnectionErrorInfoOutputWithContext(context.Context) ServiceConnectionPolicyPscConnectionErrorInfoOutput
}

type ServiceConnectionPolicyPscConnectionErrorInfoArgs struct {
	// The logical grouping to which the "reason" belongs.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Additional structured details about this error.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The reason of the error.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (ServiceConnectionPolicyPscConnectionErrorInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectionPolicyPscConnectionErrorInfo)(nil)).Elem()
}

func (i ServiceConnectionPolicyPscConnectionErrorInfoArgs) ToServiceConnectionPolicyPscConnectionErrorInfoOutput() ServiceConnectionPolicyPscConnectionErrorInfoOutput {
	return i.ToServiceConnectionPolicyPscConnectionErrorInfoOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyPscConnectionErrorInfoArgs) ToServiceConnectionPolicyPscConnectionErrorInfoOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConnectionErrorInfoOutput)
}

func (i ServiceConnectionPolicyPscConnectionErrorInfoArgs) ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutput() ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput {
	return i.ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutputWithContext(context.Background())
}

func (i ServiceConnectionPolicyPscConnectionErrorInfoArgs) ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConnectionErrorInfoOutput).ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutputWithContext(ctx)
}

// ServiceConnectionPolicyPscConnectionErrorInfoPtrInput is an input type that accepts ServiceConnectionPolicyPscConnectionErrorInfoArgs, ServiceConnectionPolicyPscConnectionErrorInfoPtr and ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput values.
// You can construct a concrete instance of `ServiceConnectionPolicyPscConnectionErrorInfoPtrInput` via:
//
//	        ServiceConnectionPolicyPscConnectionErrorInfoArgs{...}
//
//	or:
//
//	        nil
type ServiceConnectionPolicyPscConnectionErrorInfoPtrInput interface {
	pulumi.Input

	ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutput() ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput
	ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutputWithContext(context.Context) ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput
}

type serviceConnectionPolicyPscConnectionErrorInfoPtrType ServiceConnectionPolicyPscConnectionErrorInfoArgs

func ServiceConnectionPolicyPscConnectionErrorInfoPtr(v *ServiceConnectionPolicyPscConnectionErrorInfoArgs) ServiceConnectionPolicyPscConnectionErrorInfoPtrInput {
	return (*serviceConnectionPolicyPscConnectionErrorInfoPtrType)(v)
}

func (*serviceConnectionPolicyPscConnectionErrorInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicyPscConnectionErrorInfo)(nil)).Elem()
}

func (i *serviceConnectionPolicyPscConnectionErrorInfoPtrType) ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutput() ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput {
	return i.ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutputWithContext(context.Background())
}

func (i *serviceConnectionPolicyPscConnectionErrorInfoPtrType) ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput)
}

type ServiceConnectionPolicyPscConnectionErrorInfoOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyPscConnectionErrorInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnectionPolicyPscConnectionErrorInfo)(nil)).Elem()
}

func (o ServiceConnectionPolicyPscConnectionErrorInfoOutput) ToServiceConnectionPolicyPscConnectionErrorInfoOutput() ServiceConnectionPolicyPscConnectionErrorInfoOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionErrorInfoOutput) ToServiceConnectionPolicyPscConnectionErrorInfoOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorInfoOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionErrorInfoOutput) ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutput() ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput {
	return o.ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutputWithContext(context.Background())
}

func (o ServiceConnectionPolicyPscConnectionErrorInfoOutput) ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceConnectionPolicyPscConnectionErrorInfo) *ServiceConnectionPolicyPscConnectionErrorInfo {
		return &v
	}).(ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput)
}

// The logical grouping to which the "reason" belongs.
func (o ServiceConnectionPolicyPscConnectionErrorInfoOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnectionErrorInfo) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Additional structured details about this error.
func (o ServiceConnectionPolicyPscConnectionErrorInfoOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnectionErrorInfo) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The reason of the error.
func (o ServiceConnectionPolicyPscConnectionErrorInfoOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnectionPolicyPscConnectionErrorInfo) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

type ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicyPscConnectionErrorInfo)(nil)).Elem()
}

func (o ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput) ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutput() ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput) ToServiceConnectionPolicyPscConnectionErrorInfoPtrOutputWithContext(ctx context.Context) ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput {
	return o
}

func (o ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput) Elem() ServiceConnectionPolicyPscConnectionErrorInfoOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConnectionErrorInfo) ServiceConnectionPolicyPscConnectionErrorInfo {
		if v != nil {
			return *v
		}
		var ret ServiceConnectionPolicyPscConnectionErrorInfo
		return ret
	}).(ServiceConnectionPolicyPscConnectionErrorInfoOutput)
}

// The logical grouping to which the "reason" belongs.
func (o ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConnectionErrorInfo) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Additional structured details about this error.
func (o ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConnectionErrorInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// The reason of the error.
func (o ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicyPscConnectionErrorInfo) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

type SpokeLinkedInterconnectAttachments struct {
	// IP ranges allowed to be included during import from hub (does not control transit connectivity).
	// The only allowed value for now is "ALL_IPV4_RANGES".
	IncludeImportRanges []string `pulumi:"includeImportRanges"`
	// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
	SiteToSiteDataTransfer bool `pulumi:"siteToSiteDataTransfer"`
	// The URIs of linked interconnect attachment resources
	Uris []string `pulumi:"uris"`
}

// SpokeLinkedInterconnectAttachmentsInput is an input type that accepts SpokeLinkedInterconnectAttachmentsArgs and SpokeLinkedInterconnectAttachmentsOutput values.
// You can construct a concrete instance of `SpokeLinkedInterconnectAttachmentsInput` via:
//
//	SpokeLinkedInterconnectAttachmentsArgs{...}
type SpokeLinkedInterconnectAttachmentsInput interface {
	pulumi.Input

	ToSpokeLinkedInterconnectAttachmentsOutput() SpokeLinkedInterconnectAttachmentsOutput
	ToSpokeLinkedInterconnectAttachmentsOutputWithContext(context.Context) SpokeLinkedInterconnectAttachmentsOutput
}

type SpokeLinkedInterconnectAttachmentsArgs struct {
	// IP ranges allowed to be included during import from hub (does not control transit connectivity).
	// The only allowed value for now is "ALL_IPV4_RANGES".
	IncludeImportRanges pulumi.StringArrayInput `pulumi:"includeImportRanges"`
	// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
	SiteToSiteDataTransfer pulumi.BoolInput `pulumi:"siteToSiteDataTransfer"`
	// The URIs of linked interconnect attachment resources
	Uris pulumi.StringArrayInput `pulumi:"uris"`
}

func (SpokeLinkedInterconnectAttachmentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedInterconnectAttachments)(nil)).Elem()
}

func (i SpokeLinkedInterconnectAttachmentsArgs) ToSpokeLinkedInterconnectAttachmentsOutput() SpokeLinkedInterconnectAttachmentsOutput {
	return i.ToSpokeLinkedInterconnectAttachmentsOutputWithContext(context.Background())
}

func (i SpokeLinkedInterconnectAttachmentsArgs) ToSpokeLinkedInterconnectAttachmentsOutputWithContext(ctx context.Context) SpokeLinkedInterconnectAttachmentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedInterconnectAttachmentsOutput)
}

func (i SpokeLinkedInterconnectAttachmentsArgs) ToSpokeLinkedInterconnectAttachmentsPtrOutput() SpokeLinkedInterconnectAttachmentsPtrOutput {
	return i.ToSpokeLinkedInterconnectAttachmentsPtrOutputWithContext(context.Background())
}

func (i SpokeLinkedInterconnectAttachmentsArgs) ToSpokeLinkedInterconnectAttachmentsPtrOutputWithContext(ctx context.Context) SpokeLinkedInterconnectAttachmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedInterconnectAttachmentsOutput).ToSpokeLinkedInterconnectAttachmentsPtrOutputWithContext(ctx)
}

// SpokeLinkedInterconnectAttachmentsPtrInput is an input type that accepts SpokeLinkedInterconnectAttachmentsArgs, SpokeLinkedInterconnectAttachmentsPtr and SpokeLinkedInterconnectAttachmentsPtrOutput values.
// You can construct a concrete instance of `SpokeLinkedInterconnectAttachmentsPtrInput` via:
//
//	        SpokeLinkedInterconnectAttachmentsArgs{...}
//
//	or:
//
//	        nil
type SpokeLinkedInterconnectAttachmentsPtrInput interface {
	pulumi.Input

	ToSpokeLinkedInterconnectAttachmentsPtrOutput() SpokeLinkedInterconnectAttachmentsPtrOutput
	ToSpokeLinkedInterconnectAttachmentsPtrOutputWithContext(context.Context) SpokeLinkedInterconnectAttachmentsPtrOutput
}

type spokeLinkedInterconnectAttachmentsPtrType SpokeLinkedInterconnectAttachmentsArgs

func SpokeLinkedInterconnectAttachmentsPtr(v *SpokeLinkedInterconnectAttachmentsArgs) SpokeLinkedInterconnectAttachmentsPtrInput {
	return (*spokeLinkedInterconnectAttachmentsPtrType)(v)
}

func (*spokeLinkedInterconnectAttachmentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedInterconnectAttachments)(nil)).Elem()
}

func (i *spokeLinkedInterconnectAttachmentsPtrType) ToSpokeLinkedInterconnectAttachmentsPtrOutput() SpokeLinkedInterconnectAttachmentsPtrOutput {
	return i.ToSpokeLinkedInterconnectAttachmentsPtrOutputWithContext(context.Background())
}

func (i *spokeLinkedInterconnectAttachmentsPtrType) ToSpokeLinkedInterconnectAttachmentsPtrOutputWithContext(ctx context.Context) SpokeLinkedInterconnectAttachmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedInterconnectAttachmentsPtrOutput)
}

type SpokeLinkedInterconnectAttachmentsOutput struct{ *pulumi.OutputState }

func (SpokeLinkedInterconnectAttachmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedInterconnectAttachments)(nil)).Elem()
}

func (o SpokeLinkedInterconnectAttachmentsOutput) ToSpokeLinkedInterconnectAttachmentsOutput() SpokeLinkedInterconnectAttachmentsOutput {
	return o
}

func (o SpokeLinkedInterconnectAttachmentsOutput) ToSpokeLinkedInterconnectAttachmentsOutputWithContext(ctx context.Context) SpokeLinkedInterconnectAttachmentsOutput {
	return o
}

func (o SpokeLinkedInterconnectAttachmentsOutput) ToSpokeLinkedInterconnectAttachmentsPtrOutput() SpokeLinkedInterconnectAttachmentsPtrOutput {
	return o.ToSpokeLinkedInterconnectAttachmentsPtrOutputWithContext(context.Background())
}

func (o SpokeLinkedInterconnectAttachmentsOutput) ToSpokeLinkedInterconnectAttachmentsPtrOutputWithContext(ctx context.Context) SpokeLinkedInterconnectAttachmentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpokeLinkedInterconnectAttachments) *SpokeLinkedInterconnectAttachments {
		return &v
	}).(SpokeLinkedInterconnectAttachmentsPtrOutput)
}

// IP ranges allowed to be included during import from hub (does not control transit connectivity).
// The only allowed value for now is "ALL_IPV4_RANGES".
func (o SpokeLinkedInterconnectAttachmentsOutput) IncludeImportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpokeLinkedInterconnectAttachments) []string { return v.IncludeImportRanges }).(pulumi.StringArrayOutput)
}

// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
func (o SpokeLinkedInterconnectAttachmentsOutput) SiteToSiteDataTransfer() pulumi.BoolOutput {
	return o.ApplyT(func(v SpokeLinkedInterconnectAttachments) bool { return v.SiteToSiteDataTransfer }).(pulumi.BoolOutput)
}

// The URIs of linked interconnect attachment resources
func (o SpokeLinkedInterconnectAttachmentsOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpokeLinkedInterconnectAttachments) []string { return v.Uris }).(pulumi.StringArrayOutput)
}

type SpokeLinkedInterconnectAttachmentsPtrOutput struct{ *pulumi.OutputState }

func (SpokeLinkedInterconnectAttachmentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedInterconnectAttachments)(nil)).Elem()
}

func (o SpokeLinkedInterconnectAttachmentsPtrOutput) ToSpokeLinkedInterconnectAttachmentsPtrOutput() SpokeLinkedInterconnectAttachmentsPtrOutput {
	return o
}

func (o SpokeLinkedInterconnectAttachmentsPtrOutput) ToSpokeLinkedInterconnectAttachmentsPtrOutputWithContext(ctx context.Context) SpokeLinkedInterconnectAttachmentsPtrOutput {
	return o
}

func (o SpokeLinkedInterconnectAttachmentsPtrOutput) Elem() SpokeLinkedInterconnectAttachmentsOutput {
	return o.ApplyT(func(v *SpokeLinkedInterconnectAttachments) SpokeLinkedInterconnectAttachments {
		if v != nil {
			return *v
		}
		var ret SpokeLinkedInterconnectAttachments
		return ret
	}).(SpokeLinkedInterconnectAttachmentsOutput)
}

// IP ranges allowed to be included during import from hub (does not control transit connectivity).
// The only allowed value for now is "ALL_IPV4_RANGES".
func (o SpokeLinkedInterconnectAttachmentsPtrOutput) IncludeImportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedInterconnectAttachments) []string {
		if v == nil {
			return nil
		}
		return v.IncludeImportRanges
	}).(pulumi.StringArrayOutput)
}

// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
func (o SpokeLinkedInterconnectAttachmentsPtrOutput) SiteToSiteDataTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpokeLinkedInterconnectAttachments) *bool {
		if v == nil {
			return nil
		}
		return &v.SiteToSiteDataTransfer
	}).(pulumi.BoolPtrOutput)
}

// The URIs of linked interconnect attachment resources
func (o SpokeLinkedInterconnectAttachmentsPtrOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedInterconnectAttachments) []string {
		if v == nil {
			return nil
		}
		return v.Uris
	}).(pulumi.StringArrayOutput)
}

type SpokeLinkedProducerVpcNetwork struct {
	// IP ranges encompassing the subnets to be excluded from peering.
	ExcludeExportRanges []string `pulumi:"excludeExportRanges"`
	// IP ranges allowed to be included from peering.
	IncludeExportRanges []string `pulumi:"includeExportRanges"`
	// The URI of the Service Consumer VPC that the Producer VPC is peered with.
	Network string `pulumi:"network"`
	// The name of the VPC peering between the Service Consumer VPC and the Producer VPC (defined in the Tenant project) which is added to the NCC hub. This peering must be in ACTIVE state.
	Peering string `pulumi:"peering"`
	// (Output)
	// The URI of the Producer VPC.
	ProducerNetwork *string `pulumi:"producerNetwork"`
}

// SpokeLinkedProducerVpcNetworkInput is an input type that accepts SpokeLinkedProducerVpcNetworkArgs and SpokeLinkedProducerVpcNetworkOutput values.
// You can construct a concrete instance of `SpokeLinkedProducerVpcNetworkInput` via:
//
//	SpokeLinkedProducerVpcNetworkArgs{...}
type SpokeLinkedProducerVpcNetworkInput interface {
	pulumi.Input

	ToSpokeLinkedProducerVpcNetworkOutput() SpokeLinkedProducerVpcNetworkOutput
	ToSpokeLinkedProducerVpcNetworkOutputWithContext(context.Context) SpokeLinkedProducerVpcNetworkOutput
}

type SpokeLinkedProducerVpcNetworkArgs struct {
	// IP ranges encompassing the subnets to be excluded from peering.
	ExcludeExportRanges pulumi.StringArrayInput `pulumi:"excludeExportRanges"`
	// IP ranges allowed to be included from peering.
	IncludeExportRanges pulumi.StringArrayInput `pulumi:"includeExportRanges"`
	// The URI of the Service Consumer VPC that the Producer VPC is peered with.
	Network pulumi.StringInput `pulumi:"network"`
	// The name of the VPC peering between the Service Consumer VPC and the Producer VPC (defined in the Tenant project) which is added to the NCC hub. This peering must be in ACTIVE state.
	Peering pulumi.StringInput `pulumi:"peering"`
	// (Output)
	// The URI of the Producer VPC.
	ProducerNetwork pulumi.StringPtrInput `pulumi:"producerNetwork"`
}

func (SpokeLinkedProducerVpcNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedProducerVpcNetwork)(nil)).Elem()
}

func (i SpokeLinkedProducerVpcNetworkArgs) ToSpokeLinkedProducerVpcNetworkOutput() SpokeLinkedProducerVpcNetworkOutput {
	return i.ToSpokeLinkedProducerVpcNetworkOutputWithContext(context.Background())
}

func (i SpokeLinkedProducerVpcNetworkArgs) ToSpokeLinkedProducerVpcNetworkOutputWithContext(ctx context.Context) SpokeLinkedProducerVpcNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedProducerVpcNetworkOutput)
}

func (i SpokeLinkedProducerVpcNetworkArgs) ToSpokeLinkedProducerVpcNetworkPtrOutput() SpokeLinkedProducerVpcNetworkPtrOutput {
	return i.ToSpokeLinkedProducerVpcNetworkPtrOutputWithContext(context.Background())
}

func (i SpokeLinkedProducerVpcNetworkArgs) ToSpokeLinkedProducerVpcNetworkPtrOutputWithContext(ctx context.Context) SpokeLinkedProducerVpcNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedProducerVpcNetworkOutput).ToSpokeLinkedProducerVpcNetworkPtrOutputWithContext(ctx)
}

// SpokeLinkedProducerVpcNetworkPtrInput is an input type that accepts SpokeLinkedProducerVpcNetworkArgs, SpokeLinkedProducerVpcNetworkPtr and SpokeLinkedProducerVpcNetworkPtrOutput values.
// You can construct a concrete instance of `SpokeLinkedProducerVpcNetworkPtrInput` via:
//
//	        SpokeLinkedProducerVpcNetworkArgs{...}
//
//	or:
//
//	        nil
type SpokeLinkedProducerVpcNetworkPtrInput interface {
	pulumi.Input

	ToSpokeLinkedProducerVpcNetworkPtrOutput() SpokeLinkedProducerVpcNetworkPtrOutput
	ToSpokeLinkedProducerVpcNetworkPtrOutputWithContext(context.Context) SpokeLinkedProducerVpcNetworkPtrOutput
}

type spokeLinkedProducerVpcNetworkPtrType SpokeLinkedProducerVpcNetworkArgs

func SpokeLinkedProducerVpcNetworkPtr(v *SpokeLinkedProducerVpcNetworkArgs) SpokeLinkedProducerVpcNetworkPtrInput {
	return (*spokeLinkedProducerVpcNetworkPtrType)(v)
}

func (*spokeLinkedProducerVpcNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedProducerVpcNetwork)(nil)).Elem()
}

func (i *spokeLinkedProducerVpcNetworkPtrType) ToSpokeLinkedProducerVpcNetworkPtrOutput() SpokeLinkedProducerVpcNetworkPtrOutput {
	return i.ToSpokeLinkedProducerVpcNetworkPtrOutputWithContext(context.Background())
}

func (i *spokeLinkedProducerVpcNetworkPtrType) ToSpokeLinkedProducerVpcNetworkPtrOutputWithContext(ctx context.Context) SpokeLinkedProducerVpcNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedProducerVpcNetworkPtrOutput)
}

type SpokeLinkedProducerVpcNetworkOutput struct{ *pulumi.OutputState }

func (SpokeLinkedProducerVpcNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedProducerVpcNetwork)(nil)).Elem()
}

func (o SpokeLinkedProducerVpcNetworkOutput) ToSpokeLinkedProducerVpcNetworkOutput() SpokeLinkedProducerVpcNetworkOutput {
	return o
}

func (o SpokeLinkedProducerVpcNetworkOutput) ToSpokeLinkedProducerVpcNetworkOutputWithContext(ctx context.Context) SpokeLinkedProducerVpcNetworkOutput {
	return o
}

func (o SpokeLinkedProducerVpcNetworkOutput) ToSpokeLinkedProducerVpcNetworkPtrOutput() SpokeLinkedProducerVpcNetworkPtrOutput {
	return o.ToSpokeLinkedProducerVpcNetworkPtrOutputWithContext(context.Background())
}

func (o SpokeLinkedProducerVpcNetworkOutput) ToSpokeLinkedProducerVpcNetworkPtrOutputWithContext(ctx context.Context) SpokeLinkedProducerVpcNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpokeLinkedProducerVpcNetwork) *SpokeLinkedProducerVpcNetwork {
		return &v
	}).(SpokeLinkedProducerVpcNetworkPtrOutput)
}

// IP ranges encompassing the subnets to be excluded from peering.
func (o SpokeLinkedProducerVpcNetworkOutput) ExcludeExportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpokeLinkedProducerVpcNetwork) []string { return v.ExcludeExportRanges }).(pulumi.StringArrayOutput)
}

// IP ranges allowed to be included from peering.
func (o SpokeLinkedProducerVpcNetworkOutput) IncludeExportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpokeLinkedProducerVpcNetwork) []string { return v.IncludeExportRanges }).(pulumi.StringArrayOutput)
}

// The URI of the Service Consumer VPC that the Producer VPC is peered with.
func (o SpokeLinkedProducerVpcNetworkOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v SpokeLinkedProducerVpcNetwork) string { return v.Network }).(pulumi.StringOutput)
}

// The name of the VPC peering between the Service Consumer VPC and the Producer VPC (defined in the Tenant project) which is added to the NCC hub. This peering must be in ACTIVE state.
func (o SpokeLinkedProducerVpcNetworkOutput) Peering() pulumi.StringOutput {
	return o.ApplyT(func(v SpokeLinkedProducerVpcNetwork) string { return v.Peering }).(pulumi.StringOutput)
}

// (Output)
// The URI of the Producer VPC.
func (o SpokeLinkedProducerVpcNetworkOutput) ProducerNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpokeLinkedProducerVpcNetwork) *string { return v.ProducerNetwork }).(pulumi.StringPtrOutput)
}

type SpokeLinkedProducerVpcNetworkPtrOutput struct{ *pulumi.OutputState }

func (SpokeLinkedProducerVpcNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedProducerVpcNetwork)(nil)).Elem()
}

func (o SpokeLinkedProducerVpcNetworkPtrOutput) ToSpokeLinkedProducerVpcNetworkPtrOutput() SpokeLinkedProducerVpcNetworkPtrOutput {
	return o
}

func (o SpokeLinkedProducerVpcNetworkPtrOutput) ToSpokeLinkedProducerVpcNetworkPtrOutputWithContext(ctx context.Context) SpokeLinkedProducerVpcNetworkPtrOutput {
	return o
}

func (o SpokeLinkedProducerVpcNetworkPtrOutput) Elem() SpokeLinkedProducerVpcNetworkOutput {
	return o.ApplyT(func(v *SpokeLinkedProducerVpcNetwork) SpokeLinkedProducerVpcNetwork {
		if v != nil {
			return *v
		}
		var ret SpokeLinkedProducerVpcNetwork
		return ret
	}).(SpokeLinkedProducerVpcNetworkOutput)
}

// IP ranges encompassing the subnets to be excluded from peering.
func (o SpokeLinkedProducerVpcNetworkPtrOutput) ExcludeExportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedProducerVpcNetwork) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeExportRanges
	}).(pulumi.StringArrayOutput)
}

// IP ranges allowed to be included from peering.
func (o SpokeLinkedProducerVpcNetworkPtrOutput) IncludeExportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedProducerVpcNetwork) []string {
		if v == nil {
			return nil
		}
		return v.IncludeExportRanges
	}).(pulumi.StringArrayOutput)
}

// The URI of the Service Consumer VPC that the Producer VPC is peered with.
func (o SpokeLinkedProducerVpcNetworkPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpokeLinkedProducerVpcNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Network
	}).(pulumi.StringPtrOutput)
}

// The name of the VPC peering between the Service Consumer VPC and the Producer VPC (defined in the Tenant project) which is added to the NCC hub. This peering must be in ACTIVE state.
func (o SpokeLinkedProducerVpcNetworkPtrOutput) Peering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpokeLinkedProducerVpcNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Peering
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The URI of the Producer VPC.
func (o SpokeLinkedProducerVpcNetworkPtrOutput) ProducerNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpokeLinkedProducerVpcNetwork) *string {
		if v == nil {
			return nil
		}
		return v.ProducerNetwork
	}).(pulumi.StringPtrOutput)
}

type SpokeLinkedRouterApplianceInstances struct {
	// IP ranges allowed to be included during import from hub (does not control transit connectivity).
	// The only allowed value for now is "ALL_IPV4_RANGES".
	IncludeImportRanges []string `pulumi:"includeImportRanges"`
	// The list of router appliance instances
	// Structure is documented below.
	Instances []SpokeLinkedRouterApplianceInstancesInstance `pulumi:"instances"`
	// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
	SiteToSiteDataTransfer bool `pulumi:"siteToSiteDataTransfer"`
}

// SpokeLinkedRouterApplianceInstancesInput is an input type that accepts SpokeLinkedRouterApplianceInstancesArgs and SpokeLinkedRouterApplianceInstancesOutput values.
// You can construct a concrete instance of `SpokeLinkedRouterApplianceInstancesInput` via:
//
//	SpokeLinkedRouterApplianceInstancesArgs{...}
type SpokeLinkedRouterApplianceInstancesInput interface {
	pulumi.Input

	ToSpokeLinkedRouterApplianceInstancesOutput() SpokeLinkedRouterApplianceInstancesOutput
	ToSpokeLinkedRouterApplianceInstancesOutputWithContext(context.Context) SpokeLinkedRouterApplianceInstancesOutput
}

type SpokeLinkedRouterApplianceInstancesArgs struct {
	// IP ranges allowed to be included during import from hub (does not control transit connectivity).
	// The only allowed value for now is "ALL_IPV4_RANGES".
	IncludeImportRanges pulumi.StringArrayInput `pulumi:"includeImportRanges"`
	// The list of router appliance instances
	// Structure is documented below.
	Instances SpokeLinkedRouterApplianceInstancesInstanceArrayInput `pulumi:"instances"`
	// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
	SiteToSiteDataTransfer pulumi.BoolInput `pulumi:"siteToSiteDataTransfer"`
}

func (SpokeLinkedRouterApplianceInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedRouterApplianceInstances)(nil)).Elem()
}

func (i SpokeLinkedRouterApplianceInstancesArgs) ToSpokeLinkedRouterApplianceInstancesOutput() SpokeLinkedRouterApplianceInstancesOutput {
	return i.ToSpokeLinkedRouterApplianceInstancesOutputWithContext(context.Background())
}

func (i SpokeLinkedRouterApplianceInstancesArgs) ToSpokeLinkedRouterApplianceInstancesOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedRouterApplianceInstancesOutput)
}

func (i SpokeLinkedRouterApplianceInstancesArgs) ToSpokeLinkedRouterApplianceInstancesPtrOutput() SpokeLinkedRouterApplianceInstancesPtrOutput {
	return i.ToSpokeLinkedRouterApplianceInstancesPtrOutputWithContext(context.Background())
}

func (i SpokeLinkedRouterApplianceInstancesArgs) ToSpokeLinkedRouterApplianceInstancesPtrOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedRouterApplianceInstancesOutput).ToSpokeLinkedRouterApplianceInstancesPtrOutputWithContext(ctx)
}

// SpokeLinkedRouterApplianceInstancesPtrInput is an input type that accepts SpokeLinkedRouterApplianceInstancesArgs, SpokeLinkedRouterApplianceInstancesPtr and SpokeLinkedRouterApplianceInstancesPtrOutput values.
// You can construct a concrete instance of `SpokeLinkedRouterApplianceInstancesPtrInput` via:
//
//	        SpokeLinkedRouterApplianceInstancesArgs{...}
//
//	or:
//
//	        nil
type SpokeLinkedRouterApplianceInstancesPtrInput interface {
	pulumi.Input

	ToSpokeLinkedRouterApplianceInstancesPtrOutput() SpokeLinkedRouterApplianceInstancesPtrOutput
	ToSpokeLinkedRouterApplianceInstancesPtrOutputWithContext(context.Context) SpokeLinkedRouterApplianceInstancesPtrOutput
}

type spokeLinkedRouterApplianceInstancesPtrType SpokeLinkedRouterApplianceInstancesArgs

func SpokeLinkedRouterApplianceInstancesPtr(v *SpokeLinkedRouterApplianceInstancesArgs) SpokeLinkedRouterApplianceInstancesPtrInput {
	return (*spokeLinkedRouterApplianceInstancesPtrType)(v)
}

func (*spokeLinkedRouterApplianceInstancesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedRouterApplianceInstances)(nil)).Elem()
}

func (i *spokeLinkedRouterApplianceInstancesPtrType) ToSpokeLinkedRouterApplianceInstancesPtrOutput() SpokeLinkedRouterApplianceInstancesPtrOutput {
	return i.ToSpokeLinkedRouterApplianceInstancesPtrOutputWithContext(context.Background())
}

func (i *spokeLinkedRouterApplianceInstancesPtrType) ToSpokeLinkedRouterApplianceInstancesPtrOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedRouterApplianceInstancesPtrOutput)
}

type SpokeLinkedRouterApplianceInstancesOutput struct{ *pulumi.OutputState }

func (SpokeLinkedRouterApplianceInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedRouterApplianceInstances)(nil)).Elem()
}

func (o SpokeLinkedRouterApplianceInstancesOutput) ToSpokeLinkedRouterApplianceInstancesOutput() SpokeLinkedRouterApplianceInstancesOutput {
	return o
}

func (o SpokeLinkedRouterApplianceInstancesOutput) ToSpokeLinkedRouterApplianceInstancesOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesOutput {
	return o
}

func (o SpokeLinkedRouterApplianceInstancesOutput) ToSpokeLinkedRouterApplianceInstancesPtrOutput() SpokeLinkedRouterApplianceInstancesPtrOutput {
	return o.ToSpokeLinkedRouterApplianceInstancesPtrOutputWithContext(context.Background())
}

func (o SpokeLinkedRouterApplianceInstancesOutput) ToSpokeLinkedRouterApplianceInstancesPtrOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpokeLinkedRouterApplianceInstances) *SpokeLinkedRouterApplianceInstances {
		return &v
	}).(SpokeLinkedRouterApplianceInstancesPtrOutput)
}

// IP ranges allowed to be included during import from hub (does not control transit connectivity).
// The only allowed value for now is "ALL_IPV4_RANGES".
func (o SpokeLinkedRouterApplianceInstancesOutput) IncludeImportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpokeLinkedRouterApplianceInstances) []string { return v.IncludeImportRanges }).(pulumi.StringArrayOutput)
}

// The list of router appliance instances
// Structure is documented below.
func (o SpokeLinkedRouterApplianceInstancesOutput) Instances() SpokeLinkedRouterApplianceInstancesInstanceArrayOutput {
	return o.ApplyT(func(v SpokeLinkedRouterApplianceInstances) []SpokeLinkedRouterApplianceInstancesInstance {
		return v.Instances
	}).(SpokeLinkedRouterApplianceInstancesInstanceArrayOutput)
}

// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
func (o SpokeLinkedRouterApplianceInstancesOutput) SiteToSiteDataTransfer() pulumi.BoolOutput {
	return o.ApplyT(func(v SpokeLinkedRouterApplianceInstances) bool { return v.SiteToSiteDataTransfer }).(pulumi.BoolOutput)
}

type SpokeLinkedRouterApplianceInstancesPtrOutput struct{ *pulumi.OutputState }

func (SpokeLinkedRouterApplianceInstancesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedRouterApplianceInstances)(nil)).Elem()
}

func (o SpokeLinkedRouterApplianceInstancesPtrOutput) ToSpokeLinkedRouterApplianceInstancesPtrOutput() SpokeLinkedRouterApplianceInstancesPtrOutput {
	return o
}

func (o SpokeLinkedRouterApplianceInstancesPtrOutput) ToSpokeLinkedRouterApplianceInstancesPtrOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesPtrOutput {
	return o
}

func (o SpokeLinkedRouterApplianceInstancesPtrOutput) Elem() SpokeLinkedRouterApplianceInstancesOutput {
	return o.ApplyT(func(v *SpokeLinkedRouterApplianceInstances) SpokeLinkedRouterApplianceInstances {
		if v != nil {
			return *v
		}
		var ret SpokeLinkedRouterApplianceInstances
		return ret
	}).(SpokeLinkedRouterApplianceInstancesOutput)
}

// IP ranges allowed to be included during import from hub (does not control transit connectivity).
// The only allowed value for now is "ALL_IPV4_RANGES".
func (o SpokeLinkedRouterApplianceInstancesPtrOutput) IncludeImportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedRouterApplianceInstances) []string {
		if v == nil {
			return nil
		}
		return v.IncludeImportRanges
	}).(pulumi.StringArrayOutput)
}

// The list of router appliance instances
// Structure is documented below.
func (o SpokeLinkedRouterApplianceInstancesPtrOutput) Instances() SpokeLinkedRouterApplianceInstancesInstanceArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedRouterApplianceInstances) []SpokeLinkedRouterApplianceInstancesInstance {
		if v == nil {
			return nil
		}
		return v.Instances
	}).(SpokeLinkedRouterApplianceInstancesInstanceArrayOutput)
}

// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
func (o SpokeLinkedRouterApplianceInstancesPtrOutput) SiteToSiteDataTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpokeLinkedRouterApplianceInstances) *bool {
		if v == nil {
			return nil
		}
		return &v.SiteToSiteDataTransfer
	}).(pulumi.BoolPtrOutput)
}

type SpokeLinkedRouterApplianceInstancesInstance struct {
	// The IP address on the VM to use for peering.
	IpAddress *string `pulumi:"ipAddress"`
	// The URI of the virtual machine resource
	VirtualMachine *string `pulumi:"virtualMachine"`
}

// SpokeLinkedRouterApplianceInstancesInstanceInput is an input type that accepts SpokeLinkedRouterApplianceInstancesInstanceArgs and SpokeLinkedRouterApplianceInstancesInstanceOutput values.
// You can construct a concrete instance of `SpokeLinkedRouterApplianceInstancesInstanceInput` via:
//
//	SpokeLinkedRouterApplianceInstancesInstanceArgs{...}
type SpokeLinkedRouterApplianceInstancesInstanceInput interface {
	pulumi.Input

	ToSpokeLinkedRouterApplianceInstancesInstanceOutput() SpokeLinkedRouterApplianceInstancesInstanceOutput
	ToSpokeLinkedRouterApplianceInstancesInstanceOutputWithContext(context.Context) SpokeLinkedRouterApplianceInstancesInstanceOutput
}

type SpokeLinkedRouterApplianceInstancesInstanceArgs struct {
	// The IP address on the VM to use for peering.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The URI of the virtual machine resource
	VirtualMachine pulumi.StringPtrInput `pulumi:"virtualMachine"`
}

func (SpokeLinkedRouterApplianceInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedRouterApplianceInstancesInstance)(nil)).Elem()
}

func (i SpokeLinkedRouterApplianceInstancesInstanceArgs) ToSpokeLinkedRouterApplianceInstancesInstanceOutput() SpokeLinkedRouterApplianceInstancesInstanceOutput {
	return i.ToSpokeLinkedRouterApplianceInstancesInstanceOutputWithContext(context.Background())
}

func (i SpokeLinkedRouterApplianceInstancesInstanceArgs) ToSpokeLinkedRouterApplianceInstancesInstanceOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedRouterApplianceInstancesInstanceOutput)
}

// SpokeLinkedRouterApplianceInstancesInstanceArrayInput is an input type that accepts SpokeLinkedRouterApplianceInstancesInstanceArray and SpokeLinkedRouterApplianceInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `SpokeLinkedRouterApplianceInstancesInstanceArrayInput` via:
//
//	SpokeLinkedRouterApplianceInstancesInstanceArray{ SpokeLinkedRouterApplianceInstancesInstanceArgs{...} }
type SpokeLinkedRouterApplianceInstancesInstanceArrayInput interface {
	pulumi.Input

	ToSpokeLinkedRouterApplianceInstancesInstanceArrayOutput() SpokeLinkedRouterApplianceInstancesInstanceArrayOutput
	ToSpokeLinkedRouterApplianceInstancesInstanceArrayOutputWithContext(context.Context) SpokeLinkedRouterApplianceInstancesInstanceArrayOutput
}

type SpokeLinkedRouterApplianceInstancesInstanceArray []SpokeLinkedRouterApplianceInstancesInstanceInput

func (SpokeLinkedRouterApplianceInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpokeLinkedRouterApplianceInstancesInstance)(nil)).Elem()
}

func (i SpokeLinkedRouterApplianceInstancesInstanceArray) ToSpokeLinkedRouterApplianceInstancesInstanceArrayOutput() SpokeLinkedRouterApplianceInstancesInstanceArrayOutput {
	return i.ToSpokeLinkedRouterApplianceInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i SpokeLinkedRouterApplianceInstancesInstanceArray) ToSpokeLinkedRouterApplianceInstancesInstanceArrayOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedRouterApplianceInstancesInstanceArrayOutput)
}

type SpokeLinkedRouterApplianceInstancesInstanceOutput struct{ *pulumi.OutputState }

func (SpokeLinkedRouterApplianceInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedRouterApplianceInstancesInstance)(nil)).Elem()
}

func (o SpokeLinkedRouterApplianceInstancesInstanceOutput) ToSpokeLinkedRouterApplianceInstancesInstanceOutput() SpokeLinkedRouterApplianceInstancesInstanceOutput {
	return o
}

func (o SpokeLinkedRouterApplianceInstancesInstanceOutput) ToSpokeLinkedRouterApplianceInstancesInstanceOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesInstanceOutput {
	return o
}

// The IP address on the VM to use for peering.
func (o SpokeLinkedRouterApplianceInstancesInstanceOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpokeLinkedRouterApplianceInstancesInstance) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The URI of the virtual machine resource
func (o SpokeLinkedRouterApplianceInstancesInstanceOutput) VirtualMachine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpokeLinkedRouterApplianceInstancesInstance) *string { return v.VirtualMachine }).(pulumi.StringPtrOutput)
}

type SpokeLinkedRouterApplianceInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (SpokeLinkedRouterApplianceInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpokeLinkedRouterApplianceInstancesInstance)(nil)).Elem()
}

func (o SpokeLinkedRouterApplianceInstancesInstanceArrayOutput) ToSpokeLinkedRouterApplianceInstancesInstanceArrayOutput() SpokeLinkedRouterApplianceInstancesInstanceArrayOutput {
	return o
}

func (o SpokeLinkedRouterApplianceInstancesInstanceArrayOutput) ToSpokeLinkedRouterApplianceInstancesInstanceArrayOutputWithContext(ctx context.Context) SpokeLinkedRouterApplianceInstancesInstanceArrayOutput {
	return o
}

func (o SpokeLinkedRouterApplianceInstancesInstanceArrayOutput) Index(i pulumi.IntInput) SpokeLinkedRouterApplianceInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpokeLinkedRouterApplianceInstancesInstance {
		return vs[0].([]SpokeLinkedRouterApplianceInstancesInstance)[vs[1].(int)]
	}).(SpokeLinkedRouterApplianceInstancesInstanceOutput)
}

type SpokeLinkedVpcNetwork struct {
	// IP ranges encompassing the subnets to be excluded from peering.
	ExcludeExportRanges []string `pulumi:"excludeExportRanges"`
	// IP ranges allowed to be included from peering.
	IncludeExportRanges []string `pulumi:"includeExportRanges"`
	// The URI of the VPC network resource.
	Uri string `pulumi:"uri"`
}

// SpokeLinkedVpcNetworkInput is an input type that accepts SpokeLinkedVpcNetworkArgs and SpokeLinkedVpcNetworkOutput values.
// You can construct a concrete instance of `SpokeLinkedVpcNetworkInput` via:
//
//	SpokeLinkedVpcNetworkArgs{...}
type SpokeLinkedVpcNetworkInput interface {
	pulumi.Input

	ToSpokeLinkedVpcNetworkOutput() SpokeLinkedVpcNetworkOutput
	ToSpokeLinkedVpcNetworkOutputWithContext(context.Context) SpokeLinkedVpcNetworkOutput
}

type SpokeLinkedVpcNetworkArgs struct {
	// IP ranges encompassing the subnets to be excluded from peering.
	ExcludeExportRanges pulumi.StringArrayInput `pulumi:"excludeExportRanges"`
	// IP ranges allowed to be included from peering.
	IncludeExportRanges pulumi.StringArrayInput `pulumi:"includeExportRanges"`
	// The URI of the VPC network resource.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (SpokeLinkedVpcNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedVpcNetwork)(nil)).Elem()
}

func (i SpokeLinkedVpcNetworkArgs) ToSpokeLinkedVpcNetworkOutput() SpokeLinkedVpcNetworkOutput {
	return i.ToSpokeLinkedVpcNetworkOutputWithContext(context.Background())
}

func (i SpokeLinkedVpcNetworkArgs) ToSpokeLinkedVpcNetworkOutputWithContext(ctx context.Context) SpokeLinkedVpcNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedVpcNetworkOutput)
}

func (i SpokeLinkedVpcNetworkArgs) ToSpokeLinkedVpcNetworkPtrOutput() SpokeLinkedVpcNetworkPtrOutput {
	return i.ToSpokeLinkedVpcNetworkPtrOutputWithContext(context.Background())
}

func (i SpokeLinkedVpcNetworkArgs) ToSpokeLinkedVpcNetworkPtrOutputWithContext(ctx context.Context) SpokeLinkedVpcNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedVpcNetworkOutput).ToSpokeLinkedVpcNetworkPtrOutputWithContext(ctx)
}

// SpokeLinkedVpcNetworkPtrInput is an input type that accepts SpokeLinkedVpcNetworkArgs, SpokeLinkedVpcNetworkPtr and SpokeLinkedVpcNetworkPtrOutput values.
// You can construct a concrete instance of `SpokeLinkedVpcNetworkPtrInput` via:
//
//	        SpokeLinkedVpcNetworkArgs{...}
//
//	or:
//
//	        nil
type SpokeLinkedVpcNetworkPtrInput interface {
	pulumi.Input

	ToSpokeLinkedVpcNetworkPtrOutput() SpokeLinkedVpcNetworkPtrOutput
	ToSpokeLinkedVpcNetworkPtrOutputWithContext(context.Context) SpokeLinkedVpcNetworkPtrOutput
}

type spokeLinkedVpcNetworkPtrType SpokeLinkedVpcNetworkArgs

func SpokeLinkedVpcNetworkPtr(v *SpokeLinkedVpcNetworkArgs) SpokeLinkedVpcNetworkPtrInput {
	return (*spokeLinkedVpcNetworkPtrType)(v)
}

func (*spokeLinkedVpcNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedVpcNetwork)(nil)).Elem()
}

func (i *spokeLinkedVpcNetworkPtrType) ToSpokeLinkedVpcNetworkPtrOutput() SpokeLinkedVpcNetworkPtrOutput {
	return i.ToSpokeLinkedVpcNetworkPtrOutputWithContext(context.Background())
}

func (i *spokeLinkedVpcNetworkPtrType) ToSpokeLinkedVpcNetworkPtrOutputWithContext(ctx context.Context) SpokeLinkedVpcNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedVpcNetworkPtrOutput)
}

type SpokeLinkedVpcNetworkOutput struct{ *pulumi.OutputState }

func (SpokeLinkedVpcNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedVpcNetwork)(nil)).Elem()
}

func (o SpokeLinkedVpcNetworkOutput) ToSpokeLinkedVpcNetworkOutput() SpokeLinkedVpcNetworkOutput {
	return o
}

func (o SpokeLinkedVpcNetworkOutput) ToSpokeLinkedVpcNetworkOutputWithContext(ctx context.Context) SpokeLinkedVpcNetworkOutput {
	return o
}

func (o SpokeLinkedVpcNetworkOutput) ToSpokeLinkedVpcNetworkPtrOutput() SpokeLinkedVpcNetworkPtrOutput {
	return o.ToSpokeLinkedVpcNetworkPtrOutputWithContext(context.Background())
}

func (o SpokeLinkedVpcNetworkOutput) ToSpokeLinkedVpcNetworkPtrOutputWithContext(ctx context.Context) SpokeLinkedVpcNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpokeLinkedVpcNetwork) *SpokeLinkedVpcNetwork {
		return &v
	}).(SpokeLinkedVpcNetworkPtrOutput)
}

// IP ranges encompassing the subnets to be excluded from peering.
func (o SpokeLinkedVpcNetworkOutput) ExcludeExportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpokeLinkedVpcNetwork) []string { return v.ExcludeExportRanges }).(pulumi.StringArrayOutput)
}

// IP ranges allowed to be included from peering.
func (o SpokeLinkedVpcNetworkOutput) IncludeExportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpokeLinkedVpcNetwork) []string { return v.IncludeExportRanges }).(pulumi.StringArrayOutput)
}

// The URI of the VPC network resource.
func (o SpokeLinkedVpcNetworkOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v SpokeLinkedVpcNetwork) string { return v.Uri }).(pulumi.StringOutput)
}

type SpokeLinkedVpcNetworkPtrOutput struct{ *pulumi.OutputState }

func (SpokeLinkedVpcNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedVpcNetwork)(nil)).Elem()
}

func (o SpokeLinkedVpcNetworkPtrOutput) ToSpokeLinkedVpcNetworkPtrOutput() SpokeLinkedVpcNetworkPtrOutput {
	return o
}

func (o SpokeLinkedVpcNetworkPtrOutput) ToSpokeLinkedVpcNetworkPtrOutputWithContext(ctx context.Context) SpokeLinkedVpcNetworkPtrOutput {
	return o
}

func (o SpokeLinkedVpcNetworkPtrOutput) Elem() SpokeLinkedVpcNetworkOutput {
	return o.ApplyT(func(v *SpokeLinkedVpcNetwork) SpokeLinkedVpcNetwork {
		if v != nil {
			return *v
		}
		var ret SpokeLinkedVpcNetwork
		return ret
	}).(SpokeLinkedVpcNetworkOutput)
}

// IP ranges encompassing the subnets to be excluded from peering.
func (o SpokeLinkedVpcNetworkPtrOutput) ExcludeExportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedVpcNetwork) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeExportRanges
	}).(pulumi.StringArrayOutput)
}

// IP ranges allowed to be included from peering.
func (o SpokeLinkedVpcNetworkPtrOutput) IncludeExportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedVpcNetwork) []string {
		if v == nil {
			return nil
		}
		return v.IncludeExportRanges
	}).(pulumi.StringArrayOutput)
}

// The URI of the VPC network resource.
func (o SpokeLinkedVpcNetworkPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpokeLinkedVpcNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type SpokeLinkedVpnTunnels struct {
	// IP ranges allowed to be included during import from hub (does not control transit connectivity).
	// The only allowed value for now is "ALL_IPV4_RANGES".
	IncludeImportRanges []string `pulumi:"includeImportRanges"`
	// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
	SiteToSiteDataTransfer bool `pulumi:"siteToSiteDataTransfer"`
	// The URIs of linked VPN tunnel resources.
	Uris []string `pulumi:"uris"`
}

// SpokeLinkedVpnTunnelsInput is an input type that accepts SpokeLinkedVpnTunnelsArgs and SpokeLinkedVpnTunnelsOutput values.
// You can construct a concrete instance of `SpokeLinkedVpnTunnelsInput` via:
//
//	SpokeLinkedVpnTunnelsArgs{...}
type SpokeLinkedVpnTunnelsInput interface {
	pulumi.Input

	ToSpokeLinkedVpnTunnelsOutput() SpokeLinkedVpnTunnelsOutput
	ToSpokeLinkedVpnTunnelsOutputWithContext(context.Context) SpokeLinkedVpnTunnelsOutput
}

type SpokeLinkedVpnTunnelsArgs struct {
	// IP ranges allowed to be included during import from hub (does not control transit connectivity).
	// The only allowed value for now is "ALL_IPV4_RANGES".
	IncludeImportRanges pulumi.StringArrayInput `pulumi:"includeImportRanges"`
	// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
	SiteToSiteDataTransfer pulumi.BoolInput `pulumi:"siteToSiteDataTransfer"`
	// The URIs of linked VPN tunnel resources.
	Uris pulumi.StringArrayInput `pulumi:"uris"`
}

func (SpokeLinkedVpnTunnelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedVpnTunnels)(nil)).Elem()
}

func (i SpokeLinkedVpnTunnelsArgs) ToSpokeLinkedVpnTunnelsOutput() SpokeLinkedVpnTunnelsOutput {
	return i.ToSpokeLinkedVpnTunnelsOutputWithContext(context.Background())
}

func (i SpokeLinkedVpnTunnelsArgs) ToSpokeLinkedVpnTunnelsOutputWithContext(ctx context.Context) SpokeLinkedVpnTunnelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedVpnTunnelsOutput)
}

func (i SpokeLinkedVpnTunnelsArgs) ToSpokeLinkedVpnTunnelsPtrOutput() SpokeLinkedVpnTunnelsPtrOutput {
	return i.ToSpokeLinkedVpnTunnelsPtrOutputWithContext(context.Background())
}

func (i SpokeLinkedVpnTunnelsArgs) ToSpokeLinkedVpnTunnelsPtrOutputWithContext(ctx context.Context) SpokeLinkedVpnTunnelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedVpnTunnelsOutput).ToSpokeLinkedVpnTunnelsPtrOutputWithContext(ctx)
}

// SpokeLinkedVpnTunnelsPtrInput is an input type that accepts SpokeLinkedVpnTunnelsArgs, SpokeLinkedVpnTunnelsPtr and SpokeLinkedVpnTunnelsPtrOutput values.
// You can construct a concrete instance of `SpokeLinkedVpnTunnelsPtrInput` via:
//
//	        SpokeLinkedVpnTunnelsArgs{...}
//
//	or:
//
//	        nil
type SpokeLinkedVpnTunnelsPtrInput interface {
	pulumi.Input

	ToSpokeLinkedVpnTunnelsPtrOutput() SpokeLinkedVpnTunnelsPtrOutput
	ToSpokeLinkedVpnTunnelsPtrOutputWithContext(context.Context) SpokeLinkedVpnTunnelsPtrOutput
}

type spokeLinkedVpnTunnelsPtrType SpokeLinkedVpnTunnelsArgs

func SpokeLinkedVpnTunnelsPtr(v *SpokeLinkedVpnTunnelsArgs) SpokeLinkedVpnTunnelsPtrInput {
	return (*spokeLinkedVpnTunnelsPtrType)(v)
}

func (*spokeLinkedVpnTunnelsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedVpnTunnels)(nil)).Elem()
}

func (i *spokeLinkedVpnTunnelsPtrType) ToSpokeLinkedVpnTunnelsPtrOutput() SpokeLinkedVpnTunnelsPtrOutput {
	return i.ToSpokeLinkedVpnTunnelsPtrOutputWithContext(context.Background())
}

func (i *spokeLinkedVpnTunnelsPtrType) ToSpokeLinkedVpnTunnelsPtrOutputWithContext(ctx context.Context) SpokeLinkedVpnTunnelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpokeLinkedVpnTunnelsPtrOutput)
}

type SpokeLinkedVpnTunnelsOutput struct{ *pulumi.OutputState }

func (SpokeLinkedVpnTunnelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpokeLinkedVpnTunnels)(nil)).Elem()
}

func (o SpokeLinkedVpnTunnelsOutput) ToSpokeLinkedVpnTunnelsOutput() SpokeLinkedVpnTunnelsOutput {
	return o
}

func (o SpokeLinkedVpnTunnelsOutput) ToSpokeLinkedVpnTunnelsOutputWithContext(ctx context.Context) SpokeLinkedVpnTunnelsOutput {
	return o
}

func (o SpokeLinkedVpnTunnelsOutput) ToSpokeLinkedVpnTunnelsPtrOutput() SpokeLinkedVpnTunnelsPtrOutput {
	return o.ToSpokeLinkedVpnTunnelsPtrOutputWithContext(context.Background())
}

func (o SpokeLinkedVpnTunnelsOutput) ToSpokeLinkedVpnTunnelsPtrOutputWithContext(ctx context.Context) SpokeLinkedVpnTunnelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpokeLinkedVpnTunnels) *SpokeLinkedVpnTunnels {
		return &v
	}).(SpokeLinkedVpnTunnelsPtrOutput)
}

// IP ranges allowed to be included during import from hub (does not control transit connectivity).
// The only allowed value for now is "ALL_IPV4_RANGES".
func (o SpokeLinkedVpnTunnelsOutput) IncludeImportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpokeLinkedVpnTunnels) []string { return v.IncludeImportRanges }).(pulumi.StringArrayOutput)
}

// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
func (o SpokeLinkedVpnTunnelsOutput) SiteToSiteDataTransfer() pulumi.BoolOutput {
	return o.ApplyT(func(v SpokeLinkedVpnTunnels) bool { return v.SiteToSiteDataTransfer }).(pulumi.BoolOutput)
}

// The URIs of linked VPN tunnel resources.
func (o SpokeLinkedVpnTunnelsOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpokeLinkedVpnTunnels) []string { return v.Uris }).(pulumi.StringArrayOutput)
}

type SpokeLinkedVpnTunnelsPtrOutput struct{ *pulumi.OutputState }

func (SpokeLinkedVpnTunnelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpokeLinkedVpnTunnels)(nil)).Elem()
}

func (o SpokeLinkedVpnTunnelsPtrOutput) ToSpokeLinkedVpnTunnelsPtrOutput() SpokeLinkedVpnTunnelsPtrOutput {
	return o
}

func (o SpokeLinkedVpnTunnelsPtrOutput) ToSpokeLinkedVpnTunnelsPtrOutputWithContext(ctx context.Context) SpokeLinkedVpnTunnelsPtrOutput {
	return o
}

func (o SpokeLinkedVpnTunnelsPtrOutput) Elem() SpokeLinkedVpnTunnelsOutput {
	return o.ApplyT(func(v *SpokeLinkedVpnTunnels) SpokeLinkedVpnTunnels {
		if v != nil {
			return *v
		}
		var ret SpokeLinkedVpnTunnels
		return ret
	}).(SpokeLinkedVpnTunnelsOutput)
}

// IP ranges allowed to be included during import from hub (does not control transit connectivity).
// The only allowed value for now is "ALL_IPV4_RANGES".
func (o SpokeLinkedVpnTunnelsPtrOutput) IncludeImportRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedVpnTunnels) []string {
		if v == nil {
			return nil
		}
		return v.IncludeImportRanges
	}).(pulumi.StringArrayOutput)
}

// A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
func (o SpokeLinkedVpnTunnelsPtrOutput) SiteToSiteDataTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpokeLinkedVpnTunnels) *bool {
		if v == nil {
			return nil
		}
		return &v.SiteToSiteDataTransfer
	}).(pulumi.BoolPtrOutput)
}

// The URIs of linked VPN tunnel resources.
func (o SpokeLinkedVpnTunnelsPtrOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpokeLinkedVpnTunnels) []string {
		if v == nil {
			return nil
		}
		return v.Uris
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupAutoAcceptInput)(nil)).Elem(), GroupAutoAcceptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupAutoAcceptPtrInput)(nil)).Elem(), GroupAutoAcceptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HubRoutingVpcInput)(nil)).Elem(), HubRoutingVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HubRoutingVpcArrayInput)(nil)).Elem(), HubRoutingVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternalRangeMigrationInput)(nil)).Elem(), InternalRangeMigrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternalRangeMigrationPtrInput)(nil)).Elem(), InternalRangeMigrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBasedRouteFilterInput)(nil)).Elem(), PolicyBasedRouteFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBasedRouteFilterPtrInput)(nil)).Elem(), PolicyBasedRouteFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBasedRouteInterconnectAttachmentInput)(nil)).Elem(), PolicyBasedRouteInterconnectAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBasedRouteInterconnectAttachmentPtrInput)(nil)).Elem(), PolicyBasedRouteInterconnectAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBasedRouteVirtualMachineInput)(nil)).Elem(), PolicyBasedRouteVirtualMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBasedRouteVirtualMachinePtrInput)(nil)).Elem(), PolicyBasedRouteVirtualMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBasedRouteWarningInput)(nil)).Elem(), PolicyBasedRouteWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBasedRouteWarningArrayInput)(nil)).Elem(), PolicyBasedRouteWarningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyPscConfigInput)(nil)).Elem(), ServiceConnectionPolicyPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyPscConfigPtrInput)(nil)).Elem(), ServiceConnectionPolicyPscConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyPscConnectionInput)(nil)).Elem(), ServiceConnectionPolicyPscConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyPscConnectionArrayInput)(nil)).Elem(), ServiceConnectionPolicyPscConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyPscConnectionErrorInput)(nil)).Elem(), ServiceConnectionPolicyPscConnectionErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyPscConnectionErrorPtrInput)(nil)).Elem(), ServiceConnectionPolicyPscConnectionErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyPscConnectionErrorInfoInput)(nil)).Elem(), ServiceConnectionPolicyPscConnectionErrorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyPscConnectionErrorInfoPtrInput)(nil)).Elem(), ServiceConnectionPolicyPscConnectionErrorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedInterconnectAttachmentsInput)(nil)).Elem(), SpokeLinkedInterconnectAttachmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedInterconnectAttachmentsPtrInput)(nil)).Elem(), SpokeLinkedInterconnectAttachmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedProducerVpcNetworkInput)(nil)).Elem(), SpokeLinkedProducerVpcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedProducerVpcNetworkPtrInput)(nil)).Elem(), SpokeLinkedProducerVpcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedRouterApplianceInstancesInput)(nil)).Elem(), SpokeLinkedRouterApplianceInstancesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedRouterApplianceInstancesPtrInput)(nil)).Elem(), SpokeLinkedRouterApplianceInstancesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedRouterApplianceInstancesInstanceInput)(nil)).Elem(), SpokeLinkedRouterApplianceInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedRouterApplianceInstancesInstanceArrayInput)(nil)).Elem(), SpokeLinkedRouterApplianceInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedVpcNetworkInput)(nil)).Elem(), SpokeLinkedVpcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedVpcNetworkPtrInput)(nil)).Elem(), SpokeLinkedVpcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedVpnTunnelsInput)(nil)).Elem(), SpokeLinkedVpnTunnelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpokeLinkedVpnTunnelsPtrInput)(nil)).Elem(), SpokeLinkedVpnTunnelsArgs{})
	pulumi.RegisterOutputType(GroupAutoAcceptOutput{})
	pulumi.RegisterOutputType(GroupAutoAcceptPtrOutput{})
	pulumi.RegisterOutputType(HubRoutingVpcOutput{})
	pulumi.RegisterOutputType(HubRoutingVpcArrayOutput{})
	pulumi.RegisterOutputType(InternalRangeMigrationOutput{})
	pulumi.RegisterOutputType(InternalRangeMigrationPtrOutput{})
	pulumi.RegisterOutputType(PolicyBasedRouteFilterOutput{})
	pulumi.RegisterOutputType(PolicyBasedRouteFilterPtrOutput{})
	pulumi.RegisterOutputType(PolicyBasedRouteInterconnectAttachmentOutput{})
	pulumi.RegisterOutputType(PolicyBasedRouteInterconnectAttachmentPtrOutput{})
	pulumi.RegisterOutputType(PolicyBasedRouteVirtualMachineOutput{})
	pulumi.RegisterOutputType(PolicyBasedRouteVirtualMachinePtrOutput{})
	pulumi.RegisterOutputType(PolicyBasedRouteWarningOutput{})
	pulumi.RegisterOutputType(PolicyBasedRouteWarningArrayOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyPscConfigOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyPscConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyPscConnectionOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyPscConnectionArrayOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyPscConnectionErrorOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyPscConnectionErrorPtrOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyPscConnectionErrorInfoOutput{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyPscConnectionErrorInfoPtrOutput{})
	pulumi.RegisterOutputType(SpokeLinkedInterconnectAttachmentsOutput{})
	pulumi.RegisterOutputType(SpokeLinkedInterconnectAttachmentsPtrOutput{})
	pulumi.RegisterOutputType(SpokeLinkedProducerVpcNetworkOutput{})
	pulumi.RegisterOutputType(SpokeLinkedProducerVpcNetworkPtrOutput{})
	pulumi.RegisterOutputType(SpokeLinkedRouterApplianceInstancesOutput{})
	pulumi.RegisterOutputType(SpokeLinkedRouterApplianceInstancesPtrOutput{})
	pulumi.RegisterOutputType(SpokeLinkedRouterApplianceInstancesInstanceOutput{})
	pulumi.RegisterOutputType(SpokeLinkedRouterApplianceInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(SpokeLinkedVpcNetworkOutput{})
	pulumi.RegisterOutputType(SpokeLinkedVpcNetworkPtrOutput{})
	pulumi.RegisterOutputType(SpokeLinkedVpnTunnelsOutput{})
	pulumi.RegisterOutputType(SpokeLinkedVpnTunnelsPtrOutput{})
}
