// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudidentity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to look up the resource name of a Cloud Identity Group by its [EntityKey](https://cloud.google.com/identity/docs/reference/rest/v1/EntityKey), i.e. the group's email.
//
// https://cloud.google.com/identity/docs/concepts/overview#groups
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/cloudidentity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudidentity.GetGroupLookup(ctx, &cloudidentity.GetGroupLookupArgs{
//				GroupKey: cloudidentity.GetGroupLookupGroupKey{
//					Id: "my-group@example.com",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroupLookup(ctx *pulumi.Context, args *GetGroupLookupArgs, opts ...pulumi.InvokeOption) (*GetGroupLookupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGroupLookupResult
	err := ctx.Invoke("gcp:cloudidentity/getGroupLookup:getGroupLookup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroupLookup.
type GetGroupLookupArgs struct {
	// The EntityKey of the Group to lookup. A unique identifier for an entity in the Cloud Identity Groups API.
	// An entity can represent either a group with an optional namespace or a user without a namespace.
	// The combination of id and namespace must be unique; however, the same id can be used with different namespaces. Structure is documented below.
	GroupKey GetGroupLookupGroupKey `pulumi:"groupKey"`
}

// A collection of values returned by getGroupLookup.
type GetGroupLookupResult struct {
	GroupKey GetGroupLookupGroupKey `pulumi:"groupKey"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Resource name of the Group in the format: groups/{group_id}, where `groupId` is the unique ID assigned to the Group.
	Name string `pulumi:"name"`
}

func GetGroupLookupOutput(ctx *pulumi.Context, args GetGroupLookupOutputArgs, opts ...pulumi.InvokeOption) GetGroupLookupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupLookupResult, error) {
			args := v.(GetGroupLookupArgs)
			r, err := GetGroupLookup(ctx, &args, opts...)
			var s GetGroupLookupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGroupLookupResultOutput)
}

// A collection of arguments for invoking getGroupLookup.
type GetGroupLookupOutputArgs struct {
	// The EntityKey of the Group to lookup. A unique identifier for an entity in the Cloud Identity Groups API.
	// An entity can represent either a group with an optional namespace or a user without a namespace.
	// The combination of id and namespace must be unique; however, the same id can be used with different namespaces. Structure is documented below.
	GroupKey GetGroupLookupGroupKeyInput `pulumi:"groupKey"`
}

func (GetGroupLookupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupLookupArgs)(nil)).Elem()
}

// A collection of values returned by getGroupLookup.
type GetGroupLookupResultOutput struct{ *pulumi.OutputState }

func (GetGroupLookupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupLookupResult)(nil)).Elem()
}

func (o GetGroupLookupResultOutput) ToGetGroupLookupResultOutput() GetGroupLookupResultOutput {
	return o
}

func (o GetGroupLookupResultOutput) ToGetGroupLookupResultOutputWithContext(ctx context.Context) GetGroupLookupResultOutput {
	return o
}

func (o GetGroupLookupResultOutput) GroupKey() GetGroupLookupGroupKeyOutput {
	return o.ApplyT(func(v GetGroupLookupResult) GetGroupLookupGroupKey { return v.GroupKey }).(GetGroupLookupGroupKeyOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGroupLookupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupLookupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name of the Group in the format: groups/{group_id}, where `groupId` is the unique ID assigned to the Group.
func (o GetGroupLookupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupLookupResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupLookupResultOutput{})
}
