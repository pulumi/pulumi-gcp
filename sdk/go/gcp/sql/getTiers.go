// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get all available machine types (tiers) for a project, for example, db-custom-1-3840. For more information see the
// [official documentation](https://cloud.google.com/sql/)
// and
// [API](https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1beta4/tiers/list).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/sql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tiers, err := sql.GetTiers(ctx, &sql.GetTiersArgs{
//				Project: pulumi.StringRef("sample-project"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			allAvailableTiers := "TODO: For expression"
//			ctx.Export("avaialbleTiers", allAvailableTiers)
//			return nil
//		})
//	}
//
// ```
func GetTiers(ctx *pulumi.Context, args *GetTiersArgs, opts ...pulumi.InvokeOption) (*GetTiersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTiersResult
	err := ctx.Invoke("gcp:sql/getTiers:getTiers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTiers.
type GetTiersArgs struct {
	// The Project ID for which to list tiers. If `project` is not provided, the project defined within the default provider configuration is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getTiers.
type GetTiersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Project string `pulumi:"project"`
	// A list of all available machine types (tiers) for project. Each contains:
	Tiers []GetTiersTier `pulumi:"tiers"`
}

func GetTiersOutput(ctx *pulumi.Context, args GetTiersOutputArgs, opts ...pulumi.InvokeOption) GetTiersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTiersResult, error) {
			args := v.(GetTiersArgs)
			r, err := GetTiers(ctx, &args, opts...)
			var s GetTiersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTiersResultOutput)
}

// A collection of arguments for invoking getTiers.
type GetTiersOutputArgs struct {
	// The Project ID for which to list tiers. If `project` is not provided, the project defined within the default provider configuration is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetTiersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTiersArgs)(nil)).Elem()
}

// A collection of values returned by getTiers.
type GetTiersResultOutput struct{ *pulumi.OutputState }

func (GetTiersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTiersResult)(nil)).Elem()
}

func (o GetTiersResultOutput) ToGetTiersResultOutput() GetTiersResultOutput {
	return o
}

func (o GetTiersResultOutput) ToGetTiersResultOutputWithContext(ctx context.Context) GetTiersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTiersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTiersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTiersResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetTiersResult) string { return v.Project }).(pulumi.StringOutput)
}

// A list of all available machine types (tiers) for project. Each contains:
func (o GetTiersResultOutput) Tiers() GetTiersTierArrayOutput {
	return o.ApplyT(func(v GetTiersResult) []GetTiersTier { return v.Tiers }).(GetTiersTierArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTiersResultOutput{})
}
