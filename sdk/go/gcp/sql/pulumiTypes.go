// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DatabaseInstanceIpAddress struct {
	IpAddress    *string `pulumi:"ipAddress"`
	TimeToRetire *string `pulumi:"timeToRetire"`
	Type         *string `pulumi:"type"`
}

// DatabaseInstanceIpAddressInput is an input type that accepts DatabaseInstanceIpAddressArgs and DatabaseInstanceIpAddressOutput values.
// You can construct a concrete instance of `DatabaseInstanceIpAddressInput` via:
//
// 		 DatabaseInstanceIpAddressArgs{...}
//
type DatabaseInstanceIpAddressInput interface {
	pulumi.Input

	ToDatabaseInstanceIpAddressOutput() DatabaseInstanceIpAddressOutput
	ToDatabaseInstanceIpAddressOutputWithContext(context.Context) DatabaseInstanceIpAddressOutput
}

type DatabaseInstanceIpAddressArgs struct {
	IpAddress    pulumi.StringPtrInput `pulumi:"ipAddress"`
	TimeToRetire pulumi.StringPtrInput `pulumi:"timeToRetire"`
	Type         pulumi.StringPtrInput `pulumi:"type"`
}

func (DatabaseInstanceIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceIpAddress)(nil)).Elem()
}

func (i DatabaseInstanceIpAddressArgs) ToDatabaseInstanceIpAddressOutput() DatabaseInstanceIpAddressOutput {
	return i.ToDatabaseInstanceIpAddressOutputWithContext(context.Background())
}

func (i DatabaseInstanceIpAddressArgs) ToDatabaseInstanceIpAddressOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceIpAddressOutput)
}

// DatabaseInstanceIpAddressArrayInput is an input type that accepts DatabaseInstanceIpAddressArray and DatabaseInstanceIpAddressArrayOutput values.
// You can construct a concrete instance of `DatabaseInstanceIpAddressArrayInput` via:
//
// 		 DatabaseInstanceIpAddressArray{ DatabaseInstanceIpAddressArgs{...} }
//
type DatabaseInstanceIpAddressArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceIpAddressArrayOutput() DatabaseInstanceIpAddressArrayOutput
	ToDatabaseInstanceIpAddressArrayOutputWithContext(context.Context) DatabaseInstanceIpAddressArrayOutput
}

type DatabaseInstanceIpAddressArray []DatabaseInstanceIpAddressInput

func (DatabaseInstanceIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceIpAddress)(nil)).Elem()
}

func (i DatabaseInstanceIpAddressArray) ToDatabaseInstanceIpAddressArrayOutput() DatabaseInstanceIpAddressArrayOutput {
	return i.ToDatabaseInstanceIpAddressArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceIpAddressArray) ToDatabaseInstanceIpAddressArrayOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceIpAddressArrayOutput)
}

type DatabaseInstanceIpAddressOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceIpAddress)(nil)).Elem()
}

func (o DatabaseInstanceIpAddressOutput) ToDatabaseInstanceIpAddressOutput() DatabaseInstanceIpAddressOutput {
	return o
}

func (o DatabaseInstanceIpAddressOutput) ToDatabaseInstanceIpAddressOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressOutput {
	return o
}

func (o DatabaseInstanceIpAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceIpAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceIpAddressOutput) TimeToRetire() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceIpAddress) *string { return v.TimeToRetire }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceIpAddressOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceIpAddress) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceIpAddressArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceIpAddress)(nil)).Elem()
}

func (o DatabaseInstanceIpAddressArrayOutput) ToDatabaseInstanceIpAddressArrayOutput() DatabaseInstanceIpAddressArrayOutput {
	return o
}

func (o DatabaseInstanceIpAddressArrayOutput) ToDatabaseInstanceIpAddressArrayOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressArrayOutput {
	return o
}

func (o DatabaseInstanceIpAddressArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceIpAddress {
		return vs[0].([]DatabaseInstanceIpAddress)[vs[1].(int)]
	}).(DatabaseInstanceIpAddressOutput)
}

type DatabaseInstanceReplicaConfiguration struct {
	// PEM representation of the trusted CA's x509
	// certificate.
	CaCertificate *string `pulumi:"caCertificate"`
	// PEM representation of the slave's x509
	// certificate.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// PEM representation of the slave's private key. The
	// corresponding public key in encoded in the `clientCertificate`.
	ClientKey *string `pulumi:"clientKey"`
	// The number of seconds
	// between connect retries.
	ConnectRetryInterval *int `pulumi:"connectRetryInterval"`
	// Path to a SQL file in GCS from which slave
	// instances are created. Format is `gs://bucket/filename`.
	DumpFilePath *string `pulumi:"dumpFilePath"`
	// Specifies if the replica is the failover target.
	// If the field is set to true the replica will be designated as a failover replica.
	// If the master instance fails, the replica instance will be promoted as
	// the new master instance.
	FailoverTarget *bool `pulumi:"failoverTarget"`
	// Time in ms between replication
	// heartbeats.
	MasterHeartbeatPeriod *int `pulumi:"masterHeartbeatPeriod"`
	// Password for the replication connection.
	Password  *string `pulumi:"password"`
	SslCipher *string `pulumi:"sslCipher"`
	// Username for replication connection.
	Username *string `pulumi:"username"`
	// True if the master's common name
	// value is checked during the SSL handshake.
	VerifyServerCertificate *bool `pulumi:"verifyServerCertificate"`
}

// DatabaseInstanceReplicaConfigurationInput is an input type that accepts DatabaseInstanceReplicaConfigurationArgs and DatabaseInstanceReplicaConfigurationOutput values.
// You can construct a concrete instance of `DatabaseInstanceReplicaConfigurationInput` via:
//
// 		 DatabaseInstanceReplicaConfigurationArgs{...}
//
type DatabaseInstanceReplicaConfigurationInput interface {
	pulumi.Input

	ToDatabaseInstanceReplicaConfigurationOutput() DatabaseInstanceReplicaConfigurationOutput
	ToDatabaseInstanceReplicaConfigurationOutputWithContext(context.Context) DatabaseInstanceReplicaConfigurationOutput
}

type DatabaseInstanceReplicaConfigurationArgs struct {
	// PEM representation of the trusted CA's x509
	// certificate.
	CaCertificate pulumi.StringPtrInput `pulumi:"caCertificate"`
	// PEM representation of the slave's x509
	// certificate.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// PEM representation of the slave's private key. The
	// corresponding public key in encoded in the `clientCertificate`.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// The number of seconds
	// between connect retries.
	ConnectRetryInterval pulumi.IntPtrInput `pulumi:"connectRetryInterval"`
	// Path to a SQL file in GCS from which slave
	// instances are created. Format is `gs://bucket/filename`.
	DumpFilePath pulumi.StringPtrInput `pulumi:"dumpFilePath"`
	// Specifies if the replica is the failover target.
	// If the field is set to true the replica will be designated as a failover replica.
	// If the master instance fails, the replica instance will be promoted as
	// the new master instance.
	FailoverTarget pulumi.BoolPtrInput `pulumi:"failoverTarget"`
	// Time in ms between replication
	// heartbeats.
	MasterHeartbeatPeriod pulumi.IntPtrInput `pulumi:"masterHeartbeatPeriod"`
	// Password for the replication connection.
	Password  pulumi.StringPtrInput `pulumi:"password"`
	SslCipher pulumi.StringPtrInput `pulumi:"sslCipher"`
	// Username for replication connection.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// True if the master's common name
	// value is checked during the SSL handshake.
	VerifyServerCertificate pulumi.BoolPtrInput `pulumi:"verifyServerCertificate"`
}

func (DatabaseInstanceReplicaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReplicaConfiguration)(nil)).Elem()
}

func (i DatabaseInstanceReplicaConfigurationArgs) ToDatabaseInstanceReplicaConfigurationOutput() DatabaseInstanceReplicaConfigurationOutput {
	return i.ToDatabaseInstanceReplicaConfigurationOutputWithContext(context.Background())
}

func (i DatabaseInstanceReplicaConfigurationArgs) ToDatabaseInstanceReplicaConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationOutput)
}

func (i DatabaseInstanceReplicaConfigurationArgs) ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput {
	return i.ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceReplicaConfigurationArgs) ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationOutput).ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx)
}

// DatabaseInstanceReplicaConfigurationPtrInput is an input type that accepts DatabaseInstanceReplicaConfigurationArgs, DatabaseInstanceReplicaConfigurationPtr and DatabaseInstanceReplicaConfigurationPtrOutput values.
// You can construct a concrete instance of `DatabaseInstanceReplicaConfigurationPtrInput` via:
//
// 		 DatabaseInstanceReplicaConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type DatabaseInstanceReplicaConfigurationPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput
	ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(context.Context) DatabaseInstanceReplicaConfigurationPtrOutput
}

type databaseInstanceReplicaConfigurationPtrType DatabaseInstanceReplicaConfigurationArgs

func DatabaseInstanceReplicaConfigurationPtr(v *DatabaseInstanceReplicaConfigurationArgs) DatabaseInstanceReplicaConfigurationPtrInput {
	return (*databaseInstanceReplicaConfigurationPtrType)(v)
}

func (*databaseInstanceReplicaConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceReplicaConfiguration)(nil)).Elem()
}

func (i *databaseInstanceReplicaConfigurationPtrType) ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput {
	return i.ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceReplicaConfigurationPtrType) ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationPtrOutput)
}

type DatabaseInstanceReplicaConfigurationOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReplicaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReplicaConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceReplicaConfigurationOutput) ToDatabaseInstanceReplicaConfigurationOutput() DatabaseInstanceReplicaConfigurationOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationOutput) ToDatabaseInstanceReplicaConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationOutput) ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput {
	return o.ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceReplicaConfigurationOutput) ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *DatabaseInstanceReplicaConfiguration {
		return &v
	}).(DatabaseInstanceReplicaConfigurationPtrOutput)
}

// PEM representation of the trusted CA's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's private key. The
// corresponding public key in encoded in the `clientCertificate`.
func (o DatabaseInstanceReplicaConfigurationOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// The number of seconds
// between connect retries.
func (o DatabaseInstanceReplicaConfigurationOutput) ConnectRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *int { return v.ConnectRetryInterval }).(pulumi.IntPtrOutput)
}

// Path to a SQL file in GCS from which slave
// instances are created. Format is `gs://bucket/filename`.
func (o DatabaseInstanceReplicaConfigurationOutput) DumpFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.DumpFilePath }).(pulumi.StringPtrOutput)
}

// Specifies if the replica is the failover target.
// If the field is set to true the replica will be designated as a failover replica.
// If the master instance fails, the replica instance will be promoted as
// the new master instance.
func (o DatabaseInstanceReplicaConfigurationOutput) FailoverTarget() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *bool { return v.FailoverTarget }).(pulumi.BoolPtrOutput)
}

// Time in ms between replication
// heartbeats.
func (o DatabaseInstanceReplicaConfigurationOutput) MasterHeartbeatPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *int { return v.MasterHeartbeatPeriod }).(pulumi.IntPtrOutput)
}

// Password for the replication connection.
func (o DatabaseInstanceReplicaConfigurationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceReplicaConfigurationOutput) SslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.SslCipher }).(pulumi.StringPtrOutput)
}

// Username for replication connection.
func (o DatabaseInstanceReplicaConfigurationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// True if the master's common name
// value is checked during the SSL handshake.
func (o DatabaseInstanceReplicaConfigurationOutput) VerifyServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *bool { return v.VerifyServerCertificate }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceReplicaConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReplicaConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceReplicaConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceReplicaConfigurationPtrOutput) ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationPtrOutput) ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationPtrOutput) Elem() DatabaseInstanceReplicaConfigurationOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) DatabaseInstanceReplicaConfiguration { return *v }).(DatabaseInstanceReplicaConfigurationOutput)
}

// PEM representation of the trusted CA's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's private key. The
// corresponding public key in encoded in the `clientCertificate`.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

// The number of seconds
// between connect retries.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) ConnectRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ConnectRetryInterval
	}).(pulumi.IntPtrOutput)
}

// Path to a SQL file in GCS from which slave
// instances are created. Format is `gs://bucket/filename`.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) DumpFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DumpFilePath
	}).(pulumi.StringPtrOutput)
}

// Specifies if the replica is the failover target.
// If the field is set to true the replica will be designated as a failover replica.
// If the master instance fails, the replica instance will be promoted as
// the new master instance.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) FailoverTarget() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.FailoverTarget
	}).(pulumi.BoolPtrOutput)
}

// Time in ms between replication
// heartbeats.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) MasterHeartbeatPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MasterHeartbeatPeriod
	}).(pulumi.IntPtrOutput)
}

// Password for the replication connection.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceReplicaConfigurationPtrOutput) SslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SslCipher
	}).(pulumi.StringPtrOutput)
}

// Username for replication connection.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// True if the master's common name
// value is checked during the SSL handshake.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) VerifyServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.VerifyServerCertificate
	}).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceServerCaCert struct {
	Cert       *string `pulumi:"cert"`
	CommonName *string `pulumi:"commonName"`
	CreateTime *string `pulumi:"createTime"`
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime  *string `pulumi:"expirationTime"`
	Sha1Fingerprint *string `pulumi:"sha1Fingerprint"`
}

// DatabaseInstanceServerCaCertInput is an input type that accepts DatabaseInstanceServerCaCertArgs and DatabaseInstanceServerCaCertOutput values.
// You can construct a concrete instance of `DatabaseInstanceServerCaCertInput` via:
//
// 		 DatabaseInstanceServerCaCertArgs{...}
//
type DatabaseInstanceServerCaCertInput interface {
	pulumi.Input

	ToDatabaseInstanceServerCaCertOutput() DatabaseInstanceServerCaCertOutput
	ToDatabaseInstanceServerCaCertOutputWithContext(context.Context) DatabaseInstanceServerCaCertOutput
}

type DatabaseInstanceServerCaCertArgs struct {
	Cert       pulumi.StringPtrInput `pulumi:"cert"`
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime  pulumi.StringPtrInput `pulumi:"expirationTime"`
	Sha1Fingerprint pulumi.StringPtrInput `pulumi:"sha1Fingerprint"`
}

func (DatabaseInstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceServerCaCert)(nil)).Elem()
}

func (i DatabaseInstanceServerCaCertArgs) ToDatabaseInstanceServerCaCertOutput() DatabaseInstanceServerCaCertOutput {
	return i.ToDatabaseInstanceServerCaCertOutputWithContext(context.Background())
}

func (i DatabaseInstanceServerCaCertArgs) ToDatabaseInstanceServerCaCertOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceServerCaCertOutput)
}

func (i DatabaseInstanceServerCaCertArgs) ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput {
	return i.ToDatabaseInstanceServerCaCertPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceServerCaCertArgs) ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceServerCaCertOutput).ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx)
}

// DatabaseInstanceServerCaCertPtrInput is an input type that accepts DatabaseInstanceServerCaCertArgs, DatabaseInstanceServerCaCertPtr and DatabaseInstanceServerCaCertPtrOutput values.
// You can construct a concrete instance of `DatabaseInstanceServerCaCertPtrInput` via:
//
// 		 DatabaseInstanceServerCaCertArgs{...}
//
//  or:
//
// 		 nil
//
type DatabaseInstanceServerCaCertPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput
	ToDatabaseInstanceServerCaCertPtrOutputWithContext(context.Context) DatabaseInstanceServerCaCertPtrOutput
}

type databaseInstanceServerCaCertPtrType DatabaseInstanceServerCaCertArgs

func DatabaseInstanceServerCaCertPtr(v *DatabaseInstanceServerCaCertArgs) DatabaseInstanceServerCaCertPtrInput {
	return (*databaseInstanceServerCaCertPtrType)(v)
}

func (*databaseInstanceServerCaCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceServerCaCert)(nil)).Elem()
}

func (i *databaseInstanceServerCaCertPtrType) ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput {
	return i.ToDatabaseInstanceServerCaCertPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceServerCaCertPtrType) ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceServerCaCertPtrOutput)
}

type DatabaseInstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceServerCaCert)(nil)).Elem()
}

func (o DatabaseInstanceServerCaCertOutput) ToDatabaseInstanceServerCaCertOutput() DatabaseInstanceServerCaCertOutput {
	return o
}

func (o DatabaseInstanceServerCaCertOutput) ToDatabaseInstanceServerCaCertOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertOutput {
	return o
}

func (o DatabaseInstanceServerCaCertOutput) ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput {
	return o.ToDatabaseInstanceServerCaCertPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceServerCaCertOutput) ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) *DatabaseInstanceServerCaCert {
		return &v
	}).(DatabaseInstanceServerCaCertPtrOutput)
}
func (o DatabaseInstanceServerCaCertOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceServerCaCertOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceServerCaCertOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
// formatted date time string indicating when this whitelist expires.
func (o DatabaseInstanceServerCaCertOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) *string { return v.Sha1Fingerprint }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceServerCaCertPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceServerCaCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceServerCaCert)(nil)).Elem()
}

func (o DatabaseInstanceServerCaCertPtrOutput) ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput {
	return o
}

func (o DatabaseInstanceServerCaCertPtrOutput) ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertPtrOutput {
	return o
}

func (o DatabaseInstanceServerCaCertPtrOutput) Elem() DatabaseInstanceServerCaCertOutput {
	return o.ApplyT(func(v *DatabaseInstanceServerCaCert) DatabaseInstanceServerCaCert { return *v }).(DatabaseInstanceServerCaCertOutput)
}

func (o DatabaseInstanceServerCaCertPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceServerCaCert) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceServerCaCertPtrOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceServerCaCert) *string {
		if v == nil {
			return nil
		}
		return v.CommonName
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceServerCaCertPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceServerCaCert) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
// formatted date time string indicating when this whitelist expires.
func (o DatabaseInstanceServerCaCertPtrOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceServerCaCert) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationTime
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceServerCaCertPtrOutput) Sha1Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceServerCaCert) *string {
		if v == nil {
			return nil
		}
		return v.Sha1Fingerprint
	}).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettings struct {
	// This specifies when the instance should be
	// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
	ActivationPolicy *string `pulumi:"activationPolicy"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// A list of Google App Engine (GAE) project names that are allowed to access this instance.
	AuthorizedGaeApplications []string `pulumi:"authorizedGaeApplications"`
	// This specifies whether a PostgreSQL instance
	// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
	AvailabilityType    *string                                      `pulumi:"availabilityType"`
	BackupConfiguration *DatabaseInstanceSettingsBackupConfiguration `pulumi:"backupConfiguration"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Specific to read instances, indicates
	// when crash-safe replication flags are enabled.
	CrashSafeReplication *bool                                  `pulumi:"crashSafeReplication"`
	DatabaseFlags        []DatabaseInstanceSettingsDatabaseFlag `pulumi:"databaseFlags"`
	// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
	DiskAutoresize *bool `pulumi:"diskAutoresize"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
	DiskSize *int `pulumi:"diskSize"`
	// The type of data disk: PD_SSD or PD_HDD.
	DiskType           *string                                     `pulumi:"diskType"`
	IpConfiguration    *DatabaseInstanceSettingsIpConfiguration    `pulumi:"ipConfiguration"`
	LocationPreference *DatabaseInstanceSettingsLocationPreference `pulumi:"locationPreference"`
	MaintenanceWindow  *DatabaseInstanceSettingsMaintenanceWindow  `pulumi:"maintenanceWindow"`
	// Pricing plan for this instance, can only be `PER_USE`.
	PricingPlan *string `pulumi:"pricingPlan"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
	ReplicationType *string `pulumi:"replicationType"`
	// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
	// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
	// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier string `pulumi:"tier"`
	// A set of key/value user label pairs to assign to the instance.
	UserLabels map[string]string `pulumi:"userLabels"`
	Version    *int              `pulumi:"version"`
}

// DatabaseInstanceSettingsInput is an input type that accepts DatabaseInstanceSettingsArgs and DatabaseInstanceSettingsOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsInput` via:
//
// 		 DatabaseInstanceSettingsArgs{...}
//
type DatabaseInstanceSettingsInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsOutput() DatabaseInstanceSettingsOutput
	ToDatabaseInstanceSettingsOutputWithContext(context.Context) DatabaseInstanceSettingsOutput
}

type DatabaseInstanceSettingsArgs struct {
	// This specifies when the instance should be
	// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
	ActivationPolicy pulumi.StringPtrInput `pulumi:"activationPolicy"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// A list of Google App Engine (GAE) project names that are allowed to access this instance.
	AuthorizedGaeApplications pulumi.StringArrayInput `pulumi:"authorizedGaeApplications"`
	// This specifies whether a PostgreSQL instance
	// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
	AvailabilityType    pulumi.StringPtrInput                               `pulumi:"availabilityType"`
	BackupConfiguration DatabaseInstanceSettingsBackupConfigurationPtrInput `pulumi:"backupConfiguration"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Specific to read instances, indicates
	// when crash-safe replication flags are enabled.
	CrashSafeReplication pulumi.BoolPtrInput                            `pulumi:"crashSafeReplication"`
	DatabaseFlags        DatabaseInstanceSettingsDatabaseFlagArrayInput `pulumi:"databaseFlags"`
	// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
	DiskAutoresize pulumi.BoolPtrInput `pulumi:"diskAutoresize"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// The type of data disk: PD_SSD or PD_HDD.
	DiskType           pulumi.StringPtrInput                              `pulumi:"diskType"`
	IpConfiguration    DatabaseInstanceSettingsIpConfigurationPtrInput    `pulumi:"ipConfiguration"`
	LocationPreference DatabaseInstanceSettingsLocationPreferencePtrInput `pulumi:"locationPreference"`
	MaintenanceWindow  DatabaseInstanceSettingsMaintenanceWindowPtrInput  `pulumi:"maintenanceWindow"`
	// Pricing plan for this instance, can only be `PER_USE`.
	PricingPlan pulumi.StringPtrInput `pulumi:"pricingPlan"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
	ReplicationType pulumi.StringPtrInput `pulumi:"replicationType"`
	// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
	// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
	// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier pulumi.StringInput `pulumi:"tier"`
	// A set of key/value user label pairs to assign to the instance.
	UserLabels pulumi.StringMapInput `pulumi:"userLabels"`
	Version    pulumi.IntPtrInput    `pulumi:"version"`
}

func (DatabaseInstanceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettings)(nil)).Elem()
}

func (i DatabaseInstanceSettingsArgs) ToDatabaseInstanceSettingsOutput() DatabaseInstanceSettingsOutput {
	return i.ToDatabaseInstanceSettingsOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsArgs) ToDatabaseInstanceSettingsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsOutput)
}

func (i DatabaseInstanceSettingsArgs) ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput {
	return i.ToDatabaseInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsArgs) ToDatabaseInstanceSettingsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsOutput).ToDatabaseInstanceSettingsPtrOutputWithContext(ctx)
}

// DatabaseInstanceSettingsPtrInput is an input type that accepts DatabaseInstanceSettingsArgs, DatabaseInstanceSettingsPtr and DatabaseInstanceSettingsPtrOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsPtrInput` via:
//
// 		 DatabaseInstanceSettingsArgs{...}
//
//  or:
//
// 		 nil
//
type DatabaseInstanceSettingsPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput
	ToDatabaseInstanceSettingsPtrOutputWithContext(context.Context) DatabaseInstanceSettingsPtrOutput
}

type databaseInstanceSettingsPtrType DatabaseInstanceSettingsArgs

func DatabaseInstanceSettingsPtr(v *DatabaseInstanceSettingsArgs) DatabaseInstanceSettingsPtrInput {
	return (*databaseInstanceSettingsPtrType)(v)
}

func (*databaseInstanceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettings)(nil)).Elem()
}

func (i *databaseInstanceSettingsPtrType) ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput {
	return i.ToDatabaseInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsPtrType) ToDatabaseInstanceSettingsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsPtrOutput)
}

type DatabaseInstanceSettingsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettings)(nil)).Elem()
}

func (o DatabaseInstanceSettingsOutput) ToDatabaseInstanceSettingsOutput() DatabaseInstanceSettingsOutput {
	return o
}

func (o DatabaseInstanceSettingsOutput) ToDatabaseInstanceSettingsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsOutput {
	return o
}

func (o DatabaseInstanceSettingsOutput) ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput {
	return o.ToDatabaseInstanceSettingsPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsOutput) ToDatabaseInstanceSettingsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *DatabaseInstanceSettings {
		return &v
	}).(DatabaseInstanceSettingsPtrOutput)
}

// This specifies when the instance should be
// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
func (o DatabaseInstanceSettingsOutput) ActivationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *string { return v.ActivationPolicy }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// A list of Google App Engine (GAE) project names that are allowed to access this instance.
func (o DatabaseInstanceSettingsOutput) AuthorizedGaeApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) []string { return v.AuthorizedGaeApplications }).(pulumi.StringArrayOutput)
}

// This specifies whether a PostgreSQL instance
// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
func (o DatabaseInstanceSettingsOutput) AvailabilityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *string { return v.AvailabilityType }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsOutput) BackupConfiguration() DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *DatabaseInstanceSettingsBackupConfiguration {
		return v.BackupConfiguration
	}).(DatabaseInstanceSettingsBackupConfigurationPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Specific to read instances, indicates
// when crash-safe replication flags are enabled.
func (o DatabaseInstanceSettingsOutput) CrashSafeReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *bool { return v.CrashSafeReplication }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsOutput) DatabaseFlags() DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) []DatabaseInstanceSettingsDatabaseFlag { return v.DatabaseFlags }).(DatabaseInstanceSettingsDatabaseFlagArrayOutput)
}

// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
func (o DatabaseInstanceSettingsOutput) DiskAutoresize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *bool { return v.DiskAutoresize }).(pulumi.BoolPtrOutput)
}

// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
func (o DatabaseInstanceSettingsOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// The type of data disk: PD_SSD or PD_HDD.
func (o DatabaseInstanceSettingsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsOutput) IpConfiguration() DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *DatabaseInstanceSettingsIpConfiguration { return v.IpConfiguration }).(DatabaseInstanceSettingsIpConfigurationPtrOutput)
}

func (o DatabaseInstanceSettingsOutput) LocationPreference() DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *DatabaseInstanceSettingsLocationPreference {
		return v.LocationPreference
	}).(DatabaseInstanceSettingsLocationPreferencePtrOutput)
}

func (o DatabaseInstanceSettingsOutput) MaintenanceWindow() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *DatabaseInstanceSettingsMaintenanceWindow {
		return v.MaintenanceWindow
	}).(DatabaseInstanceSettingsMaintenanceWindowPtrOutput)
}

// Pricing plan for this instance, can only be `PER_USE`.
func (o DatabaseInstanceSettingsOutput) PricingPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *string { return v.PricingPlan }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
func (o DatabaseInstanceSettingsOutput) ReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *string { return v.ReplicationType }).(pulumi.StringPtrOutput)
}

// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
func (o DatabaseInstanceSettingsOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) string { return v.Tier }).(pulumi.StringOutput)
}

// A set of key/value user label pairs to assign to the instance.
func (o DatabaseInstanceSettingsOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) map[string]string { return v.UserLabels }).(pulumi.StringMapOutput)
}

func (o DatabaseInstanceSettingsOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type DatabaseInstanceSettingsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettings)(nil)).Elem()
}

func (o DatabaseInstanceSettingsPtrOutput) ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsPtrOutput) ToDatabaseInstanceSettingsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsPtrOutput) Elem() DatabaseInstanceSettingsOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) DatabaseInstanceSettings { return *v }).(DatabaseInstanceSettingsOutput)
}

// This specifies when the instance should be
// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
func (o DatabaseInstanceSettingsPtrOutput) ActivationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *string {
		if v == nil {
			return nil
		}
		return v.ActivationPolicy
	}).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// A list of Google App Engine (GAE) project names that are allowed to access this instance.
func (o DatabaseInstanceSettingsPtrOutput) AuthorizedGaeApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedGaeApplications
	}).(pulumi.StringArrayOutput)
}

// This specifies whether a PostgreSQL instance
// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
func (o DatabaseInstanceSettingsPtrOutput) AvailabilityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityType
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) BackupConfiguration() DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *DatabaseInstanceSettingsBackupConfiguration {
		if v == nil {
			return nil
		}
		return v.BackupConfiguration
	}).(DatabaseInstanceSettingsBackupConfigurationPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Specific to read instances, indicates
// when crash-safe replication flags are enabled.
func (o DatabaseInstanceSettingsPtrOutput) CrashSafeReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *bool {
		if v == nil {
			return nil
		}
		return v.CrashSafeReplication
	}).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) DatabaseFlags() DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) []DatabaseInstanceSettingsDatabaseFlag {
		if v == nil {
			return nil
		}
		return v.DatabaseFlags
	}).(DatabaseInstanceSettingsDatabaseFlagArrayOutput)
}

// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
func (o DatabaseInstanceSettingsPtrOutput) DiskAutoresize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *bool {
		if v == nil {
			return nil
		}
		return v.DiskAutoresize
	}).(pulumi.BoolPtrOutput)
}

// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
func (o DatabaseInstanceSettingsPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

// The type of data disk: PD_SSD or PD_HDD.
func (o DatabaseInstanceSettingsPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) IpConfiguration() DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *DatabaseInstanceSettingsIpConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfiguration
	}).(DatabaseInstanceSettingsIpConfigurationPtrOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) LocationPreference() DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *DatabaseInstanceSettingsLocationPreference {
		if v == nil {
			return nil
		}
		return v.LocationPreference
	}).(DatabaseInstanceSettingsLocationPreferencePtrOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) MaintenanceWindow() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *DatabaseInstanceSettingsMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindow
	}).(DatabaseInstanceSettingsMaintenanceWindowPtrOutput)
}

// Pricing plan for this instance, can only be `PER_USE`.
func (o DatabaseInstanceSettingsPtrOutput) PricingPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *string {
		if v == nil {
			return nil
		}
		return v.PricingPlan
	}).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
func (o DatabaseInstanceSettingsPtrOutput) ReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationType
	}).(pulumi.StringPtrOutput)
}

// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
func (o DatabaseInstanceSettingsPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// A set of key/value user label pairs to assign to the instance.
func (o DatabaseInstanceSettingsPtrOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserLabels
	}).(pulumi.StringMapOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

type DatabaseInstanceSettingsBackupConfiguration struct {
	// True if binary logging is enabled. If
	// `settings.backup_configuration.enabled` is false, this must be as well.
	// Cannot be used with Postgres.
	BinaryLogEnabled *bool `pulumi:"binaryLogEnabled"`
	// True if backup configuration is enabled.
	Enabled  *bool   `pulumi:"enabled"`
	Location *string `pulumi:"location"`
	// `HH:MM` format time indicating when backup
	// configuration starts.
	StartTime *string `pulumi:"startTime"`
}

// DatabaseInstanceSettingsBackupConfigurationInput is an input type that accepts DatabaseInstanceSettingsBackupConfigurationArgs and DatabaseInstanceSettingsBackupConfigurationOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsBackupConfigurationInput` via:
//
// 		 DatabaseInstanceSettingsBackupConfigurationArgs{...}
//
type DatabaseInstanceSettingsBackupConfigurationInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsBackupConfigurationOutput() DatabaseInstanceSettingsBackupConfigurationOutput
	ToDatabaseInstanceSettingsBackupConfigurationOutputWithContext(context.Context) DatabaseInstanceSettingsBackupConfigurationOutput
}

type DatabaseInstanceSettingsBackupConfigurationArgs struct {
	// True if binary logging is enabled. If
	// `settings.backup_configuration.enabled` is false, this must be as well.
	// Cannot be used with Postgres.
	BinaryLogEnabled pulumi.BoolPtrInput `pulumi:"binaryLogEnabled"`
	// True if backup configuration is enabled.
	Enabled  pulumi.BoolPtrInput   `pulumi:"enabled"`
	Location pulumi.StringPtrInput `pulumi:"location"`
	// `HH:MM` format time indicating when backup
	// configuration starts.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (DatabaseInstanceSettingsBackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsBackupConfiguration)(nil)).Elem()
}

func (i DatabaseInstanceSettingsBackupConfigurationArgs) ToDatabaseInstanceSettingsBackupConfigurationOutput() DatabaseInstanceSettingsBackupConfigurationOutput {
	return i.ToDatabaseInstanceSettingsBackupConfigurationOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsBackupConfigurationArgs) ToDatabaseInstanceSettingsBackupConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsBackupConfigurationOutput)
}

func (i DatabaseInstanceSettingsBackupConfigurationArgs) ToDatabaseInstanceSettingsBackupConfigurationPtrOutput() DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return i.ToDatabaseInstanceSettingsBackupConfigurationPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsBackupConfigurationArgs) ToDatabaseInstanceSettingsBackupConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsBackupConfigurationOutput).ToDatabaseInstanceSettingsBackupConfigurationPtrOutputWithContext(ctx)
}

// DatabaseInstanceSettingsBackupConfigurationPtrInput is an input type that accepts DatabaseInstanceSettingsBackupConfigurationArgs, DatabaseInstanceSettingsBackupConfigurationPtr and DatabaseInstanceSettingsBackupConfigurationPtrOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsBackupConfigurationPtrInput` via:
//
// 		 DatabaseInstanceSettingsBackupConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type DatabaseInstanceSettingsBackupConfigurationPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsBackupConfigurationPtrOutput() DatabaseInstanceSettingsBackupConfigurationPtrOutput
	ToDatabaseInstanceSettingsBackupConfigurationPtrOutputWithContext(context.Context) DatabaseInstanceSettingsBackupConfigurationPtrOutput
}

type databaseInstanceSettingsBackupConfigurationPtrType DatabaseInstanceSettingsBackupConfigurationArgs

func DatabaseInstanceSettingsBackupConfigurationPtr(v *DatabaseInstanceSettingsBackupConfigurationArgs) DatabaseInstanceSettingsBackupConfigurationPtrInput {
	return (*databaseInstanceSettingsBackupConfigurationPtrType)(v)
}

func (*databaseInstanceSettingsBackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsBackupConfiguration)(nil)).Elem()
}

func (i *databaseInstanceSettingsBackupConfigurationPtrType) ToDatabaseInstanceSettingsBackupConfigurationPtrOutput() DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return i.ToDatabaseInstanceSettingsBackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsBackupConfigurationPtrType) ToDatabaseInstanceSettingsBackupConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsBackupConfigurationPtrOutput)
}

type DatabaseInstanceSettingsBackupConfigurationOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsBackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsBackupConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsBackupConfigurationOutput) ToDatabaseInstanceSettingsBackupConfigurationOutput() DatabaseInstanceSettingsBackupConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsBackupConfigurationOutput) ToDatabaseInstanceSettingsBackupConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsBackupConfigurationOutput) ToDatabaseInstanceSettingsBackupConfigurationPtrOutput() DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return o.ToDatabaseInstanceSettingsBackupConfigurationPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsBackupConfigurationOutput) ToDatabaseInstanceSettingsBackupConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfiguration) *DatabaseInstanceSettingsBackupConfiguration {
		return &v
	}).(DatabaseInstanceSettingsBackupConfigurationPtrOutput)
}

// True if binary logging is enabled. If
// `settings.backup_configuration.enabled` is false, this must be as well.
// Cannot be used with Postgres.
func (o DatabaseInstanceSettingsBackupConfigurationOutput) BinaryLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfiguration) *bool { return v.BinaryLogEnabled }).(pulumi.BoolPtrOutput)
}

// True if backup configuration is enabled.
func (o DatabaseInstanceSettingsBackupConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsBackupConfigurationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfiguration) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// `HH:MM` format time indicating when backup
// configuration starts.
func (o DatabaseInstanceSettingsBackupConfigurationOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfiguration) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsBackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsBackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsBackupConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsBackupConfigurationPtrOutput) ToDatabaseInstanceSettingsBackupConfigurationPtrOutput() DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsBackupConfigurationPtrOutput) ToDatabaseInstanceSettingsBackupConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsBackupConfigurationPtrOutput) Elem() DatabaseInstanceSettingsBackupConfigurationOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsBackupConfiguration) DatabaseInstanceSettingsBackupConfiguration {
		return *v
	}).(DatabaseInstanceSettingsBackupConfigurationOutput)
}

// True if binary logging is enabled. If
// `settings.backup_configuration.enabled` is false, this must be as well.
// Cannot be used with Postgres.
func (o DatabaseInstanceSettingsBackupConfigurationPtrOutput) BinaryLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsBackupConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.BinaryLogEnabled
	}).(pulumi.BoolPtrOutput)
}

// True if backup configuration is enabled.
func (o DatabaseInstanceSettingsBackupConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsBackupConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsBackupConfigurationPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsBackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// `HH:MM` format time indicating when backup
// configuration starts.
func (o DatabaseInstanceSettingsBackupConfigurationPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsBackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsDatabaseFlag struct {
	// A name for this whitelist entry.
	Name string `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value string `pulumi:"value"`
}

// DatabaseInstanceSettingsDatabaseFlagInput is an input type that accepts DatabaseInstanceSettingsDatabaseFlagArgs and DatabaseInstanceSettingsDatabaseFlagOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsDatabaseFlagInput` via:
//
// 		 DatabaseInstanceSettingsDatabaseFlagArgs{...}
//
type DatabaseInstanceSettingsDatabaseFlagInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsDatabaseFlagOutput() DatabaseInstanceSettingsDatabaseFlagOutput
	ToDatabaseInstanceSettingsDatabaseFlagOutputWithContext(context.Context) DatabaseInstanceSettingsDatabaseFlagOutput
}

type DatabaseInstanceSettingsDatabaseFlagArgs struct {
	// A name for this whitelist entry.
	Name pulumi.StringInput `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabaseInstanceSettingsDatabaseFlagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsDatabaseFlag)(nil)).Elem()
}

func (i DatabaseInstanceSettingsDatabaseFlagArgs) ToDatabaseInstanceSettingsDatabaseFlagOutput() DatabaseInstanceSettingsDatabaseFlagOutput {
	return i.ToDatabaseInstanceSettingsDatabaseFlagOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsDatabaseFlagArgs) ToDatabaseInstanceSettingsDatabaseFlagOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsDatabaseFlagOutput)
}

// DatabaseInstanceSettingsDatabaseFlagArrayInput is an input type that accepts DatabaseInstanceSettingsDatabaseFlagArray and DatabaseInstanceSettingsDatabaseFlagArrayOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsDatabaseFlagArrayInput` via:
//
// 		 DatabaseInstanceSettingsDatabaseFlagArray{ DatabaseInstanceSettingsDatabaseFlagArgs{...} }
//
type DatabaseInstanceSettingsDatabaseFlagArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsDatabaseFlagArrayOutput() DatabaseInstanceSettingsDatabaseFlagArrayOutput
	ToDatabaseInstanceSettingsDatabaseFlagArrayOutputWithContext(context.Context) DatabaseInstanceSettingsDatabaseFlagArrayOutput
}

type DatabaseInstanceSettingsDatabaseFlagArray []DatabaseInstanceSettingsDatabaseFlagInput

func (DatabaseInstanceSettingsDatabaseFlagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsDatabaseFlag)(nil)).Elem()
}

func (i DatabaseInstanceSettingsDatabaseFlagArray) ToDatabaseInstanceSettingsDatabaseFlagArrayOutput() DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return i.ToDatabaseInstanceSettingsDatabaseFlagArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsDatabaseFlagArray) ToDatabaseInstanceSettingsDatabaseFlagArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsDatabaseFlagArrayOutput)
}

type DatabaseInstanceSettingsDatabaseFlagOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsDatabaseFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsDatabaseFlag)(nil)).Elem()
}

func (o DatabaseInstanceSettingsDatabaseFlagOutput) ToDatabaseInstanceSettingsDatabaseFlagOutput() DatabaseInstanceSettingsDatabaseFlagOutput {
	return o
}

func (o DatabaseInstanceSettingsDatabaseFlagOutput) ToDatabaseInstanceSettingsDatabaseFlagOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagOutput {
	return o
}

// A name for this whitelist entry.
func (o DatabaseInstanceSettingsDatabaseFlagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsDatabaseFlag) string { return v.Name }).(pulumi.StringOutput)
}

// A CIDR notation IPv4 or IPv6 address that is allowed to
// access this instance. Must be set even if other two attributes are not for
// the whitelist to become active.
func (o DatabaseInstanceSettingsDatabaseFlagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsDatabaseFlag) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseInstanceSettingsDatabaseFlagArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsDatabaseFlagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsDatabaseFlag)(nil)).Elem()
}

func (o DatabaseInstanceSettingsDatabaseFlagArrayOutput) ToDatabaseInstanceSettingsDatabaseFlagArrayOutput() DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsDatabaseFlagArrayOutput) ToDatabaseInstanceSettingsDatabaseFlagArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsDatabaseFlagArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceSettingsDatabaseFlagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceSettingsDatabaseFlag {
		return vs[0].([]DatabaseInstanceSettingsDatabaseFlag)[vs[1].(int)]
	}).(DatabaseInstanceSettingsDatabaseFlagOutput)
}

type DatabaseInstanceSettingsIpConfiguration struct {
	AuthorizedNetworks []DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork `pulumi:"authorizedNetworks"`
	// Whether this Cloud SQL instance should be assigned
	// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
	// `privateNetwork` must be configured.
	Ipv4Enabled *bool `pulumi:"ipv4Enabled"`
	// The VPC network from which the Cloud SQL
	// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// Specifying a network enables private IP.
	// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork *string `pulumi:"privateNetwork"`
	// True if mysqld should default to `REQUIRE X509`
	// for users connecting over IP.
	RequireSsl *bool `pulumi:"requireSsl"`
}

// DatabaseInstanceSettingsIpConfigurationInput is an input type that accepts DatabaseInstanceSettingsIpConfigurationArgs and DatabaseInstanceSettingsIpConfigurationOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsIpConfigurationInput` via:
//
// 		 DatabaseInstanceSettingsIpConfigurationArgs{...}
//
type DatabaseInstanceSettingsIpConfigurationInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationOutput() DatabaseInstanceSettingsIpConfigurationOutput
	ToDatabaseInstanceSettingsIpConfigurationOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationOutput
}

type DatabaseInstanceSettingsIpConfigurationArgs struct {
	AuthorizedNetworks DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayInput `pulumi:"authorizedNetworks"`
	// Whether this Cloud SQL instance should be assigned
	// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
	// `privateNetwork` must be configured.
	Ipv4Enabled pulumi.BoolPtrInput `pulumi:"ipv4Enabled"`
	// The VPC network from which the Cloud SQL
	// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// Specifying a network enables private IP.
	// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork pulumi.StringPtrInput `pulumi:"privateNetwork"`
	// True if mysqld should default to `REQUIRE X509`
	// for users connecting over IP.
	RequireSsl pulumi.BoolPtrInput `pulumi:"requireSsl"`
}

func (DatabaseInstanceSettingsIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfiguration)(nil)).Elem()
}

func (i DatabaseInstanceSettingsIpConfigurationArgs) ToDatabaseInstanceSettingsIpConfigurationOutput() DatabaseInstanceSettingsIpConfigurationOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationArgs) ToDatabaseInstanceSettingsIpConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationOutput)
}

func (i DatabaseInstanceSettingsIpConfigurationArgs) ToDatabaseInstanceSettingsIpConfigurationPtrOutput() DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationArgs) ToDatabaseInstanceSettingsIpConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationOutput).ToDatabaseInstanceSettingsIpConfigurationPtrOutputWithContext(ctx)
}

// DatabaseInstanceSettingsIpConfigurationPtrInput is an input type that accepts DatabaseInstanceSettingsIpConfigurationArgs, DatabaseInstanceSettingsIpConfigurationPtr and DatabaseInstanceSettingsIpConfigurationPtrOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsIpConfigurationPtrInput` via:
//
// 		 DatabaseInstanceSettingsIpConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type DatabaseInstanceSettingsIpConfigurationPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationPtrOutput() DatabaseInstanceSettingsIpConfigurationPtrOutput
	ToDatabaseInstanceSettingsIpConfigurationPtrOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationPtrOutput
}

type databaseInstanceSettingsIpConfigurationPtrType DatabaseInstanceSettingsIpConfigurationArgs

func DatabaseInstanceSettingsIpConfigurationPtr(v *DatabaseInstanceSettingsIpConfigurationArgs) DatabaseInstanceSettingsIpConfigurationPtrInput {
	return (*databaseInstanceSettingsIpConfigurationPtrType)(v)
}

func (*databaseInstanceSettingsIpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsIpConfiguration)(nil)).Elem()
}

func (i *databaseInstanceSettingsIpConfigurationPtrType) ToDatabaseInstanceSettingsIpConfigurationPtrOutput() DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsIpConfigurationPtrType) ToDatabaseInstanceSettingsIpConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationPtrOutput)
}

type DatabaseInstanceSettingsIpConfigurationOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationOutput) ToDatabaseInstanceSettingsIpConfigurationOutput() DatabaseInstanceSettingsIpConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationOutput) ToDatabaseInstanceSettingsIpConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationOutput) ToDatabaseInstanceSettingsIpConfigurationPtrOutput() DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return o.ToDatabaseInstanceSettingsIpConfigurationPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsIpConfigurationOutput) ToDatabaseInstanceSettingsIpConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfiguration) *DatabaseInstanceSettingsIpConfiguration {
		return &v
	}).(DatabaseInstanceSettingsIpConfigurationPtrOutput)
}
func (o DatabaseInstanceSettingsIpConfigurationOutput) AuthorizedNetworks() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfiguration) []DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork {
		return v.AuthorizedNetworks
	}).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput)
}

// Whether this Cloud SQL instance should be assigned
// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
// `privateNetwork` must be configured.
func (o DatabaseInstanceSettingsIpConfigurationOutput) Ipv4Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfiguration) *bool { return v.Ipv4Enabled }).(pulumi.BoolPtrOutput)
}

// The VPC network from which the Cloud SQL
// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
// Specifying a network enables private IP.
// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
// This setting can be updated, but it cannot be removed after it is set.
func (o DatabaseInstanceSettingsIpConfigurationOutput) PrivateNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfiguration) *string { return v.PrivateNetwork }).(pulumi.StringPtrOutput)
}

// True if mysqld should default to `REQUIRE X509`
// for users connecting over IP.
func (o DatabaseInstanceSettingsIpConfigurationOutput) RequireSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfiguration) *bool { return v.RequireSsl }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceSettingsIpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsIpConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationPtrOutput) ToDatabaseInstanceSettingsIpConfigurationPtrOutput() DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationPtrOutput) ToDatabaseInstanceSettingsIpConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationPtrOutput) Elem() DatabaseInstanceSettingsIpConfigurationOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsIpConfiguration) DatabaseInstanceSettingsIpConfiguration { return *v }).(DatabaseInstanceSettingsIpConfigurationOutput)
}

func (o DatabaseInstanceSettingsIpConfigurationPtrOutput) AuthorizedNetworks() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsIpConfiguration) []DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork {
		if v == nil {
			return nil
		}
		return v.AuthorizedNetworks
	}).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput)
}

// Whether this Cloud SQL instance should be assigned
// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
// `privateNetwork` must be configured.
func (o DatabaseInstanceSettingsIpConfigurationPtrOutput) Ipv4Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsIpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Ipv4Enabled
	}).(pulumi.BoolPtrOutput)
}

// The VPC network from which the Cloud SQL
// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
// Specifying a network enables private IP.
// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
// This setting can be updated, but it cannot be removed after it is set.
func (o DatabaseInstanceSettingsIpConfigurationPtrOutput) PrivateNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsIpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateNetwork
	}).(pulumi.StringPtrOutput)
}

// True if mysqld should default to `REQUIRE X509`
// for users connecting over IP.
func (o DatabaseInstanceSettingsIpConfigurationPtrOutput) RequireSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsIpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RequireSsl
	}).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork struct {
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime *string `pulumi:"expirationTime"`
	// A name for this whitelist entry.
	Name *string `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value string `pulumi:"value"`
}

// DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkInput is an input type that accepts DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs and DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkInput` via:
//
// 		 DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs{...}
//
type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput
	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs struct {
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime pulumi.StringPtrInput `pulumi:"expirationTime"`
	// A name for this whitelist entry.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput)
}

// DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayInput is an input type that accepts DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray and DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayInput` via:
//
// 		 DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray{ DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs{...} }
//
type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput
	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray []DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkInput

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return o
}

// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
// formatted date time string indicating when this whitelist expires.
func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

// A name for this whitelist entry.
func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A CIDR notation IPv4 or IPv6 address that is allowed to
// access this instance. Must be set even if other two attributes are not for
// the whitelist to become active.
func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork {
		return vs[0].([]DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)[vs[1].(int)]
	}).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput)
}

type DatabaseInstanceSettingsLocationPreference struct {
	// A GAE application whose zone to remain
	// in. Must be in the same region as this instance.
	FollowGaeApplication *string `pulumi:"followGaeApplication"`
	// The preferred compute engine
	// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
	Zone *string `pulumi:"zone"`
}

// DatabaseInstanceSettingsLocationPreferenceInput is an input type that accepts DatabaseInstanceSettingsLocationPreferenceArgs and DatabaseInstanceSettingsLocationPreferenceOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsLocationPreferenceInput` via:
//
// 		 DatabaseInstanceSettingsLocationPreferenceArgs{...}
//
type DatabaseInstanceSettingsLocationPreferenceInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsLocationPreferenceOutput() DatabaseInstanceSettingsLocationPreferenceOutput
	ToDatabaseInstanceSettingsLocationPreferenceOutputWithContext(context.Context) DatabaseInstanceSettingsLocationPreferenceOutput
}

type DatabaseInstanceSettingsLocationPreferenceArgs struct {
	// A GAE application whose zone to remain
	// in. Must be in the same region as this instance.
	FollowGaeApplication pulumi.StringPtrInput `pulumi:"followGaeApplication"`
	// The preferred compute engine
	// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DatabaseInstanceSettingsLocationPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsLocationPreference)(nil)).Elem()
}

func (i DatabaseInstanceSettingsLocationPreferenceArgs) ToDatabaseInstanceSettingsLocationPreferenceOutput() DatabaseInstanceSettingsLocationPreferenceOutput {
	return i.ToDatabaseInstanceSettingsLocationPreferenceOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsLocationPreferenceArgs) ToDatabaseInstanceSettingsLocationPreferenceOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsLocationPreferenceOutput)
}

func (i DatabaseInstanceSettingsLocationPreferenceArgs) ToDatabaseInstanceSettingsLocationPreferencePtrOutput() DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return i.ToDatabaseInstanceSettingsLocationPreferencePtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsLocationPreferenceArgs) ToDatabaseInstanceSettingsLocationPreferencePtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsLocationPreferenceOutput).ToDatabaseInstanceSettingsLocationPreferencePtrOutputWithContext(ctx)
}

// DatabaseInstanceSettingsLocationPreferencePtrInput is an input type that accepts DatabaseInstanceSettingsLocationPreferenceArgs, DatabaseInstanceSettingsLocationPreferencePtr and DatabaseInstanceSettingsLocationPreferencePtrOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsLocationPreferencePtrInput` via:
//
// 		 DatabaseInstanceSettingsLocationPreferenceArgs{...}
//
//  or:
//
// 		 nil
//
type DatabaseInstanceSettingsLocationPreferencePtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsLocationPreferencePtrOutput() DatabaseInstanceSettingsLocationPreferencePtrOutput
	ToDatabaseInstanceSettingsLocationPreferencePtrOutputWithContext(context.Context) DatabaseInstanceSettingsLocationPreferencePtrOutput
}

type databaseInstanceSettingsLocationPreferencePtrType DatabaseInstanceSettingsLocationPreferenceArgs

func DatabaseInstanceSettingsLocationPreferencePtr(v *DatabaseInstanceSettingsLocationPreferenceArgs) DatabaseInstanceSettingsLocationPreferencePtrInput {
	return (*databaseInstanceSettingsLocationPreferencePtrType)(v)
}

func (*databaseInstanceSettingsLocationPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsLocationPreference)(nil)).Elem()
}

func (i *databaseInstanceSettingsLocationPreferencePtrType) ToDatabaseInstanceSettingsLocationPreferencePtrOutput() DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return i.ToDatabaseInstanceSettingsLocationPreferencePtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsLocationPreferencePtrType) ToDatabaseInstanceSettingsLocationPreferencePtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsLocationPreferencePtrOutput)
}

type DatabaseInstanceSettingsLocationPreferenceOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsLocationPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsLocationPreference)(nil)).Elem()
}

func (o DatabaseInstanceSettingsLocationPreferenceOutput) ToDatabaseInstanceSettingsLocationPreferenceOutput() DatabaseInstanceSettingsLocationPreferenceOutput {
	return o
}

func (o DatabaseInstanceSettingsLocationPreferenceOutput) ToDatabaseInstanceSettingsLocationPreferenceOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceOutput {
	return o
}

func (o DatabaseInstanceSettingsLocationPreferenceOutput) ToDatabaseInstanceSettingsLocationPreferencePtrOutput() DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return o.ToDatabaseInstanceSettingsLocationPreferencePtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsLocationPreferenceOutput) ToDatabaseInstanceSettingsLocationPreferencePtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreference) *DatabaseInstanceSettingsLocationPreference {
		return &v
	}).(DatabaseInstanceSettingsLocationPreferencePtrOutput)
}

// A GAE application whose zone to remain
// in. Must be in the same region as this instance.
func (o DatabaseInstanceSettingsLocationPreferenceOutput) FollowGaeApplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreference) *string { return v.FollowGaeApplication }).(pulumi.StringPtrOutput)
}

// The preferred compute engine
// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
func (o DatabaseInstanceSettingsLocationPreferenceOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreference) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsLocationPreferencePtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsLocationPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsLocationPreference)(nil)).Elem()
}

func (o DatabaseInstanceSettingsLocationPreferencePtrOutput) ToDatabaseInstanceSettingsLocationPreferencePtrOutput() DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return o
}

func (o DatabaseInstanceSettingsLocationPreferencePtrOutput) ToDatabaseInstanceSettingsLocationPreferencePtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferencePtrOutput {
	return o
}

func (o DatabaseInstanceSettingsLocationPreferencePtrOutput) Elem() DatabaseInstanceSettingsLocationPreferenceOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsLocationPreference) DatabaseInstanceSettingsLocationPreference {
		return *v
	}).(DatabaseInstanceSettingsLocationPreferenceOutput)
}

// A GAE application whose zone to remain
// in. Must be in the same region as this instance.
func (o DatabaseInstanceSettingsLocationPreferencePtrOutput) FollowGaeApplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsLocationPreference) *string {
		if v == nil {
			return nil
		}
		return v.FollowGaeApplication
	}).(pulumi.StringPtrOutput)
}

// The preferred compute engine
// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
func (o DatabaseInstanceSettingsLocationPreferencePtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsLocationPreference) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsMaintenanceWindow struct {
	// Day of week (`1-7`), starting on Monday
	Day *int `pulumi:"day"`
	// Hour of day (`0-23`), ignored if `day` not set
	Hour *int `pulumi:"hour"`
	// Receive updates earlier (`canary`) or later
	// (`stable`)
	UpdateTrack *string `pulumi:"updateTrack"`
}

// DatabaseInstanceSettingsMaintenanceWindowInput is an input type that accepts DatabaseInstanceSettingsMaintenanceWindowArgs and DatabaseInstanceSettingsMaintenanceWindowOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsMaintenanceWindowInput` via:
//
// 		 DatabaseInstanceSettingsMaintenanceWindowArgs{...}
//
type DatabaseInstanceSettingsMaintenanceWindowInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsMaintenanceWindowOutput() DatabaseInstanceSettingsMaintenanceWindowOutput
	ToDatabaseInstanceSettingsMaintenanceWindowOutputWithContext(context.Context) DatabaseInstanceSettingsMaintenanceWindowOutput
}

type DatabaseInstanceSettingsMaintenanceWindowArgs struct {
	// Day of week (`1-7`), starting on Monday
	Day pulumi.IntPtrInput `pulumi:"day"`
	// Hour of day (`0-23`), ignored if `day` not set
	Hour pulumi.IntPtrInput `pulumi:"hour"`
	// Receive updates earlier (`canary`) or later
	// (`stable`)
	UpdateTrack pulumi.StringPtrInput `pulumi:"updateTrack"`
}

func (DatabaseInstanceSettingsMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsMaintenanceWindow)(nil)).Elem()
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgs) ToDatabaseInstanceSettingsMaintenanceWindowOutput() DatabaseInstanceSettingsMaintenanceWindowOutput {
	return i.ToDatabaseInstanceSettingsMaintenanceWindowOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgs) ToDatabaseInstanceSettingsMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsMaintenanceWindowOutput)
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgs) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return i.ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgs) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsMaintenanceWindowOutput).ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx)
}

// DatabaseInstanceSettingsMaintenanceWindowPtrInput is an input type that accepts DatabaseInstanceSettingsMaintenanceWindowArgs, DatabaseInstanceSettingsMaintenanceWindowPtr and DatabaseInstanceSettingsMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `DatabaseInstanceSettingsMaintenanceWindowPtrInput` via:
//
// 		 DatabaseInstanceSettingsMaintenanceWindowArgs{...}
//
//  or:
//
// 		 nil
//
type DatabaseInstanceSettingsMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput
	ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput
}

type databaseInstanceSettingsMaintenanceWindowPtrType DatabaseInstanceSettingsMaintenanceWindowArgs

func DatabaseInstanceSettingsMaintenanceWindowPtr(v *DatabaseInstanceSettingsMaintenanceWindowArgs) DatabaseInstanceSettingsMaintenanceWindowPtrInput {
	return (*databaseInstanceSettingsMaintenanceWindowPtrType)(v)
}

func (*databaseInstanceSettingsMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsMaintenanceWindow)(nil)).Elem()
}

func (i *databaseInstanceSettingsMaintenanceWindowPtrType) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return i.ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsMaintenanceWindowPtrType) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsMaintenanceWindowPtrOutput)
}

type DatabaseInstanceSettingsMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseInstanceSettingsMaintenanceWindowOutput) ToDatabaseInstanceSettingsMaintenanceWindowOutput() DatabaseInstanceSettingsMaintenanceWindowOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowOutput) ToDatabaseInstanceSettingsMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowOutput) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o.ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsMaintenanceWindowOutput) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *DatabaseInstanceSettingsMaintenanceWindow {
		return &v
	}).(DatabaseInstanceSettingsMaintenanceWindowPtrOutput)
}

// Day of week (`1-7`), starting on Monday
func (o DatabaseInstanceSettingsMaintenanceWindowOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Hour of day (`0-23`), ignored if `day` not set
func (o DatabaseInstanceSettingsMaintenanceWindowOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *int { return v.Hour }).(pulumi.IntPtrOutput)
}

// Receive updates earlier (`canary`) or later
// (`stable`)
func (o DatabaseInstanceSettingsMaintenanceWindowOutput) UpdateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *string { return v.UpdateTrack }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) Elem() DatabaseInstanceSettingsMaintenanceWindowOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsMaintenanceWindow) DatabaseInstanceSettingsMaintenanceWindow {
		return *v
	}).(DatabaseInstanceSettingsMaintenanceWindowOutput)
}

// Day of week (`1-7`), starting on Monday
func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.Day
	}).(pulumi.IntPtrOutput)
}

// Hour of day (`0-23`), ignored if `day` not set
func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.Hour
	}).(pulumi.IntPtrOutput)
}

// Receive updates earlier (`canary`) or later
// (`stable`)
func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) UpdateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTrack
	}).(pulumi.StringPtrOutput)
}

type GetCaCertsCert struct {
	// The CA certificate used to connect to the SQL instance via SSL.
	Cert string `pulumi:"cert"`
	// The CN valid for the CA cert.
	CommonName string `pulumi:"commonName"`
	// Creation time of the CA cert.
	CreateTime string `pulumi:"createTime"`
	// Expiration time of the CA cert.
	ExpirationTime string `pulumi:"expirationTime"`
	// SHA1 fingerprint of the CA cert.
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

// GetCaCertsCertInput is an input type that accepts GetCaCertsCertArgs and GetCaCertsCertOutput values.
// You can construct a concrete instance of `GetCaCertsCertInput` via:
//
// 		 GetCaCertsCertArgs{...}
//
type GetCaCertsCertInput interface {
	pulumi.Input

	ToGetCaCertsCertOutput() GetCaCertsCertOutput
	ToGetCaCertsCertOutputWithContext(context.Context) GetCaCertsCertOutput
}

type GetCaCertsCertArgs struct {
	// The CA certificate used to connect to the SQL instance via SSL.
	Cert pulumi.StringInput `pulumi:"cert"`
	// The CN valid for the CA cert.
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Creation time of the CA cert.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Expiration time of the CA cert.
	ExpirationTime pulumi.StringInput `pulumi:"expirationTime"`
	// SHA1 fingerprint of the CA cert.
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (GetCaCertsCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaCertsCert)(nil)).Elem()
}

func (i GetCaCertsCertArgs) ToGetCaCertsCertOutput() GetCaCertsCertOutput {
	return i.ToGetCaCertsCertOutputWithContext(context.Background())
}

func (i GetCaCertsCertArgs) ToGetCaCertsCertOutputWithContext(ctx context.Context) GetCaCertsCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaCertsCertOutput)
}

// GetCaCertsCertArrayInput is an input type that accepts GetCaCertsCertArray and GetCaCertsCertArrayOutput values.
// You can construct a concrete instance of `GetCaCertsCertArrayInput` via:
//
// 		 GetCaCertsCertArray{ GetCaCertsCertArgs{...} }
//
type GetCaCertsCertArrayInput interface {
	pulumi.Input

	ToGetCaCertsCertArrayOutput() GetCaCertsCertArrayOutput
	ToGetCaCertsCertArrayOutputWithContext(context.Context) GetCaCertsCertArrayOutput
}

type GetCaCertsCertArray []GetCaCertsCertInput

func (GetCaCertsCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaCertsCert)(nil)).Elem()
}

func (i GetCaCertsCertArray) ToGetCaCertsCertArrayOutput() GetCaCertsCertArrayOutput {
	return i.ToGetCaCertsCertArrayOutputWithContext(context.Background())
}

func (i GetCaCertsCertArray) ToGetCaCertsCertArrayOutputWithContext(ctx context.Context) GetCaCertsCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaCertsCertArrayOutput)
}

type GetCaCertsCertOutput struct{ *pulumi.OutputState }

func (GetCaCertsCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaCertsCert)(nil)).Elem()
}

func (o GetCaCertsCertOutput) ToGetCaCertsCertOutput() GetCaCertsCertOutput {
	return o
}

func (o GetCaCertsCertOutput) ToGetCaCertsCertOutputWithContext(ctx context.Context) GetCaCertsCertOutput {
	return o
}

// The CA certificate used to connect to the SQL instance via SSL.
func (o GetCaCertsCertOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.Cert }).(pulumi.StringOutput)
}

// The CN valid for the CA cert.
func (o GetCaCertsCertOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.CommonName }).(pulumi.StringOutput)
}

// Creation time of the CA cert.
func (o GetCaCertsCertOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Expiration time of the CA cert.
func (o GetCaCertsCertOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

// SHA1 fingerprint of the CA cert.
func (o GetCaCertsCertOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type GetCaCertsCertArrayOutput struct{ *pulumi.OutputState }

func (GetCaCertsCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaCertsCert)(nil)).Elem()
}

func (o GetCaCertsCertArrayOutput) ToGetCaCertsCertArrayOutput() GetCaCertsCertArrayOutput {
	return o
}

func (o GetCaCertsCertArrayOutput) ToGetCaCertsCertArrayOutputWithContext(ctx context.Context) GetCaCertsCertArrayOutput {
	return o
}

func (o GetCaCertsCertArrayOutput) Index(i pulumi.IntInput) GetCaCertsCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaCertsCert {
		return vs[0].([]GetCaCertsCert)[vs[1].(int)]
	}).(GetCaCertsCertOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseInstanceIpAddressOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceIpAddressArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReplicaConfigurationOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReplicaConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceServerCaCertPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsBackupConfigurationOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsBackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsDatabaseFlagOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsDatabaseFlagArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsLocationPreferenceOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsLocationPreferencePtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(GetCaCertsCertOutput{})
	pulumi.RegisterOutputType(GetCaCertsCertArrayOutput{})
}
