// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a database in a Cloud SQL instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/sql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = sql.LookupDatabase(ctx, &sql.LookupDatabaseArgs{
//				Name:     "test-sql-database",
//				Instance: google_sql_database_instance.Main.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDatabase(ctx *pulumi.Context, args *LookupDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseResult, error) {
	var rv LookupDatabaseResult
	err := ctx.Invoke("gcp:sql/getDatabase:getDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabase.
type LookupDatabaseArgs struct {
	// The name of the Cloud SQL database instance in which the database belongs.
	Instance string `pulumi:"instance"`
	// The name of the database.
	Name string `pulumi:"name"`
	// The ID of the project in which the instance belongs.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getDatabase.
type LookupDatabaseResult struct {
	Charset        string `pulumi:"charset"`
	Collation      string `pulumi:"collation"`
	DeletionPolicy string `pulumi:"deletionPolicy"`
	// The provider-assigned unique ID for this managed resource.
	Id       string  `pulumi:"id"`
	Instance string  `pulumi:"instance"`
	Name     string  `pulumi:"name"`
	Project  *string `pulumi:"project"`
	SelfLink string  `pulumi:"selfLink"`
}

func LookupDatabaseOutput(ctx *pulumi.Context, args LookupDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseResult, error) {
			args := v.(LookupDatabaseArgs)
			r, err := LookupDatabase(ctx, &args, opts...)
			var s LookupDatabaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatabaseResultOutput)
}

// A collection of arguments for invoking getDatabase.
type LookupDatabaseOutputArgs struct {
	// The name of the Cloud SQL database instance in which the database belongs.
	Instance pulumi.StringInput `pulumi:"instance"`
	// The name of the database.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project in which the instance belongs.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getDatabase.
type LookupDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseResult)(nil)).Elem()
}

func (o LookupDatabaseResultOutput) ToLookupDatabaseResultOutput() LookupDatabaseResultOutput {
	return o
}

func (o LookupDatabaseResultOutput) ToLookupDatabaseResultOutputWithContext(ctx context.Context) LookupDatabaseResultOutput {
	return o
}

func (o LookupDatabaseResultOutput) Charset() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Charset }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Collation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Collation }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) DeletionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.DeletionPolicy }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Instance }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupDatabaseResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseResultOutput{})
}
