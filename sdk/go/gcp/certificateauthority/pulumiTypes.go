// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package certificateauthority

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AuthorityAccessUrl struct {
	CaCertificateAccessUrl *string `pulumi:"caCertificateAccessUrl"`
	CrlAccessUrl           *string `pulumi:"crlAccessUrl"`
}

// AuthorityAccessUrlInput is an input type that accepts AuthorityAccessUrlArgs and AuthorityAccessUrlOutput values.
// You can construct a concrete instance of `AuthorityAccessUrlInput` via:
//
//          AuthorityAccessUrlArgs{...}
type AuthorityAccessUrlInput interface {
	pulumi.Input

	ToAuthorityAccessUrlOutput() AuthorityAccessUrlOutput
	ToAuthorityAccessUrlOutputWithContext(context.Context) AuthorityAccessUrlOutput
}

type AuthorityAccessUrlArgs struct {
	CaCertificateAccessUrl pulumi.StringPtrInput `pulumi:"caCertificateAccessUrl"`
	CrlAccessUrl           pulumi.StringPtrInput `pulumi:"crlAccessUrl"`
}

func (AuthorityAccessUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityAccessUrl)(nil)).Elem()
}

func (i AuthorityAccessUrlArgs) ToAuthorityAccessUrlOutput() AuthorityAccessUrlOutput {
	return i.ToAuthorityAccessUrlOutputWithContext(context.Background())
}

func (i AuthorityAccessUrlArgs) ToAuthorityAccessUrlOutputWithContext(ctx context.Context) AuthorityAccessUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityAccessUrlOutput)
}

// AuthorityAccessUrlArrayInput is an input type that accepts AuthorityAccessUrlArray and AuthorityAccessUrlArrayOutput values.
// You can construct a concrete instance of `AuthorityAccessUrlArrayInput` via:
//
//          AuthorityAccessUrlArray{ AuthorityAccessUrlArgs{...} }
type AuthorityAccessUrlArrayInput interface {
	pulumi.Input

	ToAuthorityAccessUrlArrayOutput() AuthorityAccessUrlArrayOutput
	ToAuthorityAccessUrlArrayOutputWithContext(context.Context) AuthorityAccessUrlArrayOutput
}

type AuthorityAccessUrlArray []AuthorityAccessUrlInput

func (AuthorityAccessUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityAccessUrl)(nil)).Elem()
}

func (i AuthorityAccessUrlArray) ToAuthorityAccessUrlArrayOutput() AuthorityAccessUrlArrayOutput {
	return i.ToAuthorityAccessUrlArrayOutputWithContext(context.Background())
}

func (i AuthorityAccessUrlArray) ToAuthorityAccessUrlArrayOutputWithContext(ctx context.Context) AuthorityAccessUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityAccessUrlArrayOutput)
}

type AuthorityAccessUrlOutput struct{ *pulumi.OutputState }

func (AuthorityAccessUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityAccessUrl)(nil)).Elem()
}

func (o AuthorityAccessUrlOutput) ToAuthorityAccessUrlOutput() AuthorityAccessUrlOutput {
	return o
}

func (o AuthorityAccessUrlOutput) ToAuthorityAccessUrlOutputWithContext(ctx context.Context) AuthorityAccessUrlOutput {
	return o
}

func (o AuthorityAccessUrlOutput) CaCertificateAccessUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityAccessUrl) *string { return v.CaCertificateAccessUrl }).(pulumi.StringPtrOutput)
}

func (o AuthorityAccessUrlOutput) CrlAccessUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityAccessUrl) *string { return v.CrlAccessUrl }).(pulumi.StringPtrOutput)
}

type AuthorityAccessUrlArrayOutput struct{ *pulumi.OutputState }

func (AuthorityAccessUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityAccessUrl)(nil)).Elem()
}

func (o AuthorityAccessUrlArrayOutput) ToAuthorityAccessUrlArrayOutput() AuthorityAccessUrlArrayOutput {
	return o
}

func (o AuthorityAccessUrlArrayOutput) ToAuthorityAccessUrlArrayOutputWithContext(ctx context.Context) AuthorityAccessUrlArrayOutput {
	return o
}

func (o AuthorityAccessUrlArrayOutput) Index(i pulumi.IntInput) AuthorityAccessUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorityAccessUrl {
		return vs[0].([]AuthorityAccessUrl)[vs[1].(int)]
	}).(AuthorityAccessUrlOutput)
}

type AuthorityConfig struct {
	// A resource path to a ReusableConfig in the format
	// `projects/*/locations/*/reusableConfigs/*`.
	// . Alternatively, one of the short names
	// found by running `gcloud beta privateca reusable-configs list`.
	ReusableConfig AuthorityConfigReusableConfig `pulumi:"reusableConfig"`
	// Specifies some of the values in a certificate that are related to the subject.
	// Structure is documented below.
	SubjectConfig AuthorityConfigSubjectConfig `pulumi:"subjectConfig"`
}

// AuthorityConfigInput is an input type that accepts AuthorityConfigArgs and AuthorityConfigOutput values.
// You can construct a concrete instance of `AuthorityConfigInput` via:
//
//          AuthorityConfigArgs{...}
type AuthorityConfigInput interface {
	pulumi.Input

	ToAuthorityConfigOutput() AuthorityConfigOutput
	ToAuthorityConfigOutputWithContext(context.Context) AuthorityConfigOutput
}

type AuthorityConfigArgs struct {
	// A resource path to a ReusableConfig in the format
	// `projects/*/locations/*/reusableConfigs/*`.
	// . Alternatively, one of the short names
	// found by running `gcloud beta privateca reusable-configs list`.
	ReusableConfig AuthorityConfigReusableConfigInput `pulumi:"reusableConfig"`
	// Specifies some of the values in a certificate that are related to the subject.
	// Structure is documented below.
	SubjectConfig AuthorityConfigSubjectConfigInput `pulumi:"subjectConfig"`
}

func (AuthorityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfig)(nil)).Elem()
}

func (i AuthorityConfigArgs) ToAuthorityConfigOutput() AuthorityConfigOutput {
	return i.ToAuthorityConfigOutputWithContext(context.Background())
}

func (i AuthorityConfigArgs) ToAuthorityConfigOutputWithContext(ctx context.Context) AuthorityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigOutput)
}

func (i AuthorityConfigArgs) ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput {
	return i.ToAuthorityConfigPtrOutputWithContext(context.Background())
}

func (i AuthorityConfigArgs) ToAuthorityConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigOutput).ToAuthorityConfigPtrOutputWithContext(ctx)
}

// AuthorityConfigPtrInput is an input type that accepts AuthorityConfigArgs, AuthorityConfigPtr and AuthorityConfigPtrOutput values.
// You can construct a concrete instance of `AuthorityConfigPtrInput` via:
//
//          AuthorityConfigArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigPtrInput interface {
	pulumi.Input

	ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput
	ToAuthorityConfigPtrOutputWithContext(context.Context) AuthorityConfigPtrOutput
}

type authorityConfigPtrType AuthorityConfigArgs

func AuthorityConfigPtr(v *AuthorityConfigArgs) AuthorityConfigPtrInput {
	return (*authorityConfigPtrType)(v)
}

func (*authorityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfig)(nil)).Elem()
}

func (i *authorityConfigPtrType) ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput {
	return i.ToAuthorityConfigPtrOutputWithContext(context.Background())
}

func (i *authorityConfigPtrType) ToAuthorityConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigPtrOutput)
}

type AuthorityConfigOutput struct{ *pulumi.OutputState }

func (AuthorityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfig)(nil)).Elem()
}

func (o AuthorityConfigOutput) ToAuthorityConfigOutput() AuthorityConfigOutput {
	return o
}

func (o AuthorityConfigOutput) ToAuthorityConfigOutputWithContext(ctx context.Context) AuthorityConfigOutput {
	return o
}

func (o AuthorityConfigOutput) ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput {
	return o.ToAuthorityConfigPtrOutputWithContext(context.Background())
}

func (o AuthorityConfigOutput) ToAuthorityConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigPtrOutput {
	return o.ApplyT(func(v AuthorityConfig) *AuthorityConfig {
		return &v
	}).(AuthorityConfigPtrOutput)
}

// A resource path to a ReusableConfig in the format
// `projects/*/locations/*/reusableConfigs/*`.
// . Alternatively, one of the short names
// found by running `gcloud beta privateca reusable-configs list`.
func (o AuthorityConfigOutput) ReusableConfig() AuthorityConfigReusableConfigOutput {
	return o.ApplyT(func(v AuthorityConfig) AuthorityConfigReusableConfig { return v.ReusableConfig }).(AuthorityConfigReusableConfigOutput)
}

// Specifies some of the values in a certificate that are related to the subject.
// Structure is documented below.
func (o AuthorityConfigOutput) SubjectConfig() AuthorityConfigSubjectConfigOutput {
	return o.ApplyT(func(v AuthorityConfig) AuthorityConfigSubjectConfig { return v.SubjectConfig }).(AuthorityConfigSubjectConfigOutput)
}

type AuthorityConfigPtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfig)(nil)).Elem()
}

func (o AuthorityConfigPtrOutput) ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput {
	return o
}

func (o AuthorityConfigPtrOutput) ToAuthorityConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigPtrOutput {
	return o
}

func (o AuthorityConfigPtrOutput) Elem() AuthorityConfigOutput {
	return o.ApplyT(func(v *AuthorityConfig) AuthorityConfig { return *v }).(AuthorityConfigOutput)
}

// A resource path to a ReusableConfig in the format
// `projects/*/locations/*/reusableConfigs/*`.
// . Alternatively, one of the short names
// found by running `gcloud beta privateca reusable-configs list`.
func (o AuthorityConfigPtrOutput) ReusableConfig() AuthorityConfigReusableConfigPtrOutput {
	return o.ApplyT(func(v *AuthorityConfig) *AuthorityConfigReusableConfig {
		if v == nil {
			return nil
		}
		return &v.ReusableConfig
	}).(AuthorityConfigReusableConfigPtrOutput)
}

// Specifies some of the values in a certificate that are related to the subject.
// Structure is documented below.
func (o AuthorityConfigPtrOutput) SubjectConfig() AuthorityConfigSubjectConfigPtrOutput {
	return o.ApplyT(func(v *AuthorityConfig) *AuthorityConfigSubjectConfig {
		if v == nil {
			return nil
		}
		return &v.SubjectConfig
	}).(AuthorityConfigSubjectConfigPtrOutput)
}

type AuthorityConfigReusableConfig struct {
	// A resource path to a ReusableConfig in the format
	// `projects/*/locations/*/reusableConfigs/*`.
	// . Alternatively, one of the short names
	// found by running `gcloud beta privateca reusable-configs list`.
	ReusableConfig string `pulumi:"reusableConfig"`
}

// AuthorityConfigReusableConfigInput is an input type that accepts AuthorityConfigReusableConfigArgs and AuthorityConfigReusableConfigOutput values.
// You can construct a concrete instance of `AuthorityConfigReusableConfigInput` via:
//
//          AuthorityConfigReusableConfigArgs{...}
type AuthorityConfigReusableConfigInput interface {
	pulumi.Input

	ToAuthorityConfigReusableConfigOutput() AuthorityConfigReusableConfigOutput
	ToAuthorityConfigReusableConfigOutputWithContext(context.Context) AuthorityConfigReusableConfigOutput
}

type AuthorityConfigReusableConfigArgs struct {
	// A resource path to a ReusableConfig in the format
	// `projects/*/locations/*/reusableConfigs/*`.
	// . Alternatively, one of the short names
	// found by running `gcloud beta privateca reusable-configs list`.
	ReusableConfig pulumi.StringInput `pulumi:"reusableConfig"`
}

func (AuthorityConfigReusableConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigReusableConfig)(nil)).Elem()
}

func (i AuthorityConfigReusableConfigArgs) ToAuthorityConfigReusableConfigOutput() AuthorityConfigReusableConfigOutput {
	return i.ToAuthorityConfigReusableConfigOutputWithContext(context.Background())
}

func (i AuthorityConfigReusableConfigArgs) ToAuthorityConfigReusableConfigOutputWithContext(ctx context.Context) AuthorityConfigReusableConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigReusableConfigOutput)
}

func (i AuthorityConfigReusableConfigArgs) ToAuthorityConfigReusableConfigPtrOutput() AuthorityConfigReusableConfigPtrOutput {
	return i.ToAuthorityConfigReusableConfigPtrOutputWithContext(context.Background())
}

func (i AuthorityConfigReusableConfigArgs) ToAuthorityConfigReusableConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigReusableConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigReusableConfigOutput).ToAuthorityConfigReusableConfigPtrOutputWithContext(ctx)
}

// AuthorityConfigReusableConfigPtrInput is an input type that accepts AuthorityConfigReusableConfigArgs, AuthorityConfigReusableConfigPtr and AuthorityConfigReusableConfigPtrOutput values.
// You can construct a concrete instance of `AuthorityConfigReusableConfigPtrInput` via:
//
//          AuthorityConfigReusableConfigArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigReusableConfigPtrInput interface {
	pulumi.Input

	ToAuthorityConfigReusableConfigPtrOutput() AuthorityConfigReusableConfigPtrOutput
	ToAuthorityConfigReusableConfigPtrOutputWithContext(context.Context) AuthorityConfigReusableConfigPtrOutput
}

type authorityConfigReusableConfigPtrType AuthorityConfigReusableConfigArgs

func AuthorityConfigReusableConfigPtr(v *AuthorityConfigReusableConfigArgs) AuthorityConfigReusableConfigPtrInput {
	return (*authorityConfigReusableConfigPtrType)(v)
}

func (*authorityConfigReusableConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigReusableConfig)(nil)).Elem()
}

func (i *authorityConfigReusableConfigPtrType) ToAuthorityConfigReusableConfigPtrOutput() AuthorityConfigReusableConfigPtrOutput {
	return i.ToAuthorityConfigReusableConfigPtrOutputWithContext(context.Background())
}

func (i *authorityConfigReusableConfigPtrType) ToAuthorityConfigReusableConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigReusableConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigReusableConfigPtrOutput)
}

type AuthorityConfigReusableConfigOutput struct{ *pulumi.OutputState }

func (AuthorityConfigReusableConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigReusableConfig)(nil)).Elem()
}

func (o AuthorityConfigReusableConfigOutput) ToAuthorityConfigReusableConfigOutput() AuthorityConfigReusableConfigOutput {
	return o
}

func (o AuthorityConfigReusableConfigOutput) ToAuthorityConfigReusableConfigOutputWithContext(ctx context.Context) AuthorityConfigReusableConfigOutput {
	return o
}

func (o AuthorityConfigReusableConfigOutput) ToAuthorityConfigReusableConfigPtrOutput() AuthorityConfigReusableConfigPtrOutput {
	return o.ToAuthorityConfigReusableConfigPtrOutputWithContext(context.Background())
}

func (o AuthorityConfigReusableConfigOutput) ToAuthorityConfigReusableConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigReusableConfigPtrOutput {
	return o.ApplyT(func(v AuthorityConfigReusableConfig) *AuthorityConfigReusableConfig {
		return &v
	}).(AuthorityConfigReusableConfigPtrOutput)
}

// A resource path to a ReusableConfig in the format
// `projects/*/locations/*/reusableConfigs/*`.
// . Alternatively, one of the short names
// found by running `gcloud beta privateca reusable-configs list`.
func (o AuthorityConfigReusableConfigOutput) ReusableConfig() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityConfigReusableConfig) string { return v.ReusableConfig }).(pulumi.StringOutput)
}

type AuthorityConfigReusableConfigPtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigReusableConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigReusableConfig)(nil)).Elem()
}

func (o AuthorityConfigReusableConfigPtrOutput) ToAuthorityConfigReusableConfigPtrOutput() AuthorityConfigReusableConfigPtrOutput {
	return o
}

func (o AuthorityConfigReusableConfigPtrOutput) ToAuthorityConfigReusableConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigReusableConfigPtrOutput {
	return o
}

func (o AuthorityConfigReusableConfigPtrOutput) Elem() AuthorityConfigReusableConfigOutput {
	return o.ApplyT(func(v *AuthorityConfigReusableConfig) AuthorityConfigReusableConfig { return *v }).(AuthorityConfigReusableConfigOutput)
}

// A resource path to a ReusableConfig in the format
// `projects/*/locations/*/reusableConfigs/*`.
// . Alternatively, one of the short names
// found by running `gcloud beta privateca reusable-configs list`.
func (o AuthorityConfigReusableConfigPtrOutput) ReusableConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigReusableConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ReusableConfig
	}).(pulumi.StringPtrOutput)
}

type AuthorityConfigSubjectConfig struct {
	// The common name of the distinguished name.
	CommonName string `pulumi:"commonName"`
	// Contains distinguished name fields such as the location and organization.
	// Structure is documented below.
	Subject AuthorityConfigSubjectConfigSubject `pulumi:"subject"`
	// The subject alternative name fields.
	// Structure is documented below.
	SubjectAltName *AuthorityConfigSubjectConfigSubjectAltName `pulumi:"subjectAltName"`
}

// AuthorityConfigSubjectConfigInput is an input type that accepts AuthorityConfigSubjectConfigArgs and AuthorityConfigSubjectConfigOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigInput` via:
//
//          AuthorityConfigSubjectConfigArgs{...}
type AuthorityConfigSubjectConfigInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigOutput() AuthorityConfigSubjectConfigOutput
	ToAuthorityConfigSubjectConfigOutputWithContext(context.Context) AuthorityConfigSubjectConfigOutput
}

type AuthorityConfigSubjectConfigArgs struct {
	// The common name of the distinguished name.
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Contains distinguished name fields such as the location and organization.
	// Structure is documented below.
	Subject AuthorityConfigSubjectConfigSubjectInput `pulumi:"subject"`
	// The subject alternative name fields.
	// Structure is documented below.
	SubjectAltName AuthorityConfigSubjectConfigSubjectAltNamePtrInput `pulumi:"subjectAltName"`
}

func (AuthorityConfigSubjectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfig)(nil)).Elem()
}

func (i AuthorityConfigSubjectConfigArgs) ToAuthorityConfigSubjectConfigOutput() AuthorityConfigSubjectConfigOutput {
	return i.ToAuthorityConfigSubjectConfigOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigArgs) ToAuthorityConfigSubjectConfigOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigOutput)
}

func (i AuthorityConfigSubjectConfigArgs) ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput {
	return i.ToAuthorityConfigSubjectConfigPtrOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigArgs) ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigOutput).ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx)
}

// AuthorityConfigSubjectConfigPtrInput is an input type that accepts AuthorityConfigSubjectConfigArgs, AuthorityConfigSubjectConfigPtr and AuthorityConfigSubjectConfigPtrOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigPtrInput` via:
//
//          AuthorityConfigSubjectConfigArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigSubjectConfigPtrInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput
	ToAuthorityConfigSubjectConfigPtrOutputWithContext(context.Context) AuthorityConfigSubjectConfigPtrOutput
}

type authorityConfigSubjectConfigPtrType AuthorityConfigSubjectConfigArgs

func AuthorityConfigSubjectConfigPtr(v *AuthorityConfigSubjectConfigArgs) AuthorityConfigSubjectConfigPtrInput {
	return (*authorityConfigSubjectConfigPtrType)(v)
}

func (*authorityConfigSubjectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfig)(nil)).Elem()
}

func (i *authorityConfigSubjectConfigPtrType) ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput {
	return i.ToAuthorityConfigSubjectConfigPtrOutputWithContext(context.Background())
}

func (i *authorityConfigSubjectConfigPtrType) ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigPtrOutput)
}

type AuthorityConfigSubjectConfigOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfig)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigOutput) ToAuthorityConfigSubjectConfigOutput() AuthorityConfigSubjectConfigOutput {
	return o
}

func (o AuthorityConfigSubjectConfigOutput) ToAuthorityConfigSubjectConfigOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigOutput {
	return o
}

func (o AuthorityConfigSubjectConfigOutput) ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput {
	return o.ToAuthorityConfigSubjectConfigPtrOutputWithContext(context.Background())
}

func (o AuthorityConfigSubjectConfigOutput) ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfig) *AuthorityConfigSubjectConfig {
		return &v
	}).(AuthorityConfigSubjectConfigPtrOutput)
}

// The common name of the distinguished name.
func (o AuthorityConfigSubjectConfigOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfig) string { return v.CommonName }).(pulumi.StringOutput)
}

// Contains distinguished name fields such as the location and organization.
// Structure is documented below.
func (o AuthorityConfigSubjectConfigOutput) Subject() AuthorityConfigSubjectConfigSubjectOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfig) AuthorityConfigSubjectConfigSubject { return v.Subject }).(AuthorityConfigSubjectConfigSubjectOutput)
}

// The subject alternative name fields.
// Structure is documented below.
func (o AuthorityConfigSubjectConfigOutput) SubjectAltName() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfig) *AuthorityConfigSubjectConfigSubjectAltName {
		return v.SubjectAltName
	}).(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput)
}

type AuthorityConfigSubjectConfigPtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfig)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigPtrOutput) ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigPtrOutput) ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigPtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigPtrOutput) Elem() AuthorityConfigSubjectConfigOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfig) AuthorityConfigSubjectConfig { return *v }).(AuthorityConfigSubjectConfigOutput)
}

// The common name of the distinguished name.
func (o AuthorityConfigSubjectConfigPtrOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CommonName
	}).(pulumi.StringPtrOutput)
}

// Contains distinguished name fields such as the location and organization.
// Structure is documented below.
func (o AuthorityConfigSubjectConfigPtrOutput) Subject() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfig) *AuthorityConfigSubjectConfigSubject {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(AuthorityConfigSubjectConfigSubjectPtrOutput)
}

// The subject alternative name fields.
// Structure is documented below.
func (o AuthorityConfigSubjectConfigPtrOutput) SubjectAltName() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfig) *AuthorityConfigSubjectConfigSubjectAltName {
		if v == nil {
			return nil
		}
		return v.SubjectAltName
	}).(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput)
}

type AuthorityConfigSubjectConfigSubject struct {
	// The country code of the subject.
	CountryCode *string `pulumi:"countryCode"`
	// The locality or city of the subject.
	Locality *string `pulumi:"locality"`
	// The organization of the subject.
	Organization string `pulumi:"organization"`
	// The organizational unit of the subject.
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// The postal code of the subject.
	PostalCode *string `pulumi:"postalCode"`
	// The province, territory, or regional state of the subject.
	Province *string `pulumi:"province"`
	// The street address of the subject.
	StreetAddress *string `pulumi:"streetAddress"`
}

// AuthorityConfigSubjectConfigSubjectInput is an input type that accepts AuthorityConfigSubjectConfigSubjectArgs and AuthorityConfigSubjectConfigSubjectOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigSubjectInput` via:
//
//          AuthorityConfigSubjectConfigSubjectArgs{...}
type AuthorityConfigSubjectConfigSubjectInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigSubjectOutput() AuthorityConfigSubjectConfigSubjectOutput
	ToAuthorityConfigSubjectConfigSubjectOutputWithContext(context.Context) AuthorityConfigSubjectConfigSubjectOutput
}

type AuthorityConfigSubjectConfigSubjectArgs struct {
	// The country code of the subject.
	CountryCode pulumi.StringPtrInput `pulumi:"countryCode"`
	// The locality or city of the subject.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// The organization of the subject.
	Organization pulumi.StringInput `pulumi:"organization"`
	// The organizational unit of the subject.
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// The postal code of the subject.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The province, territory, or regional state of the subject.
	Province pulumi.StringPtrInput `pulumi:"province"`
	// The street address of the subject.
	StreetAddress pulumi.StringPtrInput `pulumi:"streetAddress"`
}

func (AuthorityConfigSubjectConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (i AuthorityConfigSubjectConfigSubjectArgs) ToAuthorityConfigSubjectConfigSubjectOutput() AuthorityConfigSubjectConfigSubjectOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigSubjectArgs) ToAuthorityConfigSubjectConfigSubjectOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectOutput)
}

func (i AuthorityConfigSubjectConfigSubjectArgs) ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigSubjectArgs) ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectOutput).ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx)
}

// AuthorityConfigSubjectConfigSubjectPtrInput is an input type that accepts AuthorityConfigSubjectConfigSubjectArgs, AuthorityConfigSubjectConfigSubjectPtr and AuthorityConfigSubjectConfigSubjectPtrOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigSubjectPtrInput` via:
//
//          AuthorityConfigSubjectConfigSubjectArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigSubjectConfigSubjectPtrInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput
	ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput
}

type authorityConfigSubjectConfigSubjectPtrType AuthorityConfigSubjectConfigSubjectArgs

func AuthorityConfigSubjectConfigSubjectPtr(v *AuthorityConfigSubjectConfigSubjectArgs) AuthorityConfigSubjectConfigSubjectPtrInput {
	return (*authorityConfigSubjectConfigSubjectPtrType)(v)
}

func (*authorityConfigSubjectConfigSubjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (i *authorityConfigSubjectConfigSubjectPtrType) ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(context.Background())
}

func (i *authorityConfigSubjectConfigSubjectPtrType) ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectPtrOutput)
}

type AuthorityConfigSubjectConfigSubjectOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigSubjectOutput) ToAuthorityConfigSubjectConfigSubjectOutput() AuthorityConfigSubjectConfigSubjectOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectOutput) ToAuthorityConfigSubjectConfigSubjectOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectOutput) ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o.ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(context.Background())
}

func (o AuthorityConfigSubjectConfigSubjectOutput) ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *AuthorityConfigSubjectConfigSubject {
		return &v
	}).(AuthorityConfigSubjectConfigSubjectPtrOutput)
}

// The country code of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

// The locality or city of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// The organization of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) string { return v.Organization }).(pulumi.StringOutput)
}

// The organizational unit of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// The postal code of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The province, territory, or regional state of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.Province }).(pulumi.StringPtrOutput)
}

// The street address of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) StreetAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.StreetAddress }).(pulumi.StringPtrOutput)
}

type AuthorityConfigSubjectConfigSubjectPtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigSubjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigSubjectPtrOutput) ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectPtrOutput) ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectPtrOutput) Elem() AuthorityConfigSubjectConfigSubjectOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) AuthorityConfigSubjectConfigSubject { return *v }).(AuthorityConfigSubjectConfigSubjectOutput)
}

// The country code of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(pulumi.StringPtrOutput)
}

// The locality or city of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Locality
	}).(pulumi.StringPtrOutput)
}

// The organization of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return &v.Organization
	}).(pulumi.StringPtrOutput)
}

// The organizational unit of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnit
	}).(pulumi.StringPtrOutput)
}

// The postal code of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The province, territory, or regional state of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Province
	}).(pulumi.StringPtrOutput)
}

// The street address of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) StreetAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress
	}).(pulumi.StringPtrOutput)
}

type AuthorityConfigSubjectConfigSubjectAltName struct {
	// Contains only valid, fully-qualified host names.
	DnsNames []string `pulumi:"dnsNames"`
	// Contains only valid RFC 2822 E-mail addresses.
	EmailAddresses []string `pulumi:"emailAddresses"`
	// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// Contains only valid RFC 3986 URIs.
	Uris []string `pulumi:"uris"`
}

// AuthorityConfigSubjectConfigSubjectAltNameInput is an input type that accepts AuthorityConfigSubjectConfigSubjectAltNameArgs and AuthorityConfigSubjectConfigSubjectAltNameOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigSubjectAltNameInput` via:
//
//          AuthorityConfigSubjectConfigSubjectAltNameArgs{...}
type AuthorityConfigSubjectConfigSubjectAltNameInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigSubjectAltNameOutput() AuthorityConfigSubjectConfigSubjectAltNameOutput
	ToAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(context.Context) AuthorityConfigSubjectConfigSubjectAltNameOutput
}

type AuthorityConfigSubjectConfigSubjectAltNameArgs struct {
	// Contains only valid, fully-qualified host names.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// Contains only valid RFC 2822 E-mail addresses.
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// Contains only valid RFC 3986 URIs.
	Uris pulumi.StringArrayInput `pulumi:"uris"`
}

func (AuthorityConfigSubjectConfigSubjectAltNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (i AuthorityConfigSubjectConfigSubjectAltNameArgs) ToAuthorityConfigSubjectConfigSubjectAltNameOutput() AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigSubjectAltNameArgs) ToAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectAltNameOutput)
}

func (i AuthorityConfigSubjectConfigSubjectAltNameArgs) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigSubjectAltNameArgs) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectAltNameOutput).ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx)
}

// AuthorityConfigSubjectConfigSubjectAltNamePtrInput is an input type that accepts AuthorityConfigSubjectConfigSubjectAltNameArgs, AuthorityConfigSubjectConfigSubjectAltNamePtr and AuthorityConfigSubjectConfigSubjectAltNamePtrOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigSubjectAltNamePtrInput` via:
//
//          AuthorityConfigSubjectConfigSubjectAltNameArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigSubjectConfigSubjectAltNamePtrInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput
	ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput
}

type authorityConfigSubjectConfigSubjectAltNamePtrType AuthorityConfigSubjectConfigSubjectAltNameArgs

func AuthorityConfigSubjectConfigSubjectAltNamePtr(v *AuthorityConfigSubjectConfigSubjectAltNameArgs) AuthorityConfigSubjectConfigSubjectAltNamePtrInput {
	return (*authorityConfigSubjectConfigSubjectAltNamePtrType)(v)
}

func (*authorityConfigSubjectConfigSubjectAltNamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (i *authorityConfigSubjectConfigSubjectAltNamePtrType) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Background())
}

func (i *authorityConfigSubjectConfigSubjectAltNamePtrType) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput)
}

type AuthorityConfigSubjectConfigSubjectAltNameOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigSubjectAltNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) ToAuthorityConfigSubjectConfigSubjectAltNameOutput() AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) ToAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Background())
}

func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubjectAltName) *AuthorityConfigSubjectConfigSubjectAltName {
		return &v
	}).(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput)
}

// Contains only valid, fully-qualified host names.
func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubjectAltName) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 2822 E-mail addresses.
func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubjectAltName) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubjectAltName) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 3986 URIs.
func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubjectAltName) []string { return v.Uris }).(pulumi.StringArrayOutput)
}

type AuthorityConfigSubjectConfigSubjectAltNamePtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) Elem() AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) AuthorityConfigSubjectConfigSubjectAltName {
		return *v
	}).(AuthorityConfigSubjectConfigSubjectAltNameOutput)
}

// Contains only valid, fully-qualified host names.
func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 2822 E-mail addresses.
func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.EmailAddresses
	}).(pulumi.StringArrayOutput)
}

// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 3986 URIs.
func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.Uris
	}).(pulumi.StringArrayOutput)
}

type AuthorityIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// AuthorityIamBindingConditionInput is an input type that accepts AuthorityIamBindingConditionArgs and AuthorityIamBindingConditionOutput values.
// You can construct a concrete instance of `AuthorityIamBindingConditionInput` via:
//
//          AuthorityIamBindingConditionArgs{...}
type AuthorityIamBindingConditionInput interface {
	pulumi.Input

	ToAuthorityIamBindingConditionOutput() AuthorityIamBindingConditionOutput
	ToAuthorityIamBindingConditionOutputWithContext(context.Context) AuthorityIamBindingConditionOutput
}

type AuthorityIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (AuthorityIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityIamBindingCondition)(nil)).Elem()
}

func (i AuthorityIamBindingConditionArgs) ToAuthorityIamBindingConditionOutput() AuthorityIamBindingConditionOutput {
	return i.ToAuthorityIamBindingConditionOutputWithContext(context.Background())
}

func (i AuthorityIamBindingConditionArgs) ToAuthorityIamBindingConditionOutputWithContext(ctx context.Context) AuthorityIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityIamBindingConditionOutput)
}

func (i AuthorityIamBindingConditionArgs) ToAuthorityIamBindingConditionPtrOutput() AuthorityIamBindingConditionPtrOutput {
	return i.ToAuthorityIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i AuthorityIamBindingConditionArgs) ToAuthorityIamBindingConditionPtrOutputWithContext(ctx context.Context) AuthorityIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityIamBindingConditionOutput).ToAuthorityIamBindingConditionPtrOutputWithContext(ctx)
}

// AuthorityIamBindingConditionPtrInput is an input type that accepts AuthorityIamBindingConditionArgs, AuthorityIamBindingConditionPtr and AuthorityIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `AuthorityIamBindingConditionPtrInput` via:
//
//          AuthorityIamBindingConditionArgs{...}
//
//  or:
//
//          nil
type AuthorityIamBindingConditionPtrInput interface {
	pulumi.Input

	ToAuthorityIamBindingConditionPtrOutput() AuthorityIamBindingConditionPtrOutput
	ToAuthorityIamBindingConditionPtrOutputWithContext(context.Context) AuthorityIamBindingConditionPtrOutput
}

type authorityIamBindingConditionPtrType AuthorityIamBindingConditionArgs

func AuthorityIamBindingConditionPtr(v *AuthorityIamBindingConditionArgs) AuthorityIamBindingConditionPtrInput {
	return (*authorityIamBindingConditionPtrType)(v)
}

func (*authorityIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityIamBindingCondition)(nil)).Elem()
}

func (i *authorityIamBindingConditionPtrType) ToAuthorityIamBindingConditionPtrOutput() AuthorityIamBindingConditionPtrOutput {
	return i.ToAuthorityIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *authorityIamBindingConditionPtrType) ToAuthorityIamBindingConditionPtrOutputWithContext(ctx context.Context) AuthorityIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityIamBindingConditionPtrOutput)
}

type AuthorityIamBindingConditionOutput struct{ *pulumi.OutputState }

func (AuthorityIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityIamBindingCondition)(nil)).Elem()
}

func (o AuthorityIamBindingConditionOutput) ToAuthorityIamBindingConditionOutput() AuthorityIamBindingConditionOutput {
	return o
}

func (o AuthorityIamBindingConditionOutput) ToAuthorityIamBindingConditionOutputWithContext(ctx context.Context) AuthorityIamBindingConditionOutput {
	return o
}

func (o AuthorityIamBindingConditionOutput) ToAuthorityIamBindingConditionPtrOutput() AuthorityIamBindingConditionPtrOutput {
	return o.ToAuthorityIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o AuthorityIamBindingConditionOutput) ToAuthorityIamBindingConditionPtrOutputWithContext(ctx context.Context) AuthorityIamBindingConditionPtrOutput {
	return o.ApplyT(func(v AuthorityIamBindingCondition) *AuthorityIamBindingCondition {
		return &v
	}).(AuthorityIamBindingConditionPtrOutput)
}
func (o AuthorityIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AuthorityIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AuthorityIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type AuthorityIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (AuthorityIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityIamBindingCondition)(nil)).Elem()
}

func (o AuthorityIamBindingConditionPtrOutput) ToAuthorityIamBindingConditionPtrOutput() AuthorityIamBindingConditionPtrOutput {
	return o
}

func (o AuthorityIamBindingConditionPtrOutput) ToAuthorityIamBindingConditionPtrOutputWithContext(ctx context.Context) AuthorityIamBindingConditionPtrOutput {
	return o
}

func (o AuthorityIamBindingConditionPtrOutput) Elem() AuthorityIamBindingConditionOutput {
	return o.ApplyT(func(v *AuthorityIamBindingCondition) AuthorityIamBindingCondition { return *v }).(AuthorityIamBindingConditionOutput)
}

func (o AuthorityIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o AuthorityIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o AuthorityIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AuthorityIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// AuthorityIamMemberConditionInput is an input type that accepts AuthorityIamMemberConditionArgs and AuthorityIamMemberConditionOutput values.
// You can construct a concrete instance of `AuthorityIamMemberConditionInput` via:
//
//          AuthorityIamMemberConditionArgs{...}
type AuthorityIamMemberConditionInput interface {
	pulumi.Input

	ToAuthorityIamMemberConditionOutput() AuthorityIamMemberConditionOutput
	ToAuthorityIamMemberConditionOutputWithContext(context.Context) AuthorityIamMemberConditionOutput
}

type AuthorityIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (AuthorityIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityIamMemberCondition)(nil)).Elem()
}

func (i AuthorityIamMemberConditionArgs) ToAuthorityIamMemberConditionOutput() AuthorityIamMemberConditionOutput {
	return i.ToAuthorityIamMemberConditionOutputWithContext(context.Background())
}

func (i AuthorityIamMemberConditionArgs) ToAuthorityIamMemberConditionOutputWithContext(ctx context.Context) AuthorityIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityIamMemberConditionOutput)
}

func (i AuthorityIamMemberConditionArgs) ToAuthorityIamMemberConditionPtrOutput() AuthorityIamMemberConditionPtrOutput {
	return i.ToAuthorityIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i AuthorityIamMemberConditionArgs) ToAuthorityIamMemberConditionPtrOutputWithContext(ctx context.Context) AuthorityIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityIamMemberConditionOutput).ToAuthorityIamMemberConditionPtrOutputWithContext(ctx)
}

// AuthorityIamMemberConditionPtrInput is an input type that accepts AuthorityIamMemberConditionArgs, AuthorityIamMemberConditionPtr and AuthorityIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `AuthorityIamMemberConditionPtrInput` via:
//
//          AuthorityIamMemberConditionArgs{...}
//
//  or:
//
//          nil
type AuthorityIamMemberConditionPtrInput interface {
	pulumi.Input

	ToAuthorityIamMemberConditionPtrOutput() AuthorityIamMemberConditionPtrOutput
	ToAuthorityIamMemberConditionPtrOutputWithContext(context.Context) AuthorityIamMemberConditionPtrOutput
}

type authorityIamMemberConditionPtrType AuthorityIamMemberConditionArgs

func AuthorityIamMemberConditionPtr(v *AuthorityIamMemberConditionArgs) AuthorityIamMemberConditionPtrInput {
	return (*authorityIamMemberConditionPtrType)(v)
}

func (*authorityIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityIamMemberCondition)(nil)).Elem()
}

func (i *authorityIamMemberConditionPtrType) ToAuthorityIamMemberConditionPtrOutput() AuthorityIamMemberConditionPtrOutput {
	return i.ToAuthorityIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *authorityIamMemberConditionPtrType) ToAuthorityIamMemberConditionPtrOutputWithContext(ctx context.Context) AuthorityIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityIamMemberConditionPtrOutput)
}

type AuthorityIamMemberConditionOutput struct{ *pulumi.OutputState }

func (AuthorityIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityIamMemberCondition)(nil)).Elem()
}

func (o AuthorityIamMemberConditionOutput) ToAuthorityIamMemberConditionOutput() AuthorityIamMemberConditionOutput {
	return o
}

func (o AuthorityIamMemberConditionOutput) ToAuthorityIamMemberConditionOutputWithContext(ctx context.Context) AuthorityIamMemberConditionOutput {
	return o
}

func (o AuthorityIamMemberConditionOutput) ToAuthorityIamMemberConditionPtrOutput() AuthorityIamMemberConditionPtrOutput {
	return o.ToAuthorityIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o AuthorityIamMemberConditionOutput) ToAuthorityIamMemberConditionPtrOutputWithContext(ctx context.Context) AuthorityIamMemberConditionPtrOutput {
	return o.ApplyT(func(v AuthorityIamMemberCondition) *AuthorityIamMemberCondition {
		return &v
	}).(AuthorityIamMemberConditionPtrOutput)
}
func (o AuthorityIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AuthorityIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o AuthorityIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type AuthorityIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (AuthorityIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityIamMemberCondition)(nil)).Elem()
}

func (o AuthorityIamMemberConditionPtrOutput) ToAuthorityIamMemberConditionPtrOutput() AuthorityIamMemberConditionPtrOutput {
	return o
}

func (o AuthorityIamMemberConditionPtrOutput) ToAuthorityIamMemberConditionPtrOutputWithContext(ctx context.Context) AuthorityIamMemberConditionPtrOutput {
	return o
}

func (o AuthorityIamMemberConditionPtrOutput) Elem() AuthorityIamMemberConditionOutput {
	return o.ApplyT(func(v *AuthorityIamMemberCondition) AuthorityIamMemberCondition { return *v }).(AuthorityIamMemberConditionOutput)
}

func (o AuthorityIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o AuthorityIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o AuthorityIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type AuthorityIssuingOptions struct {
	// When true, includes a URL to the issuing CA certificate in the "authority
	// information access" X.509 extension.
	IncludeCaCertUrl *bool `pulumi:"includeCaCertUrl"`
	// When true, includes a URL to the CRL corresponding to certificates issued from a
	// CertificateAuthority. CRLs will expire 7 days from their creation. However, we will
	// rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked.
	IncludeCrlAccessUrl *bool `pulumi:"includeCrlAccessUrl"`
}

// AuthorityIssuingOptionsInput is an input type that accepts AuthorityIssuingOptionsArgs and AuthorityIssuingOptionsOutput values.
// You can construct a concrete instance of `AuthorityIssuingOptionsInput` via:
//
//          AuthorityIssuingOptionsArgs{...}
type AuthorityIssuingOptionsInput interface {
	pulumi.Input

	ToAuthorityIssuingOptionsOutput() AuthorityIssuingOptionsOutput
	ToAuthorityIssuingOptionsOutputWithContext(context.Context) AuthorityIssuingOptionsOutput
}

type AuthorityIssuingOptionsArgs struct {
	// When true, includes a URL to the issuing CA certificate in the "authority
	// information access" X.509 extension.
	IncludeCaCertUrl pulumi.BoolPtrInput `pulumi:"includeCaCertUrl"`
	// When true, includes a URL to the CRL corresponding to certificates issued from a
	// CertificateAuthority. CRLs will expire 7 days from their creation. However, we will
	// rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked.
	IncludeCrlAccessUrl pulumi.BoolPtrInput `pulumi:"includeCrlAccessUrl"`
}

func (AuthorityIssuingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityIssuingOptions)(nil)).Elem()
}

func (i AuthorityIssuingOptionsArgs) ToAuthorityIssuingOptionsOutput() AuthorityIssuingOptionsOutput {
	return i.ToAuthorityIssuingOptionsOutputWithContext(context.Background())
}

func (i AuthorityIssuingOptionsArgs) ToAuthorityIssuingOptionsOutputWithContext(ctx context.Context) AuthorityIssuingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityIssuingOptionsOutput)
}

func (i AuthorityIssuingOptionsArgs) ToAuthorityIssuingOptionsPtrOutput() AuthorityIssuingOptionsPtrOutput {
	return i.ToAuthorityIssuingOptionsPtrOutputWithContext(context.Background())
}

func (i AuthorityIssuingOptionsArgs) ToAuthorityIssuingOptionsPtrOutputWithContext(ctx context.Context) AuthorityIssuingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityIssuingOptionsOutput).ToAuthorityIssuingOptionsPtrOutputWithContext(ctx)
}

// AuthorityIssuingOptionsPtrInput is an input type that accepts AuthorityIssuingOptionsArgs, AuthorityIssuingOptionsPtr and AuthorityIssuingOptionsPtrOutput values.
// You can construct a concrete instance of `AuthorityIssuingOptionsPtrInput` via:
//
//          AuthorityIssuingOptionsArgs{...}
//
//  or:
//
//          nil
type AuthorityIssuingOptionsPtrInput interface {
	pulumi.Input

	ToAuthorityIssuingOptionsPtrOutput() AuthorityIssuingOptionsPtrOutput
	ToAuthorityIssuingOptionsPtrOutputWithContext(context.Context) AuthorityIssuingOptionsPtrOutput
}

type authorityIssuingOptionsPtrType AuthorityIssuingOptionsArgs

func AuthorityIssuingOptionsPtr(v *AuthorityIssuingOptionsArgs) AuthorityIssuingOptionsPtrInput {
	return (*authorityIssuingOptionsPtrType)(v)
}

func (*authorityIssuingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityIssuingOptions)(nil)).Elem()
}

func (i *authorityIssuingOptionsPtrType) ToAuthorityIssuingOptionsPtrOutput() AuthorityIssuingOptionsPtrOutput {
	return i.ToAuthorityIssuingOptionsPtrOutputWithContext(context.Background())
}

func (i *authorityIssuingOptionsPtrType) ToAuthorityIssuingOptionsPtrOutputWithContext(ctx context.Context) AuthorityIssuingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityIssuingOptionsPtrOutput)
}

type AuthorityIssuingOptionsOutput struct{ *pulumi.OutputState }

func (AuthorityIssuingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityIssuingOptions)(nil)).Elem()
}

func (o AuthorityIssuingOptionsOutput) ToAuthorityIssuingOptionsOutput() AuthorityIssuingOptionsOutput {
	return o
}

func (o AuthorityIssuingOptionsOutput) ToAuthorityIssuingOptionsOutputWithContext(ctx context.Context) AuthorityIssuingOptionsOutput {
	return o
}

func (o AuthorityIssuingOptionsOutput) ToAuthorityIssuingOptionsPtrOutput() AuthorityIssuingOptionsPtrOutput {
	return o.ToAuthorityIssuingOptionsPtrOutputWithContext(context.Background())
}

func (o AuthorityIssuingOptionsOutput) ToAuthorityIssuingOptionsPtrOutputWithContext(ctx context.Context) AuthorityIssuingOptionsPtrOutput {
	return o.ApplyT(func(v AuthorityIssuingOptions) *AuthorityIssuingOptions {
		return &v
	}).(AuthorityIssuingOptionsPtrOutput)
}

// When true, includes a URL to the issuing CA certificate in the "authority
// information access" X.509 extension.
func (o AuthorityIssuingOptionsOutput) IncludeCaCertUrl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityIssuingOptions) *bool { return v.IncludeCaCertUrl }).(pulumi.BoolPtrOutput)
}

// When true, includes a URL to the CRL corresponding to certificates issued from a
// CertificateAuthority. CRLs will expire 7 days from their creation. However, we will
// rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked.
func (o AuthorityIssuingOptionsOutput) IncludeCrlAccessUrl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityIssuingOptions) *bool { return v.IncludeCrlAccessUrl }).(pulumi.BoolPtrOutput)
}

type AuthorityIssuingOptionsPtrOutput struct{ *pulumi.OutputState }

func (AuthorityIssuingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityIssuingOptions)(nil)).Elem()
}

func (o AuthorityIssuingOptionsPtrOutput) ToAuthorityIssuingOptionsPtrOutput() AuthorityIssuingOptionsPtrOutput {
	return o
}

func (o AuthorityIssuingOptionsPtrOutput) ToAuthorityIssuingOptionsPtrOutputWithContext(ctx context.Context) AuthorityIssuingOptionsPtrOutput {
	return o
}

func (o AuthorityIssuingOptionsPtrOutput) Elem() AuthorityIssuingOptionsOutput {
	return o.ApplyT(func(v *AuthorityIssuingOptions) AuthorityIssuingOptions { return *v }).(AuthorityIssuingOptionsOutput)
}

// When true, includes a URL to the issuing CA certificate in the "authority
// information access" X.509 extension.
func (o AuthorityIssuingOptionsPtrOutput) IncludeCaCertUrl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityIssuingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeCaCertUrl
	}).(pulumi.BoolPtrOutput)
}

// When true, includes a URL to the CRL corresponding to certificates issued from a
// CertificateAuthority. CRLs will expire 7 days from their creation. However, we will
// rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked.
func (o AuthorityIssuingOptionsPtrOutput) IncludeCrlAccessUrl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityIssuingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeCrlAccessUrl
	}).(pulumi.BoolPtrOutput)
}

type AuthorityKeySpec struct {
	// The algorithm to use for creating a managed Cloud KMS key for a for a simplified
	// experience. All managed keys will be have their ProtectionLevel as HSM.
	// Possible values are `SIGN_HASH_ALGORITHM_UNSPECIFIED`, `RSA_PSS_2048_SHA256`, `RSA_PSS_3072_SHA256`, `RSA_PSS_4096_SHA256`, `RSA_PKCS1_2048_SHA256`, `RSA_PKCS1_3072_SHA256`, `RSA_PKCS1_4096_SHA256`, `EC_P256_SHA256`, and `EC_P384_SHA384`.
	Algorithm *string `pulumi:"algorithm"`
	// The resource name for an existing Cloud KMS CryptoKeyVersion in the format
	// `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
	CloudKmsKeyVersion *string `pulumi:"cloudKmsKeyVersion"`
}

// AuthorityKeySpecInput is an input type that accepts AuthorityKeySpecArgs and AuthorityKeySpecOutput values.
// You can construct a concrete instance of `AuthorityKeySpecInput` via:
//
//          AuthorityKeySpecArgs{...}
type AuthorityKeySpecInput interface {
	pulumi.Input

	ToAuthorityKeySpecOutput() AuthorityKeySpecOutput
	ToAuthorityKeySpecOutputWithContext(context.Context) AuthorityKeySpecOutput
}

type AuthorityKeySpecArgs struct {
	// The algorithm to use for creating a managed Cloud KMS key for a for a simplified
	// experience. All managed keys will be have their ProtectionLevel as HSM.
	// Possible values are `SIGN_HASH_ALGORITHM_UNSPECIFIED`, `RSA_PSS_2048_SHA256`, `RSA_PSS_3072_SHA256`, `RSA_PSS_4096_SHA256`, `RSA_PKCS1_2048_SHA256`, `RSA_PKCS1_3072_SHA256`, `RSA_PKCS1_4096_SHA256`, `EC_P256_SHA256`, and `EC_P384_SHA384`.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// The resource name for an existing Cloud KMS CryptoKeyVersion in the format
	// `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
	CloudKmsKeyVersion pulumi.StringPtrInput `pulumi:"cloudKmsKeyVersion"`
}

func (AuthorityKeySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityKeySpec)(nil)).Elem()
}

func (i AuthorityKeySpecArgs) ToAuthorityKeySpecOutput() AuthorityKeySpecOutput {
	return i.ToAuthorityKeySpecOutputWithContext(context.Background())
}

func (i AuthorityKeySpecArgs) ToAuthorityKeySpecOutputWithContext(ctx context.Context) AuthorityKeySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityKeySpecOutput)
}

func (i AuthorityKeySpecArgs) ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput {
	return i.ToAuthorityKeySpecPtrOutputWithContext(context.Background())
}

func (i AuthorityKeySpecArgs) ToAuthorityKeySpecPtrOutputWithContext(ctx context.Context) AuthorityKeySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityKeySpecOutput).ToAuthorityKeySpecPtrOutputWithContext(ctx)
}

// AuthorityKeySpecPtrInput is an input type that accepts AuthorityKeySpecArgs, AuthorityKeySpecPtr and AuthorityKeySpecPtrOutput values.
// You can construct a concrete instance of `AuthorityKeySpecPtrInput` via:
//
//          AuthorityKeySpecArgs{...}
//
//  or:
//
//          nil
type AuthorityKeySpecPtrInput interface {
	pulumi.Input

	ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput
	ToAuthorityKeySpecPtrOutputWithContext(context.Context) AuthorityKeySpecPtrOutput
}

type authorityKeySpecPtrType AuthorityKeySpecArgs

func AuthorityKeySpecPtr(v *AuthorityKeySpecArgs) AuthorityKeySpecPtrInput {
	return (*authorityKeySpecPtrType)(v)
}

func (*authorityKeySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityKeySpec)(nil)).Elem()
}

func (i *authorityKeySpecPtrType) ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput {
	return i.ToAuthorityKeySpecPtrOutputWithContext(context.Background())
}

func (i *authorityKeySpecPtrType) ToAuthorityKeySpecPtrOutputWithContext(ctx context.Context) AuthorityKeySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityKeySpecPtrOutput)
}

type AuthorityKeySpecOutput struct{ *pulumi.OutputState }

func (AuthorityKeySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityKeySpec)(nil)).Elem()
}

func (o AuthorityKeySpecOutput) ToAuthorityKeySpecOutput() AuthorityKeySpecOutput {
	return o
}

func (o AuthorityKeySpecOutput) ToAuthorityKeySpecOutputWithContext(ctx context.Context) AuthorityKeySpecOutput {
	return o
}

func (o AuthorityKeySpecOutput) ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput {
	return o.ToAuthorityKeySpecPtrOutputWithContext(context.Background())
}

func (o AuthorityKeySpecOutput) ToAuthorityKeySpecPtrOutputWithContext(ctx context.Context) AuthorityKeySpecPtrOutput {
	return o.ApplyT(func(v AuthorityKeySpec) *AuthorityKeySpec {
		return &v
	}).(AuthorityKeySpecPtrOutput)
}

// The algorithm to use for creating a managed Cloud KMS key for a for a simplified
// experience. All managed keys will be have their ProtectionLevel as HSM.
// Possible values are `SIGN_HASH_ALGORITHM_UNSPECIFIED`, `RSA_PSS_2048_SHA256`, `RSA_PSS_3072_SHA256`, `RSA_PSS_4096_SHA256`, `RSA_PKCS1_2048_SHA256`, `RSA_PKCS1_3072_SHA256`, `RSA_PKCS1_4096_SHA256`, `EC_P256_SHA256`, and `EC_P384_SHA384`.
func (o AuthorityKeySpecOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityKeySpec) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// The resource name for an existing Cloud KMS CryptoKeyVersion in the format
// `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
func (o AuthorityKeySpecOutput) CloudKmsKeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityKeySpec) *string { return v.CloudKmsKeyVersion }).(pulumi.StringPtrOutput)
}

type AuthorityKeySpecPtrOutput struct{ *pulumi.OutputState }

func (AuthorityKeySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityKeySpec)(nil)).Elem()
}

func (o AuthorityKeySpecPtrOutput) ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput {
	return o
}

func (o AuthorityKeySpecPtrOutput) ToAuthorityKeySpecPtrOutputWithContext(ctx context.Context) AuthorityKeySpecPtrOutput {
	return o
}

func (o AuthorityKeySpecPtrOutput) Elem() AuthorityKeySpecOutput {
	return o.ApplyT(func(v *AuthorityKeySpec) AuthorityKeySpec { return *v }).(AuthorityKeySpecOutput)
}

// The algorithm to use for creating a managed Cloud KMS key for a for a simplified
// experience. All managed keys will be have their ProtectionLevel as HSM.
// Possible values are `SIGN_HASH_ALGORITHM_UNSPECIFIED`, `RSA_PSS_2048_SHA256`, `RSA_PSS_3072_SHA256`, `RSA_PSS_4096_SHA256`, `RSA_PKCS1_2048_SHA256`, `RSA_PKCS1_3072_SHA256`, `RSA_PKCS1_4096_SHA256`, `EC_P256_SHA256`, and `EC_P384_SHA384`.
func (o AuthorityKeySpecPtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityKeySpec) *string {
		if v == nil {
			return nil
		}
		return v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// The resource name for an existing Cloud KMS CryptoKeyVersion in the format
// `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
func (o AuthorityKeySpecPtrOutput) CloudKmsKeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityKeySpec) *string {
		if v == nil {
			return nil
		}
		return v.CloudKmsKeyVersion
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthorityAccessUrlOutput{})
	pulumi.RegisterOutputType(AuthorityAccessUrlArrayOutput{})
	pulumi.RegisterOutputType(AuthorityConfigOutput{})
	pulumi.RegisterOutputType(AuthorityConfigPtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigReusableConfigOutput{})
	pulumi.RegisterOutputType(AuthorityConfigReusableConfigPtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigPtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigSubjectOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigSubjectPtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigSubjectAltNameOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput{})
	pulumi.RegisterOutputType(AuthorityIamBindingConditionOutput{})
	pulumi.RegisterOutputType(AuthorityIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(AuthorityIamMemberConditionOutput{})
	pulumi.RegisterOutputType(AuthorityIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(AuthorityIssuingOptionsOutput{})
	pulumi.RegisterOutputType(AuthorityIssuingOptionsPtrOutput{})
	pulumi.RegisterOutputType(AuthorityKeySpecOutput{})
	pulumi.RegisterOutputType(AuthorityKeySpecPtrOutput{})
}
