// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package certificateauthority

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AuthorityAccessUrl struct {
	CaCertificateAccessUrl *string  `pulumi:"caCertificateAccessUrl"`
	CrlAccessUrls          []string `pulumi:"crlAccessUrls"`
}

// AuthorityAccessUrlInput is an input type that accepts AuthorityAccessUrlArgs and AuthorityAccessUrlOutput values.
// You can construct a concrete instance of `AuthorityAccessUrlInput` via:
//
//          AuthorityAccessUrlArgs{...}
type AuthorityAccessUrlInput interface {
	pulumi.Input

	ToAuthorityAccessUrlOutput() AuthorityAccessUrlOutput
	ToAuthorityAccessUrlOutputWithContext(context.Context) AuthorityAccessUrlOutput
}

type AuthorityAccessUrlArgs struct {
	CaCertificateAccessUrl pulumi.StringPtrInput   `pulumi:"caCertificateAccessUrl"`
	CrlAccessUrls          pulumi.StringArrayInput `pulumi:"crlAccessUrls"`
}

func (AuthorityAccessUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityAccessUrl)(nil)).Elem()
}

func (i AuthorityAccessUrlArgs) ToAuthorityAccessUrlOutput() AuthorityAccessUrlOutput {
	return i.ToAuthorityAccessUrlOutputWithContext(context.Background())
}

func (i AuthorityAccessUrlArgs) ToAuthorityAccessUrlOutputWithContext(ctx context.Context) AuthorityAccessUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityAccessUrlOutput)
}

// AuthorityAccessUrlArrayInput is an input type that accepts AuthorityAccessUrlArray and AuthorityAccessUrlArrayOutput values.
// You can construct a concrete instance of `AuthorityAccessUrlArrayInput` via:
//
//          AuthorityAccessUrlArray{ AuthorityAccessUrlArgs{...} }
type AuthorityAccessUrlArrayInput interface {
	pulumi.Input

	ToAuthorityAccessUrlArrayOutput() AuthorityAccessUrlArrayOutput
	ToAuthorityAccessUrlArrayOutputWithContext(context.Context) AuthorityAccessUrlArrayOutput
}

type AuthorityAccessUrlArray []AuthorityAccessUrlInput

func (AuthorityAccessUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityAccessUrl)(nil)).Elem()
}

func (i AuthorityAccessUrlArray) ToAuthorityAccessUrlArrayOutput() AuthorityAccessUrlArrayOutput {
	return i.ToAuthorityAccessUrlArrayOutputWithContext(context.Background())
}

func (i AuthorityAccessUrlArray) ToAuthorityAccessUrlArrayOutputWithContext(ctx context.Context) AuthorityAccessUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityAccessUrlArrayOutput)
}

type AuthorityAccessUrlOutput struct{ *pulumi.OutputState }

func (AuthorityAccessUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityAccessUrl)(nil)).Elem()
}

func (o AuthorityAccessUrlOutput) ToAuthorityAccessUrlOutput() AuthorityAccessUrlOutput {
	return o
}

func (o AuthorityAccessUrlOutput) ToAuthorityAccessUrlOutputWithContext(ctx context.Context) AuthorityAccessUrlOutput {
	return o
}

func (o AuthorityAccessUrlOutput) CaCertificateAccessUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityAccessUrl) *string { return v.CaCertificateAccessUrl }).(pulumi.StringPtrOutput)
}

func (o AuthorityAccessUrlOutput) CrlAccessUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityAccessUrl) []string { return v.CrlAccessUrls }).(pulumi.StringArrayOutput)
}

type AuthorityAccessUrlArrayOutput struct{ *pulumi.OutputState }

func (AuthorityAccessUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityAccessUrl)(nil)).Elem()
}

func (o AuthorityAccessUrlArrayOutput) ToAuthorityAccessUrlArrayOutput() AuthorityAccessUrlArrayOutput {
	return o
}

func (o AuthorityAccessUrlArrayOutput) ToAuthorityAccessUrlArrayOutputWithContext(ctx context.Context) AuthorityAccessUrlArrayOutput {
	return o
}

func (o AuthorityAccessUrlArrayOutput) Index(i pulumi.IntInput) AuthorityAccessUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorityAccessUrl {
		return vs[0].([]AuthorityAccessUrl)[vs[1].(int)]
	}).(AuthorityAccessUrlOutput)
}

type AuthorityConfig struct {
	// Specifies some of the values in a certificate that are related to the subject.
	// Structure is documented below.
	SubjectConfig AuthorityConfigSubjectConfig `pulumi:"subjectConfig"`
	// Describes how some of the technical X.509 fields in a certificate should be populated.
	// Structure is documented below.
	X509Config AuthorityConfigX509Config `pulumi:"x509Config"`
}

// AuthorityConfigInput is an input type that accepts AuthorityConfigArgs and AuthorityConfigOutput values.
// You can construct a concrete instance of `AuthorityConfigInput` via:
//
//          AuthorityConfigArgs{...}
type AuthorityConfigInput interface {
	pulumi.Input

	ToAuthorityConfigOutput() AuthorityConfigOutput
	ToAuthorityConfigOutputWithContext(context.Context) AuthorityConfigOutput
}

type AuthorityConfigArgs struct {
	// Specifies some of the values in a certificate that are related to the subject.
	// Structure is documented below.
	SubjectConfig AuthorityConfigSubjectConfigInput `pulumi:"subjectConfig"`
	// Describes how some of the technical X.509 fields in a certificate should be populated.
	// Structure is documented below.
	X509Config AuthorityConfigX509ConfigInput `pulumi:"x509Config"`
}

func (AuthorityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfig)(nil)).Elem()
}

func (i AuthorityConfigArgs) ToAuthorityConfigOutput() AuthorityConfigOutput {
	return i.ToAuthorityConfigOutputWithContext(context.Background())
}

func (i AuthorityConfigArgs) ToAuthorityConfigOutputWithContext(ctx context.Context) AuthorityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigOutput)
}

func (i AuthorityConfigArgs) ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput {
	return i.ToAuthorityConfigPtrOutputWithContext(context.Background())
}

func (i AuthorityConfigArgs) ToAuthorityConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigOutput).ToAuthorityConfigPtrOutputWithContext(ctx)
}

// AuthorityConfigPtrInput is an input type that accepts AuthorityConfigArgs, AuthorityConfigPtr and AuthorityConfigPtrOutput values.
// You can construct a concrete instance of `AuthorityConfigPtrInput` via:
//
//          AuthorityConfigArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigPtrInput interface {
	pulumi.Input

	ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput
	ToAuthorityConfigPtrOutputWithContext(context.Context) AuthorityConfigPtrOutput
}

type authorityConfigPtrType AuthorityConfigArgs

func AuthorityConfigPtr(v *AuthorityConfigArgs) AuthorityConfigPtrInput {
	return (*authorityConfigPtrType)(v)
}

func (*authorityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfig)(nil)).Elem()
}

func (i *authorityConfigPtrType) ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput {
	return i.ToAuthorityConfigPtrOutputWithContext(context.Background())
}

func (i *authorityConfigPtrType) ToAuthorityConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigPtrOutput)
}

type AuthorityConfigOutput struct{ *pulumi.OutputState }

func (AuthorityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfig)(nil)).Elem()
}

func (o AuthorityConfigOutput) ToAuthorityConfigOutput() AuthorityConfigOutput {
	return o
}

func (o AuthorityConfigOutput) ToAuthorityConfigOutputWithContext(ctx context.Context) AuthorityConfigOutput {
	return o
}

func (o AuthorityConfigOutput) ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput {
	return o.ToAuthorityConfigPtrOutputWithContext(context.Background())
}

func (o AuthorityConfigOutput) ToAuthorityConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityConfig) *AuthorityConfig {
		return &v
	}).(AuthorityConfigPtrOutput)
}

// Specifies some of the values in a certificate that are related to the subject.
// Structure is documented below.
func (o AuthorityConfigOutput) SubjectConfig() AuthorityConfigSubjectConfigOutput {
	return o.ApplyT(func(v AuthorityConfig) AuthorityConfigSubjectConfig { return v.SubjectConfig }).(AuthorityConfigSubjectConfigOutput)
}

// Describes how some of the technical X.509 fields in a certificate should be populated.
// Structure is documented below.
func (o AuthorityConfigOutput) X509Config() AuthorityConfigX509ConfigOutput {
	return o.ApplyT(func(v AuthorityConfig) AuthorityConfigX509Config { return v.X509Config }).(AuthorityConfigX509ConfigOutput)
}

type AuthorityConfigPtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfig)(nil)).Elem()
}

func (o AuthorityConfigPtrOutput) ToAuthorityConfigPtrOutput() AuthorityConfigPtrOutput {
	return o
}

func (o AuthorityConfigPtrOutput) ToAuthorityConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigPtrOutput {
	return o
}

func (o AuthorityConfigPtrOutput) Elem() AuthorityConfigOutput {
	return o.ApplyT(func(v *AuthorityConfig) AuthorityConfig {
		if v != nil {
			return *v
		}
		var ret AuthorityConfig
		return ret
	}).(AuthorityConfigOutput)
}

// Specifies some of the values in a certificate that are related to the subject.
// Structure is documented below.
func (o AuthorityConfigPtrOutput) SubjectConfig() AuthorityConfigSubjectConfigPtrOutput {
	return o.ApplyT(func(v *AuthorityConfig) *AuthorityConfigSubjectConfig {
		if v == nil {
			return nil
		}
		return &v.SubjectConfig
	}).(AuthorityConfigSubjectConfigPtrOutput)
}

// Describes how some of the technical X.509 fields in a certificate should be populated.
// Structure is documented below.
func (o AuthorityConfigPtrOutput) X509Config() AuthorityConfigX509ConfigPtrOutput {
	return o.ApplyT(func(v *AuthorityConfig) *AuthorityConfigX509Config {
		if v == nil {
			return nil
		}
		return &v.X509Config
	}).(AuthorityConfigX509ConfigPtrOutput)
}

type AuthorityConfigSubjectConfig struct {
	// Contains distinguished name fields such as the location and organization.
	// Structure is documented below.
	Subject AuthorityConfigSubjectConfigSubject `pulumi:"subject"`
	// The subject alternative name fields.
	// Structure is documented below.
	SubjectAltName *AuthorityConfigSubjectConfigSubjectAltName `pulumi:"subjectAltName"`
}

// AuthorityConfigSubjectConfigInput is an input type that accepts AuthorityConfigSubjectConfigArgs and AuthorityConfigSubjectConfigOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigInput` via:
//
//          AuthorityConfigSubjectConfigArgs{...}
type AuthorityConfigSubjectConfigInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigOutput() AuthorityConfigSubjectConfigOutput
	ToAuthorityConfigSubjectConfigOutputWithContext(context.Context) AuthorityConfigSubjectConfigOutput
}

type AuthorityConfigSubjectConfigArgs struct {
	// Contains distinguished name fields such as the location and organization.
	// Structure is documented below.
	Subject AuthorityConfigSubjectConfigSubjectInput `pulumi:"subject"`
	// The subject alternative name fields.
	// Structure is documented below.
	SubjectAltName AuthorityConfigSubjectConfigSubjectAltNamePtrInput `pulumi:"subjectAltName"`
}

func (AuthorityConfigSubjectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfig)(nil)).Elem()
}

func (i AuthorityConfigSubjectConfigArgs) ToAuthorityConfigSubjectConfigOutput() AuthorityConfigSubjectConfigOutput {
	return i.ToAuthorityConfigSubjectConfigOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigArgs) ToAuthorityConfigSubjectConfigOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigOutput)
}

func (i AuthorityConfigSubjectConfigArgs) ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput {
	return i.ToAuthorityConfigSubjectConfigPtrOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigArgs) ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigOutput).ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx)
}

// AuthorityConfigSubjectConfigPtrInput is an input type that accepts AuthorityConfigSubjectConfigArgs, AuthorityConfigSubjectConfigPtr and AuthorityConfigSubjectConfigPtrOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigPtrInput` via:
//
//          AuthorityConfigSubjectConfigArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigSubjectConfigPtrInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput
	ToAuthorityConfigSubjectConfigPtrOutputWithContext(context.Context) AuthorityConfigSubjectConfigPtrOutput
}

type authorityConfigSubjectConfigPtrType AuthorityConfigSubjectConfigArgs

func AuthorityConfigSubjectConfigPtr(v *AuthorityConfigSubjectConfigArgs) AuthorityConfigSubjectConfigPtrInput {
	return (*authorityConfigSubjectConfigPtrType)(v)
}

func (*authorityConfigSubjectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfig)(nil)).Elem()
}

func (i *authorityConfigSubjectConfigPtrType) ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput {
	return i.ToAuthorityConfigSubjectConfigPtrOutputWithContext(context.Background())
}

func (i *authorityConfigSubjectConfigPtrType) ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigPtrOutput)
}

type AuthorityConfigSubjectConfigOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfig)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigOutput) ToAuthorityConfigSubjectConfigOutput() AuthorityConfigSubjectConfigOutput {
	return o
}

func (o AuthorityConfigSubjectConfigOutput) ToAuthorityConfigSubjectConfigOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigOutput {
	return o
}

func (o AuthorityConfigSubjectConfigOutput) ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput {
	return o.ToAuthorityConfigSubjectConfigPtrOutputWithContext(context.Background())
}

func (o AuthorityConfigSubjectConfigOutput) ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityConfigSubjectConfig) *AuthorityConfigSubjectConfig {
		return &v
	}).(AuthorityConfigSubjectConfigPtrOutput)
}

// Contains distinguished name fields such as the location and organization.
// Structure is documented below.
func (o AuthorityConfigSubjectConfigOutput) Subject() AuthorityConfigSubjectConfigSubjectOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfig) AuthorityConfigSubjectConfigSubject { return v.Subject }).(AuthorityConfigSubjectConfigSubjectOutput)
}

// The subject alternative name fields.
// Structure is documented below.
func (o AuthorityConfigSubjectConfigOutput) SubjectAltName() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfig) *AuthorityConfigSubjectConfigSubjectAltName {
		return v.SubjectAltName
	}).(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput)
}

type AuthorityConfigSubjectConfigPtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfig)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigPtrOutput) ToAuthorityConfigSubjectConfigPtrOutput() AuthorityConfigSubjectConfigPtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigPtrOutput) ToAuthorityConfigSubjectConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigPtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigPtrOutput) Elem() AuthorityConfigSubjectConfigOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfig) AuthorityConfigSubjectConfig {
		if v != nil {
			return *v
		}
		var ret AuthorityConfigSubjectConfig
		return ret
	}).(AuthorityConfigSubjectConfigOutput)
}

// Contains distinguished name fields such as the location and organization.
// Structure is documented below.
func (o AuthorityConfigSubjectConfigPtrOutput) Subject() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfig) *AuthorityConfigSubjectConfigSubject {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(AuthorityConfigSubjectConfigSubjectPtrOutput)
}

// The subject alternative name fields.
// Structure is documented below.
func (o AuthorityConfigSubjectConfigPtrOutput) SubjectAltName() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfig) *AuthorityConfigSubjectConfigSubjectAltName {
		if v == nil {
			return nil
		}
		return v.SubjectAltName
	}).(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput)
}

type AuthorityConfigSubjectConfigSubject struct {
	// The common name of the distinguished name.
	CommonName string `pulumi:"commonName"`
	// The country code of the subject.
	CountryCode *string `pulumi:"countryCode"`
	// The locality or city of the subject.
	Locality *string `pulumi:"locality"`
	// The organization of the subject.
	Organization string `pulumi:"organization"`
	// The organizational unit of the subject.
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// The postal code of the subject.
	PostalCode *string `pulumi:"postalCode"`
	// The province, territory, or regional state of the subject.
	Province *string `pulumi:"province"`
	// The street address of the subject.
	StreetAddress *string `pulumi:"streetAddress"`
}

// AuthorityConfigSubjectConfigSubjectInput is an input type that accepts AuthorityConfigSubjectConfigSubjectArgs and AuthorityConfigSubjectConfigSubjectOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigSubjectInput` via:
//
//          AuthorityConfigSubjectConfigSubjectArgs{...}
type AuthorityConfigSubjectConfigSubjectInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigSubjectOutput() AuthorityConfigSubjectConfigSubjectOutput
	ToAuthorityConfigSubjectConfigSubjectOutputWithContext(context.Context) AuthorityConfigSubjectConfigSubjectOutput
}

type AuthorityConfigSubjectConfigSubjectArgs struct {
	// The common name of the distinguished name.
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// The country code of the subject.
	CountryCode pulumi.StringPtrInput `pulumi:"countryCode"`
	// The locality or city of the subject.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// The organization of the subject.
	Organization pulumi.StringInput `pulumi:"organization"`
	// The organizational unit of the subject.
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// The postal code of the subject.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The province, territory, or regional state of the subject.
	Province pulumi.StringPtrInput `pulumi:"province"`
	// The street address of the subject.
	StreetAddress pulumi.StringPtrInput `pulumi:"streetAddress"`
}

func (AuthorityConfigSubjectConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (i AuthorityConfigSubjectConfigSubjectArgs) ToAuthorityConfigSubjectConfigSubjectOutput() AuthorityConfigSubjectConfigSubjectOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigSubjectArgs) ToAuthorityConfigSubjectConfigSubjectOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectOutput)
}

func (i AuthorityConfigSubjectConfigSubjectArgs) ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigSubjectArgs) ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectOutput).ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx)
}

// AuthorityConfigSubjectConfigSubjectPtrInput is an input type that accepts AuthorityConfigSubjectConfigSubjectArgs, AuthorityConfigSubjectConfigSubjectPtr and AuthorityConfigSubjectConfigSubjectPtrOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigSubjectPtrInput` via:
//
//          AuthorityConfigSubjectConfigSubjectArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigSubjectConfigSubjectPtrInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput
	ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput
}

type authorityConfigSubjectConfigSubjectPtrType AuthorityConfigSubjectConfigSubjectArgs

func AuthorityConfigSubjectConfigSubjectPtr(v *AuthorityConfigSubjectConfigSubjectArgs) AuthorityConfigSubjectConfigSubjectPtrInput {
	return (*authorityConfigSubjectConfigSubjectPtrType)(v)
}

func (*authorityConfigSubjectConfigSubjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (i *authorityConfigSubjectConfigSubjectPtrType) ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(context.Background())
}

func (i *authorityConfigSubjectConfigSubjectPtrType) ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectPtrOutput)
}

type AuthorityConfigSubjectConfigSubjectOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigSubjectOutput) ToAuthorityConfigSubjectConfigSubjectOutput() AuthorityConfigSubjectConfigSubjectOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectOutput) ToAuthorityConfigSubjectConfigSubjectOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectOutput) ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o.ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(context.Background())
}

func (o AuthorityConfigSubjectConfigSubjectOutput) ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityConfigSubjectConfigSubject) *AuthorityConfigSubjectConfigSubject {
		return &v
	}).(AuthorityConfigSubjectConfigSubjectPtrOutput)
}

// The common name of the distinguished name.
func (o AuthorityConfigSubjectConfigSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// The country code of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

// The locality or city of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// The organization of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) string { return v.Organization }).(pulumi.StringOutput)
}

// The organizational unit of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// The postal code of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The province, territory, or regional state of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.Province }).(pulumi.StringPtrOutput)
}

// The street address of the subject.
func (o AuthorityConfigSubjectConfigSubjectOutput) StreetAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubject) *string { return v.StreetAddress }).(pulumi.StringPtrOutput)
}

type AuthorityConfigSubjectConfigSubjectPtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigSubjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigSubjectPtrOutput) ToAuthorityConfigSubjectConfigSubjectPtrOutput() AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectPtrOutput) ToAuthorityConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectPtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectPtrOutput) Elem() AuthorityConfigSubjectConfigSubjectOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) AuthorityConfigSubjectConfigSubject {
		if v != nil {
			return *v
		}
		var ret AuthorityConfigSubjectConfigSubject
		return ret
	}).(AuthorityConfigSubjectConfigSubjectOutput)
}

// The common name of the distinguished name.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return &v.CommonName
	}).(pulumi.StringPtrOutput)
}

// The country code of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(pulumi.StringPtrOutput)
}

// The locality or city of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Locality
	}).(pulumi.StringPtrOutput)
}

// The organization of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return &v.Organization
	}).(pulumi.StringPtrOutput)
}

// The organizational unit of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnit
	}).(pulumi.StringPtrOutput)
}

// The postal code of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The province, territory, or regional state of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Province
	}).(pulumi.StringPtrOutput)
}

// The street address of the subject.
func (o AuthorityConfigSubjectConfigSubjectPtrOutput) StreetAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress
	}).(pulumi.StringPtrOutput)
}

type AuthorityConfigSubjectConfigSubjectAltName struct {
	// Contains only valid, fully-qualified host names.
	DnsNames []string `pulumi:"dnsNames"`
	// Contains only valid RFC 2822 E-mail addresses.
	EmailAddresses []string `pulumi:"emailAddresses"`
	// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// Contains only valid RFC 3986 URIs.
	Uris []string `pulumi:"uris"`
}

// AuthorityConfigSubjectConfigSubjectAltNameInput is an input type that accepts AuthorityConfigSubjectConfigSubjectAltNameArgs and AuthorityConfigSubjectConfigSubjectAltNameOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigSubjectAltNameInput` via:
//
//          AuthorityConfigSubjectConfigSubjectAltNameArgs{...}
type AuthorityConfigSubjectConfigSubjectAltNameInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigSubjectAltNameOutput() AuthorityConfigSubjectConfigSubjectAltNameOutput
	ToAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(context.Context) AuthorityConfigSubjectConfigSubjectAltNameOutput
}

type AuthorityConfigSubjectConfigSubjectAltNameArgs struct {
	// Contains only valid, fully-qualified host names.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// Contains only valid RFC 2822 E-mail addresses.
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// Contains only valid RFC 3986 URIs.
	Uris pulumi.StringArrayInput `pulumi:"uris"`
}

func (AuthorityConfigSubjectConfigSubjectAltNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (i AuthorityConfigSubjectConfigSubjectAltNameArgs) ToAuthorityConfigSubjectConfigSubjectAltNameOutput() AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigSubjectAltNameArgs) ToAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectAltNameOutput)
}

func (i AuthorityConfigSubjectConfigSubjectAltNameArgs) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Background())
}

func (i AuthorityConfigSubjectConfigSubjectAltNameArgs) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectAltNameOutput).ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx)
}

// AuthorityConfigSubjectConfigSubjectAltNamePtrInput is an input type that accepts AuthorityConfigSubjectConfigSubjectAltNameArgs, AuthorityConfigSubjectConfigSubjectAltNamePtr and AuthorityConfigSubjectConfigSubjectAltNamePtrOutput values.
// You can construct a concrete instance of `AuthorityConfigSubjectConfigSubjectAltNamePtrInput` via:
//
//          AuthorityConfigSubjectConfigSubjectAltNameArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigSubjectConfigSubjectAltNamePtrInput interface {
	pulumi.Input

	ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput
	ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput
}

type authorityConfigSubjectConfigSubjectAltNamePtrType AuthorityConfigSubjectConfigSubjectAltNameArgs

func AuthorityConfigSubjectConfigSubjectAltNamePtr(v *AuthorityConfigSubjectConfigSubjectAltNameArgs) AuthorityConfigSubjectConfigSubjectAltNamePtrInput {
	return (*authorityConfigSubjectConfigSubjectAltNamePtrType)(v)
}

func (*authorityConfigSubjectConfigSubjectAltNamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (i *authorityConfigSubjectConfigSubjectAltNamePtrType) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return i.ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Background())
}

func (i *authorityConfigSubjectConfigSubjectAltNamePtrType) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput)
}

type AuthorityConfigSubjectConfigSubjectAltNameOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigSubjectAltNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) ToAuthorityConfigSubjectConfigSubjectAltNameOutput() AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) ToAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Background())
}

func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityConfigSubjectConfigSubjectAltName) *AuthorityConfigSubjectConfigSubjectAltName {
		return &v
	}).(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput)
}

// Contains only valid, fully-qualified host names.
func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubjectAltName) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 2822 E-mail addresses.
func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubjectAltName) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubjectAltName) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 3986 URIs.
func (o AuthorityConfigSubjectConfigSubjectAltNameOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityConfigSubjectConfigSubjectAltName) []string { return v.Uris }).(pulumi.StringArrayOutput)
}

type AuthorityConfigSubjectConfigSubjectAltNamePtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutput() AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) ToAuthorityConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) AuthorityConfigSubjectConfigSubjectAltNamePtrOutput {
	return o
}

func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) Elem() AuthorityConfigSubjectConfigSubjectAltNameOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) AuthorityConfigSubjectConfigSubjectAltName {
		if v != nil {
			return *v
		}
		var ret AuthorityConfigSubjectConfigSubjectAltName
		return ret
	}).(AuthorityConfigSubjectConfigSubjectAltNameOutput)
}

// Contains only valid, fully-qualified host names.
func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 2822 E-mail addresses.
func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.EmailAddresses
	}).(pulumi.StringArrayOutput)
}

// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 3986 URIs.
func (o AuthorityConfigSubjectConfigSubjectAltNamePtrOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.Uris
	}).(pulumi.StringArrayOutput)
}

type AuthorityConfigX509Config struct {
	// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
	// Structure is documented below.
	AdditionalExtensions []AuthorityConfigX509ConfigAdditionalExtension `pulumi:"additionalExtensions"`
	// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
	// "Authority Information Access" extension in the certificate.
	AiaOcspServers []string `pulumi:"aiaOcspServers"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	CaOptions AuthorityConfigX509ConfigCaOptions `pulumi:"caOptions"`
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsage AuthorityConfigX509ConfigKeyUsage `pulumi:"keyUsage"`
	// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	// Structure is documented below.
	PolicyIds []AuthorityConfigX509ConfigPolicyId `pulumi:"policyIds"`
}

// AuthorityConfigX509ConfigInput is an input type that accepts AuthorityConfigX509ConfigArgs and AuthorityConfigX509ConfigOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigInput` via:
//
//          AuthorityConfigX509ConfigArgs{...}
type AuthorityConfigX509ConfigInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigOutput() AuthorityConfigX509ConfigOutput
	ToAuthorityConfigX509ConfigOutputWithContext(context.Context) AuthorityConfigX509ConfigOutput
}

type AuthorityConfigX509ConfigArgs struct {
	// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
	// Structure is documented below.
	AdditionalExtensions AuthorityConfigX509ConfigAdditionalExtensionArrayInput `pulumi:"additionalExtensions"`
	// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
	// "Authority Information Access" extension in the certificate.
	AiaOcspServers pulumi.StringArrayInput `pulumi:"aiaOcspServers"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	CaOptions AuthorityConfigX509ConfigCaOptionsInput `pulumi:"caOptions"`
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsage AuthorityConfigX509ConfigKeyUsageInput `pulumi:"keyUsage"`
	// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	// Structure is documented below.
	PolicyIds AuthorityConfigX509ConfigPolicyIdArrayInput `pulumi:"policyIds"`
}

func (AuthorityConfigX509ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509Config)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigArgs) ToAuthorityConfigX509ConfigOutput() AuthorityConfigX509ConfigOutput {
	return i.ToAuthorityConfigX509ConfigOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigArgs) ToAuthorityConfigX509ConfigOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigOutput)
}

func (i AuthorityConfigX509ConfigArgs) ToAuthorityConfigX509ConfigPtrOutput() AuthorityConfigX509ConfigPtrOutput {
	return i.ToAuthorityConfigX509ConfigPtrOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigArgs) ToAuthorityConfigX509ConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigOutput).ToAuthorityConfigX509ConfigPtrOutputWithContext(ctx)
}

// AuthorityConfigX509ConfigPtrInput is an input type that accepts AuthorityConfigX509ConfigArgs, AuthorityConfigX509ConfigPtr and AuthorityConfigX509ConfigPtrOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigPtrInput` via:
//
//          AuthorityConfigX509ConfigArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigX509ConfigPtrInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigPtrOutput() AuthorityConfigX509ConfigPtrOutput
	ToAuthorityConfigX509ConfigPtrOutputWithContext(context.Context) AuthorityConfigX509ConfigPtrOutput
}

type authorityConfigX509ConfigPtrType AuthorityConfigX509ConfigArgs

func AuthorityConfigX509ConfigPtr(v *AuthorityConfigX509ConfigArgs) AuthorityConfigX509ConfigPtrInput {
	return (*authorityConfigX509ConfigPtrType)(v)
}

func (*authorityConfigX509ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509Config)(nil)).Elem()
}

func (i *authorityConfigX509ConfigPtrType) ToAuthorityConfigX509ConfigPtrOutput() AuthorityConfigX509ConfigPtrOutput {
	return i.ToAuthorityConfigX509ConfigPtrOutputWithContext(context.Background())
}

func (i *authorityConfigX509ConfigPtrType) ToAuthorityConfigX509ConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigPtrOutput)
}

type AuthorityConfigX509ConfigOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509Config)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigOutput) ToAuthorityConfigX509ConfigOutput() AuthorityConfigX509ConfigOutput {
	return o
}

func (o AuthorityConfigX509ConfigOutput) ToAuthorityConfigX509ConfigOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigOutput {
	return o
}

func (o AuthorityConfigX509ConfigOutput) ToAuthorityConfigX509ConfigPtrOutput() AuthorityConfigX509ConfigPtrOutput {
	return o.ToAuthorityConfigX509ConfigPtrOutputWithContext(context.Background())
}

func (o AuthorityConfigX509ConfigOutput) ToAuthorityConfigX509ConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityConfigX509Config) *AuthorityConfigX509Config {
		return &v
	}).(AuthorityConfigX509ConfigPtrOutput)
}

// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
// Structure is documented below.
func (o AuthorityConfigX509ConfigOutput) AdditionalExtensions() AuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v AuthorityConfigX509Config) []AuthorityConfigX509ConfigAdditionalExtension {
		return v.AdditionalExtensions
	}).(AuthorityConfigX509ConfigAdditionalExtensionArrayOutput)
}

// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
// "Authority Information Access" extension in the certificate.
func (o AuthorityConfigX509ConfigOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorityConfigX509Config) []string { return v.AiaOcspServers }).(pulumi.StringArrayOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o AuthorityConfigX509ConfigOutput) CaOptions() AuthorityConfigX509ConfigCaOptionsOutput {
	return o.ApplyT(func(v AuthorityConfigX509Config) AuthorityConfigX509ConfigCaOptions { return v.CaOptions }).(AuthorityConfigX509ConfigCaOptionsOutput)
}

// Indicates the intended use for keys that correspond to a certificate.
// Structure is documented below.
func (o AuthorityConfigX509ConfigOutput) KeyUsage() AuthorityConfigX509ConfigKeyUsageOutput {
	return o.ApplyT(func(v AuthorityConfigX509Config) AuthorityConfigX509ConfigKeyUsage { return v.KeyUsage }).(AuthorityConfigX509ConfigKeyUsageOutput)
}

// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
// Structure is documented below.
func (o AuthorityConfigX509ConfigOutput) PolicyIds() AuthorityConfigX509ConfigPolicyIdArrayOutput {
	return o.ApplyT(func(v AuthorityConfigX509Config) []AuthorityConfigX509ConfigPolicyId { return v.PolicyIds }).(AuthorityConfigX509ConfigPolicyIdArrayOutput)
}

type AuthorityConfigX509ConfigPtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509Config)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigPtrOutput) ToAuthorityConfigX509ConfigPtrOutput() AuthorityConfigX509ConfigPtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigPtrOutput) ToAuthorityConfigX509ConfigPtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigPtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigPtrOutput) Elem() AuthorityConfigX509ConfigOutput {
	return o.ApplyT(func(v *AuthorityConfigX509Config) AuthorityConfigX509Config {
		if v != nil {
			return *v
		}
		var ret AuthorityConfigX509Config
		return ret
	}).(AuthorityConfigX509ConfigOutput)
}

// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
// Structure is documented below.
func (o AuthorityConfigX509ConfigPtrOutput) AdditionalExtensions() AuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigX509Config) []AuthorityConfigX509ConfigAdditionalExtension {
		if v == nil {
			return nil
		}
		return v.AdditionalExtensions
	}).(AuthorityConfigX509ConfigAdditionalExtensionArrayOutput)
}

// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
// "Authority Information Access" extension in the certificate.
func (o AuthorityConfigX509ConfigPtrOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigX509Config) []string {
		if v == nil {
			return nil
		}
		return v.AiaOcspServers
	}).(pulumi.StringArrayOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o AuthorityConfigX509ConfigPtrOutput) CaOptions() AuthorityConfigX509ConfigCaOptionsPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509Config) *AuthorityConfigX509ConfigCaOptions {
		if v == nil {
			return nil
		}
		return &v.CaOptions
	}).(AuthorityConfigX509ConfigCaOptionsPtrOutput)
}

// Indicates the intended use for keys that correspond to a certificate.
// Structure is documented below.
func (o AuthorityConfigX509ConfigPtrOutput) KeyUsage() AuthorityConfigX509ConfigKeyUsagePtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509Config) *AuthorityConfigX509ConfigKeyUsage {
		if v == nil {
			return nil
		}
		return &v.KeyUsage
	}).(AuthorityConfigX509ConfigKeyUsagePtrOutput)
}

// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
// Structure is documented below.
func (o AuthorityConfigX509ConfigPtrOutput) PolicyIds() AuthorityConfigX509ConfigPolicyIdArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigX509Config) []AuthorityConfigX509ConfigPolicyId {
		if v == nil {
			return nil
		}
		return v.PolicyIds
	}).(AuthorityConfigX509ConfigPolicyIdArrayOutput)
}

type AuthorityConfigX509ConfigAdditionalExtension struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical bool `pulumi:"critical"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	ObjectId AuthorityConfigX509ConfigAdditionalExtensionObjectId `pulumi:"objectId"`
	// The value of this X.509 extension. A base64-encoded string.
	Value string `pulumi:"value"`
}

// AuthorityConfigX509ConfigAdditionalExtensionInput is an input type that accepts AuthorityConfigX509ConfigAdditionalExtensionArgs and AuthorityConfigX509ConfigAdditionalExtensionOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigAdditionalExtensionInput` via:
//
//          AuthorityConfigX509ConfigAdditionalExtensionArgs{...}
type AuthorityConfigX509ConfigAdditionalExtensionInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigAdditionalExtensionOutput() AuthorityConfigX509ConfigAdditionalExtensionOutput
	ToAuthorityConfigX509ConfigAdditionalExtensionOutputWithContext(context.Context) AuthorityConfigX509ConfigAdditionalExtensionOutput
}

type AuthorityConfigX509ConfigAdditionalExtensionArgs struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical pulumi.BoolInput `pulumi:"critical"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	ObjectId AuthorityConfigX509ConfigAdditionalExtensionObjectIdInput `pulumi:"objectId"`
	// The value of this X.509 extension. A base64-encoded string.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AuthorityConfigX509ConfigAdditionalExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigAdditionalExtensionArgs) ToAuthorityConfigX509ConfigAdditionalExtensionOutput() AuthorityConfigX509ConfigAdditionalExtensionOutput {
	return i.ToAuthorityConfigX509ConfigAdditionalExtensionOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigAdditionalExtensionArgs) ToAuthorityConfigX509ConfigAdditionalExtensionOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigAdditionalExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigAdditionalExtensionOutput)
}

// AuthorityConfigX509ConfigAdditionalExtensionArrayInput is an input type that accepts AuthorityConfigX509ConfigAdditionalExtensionArray and AuthorityConfigX509ConfigAdditionalExtensionArrayOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigAdditionalExtensionArrayInput` via:
//
//          AuthorityConfigX509ConfigAdditionalExtensionArray{ AuthorityConfigX509ConfigAdditionalExtensionArgs{...} }
type AuthorityConfigX509ConfigAdditionalExtensionArrayInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigAdditionalExtensionArrayOutput() AuthorityConfigX509ConfigAdditionalExtensionArrayOutput
	ToAuthorityConfigX509ConfigAdditionalExtensionArrayOutputWithContext(context.Context) AuthorityConfigX509ConfigAdditionalExtensionArrayOutput
}

type AuthorityConfigX509ConfigAdditionalExtensionArray []AuthorityConfigX509ConfigAdditionalExtensionInput

func (AuthorityConfigX509ConfigAdditionalExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigAdditionalExtensionArray) ToAuthorityConfigX509ConfigAdditionalExtensionArrayOutput() AuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return i.ToAuthorityConfigX509ConfigAdditionalExtensionArrayOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigAdditionalExtensionArray) ToAuthorityConfigX509ConfigAdditionalExtensionArrayOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigAdditionalExtensionArrayOutput)
}

type AuthorityConfigX509ConfigAdditionalExtensionOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigAdditionalExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigAdditionalExtensionOutput) ToAuthorityConfigX509ConfigAdditionalExtensionOutput() AuthorityConfigX509ConfigAdditionalExtensionOutput {
	return o
}

func (o AuthorityConfigX509ConfigAdditionalExtensionOutput) ToAuthorityConfigX509ConfigAdditionalExtensionOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigAdditionalExtensionOutput {
	return o
}

// Indicates whether or not this extension is critical (i.e., if the client does not know how to
// handle this extension, the client should consider this to be an error).
func (o AuthorityConfigX509ConfigAdditionalExtensionOutput) Critical() pulumi.BoolOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigAdditionalExtension) bool { return v.Critical }).(pulumi.BoolOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o AuthorityConfigX509ConfigAdditionalExtensionOutput) ObjectId() AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigAdditionalExtension) AuthorityConfigX509ConfigAdditionalExtensionObjectId {
		return v.ObjectId
	}).(AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput)
}

// The value of this X.509 extension. A base64-encoded string.
func (o AuthorityConfigX509ConfigAdditionalExtensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigAdditionalExtension) string { return v.Value }).(pulumi.StringOutput)
}

type AuthorityConfigX509ConfigAdditionalExtensionArrayOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigAdditionalExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigAdditionalExtensionArrayOutput) ToAuthorityConfigX509ConfigAdditionalExtensionArrayOutput() AuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return o
}

func (o AuthorityConfigX509ConfigAdditionalExtensionArrayOutput) ToAuthorityConfigX509ConfigAdditionalExtensionArrayOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return o
}

func (o AuthorityConfigX509ConfigAdditionalExtensionArrayOutput) Index(i pulumi.IntInput) AuthorityConfigX509ConfigAdditionalExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorityConfigX509ConfigAdditionalExtension {
		return vs[0].([]AuthorityConfigX509ConfigAdditionalExtension)[vs[1].(int)]
	}).(AuthorityConfigX509ConfigAdditionalExtensionOutput)
}

type AuthorityConfigX509ConfigAdditionalExtensionObjectId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// AuthorityConfigX509ConfigAdditionalExtensionObjectIdInput is an input type that accepts AuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs and AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigAdditionalExtensionObjectIdInput` via:
//
//          AuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs{...}
type AuthorityConfigX509ConfigAdditionalExtensionObjectIdInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput() AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput
	ToAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(context.Context) AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput
}

type AuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (AuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigAdditionalExtensionObjectId)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs) ToAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput() AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return i.ToAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs) ToAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput)
}

type AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigAdditionalExtensionObjectId)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput) ToAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput() AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return o
}

func (o AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput) ToAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigAdditionalExtensionObjectId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type AuthorityConfigX509ConfigCaOptions struct {
	// When true, the "CA" in Basic Constraints extension will be set to true.
	IsCa bool `pulumi:"isCa"`
	// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
	// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
	MaxIssuerPathLength *int `pulumi:"maxIssuerPathLength"`
	// When true, the "CA" in Basic Constraints extension will be set to false.
	// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
	NonCa *bool `pulumi:"nonCa"`
	// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
	// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
	// the max path length will be omitted from the CA certificate.
	ZeroMaxIssuerPathLength *bool `pulumi:"zeroMaxIssuerPathLength"`
}

// AuthorityConfigX509ConfigCaOptionsInput is an input type that accepts AuthorityConfigX509ConfigCaOptionsArgs and AuthorityConfigX509ConfigCaOptionsOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigCaOptionsInput` via:
//
//          AuthorityConfigX509ConfigCaOptionsArgs{...}
type AuthorityConfigX509ConfigCaOptionsInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigCaOptionsOutput() AuthorityConfigX509ConfigCaOptionsOutput
	ToAuthorityConfigX509ConfigCaOptionsOutputWithContext(context.Context) AuthorityConfigX509ConfigCaOptionsOutput
}

type AuthorityConfigX509ConfigCaOptionsArgs struct {
	// When true, the "CA" in Basic Constraints extension will be set to true.
	IsCa pulumi.BoolInput `pulumi:"isCa"`
	// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
	// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
	MaxIssuerPathLength pulumi.IntPtrInput `pulumi:"maxIssuerPathLength"`
	// When true, the "CA" in Basic Constraints extension will be set to false.
	// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
	NonCa pulumi.BoolPtrInput `pulumi:"nonCa"`
	// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
	// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
	// the max path length will be omitted from the CA certificate.
	ZeroMaxIssuerPathLength pulumi.BoolPtrInput `pulumi:"zeroMaxIssuerPathLength"`
}

func (AuthorityConfigX509ConfigCaOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigCaOptions)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigCaOptionsArgs) ToAuthorityConfigX509ConfigCaOptionsOutput() AuthorityConfigX509ConfigCaOptionsOutput {
	return i.ToAuthorityConfigX509ConfigCaOptionsOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigCaOptionsArgs) ToAuthorityConfigX509ConfigCaOptionsOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigCaOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigCaOptionsOutput)
}

func (i AuthorityConfigX509ConfigCaOptionsArgs) ToAuthorityConfigX509ConfigCaOptionsPtrOutput() AuthorityConfigX509ConfigCaOptionsPtrOutput {
	return i.ToAuthorityConfigX509ConfigCaOptionsPtrOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigCaOptionsArgs) ToAuthorityConfigX509ConfigCaOptionsPtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigCaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigCaOptionsOutput).ToAuthorityConfigX509ConfigCaOptionsPtrOutputWithContext(ctx)
}

// AuthorityConfigX509ConfigCaOptionsPtrInput is an input type that accepts AuthorityConfigX509ConfigCaOptionsArgs, AuthorityConfigX509ConfigCaOptionsPtr and AuthorityConfigX509ConfigCaOptionsPtrOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigCaOptionsPtrInput` via:
//
//          AuthorityConfigX509ConfigCaOptionsArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigX509ConfigCaOptionsPtrInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigCaOptionsPtrOutput() AuthorityConfigX509ConfigCaOptionsPtrOutput
	ToAuthorityConfigX509ConfigCaOptionsPtrOutputWithContext(context.Context) AuthorityConfigX509ConfigCaOptionsPtrOutput
}

type authorityConfigX509ConfigCaOptionsPtrType AuthorityConfigX509ConfigCaOptionsArgs

func AuthorityConfigX509ConfigCaOptionsPtr(v *AuthorityConfigX509ConfigCaOptionsArgs) AuthorityConfigX509ConfigCaOptionsPtrInput {
	return (*authorityConfigX509ConfigCaOptionsPtrType)(v)
}

func (*authorityConfigX509ConfigCaOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509ConfigCaOptions)(nil)).Elem()
}

func (i *authorityConfigX509ConfigCaOptionsPtrType) ToAuthorityConfigX509ConfigCaOptionsPtrOutput() AuthorityConfigX509ConfigCaOptionsPtrOutput {
	return i.ToAuthorityConfigX509ConfigCaOptionsPtrOutputWithContext(context.Background())
}

func (i *authorityConfigX509ConfigCaOptionsPtrType) ToAuthorityConfigX509ConfigCaOptionsPtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigCaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigCaOptionsPtrOutput)
}

type AuthorityConfigX509ConfigCaOptionsOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigCaOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigCaOptions)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigCaOptionsOutput) ToAuthorityConfigX509ConfigCaOptionsOutput() AuthorityConfigX509ConfigCaOptionsOutput {
	return o
}

func (o AuthorityConfigX509ConfigCaOptionsOutput) ToAuthorityConfigX509ConfigCaOptionsOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigCaOptionsOutput {
	return o
}

func (o AuthorityConfigX509ConfigCaOptionsOutput) ToAuthorityConfigX509ConfigCaOptionsPtrOutput() AuthorityConfigX509ConfigCaOptionsPtrOutput {
	return o.ToAuthorityConfigX509ConfigCaOptionsPtrOutputWithContext(context.Background())
}

func (o AuthorityConfigX509ConfigCaOptionsOutput) ToAuthorityConfigX509ConfigCaOptionsPtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigCaOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityConfigX509ConfigCaOptions) *AuthorityConfigX509ConfigCaOptions {
		return &v
	}).(AuthorityConfigX509ConfigCaOptionsPtrOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to true.
func (o AuthorityConfigX509ConfigCaOptionsOutput) IsCa() pulumi.BoolOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigCaOptions) bool { return v.IsCa }).(pulumi.BoolOutput)
}

// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
func (o AuthorityConfigX509ConfigCaOptionsOutput) MaxIssuerPathLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigCaOptions) *int { return v.MaxIssuerPathLength }).(pulumi.IntPtrOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to false.
// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
func (o AuthorityConfigX509ConfigCaOptionsOutput) NonCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigCaOptions) *bool { return v.NonCa }).(pulumi.BoolPtrOutput)
}

// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
// the max path length will be omitted from the CA certificate.
func (o AuthorityConfigX509ConfigCaOptionsOutput) ZeroMaxIssuerPathLength() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigCaOptions) *bool { return v.ZeroMaxIssuerPathLength }).(pulumi.BoolPtrOutput)
}

type AuthorityConfigX509ConfigCaOptionsPtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigCaOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509ConfigCaOptions)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigCaOptionsPtrOutput) ToAuthorityConfigX509ConfigCaOptionsPtrOutput() AuthorityConfigX509ConfigCaOptionsPtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigCaOptionsPtrOutput) ToAuthorityConfigX509ConfigCaOptionsPtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigCaOptionsPtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigCaOptionsPtrOutput) Elem() AuthorityConfigX509ConfigCaOptionsOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigCaOptions) AuthorityConfigX509ConfigCaOptions {
		if v != nil {
			return *v
		}
		var ret AuthorityConfigX509ConfigCaOptions
		return ret
	}).(AuthorityConfigX509ConfigCaOptionsOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to true.
func (o AuthorityConfigX509ConfigCaOptionsPtrOutput) IsCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigCaOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.IsCa
	}).(pulumi.BoolPtrOutput)
}

// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
func (o AuthorityConfigX509ConfigCaOptionsPtrOutput) MaxIssuerPathLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigCaOptions) *int {
		if v == nil {
			return nil
		}
		return v.MaxIssuerPathLength
	}).(pulumi.IntPtrOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to false.
// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
func (o AuthorityConfigX509ConfigCaOptionsPtrOutput) NonCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigCaOptions) *bool {
		if v == nil {
			return nil
		}
		return v.NonCa
	}).(pulumi.BoolPtrOutput)
}

// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
// the max path length will be omitted from the CA certificate.
func (o AuthorityConfigX509ConfigCaOptionsPtrOutput) ZeroMaxIssuerPathLength() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigCaOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ZeroMaxIssuerPathLength
	}).(pulumi.BoolPtrOutput)
}

type AuthorityConfigX509ConfigKeyUsage struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsage AuthorityConfigX509ConfigKeyUsageBaseKeyUsage `pulumi:"baseKeyUsage"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsage AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage `pulumi:"extendedKeyUsage"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages []AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage `pulumi:"unknownExtendedKeyUsages"`
}

// AuthorityConfigX509ConfigKeyUsageInput is an input type that accepts AuthorityConfigX509ConfigKeyUsageArgs and AuthorityConfigX509ConfigKeyUsageOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigKeyUsageInput` via:
//
//          AuthorityConfigX509ConfigKeyUsageArgs{...}
type AuthorityConfigX509ConfigKeyUsageInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageOutput
	ToAuthorityConfigX509ConfigKeyUsageOutputWithContext(context.Context) AuthorityConfigX509ConfigKeyUsageOutput
}

type AuthorityConfigX509ConfigKeyUsageArgs struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsage AuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput `pulumi:"baseKeyUsage"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsage AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput `pulumi:"extendedKeyUsage"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput `pulumi:"unknownExtendedKeyUsages"`
}

func (AuthorityConfigX509ConfigKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsageOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageOutput)
}

func (i AuthorityConfigX509ConfigKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsagePtrOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsagePtrOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageOutput).ToAuthorityConfigX509ConfigKeyUsagePtrOutputWithContext(ctx)
}

// AuthorityConfigX509ConfigKeyUsagePtrInput is an input type that accepts AuthorityConfigX509ConfigKeyUsageArgs, AuthorityConfigX509ConfigKeyUsagePtr and AuthorityConfigX509ConfigKeyUsagePtrOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigKeyUsagePtrInput` via:
//
//          AuthorityConfigX509ConfigKeyUsageArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigX509ConfigKeyUsagePtrInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsagePtrOutput
	ToAuthorityConfigX509ConfigKeyUsagePtrOutputWithContext(context.Context) AuthorityConfigX509ConfigKeyUsagePtrOutput
}

type authorityConfigX509ConfigKeyUsagePtrType AuthorityConfigX509ConfigKeyUsageArgs

func AuthorityConfigX509ConfigKeyUsagePtr(v *AuthorityConfigX509ConfigKeyUsageArgs) AuthorityConfigX509ConfigKeyUsagePtrInput {
	return (*authorityConfigX509ConfigKeyUsagePtrType)(v)
}

func (*authorityConfigX509ConfigKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (i *authorityConfigX509ConfigKeyUsagePtrType) ToAuthorityConfigX509ConfigKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsagePtrOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsagePtrOutputWithContext(context.Background())
}

func (i *authorityConfigX509ConfigKeyUsagePtrType) ToAuthorityConfigX509ConfigKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsagePtrOutput)
}

type AuthorityConfigX509ConfigKeyUsageOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsagePtrOutput {
	return o.ToAuthorityConfigX509ConfigKeyUsagePtrOutputWithContext(context.Background())
}

func (o AuthorityConfigX509ConfigKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityConfigX509ConfigKeyUsage) *AuthorityConfigX509ConfigKeyUsage {
		return &v
	}).(AuthorityConfigX509ConfigKeyUsagePtrOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o AuthorityConfigX509ConfigKeyUsageOutput) BaseKeyUsage() AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsage) AuthorityConfigX509ConfigKeyUsageBaseKeyUsage {
		return v.BaseKeyUsage
	}).(AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o AuthorityConfigX509ConfigKeyUsageOutput) ExtendedKeyUsage() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsage) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage {
		return v.ExtendedKeyUsage
	}).(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput)
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
// Structure is documented below.
func (o AuthorityConfigX509ConfigKeyUsageOutput) UnknownExtendedKeyUsages() AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsage) []AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage {
		return v.UnknownExtendedKeyUsages
	}).(AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type AuthorityConfigX509ConfigKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigKeyUsagePtrOutput) ToAuthorityConfigX509ConfigKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsagePtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsagePtrOutput) ToAuthorityConfigX509ConfigKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsagePtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsagePtrOutput) Elem() AuthorityConfigX509ConfigKeyUsageOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsage) AuthorityConfigX509ConfigKeyUsage {
		if v != nil {
			return *v
		}
		var ret AuthorityConfigX509ConfigKeyUsage
		return ret
	}).(AuthorityConfigX509ConfigKeyUsageOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o AuthorityConfigX509ConfigKeyUsagePtrOutput) BaseKeyUsage() AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsage) *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage {
		if v == nil {
			return nil
		}
		return &v.BaseKeyUsage
	}).(AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o AuthorityConfigX509ConfigKeyUsagePtrOutput) ExtendedKeyUsage() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsage) *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage {
		if v == nil {
			return nil
		}
		return &v.ExtendedKeyUsage
	}).(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput)
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
// Structure is documented below.
func (o AuthorityConfigX509ConfigKeyUsagePtrOutput) UnknownExtendedKeyUsages() AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsage) []AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage {
		if v == nil {
			return nil
		}
		return v.UnknownExtendedKeyUsages
	}).(AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type AuthorityConfigX509ConfigKeyUsageBaseKeyUsage struct {
	// The key may be used to sign certificates.
	CertSign *bool `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment *bool `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign *bool `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment *bool `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly *bool `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature *bool `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly *bool `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement *bool `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment *bool `pulumi:"keyEncipherment"`
}

// AuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput is an input type that accepts AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs and AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput` via:
//
//          AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs{...}
type AuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput
	ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(context.Context) AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput
}

type AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs struct {
	// The key may be used to sign certificates.
	CertSign pulumi.BoolPtrInput `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment pulumi.BoolPtrInput `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign pulumi.BoolPtrInput `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment pulumi.BoolPtrInput `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly pulumi.BoolPtrInput `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature pulumi.BoolPtrInput `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly pulumi.BoolPtrInput `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement pulumi.BoolPtrInput `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment pulumi.BoolPtrInput `pulumi:"keyEncipherment"`
}

func (AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput)
}

func (i AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput).ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx)
}

// AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrInput is an input type that accepts AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs, AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtr and AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrInput` via:
//
//          AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput
	ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(context.Context) AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput
}

type authorityConfigX509ConfigKeyUsageBaseKeyUsagePtrType AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs

func AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtr(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs) AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrInput {
	return (*authorityConfigX509ConfigKeyUsageBaseKeyUsagePtrType)(v)
}

func (*authorityConfigX509ConfigKeyUsageBaseKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i *authorityConfigX509ConfigKeyUsageBaseKeyUsagePtrType) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (i *authorityConfigX509ConfigKeyUsageBaseKeyUsagePtrType) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput)
}

type AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o.ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage {
		return &v
	}).(AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput)
}

// The key may be used to sign certificates.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.CertSign }).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.ContentCommitment }).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.CrlSign }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.DataEncipherment }).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.DecipherOnly }).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.DigitalSignature }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.EncipherOnly }).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.KeyAgreement }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.KeyEncipherment }).(pulumi.BoolPtrOutput)
}

type AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) ToAuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) Elem() AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) AuthorityConfigX509ConfigKeyUsageBaseKeyUsage {
		if v != nil {
			return *v
		}
		var ret AuthorityConfigX509ConfigKeyUsageBaseKeyUsage
		return ret
	}).(AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput)
}

// The key may be used to sign certificates.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CertSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ContentCommitment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CrlSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DataEncipherment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DecipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DigitalSignature
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.EncipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.KeyAgreement
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.KeyEncipherment
	}).(pulumi.BoolPtrOutput)
}

type AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth *bool `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning *bool `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection *bool `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning *bool `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth *bool `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping *bool `pulumi:"timeStamping"`
}

// AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput is an input type that accepts AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs and AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput` via:
//
//          AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs{...}
type AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput
	ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(context.Context) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput
}

type AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth pulumi.BoolPtrInput `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning pulumi.BoolPtrInput `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection pulumi.BoolPtrInput `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning pulumi.BoolPtrInput `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth pulumi.BoolPtrInput `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping pulumi.BoolPtrInput `pulumi:"timeStamping"`
}

func (AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput)
}

func (i AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput).ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx)
}

// AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput is an input type that accepts AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs, AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtr and AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput` via:
//
//          AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs{...}
//
//  or:
//
//          nil
type AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput
	ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Context) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput
}

type authorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrType AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs

func AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtr(v *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput {
	return (*authorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrType)(v)
}

func (*authorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i *authorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrType) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (i *authorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrType) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput)
}

type AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o.ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage {
		return &v
	}).(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.ClientAuth }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.CodeSigning }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.EmailProtection }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.OcspSigning }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.ServerAuth }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.TimeStamping }).(pulumi.BoolPtrOutput)
}

type AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ToAuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) Elem() AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage {
		if v != nil {
			return *v
		}
		var ret AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage
		return ret
	}).(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ClientAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CodeSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.EmailProtection
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.OcspSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ServerAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.TimeStamping
	}).(pulumi.BoolPtrOutput)
}

type AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput is an input type that accepts AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs and AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput` via:
//
//          AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs{...}
type AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput
	ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Context) AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput
}

type AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs) ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput)
}

// AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput is an input type that accepts AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray and AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput` via:
//
//          AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray{ AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs{...} }
type AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput() AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput
	ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Context) AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput
}

type AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray []AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput

func (AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray) ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput() AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return i.ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray) ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput() AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput() AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) ToAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage {
		return vs[0].([]AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)[vs[1].(int)]
	}).(AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput)
}

type AuthorityConfigX509ConfigPolicyId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// AuthorityConfigX509ConfigPolicyIdInput is an input type that accepts AuthorityConfigX509ConfigPolicyIdArgs and AuthorityConfigX509ConfigPolicyIdOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigPolicyIdInput` via:
//
//          AuthorityConfigX509ConfigPolicyIdArgs{...}
type AuthorityConfigX509ConfigPolicyIdInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigPolicyIdOutput() AuthorityConfigX509ConfigPolicyIdOutput
	ToAuthorityConfigX509ConfigPolicyIdOutputWithContext(context.Context) AuthorityConfigX509ConfigPolicyIdOutput
}

type AuthorityConfigX509ConfigPolicyIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (AuthorityConfigX509ConfigPolicyIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigPolicyId)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigPolicyIdArgs) ToAuthorityConfigX509ConfigPolicyIdOutput() AuthorityConfigX509ConfigPolicyIdOutput {
	return i.ToAuthorityConfigX509ConfigPolicyIdOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigPolicyIdArgs) ToAuthorityConfigX509ConfigPolicyIdOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigPolicyIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigPolicyIdOutput)
}

// AuthorityConfigX509ConfigPolicyIdArrayInput is an input type that accepts AuthorityConfigX509ConfigPolicyIdArray and AuthorityConfigX509ConfigPolicyIdArrayOutput values.
// You can construct a concrete instance of `AuthorityConfigX509ConfigPolicyIdArrayInput` via:
//
//          AuthorityConfigX509ConfigPolicyIdArray{ AuthorityConfigX509ConfigPolicyIdArgs{...} }
type AuthorityConfigX509ConfigPolicyIdArrayInput interface {
	pulumi.Input

	ToAuthorityConfigX509ConfigPolicyIdArrayOutput() AuthorityConfigX509ConfigPolicyIdArrayOutput
	ToAuthorityConfigX509ConfigPolicyIdArrayOutputWithContext(context.Context) AuthorityConfigX509ConfigPolicyIdArrayOutput
}

type AuthorityConfigX509ConfigPolicyIdArray []AuthorityConfigX509ConfigPolicyIdInput

func (AuthorityConfigX509ConfigPolicyIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityConfigX509ConfigPolicyId)(nil)).Elem()
}

func (i AuthorityConfigX509ConfigPolicyIdArray) ToAuthorityConfigX509ConfigPolicyIdArrayOutput() AuthorityConfigX509ConfigPolicyIdArrayOutput {
	return i.ToAuthorityConfigX509ConfigPolicyIdArrayOutputWithContext(context.Background())
}

func (i AuthorityConfigX509ConfigPolicyIdArray) ToAuthorityConfigX509ConfigPolicyIdArrayOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigPolicyIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityConfigX509ConfigPolicyIdArrayOutput)
}

type AuthorityConfigX509ConfigPolicyIdOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigPolicyIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityConfigX509ConfigPolicyId)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigPolicyIdOutput) ToAuthorityConfigX509ConfigPolicyIdOutput() AuthorityConfigX509ConfigPolicyIdOutput {
	return o
}

func (o AuthorityConfigX509ConfigPolicyIdOutput) ToAuthorityConfigX509ConfigPolicyIdOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigPolicyIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o AuthorityConfigX509ConfigPolicyIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AuthorityConfigX509ConfigPolicyId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type AuthorityConfigX509ConfigPolicyIdArrayOutput struct{ *pulumi.OutputState }

func (AuthorityConfigX509ConfigPolicyIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorityConfigX509ConfigPolicyId)(nil)).Elem()
}

func (o AuthorityConfigX509ConfigPolicyIdArrayOutput) ToAuthorityConfigX509ConfigPolicyIdArrayOutput() AuthorityConfigX509ConfigPolicyIdArrayOutput {
	return o
}

func (o AuthorityConfigX509ConfigPolicyIdArrayOutput) ToAuthorityConfigX509ConfigPolicyIdArrayOutputWithContext(ctx context.Context) AuthorityConfigX509ConfigPolicyIdArrayOutput {
	return o
}

func (o AuthorityConfigX509ConfigPolicyIdArrayOutput) Index(i pulumi.IntInput) AuthorityConfigX509ConfigPolicyIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorityConfigX509ConfigPolicyId {
		return vs[0].([]AuthorityConfigX509ConfigPolicyId)[vs[1].(int)]
	}).(AuthorityConfigX509ConfigPolicyIdOutput)
}

type AuthorityKeySpec struct {
	// The algorithm to use for creating a managed Cloud KMS key for a for a simplified
	// experience. All managed keys will be have their ProtectionLevel as HSM.
	// Possible values are `SIGN_HASH_ALGORITHM_UNSPECIFIED`, `RSA_PSS_2048_SHA256`, `RSA_PSS_3072_SHA256`, `RSA_PSS_4096_SHA256`, `RSA_PKCS1_2048_SHA256`, `RSA_PKCS1_3072_SHA256`, `RSA_PKCS1_4096_SHA256`, `EC_P256_SHA256`, and `EC_P384_SHA384`.
	Algorithm *string `pulumi:"algorithm"`
	// The resource name for an existing Cloud KMS CryptoKeyVersion in the format
	// `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
	CloudKmsKeyVersion *string `pulumi:"cloudKmsKeyVersion"`
}

// AuthorityKeySpecInput is an input type that accepts AuthorityKeySpecArgs and AuthorityKeySpecOutput values.
// You can construct a concrete instance of `AuthorityKeySpecInput` via:
//
//          AuthorityKeySpecArgs{...}
type AuthorityKeySpecInput interface {
	pulumi.Input

	ToAuthorityKeySpecOutput() AuthorityKeySpecOutput
	ToAuthorityKeySpecOutputWithContext(context.Context) AuthorityKeySpecOutput
}

type AuthorityKeySpecArgs struct {
	// The algorithm to use for creating a managed Cloud KMS key for a for a simplified
	// experience. All managed keys will be have their ProtectionLevel as HSM.
	// Possible values are `SIGN_HASH_ALGORITHM_UNSPECIFIED`, `RSA_PSS_2048_SHA256`, `RSA_PSS_3072_SHA256`, `RSA_PSS_4096_SHA256`, `RSA_PKCS1_2048_SHA256`, `RSA_PKCS1_3072_SHA256`, `RSA_PKCS1_4096_SHA256`, `EC_P256_SHA256`, and `EC_P384_SHA384`.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// The resource name for an existing Cloud KMS CryptoKeyVersion in the format
	// `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
	CloudKmsKeyVersion pulumi.StringPtrInput `pulumi:"cloudKmsKeyVersion"`
}

func (AuthorityKeySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityKeySpec)(nil)).Elem()
}

func (i AuthorityKeySpecArgs) ToAuthorityKeySpecOutput() AuthorityKeySpecOutput {
	return i.ToAuthorityKeySpecOutputWithContext(context.Background())
}

func (i AuthorityKeySpecArgs) ToAuthorityKeySpecOutputWithContext(ctx context.Context) AuthorityKeySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityKeySpecOutput)
}

func (i AuthorityKeySpecArgs) ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput {
	return i.ToAuthorityKeySpecPtrOutputWithContext(context.Background())
}

func (i AuthorityKeySpecArgs) ToAuthorityKeySpecPtrOutputWithContext(ctx context.Context) AuthorityKeySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityKeySpecOutput).ToAuthorityKeySpecPtrOutputWithContext(ctx)
}

// AuthorityKeySpecPtrInput is an input type that accepts AuthorityKeySpecArgs, AuthorityKeySpecPtr and AuthorityKeySpecPtrOutput values.
// You can construct a concrete instance of `AuthorityKeySpecPtrInput` via:
//
//          AuthorityKeySpecArgs{...}
//
//  or:
//
//          nil
type AuthorityKeySpecPtrInput interface {
	pulumi.Input

	ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput
	ToAuthorityKeySpecPtrOutputWithContext(context.Context) AuthorityKeySpecPtrOutput
}

type authorityKeySpecPtrType AuthorityKeySpecArgs

func AuthorityKeySpecPtr(v *AuthorityKeySpecArgs) AuthorityKeySpecPtrInput {
	return (*authorityKeySpecPtrType)(v)
}

func (*authorityKeySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityKeySpec)(nil)).Elem()
}

func (i *authorityKeySpecPtrType) ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput {
	return i.ToAuthorityKeySpecPtrOutputWithContext(context.Background())
}

func (i *authorityKeySpecPtrType) ToAuthorityKeySpecPtrOutputWithContext(ctx context.Context) AuthorityKeySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityKeySpecPtrOutput)
}

type AuthorityKeySpecOutput struct{ *pulumi.OutputState }

func (AuthorityKeySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityKeySpec)(nil)).Elem()
}

func (o AuthorityKeySpecOutput) ToAuthorityKeySpecOutput() AuthorityKeySpecOutput {
	return o
}

func (o AuthorityKeySpecOutput) ToAuthorityKeySpecOutputWithContext(ctx context.Context) AuthorityKeySpecOutput {
	return o
}

func (o AuthorityKeySpecOutput) ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput {
	return o.ToAuthorityKeySpecPtrOutputWithContext(context.Background())
}

func (o AuthorityKeySpecOutput) ToAuthorityKeySpecPtrOutputWithContext(ctx context.Context) AuthorityKeySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityKeySpec) *AuthorityKeySpec {
		return &v
	}).(AuthorityKeySpecPtrOutput)
}

// The algorithm to use for creating a managed Cloud KMS key for a for a simplified
// experience. All managed keys will be have their ProtectionLevel as HSM.
// Possible values are `SIGN_HASH_ALGORITHM_UNSPECIFIED`, `RSA_PSS_2048_SHA256`, `RSA_PSS_3072_SHA256`, `RSA_PSS_4096_SHA256`, `RSA_PKCS1_2048_SHA256`, `RSA_PKCS1_3072_SHA256`, `RSA_PKCS1_4096_SHA256`, `EC_P256_SHA256`, and `EC_P384_SHA384`.
func (o AuthorityKeySpecOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityKeySpec) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// The resource name for an existing Cloud KMS CryptoKeyVersion in the format
// `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
func (o AuthorityKeySpecOutput) CloudKmsKeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorityKeySpec) *string { return v.CloudKmsKeyVersion }).(pulumi.StringPtrOutput)
}

type AuthorityKeySpecPtrOutput struct{ *pulumi.OutputState }

func (AuthorityKeySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityKeySpec)(nil)).Elem()
}

func (o AuthorityKeySpecPtrOutput) ToAuthorityKeySpecPtrOutput() AuthorityKeySpecPtrOutput {
	return o
}

func (o AuthorityKeySpecPtrOutput) ToAuthorityKeySpecPtrOutputWithContext(ctx context.Context) AuthorityKeySpecPtrOutput {
	return o
}

func (o AuthorityKeySpecPtrOutput) Elem() AuthorityKeySpecOutput {
	return o.ApplyT(func(v *AuthorityKeySpec) AuthorityKeySpec {
		if v != nil {
			return *v
		}
		var ret AuthorityKeySpec
		return ret
	}).(AuthorityKeySpecOutput)
}

// The algorithm to use for creating a managed Cloud KMS key for a for a simplified
// experience. All managed keys will be have their ProtectionLevel as HSM.
// Possible values are `SIGN_HASH_ALGORITHM_UNSPECIFIED`, `RSA_PSS_2048_SHA256`, `RSA_PSS_3072_SHA256`, `RSA_PSS_4096_SHA256`, `RSA_PKCS1_2048_SHA256`, `RSA_PKCS1_3072_SHA256`, `RSA_PKCS1_4096_SHA256`, `EC_P256_SHA256`, and `EC_P384_SHA384`.
func (o AuthorityKeySpecPtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityKeySpec) *string {
		if v == nil {
			return nil
		}
		return v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// The resource name for an existing Cloud KMS CryptoKeyVersion in the format
// `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
func (o AuthorityKeySpecPtrOutput) CloudKmsKeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityKeySpec) *string {
		if v == nil {
			return nil
		}
		return v.CloudKmsKeyVersion
	}).(pulumi.StringPtrOutput)
}

type AuthoritySubordinateConfig struct {
	// This can refer to a CertificateAuthority that was used to create a
	// subordinate CertificateAuthority. This field is used for information
	// and usability purposes only. The resource name is in the format
	// `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
	CertificateAuthority *string `pulumi:"certificateAuthority"`
	// Contains the PEM certificate chain for the issuers of this CertificateAuthority,
	// but not pem certificate for this CA itself.
	// Structure is documented below.
	PemIssuerChain *AuthoritySubordinateConfigPemIssuerChain `pulumi:"pemIssuerChain"`
}

// AuthoritySubordinateConfigInput is an input type that accepts AuthoritySubordinateConfigArgs and AuthoritySubordinateConfigOutput values.
// You can construct a concrete instance of `AuthoritySubordinateConfigInput` via:
//
//          AuthoritySubordinateConfigArgs{...}
type AuthoritySubordinateConfigInput interface {
	pulumi.Input

	ToAuthoritySubordinateConfigOutput() AuthoritySubordinateConfigOutput
	ToAuthoritySubordinateConfigOutputWithContext(context.Context) AuthoritySubordinateConfigOutput
}

type AuthoritySubordinateConfigArgs struct {
	// This can refer to a CertificateAuthority that was used to create a
	// subordinate CertificateAuthority. This field is used for information
	// and usability purposes only. The resource name is in the format
	// `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
	CertificateAuthority pulumi.StringPtrInput `pulumi:"certificateAuthority"`
	// Contains the PEM certificate chain for the issuers of this CertificateAuthority,
	// but not pem certificate for this CA itself.
	// Structure is documented below.
	PemIssuerChain AuthoritySubordinateConfigPemIssuerChainPtrInput `pulumi:"pemIssuerChain"`
}

func (AuthoritySubordinateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthoritySubordinateConfig)(nil)).Elem()
}

func (i AuthoritySubordinateConfigArgs) ToAuthoritySubordinateConfigOutput() AuthoritySubordinateConfigOutput {
	return i.ToAuthoritySubordinateConfigOutputWithContext(context.Background())
}

func (i AuthoritySubordinateConfigArgs) ToAuthoritySubordinateConfigOutputWithContext(ctx context.Context) AuthoritySubordinateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthoritySubordinateConfigOutput)
}

func (i AuthoritySubordinateConfigArgs) ToAuthoritySubordinateConfigPtrOutput() AuthoritySubordinateConfigPtrOutput {
	return i.ToAuthoritySubordinateConfigPtrOutputWithContext(context.Background())
}

func (i AuthoritySubordinateConfigArgs) ToAuthoritySubordinateConfigPtrOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthoritySubordinateConfigOutput).ToAuthoritySubordinateConfigPtrOutputWithContext(ctx)
}

// AuthoritySubordinateConfigPtrInput is an input type that accepts AuthoritySubordinateConfigArgs, AuthoritySubordinateConfigPtr and AuthoritySubordinateConfigPtrOutput values.
// You can construct a concrete instance of `AuthoritySubordinateConfigPtrInput` via:
//
//          AuthoritySubordinateConfigArgs{...}
//
//  or:
//
//          nil
type AuthoritySubordinateConfigPtrInput interface {
	pulumi.Input

	ToAuthoritySubordinateConfigPtrOutput() AuthoritySubordinateConfigPtrOutput
	ToAuthoritySubordinateConfigPtrOutputWithContext(context.Context) AuthoritySubordinateConfigPtrOutput
}

type authoritySubordinateConfigPtrType AuthoritySubordinateConfigArgs

func AuthoritySubordinateConfigPtr(v *AuthoritySubordinateConfigArgs) AuthoritySubordinateConfigPtrInput {
	return (*authoritySubordinateConfigPtrType)(v)
}

func (*authoritySubordinateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthoritySubordinateConfig)(nil)).Elem()
}

func (i *authoritySubordinateConfigPtrType) ToAuthoritySubordinateConfigPtrOutput() AuthoritySubordinateConfigPtrOutput {
	return i.ToAuthoritySubordinateConfigPtrOutputWithContext(context.Background())
}

func (i *authoritySubordinateConfigPtrType) ToAuthoritySubordinateConfigPtrOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthoritySubordinateConfigPtrOutput)
}

type AuthoritySubordinateConfigOutput struct{ *pulumi.OutputState }

func (AuthoritySubordinateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthoritySubordinateConfig)(nil)).Elem()
}

func (o AuthoritySubordinateConfigOutput) ToAuthoritySubordinateConfigOutput() AuthoritySubordinateConfigOutput {
	return o
}

func (o AuthoritySubordinateConfigOutput) ToAuthoritySubordinateConfigOutputWithContext(ctx context.Context) AuthoritySubordinateConfigOutput {
	return o
}

func (o AuthoritySubordinateConfigOutput) ToAuthoritySubordinateConfigPtrOutput() AuthoritySubordinateConfigPtrOutput {
	return o.ToAuthoritySubordinateConfigPtrOutputWithContext(context.Background())
}

func (o AuthoritySubordinateConfigOutput) ToAuthoritySubordinateConfigPtrOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthoritySubordinateConfig) *AuthoritySubordinateConfig {
		return &v
	}).(AuthoritySubordinateConfigPtrOutput)
}

// This can refer to a CertificateAuthority that was used to create a
// subordinate CertificateAuthority. This field is used for information
// and usability purposes only. The resource name is in the format
// `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
func (o AuthoritySubordinateConfigOutput) CertificateAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthoritySubordinateConfig) *string { return v.CertificateAuthority }).(pulumi.StringPtrOutput)
}

// Contains the PEM certificate chain for the issuers of this CertificateAuthority,
// but not pem certificate for this CA itself.
// Structure is documented below.
func (o AuthoritySubordinateConfigOutput) PemIssuerChain() AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return o.ApplyT(func(v AuthoritySubordinateConfig) *AuthoritySubordinateConfigPemIssuerChain { return v.PemIssuerChain }).(AuthoritySubordinateConfigPemIssuerChainPtrOutput)
}

type AuthoritySubordinateConfigPtrOutput struct{ *pulumi.OutputState }

func (AuthoritySubordinateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthoritySubordinateConfig)(nil)).Elem()
}

func (o AuthoritySubordinateConfigPtrOutput) ToAuthoritySubordinateConfigPtrOutput() AuthoritySubordinateConfigPtrOutput {
	return o
}

func (o AuthoritySubordinateConfigPtrOutput) ToAuthoritySubordinateConfigPtrOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPtrOutput {
	return o
}

func (o AuthoritySubordinateConfigPtrOutput) Elem() AuthoritySubordinateConfigOutput {
	return o.ApplyT(func(v *AuthoritySubordinateConfig) AuthoritySubordinateConfig {
		if v != nil {
			return *v
		}
		var ret AuthoritySubordinateConfig
		return ret
	}).(AuthoritySubordinateConfigOutput)
}

// This can refer to a CertificateAuthority that was used to create a
// subordinate CertificateAuthority. This field is used for information
// and usability purposes only. The resource name is in the format
// `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
func (o AuthoritySubordinateConfigPtrOutput) CertificateAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthoritySubordinateConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthority
	}).(pulumi.StringPtrOutput)
}

// Contains the PEM certificate chain for the issuers of this CertificateAuthority,
// but not pem certificate for this CA itself.
// Structure is documented below.
func (o AuthoritySubordinateConfigPtrOutput) PemIssuerChain() AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return o.ApplyT(func(v *AuthoritySubordinateConfig) *AuthoritySubordinateConfigPemIssuerChain {
		if v == nil {
			return nil
		}
		return v.PemIssuerChain
	}).(AuthoritySubordinateConfigPemIssuerChainPtrOutput)
}

type AuthoritySubordinateConfigPemIssuerChain struct {
	// Expected to be in leaf-to-root order according to RFC 5246.
	PemCertificates []string `pulumi:"pemCertificates"`
}

// AuthoritySubordinateConfigPemIssuerChainInput is an input type that accepts AuthoritySubordinateConfigPemIssuerChainArgs and AuthoritySubordinateConfigPemIssuerChainOutput values.
// You can construct a concrete instance of `AuthoritySubordinateConfigPemIssuerChainInput` via:
//
//          AuthoritySubordinateConfigPemIssuerChainArgs{...}
type AuthoritySubordinateConfigPemIssuerChainInput interface {
	pulumi.Input

	ToAuthoritySubordinateConfigPemIssuerChainOutput() AuthoritySubordinateConfigPemIssuerChainOutput
	ToAuthoritySubordinateConfigPemIssuerChainOutputWithContext(context.Context) AuthoritySubordinateConfigPemIssuerChainOutput
}

type AuthoritySubordinateConfigPemIssuerChainArgs struct {
	// Expected to be in leaf-to-root order according to RFC 5246.
	PemCertificates pulumi.StringArrayInput `pulumi:"pemCertificates"`
}

func (AuthoritySubordinateConfigPemIssuerChainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthoritySubordinateConfigPemIssuerChain)(nil)).Elem()
}

func (i AuthoritySubordinateConfigPemIssuerChainArgs) ToAuthoritySubordinateConfigPemIssuerChainOutput() AuthoritySubordinateConfigPemIssuerChainOutput {
	return i.ToAuthoritySubordinateConfigPemIssuerChainOutputWithContext(context.Background())
}

func (i AuthoritySubordinateConfigPemIssuerChainArgs) ToAuthoritySubordinateConfigPemIssuerChainOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPemIssuerChainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthoritySubordinateConfigPemIssuerChainOutput)
}

func (i AuthoritySubordinateConfigPemIssuerChainArgs) ToAuthoritySubordinateConfigPemIssuerChainPtrOutput() AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return i.ToAuthoritySubordinateConfigPemIssuerChainPtrOutputWithContext(context.Background())
}

func (i AuthoritySubordinateConfigPemIssuerChainArgs) ToAuthoritySubordinateConfigPemIssuerChainPtrOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthoritySubordinateConfigPemIssuerChainOutput).ToAuthoritySubordinateConfigPemIssuerChainPtrOutputWithContext(ctx)
}

// AuthoritySubordinateConfigPemIssuerChainPtrInput is an input type that accepts AuthoritySubordinateConfigPemIssuerChainArgs, AuthoritySubordinateConfigPemIssuerChainPtr and AuthoritySubordinateConfigPemIssuerChainPtrOutput values.
// You can construct a concrete instance of `AuthoritySubordinateConfigPemIssuerChainPtrInput` via:
//
//          AuthoritySubordinateConfigPemIssuerChainArgs{...}
//
//  or:
//
//          nil
type AuthoritySubordinateConfigPemIssuerChainPtrInput interface {
	pulumi.Input

	ToAuthoritySubordinateConfigPemIssuerChainPtrOutput() AuthoritySubordinateConfigPemIssuerChainPtrOutput
	ToAuthoritySubordinateConfigPemIssuerChainPtrOutputWithContext(context.Context) AuthoritySubordinateConfigPemIssuerChainPtrOutput
}

type authoritySubordinateConfigPemIssuerChainPtrType AuthoritySubordinateConfigPemIssuerChainArgs

func AuthoritySubordinateConfigPemIssuerChainPtr(v *AuthoritySubordinateConfigPemIssuerChainArgs) AuthoritySubordinateConfigPemIssuerChainPtrInput {
	return (*authoritySubordinateConfigPemIssuerChainPtrType)(v)
}

func (*authoritySubordinateConfigPemIssuerChainPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthoritySubordinateConfigPemIssuerChain)(nil)).Elem()
}

func (i *authoritySubordinateConfigPemIssuerChainPtrType) ToAuthoritySubordinateConfigPemIssuerChainPtrOutput() AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return i.ToAuthoritySubordinateConfigPemIssuerChainPtrOutputWithContext(context.Background())
}

func (i *authoritySubordinateConfigPemIssuerChainPtrType) ToAuthoritySubordinateConfigPemIssuerChainPtrOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthoritySubordinateConfigPemIssuerChainPtrOutput)
}

type AuthoritySubordinateConfigPemIssuerChainOutput struct{ *pulumi.OutputState }

func (AuthoritySubordinateConfigPemIssuerChainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthoritySubordinateConfigPemIssuerChain)(nil)).Elem()
}

func (o AuthoritySubordinateConfigPemIssuerChainOutput) ToAuthoritySubordinateConfigPemIssuerChainOutput() AuthoritySubordinateConfigPemIssuerChainOutput {
	return o
}

func (o AuthoritySubordinateConfigPemIssuerChainOutput) ToAuthoritySubordinateConfigPemIssuerChainOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPemIssuerChainOutput {
	return o
}

func (o AuthoritySubordinateConfigPemIssuerChainOutput) ToAuthoritySubordinateConfigPemIssuerChainPtrOutput() AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return o.ToAuthoritySubordinateConfigPemIssuerChainPtrOutputWithContext(context.Background())
}

func (o AuthoritySubordinateConfigPemIssuerChainOutput) ToAuthoritySubordinateConfigPemIssuerChainPtrOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthoritySubordinateConfigPemIssuerChain) *AuthoritySubordinateConfigPemIssuerChain {
		return &v
	}).(AuthoritySubordinateConfigPemIssuerChainPtrOutput)
}

// Expected to be in leaf-to-root order according to RFC 5246.
func (o AuthoritySubordinateConfigPemIssuerChainOutput) PemCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthoritySubordinateConfigPemIssuerChain) []string { return v.PemCertificates }).(pulumi.StringArrayOutput)
}

type AuthoritySubordinateConfigPemIssuerChainPtrOutput struct{ *pulumi.OutputState }

func (AuthoritySubordinateConfigPemIssuerChainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthoritySubordinateConfigPemIssuerChain)(nil)).Elem()
}

func (o AuthoritySubordinateConfigPemIssuerChainPtrOutput) ToAuthoritySubordinateConfigPemIssuerChainPtrOutput() AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return o
}

func (o AuthoritySubordinateConfigPemIssuerChainPtrOutput) ToAuthoritySubordinateConfigPemIssuerChainPtrOutputWithContext(ctx context.Context) AuthoritySubordinateConfigPemIssuerChainPtrOutput {
	return o
}

func (o AuthoritySubordinateConfigPemIssuerChainPtrOutput) Elem() AuthoritySubordinateConfigPemIssuerChainOutput {
	return o.ApplyT(func(v *AuthoritySubordinateConfigPemIssuerChain) AuthoritySubordinateConfigPemIssuerChain {
		if v != nil {
			return *v
		}
		var ret AuthoritySubordinateConfigPemIssuerChain
		return ret
	}).(AuthoritySubordinateConfigPemIssuerChainOutput)
}

// Expected to be in leaf-to-root order according to RFC 5246.
func (o AuthoritySubordinateConfigPemIssuerChainPtrOutput) PemCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthoritySubordinateConfigPemIssuerChain) []string {
		if v == nil {
			return nil
		}
		return v.PemCertificates
	}).(pulumi.StringArrayOutput)
}

type CaPoolIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// CaPoolIamBindingConditionInput is an input type that accepts CaPoolIamBindingConditionArgs and CaPoolIamBindingConditionOutput values.
// You can construct a concrete instance of `CaPoolIamBindingConditionInput` via:
//
//          CaPoolIamBindingConditionArgs{...}
type CaPoolIamBindingConditionInput interface {
	pulumi.Input

	ToCaPoolIamBindingConditionOutput() CaPoolIamBindingConditionOutput
	ToCaPoolIamBindingConditionOutputWithContext(context.Context) CaPoolIamBindingConditionOutput
}

type CaPoolIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (CaPoolIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIamBindingCondition)(nil)).Elem()
}

func (i CaPoolIamBindingConditionArgs) ToCaPoolIamBindingConditionOutput() CaPoolIamBindingConditionOutput {
	return i.ToCaPoolIamBindingConditionOutputWithContext(context.Background())
}

func (i CaPoolIamBindingConditionArgs) ToCaPoolIamBindingConditionOutputWithContext(ctx context.Context) CaPoolIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIamBindingConditionOutput)
}

func (i CaPoolIamBindingConditionArgs) ToCaPoolIamBindingConditionPtrOutput() CaPoolIamBindingConditionPtrOutput {
	return i.ToCaPoolIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i CaPoolIamBindingConditionArgs) ToCaPoolIamBindingConditionPtrOutputWithContext(ctx context.Context) CaPoolIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIamBindingConditionOutput).ToCaPoolIamBindingConditionPtrOutputWithContext(ctx)
}

// CaPoolIamBindingConditionPtrInput is an input type that accepts CaPoolIamBindingConditionArgs, CaPoolIamBindingConditionPtr and CaPoolIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `CaPoolIamBindingConditionPtrInput` via:
//
//          CaPoolIamBindingConditionArgs{...}
//
//  or:
//
//          nil
type CaPoolIamBindingConditionPtrInput interface {
	pulumi.Input

	ToCaPoolIamBindingConditionPtrOutput() CaPoolIamBindingConditionPtrOutput
	ToCaPoolIamBindingConditionPtrOutputWithContext(context.Context) CaPoolIamBindingConditionPtrOutput
}

type caPoolIamBindingConditionPtrType CaPoolIamBindingConditionArgs

func CaPoolIamBindingConditionPtr(v *CaPoolIamBindingConditionArgs) CaPoolIamBindingConditionPtrInput {
	return (*caPoolIamBindingConditionPtrType)(v)
}

func (*caPoolIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIamBindingCondition)(nil)).Elem()
}

func (i *caPoolIamBindingConditionPtrType) ToCaPoolIamBindingConditionPtrOutput() CaPoolIamBindingConditionPtrOutput {
	return i.ToCaPoolIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *caPoolIamBindingConditionPtrType) ToCaPoolIamBindingConditionPtrOutputWithContext(ctx context.Context) CaPoolIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIamBindingConditionPtrOutput)
}

type CaPoolIamBindingConditionOutput struct{ *pulumi.OutputState }

func (CaPoolIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIamBindingCondition)(nil)).Elem()
}

func (o CaPoolIamBindingConditionOutput) ToCaPoolIamBindingConditionOutput() CaPoolIamBindingConditionOutput {
	return o
}

func (o CaPoolIamBindingConditionOutput) ToCaPoolIamBindingConditionOutputWithContext(ctx context.Context) CaPoolIamBindingConditionOutput {
	return o
}

func (o CaPoolIamBindingConditionOutput) ToCaPoolIamBindingConditionPtrOutput() CaPoolIamBindingConditionPtrOutput {
	return o.ToCaPoolIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o CaPoolIamBindingConditionOutput) ToCaPoolIamBindingConditionPtrOutputWithContext(ctx context.Context) CaPoolIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIamBindingCondition) *CaPoolIamBindingCondition {
		return &v
	}).(CaPoolIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CaPoolIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaPoolIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CaPoolIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CaPoolIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o CaPoolIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v CaPoolIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type CaPoolIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (CaPoolIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIamBindingCondition)(nil)).Elem()
}

func (o CaPoolIamBindingConditionPtrOutput) ToCaPoolIamBindingConditionPtrOutput() CaPoolIamBindingConditionPtrOutput {
	return o
}

func (o CaPoolIamBindingConditionPtrOutput) ToCaPoolIamBindingConditionPtrOutputWithContext(ctx context.Context) CaPoolIamBindingConditionPtrOutput {
	return o
}

func (o CaPoolIamBindingConditionPtrOutput) Elem() CaPoolIamBindingConditionOutput {
	return o.ApplyT(func(v *CaPoolIamBindingCondition) CaPoolIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret CaPoolIamBindingCondition
		return ret
	}).(CaPoolIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CaPoolIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CaPoolIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o CaPoolIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type CaPoolIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// CaPoolIamMemberConditionInput is an input type that accepts CaPoolIamMemberConditionArgs and CaPoolIamMemberConditionOutput values.
// You can construct a concrete instance of `CaPoolIamMemberConditionInput` via:
//
//          CaPoolIamMemberConditionArgs{...}
type CaPoolIamMemberConditionInput interface {
	pulumi.Input

	ToCaPoolIamMemberConditionOutput() CaPoolIamMemberConditionOutput
	ToCaPoolIamMemberConditionOutputWithContext(context.Context) CaPoolIamMemberConditionOutput
}

type CaPoolIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (CaPoolIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIamMemberCondition)(nil)).Elem()
}

func (i CaPoolIamMemberConditionArgs) ToCaPoolIamMemberConditionOutput() CaPoolIamMemberConditionOutput {
	return i.ToCaPoolIamMemberConditionOutputWithContext(context.Background())
}

func (i CaPoolIamMemberConditionArgs) ToCaPoolIamMemberConditionOutputWithContext(ctx context.Context) CaPoolIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIamMemberConditionOutput)
}

func (i CaPoolIamMemberConditionArgs) ToCaPoolIamMemberConditionPtrOutput() CaPoolIamMemberConditionPtrOutput {
	return i.ToCaPoolIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i CaPoolIamMemberConditionArgs) ToCaPoolIamMemberConditionPtrOutputWithContext(ctx context.Context) CaPoolIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIamMemberConditionOutput).ToCaPoolIamMemberConditionPtrOutputWithContext(ctx)
}

// CaPoolIamMemberConditionPtrInput is an input type that accepts CaPoolIamMemberConditionArgs, CaPoolIamMemberConditionPtr and CaPoolIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `CaPoolIamMemberConditionPtrInput` via:
//
//          CaPoolIamMemberConditionArgs{...}
//
//  or:
//
//          nil
type CaPoolIamMemberConditionPtrInput interface {
	pulumi.Input

	ToCaPoolIamMemberConditionPtrOutput() CaPoolIamMemberConditionPtrOutput
	ToCaPoolIamMemberConditionPtrOutputWithContext(context.Context) CaPoolIamMemberConditionPtrOutput
}

type caPoolIamMemberConditionPtrType CaPoolIamMemberConditionArgs

func CaPoolIamMemberConditionPtr(v *CaPoolIamMemberConditionArgs) CaPoolIamMemberConditionPtrInput {
	return (*caPoolIamMemberConditionPtrType)(v)
}

func (*caPoolIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIamMemberCondition)(nil)).Elem()
}

func (i *caPoolIamMemberConditionPtrType) ToCaPoolIamMemberConditionPtrOutput() CaPoolIamMemberConditionPtrOutput {
	return i.ToCaPoolIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *caPoolIamMemberConditionPtrType) ToCaPoolIamMemberConditionPtrOutputWithContext(ctx context.Context) CaPoolIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIamMemberConditionPtrOutput)
}

type CaPoolIamMemberConditionOutput struct{ *pulumi.OutputState }

func (CaPoolIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIamMemberCondition)(nil)).Elem()
}

func (o CaPoolIamMemberConditionOutput) ToCaPoolIamMemberConditionOutput() CaPoolIamMemberConditionOutput {
	return o
}

func (o CaPoolIamMemberConditionOutput) ToCaPoolIamMemberConditionOutputWithContext(ctx context.Context) CaPoolIamMemberConditionOutput {
	return o
}

func (o CaPoolIamMemberConditionOutput) ToCaPoolIamMemberConditionPtrOutput() CaPoolIamMemberConditionPtrOutput {
	return o.ToCaPoolIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o CaPoolIamMemberConditionOutput) ToCaPoolIamMemberConditionPtrOutputWithContext(ctx context.Context) CaPoolIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIamMemberCondition) *CaPoolIamMemberCondition {
		return &v
	}).(CaPoolIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CaPoolIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaPoolIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CaPoolIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CaPoolIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o CaPoolIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v CaPoolIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type CaPoolIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (CaPoolIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIamMemberCondition)(nil)).Elem()
}

func (o CaPoolIamMemberConditionPtrOutput) ToCaPoolIamMemberConditionPtrOutput() CaPoolIamMemberConditionPtrOutput {
	return o
}

func (o CaPoolIamMemberConditionPtrOutput) ToCaPoolIamMemberConditionPtrOutputWithContext(ctx context.Context) CaPoolIamMemberConditionPtrOutput {
	return o
}

func (o CaPoolIamMemberConditionPtrOutput) Elem() CaPoolIamMemberConditionOutput {
	return o.ApplyT(func(v *CaPoolIamMemberCondition) CaPoolIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret CaPoolIamMemberCondition
		return ret
	}).(CaPoolIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CaPoolIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CaPoolIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o CaPoolIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type CaPoolIssuancePolicy struct {
	// IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
	// Structure is documented below.
	AllowedIssuanceModes *CaPoolIssuancePolicyAllowedIssuanceModes `pulumi:"allowedIssuanceModes"`
	// If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here.
	// Otherwise, any key may be used.
	// Structure is documented below.
	AllowedKeyTypes []CaPoolIssuancePolicyAllowedKeyType `pulumi:"allowedKeyTypes"`
	// A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request
	// includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate
	// request uses a CertificateTemplate that defines conflicting predefinedValues for the same properties, the certificate
	// issuance request will fail.
	// Structure is documented below.
	BaselineValues *CaPoolIssuancePolicyBaselineValues `pulumi:"baselineValues"`
	// Describes constraints on identities that may appear in Certificates issued through this CaPool.
	// If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
	// Structure is documented below.
	IdentityConstraints *CaPoolIssuancePolicyIdentityConstraints `pulumi:"identityConstraints"`
	// The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority
	// expires before a Certificate's requested maximumLifetime, the effective lifetime will be explicitly truncated to match it.
	MaximumLifetime *string `pulumi:"maximumLifetime"`
}

// CaPoolIssuancePolicyInput is an input type that accepts CaPoolIssuancePolicyArgs and CaPoolIssuancePolicyOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyInput` via:
//
//          CaPoolIssuancePolicyArgs{...}
type CaPoolIssuancePolicyInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyOutput() CaPoolIssuancePolicyOutput
	ToCaPoolIssuancePolicyOutputWithContext(context.Context) CaPoolIssuancePolicyOutput
}

type CaPoolIssuancePolicyArgs struct {
	// IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
	// Structure is documented below.
	AllowedIssuanceModes CaPoolIssuancePolicyAllowedIssuanceModesPtrInput `pulumi:"allowedIssuanceModes"`
	// If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here.
	// Otherwise, any key may be used.
	// Structure is documented below.
	AllowedKeyTypes CaPoolIssuancePolicyAllowedKeyTypeArrayInput `pulumi:"allowedKeyTypes"`
	// A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request
	// includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate
	// request uses a CertificateTemplate that defines conflicting predefinedValues for the same properties, the certificate
	// issuance request will fail.
	// Structure is documented below.
	BaselineValues CaPoolIssuancePolicyBaselineValuesPtrInput `pulumi:"baselineValues"`
	// Describes constraints on identities that may appear in Certificates issued through this CaPool.
	// If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
	// Structure is documented below.
	IdentityConstraints CaPoolIssuancePolicyIdentityConstraintsPtrInput `pulumi:"identityConstraints"`
	// The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority
	// expires before a Certificate's requested maximumLifetime, the effective lifetime will be explicitly truncated to match it.
	MaximumLifetime pulumi.StringPtrInput `pulumi:"maximumLifetime"`
}

func (CaPoolIssuancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicy)(nil)).Elem()
}

func (i CaPoolIssuancePolicyArgs) ToCaPoolIssuancePolicyOutput() CaPoolIssuancePolicyOutput {
	return i.ToCaPoolIssuancePolicyOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyArgs) ToCaPoolIssuancePolicyOutputWithContext(ctx context.Context) CaPoolIssuancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyOutput)
}

func (i CaPoolIssuancePolicyArgs) ToCaPoolIssuancePolicyPtrOutput() CaPoolIssuancePolicyPtrOutput {
	return i.ToCaPoolIssuancePolicyPtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyArgs) ToCaPoolIssuancePolicyPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyOutput).ToCaPoolIssuancePolicyPtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyPtrInput is an input type that accepts CaPoolIssuancePolicyArgs, CaPoolIssuancePolicyPtr and CaPoolIssuancePolicyPtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyPtrInput` via:
//
//          CaPoolIssuancePolicyArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyPtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyPtrOutput() CaPoolIssuancePolicyPtrOutput
	ToCaPoolIssuancePolicyPtrOutputWithContext(context.Context) CaPoolIssuancePolicyPtrOutput
}

type caPoolIssuancePolicyPtrType CaPoolIssuancePolicyArgs

func CaPoolIssuancePolicyPtr(v *CaPoolIssuancePolicyArgs) CaPoolIssuancePolicyPtrInput {
	return (*caPoolIssuancePolicyPtrType)(v)
}

func (*caPoolIssuancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicy)(nil)).Elem()
}

func (i *caPoolIssuancePolicyPtrType) ToCaPoolIssuancePolicyPtrOutput() CaPoolIssuancePolicyPtrOutput {
	return i.ToCaPoolIssuancePolicyPtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyPtrType) ToCaPoolIssuancePolicyPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyPtrOutput)
}

type CaPoolIssuancePolicyOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicy)(nil)).Elem()
}

func (o CaPoolIssuancePolicyOutput) ToCaPoolIssuancePolicyOutput() CaPoolIssuancePolicyOutput {
	return o
}

func (o CaPoolIssuancePolicyOutput) ToCaPoolIssuancePolicyOutputWithContext(ctx context.Context) CaPoolIssuancePolicyOutput {
	return o
}

func (o CaPoolIssuancePolicyOutput) ToCaPoolIssuancePolicyPtrOutput() CaPoolIssuancePolicyPtrOutput {
	return o.ToCaPoolIssuancePolicyPtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyOutput) ToCaPoolIssuancePolicyPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicy) *CaPoolIssuancePolicy {
		return &v
	}).(CaPoolIssuancePolicyPtrOutput)
}

// IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
// Structure is documented below.
func (o CaPoolIssuancePolicyOutput) AllowedIssuanceModes() CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicy) *CaPoolIssuancePolicyAllowedIssuanceModes { return v.AllowedIssuanceModes }).(CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput)
}

// If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here.
// Otherwise, any key may be used.
// Structure is documented below.
func (o CaPoolIssuancePolicyOutput) AllowedKeyTypes() CaPoolIssuancePolicyAllowedKeyTypeArrayOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicy) []CaPoolIssuancePolicyAllowedKeyType { return v.AllowedKeyTypes }).(CaPoolIssuancePolicyAllowedKeyTypeArrayOutput)
}

// A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request
// includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate
// request uses a CertificateTemplate that defines conflicting predefinedValues for the same properties, the certificate
// issuance request will fail.
// Structure is documented below.
func (o CaPoolIssuancePolicyOutput) BaselineValues() CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicy) *CaPoolIssuancePolicyBaselineValues { return v.BaselineValues }).(CaPoolIssuancePolicyBaselineValuesPtrOutput)
}

// Describes constraints on identities that may appear in Certificates issued through this CaPool.
// If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
// Structure is documented below.
func (o CaPoolIssuancePolicyOutput) IdentityConstraints() CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicy) *CaPoolIssuancePolicyIdentityConstraints { return v.IdentityConstraints }).(CaPoolIssuancePolicyIdentityConstraintsPtrOutput)
}

// The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority
// expires before a Certificate's requested maximumLifetime, the effective lifetime will be explicitly truncated to match it.
func (o CaPoolIssuancePolicyOutput) MaximumLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicy) *string { return v.MaximumLifetime }).(pulumi.StringPtrOutput)
}

type CaPoolIssuancePolicyPtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicy)(nil)).Elem()
}

func (o CaPoolIssuancePolicyPtrOutput) ToCaPoolIssuancePolicyPtrOutput() CaPoolIssuancePolicyPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyPtrOutput) ToCaPoolIssuancePolicyPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyPtrOutput) Elem() CaPoolIssuancePolicyOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicy) CaPoolIssuancePolicy {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicy
		return ret
	}).(CaPoolIssuancePolicyOutput)
}

// IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
// Structure is documented below.
func (o CaPoolIssuancePolicyPtrOutput) AllowedIssuanceModes() CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicy) *CaPoolIssuancePolicyAllowedIssuanceModes {
		if v == nil {
			return nil
		}
		return v.AllowedIssuanceModes
	}).(CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput)
}

// If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here.
// Otherwise, any key may be used.
// Structure is documented below.
func (o CaPoolIssuancePolicyPtrOutput) AllowedKeyTypes() CaPoolIssuancePolicyAllowedKeyTypeArrayOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicy) []CaPoolIssuancePolicyAllowedKeyType {
		if v == nil {
			return nil
		}
		return v.AllowedKeyTypes
	}).(CaPoolIssuancePolicyAllowedKeyTypeArrayOutput)
}

// A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request
// includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate
// request uses a CertificateTemplate that defines conflicting predefinedValues for the same properties, the certificate
// issuance request will fail.
// Structure is documented below.
func (o CaPoolIssuancePolicyPtrOutput) BaselineValues() CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicy) *CaPoolIssuancePolicyBaselineValues {
		if v == nil {
			return nil
		}
		return v.BaselineValues
	}).(CaPoolIssuancePolicyBaselineValuesPtrOutput)
}

// Describes constraints on identities that may appear in Certificates issued through this CaPool.
// If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
// Structure is documented below.
func (o CaPoolIssuancePolicyPtrOutput) IdentityConstraints() CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicy) *CaPoolIssuancePolicyIdentityConstraints {
		if v == nil {
			return nil
		}
		return v.IdentityConstraints
	}).(CaPoolIssuancePolicyIdentityConstraintsPtrOutput)
}

// The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority
// expires before a Certificate's requested maximumLifetime, the effective lifetime will be explicitly truncated to match it.
func (o CaPoolIssuancePolicyPtrOutput) MaximumLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.MaximumLifetime
	}).(pulumi.StringPtrOutput)
}

type CaPoolIssuancePolicyAllowedIssuanceModes struct {
	// When true, allows callers to create Certificates by specifying a CertificateConfig.
	AllowConfigBasedIssuance bool `pulumi:"allowConfigBasedIssuance"`
	// When true, allows callers to create Certificates by specifying a CSR.
	AllowCsrBasedIssuance bool `pulumi:"allowCsrBasedIssuance"`
}

// CaPoolIssuancePolicyAllowedIssuanceModesInput is an input type that accepts CaPoolIssuancePolicyAllowedIssuanceModesArgs and CaPoolIssuancePolicyAllowedIssuanceModesOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyAllowedIssuanceModesInput` via:
//
//          CaPoolIssuancePolicyAllowedIssuanceModesArgs{...}
type CaPoolIssuancePolicyAllowedIssuanceModesInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyAllowedIssuanceModesOutput() CaPoolIssuancePolicyAllowedIssuanceModesOutput
	ToCaPoolIssuancePolicyAllowedIssuanceModesOutputWithContext(context.Context) CaPoolIssuancePolicyAllowedIssuanceModesOutput
}

type CaPoolIssuancePolicyAllowedIssuanceModesArgs struct {
	// When true, allows callers to create Certificates by specifying a CertificateConfig.
	AllowConfigBasedIssuance pulumi.BoolInput `pulumi:"allowConfigBasedIssuance"`
	// When true, allows callers to create Certificates by specifying a CSR.
	AllowCsrBasedIssuance pulumi.BoolInput `pulumi:"allowCsrBasedIssuance"`
}

func (CaPoolIssuancePolicyAllowedIssuanceModesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyAllowedIssuanceModes)(nil)).Elem()
}

func (i CaPoolIssuancePolicyAllowedIssuanceModesArgs) ToCaPoolIssuancePolicyAllowedIssuanceModesOutput() CaPoolIssuancePolicyAllowedIssuanceModesOutput {
	return i.ToCaPoolIssuancePolicyAllowedIssuanceModesOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyAllowedIssuanceModesArgs) ToCaPoolIssuancePolicyAllowedIssuanceModesOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedIssuanceModesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedIssuanceModesOutput)
}

func (i CaPoolIssuancePolicyAllowedIssuanceModesArgs) ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutput() CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return i.ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyAllowedIssuanceModesArgs) ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedIssuanceModesOutput).ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyAllowedIssuanceModesPtrInput is an input type that accepts CaPoolIssuancePolicyAllowedIssuanceModesArgs, CaPoolIssuancePolicyAllowedIssuanceModesPtr and CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyAllowedIssuanceModesPtrInput` via:
//
//          CaPoolIssuancePolicyAllowedIssuanceModesArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyAllowedIssuanceModesPtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutput() CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput
	ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutputWithContext(context.Context) CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput
}

type caPoolIssuancePolicyAllowedIssuanceModesPtrType CaPoolIssuancePolicyAllowedIssuanceModesArgs

func CaPoolIssuancePolicyAllowedIssuanceModesPtr(v *CaPoolIssuancePolicyAllowedIssuanceModesArgs) CaPoolIssuancePolicyAllowedIssuanceModesPtrInput {
	return (*caPoolIssuancePolicyAllowedIssuanceModesPtrType)(v)
}

func (*caPoolIssuancePolicyAllowedIssuanceModesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyAllowedIssuanceModes)(nil)).Elem()
}

func (i *caPoolIssuancePolicyAllowedIssuanceModesPtrType) ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutput() CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return i.ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyAllowedIssuanceModesPtrType) ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput)
}

type CaPoolIssuancePolicyAllowedIssuanceModesOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyAllowedIssuanceModesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyAllowedIssuanceModes)(nil)).Elem()
}

func (o CaPoolIssuancePolicyAllowedIssuanceModesOutput) ToCaPoolIssuancePolicyAllowedIssuanceModesOutput() CaPoolIssuancePolicyAllowedIssuanceModesOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedIssuanceModesOutput) ToCaPoolIssuancePolicyAllowedIssuanceModesOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedIssuanceModesOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedIssuanceModesOutput) ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutput() CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return o.ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyAllowedIssuanceModesOutput) ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyAllowedIssuanceModes) *CaPoolIssuancePolicyAllowedIssuanceModes {
		return &v
	}).(CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput)
}

// When true, allows callers to create Certificates by specifying a CertificateConfig.
func (o CaPoolIssuancePolicyAllowedIssuanceModesOutput) AllowConfigBasedIssuance() pulumi.BoolOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyAllowedIssuanceModes) bool { return v.AllowConfigBasedIssuance }).(pulumi.BoolOutput)
}

// When true, allows callers to create Certificates by specifying a CSR.
func (o CaPoolIssuancePolicyAllowedIssuanceModesOutput) AllowCsrBasedIssuance() pulumi.BoolOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyAllowedIssuanceModes) bool { return v.AllowCsrBasedIssuance }).(pulumi.BoolOutput)
}

type CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyAllowedIssuanceModes)(nil)).Elem()
}

func (o CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput) ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutput() CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput) ToCaPoolIssuancePolicyAllowedIssuanceModesPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput) Elem() CaPoolIssuancePolicyAllowedIssuanceModesOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyAllowedIssuanceModes) CaPoolIssuancePolicyAllowedIssuanceModes {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyAllowedIssuanceModes
		return ret
	}).(CaPoolIssuancePolicyAllowedIssuanceModesOutput)
}

// When true, allows callers to create Certificates by specifying a CertificateConfig.
func (o CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput) AllowConfigBasedIssuance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyAllowedIssuanceModes) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowConfigBasedIssuance
	}).(pulumi.BoolPtrOutput)
}

// When true, allows callers to create Certificates by specifying a CSR.
func (o CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput) AllowCsrBasedIssuance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyAllowedIssuanceModes) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowCsrBasedIssuance
	}).(pulumi.BoolPtrOutput)
}

type CaPoolIssuancePolicyAllowedKeyType struct {
	// Represents an allowed Elliptic Curve key type.
	// Structure is documented below.
	EllipticCurve *CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve `pulumi:"ellipticCurve"`
	// Describes an RSA key that may be used in a Certificate issued from a CaPool.
	// Structure is documented below.
	Rsa *CaPoolIssuancePolicyAllowedKeyTypeRsa `pulumi:"rsa"`
}

// CaPoolIssuancePolicyAllowedKeyTypeInput is an input type that accepts CaPoolIssuancePolicyAllowedKeyTypeArgs and CaPoolIssuancePolicyAllowedKeyTypeOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyAllowedKeyTypeInput` via:
//
//          CaPoolIssuancePolicyAllowedKeyTypeArgs{...}
type CaPoolIssuancePolicyAllowedKeyTypeInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyAllowedKeyTypeOutput() CaPoolIssuancePolicyAllowedKeyTypeOutput
	ToCaPoolIssuancePolicyAllowedKeyTypeOutputWithContext(context.Context) CaPoolIssuancePolicyAllowedKeyTypeOutput
}

type CaPoolIssuancePolicyAllowedKeyTypeArgs struct {
	// Represents an allowed Elliptic Curve key type.
	// Structure is documented below.
	EllipticCurve CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrInput `pulumi:"ellipticCurve"`
	// Describes an RSA key that may be used in a Certificate issued from a CaPool.
	// Structure is documented below.
	Rsa CaPoolIssuancePolicyAllowedKeyTypeRsaPtrInput `pulumi:"rsa"`
}

func (CaPoolIssuancePolicyAllowedKeyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyType)(nil)).Elem()
}

func (i CaPoolIssuancePolicyAllowedKeyTypeArgs) ToCaPoolIssuancePolicyAllowedKeyTypeOutput() CaPoolIssuancePolicyAllowedKeyTypeOutput {
	return i.ToCaPoolIssuancePolicyAllowedKeyTypeOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyAllowedKeyTypeArgs) ToCaPoolIssuancePolicyAllowedKeyTypeOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedKeyTypeOutput)
}

// CaPoolIssuancePolicyAllowedKeyTypeArrayInput is an input type that accepts CaPoolIssuancePolicyAllowedKeyTypeArray and CaPoolIssuancePolicyAllowedKeyTypeArrayOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyAllowedKeyTypeArrayInput` via:
//
//          CaPoolIssuancePolicyAllowedKeyTypeArray{ CaPoolIssuancePolicyAllowedKeyTypeArgs{...} }
type CaPoolIssuancePolicyAllowedKeyTypeArrayInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyAllowedKeyTypeArrayOutput() CaPoolIssuancePolicyAllowedKeyTypeArrayOutput
	ToCaPoolIssuancePolicyAllowedKeyTypeArrayOutputWithContext(context.Context) CaPoolIssuancePolicyAllowedKeyTypeArrayOutput
}

type CaPoolIssuancePolicyAllowedKeyTypeArray []CaPoolIssuancePolicyAllowedKeyTypeInput

func (CaPoolIssuancePolicyAllowedKeyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaPoolIssuancePolicyAllowedKeyType)(nil)).Elem()
}

func (i CaPoolIssuancePolicyAllowedKeyTypeArray) ToCaPoolIssuancePolicyAllowedKeyTypeArrayOutput() CaPoolIssuancePolicyAllowedKeyTypeArrayOutput {
	return i.ToCaPoolIssuancePolicyAllowedKeyTypeArrayOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyAllowedKeyTypeArray) ToCaPoolIssuancePolicyAllowedKeyTypeArrayOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedKeyTypeArrayOutput)
}

type CaPoolIssuancePolicyAllowedKeyTypeOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyAllowedKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyType)(nil)).Elem()
}

func (o CaPoolIssuancePolicyAllowedKeyTypeOutput) ToCaPoolIssuancePolicyAllowedKeyTypeOutput() CaPoolIssuancePolicyAllowedKeyTypeOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeOutput) ToCaPoolIssuancePolicyAllowedKeyTypeOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeOutput {
	return o
}

// Represents an allowed Elliptic Curve key type.
// Structure is documented below.
func (o CaPoolIssuancePolicyAllowedKeyTypeOutput) EllipticCurve() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyAllowedKeyType) *CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve {
		return v.EllipticCurve
	}).(CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput)
}

// Describes an RSA key that may be used in a Certificate issued from a CaPool.
// Structure is documented below.
func (o CaPoolIssuancePolicyAllowedKeyTypeOutput) Rsa() CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyAllowedKeyType) *CaPoolIssuancePolicyAllowedKeyTypeRsa { return v.Rsa }).(CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput)
}

type CaPoolIssuancePolicyAllowedKeyTypeArrayOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyAllowedKeyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaPoolIssuancePolicyAllowedKeyType)(nil)).Elem()
}

func (o CaPoolIssuancePolicyAllowedKeyTypeArrayOutput) ToCaPoolIssuancePolicyAllowedKeyTypeArrayOutput() CaPoolIssuancePolicyAllowedKeyTypeArrayOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeArrayOutput) ToCaPoolIssuancePolicyAllowedKeyTypeArrayOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeArrayOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeArrayOutput) Index(i pulumi.IntInput) CaPoolIssuancePolicyAllowedKeyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CaPoolIssuancePolicyAllowedKeyType {
		return vs[0].([]CaPoolIssuancePolicyAllowedKeyType)[vs[1].(int)]
	}).(CaPoolIssuancePolicyAllowedKeyTypeOutput)
}

type CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve struct {
	// The algorithm used.
	// Possible values are `ECDSA_P256`, `ECDSA_P384`, and `EDDSA_25519`.
	SignatureAlgorithm string `pulumi:"signatureAlgorithm"`
}

// CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveInput is an input type that accepts CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs and CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveInput` via:
//
//          CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs{...}
type CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput
	ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutputWithContext(context.Context) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput
}

type CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs struct {
	// The algorithm used.
	// Possible values are `ECDSA_P256`, `ECDSA_P384`, and `EDDSA_25519`.
	SignatureAlgorithm pulumi.StringInput `pulumi:"signatureAlgorithm"`
}

func (CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve)(nil)).Elem()
}

func (i CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput {
	return i.ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput)
}

func (i CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput {
	return i.ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput).ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrInput is an input type that accepts CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs, CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtr and CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrInput` via:
//
//          CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput
	ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutputWithContext(context.Context) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput
}

type caPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrType CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs

func CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtr(v *CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrInput {
	return (*caPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrType)(v)
}

func (*caPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve)(nil)).Elem()
}

func (i *caPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrType) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput {
	return i.ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrType) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput)
}

type CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve)(nil)).Elem()
}

func (o CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput {
	return o.ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve) *CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve {
		return &v
	}).(CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput)
}

// The algorithm used.
// Possible values are `ECDSA_P256`, `ECDSA_P384`, and `EDDSA_25519`.
func (o CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

type CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve)(nil)).Elem()
}

func (o CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput) ToCaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput) Elem() CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve) CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve
		return ret
	}).(CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput)
}

// The algorithm used.
// Possible values are `ECDSA_P256`, `ECDSA_P384`, and `EDDSA_25519`.
func (o CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyAllowedKeyTypeEllipticCurve) *string {
		if v == nil {
			return nil
		}
		return &v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

type CaPoolIssuancePolicyAllowedKeyTypeRsa struct {
	// The maximum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
	// service will not enforce an explicit upper bound on RSA modulus sizes.
	MaxModulusSize *string `pulumi:"maxModulusSize"`
	// The minimum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
	// service-level min RSA modulus size will continue to apply.
	MinModulusSize *string `pulumi:"minModulusSize"`
}

// CaPoolIssuancePolicyAllowedKeyTypeRsaInput is an input type that accepts CaPoolIssuancePolicyAllowedKeyTypeRsaArgs and CaPoolIssuancePolicyAllowedKeyTypeRsaOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyAllowedKeyTypeRsaInput` via:
//
//          CaPoolIssuancePolicyAllowedKeyTypeRsaArgs{...}
type CaPoolIssuancePolicyAllowedKeyTypeRsaInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyAllowedKeyTypeRsaOutput() CaPoolIssuancePolicyAllowedKeyTypeRsaOutput
	ToCaPoolIssuancePolicyAllowedKeyTypeRsaOutputWithContext(context.Context) CaPoolIssuancePolicyAllowedKeyTypeRsaOutput
}

type CaPoolIssuancePolicyAllowedKeyTypeRsaArgs struct {
	// The maximum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
	// service will not enforce an explicit upper bound on RSA modulus sizes.
	MaxModulusSize pulumi.StringPtrInput `pulumi:"maxModulusSize"`
	// The minimum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
	// service-level min RSA modulus size will continue to apply.
	MinModulusSize pulumi.StringPtrInput `pulumi:"minModulusSize"`
}

func (CaPoolIssuancePolicyAllowedKeyTypeRsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeRsa)(nil)).Elem()
}

func (i CaPoolIssuancePolicyAllowedKeyTypeRsaArgs) ToCaPoolIssuancePolicyAllowedKeyTypeRsaOutput() CaPoolIssuancePolicyAllowedKeyTypeRsaOutput {
	return i.ToCaPoolIssuancePolicyAllowedKeyTypeRsaOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyAllowedKeyTypeRsaArgs) ToCaPoolIssuancePolicyAllowedKeyTypeRsaOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeRsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedKeyTypeRsaOutput)
}

func (i CaPoolIssuancePolicyAllowedKeyTypeRsaArgs) ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput() CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput {
	return i.ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyAllowedKeyTypeRsaArgs) ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedKeyTypeRsaOutput).ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyAllowedKeyTypeRsaPtrInput is an input type that accepts CaPoolIssuancePolicyAllowedKeyTypeRsaArgs, CaPoolIssuancePolicyAllowedKeyTypeRsaPtr and CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyAllowedKeyTypeRsaPtrInput` via:
//
//          CaPoolIssuancePolicyAllowedKeyTypeRsaArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyAllowedKeyTypeRsaPtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput() CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput
	ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutputWithContext(context.Context) CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput
}

type caPoolIssuancePolicyAllowedKeyTypeRsaPtrType CaPoolIssuancePolicyAllowedKeyTypeRsaArgs

func CaPoolIssuancePolicyAllowedKeyTypeRsaPtr(v *CaPoolIssuancePolicyAllowedKeyTypeRsaArgs) CaPoolIssuancePolicyAllowedKeyTypeRsaPtrInput {
	return (*caPoolIssuancePolicyAllowedKeyTypeRsaPtrType)(v)
}

func (*caPoolIssuancePolicyAllowedKeyTypeRsaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyAllowedKeyTypeRsa)(nil)).Elem()
}

func (i *caPoolIssuancePolicyAllowedKeyTypeRsaPtrType) ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput() CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput {
	return i.ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyAllowedKeyTypeRsaPtrType) ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput)
}

type CaPoolIssuancePolicyAllowedKeyTypeRsaOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyAllowedKeyTypeRsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeRsa)(nil)).Elem()
}

func (o CaPoolIssuancePolicyAllowedKeyTypeRsaOutput) ToCaPoolIssuancePolicyAllowedKeyTypeRsaOutput() CaPoolIssuancePolicyAllowedKeyTypeRsaOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeRsaOutput) ToCaPoolIssuancePolicyAllowedKeyTypeRsaOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeRsaOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeRsaOutput) ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput() CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput {
	return o.ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyAllowedKeyTypeRsaOutput) ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyAllowedKeyTypeRsa) *CaPoolIssuancePolicyAllowedKeyTypeRsa {
		return &v
	}).(CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput)
}

// The maximum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
// service will not enforce an explicit upper bound on RSA modulus sizes.
func (o CaPoolIssuancePolicyAllowedKeyTypeRsaOutput) MaxModulusSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyAllowedKeyTypeRsa) *string { return v.MaxModulusSize }).(pulumi.StringPtrOutput)
}

// The minimum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
// service-level min RSA modulus size will continue to apply.
func (o CaPoolIssuancePolicyAllowedKeyTypeRsaOutput) MinModulusSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyAllowedKeyTypeRsa) *string { return v.MinModulusSize }).(pulumi.StringPtrOutput)
}

type CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyAllowedKeyTypeRsa)(nil)).Elem()
}

func (o CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput) ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput() CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput) ToCaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput) Elem() CaPoolIssuancePolicyAllowedKeyTypeRsaOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyAllowedKeyTypeRsa) CaPoolIssuancePolicyAllowedKeyTypeRsa {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyAllowedKeyTypeRsa
		return ret
	}).(CaPoolIssuancePolicyAllowedKeyTypeRsaOutput)
}

// The maximum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
// service will not enforce an explicit upper bound on RSA modulus sizes.
func (o CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput) MaxModulusSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyAllowedKeyTypeRsa) *string {
		if v == nil {
			return nil
		}
		return v.MaxModulusSize
	}).(pulumi.StringPtrOutput)
}

// The minimum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
// service-level min RSA modulus size will continue to apply.
func (o CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput) MinModulusSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyAllowedKeyTypeRsa) *string {
		if v == nil {
			return nil
		}
		return v.MinModulusSize
	}).(pulumi.StringPtrOutput)
}

type CaPoolIssuancePolicyBaselineValues struct {
	// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
	// Structure is documented below.
	AdditionalExtensions []CaPoolIssuancePolicyBaselineValuesAdditionalExtension `pulumi:"additionalExtensions"`
	// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
	// "Authority Information Access" extension in the certificate.
	AiaOcspServers []string `pulumi:"aiaOcspServers"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	CaOptions CaPoolIssuancePolicyBaselineValuesCaOptions `pulumi:"caOptions"`
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsage CaPoolIssuancePolicyBaselineValuesKeyUsage `pulumi:"keyUsage"`
	// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	// Structure is documented below.
	PolicyIds []CaPoolIssuancePolicyBaselineValuesPolicyId `pulumi:"policyIds"`
}

// CaPoolIssuancePolicyBaselineValuesInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesArgs and CaPoolIssuancePolicyBaselineValuesOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesArgs{...}
type CaPoolIssuancePolicyBaselineValuesInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesOutput() CaPoolIssuancePolicyBaselineValuesOutput
	ToCaPoolIssuancePolicyBaselineValuesOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesOutput
}

type CaPoolIssuancePolicyBaselineValuesArgs struct {
	// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
	// Structure is documented below.
	AdditionalExtensions CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayInput `pulumi:"additionalExtensions"`
	// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
	// "Authority Information Access" extension in the certificate.
	AiaOcspServers pulumi.StringArrayInput `pulumi:"aiaOcspServers"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	CaOptions CaPoolIssuancePolicyBaselineValuesCaOptionsInput `pulumi:"caOptions"`
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsage CaPoolIssuancePolicyBaselineValuesKeyUsageInput `pulumi:"keyUsage"`
	// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	// Structure is documented below.
	PolicyIds CaPoolIssuancePolicyBaselineValuesPolicyIdArrayInput `pulumi:"policyIds"`
}

func (CaPoolIssuancePolicyBaselineValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValues)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesArgs) ToCaPoolIssuancePolicyBaselineValuesOutput() CaPoolIssuancePolicyBaselineValuesOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesArgs) ToCaPoolIssuancePolicyBaselineValuesOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesOutput)
}

func (i CaPoolIssuancePolicyBaselineValuesArgs) ToCaPoolIssuancePolicyBaselineValuesPtrOutput() CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesPtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesArgs) ToCaPoolIssuancePolicyBaselineValuesPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesOutput).ToCaPoolIssuancePolicyBaselineValuesPtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyBaselineValuesPtrInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesArgs, CaPoolIssuancePolicyBaselineValuesPtr and CaPoolIssuancePolicyBaselineValuesPtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesPtrInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyBaselineValuesPtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesPtrOutput() CaPoolIssuancePolicyBaselineValuesPtrOutput
	ToCaPoolIssuancePolicyBaselineValuesPtrOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesPtrOutput
}

type caPoolIssuancePolicyBaselineValuesPtrType CaPoolIssuancePolicyBaselineValuesArgs

func CaPoolIssuancePolicyBaselineValuesPtr(v *CaPoolIssuancePolicyBaselineValuesArgs) CaPoolIssuancePolicyBaselineValuesPtrInput {
	return (*caPoolIssuancePolicyBaselineValuesPtrType)(v)
}

func (*caPoolIssuancePolicyBaselineValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValues)(nil)).Elem()
}

func (i *caPoolIssuancePolicyBaselineValuesPtrType) ToCaPoolIssuancePolicyBaselineValuesPtrOutput() CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesPtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyBaselineValuesPtrType) ToCaPoolIssuancePolicyBaselineValuesPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesPtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValues)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesOutput) ToCaPoolIssuancePolicyBaselineValuesOutput() CaPoolIssuancePolicyBaselineValuesOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesOutput) ToCaPoolIssuancePolicyBaselineValuesOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesOutput) ToCaPoolIssuancePolicyBaselineValuesPtrOutput() CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return o.ToCaPoolIssuancePolicyBaselineValuesPtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyBaselineValuesOutput) ToCaPoolIssuancePolicyBaselineValuesPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyBaselineValues) *CaPoolIssuancePolicyBaselineValues {
		return &v
	}).(CaPoolIssuancePolicyBaselineValuesPtrOutput)
}

// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesOutput) AdditionalExtensions() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValues) []CaPoolIssuancePolicyBaselineValuesAdditionalExtension {
		return v.AdditionalExtensions
	}).(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput)
}

// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
// "Authority Information Access" extension in the certificate.
func (o CaPoolIssuancePolicyBaselineValuesOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValues) []string { return v.AiaOcspServers }).(pulumi.StringArrayOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesOutput) CaOptions() CaPoolIssuancePolicyBaselineValuesCaOptionsOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValues) CaPoolIssuancePolicyBaselineValuesCaOptions {
		return v.CaOptions
	}).(CaPoolIssuancePolicyBaselineValuesCaOptionsOutput)
}

// Indicates the intended use for keys that correspond to a certificate.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesOutput) KeyUsage() CaPoolIssuancePolicyBaselineValuesKeyUsageOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValues) CaPoolIssuancePolicyBaselineValuesKeyUsage {
		return v.KeyUsage
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageOutput)
}

// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesOutput) PolicyIds() CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValues) []CaPoolIssuancePolicyBaselineValuesPolicyId {
		return v.PolicyIds
	}).(CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesPtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValues)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesPtrOutput) ToCaPoolIssuancePolicyBaselineValuesPtrOutput() CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesPtrOutput) ToCaPoolIssuancePolicyBaselineValuesPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesPtrOutput) Elem() CaPoolIssuancePolicyBaselineValuesOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValues) CaPoolIssuancePolicyBaselineValues {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyBaselineValues
		return ret
	}).(CaPoolIssuancePolicyBaselineValuesOutput)
}

// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesPtrOutput) AdditionalExtensions() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValues) []CaPoolIssuancePolicyBaselineValuesAdditionalExtension {
		if v == nil {
			return nil
		}
		return v.AdditionalExtensions
	}).(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput)
}

// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
// "Authority Information Access" extension in the certificate.
func (o CaPoolIssuancePolicyBaselineValuesPtrOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValues) []string {
		if v == nil {
			return nil
		}
		return v.AiaOcspServers
	}).(pulumi.StringArrayOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesPtrOutput) CaOptions() CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValues) *CaPoolIssuancePolicyBaselineValuesCaOptions {
		if v == nil {
			return nil
		}
		return &v.CaOptions
	}).(CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput)
}

// Indicates the intended use for keys that correspond to a certificate.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesPtrOutput) KeyUsage() CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValues) *CaPoolIssuancePolicyBaselineValuesKeyUsage {
		if v == nil {
			return nil
		}
		return &v.KeyUsage
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput)
}

// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesPtrOutput) PolicyIds() CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValues) []CaPoolIssuancePolicyBaselineValuesPolicyId {
		if v == nil {
			return nil
		}
		return v.PolicyIds
	}).(CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesAdditionalExtension struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical bool `pulumi:"critical"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	ObjectId CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectId `pulumi:"objectId"`
	// The value of this X.509 extension. A base64-encoded string.
	Value string `pulumi:"value"`
}

// CaPoolIssuancePolicyBaselineValuesAdditionalExtensionInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArgs and CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesAdditionalExtensionInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArgs{...}
type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput
	ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput
}

type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArgs struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical pulumi.BoolInput `pulumi:"critical"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	ObjectId CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdInput `pulumi:"objectId"`
	// The value of this X.509 extension. A base64-encoded string.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesAdditionalExtension)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArgs) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArgs) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput)
}

// CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArray and CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArray{ CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArgs{...} }
type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput
	ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput
}

type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArray []CaPoolIssuancePolicyBaselineValuesAdditionalExtensionInput

func (CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaPoolIssuancePolicyBaselineValuesAdditionalExtension)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArray) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArray) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesAdditionalExtension)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput {
	return o
}

// Indicates whether or not this extension is critical (i.e., if the client does not know how to
// handle this extension, the client should consider this to be an error).
func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput) Critical() pulumi.BoolOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesAdditionalExtension) bool { return v.Critical }).(pulumi.BoolOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput) ObjectId() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesAdditionalExtension) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectId {
		return v.ObjectId
	}).(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput)
}

// The value of this X.509 extension. A base64-encoded string.
func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesAdditionalExtension) string { return v.Value }).(pulumi.StringOutput)
}

type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaPoolIssuancePolicyBaselineValuesAdditionalExtension)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput) Index(i pulumi.IntInput) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CaPoolIssuancePolicyBaselineValuesAdditionalExtension {
		return vs[0].([]CaPoolIssuancePolicyBaselineValuesAdditionalExtension)[vs[1].(int)]
	}).(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput)
}

type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdArgs and CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdArgs{...}
type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput
	ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput
}

type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectId)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdArgs) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdArgs) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput)
}

type CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectId)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput() CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput) ToCaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesCaOptions struct {
	// When true, the "CA" in Basic Constraints extension will be set to true.
	IsCa *bool `pulumi:"isCa"`
	// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
	// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
	MaxIssuerPathLength *int `pulumi:"maxIssuerPathLength"`
	// When true, the "CA" in Basic Constraints extension will be set to false.
	// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
	NonCa *bool `pulumi:"nonCa"`
	// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
	// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
	// the max path length will be omitted from the CA certificate.
	ZeroMaxIssuerPathLength *bool `pulumi:"zeroMaxIssuerPathLength"`
}

// CaPoolIssuancePolicyBaselineValuesCaOptionsInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesCaOptionsArgs and CaPoolIssuancePolicyBaselineValuesCaOptionsOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesCaOptionsInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesCaOptionsArgs{...}
type CaPoolIssuancePolicyBaselineValuesCaOptionsInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesCaOptionsOutput() CaPoolIssuancePolicyBaselineValuesCaOptionsOutput
	ToCaPoolIssuancePolicyBaselineValuesCaOptionsOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesCaOptionsOutput
}

type CaPoolIssuancePolicyBaselineValuesCaOptionsArgs struct {
	// When true, the "CA" in Basic Constraints extension will be set to true.
	IsCa pulumi.BoolPtrInput `pulumi:"isCa"`
	// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
	// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
	MaxIssuerPathLength pulumi.IntPtrInput `pulumi:"maxIssuerPathLength"`
	// When true, the "CA" in Basic Constraints extension will be set to false.
	// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
	NonCa pulumi.BoolPtrInput `pulumi:"nonCa"`
	// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
	// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
	// the max path length will be omitted from the CA certificate.
	ZeroMaxIssuerPathLength pulumi.BoolPtrInput `pulumi:"zeroMaxIssuerPathLength"`
}

func (CaPoolIssuancePolicyBaselineValuesCaOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesCaOptions)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesCaOptionsArgs) ToCaPoolIssuancePolicyBaselineValuesCaOptionsOutput() CaPoolIssuancePolicyBaselineValuesCaOptionsOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesCaOptionsOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesCaOptionsArgs) ToCaPoolIssuancePolicyBaselineValuesCaOptionsOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesCaOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesCaOptionsOutput)
}

func (i CaPoolIssuancePolicyBaselineValuesCaOptionsArgs) ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput() CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesCaOptionsArgs) ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesCaOptionsOutput).ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyBaselineValuesCaOptionsPtrInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesCaOptionsArgs, CaPoolIssuancePolicyBaselineValuesCaOptionsPtr and CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesCaOptionsPtrInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesCaOptionsArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyBaselineValuesCaOptionsPtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput() CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput
	ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput
}

type caPoolIssuancePolicyBaselineValuesCaOptionsPtrType CaPoolIssuancePolicyBaselineValuesCaOptionsArgs

func CaPoolIssuancePolicyBaselineValuesCaOptionsPtr(v *CaPoolIssuancePolicyBaselineValuesCaOptionsArgs) CaPoolIssuancePolicyBaselineValuesCaOptionsPtrInput {
	return (*caPoolIssuancePolicyBaselineValuesCaOptionsPtrType)(v)
}

func (*caPoolIssuancePolicyBaselineValuesCaOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValuesCaOptions)(nil)).Elem()
}

func (i *caPoolIssuancePolicyBaselineValuesCaOptionsPtrType) ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput() CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyBaselineValuesCaOptionsPtrType) ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesCaOptionsOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesCaOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesCaOptions)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesCaOptionsOutput) ToCaPoolIssuancePolicyBaselineValuesCaOptionsOutput() CaPoolIssuancePolicyBaselineValuesCaOptionsOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesCaOptionsOutput) ToCaPoolIssuancePolicyBaselineValuesCaOptionsOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesCaOptionsOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesCaOptionsOutput) ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput() CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput {
	return o.ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyBaselineValuesCaOptionsOutput) ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyBaselineValuesCaOptions) *CaPoolIssuancePolicyBaselineValuesCaOptions {
		return &v
	}).(CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to true.
func (o CaPoolIssuancePolicyBaselineValuesCaOptionsOutput) IsCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesCaOptions) *bool { return v.IsCa }).(pulumi.BoolPtrOutput)
}

// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
func (o CaPoolIssuancePolicyBaselineValuesCaOptionsOutput) MaxIssuerPathLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesCaOptions) *int { return v.MaxIssuerPathLength }).(pulumi.IntPtrOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to false.
// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
func (o CaPoolIssuancePolicyBaselineValuesCaOptionsOutput) NonCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesCaOptions) *bool { return v.NonCa }).(pulumi.BoolPtrOutput)
}

// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
// the max path length will be omitted from the CA certificate.
func (o CaPoolIssuancePolicyBaselineValuesCaOptionsOutput) ZeroMaxIssuerPathLength() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesCaOptions) *bool { return v.ZeroMaxIssuerPathLength }).(pulumi.BoolPtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValuesCaOptions)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput) ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput() CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput) ToCaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput) Elem() CaPoolIssuancePolicyBaselineValuesCaOptionsOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesCaOptions) CaPoolIssuancePolicyBaselineValuesCaOptions {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyBaselineValuesCaOptions
		return ret
	}).(CaPoolIssuancePolicyBaselineValuesCaOptionsOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to true.
func (o CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput) IsCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesCaOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsCa
	}).(pulumi.BoolPtrOutput)
}

// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
func (o CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput) MaxIssuerPathLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesCaOptions) *int {
		if v == nil {
			return nil
		}
		return v.MaxIssuerPathLength
	}).(pulumi.IntPtrOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to false.
// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
func (o CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput) NonCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesCaOptions) *bool {
		if v == nil {
			return nil
		}
		return v.NonCa
	}).(pulumi.BoolPtrOutput)
}

// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
// the max path length will be omitted from the CA certificate.
func (o CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput) ZeroMaxIssuerPathLength() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesCaOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ZeroMaxIssuerPathLength
	}).(pulumi.BoolPtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsage struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsage CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage `pulumi:"baseKeyUsage"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsage CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage `pulumi:"extendedKeyUsage"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages []CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage `pulumi:"unknownExtendedKeyUsages"`
}

// CaPoolIssuancePolicyBaselineValuesKeyUsageInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesKeyUsageArgs and CaPoolIssuancePolicyBaselineValuesKeyUsageOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesKeyUsageInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesKeyUsageArgs{...}
type CaPoolIssuancePolicyBaselineValuesKeyUsageInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageOutput
	ToCaPoolIssuancePolicyBaselineValuesKeyUsageOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageOutput
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageArgs struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsage CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageInput `pulumi:"baseKeyUsage"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsage CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageInput `pulumi:"extendedKeyUsage"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayInput `pulumi:"unknownExtendedKeyUsages"`
}

func (CaPoolIssuancePolicyBaselineValuesKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsage)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsageOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageOutput)
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageOutput).ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyBaselineValuesKeyUsagePtrInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesKeyUsageArgs, CaPoolIssuancePolicyBaselineValuesKeyUsagePtr and CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesKeyUsagePtrInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesKeyUsageArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyBaselineValuesKeyUsagePtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput
	ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput
}

type caPoolIssuancePolicyBaselineValuesKeyUsagePtrType CaPoolIssuancePolicyBaselineValuesKeyUsageArgs

func CaPoolIssuancePolicyBaselineValuesKeyUsagePtr(v *CaPoolIssuancePolicyBaselineValuesKeyUsageArgs) CaPoolIssuancePolicyBaselineValuesKeyUsagePtrInput {
	return (*caPoolIssuancePolicyBaselineValuesKeyUsagePtrType)(v)
}

func (*caPoolIssuancePolicyBaselineValuesKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValuesKeyUsage)(nil)).Elem()
}

func (i *caPoolIssuancePolicyBaselineValuesKeyUsagePtrType) ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyBaselineValuesKeyUsagePtrType) ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsage)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput {
	return o.ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyBaselineValuesKeyUsage) *CaPoolIssuancePolicyBaselineValuesKeyUsage {
		return &v
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageOutput) BaseKeyUsage() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsage) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage {
		return v.BaseKeyUsage
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageOutput) ExtendedKeyUsage() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsage) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage {
		return v.ExtendedKeyUsage
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput)
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageOutput) UnknownExtendedKeyUsages() CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsage) []CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage {
		return v.UnknownExtendedKeyUsages
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValuesKeyUsage)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput) Elem() CaPoolIssuancePolicyBaselineValuesKeyUsageOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsage) CaPoolIssuancePolicyBaselineValuesKeyUsage {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyBaselineValuesKeyUsage
		return ret
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput) BaseKeyUsage() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsage) *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage {
		if v == nil {
			return nil
		}
		return &v.BaseKeyUsage
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput) ExtendedKeyUsage() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsage) *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage {
		if v == nil {
			return nil
		}
		return &v.ExtendedKeyUsage
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput)
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
// Structure is documented below.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput) UnknownExtendedKeyUsages() CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsage) []CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage {
		if v == nil {
			return nil
		}
		return v.UnknownExtendedKeyUsages
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage struct {
	// The key may be used to sign certificates.
	CertSign *bool `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment *bool `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign *bool `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment *bool `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly *bool `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature *bool `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly *bool `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement *bool `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment *bool `pulumi:"keyEncipherment"`
}

// CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs and CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs{...}
type CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput
	ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs struct {
	// The key may be used to sign certificates.
	CertSign pulumi.BoolPtrInput `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment pulumi.BoolPtrInput `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign pulumi.BoolPtrInput `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment pulumi.BoolPtrInput `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly pulumi.BoolPtrInput `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature pulumi.BoolPtrInput `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly pulumi.BoolPtrInput `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement pulumi.BoolPtrInput `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment pulumi.BoolPtrInput `pulumi:"keyEncipherment"`
}

func (CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput)
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput).ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs, CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtr and CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput
	ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput
}

type caPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrType CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs

func CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtr(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrInput {
	return (*caPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrType)(v)
}

func (*caPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i *caPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrType) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrType) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput {
	return o.ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage {
		return &v
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput)
}

// The key may be used to sign certificates.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool { return v.CertSign }).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool { return v.ContentCommitment }).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool { return v.CrlSign }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool { return v.DataEncipherment }).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool { return v.DecipherOnly }).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool { return v.DigitalSignature }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool { return v.EncipherOnly }).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool { return v.KeyAgreement }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool { return v.KeyEncipherment }).(pulumi.BoolPtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) Elem() CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage
		return ret
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput)
}

// The key may be used to sign certificates.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CertSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ContentCommitment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CrlSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DataEncipherment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DecipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DigitalSignature
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.EncipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.KeyAgreement
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.KeyEncipherment
	}).(pulumi.BoolPtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth *bool `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning *bool `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection *bool `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning *bool `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth *bool `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping *bool `pulumi:"timeStamping"`
}

// CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs and CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs{...}
type CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput
	ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth pulumi.BoolPtrInput `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning pulumi.BoolPtrInput `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection pulumi.BoolPtrInput `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning pulumi.BoolPtrInput `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth pulumi.BoolPtrInput `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping pulumi.BoolPtrInput `pulumi:"timeStamping"`
}

func (CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput)
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput).ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs, CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtr and CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput
	ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput
}

type caPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrType CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs

func CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtr(v *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrInput {
	return (*caPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrType)(v)
}

func (*caPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i *caPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrType) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrType) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o.ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage {
		return &v
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool { return v.ClientAuth }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool { return v.CodeSigning }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool { return v.EmailProtection }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool { return v.OcspSigning }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool { return v.ServerAuth }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool { return v.TimeStamping }).(pulumi.BoolPtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) Elem() CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage
		return ret
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ClientAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CodeSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.EmailProtection
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.OcspSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ServerAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.TimeStamping
	}).(pulumi.BoolPtrOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArgs and CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArgs{...}
type CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput
	ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArgs) ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput)
}

// CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArray and CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArray{ CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArgs{...} }
type CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput
	ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArray []CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageInput

func (CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArray) ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArray) ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage) []int {
		return v.ObjectIdPaths
	}).(pulumi.IntArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput() CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage {
		return vs[0].([]CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsage)[vs[1].(int)]
	}).(CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput)
}

type CaPoolIssuancePolicyBaselineValuesPolicyId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CaPoolIssuancePolicyBaselineValuesPolicyIdInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesPolicyIdArgs and CaPoolIssuancePolicyBaselineValuesPolicyIdOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesPolicyIdInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesPolicyIdArgs{...}
type CaPoolIssuancePolicyBaselineValuesPolicyIdInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesPolicyIdOutput() CaPoolIssuancePolicyBaselineValuesPolicyIdOutput
	ToCaPoolIssuancePolicyBaselineValuesPolicyIdOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesPolicyIdOutput
}

type CaPoolIssuancePolicyBaselineValuesPolicyIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CaPoolIssuancePolicyBaselineValuesPolicyIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesPolicyId)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesPolicyIdArgs) ToCaPoolIssuancePolicyBaselineValuesPolicyIdOutput() CaPoolIssuancePolicyBaselineValuesPolicyIdOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesPolicyIdOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesPolicyIdArgs) ToCaPoolIssuancePolicyBaselineValuesPolicyIdOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesPolicyIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesPolicyIdOutput)
}

// CaPoolIssuancePolicyBaselineValuesPolicyIdArrayInput is an input type that accepts CaPoolIssuancePolicyBaselineValuesPolicyIdArray and CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyBaselineValuesPolicyIdArrayInput` via:
//
//          CaPoolIssuancePolicyBaselineValuesPolicyIdArray{ CaPoolIssuancePolicyBaselineValuesPolicyIdArgs{...} }
type CaPoolIssuancePolicyBaselineValuesPolicyIdArrayInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput() CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput
	ToCaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutputWithContext(context.Context) CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput
}

type CaPoolIssuancePolicyBaselineValuesPolicyIdArray []CaPoolIssuancePolicyBaselineValuesPolicyIdInput

func (CaPoolIssuancePolicyBaselineValuesPolicyIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaPoolIssuancePolicyBaselineValuesPolicyId)(nil)).Elem()
}

func (i CaPoolIssuancePolicyBaselineValuesPolicyIdArray) ToCaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput() CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput {
	return i.ToCaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyBaselineValuesPolicyIdArray) ToCaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesPolicyIdOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesPolicyIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesPolicyId)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesPolicyIdOutput) ToCaPoolIssuancePolicyBaselineValuesPolicyIdOutput() CaPoolIssuancePolicyBaselineValuesPolicyIdOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesPolicyIdOutput) ToCaPoolIssuancePolicyBaselineValuesPolicyIdOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesPolicyIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CaPoolIssuancePolicyBaselineValuesPolicyIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyBaselineValuesPolicyId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaPoolIssuancePolicyBaselineValuesPolicyId)(nil)).Elem()
}

func (o CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput) ToCaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput() CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput) ToCaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutputWithContext(ctx context.Context) CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput {
	return o
}

func (o CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput) Index(i pulumi.IntInput) CaPoolIssuancePolicyBaselineValuesPolicyIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CaPoolIssuancePolicyBaselineValuesPolicyId {
		return vs[0].([]CaPoolIssuancePolicyBaselineValuesPolicyId)[vs[1].(int)]
	}).(CaPoolIssuancePolicyBaselineValuesPolicyIdOutput)
}

type CaPoolIssuancePolicyIdentityConstraints struct {
	// If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
	// Otherwise, the requested SubjectAltNames will be discarded.
	AllowSubjectAltNamesPassthrough bool `pulumi:"allowSubjectAltNamesPassthrough"`
	// If this is set, the Subject field may be copied from a certificate request into the signed certificate.
	// Otherwise, the requested Subject will be discarded.
	AllowSubjectPassthrough bool `pulumi:"allowSubjectPassthrough"`
	// A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
	// certificate is signed. To see the full allowed syntax and some examples,
	// see https://cloud.google.com/certificate-authority-service/docs/cel-guide
	// Structure is documented below.
	CelExpression *CaPoolIssuancePolicyIdentityConstraintsCelExpression `pulumi:"celExpression"`
}

// CaPoolIssuancePolicyIdentityConstraintsInput is an input type that accepts CaPoolIssuancePolicyIdentityConstraintsArgs and CaPoolIssuancePolicyIdentityConstraintsOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyIdentityConstraintsInput` via:
//
//          CaPoolIssuancePolicyIdentityConstraintsArgs{...}
type CaPoolIssuancePolicyIdentityConstraintsInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyIdentityConstraintsOutput() CaPoolIssuancePolicyIdentityConstraintsOutput
	ToCaPoolIssuancePolicyIdentityConstraintsOutputWithContext(context.Context) CaPoolIssuancePolicyIdentityConstraintsOutput
}

type CaPoolIssuancePolicyIdentityConstraintsArgs struct {
	// If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
	// Otherwise, the requested SubjectAltNames will be discarded.
	AllowSubjectAltNamesPassthrough pulumi.BoolInput `pulumi:"allowSubjectAltNamesPassthrough"`
	// If this is set, the Subject field may be copied from a certificate request into the signed certificate.
	// Otherwise, the requested Subject will be discarded.
	AllowSubjectPassthrough pulumi.BoolInput `pulumi:"allowSubjectPassthrough"`
	// A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
	// certificate is signed. To see the full allowed syntax and some examples,
	// see https://cloud.google.com/certificate-authority-service/docs/cel-guide
	// Structure is documented below.
	CelExpression CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrInput `pulumi:"celExpression"`
}

func (CaPoolIssuancePolicyIdentityConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyIdentityConstraints)(nil)).Elem()
}

func (i CaPoolIssuancePolicyIdentityConstraintsArgs) ToCaPoolIssuancePolicyIdentityConstraintsOutput() CaPoolIssuancePolicyIdentityConstraintsOutput {
	return i.ToCaPoolIssuancePolicyIdentityConstraintsOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyIdentityConstraintsArgs) ToCaPoolIssuancePolicyIdentityConstraintsOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyIdentityConstraintsOutput)
}

func (i CaPoolIssuancePolicyIdentityConstraintsArgs) ToCaPoolIssuancePolicyIdentityConstraintsPtrOutput() CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return i.ToCaPoolIssuancePolicyIdentityConstraintsPtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyIdentityConstraintsArgs) ToCaPoolIssuancePolicyIdentityConstraintsPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyIdentityConstraintsOutput).ToCaPoolIssuancePolicyIdentityConstraintsPtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyIdentityConstraintsPtrInput is an input type that accepts CaPoolIssuancePolicyIdentityConstraintsArgs, CaPoolIssuancePolicyIdentityConstraintsPtr and CaPoolIssuancePolicyIdentityConstraintsPtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyIdentityConstraintsPtrInput` via:
//
//          CaPoolIssuancePolicyIdentityConstraintsArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyIdentityConstraintsPtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyIdentityConstraintsPtrOutput() CaPoolIssuancePolicyIdentityConstraintsPtrOutput
	ToCaPoolIssuancePolicyIdentityConstraintsPtrOutputWithContext(context.Context) CaPoolIssuancePolicyIdentityConstraintsPtrOutput
}

type caPoolIssuancePolicyIdentityConstraintsPtrType CaPoolIssuancePolicyIdentityConstraintsArgs

func CaPoolIssuancePolicyIdentityConstraintsPtr(v *CaPoolIssuancePolicyIdentityConstraintsArgs) CaPoolIssuancePolicyIdentityConstraintsPtrInput {
	return (*caPoolIssuancePolicyIdentityConstraintsPtrType)(v)
}

func (*caPoolIssuancePolicyIdentityConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyIdentityConstraints)(nil)).Elem()
}

func (i *caPoolIssuancePolicyIdentityConstraintsPtrType) ToCaPoolIssuancePolicyIdentityConstraintsPtrOutput() CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return i.ToCaPoolIssuancePolicyIdentityConstraintsPtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyIdentityConstraintsPtrType) ToCaPoolIssuancePolicyIdentityConstraintsPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyIdentityConstraintsPtrOutput)
}

type CaPoolIssuancePolicyIdentityConstraintsOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyIdentityConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyIdentityConstraints)(nil)).Elem()
}

func (o CaPoolIssuancePolicyIdentityConstraintsOutput) ToCaPoolIssuancePolicyIdentityConstraintsOutput() CaPoolIssuancePolicyIdentityConstraintsOutput {
	return o
}

func (o CaPoolIssuancePolicyIdentityConstraintsOutput) ToCaPoolIssuancePolicyIdentityConstraintsOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsOutput {
	return o
}

func (o CaPoolIssuancePolicyIdentityConstraintsOutput) ToCaPoolIssuancePolicyIdentityConstraintsPtrOutput() CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return o.ToCaPoolIssuancePolicyIdentityConstraintsPtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyIdentityConstraintsOutput) ToCaPoolIssuancePolicyIdentityConstraintsPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyIdentityConstraints) *CaPoolIssuancePolicyIdentityConstraints {
		return &v
	}).(CaPoolIssuancePolicyIdentityConstraintsPtrOutput)
}

// If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
// Otherwise, the requested SubjectAltNames will be discarded.
func (o CaPoolIssuancePolicyIdentityConstraintsOutput) AllowSubjectAltNamesPassthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyIdentityConstraints) bool { return v.AllowSubjectAltNamesPassthrough }).(pulumi.BoolOutput)
}

// If this is set, the Subject field may be copied from a certificate request into the signed certificate.
// Otherwise, the requested Subject will be discarded.
func (o CaPoolIssuancePolicyIdentityConstraintsOutput) AllowSubjectPassthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyIdentityConstraints) bool { return v.AllowSubjectPassthrough }).(pulumi.BoolOutput)
}

// A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
// certificate is signed. To see the full allowed syntax and some examples,
// see https://cloud.google.com/certificate-authority-service/docs/cel-guide
// Structure is documented below.
func (o CaPoolIssuancePolicyIdentityConstraintsOutput) CelExpression() CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyIdentityConstraints) *CaPoolIssuancePolicyIdentityConstraintsCelExpression {
		return v.CelExpression
	}).(CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput)
}

type CaPoolIssuancePolicyIdentityConstraintsPtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyIdentityConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyIdentityConstraints)(nil)).Elem()
}

func (o CaPoolIssuancePolicyIdentityConstraintsPtrOutput) ToCaPoolIssuancePolicyIdentityConstraintsPtrOutput() CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyIdentityConstraintsPtrOutput) ToCaPoolIssuancePolicyIdentityConstraintsPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyIdentityConstraintsPtrOutput) Elem() CaPoolIssuancePolicyIdentityConstraintsOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyIdentityConstraints) CaPoolIssuancePolicyIdentityConstraints {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyIdentityConstraints
		return ret
	}).(CaPoolIssuancePolicyIdentityConstraintsOutput)
}

// If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
// Otherwise, the requested SubjectAltNames will be discarded.
func (o CaPoolIssuancePolicyIdentityConstraintsPtrOutput) AllowSubjectAltNamesPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyIdentityConstraints) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowSubjectAltNamesPassthrough
	}).(pulumi.BoolPtrOutput)
}

// If this is set, the Subject field may be copied from a certificate request into the signed certificate.
// Otherwise, the requested Subject will be discarded.
func (o CaPoolIssuancePolicyIdentityConstraintsPtrOutput) AllowSubjectPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyIdentityConstraints) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowSubjectPassthrough
	}).(pulumi.BoolPtrOutput)
}

// A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
// certificate is signed. To see the full allowed syntax and some examples,
// see https://cloud.google.com/certificate-authority-service/docs/cel-guide
// Structure is documented below.
func (o CaPoolIssuancePolicyIdentityConstraintsPtrOutput) CelExpression() CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyIdentityConstraints) *CaPoolIssuancePolicyIdentityConstraintsCelExpression {
		if v == nil {
			return nil
		}
		return v.CelExpression
	}).(CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput)
}

type CaPoolIssuancePolicyIdentityConstraintsCelExpression struct {
	// Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// CaPoolIssuancePolicyIdentityConstraintsCelExpressionInput is an input type that accepts CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs and CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyIdentityConstraintsCelExpressionInput` via:
//
//          CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs{...}
type CaPoolIssuancePolicyIdentityConstraintsCelExpressionInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput() CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput
	ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionOutputWithContext(context.Context) CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput
}

type CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs struct {
	// Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyIdentityConstraintsCelExpression)(nil)).Elem()
}

func (i CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput() CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput {
	return i.ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput)
}

func (i CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput() CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return i.ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutputWithContext(context.Background())
}

func (i CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput).ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutputWithContext(ctx)
}

// CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrInput is an input type that accepts CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs, CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtr and CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput values.
// You can construct a concrete instance of `CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrInput` via:
//
//          CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs{...}
//
//  or:
//
//          nil
type CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrInput interface {
	pulumi.Input

	ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput() CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput
	ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutputWithContext(context.Context) CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput
}

type caPoolIssuancePolicyIdentityConstraintsCelExpressionPtrType CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs

func CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtr(v *CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs) CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrInput {
	return (*caPoolIssuancePolicyIdentityConstraintsCelExpressionPtrType)(v)
}

func (*caPoolIssuancePolicyIdentityConstraintsCelExpressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyIdentityConstraintsCelExpression)(nil)).Elem()
}

func (i *caPoolIssuancePolicyIdentityConstraintsCelExpressionPtrType) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput() CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return i.ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutputWithContext(context.Background())
}

func (i *caPoolIssuancePolicyIdentityConstraintsCelExpressionPtrType) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput)
}

type CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolIssuancePolicyIdentityConstraintsCelExpression)(nil)).Elem()
}

func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput() CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput {
	return o
}

func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput {
	return o
}

func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput() CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return o.ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutputWithContext(context.Background())
}

func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolIssuancePolicyIdentityConstraintsCelExpression) *CaPoolIssuancePolicyIdentityConstraintsCelExpression {
		return &v
	}).(CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput)
}

// Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyIdentityConstraintsCelExpression) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyIdentityConstraintsCelExpression) string { return v.Expression }).(pulumi.StringOutput)
}

// String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyIdentityConstraintsCelExpression) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaPoolIssuancePolicyIdentityConstraintsCelExpression) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput struct{ *pulumi.OutputState }

func (CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolIssuancePolicyIdentityConstraintsCelExpression)(nil)).Elem()
}

func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput() CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput) ToCaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutputWithContext(ctx context.Context) CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput {
	return o
}

func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput) Elem() CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyIdentityConstraintsCelExpression) CaPoolIssuancePolicyIdentityConstraintsCelExpression {
		if v != nil {
			return *v
		}
		var ret CaPoolIssuancePolicyIdentityConstraintsCelExpression
		return ret
	}).(CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput)
}

// Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyIdentityConstraintsCelExpression) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyIdentityConstraintsCelExpression) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyIdentityConstraintsCelExpression) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaPoolIssuancePolicyIdentityConstraintsCelExpression) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type CaPoolPublishingOptions struct {
	// When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access"
	// X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
	// X.509 extension will not be written in issued certificates.
	PublishCaCert bool `pulumi:"publishCaCert"`
	// When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension
	// in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
	// be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
	// also rebuilt shortly after a certificate is revoked.
	PublishCrl bool `pulumi:"publishCrl"`
}

// CaPoolPublishingOptionsInput is an input type that accepts CaPoolPublishingOptionsArgs and CaPoolPublishingOptionsOutput values.
// You can construct a concrete instance of `CaPoolPublishingOptionsInput` via:
//
//          CaPoolPublishingOptionsArgs{...}
type CaPoolPublishingOptionsInput interface {
	pulumi.Input

	ToCaPoolPublishingOptionsOutput() CaPoolPublishingOptionsOutput
	ToCaPoolPublishingOptionsOutputWithContext(context.Context) CaPoolPublishingOptionsOutput
}

type CaPoolPublishingOptionsArgs struct {
	// When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access"
	// X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
	// X.509 extension will not be written in issued certificates.
	PublishCaCert pulumi.BoolInput `pulumi:"publishCaCert"`
	// When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension
	// in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
	// be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
	// also rebuilt shortly after a certificate is revoked.
	PublishCrl pulumi.BoolInput `pulumi:"publishCrl"`
}

func (CaPoolPublishingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolPublishingOptions)(nil)).Elem()
}

func (i CaPoolPublishingOptionsArgs) ToCaPoolPublishingOptionsOutput() CaPoolPublishingOptionsOutput {
	return i.ToCaPoolPublishingOptionsOutputWithContext(context.Background())
}

func (i CaPoolPublishingOptionsArgs) ToCaPoolPublishingOptionsOutputWithContext(ctx context.Context) CaPoolPublishingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolPublishingOptionsOutput)
}

func (i CaPoolPublishingOptionsArgs) ToCaPoolPublishingOptionsPtrOutput() CaPoolPublishingOptionsPtrOutput {
	return i.ToCaPoolPublishingOptionsPtrOutputWithContext(context.Background())
}

func (i CaPoolPublishingOptionsArgs) ToCaPoolPublishingOptionsPtrOutputWithContext(ctx context.Context) CaPoolPublishingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolPublishingOptionsOutput).ToCaPoolPublishingOptionsPtrOutputWithContext(ctx)
}

// CaPoolPublishingOptionsPtrInput is an input type that accepts CaPoolPublishingOptionsArgs, CaPoolPublishingOptionsPtr and CaPoolPublishingOptionsPtrOutput values.
// You can construct a concrete instance of `CaPoolPublishingOptionsPtrInput` via:
//
//          CaPoolPublishingOptionsArgs{...}
//
//  or:
//
//          nil
type CaPoolPublishingOptionsPtrInput interface {
	pulumi.Input

	ToCaPoolPublishingOptionsPtrOutput() CaPoolPublishingOptionsPtrOutput
	ToCaPoolPublishingOptionsPtrOutputWithContext(context.Context) CaPoolPublishingOptionsPtrOutput
}

type caPoolPublishingOptionsPtrType CaPoolPublishingOptionsArgs

func CaPoolPublishingOptionsPtr(v *CaPoolPublishingOptionsArgs) CaPoolPublishingOptionsPtrInput {
	return (*caPoolPublishingOptionsPtrType)(v)
}

func (*caPoolPublishingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolPublishingOptions)(nil)).Elem()
}

func (i *caPoolPublishingOptionsPtrType) ToCaPoolPublishingOptionsPtrOutput() CaPoolPublishingOptionsPtrOutput {
	return i.ToCaPoolPublishingOptionsPtrOutputWithContext(context.Background())
}

func (i *caPoolPublishingOptionsPtrType) ToCaPoolPublishingOptionsPtrOutputWithContext(ctx context.Context) CaPoolPublishingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaPoolPublishingOptionsPtrOutput)
}

type CaPoolPublishingOptionsOutput struct{ *pulumi.OutputState }

func (CaPoolPublishingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaPoolPublishingOptions)(nil)).Elem()
}

func (o CaPoolPublishingOptionsOutput) ToCaPoolPublishingOptionsOutput() CaPoolPublishingOptionsOutput {
	return o
}

func (o CaPoolPublishingOptionsOutput) ToCaPoolPublishingOptionsOutputWithContext(ctx context.Context) CaPoolPublishingOptionsOutput {
	return o
}

func (o CaPoolPublishingOptionsOutput) ToCaPoolPublishingOptionsPtrOutput() CaPoolPublishingOptionsPtrOutput {
	return o.ToCaPoolPublishingOptionsPtrOutputWithContext(context.Background())
}

func (o CaPoolPublishingOptionsOutput) ToCaPoolPublishingOptionsPtrOutputWithContext(ctx context.Context) CaPoolPublishingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaPoolPublishingOptions) *CaPoolPublishingOptions {
		return &v
	}).(CaPoolPublishingOptionsPtrOutput)
}

// When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access"
// X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
// X.509 extension will not be written in issued certificates.
func (o CaPoolPublishingOptionsOutput) PublishCaCert() pulumi.BoolOutput {
	return o.ApplyT(func(v CaPoolPublishingOptions) bool { return v.PublishCaCert }).(pulumi.BoolOutput)
}

// When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension
// in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
// be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
// also rebuilt shortly after a certificate is revoked.
func (o CaPoolPublishingOptionsOutput) PublishCrl() pulumi.BoolOutput {
	return o.ApplyT(func(v CaPoolPublishingOptions) bool { return v.PublishCrl }).(pulumi.BoolOutput)
}

type CaPoolPublishingOptionsPtrOutput struct{ *pulumi.OutputState }

func (CaPoolPublishingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaPoolPublishingOptions)(nil)).Elem()
}

func (o CaPoolPublishingOptionsPtrOutput) ToCaPoolPublishingOptionsPtrOutput() CaPoolPublishingOptionsPtrOutput {
	return o
}

func (o CaPoolPublishingOptionsPtrOutput) ToCaPoolPublishingOptionsPtrOutputWithContext(ctx context.Context) CaPoolPublishingOptionsPtrOutput {
	return o
}

func (o CaPoolPublishingOptionsPtrOutput) Elem() CaPoolPublishingOptionsOutput {
	return o.ApplyT(func(v *CaPoolPublishingOptions) CaPoolPublishingOptions {
		if v != nil {
			return *v
		}
		var ret CaPoolPublishingOptions
		return ret
	}).(CaPoolPublishingOptionsOutput)
}

// When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access"
// X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
// X.509 extension will not be written in issued certificates.
func (o CaPoolPublishingOptionsPtrOutput) PublishCaCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolPublishingOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.PublishCaCert
	}).(pulumi.BoolPtrOutput)
}

// When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension
// in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
// be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
// also rebuilt shortly after a certificate is revoked.
func (o CaPoolPublishingOptionsPtrOutput) PublishCrl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaPoolPublishingOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.PublishCrl
	}).(pulumi.BoolPtrOutput)
}

type CertificateCertificateDescription struct {
	AiaIssuingCertificateUrls []string                                           `pulumi:"aiaIssuingCertificateUrls"`
	AuthorityKeyIds           []CertificateCertificateDescriptionAuthorityKeyId  `pulumi:"authorityKeyIds"`
	CertFingerprints          []CertificateCertificateDescriptionCertFingerprint `pulumi:"certFingerprints"`
	// Deprecated: Deprecated in favor of `x509_description`.
	ConfigValues          []CertificateCertificateDescriptionConfigValue `pulumi:"configValues"`
	CrlDistributionPoints []string                                       `pulumi:"crlDistributionPoints"`
	// A PublicKey describes a public key.
	// Structure is documented below.
	PublicKeys          []CertificateCertificateDescriptionPublicKey          `pulumi:"publicKeys"`
	SubjectDescriptions []CertificateCertificateDescriptionSubjectDescription `pulumi:"subjectDescriptions"`
	SubjectKeyIds       []CertificateCertificateDescriptionSubjectKeyId       `pulumi:"subjectKeyIds"`
	X509Descriptions    []CertificateCertificateDescriptionX509Description    `pulumi:"x509Descriptions"`
}

// CertificateCertificateDescriptionInput is an input type that accepts CertificateCertificateDescriptionArgs and CertificateCertificateDescriptionOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionInput` via:
//
//          CertificateCertificateDescriptionArgs{...}
type CertificateCertificateDescriptionInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionOutput() CertificateCertificateDescriptionOutput
	ToCertificateCertificateDescriptionOutputWithContext(context.Context) CertificateCertificateDescriptionOutput
}

type CertificateCertificateDescriptionArgs struct {
	AiaIssuingCertificateUrls pulumi.StringArrayInput                                    `pulumi:"aiaIssuingCertificateUrls"`
	AuthorityKeyIds           CertificateCertificateDescriptionAuthorityKeyIdArrayInput  `pulumi:"authorityKeyIds"`
	CertFingerprints          CertificateCertificateDescriptionCertFingerprintArrayInput `pulumi:"certFingerprints"`
	// Deprecated: Deprecated in favor of `x509_description`.
	ConfigValues          CertificateCertificateDescriptionConfigValueArrayInput `pulumi:"configValues"`
	CrlDistributionPoints pulumi.StringArrayInput                                `pulumi:"crlDistributionPoints"`
	// A PublicKey describes a public key.
	// Structure is documented below.
	PublicKeys          CertificateCertificateDescriptionPublicKeyArrayInput          `pulumi:"publicKeys"`
	SubjectDescriptions CertificateCertificateDescriptionSubjectDescriptionArrayInput `pulumi:"subjectDescriptions"`
	SubjectKeyIds       CertificateCertificateDescriptionSubjectKeyIdArrayInput       `pulumi:"subjectKeyIds"`
	X509Descriptions    CertificateCertificateDescriptionX509DescriptionArrayInput    `pulumi:"x509Descriptions"`
}

func (CertificateCertificateDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescription)(nil)).Elem()
}

func (i CertificateCertificateDescriptionArgs) ToCertificateCertificateDescriptionOutput() CertificateCertificateDescriptionOutput {
	return i.ToCertificateCertificateDescriptionOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionArgs) ToCertificateCertificateDescriptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionOutput)
}

// CertificateCertificateDescriptionArrayInput is an input type that accepts CertificateCertificateDescriptionArray and CertificateCertificateDescriptionArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionArrayInput` via:
//
//          CertificateCertificateDescriptionArray{ CertificateCertificateDescriptionArgs{...} }
type CertificateCertificateDescriptionArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionArrayOutput() CertificateCertificateDescriptionArrayOutput
	ToCertificateCertificateDescriptionArrayOutputWithContext(context.Context) CertificateCertificateDescriptionArrayOutput
}

type CertificateCertificateDescriptionArray []CertificateCertificateDescriptionInput

func (CertificateCertificateDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescription)(nil)).Elem()
}

func (i CertificateCertificateDescriptionArray) ToCertificateCertificateDescriptionArrayOutput() CertificateCertificateDescriptionArrayOutput {
	return i.ToCertificateCertificateDescriptionArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionArray) ToCertificateCertificateDescriptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionArrayOutput)
}

type CertificateCertificateDescriptionOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescription)(nil)).Elem()
}

func (o CertificateCertificateDescriptionOutput) ToCertificateCertificateDescriptionOutput() CertificateCertificateDescriptionOutput {
	return o
}

func (o CertificateCertificateDescriptionOutput) ToCertificateCertificateDescriptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionOutput {
	return o
}

func (o CertificateCertificateDescriptionOutput) AiaIssuingCertificateUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescription) []string { return v.AiaIssuingCertificateUrls }).(pulumi.StringArrayOutput)
}

func (o CertificateCertificateDescriptionOutput) AuthorityKeyIds() CertificateCertificateDescriptionAuthorityKeyIdArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescription) []CertificateCertificateDescriptionAuthorityKeyId {
		return v.AuthorityKeyIds
	}).(CertificateCertificateDescriptionAuthorityKeyIdArrayOutput)
}

func (o CertificateCertificateDescriptionOutput) CertFingerprints() CertificateCertificateDescriptionCertFingerprintArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescription) []CertificateCertificateDescriptionCertFingerprint {
		return v.CertFingerprints
	}).(CertificateCertificateDescriptionCertFingerprintArrayOutput)
}

// Deprecated: Deprecated in favor of `x509_description`.
func (o CertificateCertificateDescriptionOutput) ConfigValues() CertificateCertificateDescriptionConfigValueArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescription) []CertificateCertificateDescriptionConfigValue {
		return v.ConfigValues
	}).(CertificateCertificateDescriptionConfigValueArrayOutput)
}

func (o CertificateCertificateDescriptionOutput) CrlDistributionPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescription) []string { return v.CrlDistributionPoints }).(pulumi.StringArrayOutput)
}

// A PublicKey describes a public key.
// Structure is documented below.
func (o CertificateCertificateDescriptionOutput) PublicKeys() CertificateCertificateDescriptionPublicKeyArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescription) []CertificateCertificateDescriptionPublicKey {
		return v.PublicKeys
	}).(CertificateCertificateDescriptionPublicKeyArrayOutput)
}

func (o CertificateCertificateDescriptionOutput) SubjectDescriptions() CertificateCertificateDescriptionSubjectDescriptionArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescription) []CertificateCertificateDescriptionSubjectDescription {
		return v.SubjectDescriptions
	}).(CertificateCertificateDescriptionSubjectDescriptionArrayOutput)
}

func (o CertificateCertificateDescriptionOutput) SubjectKeyIds() CertificateCertificateDescriptionSubjectKeyIdArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescription) []CertificateCertificateDescriptionSubjectKeyId {
		return v.SubjectKeyIds
	}).(CertificateCertificateDescriptionSubjectKeyIdArrayOutput)
}

func (o CertificateCertificateDescriptionOutput) X509Descriptions() CertificateCertificateDescriptionX509DescriptionArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescription) []CertificateCertificateDescriptionX509Description {
		return v.X509Descriptions
	}).(CertificateCertificateDescriptionX509DescriptionArrayOutput)
}

type CertificateCertificateDescriptionArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescription)(nil)).Elem()
}

func (o CertificateCertificateDescriptionArrayOutput) ToCertificateCertificateDescriptionArrayOutput() CertificateCertificateDescriptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionArrayOutput) ToCertificateCertificateDescriptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescription {
		return vs[0].([]CertificateCertificateDescription)[vs[1].(int)]
	}).(CertificateCertificateDescriptionOutput)
}

type CertificateCertificateDescriptionAuthorityKeyId struct {
	KeyId *string `pulumi:"keyId"`
}

// CertificateCertificateDescriptionAuthorityKeyIdInput is an input type that accepts CertificateCertificateDescriptionAuthorityKeyIdArgs and CertificateCertificateDescriptionAuthorityKeyIdOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionAuthorityKeyIdInput` via:
//
//          CertificateCertificateDescriptionAuthorityKeyIdArgs{...}
type CertificateCertificateDescriptionAuthorityKeyIdInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionAuthorityKeyIdOutput() CertificateCertificateDescriptionAuthorityKeyIdOutput
	ToCertificateCertificateDescriptionAuthorityKeyIdOutputWithContext(context.Context) CertificateCertificateDescriptionAuthorityKeyIdOutput
}

type CertificateCertificateDescriptionAuthorityKeyIdArgs struct {
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
}

func (CertificateCertificateDescriptionAuthorityKeyIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionAuthorityKeyId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionAuthorityKeyIdArgs) ToCertificateCertificateDescriptionAuthorityKeyIdOutput() CertificateCertificateDescriptionAuthorityKeyIdOutput {
	return i.ToCertificateCertificateDescriptionAuthorityKeyIdOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionAuthorityKeyIdArgs) ToCertificateCertificateDescriptionAuthorityKeyIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionAuthorityKeyIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionAuthorityKeyIdOutput)
}

// CertificateCertificateDescriptionAuthorityKeyIdArrayInput is an input type that accepts CertificateCertificateDescriptionAuthorityKeyIdArray and CertificateCertificateDescriptionAuthorityKeyIdArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionAuthorityKeyIdArrayInput` via:
//
//          CertificateCertificateDescriptionAuthorityKeyIdArray{ CertificateCertificateDescriptionAuthorityKeyIdArgs{...} }
type CertificateCertificateDescriptionAuthorityKeyIdArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionAuthorityKeyIdArrayOutput() CertificateCertificateDescriptionAuthorityKeyIdArrayOutput
	ToCertificateCertificateDescriptionAuthorityKeyIdArrayOutputWithContext(context.Context) CertificateCertificateDescriptionAuthorityKeyIdArrayOutput
}

type CertificateCertificateDescriptionAuthorityKeyIdArray []CertificateCertificateDescriptionAuthorityKeyIdInput

func (CertificateCertificateDescriptionAuthorityKeyIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionAuthorityKeyId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionAuthorityKeyIdArray) ToCertificateCertificateDescriptionAuthorityKeyIdArrayOutput() CertificateCertificateDescriptionAuthorityKeyIdArrayOutput {
	return i.ToCertificateCertificateDescriptionAuthorityKeyIdArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionAuthorityKeyIdArray) ToCertificateCertificateDescriptionAuthorityKeyIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionAuthorityKeyIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionAuthorityKeyIdArrayOutput)
}

type CertificateCertificateDescriptionAuthorityKeyIdOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionAuthorityKeyIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionAuthorityKeyId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionAuthorityKeyIdOutput) ToCertificateCertificateDescriptionAuthorityKeyIdOutput() CertificateCertificateDescriptionAuthorityKeyIdOutput {
	return o
}

func (o CertificateCertificateDescriptionAuthorityKeyIdOutput) ToCertificateCertificateDescriptionAuthorityKeyIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionAuthorityKeyIdOutput {
	return o
}

func (o CertificateCertificateDescriptionAuthorityKeyIdOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionAuthorityKeyId) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

type CertificateCertificateDescriptionAuthorityKeyIdArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionAuthorityKeyIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionAuthorityKeyId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionAuthorityKeyIdArrayOutput) ToCertificateCertificateDescriptionAuthorityKeyIdArrayOutput() CertificateCertificateDescriptionAuthorityKeyIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionAuthorityKeyIdArrayOutput) ToCertificateCertificateDescriptionAuthorityKeyIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionAuthorityKeyIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionAuthorityKeyIdArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionAuthorityKeyIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionAuthorityKeyId {
		return vs[0].([]CertificateCertificateDescriptionAuthorityKeyId)[vs[1].(int)]
	}).(CertificateCertificateDescriptionAuthorityKeyIdOutput)
}

type CertificateCertificateDescriptionCertFingerprint struct {
	Sha256Hash *string `pulumi:"sha256Hash"`
}

// CertificateCertificateDescriptionCertFingerprintInput is an input type that accepts CertificateCertificateDescriptionCertFingerprintArgs and CertificateCertificateDescriptionCertFingerprintOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionCertFingerprintInput` via:
//
//          CertificateCertificateDescriptionCertFingerprintArgs{...}
type CertificateCertificateDescriptionCertFingerprintInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionCertFingerprintOutput() CertificateCertificateDescriptionCertFingerprintOutput
	ToCertificateCertificateDescriptionCertFingerprintOutputWithContext(context.Context) CertificateCertificateDescriptionCertFingerprintOutput
}

type CertificateCertificateDescriptionCertFingerprintArgs struct {
	Sha256Hash pulumi.StringPtrInput `pulumi:"sha256Hash"`
}

func (CertificateCertificateDescriptionCertFingerprintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionCertFingerprint)(nil)).Elem()
}

func (i CertificateCertificateDescriptionCertFingerprintArgs) ToCertificateCertificateDescriptionCertFingerprintOutput() CertificateCertificateDescriptionCertFingerprintOutput {
	return i.ToCertificateCertificateDescriptionCertFingerprintOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionCertFingerprintArgs) ToCertificateCertificateDescriptionCertFingerprintOutputWithContext(ctx context.Context) CertificateCertificateDescriptionCertFingerprintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionCertFingerprintOutput)
}

// CertificateCertificateDescriptionCertFingerprintArrayInput is an input type that accepts CertificateCertificateDescriptionCertFingerprintArray and CertificateCertificateDescriptionCertFingerprintArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionCertFingerprintArrayInput` via:
//
//          CertificateCertificateDescriptionCertFingerprintArray{ CertificateCertificateDescriptionCertFingerprintArgs{...} }
type CertificateCertificateDescriptionCertFingerprintArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionCertFingerprintArrayOutput() CertificateCertificateDescriptionCertFingerprintArrayOutput
	ToCertificateCertificateDescriptionCertFingerprintArrayOutputWithContext(context.Context) CertificateCertificateDescriptionCertFingerprintArrayOutput
}

type CertificateCertificateDescriptionCertFingerprintArray []CertificateCertificateDescriptionCertFingerprintInput

func (CertificateCertificateDescriptionCertFingerprintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionCertFingerprint)(nil)).Elem()
}

func (i CertificateCertificateDescriptionCertFingerprintArray) ToCertificateCertificateDescriptionCertFingerprintArrayOutput() CertificateCertificateDescriptionCertFingerprintArrayOutput {
	return i.ToCertificateCertificateDescriptionCertFingerprintArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionCertFingerprintArray) ToCertificateCertificateDescriptionCertFingerprintArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionCertFingerprintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionCertFingerprintArrayOutput)
}

type CertificateCertificateDescriptionCertFingerprintOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionCertFingerprintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionCertFingerprint)(nil)).Elem()
}

func (o CertificateCertificateDescriptionCertFingerprintOutput) ToCertificateCertificateDescriptionCertFingerprintOutput() CertificateCertificateDescriptionCertFingerprintOutput {
	return o
}

func (o CertificateCertificateDescriptionCertFingerprintOutput) ToCertificateCertificateDescriptionCertFingerprintOutputWithContext(ctx context.Context) CertificateCertificateDescriptionCertFingerprintOutput {
	return o
}

func (o CertificateCertificateDescriptionCertFingerprintOutput) Sha256Hash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionCertFingerprint) *string { return v.Sha256Hash }).(pulumi.StringPtrOutput)
}

type CertificateCertificateDescriptionCertFingerprintArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionCertFingerprintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionCertFingerprint)(nil)).Elem()
}

func (o CertificateCertificateDescriptionCertFingerprintArrayOutput) ToCertificateCertificateDescriptionCertFingerprintArrayOutput() CertificateCertificateDescriptionCertFingerprintArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionCertFingerprintArrayOutput) ToCertificateCertificateDescriptionCertFingerprintArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionCertFingerprintArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionCertFingerprintArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionCertFingerprintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionCertFingerprint {
		return vs[0].([]CertificateCertificateDescriptionCertFingerprint)[vs[1].(int)]
	}).(CertificateCertificateDescriptionCertFingerprintOutput)
}

type CertificateCertificateDescriptionConfigValue struct {
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsages []CertificateCertificateDescriptionConfigValueKeyUsage `pulumi:"keyUsages"`
}

// CertificateCertificateDescriptionConfigValueInput is an input type that accepts CertificateCertificateDescriptionConfigValueArgs and CertificateCertificateDescriptionConfigValueOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueInput` via:
//
//          CertificateCertificateDescriptionConfigValueArgs{...}
type CertificateCertificateDescriptionConfigValueInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueOutput() CertificateCertificateDescriptionConfigValueOutput
	ToCertificateCertificateDescriptionConfigValueOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueOutput
}

type CertificateCertificateDescriptionConfigValueArgs struct {
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsages CertificateCertificateDescriptionConfigValueKeyUsageArrayInput `pulumi:"keyUsages"`
}

func (CertificateCertificateDescriptionConfigValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValue)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueArgs) ToCertificateCertificateDescriptionConfigValueOutput() CertificateCertificateDescriptionConfigValueOutput {
	return i.ToCertificateCertificateDescriptionConfigValueOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueArgs) ToCertificateCertificateDescriptionConfigValueOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueOutput)
}

// CertificateCertificateDescriptionConfigValueArrayInput is an input type that accepts CertificateCertificateDescriptionConfigValueArray and CertificateCertificateDescriptionConfigValueArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueArrayInput` via:
//
//          CertificateCertificateDescriptionConfigValueArray{ CertificateCertificateDescriptionConfigValueArgs{...} }
type CertificateCertificateDescriptionConfigValueArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueArrayOutput() CertificateCertificateDescriptionConfigValueArrayOutput
	ToCertificateCertificateDescriptionConfigValueArrayOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueArrayOutput
}

type CertificateCertificateDescriptionConfigValueArray []CertificateCertificateDescriptionConfigValueInput

func (CertificateCertificateDescriptionConfigValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValue)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueArray) ToCertificateCertificateDescriptionConfigValueArrayOutput() CertificateCertificateDescriptionConfigValueArrayOutput {
	return i.ToCertificateCertificateDescriptionConfigValueArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueArray) ToCertificateCertificateDescriptionConfigValueArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueArrayOutput)
}

type CertificateCertificateDescriptionConfigValueOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValue)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueOutput) ToCertificateCertificateDescriptionConfigValueOutput() CertificateCertificateDescriptionConfigValueOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueOutput) ToCertificateCertificateDescriptionConfigValueOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueOutput {
	return o
}

// Indicates the intended use for keys that correspond to a certificate.
// Structure is documented below.
func (o CertificateCertificateDescriptionConfigValueOutput) KeyUsages() CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValue) []CertificateCertificateDescriptionConfigValueKeyUsage {
		return v.KeyUsages
	}).(CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionConfigValueArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValue)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueArrayOutput) ToCertificateCertificateDescriptionConfigValueArrayOutput() CertificateCertificateDescriptionConfigValueArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueArrayOutput) ToCertificateCertificateDescriptionConfigValueArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionConfigValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionConfigValue {
		return vs[0].([]CertificateCertificateDescriptionConfigValue)[vs[1].(int)]
	}).(CertificateCertificateDescriptionConfigValueOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsage struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsages []CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage `pulumi:"baseKeyUsages"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsages []CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage `pulumi:"extendedKeyUsages"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages []CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage `pulumi:"unknownExtendedKeyUsages"`
}

// CertificateCertificateDescriptionConfigValueKeyUsageInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageArgs and CertificateCertificateDescriptionConfigValueKeyUsageOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageArgs{...}
type CertificateCertificateDescriptionConfigValueKeyUsageInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageArgs struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsages CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayInput `pulumi:"baseKeyUsages"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsages CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayInput `pulumi:"extendedKeyUsages"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayInput `pulumi:"unknownExtendedKeyUsages"`
}

func (CertificateCertificateDescriptionConfigValueKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageOutput)
}

// CertificateCertificateDescriptionConfigValueKeyUsageArrayInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageArray and CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageArrayInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageArray{ CertificateCertificateDescriptionConfigValueKeyUsageArgs{...} }
type CertificateCertificateDescriptionConfigValueKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageArrayOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageArray []CertificateCertificateDescriptionConfigValueKeyUsageInput

func (CertificateCertificateDescriptionConfigValueKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageArray) ToCertificateCertificateDescriptionConfigValueKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageArray) ToCertificateCertificateDescriptionConfigValueKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageOutput {
	return o
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CertificateCertificateDescriptionConfigValueKeyUsageOutput) BaseKeyUsages() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsage) []CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage {
		return v.BaseKeyUsages
	}).(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CertificateCertificateDescriptionConfigValueKeyUsageOutput) ExtendedKeyUsages() CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsage) []CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage {
		return v.ExtendedKeyUsages
	}).(CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput)
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
// Structure is documented below.
func (o CertificateCertificateDescriptionConfigValueKeyUsageOutput) UnknownExtendedKeyUsages() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsage) []CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage {
		return v.UnknownExtendedKeyUsages
	}).(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionConfigValueKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionConfigValueKeyUsage {
		return vs[0].([]CertificateCertificateDescriptionConfigValueKeyUsage)[vs[1].(int)]
	}).(CertificateCertificateDescriptionConfigValueKeyUsageOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage struct {
	KeyUsageOptions []CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption `pulumi:"keyUsageOptions"`
}

// CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArgs and CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArgs{...}
type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArgs struct {
	KeyUsageOptions CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayInput `pulumi:"keyUsageOptions"`
}

func (CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput)
}

// CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArray and CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArray{ CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArgs{...} }
type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArray []CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageInput

func (CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArray) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArray) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput) KeyUsageOptions() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage) []CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption {
		return v.KeyUsageOptions
	}).(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage {
		return vs[0].([]CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsage)[vs[1].(int)]
	}).(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption struct {
	// The key may be used to sign certificates.
	CertSign *bool `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment *bool `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign *bool `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment *bool `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly *bool `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature *bool `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly *bool `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement *bool `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment *bool `pulumi:"keyEncipherment"`
}

// CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArgs and CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArgs{...}
type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArgs struct {
	// The key may be used to sign certificates.
	CertSign pulumi.BoolPtrInput `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment pulumi.BoolPtrInput `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign pulumi.BoolPtrInput `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment pulumi.BoolPtrInput `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly pulumi.BoolPtrInput `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature pulumi.BoolPtrInput `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly pulumi.BoolPtrInput `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement pulumi.BoolPtrInput `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment pulumi.BoolPtrInput `pulumi:"keyEncipherment"`
}

func (CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput)
}

// CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArray and CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArray{ CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArgs{...} }
type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArray []CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionInput

func (CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArray) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArray) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput {
	return o
}

// The key may be used to sign certificates.
func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption) *bool {
		return v.CertSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption) *bool {
		return v.ContentCommitment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption) *bool {
		return v.CrlSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption) *bool {
		return v.DataEncipherment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption) *bool {
		return v.DecipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption) *bool {
		return v.DigitalSignature
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption) *bool {
		return v.EncipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption) *bool {
		return v.KeyAgreement
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption) *bool {
		return v.KeyEncipherment
	}).(pulumi.BoolPtrOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption {
		return vs[0].([]CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOption)[vs[1].(int)]
	}).(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth *bool `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning *bool `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection *bool `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning *bool `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth *bool `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping *bool `pulumi:"timeStamping"`
}

// CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArgs and CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArgs{...}
type CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArgs struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth pulumi.BoolPtrInput `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning pulumi.BoolPtrInput `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection pulumi.BoolPtrInput `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning pulumi.BoolPtrInput `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth pulumi.BoolPtrInput `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping pulumi.BoolPtrInput `pulumi:"timeStamping"`
}

func (CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput)
}

// CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArray and CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArray{ CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArgs{...} }
type CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArray []CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageInput

func (CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArray) ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArray) ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput {
	return o
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage) *bool {
		return v.ClientAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage) *bool {
		return v.CodeSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage) *bool {
		return v.EmailProtection
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage) *bool {
		return v.OcspSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage) *bool {
		return v.ServerAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage) *bool {
		return v.TimeStamping
	}).(pulumi.BoolPtrOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage {
		return vs[0].([]CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsage)[vs[1].(int)]
	}).(CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage struct {
	ObectIds []CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId `pulumi:"obectIds"`
}

// CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArgs and CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArgs{...}
type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArgs struct {
	ObectIds CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayInput `pulumi:"obectIds"`
}

func (CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput)
}

// CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArray and CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArray{ CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArgs{...} }
type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArray []CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageInput

func (CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArray) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArray) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput) ObectIds() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage) []CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId {
		return v.ObectIds
	}).(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage {
		return vs[0].([]CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsage)[vs[1].(int)]
	}).(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArgs and CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArgs{...}
type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArgs) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput)
}

// CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayInput is an input type that accepts CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArray and CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayInput` via:
//
//          CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArray{ CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArgs{...} }
type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput
	ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutputWithContext(context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArray []CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdInput

func (CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArray) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput {
	return i.ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArray) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId) []int {
		return v.ObjectIdPaths
	}).(pulumi.IntArrayOutput)
}

type CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput() CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput) ToCertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId {
		return vs[0].([]CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectId)[vs[1].(int)]
	}).(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput)
}

type CertificateCertificateDescriptionPublicKey struct {
	// The format of the public key. Currently, only PEM format is supported.
	// Possible values are `KEY_TYPE_UNSPECIFIED` and `PEM`.
	Format *string `pulumi:"format"`
	// Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
	Key *string `pulumi:"key"`
}

// CertificateCertificateDescriptionPublicKeyInput is an input type that accepts CertificateCertificateDescriptionPublicKeyArgs and CertificateCertificateDescriptionPublicKeyOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionPublicKeyInput` via:
//
//          CertificateCertificateDescriptionPublicKeyArgs{...}
type CertificateCertificateDescriptionPublicKeyInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionPublicKeyOutput() CertificateCertificateDescriptionPublicKeyOutput
	ToCertificateCertificateDescriptionPublicKeyOutputWithContext(context.Context) CertificateCertificateDescriptionPublicKeyOutput
}

type CertificateCertificateDescriptionPublicKeyArgs struct {
	// The format of the public key. Currently, only PEM format is supported.
	// Possible values are `KEY_TYPE_UNSPECIFIED` and `PEM`.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (CertificateCertificateDescriptionPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionPublicKey)(nil)).Elem()
}

func (i CertificateCertificateDescriptionPublicKeyArgs) ToCertificateCertificateDescriptionPublicKeyOutput() CertificateCertificateDescriptionPublicKeyOutput {
	return i.ToCertificateCertificateDescriptionPublicKeyOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionPublicKeyArgs) ToCertificateCertificateDescriptionPublicKeyOutputWithContext(ctx context.Context) CertificateCertificateDescriptionPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionPublicKeyOutput)
}

// CertificateCertificateDescriptionPublicKeyArrayInput is an input type that accepts CertificateCertificateDescriptionPublicKeyArray and CertificateCertificateDescriptionPublicKeyArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionPublicKeyArrayInput` via:
//
//          CertificateCertificateDescriptionPublicKeyArray{ CertificateCertificateDescriptionPublicKeyArgs{...} }
type CertificateCertificateDescriptionPublicKeyArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionPublicKeyArrayOutput() CertificateCertificateDescriptionPublicKeyArrayOutput
	ToCertificateCertificateDescriptionPublicKeyArrayOutputWithContext(context.Context) CertificateCertificateDescriptionPublicKeyArrayOutput
}

type CertificateCertificateDescriptionPublicKeyArray []CertificateCertificateDescriptionPublicKeyInput

func (CertificateCertificateDescriptionPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionPublicKey)(nil)).Elem()
}

func (i CertificateCertificateDescriptionPublicKeyArray) ToCertificateCertificateDescriptionPublicKeyArrayOutput() CertificateCertificateDescriptionPublicKeyArrayOutput {
	return i.ToCertificateCertificateDescriptionPublicKeyArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionPublicKeyArray) ToCertificateCertificateDescriptionPublicKeyArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionPublicKeyArrayOutput)
}

type CertificateCertificateDescriptionPublicKeyOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionPublicKey)(nil)).Elem()
}

func (o CertificateCertificateDescriptionPublicKeyOutput) ToCertificateCertificateDescriptionPublicKeyOutput() CertificateCertificateDescriptionPublicKeyOutput {
	return o
}

func (o CertificateCertificateDescriptionPublicKeyOutput) ToCertificateCertificateDescriptionPublicKeyOutputWithContext(ctx context.Context) CertificateCertificateDescriptionPublicKeyOutput {
	return o
}

// The format of the public key. Currently, only PEM format is supported.
// Possible values are `KEY_TYPE_UNSPECIFIED` and `PEM`.
func (o CertificateCertificateDescriptionPublicKeyOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionPublicKey) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
func (o CertificateCertificateDescriptionPublicKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionPublicKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type CertificateCertificateDescriptionPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionPublicKey)(nil)).Elem()
}

func (o CertificateCertificateDescriptionPublicKeyArrayOutput) ToCertificateCertificateDescriptionPublicKeyArrayOutput() CertificateCertificateDescriptionPublicKeyArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionPublicKeyArrayOutput) ToCertificateCertificateDescriptionPublicKeyArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionPublicKeyArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionPublicKeyArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionPublicKey {
		return vs[0].([]CertificateCertificateDescriptionPublicKey)[vs[1].(int)]
	}).(CertificateCertificateDescriptionPublicKeyOutput)
}

type CertificateCertificateDescriptionSubjectDescription struct {
	HexSerialNumber *string `pulumi:"hexSerialNumber"`
	// The desired lifetime of the CA certificate. Used to create the "notBeforeTime" and
	// "notAfterTime" fields inside an X.509 certificate. A duration in seconds with up to nine
	// fractional digits, terminated by 's'. Example: "3.5s".
	Lifetime      *string `pulumi:"lifetime"`
	NotAfterTime  *string `pulumi:"notAfterTime"`
	NotBeforeTime *string `pulumi:"notBeforeTime"`
	// The subject alternative name fields.
	// Structure is documented below.
	SubjectAltNames []CertificateCertificateDescriptionSubjectDescriptionSubjectAltName `pulumi:"subjectAltNames"`
	// Contains distinguished name fields such as the location and organization.
	// Structure is documented below.
	Subjects []CertificateCertificateDescriptionSubjectDescriptionSubject `pulumi:"subjects"`
}

// CertificateCertificateDescriptionSubjectDescriptionInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionArgs and CertificateCertificateDescriptionSubjectDescriptionOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionArgs{...}
type CertificateCertificateDescriptionSubjectDescriptionInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionOutput() CertificateCertificateDescriptionSubjectDescriptionOutput
	ToCertificateCertificateDescriptionSubjectDescriptionOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionOutput
}

type CertificateCertificateDescriptionSubjectDescriptionArgs struct {
	HexSerialNumber pulumi.StringPtrInput `pulumi:"hexSerialNumber"`
	// The desired lifetime of the CA certificate. Used to create the "notBeforeTime" and
	// "notAfterTime" fields inside an X.509 certificate. A duration in seconds with up to nine
	// fractional digits, terminated by 's'. Example: "3.5s".
	Lifetime      pulumi.StringPtrInput `pulumi:"lifetime"`
	NotAfterTime  pulumi.StringPtrInput `pulumi:"notAfterTime"`
	NotBeforeTime pulumi.StringPtrInput `pulumi:"notBeforeTime"`
	// The subject alternative name fields.
	// Structure is documented below.
	SubjectAltNames CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayInput `pulumi:"subjectAltNames"`
	// Contains distinguished name fields such as the location and organization.
	// Structure is documented below.
	Subjects CertificateCertificateDescriptionSubjectDescriptionSubjectArrayInput `pulumi:"subjects"`
}

func (CertificateCertificateDescriptionSubjectDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescription)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionArgs) ToCertificateCertificateDescriptionSubjectDescriptionOutput() CertificateCertificateDescriptionSubjectDescriptionOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionArgs) ToCertificateCertificateDescriptionSubjectDescriptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionOutput)
}

// CertificateCertificateDescriptionSubjectDescriptionArrayInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionArray and CertificateCertificateDescriptionSubjectDescriptionArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionArrayInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionArray{ CertificateCertificateDescriptionSubjectDescriptionArgs{...} }
type CertificateCertificateDescriptionSubjectDescriptionArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionArrayOutput() CertificateCertificateDescriptionSubjectDescriptionArrayOutput
	ToCertificateCertificateDescriptionSubjectDescriptionArrayOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionArrayOutput
}

type CertificateCertificateDescriptionSubjectDescriptionArray []CertificateCertificateDescriptionSubjectDescriptionInput

func (CertificateCertificateDescriptionSubjectDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescription)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionArray) ToCertificateCertificateDescriptionSubjectDescriptionArrayOutput() CertificateCertificateDescriptionSubjectDescriptionArrayOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionArray) ToCertificateCertificateDescriptionSubjectDescriptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionArrayOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescription)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionOutput) ToCertificateCertificateDescriptionSubjectDescriptionOutput() CertificateCertificateDescriptionSubjectDescriptionOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionOutput) ToCertificateCertificateDescriptionSubjectDescriptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionOutput) HexSerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescription) *string { return v.HexSerialNumber }).(pulumi.StringPtrOutput)
}

// The desired lifetime of the CA certificate. Used to create the "notBeforeTime" and
// "notAfterTime" fields inside an X.509 certificate. A duration in seconds with up to nine
// fractional digits, terminated by 's'. Example: "3.5s".
func (o CertificateCertificateDescriptionSubjectDescriptionOutput) Lifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescription) *string { return v.Lifetime }).(pulumi.StringPtrOutput)
}

func (o CertificateCertificateDescriptionSubjectDescriptionOutput) NotAfterTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescription) *string { return v.NotAfterTime }).(pulumi.StringPtrOutput)
}

func (o CertificateCertificateDescriptionSubjectDescriptionOutput) NotBeforeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescription) *string { return v.NotBeforeTime }).(pulumi.StringPtrOutput)
}

// The subject alternative name fields.
// Structure is documented below.
func (o CertificateCertificateDescriptionSubjectDescriptionOutput) SubjectAltNames() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescription) []CertificateCertificateDescriptionSubjectDescriptionSubjectAltName {
		return v.SubjectAltNames
	}).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput)
}

// Contains distinguished name fields such as the location and organization.
// Structure is documented below.
func (o CertificateCertificateDescriptionSubjectDescriptionOutput) Subjects() CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescription) []CertificateCertificateDescriptionSubjectDescriptionSubject {
		return v.Subjects
	}).(CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescription)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionArrayOutput() CertificateCertificateDescriptionSubjectDescriptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionSubjectDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionSubjectDescription {
		return vs[0].([]CertificateCertificateDescriptionSubjectDescription)[vs[1].(int)]
	}).(CertificateCertificateDescriptionSubjectDescriptionOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubject struct {
	// The common name of the distinguished name.
	CommonName *string `pulumi:"commonName"`
	// The country code of the subject.
	CountryCode *string `pulumi:"countryCode"`
	// The locality or city of the subject.
	Locality *string `pulumi:"locality"`
	// The organization of the subject.
	Organization *string `pulumi:"organization"`
	// The organizational unit of the subject.
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// The postal code of the subject.
	PostalCode *string `pulumi:"postalCode"`
	// The province, territory, or regional state of the subject.
	Province *string `pulumi:"province"`
	// The street address of the subject.
	StreetAddress *string `pulumi:"streetAddress"`
}

// CertificateCertificateDescriptionSubjectDescriptionSubjectInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionSubjectArgs and CertificateCertificateDescriptionSubjectDescriptionSubjectOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionSubjectInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionSubjectArgs{...}
type CertificateCertificateDescriptionSubjectDescriptionSubjectInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionSubjectOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectOutput
	ToCertificateCertificateDescriptionSubjectDescriptionSubjectOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectOutput
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectArgs struct {
	// The common name of the distinguished name.
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	// The country code of the subject.
	CountryCode pulumi.StringPtrInput `pulumi:"countryCode"`
	// The locality or city of the subject.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// The organization of the subject.
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// The organizational unit of the subject.
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// The postal code of the subject.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The province, territory, or regional state of the subject.
	Province pulumi.StringPtrInput `pulumi:"province"`
	// The street address of the subject.
	StreetAddress pulumi.StringPtrInput `pulumi:"streetAddress"`
}

func (CertificateCertificateDescriptionSubjectDescriptionSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubject)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectArgs) ToCertificateCertificateDescriptionSubjectDescriptionSubjectOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionSubjectOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectArgs) ToCertificateCertificateDescriptionSubjectDescriptionSubjectOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionSubjectOutput)
}

// CertificateCertificateDescriptionSubjectDescriptionSubjectArrayInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionSubjectArray and CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionSubjectArrayInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionSubjectArray{ CertificateCertificateDescriptionSubjectDescriptionSubjectArgs{...} }
type CertificateCertificateDescriptionSubjectDescriptionSubjectArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput
	ToCertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectArray []CertificateCertificateDescriptionSubjectDescriptionSubjectInput

func (CertificateCertificateDescriptionSubjectDescriptionSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescriptionSubject)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectArray) ToCertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectArray) ToCertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubject)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectOutput {
	return o
}

// The common name of the distinguished name.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubject) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

// The country code of the subject.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubject) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

// The locality or city of the subject.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubject) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// The organization of the subject.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubject) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// The organizational unit of the subject.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubject) *string {
		return v.OrganizationalUnit
	}).(pulumi.StringPtrOutput)
}

// The postal code of the subject.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubject) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The province, territory, or regional state of the subject.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubject) *string { return v.Province }).(pulumi.StringPtrOutput)
}

// The street address of the subject.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectOutput) StreetAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubject) *string { return v.StreetAddress }).(pulumi.StringPtrOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescriptionSubject)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionSubjectDescriptionSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionSubjectDescriptionSubject {
		return vs[0].([]CertificateCertificateDescriptionSubjectDescriptionSubject)[vs[1].(int)]
	}).(CertificateCertificateDescriptionSubjectDescriptionSubjectOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltName struct {
	CustomSans []CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan `pulumi:"customSans"`
	// Contains only valid, fully-qualified host names.
	DnsNames []string `pulumi:"dnsNames"`
	// Contains only valid RFC 2822 E-mail addresses.
	EmailAddresses []string `pulumi:"emailAddresses"`
	// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// Contains only valid RFC 3986 URIs.
	Uris []string `pulumi:"uris"`
}

// CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArgs and CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArgs{...}
type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput
	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArgs struct {
	CustomSans CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayInput `pulumi:"customSans"`
	// Contains only valid, fully-qualified host names.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// Contains only valid RFC 2822 E-mail addresses.
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// Contains only valid RFC 3986 URIs.
	Uris pulumi.StringArrayInput `pulumi:"uris"`
}

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltName)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArgs) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArgs) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput)
}

// CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArray and CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArray{ CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArgs{...} }
type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput
	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArray []CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameInput

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescriptionSubjectAltName)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArray) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArray) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltName)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput) CustomSans() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubjectAltName) []CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan {
		return v.CustomSans
	}).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput)
}

// Contains only valid, fully-qualified host names.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubjectAltName) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 2822 E-mail addresses.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubjectAltName) []string {
		return v.EmailAddresses
	}).(pulumi.StringArrayOutput)
}

// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubjectAltName) []string {
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 3986 URIs.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubjectAltName) []string { return v.Uris }).(pulumi.StringArrayOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescriptionSubjectAltName)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionSubjectDescriptionSubjectAltName {
		return vs[0].([]CertificateCertificateDescriptionSubjectDescriptionSubjectAltName)[vs[1].(int)]
	}).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical *bool                                                                               `pulumi:"critical"`
	ObectIds []CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId `pulumi:"obectIds"`
	// The value of this X.509 extension. A base64-encoded string.
	Value *string `pulumi:"value"`
}

// CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArgs and CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArgs{...}
type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput
	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArgs struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical pulumi.BoolPtrInput                                                                         `pulumi:"critical"`
	ObectIds CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayInput `pulumi:"obectIds"`
	// The value of this X.509 extension. A base64-encoded string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArgs) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArgs) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput)
}

// CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArray and CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArray{ CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArgs{...} }
type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput
	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArray []CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanInput

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArray) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArray) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput {
	return o
}

// Indicates whether or not this extension is critical (i.e., if the client does not know how to
// handle this extension, the client should consider this to be an error).
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput) Critical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan) *bool {
		return v.Critical
	}).(pulumi.BoolPtrOutput)
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput) ObectIds() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan) []CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId {
		return v.ObectIds
	}).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput)
}

// The value of this X.509 extension. A base64-encoded string.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan {
		return vs[0].([]CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSan)[vs[1].(int)]
	}).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArgs and CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArgs{...}
type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput
	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArgs) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArgs) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput)
}

// CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayInput is an input type that accepts CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArray and CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayInput` via:
//
//          CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArray{ CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArgs{...} }
type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput
	ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArray []CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdInput

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArray) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput {
	return i.ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArray) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId) []int {
		return v.ObjectIdPaths
	}).(pulumi.IntArrayOutput)
}

type CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput() CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput) ToCertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId {
		return vs[0].([]CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectId)[vs[1].(int)]
	}).(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput)
}

type CertificateCertificateDescriptionSubjectKeyId struct {
	KeyId *string `pulumi:"keyId"`
}

// CertificateCertificateDescriptionSubjectKeyIdInput is an input type that accepts CertificateCertificateDescriptionSubjectKeyIdArgs and CertificateCertificateDescriptionSubjectKeyIdOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectKeyIdInput` via:
//
//          CertificateCertificateDescriptionSubjectKeyIdArgs{...}
type CertificateCertificateDescriptionSubjectKeyIdInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectKeyIdOutput() CertificateCertificateDescriptionSubjectKeyIdOutput
	ToCertificateCertificateDescriptionSubjectKeyIdOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectKeyIdOutput
}

type CertificateCertificateDescriptionSubjectKeyIdArgs struct {
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
}

func (CertificateCertificateDescriptionSubjectKeyIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectKeyId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectKeyIdArgs) ToCertificateCertificateDescriptionSubjectKeyIdOutput() CertificateCertificateDescriptionSubjectKeyIdOutput {
	return i.ToCertificateCertificateDescriptionSubjectKeyIdOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectKeyIdArgs) ToCertificateCertificateDescriptionSubjectKeyIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectKeyIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectKeyIdOutput)
}

// CertificateCertificateDescriptionSubjectKeyIdArrayInput is an input type that accepts CertificateCertificateDescriptionSubjectKeyIdArray and CertificateCertificateDescriptionSubjectKeyIdArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionSubjectKeyIdArrayInput` via:
//
//          CertificateCertificateDescriptionSubjectKeyIdArray{ CertificateCertificateDescriptionSubjectKeyIdArgs{...} }
type CertificateCertificateDescriptionSubjectKeyIdArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionSubjectKeyIdArrayOutput() CertificateCertificateDescriptionSubjectKeyIdArrayOutput
	ToCertificateCertificateDescriptionSubjectKeyIdArrayOutputWithContext(context.Context) CertificateCertificateDescriptionSubjectKeyIdArrayOutput
}

type CertificateCertificateDescriptionSubjectKeyIdArray []CertificateCertificateDescriptionSubjectKeyIdInput

func (CertificateCertificateDescriptionSubjectKeyIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectKeyId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionSubjectKeyIdArray) ToCertificateCertificateDescriptionSubjectKeyIdArrayOutput() CertificateCertificateDescriptionSubjectKeyIdArrayOutput {
	return i.ToCertificateCertificateDescriptionSubjectKeyIdArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionSubjectKeyIdArray) ToCertificateCertificateDescriptionSubjectKeyIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectKeyIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionSubjectKeyIdArrayOutput)
}

type CertificateCertificateDescriptionSubjectKeyIdOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectKeyIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionSubjectKeyId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectKeyIdOutput) ToCertificateCertificateDescriptionSubjectKeyIdOutput() CertificateCertificateDescriptionSubjectKeyIdOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectKeyIdOutput) ToCertificateCertificateDescriptionSubjectKeyIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectKeyIdOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectKeyIdOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionSubjectKeyId) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

type CertificateCertificateDescriptionSubjectKeyIdArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionSubjectKeyIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionSubjectKeyId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionSubjectKeyIdArrayOutput) ToCertificateCertificateDescriptionSubjectKeyIdArrayOutput() CertificateCertificateDescriptionSubjectKeyIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectKeyIdArrayOutput) ToCertificateCertificateDescriptionSubjectKeyIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionSubjectKeyIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionSubjectKeyIdArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionSubjectKeyIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionSubjectKeyId {
		return vs[0].([]CertificateCertificateDescriptionSubjectKeyId)[vs[1].(int)]
	}).(CertificateCertificateDescriptionSubjectKeyIdOutput)
}

type CertificateCertificateDescriptionX509Description struct {
	// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
	// Structure is documented below.
	AdditionalExtensions []CertificateCertificateDescriptionX509DescriptionAdditionalExtension `pulumi:"additionalExtensions"`
	// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
	// "Authority Information Access" extension in the certificate.
	AiaOcspServers []string `pulumi:"aiaOcspServers"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	CaOptions []CertificateCertificateDescriptionX509DescriptionCaOption `pulumi:"caOptions"`
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsages []CertificateCertificateDescriptionX509DescriptionKeyUsage `pulumi:"keyUsages"`
	// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	// Structure is documented below.
	PolicyIds []CertificateCertificateDescriptionX509DescriptionPolicyId `pulumi:"policyIds"`
}

// CertificateCertificateDescriptionX509DescriptionInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionArgs and CertificateCertificateDescriptionX509DescriptionOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionArgs{...}
type CertificateCertificateDescriptionX509DescriptionInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionOutput() CertificateCertificateDescriptionX509DescriptionOutput
	ToCertificateCertificateDescriptionX509DescriptionOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionOutput
}

type CertificateCertificateDescriptionX509DescriptionArgs struct {
	// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
	// Structure is documented below.
	AdditionalExtensions CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayInput `pulumi:"additionalExtensions"`
	// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
	// "Authority Information Access" extension in the certificate.
	AiaOcspServers pulumi.StringArrayInput `pulumi:"aiaOcspServers"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	CaOptions CertificateCertificateDescriptionX509DescriptionCaOptionArrayInput `pulumi:"caOptions"`
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsages CertificateCertificateDescriptionX509DescriptionKeyUsageArrayInput `pulumi:"keyUsages"`
	// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	// Structure is documented below.
	PolicyIds CertificateCertificateDescriptionX509DescriptionPolicyIdArrayInput `pulumi:"policyIds"`
}

func (CertificateCertificateDescriptionX509DescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509Description)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionArgs) ToCertificateCertificateDescriptionX509DescriptionOutput() CertificateCertificateDescriptionX509DescriptionOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionArgs) ToCertificateCertificateDescriptionX509DescriptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionOutput)
}

// CertificateCertificateDescriptionX509DescriptionArrayInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionArray and CertificateCertificateDescriptionX509DescriptionArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionArrayInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionArray{ CertificateCertificateDescriptionX509DescriptionArgs{...} }
type CertificateCertificateDescriptionX509DescriptionArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionArrayOutput() CertificateCertificateDescriptionX509DescriptionArrayOutput
	ToCertificateCertificateDescriptionX509DescriptionArrayOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionArrayOutput
}

type CertificateCertificateDescriptionX509DescriptionArray []CertificateCertificateDescriptionX509DescriptionInput

func (CertificateCertificateDescriptionX509DescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509Description)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionArray) ToCertificateCertificateDescriptionX509DescriptionArrayOutput() CertificateCertificateDescriptionX509DescriptionArrayOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionArray) ToCertificateCertificateDescriptionX509DescriptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509Description)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionOutput) ToCertificateCertificateDescriptionX509DescriptionOutput() CertificateCertificateDescriptionX509DescriptionOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionOutput) ToCertificateCertificateDescriptionX509DescriptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionOutput {
	return o
}

// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
// Structure is documented below.
func (o CertificateCertificateDescriptionX509DescriptionOutput) AdditionalExtensions() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509Description) []CertificateCertificateDescriptionX509DescriptionAdditionalExtension {
		return v.AdditionalExtensions
	}).(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput)
}

// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
// "Authority Information Access" extension in the certificate.
func (o CertificateCertificateDescriptionX509DescriptionOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509Description) []string { return v.AiaOcspServers }).(pulumi.StringArrayOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o CertificateCertificateDescriptionX509DescriptionOutput) CaOptions() CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509Description) []CertificateCertificateDescriptionX509DescriptionCaOption {
		return v.CaOptions
	}).(CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput)
}

// Indicates the intended use for keys that correspond to a certificate.
// Structure is documented below.
func (o CertificateCertificateDescriptionX509DescriptionOutput) KeyUsages() CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509Description) []CertificateCertificateDescriptionX509DescriptionKeyUsage {
		return v.KeyUsages
	}).(CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput)
}

// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
// Structure is documented below.
func (o CertificateCertificateDescriptionX509DescriptionOutput) PolicyIds() CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509Description) []CertificateCertificateDescriptionX509DescriptionPolicyId {
		return v.PolicyIds
	}).(CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509Description)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionArrayOutput) ToCertificateCertificateDescriptionX509DescriptionArrayOutput() CertificateCertificateDescriptionX509DescriptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionArrayOutput) ToCertificateCertificateDescriptionX509DescriptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionX509DescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionX509Description {
		return vs[0].([]CertificateCertificateDescriptionX509Description)[vs[1].(int)]
	}).(CertificateCertificateDescriptionX509DescriptionOutput)
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtension struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical *bool `pulumi:"critical"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	ObjectIds []CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId `pulumi:"objectIds"`
	// The value of this X.509 extension. A base64-encoded string.
	Value *string `pulumi:"value"`
}

// CertificateCertificateDescriptionX509DescriptionAdditionalExtensionInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArgs and CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionAdditionalExtensionInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArgs{...}
type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput
	ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArgs struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical pulumi.BoolPtrInput `pulumi:"critical"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	ObjectIds CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayInput `pulumi:"objectIds"`
	// The value of this X.509 extension. A base64-encoded string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionAdditionalExtension)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArgs) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArgs) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput)
}

// CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArray and CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArray{ CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArgs{...} }
type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput
	ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArray []CertificateCertificateDescriptionX509DescriptionAdditionalExtensionInput

func (CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionAdditionalExtension)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArray) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArray) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionAdditionalExtension)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput {
	return o
}

// Indicates whether or not this extension is critical (i.e., if the client does not know how to
// handle this extension, the client should consider this to be an error).
func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput) Critical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionAdditionalExtension) *bool { return v.Critical }).(pulumi.BoolPtrOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput) ObjectIds() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionAdditionalExtension) []CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId {
		return v.ObjectIds
	}).(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput)
}

// The value of this X.509 extension. A base64-encoded string.
func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionAdditionalExtension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionAdditionalExtension)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionX509DescriptionAdditionalExtension {
		return vs[0].([]CertificateCertificateDescriptionX509DescriptionAdditionalExtension)[vs[1].(int)]
	}).(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput)
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArgs and CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArgs{...}
type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput
	ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArgs) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArgs) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput)
}

// CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArray and CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArray{ CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArgs{...} }
type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput
	ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArray []CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdInput

func (CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArray) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArray) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId) []int {
		return v.ObjectIdPaths
	}).(pulumi.IntArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput() CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput) ToCertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId {
		return vs[0].([]CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectId)[vs[1].(int)]
	}).(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput)
}

type CertificateCertificateDescriptionX509DescriptionCaOption struct {
	// When true, the "CA" in Basic Constraints extension will be set to true.
	IsCa *bool `pulumi:"isCa"`
	// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
	// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
	MaxIssuerPathLength *int `pulumi:"maxIssuerPathLength"`
}

// CertificateCertificateDescriptionX509DescriptionCaOptionInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionCaOptionArgs and CertificateCertificateDescriptionX509DescriptionCaOptionOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionCaOptionInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionCaOptionArgs{...}
type CertificateCertificateDescriptionX509DescriptionCaOptionInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionCaOptionOutput() CertificateCertificateDescriptionX509DescriptionCaOptionOutput
	ToCertificateCertificateDescriptionX509DescriptionCaOptionOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionCaOptionOutput
}

type CertificateCertificateDescriptionX509DescriptionCaOptionArgs struct {
	// When true, the "CA" in Basic Constraints extension will be set to true.
	IsCa pulumi.BoolPtrInput `pulumi:"isCa"`
	// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
	// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
	MaxIssuerPathLength pulumi.IntPtrInput `pulumi:"maxIssuerPathLength"`
}

func (CertificateCertificateDescriptionX509DescriptionCaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionCaOption)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionCaOptionArgs) ToCertificateCertificateDescriptionX509DescriptionCaOptionOutput() CertificateCertificateDescriptionX509DescriptionCaOptionOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionCaOptionOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionCaOptionArgs) ToCertificateCertificateDescriptionX509DescriptionCaOptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionCaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionCaOptionOutput)
}

// CertificateCertificateDescriptionX509DescriptionCaOptionArrayInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionCaOptionArray and CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionCaOptionArrayInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionCaOptionArray{ CertificateCertificateDescriptionX509DescriptionCaOptionArgs{...} }
type CertificateCertificateDescriptionX509DescriptionCaOptionArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput() CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput
	ToCertificateCertificateDescriptionX509DescriptionCaOptionArrayOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput
}

type CertificateCertificateDescriptionX509DescriptionCaOptionArray []CertificateCertificateDescriptionX509DescriptionCaOptionInput

func (CertificateCertificateDescriptionX509DescriptionCaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionCaOption)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionCaOptionArray) ToCertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput() CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionCaOptionArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionCaOptionArray) ToCertificateCertificateDescriptionX509DescriptionCaOptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionCaOptionOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionCaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionCaOption)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionCaOptionOutput) ToCertificateCertificateDescriptionX509DescriptionCaOptionOutput() CertificateCertificateDescriptionX509DescriptionCaOptionOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionCaOptionOutput) ToCertificateCertificateDescriptionX509DescriptionCaOptionOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionCaOptionOutput {
	return o
}

// When true, the "CA" in Basic Constraints extension will be set to true.
func (o CertificateCertificateDescriptionX509DescriptionCaOptionOutput) IsCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionCaOption) *bool { return v.IsCa }).(pulumi.BoolPtrOutput)
}

// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
func (o CertificateCertificateDescriptionX509DescriptionCaOptionOutput) MaxIssuerPathLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionCaOption) *int { return v.MaxIssuerPathLength }).(pulumi.IntPtrOutput)
}

type CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionCaOption)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput) ToCertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput() CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput) ToCertificateCertificateDescriptionX509DescriptionCaOptionArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionX509DescriptionCaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionX509DescriptionCaOption {
		return vs[0].([]CertificateCertificateDescriptionX509DescriptionCaOption)[vs[1].(int)]
	}).(CertificateCertificateDescriptionX509DescriptionCaOptionOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsage struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsages []CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage `pulumi:"baseKeyUsages"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsages []CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage `pulumi:"extendedKeyUsages"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages []CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage `pulumi:"unknownExtendedKeyUsages"`
}

// CertificateCertificateDescriptionX509DescriptionKeyUsageInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionKeyUsageArgs and CertificateCertificateDescriptionX509DescriptionKeyUsageOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionKeyUsageInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionKeyUsageArgs{...}
type CertificateCertificateDescriptionX509DescriptionKeyUsageInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageOutput
	ToCertificateCertificateDescriptionX509DescriptionKeyUsageOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageOutput
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageArgs struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsages CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayInput `pulumi:"baseKeyUsages"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsages CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayInput `pulumi:"extendedKeyUsages"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayInput `pulumi:"unknownExtendedKeyUsages"`
}

func (CertificateCertificateDescriptionX509DescriptionKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageArgs) ToCertificateCertificateDescriptionX509DescriptionKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionKeyUsageOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageArgs) ToCertificateCertificateDescriptionX509DescriptionKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionKeyUsageOutput)
}

// CertificateCertificateDescriptionX509DescriptionKeyUsageArrayInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionKeyUsageArray and CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionKeyUsageArrayInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionKeyUsageArray{ CertificateCertificateDescriptionX509DescriptionKeyUsageArgs{...} }
type CertificateCertificateDescriptionX509DescriptionKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput
	ToCertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageArray []CertificateCertificateDescriptionX509DescriptionKeyUsageInput

func (CertificateCertificateDescriptionX509DescriptionKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageArray) ToCertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageArray) ToCertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageOutput {
	return o
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageOutput) BaseKeyUsages() CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsage) []CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage {
		return v.BaseKeyUsages
	}).(CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageOutput) ExtendedKeyUsages() CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsage) []CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage {
		return v.ExtendedKeyUsages
	}).(CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput)
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
// Structure is documented below.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageOutput) UnknownExtendedKeyUsages() CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsage) []CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage {
		return v.UnknownExtendedKeyUsages
	}).(CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionX509DescriptionKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionX509DescriptionKeyUsage {
		return vs[0].([]CertificateCertificateDescriptionX509DescriptionKeyUsage)[vs[1].(int)]
	}).(CertificateCertificateDescriptionX509DescriptionKeyUsageOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage struct {
	// The key may be used to sign certificates.
	CertSign *bool `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment *bool `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign *bool `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment *bool `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly *bool `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature *bool `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly *bool `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement *bool `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment *bool `pulumi:"keyEncipherment"`
}

// CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArgs and CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArgs{...}
type CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput
	ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArgs struct {
	// The key may be used to sign certificates.
	CertSign pulumi.BoolPtrInput `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment pulumi.BoolPtrInput `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign pulumi.BoolPtrInput `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment pulumi.BoolPtrInput `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly pulumi.BoolPtrInput `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature pulumi.BoolPtrInput `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly pulumi.BoolPtrInput `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement pulumi.BoolPtrInput `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment pulumi.BoolPtrInput `pulumi:"keyEncipherment"`
}

func (CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArgs) ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArgs) ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput)
}

// CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArray and CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArray{ CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArgs{...} }
type CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput
	ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArray []CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageInput

func (CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArray) ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArray) ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput {
	return o
}

// The key may be used to sign certificates.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage) *bool { return v.CertSign }).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage) *bool {
		return v.ContentCommitment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage) *bool { return v.CrlSign }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage) *bool {
		return v.DataEncipherment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage) *bool {
		return v.DecipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage) *bool {
		return v.DigitalSignature
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage) *bool {
		return v.EncipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage) *bool {
		return v.KeyAgreement
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage) *bool {
		return v.KeyEncipherment
	}).(pulumi.BoolPtrOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage {
		return vs[0].([]CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsage)[vs[1].(int)]
	}).(CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth *bool `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning *bool `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection *bool `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning *bool `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth *bool `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping *bool `pulumi:"timeStamping"`
}

// CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArgs and CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArgs{...}
type CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput
	ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArgs struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth pulumi.BoolPtrInput `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning pulumi.BoolPtrInput `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection pulumi.BoolPtrInput `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning pulumi.BoolPtrInput `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth pulumi.BoolPtrInput `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping pulumi.BoolPtrInput `pulumi:"timeStamping"`
}

func (CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArgs) ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArgs) ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput)
}

// CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArray and CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArray{ CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArgs{...} }
type CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput
	ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArray []CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageInput

func (CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArray) ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArray) ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput {
	return o
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage) *bool {
		return v.ClientAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage) *bool {
		return v.CodeSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage) *bool {
		return v.EmailProtection
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage) *bool {
		return v.OcspSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage) *bool {
		return v.ServerAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage) *bool {
		return v.TimeStamping
	}).(pulumi.BoolPtrOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage {
		return vs[0].([]CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsage)[vs[1].(int)]
	}).(CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArgs and CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArgs{...}
type CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput
	ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArgs) ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArgs) ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput)
}

// CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArray and CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArray{ CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArgs{...} }
type CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput
	ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArray []CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageInput

func (CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArray) ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArray) ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage) []int {
		return v.ObjectIdPaths
	}).(pulumi.IntArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage {
		return vs[0].([]CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsage)[vs[1].(int)]
	}).(CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput)
}

type CertificateCertificateDescriptionX509DescriptionPolicyId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateCertificateDescriptionX509DescriptionPolicyIdInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionPolicyIdArgs and CertificateCertificateDescriptionX509DescriptionPolicyIdOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionPolicyIdInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionPolicyIdArgs{...}
type CertificateCertificateDescriptionX509DescriptionPolicyIdInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionPolicyIdOutput() CertificateCertificateDescriptionX509DescriptionPolicyIdOutput
	ToCertificateCertificateDescriptionX509DescriptionPolicyIdOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionPolicyIdOutput
}

type CertificateCertificateDescriptionX509DescriptionPolicyIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateCertificateDescriptionX509DescriptionPolicyIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionPolicyId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionPolicyIdArgs) ToCertificateCertificateDescriptionX509DescriptionPolicyIdOutput() CertificateCertificateDescriptionX509DescriptionPolicyIdOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionPolicyIdOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionPolicyIdArgs) ToCertificateCertificateDescriptionX509DescriptionPolicyIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionPolicyIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionPolicyIdOutput)
}

// CertificateCertificateDescriptionX509DescriptionPolicyIdArrayInput is an input type that accepts CertificateCertificateDescriptionX509DescriptionPolicyIdArray and CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateDescriptionX509DescriptionPolicyIdArrayInput` via:
//
//          CertificateCertificateDescriptionX509DescriptionPolicyIdArray{ CertificateCertificateDescriptionX509DescriptionPolicyIdArgs{...} }
type CertificateCertificateDescriptionX509DescriptionPolicyIdArrayInput interface {
	pulumi.Input

	ToCertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput() CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput
	ToCertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutputWithContext(context.Context) CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput
}

type CertificateCertificateDescriptionX509DescriptionPolicyIdArray []CertificateCertificateDescriptionX509DescriptionPolicyIdInput

func (CertificateCertificateDescriptionX509DescriptionPolicyIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionPolicyId)(nil)).Elem()
}

func (i CertificateCertificateDescriptionX509DescriptionPolicyIdArray) ToCertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput() CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput {
	return i.ToCertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateDescriptionX509DescriptionPolicyIdArray) ToCertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionPolicyIdOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionPolicyIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionPolicyId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionPolicyIdOutput) ToCertificateCertificateDescriptionX509DescriptionPolicyIdOutput() CertificateCertificateDescriptionX509DescriptionPolicyIdOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionPolicyIdOutput) ToCertificateCertificateDescriptionX509DescriptionPolicyIdOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionPolicyIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CertificateCertificateDescriptionX509DescriptionPolicyIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateCertificateDescriptionX509DescriptionPolicyId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateDescriptionX509DescriptionPolicyId)(nil)).Elem()
}

func (o CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput) ToCertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput() CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput) ToCertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutputWithContext(ctx context.Context) CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput {
	return o
}

func (o CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput) Index(i pulumi.IntInput) CertificateCertificateDescriptionX509DescriptionPolicyIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateDescriptionX509DescriptionPolicyId {
		return vs[0].([]CertificateCertificateDescriptionX509DescriptionPolicyId)[vs[1].(int)]
	}).(CertificateCertificateDescriptionX509DescriptionPolicyIdOutput)
}

type CertificateConfig struct {
	// A PublicKey describes a public key.
	// Structure is documented below.
	PublicKey CertificateConfigPublicKey `pulumi:"publicKey"`
	// Specifies some of the values in a certificate that are related to the subject.
	// Structure is documented below.
	SubjectConfig CertificateConfigSubjectConfig `pulumi:"subjectConfig"`
	// Describes how some of the technical X.509 fields in a certificate should be populated.
	// Structure is documented below.
	X509Config CertificateConfigX509Config `pulumi:"x509Config"`
}

// CertificateConfigInput is an input type that accepts CertificateConfigArgs and CertificateConfigOutput values.
// You can construct a concrete instance of `CertificateConfigInput` via:
//
//          CertificateConfigArgs{...}
type CertificateConfigInput interface {
	pulumi.Input

	ToCertificateConfigOutput() CertificateConfigOutput
	ToCertificateConfigOutputWithContext(context.Context) CertificateConfigOutput
}

type CertificateConfigArgs struct {
	// A PublicKey describes a public key.
	// Structure is documented below.
	PublicKey CertificateConfigPublicKeyInput `pulumi:"publicKey"`
	// Specifies some of the values in a certificate that are related to the subject.
	// Structure is documented below.
	SubjectConfig CertificateConfigSubjectConfigInput `pulumi:"subjectConfig"`
	// Describes how some of the technical X.509 fields in a certificate should be populated.
	// Structure is documented below.
	X509Config CertificateConfigX509ConfigInput `pulumi:"x509Config"`
}

func (CertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfig)(nil)).Elem()
}

func (i CertificateConfigArgs) ToCertificateConfigOutput() CertificateConfigOutput {
	return i.ToCertificateConfigOutputWithContext(context.Background())
}

func (i CertificateConfigArgs) ToCertificateConfigOutputWithContext(ctx context.Context) CertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigOutput)
}

func (i CertificateConfigArgs) ToCertificateConfigPtrOutput() CertificateConfigPtrOutput {
	return i.ToCertificateConfigPtrOutputWithContext(context.Background())
}

func (i CertificateConfigArgs) ToCertificateConfigPtrOutputWithContext(ctx context.Context) CertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigOutput).ToCertificateConfigPtrOutputWithContext(ctx)
}

// CertificateConfigPtrInput is an input type that accepts CertificateConfigArgs, CertificateConfigPtr and CertificateConfigPtrOutput values.
// You can construct a concrete instance of `CertificateConfigPtrInput` via:
//
//          CertificateConfigArgs{...}
//
//  or:
//
//          nil
type CertificateConfigPtrInput interface {
	pulumi.Input

	ToCertificateConfigPtrOutput() CertificateConfigPtrOutput
	ToCertificateConfigPtrOutputWithContext(context.Context) CertificateConfigPtrOutput
}

type certificateConfigPtrType CertificateConfigArgs

func CertificateConfigPtr(v *CertificateConfigArgs) CertificateConfigPtrInput {
	return (*certificateConfigPtrType)(v)
}

func (*certificateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfig)(nil)).Elem()
}

func (i *certificateConfigPtrType) ToCertificateConfigPtrOutput() CertificateConfigPtrOutput {
	return i.ToCertificateConfigPtrOutputWithContext(context.Background())
}

func (i *certificateConfigPtrType) ToCertificateConfigPtrOutputWithContext(ctx context.Context) CertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigPtrOutput)
}

type CertificateConfigOutput struct{ *pulumi.OutputState }

func (CertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfig)(nil)).Elem()
}

func (o CertificateConfigOutput) ToCertificateConfigOutput() CertificateConfigOutput {
	return o
}

func (o CertificateConfigOutput) ToCertificateConfigOutputWithContext(ctx context.Context) CertificateConfigOutput {
	return o
}

func (o CertificateConfigOutput) ToCertificateConfigPtrOutput() CertificateConfigPtrOutput {
	return o.ToCertificateConfigPtrOutputWithContext(context.Background())
}

func (o CertificateConfigOutput) ToCertificateConfigPtrOutputWithContext(ctx context.Context) CertificateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfig) *CertificateConfig {
		return &v
	}).(CertificateConfigPtrOutput)
}

// A PublicKey describes a public key.
// Structure is documented below.
func (o CertificateConfigOutput) PublicKey() CertificateConfigPublicKeyOutput {
	return o.ApplyT(func(v CertificateConfig) CertificateConfigPublicKey { return v.PublicKey }).(CertificateConfigPublicKeyOutput)
}

// Specifies some of the values in a certificate that are related to the subject.
// Structure is documented below.
func (o CertificateConfigOutput) SubjectConfig() CertificateConfigSubjectConfigOutput {
	return o.ApplyT(func(v CertificateConfig) CertificateConfigSubjectConfig { return v.SubjectConfig }).(CertificateConfigSubjectConfigOutput)
}

// Describes how some of the technical X.509 fields in a certificate should be populated.
// Structure is documented below.
func (o CertificateConfigOutput) X509Config() CertificateConfigX509ConfigOutput {
	return o.ApplyT(func(v CertificateConfig) CertificateConfigX509Config { return v.X509Config }).(CertificateConfigX509ConfigOutput)
}

type CertificateConfigPtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfig)(nil)).Elem()
}

func (o CertificateConfigPtrOutput) ToCertificateConfigPtrOutput() CertificateConfigPtrOutput {
	return o
}

func (o CertificateConfigPtrOutput) ToCertificateConfigPtrOutputWithContext(ctx context.Context) CertificateConfigPtrOutput {
	return o
}

func (o CertificateConfigPtrOutput) Elem() CertificateConfigOutput {
	return o.ApplyT(func(v *CertificateConfig) CertificateConfig {
		if v != nil {
			return *v
		}
		var ret CertificateConfig
		return ret
	}).(CertificateConfigOutput)
}

// A PublicKey describes a public key.
// Structure is documented below.
func (o CertificateConfigPtrOutput) PublicKey() CertificateConfigPublicKeyPtrOutput {
	return o.ApplyT(func(v *CertificateConfig) *CertificateConfigPublicKey {
		if v == nil {
			return nil
		}
		return &v.PublicKey
	}).(CertificateConfigPublicKeyPtrOutput)
}

// Specifies some of the values in a certificate that are related to the subject.
// Structure is documented below.
func (o CertificateConfigPtrOutput) SubjectConfig() CertificateConfigSubjectConfigPtrOutput {
	return o.ApplyT(func(v *CertificateConfig) *CertificateConfigSubjectConfig {
		if v == nil {
			return nil
		}
		return &v.SubjectConfig
	}).(CertificateConfigSubjectConfigPtrOutput)
}

// Describes how some of the technical X.509 fields in a certificate should be populated.
// Structure is documented below.
func (o CertificateConfigPtrOutput) X509Config() CertificateConfigX509ConfigPtrOutput {
	return o.ApplyT(func(v *CertificateConfig) *CertificateConfigX509Config {
		if v == nil {
			return nil
		}
		return &v.X509Config
	}).(CertificateConfigX509ConfigPtrOutput)
}

type CertificateConfigPublicKey struct {
	// The format of the public key. Currently, only PEM format is supported.
	// Possible values are `KEY_TYPE_UNSPECIFIED` and `PEM`.
	Format string `pulumi:"format"`
	// Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
	Key *string `pulumi:"key"`
}

// CertificateConfigPublicKeyInput is an input type that accepts CertificateConfigPublicKeyArgs and CertificateConfigPublicKeyOutput values.
// You can construct a concrete instance of `CertificateConfigPublicKeyInput` via:
//
//          CertificateConfigPublicKeyArgs{...}
type CertificateConfigPublicKeyInput interface {
	pulumi.Input

	ToCertificateConfigPublicKeyOutput() CertificateConfigPublicKeyOutput
	ToCertificateConfigPublicKeyOutputWithContext(context.Context) CertificateConfigPublicKeyOutput
}

type CertificateConfigPublicKeyArgs struct {
	// The format of the public key. Currently, only PEM format is supported.
	// Possible values are `KEY_TYPE_UNSPECIFIED` and `PEM`.
	Format pulumi.StringInput `pulumi:"format"`
	// Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (CertificateConfigPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigPublicKey)(nil)).Elem()
}

func (i CertificateConfigPublicKeyArgs) ToCertificateConfigPublicKeyOutput() CertificateConfigPublicKeyOutput {
	return i.ToCertificateConfigPublicKeyOutputWithContext(context.Background())
}

func (i CertificateConfigPublicKeyArgs) ToCertificateConfigPublicKeyOutputWithContext(ctx context.Context) CertificateConfigPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigPublicKeyOutput)
}

func (i CertificateConfigPublicKeyArgs) ToCertificateConfigPublicKeyPtrOutput() CertificateConfigPublicKeyPtrOutput {
	return i.ToCertificateConfigPublicKeyPtrOutputWithContext(context.Background())
}

func (i CertificateConfigPublicKeyArgs) ToCertificateConfigPublicKeyPtrOutputWithContext(ctx context.Context) CertificateConfigPublicKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigPublicKeyOutput).ToCertificateConfigPublicKeyPtrOutputWithContext(ctx)
}

// CertificateConfigPublicKeyPtrInput is an input type that accepts CertificateConfigPublicKeyArgs, CertificateConfigPublicKeyPtr and CertificateConfigPublicKeyPtrOutput values.
// You can construct a concrete instance of `CertificateConfigPublicKeyPtrInput` via:
//
//          CertificateConfigPublicKeyArgs{...}
//
//  or:
//
//          nil
type CertificateConfigPublicKeyPtrInput interface {
	pulumi.Input

	ToCertificateConfigPublicKeyPtrOutput() CertificateConfigPublicKeyPtrOutput
	ToCertificateConfigPublicKeyPtrOutputWithContext(context.Context) CertificateConfigPublicKeyPtrOutput
}

type certificateConfigPublicKeyPtrType CertificateConfigPublicKeyArgs

func CertificateConfigPublicKeyPtr(v *CertificateConfigPublicKeyArgs) CertificateConfigPublicKeyPtrInput {
	return (*certificateConfigPublicKeyPtrType)(v)
}

func (*certificateConfigPublicKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigPublicKey)(nil)).Elem()
}

func (i *certificateConfigPublicKeyPtrType) ToCertificateConfigPublicKeyPtrOutput() CertificateConfigPublicKeyPtrOutput {
	return i.ToCertificateConfigPublicKeyPtrOutputWithContext(context.Background())
}

func (i *certificateConfigPublicKeyPtrType) ToCertificateConfigPublicKeyPtrOutputWithContext(ctx context.Context) CertificateConfigPublicKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigPublicKeyPtrOutput)
}

type CertificateConfigPublicKeyOutput struct{ *pulumi.OutputState }

func (CertificateConfigPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigPublicKey)(nil)).Elem()
}

func (o CertificateConfigPublicKeyOutput) ToCertificateConfigPublicKeyOutput() CertificateConfigPublicKeyOutput {
	return o
}

func (o CertificateConfigPublicKeyOutput) ToCertificateConfigPublicKeyOutputWithContext(ctx context.Context) CertificateConfigPublicKeyOutput {
	return o
}

func (o CertificateConfigPublicKeyOutput) ToCertificateConfigPublicKeyPtrOutput() CertificateConfigPublicKeyPtrOutput {
	return o.ToCertificateConfigPublicKeyPtrOutputWithContext(context.Background())
}

func (o CertificateConfigPublicKeyOutput) ToCertificateConfigPublicKeyPtrOutputWithContext(ctx context.Context) CertificateConfigPublicKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfigPublicKey) *CertificateConfigPublicKey {
		return &v
	}).(CertificateConfigPublicKeyPtrOutput)
}

// The format of the public key. Currently, only PEM format is supported.
// Possible values are `KEY_TYPE_UNSPECIFIED` and `PEM`.
func (o CertificateConfigPublicKeyOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfigPublicKey) string { return v.Format }).(pulumi.StringOutput)
}

// Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
func (o CertificateConfigPublicKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigPublicKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type CertificateConfigPublicKeyPtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigPublicKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigPublicKey)(nil)).Elem()
}

func (o CertificateConfigPublicKeyPtrOutput) ToCertificateConfigPublicKeyPtrOutput() CertificateConfigPublicKeyPtrOutput {
	return o
}

func (o CertificateConfigPublicKeyPtrOutput) ToCertificateConfigPublicKeyPtrOutputWithContext(ctx context.Context) CertificateConfigPublicKeyPtrOutput {
	return o
}

func (o CertificateConfigPublicKeyPtrOutput) Elem() CertificateConfigPublicKeyOutput {
	return o.ApplyT(func(v *CertificateConfigPublicKey) CertificateConfigPublicKey {
		if v != nil {
			return *v
		}
		var ret CertificateConfigPublicKey
		return ret
	}).(CertificateConfigPublicKeyOutput)
}

// The format of the public key. Currently, only PEM format is supported.
// Possible values are `KEY_TYPE_UNSPECIFIED` and `PEM`.
func (o CertificateConfigPublicKeyPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigPublicKey) *string {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(pulumi.StringPtrOutput)
}

// Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
func (o CertificateConfigPublicKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigPublicKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type CertificateConfigSubjectConfig struct {
	// Contains distinguished name fields such as the location and organization.
	// Structure is documented below.
	Subject CertificateConfigSubjectConfigSubject `pulumi:"subject"`
	// The subject alternative name fields.
	// Structure is documented below.
	SubjectAltName *CertificateConfigSubjectConfigSubjectAltName `pulumi:"subjectAltName"`
}

// CertificateConfigSubjectConfigInput is an input type that accepts CertificateConfigSubjectConfigArgs and CertificateConfigSubjectConfigOutput values.
// You can construct a concrete instance of `CertificateConfigSubjectConfigInput` via:
//
//          CertificateConfigSubjectConfigArgs{...}
type CertificateConfigSubjectConfigInput interface {
	pulumi.Input

	ToCertificateConfigSubjectConfigOutput() CertificateConfigSubjectConfigOutput
	ToCertificateConfigSubjectConfigOutputWithContext(context.Context) CertificateConfigSubjectConfigOutput
}

type CertificateConfigSubjectConfigArgs struct {
	// Contains distinguished name fields such as the location and organization.
	// Structure is documented below.
	Subject CertificateConfigSubjectConfigSubjectInput `pulumi:"subject"`
	// The subject alternative name fields.
	// Structure is documented below.
	SubjectAltName CertificateConfigSubjectConfigSubjectAltNamePtrInput `pulumi:"subjectAltName"`
}

func (CertificateConfigSubjectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigSubjectConfig)(nil)).Elem()
}

func (i CertificateConfigSubjectConfigArgs) ToCertificateConfigSubjectConfigOutput() CertificateConfigSubjectConfigOutput {
	return i.ToCertificateConfigSubjectConfigOutputWithContext(context.Background())
}

func (i CertificateConfigSubjectConfigArgs) ToCertificateConfigSubjectConfigOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigSubjectConfigOutput)
}

func (i CertificateConfigSubjectConfigArgs) ToCertificateConfigSubjectConfigPtrOutput() CertificateConfigSubjectConfigPtrOutput {
	return i.ToCertificateConfigSubjectConfigPtrOutputWithContext(context.Background())
}

func (i CertificateConfigSubjectConfigArgs) ToCertificateConfigSubjectConfigPtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigSubjectConfigOutput).ToCertificateConfigSubjectConfigPtrOutputWithContext(ctx)
}

// CertificateConfigSubjectConfigPtrInput is an input type that accepts CertificateConfigSubjectConfigArgs, CertificateConfigSubjectConfigPtr and CertificateConfigSubjectConfigPtrOutput values.
// You can construct a concrete instance of `CertificateConfigSubjectConfigPtrInput` via:
//
//          CertificateConfigSubjectConfigArgs{...}
//
//  or:
//
//          nil
type CertificateConfigSubjectConfigPtrInput interface {
	pulumi.Input

	ToCertificateConfigSubjectConfigPtrOutput() CertificateConfigSubjectConfigPtrOutput
	ToCertificateConfigSubjectConfigPtrOutputWithContext(context.Context) CertificateConfigSubjectConfigPtrOutput
}

type certificateConfigSubjectConfigPtrType CertificateConfigSubjectConfigArgs

func CertificateConfigSubjectConfigPtr(v *CertificateConfigSubjectConfigArgs) CertificateConfigSubjectConfigPtrInput {
	return (*certificateConfigSubjectConfigPtrType)(v)
}

func (*certificateConfigSubjectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigSubjectConfig)(nil)).Elem()
}

func (i *certificateConfigSubjectConfigPtrType) ToCertificateConfigSubjectConfigPtrOutput() CertificateConfigSubjectConfigPtrOutput {
	return i.ToCertificateConfigSubjectConfigPtrOutputWithContext(context.Background())
}

func (i *certificateConfigSubjectConfigPtrType) ToCertificateConfigSubjectConfigPtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigSubjectConfigPtrOutput)
}

type CertificateConfigSubjectConfigOutput struct{ *pulumi.OutputState }

func (CertificateConfigSubjectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigSubjectConfig)(nil)).Elem()
}

func (o CertificateConfigSubjectConfigOutput) ToCertificateConfigSubjectConfigOutput() CertificateConfigSubjectConfigOutput {
	return o
}

func (o CertificateConfigSubjectConfigOutput) ToCertificateConfigSubjectConfigOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigOutput {
	return o
}

func (o CertificateConfigSubjectConfigOutput) ToCertificateConfigSubjectConfigPtrOutput() CertificateConfigSubjectConfigPtrOutput {
	return o.ToCertificateConfigSubjectConfigPtrOutputWithContext(context.Background())
}

func (o CertificateConfigSubjectConfigOutput) ToCertificateConfigSubjectConfigPtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfigSubjectConfig) *CertificateConfigSubjectConfig {
		return &v
	}).(CertificateConfigSubjectConfigPtrOutput)
}

// Contains distinguished name fields such as the location and organization.
// Structure is documented below.
func (o CertificateConfigSubjectConfigOutput) Subject() CertificateConfigSubjectConfigSubjectOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfig) CertificateConfigSubjectConfigSubject { return v.Subject }).(CertificateConfigSubjectConfigSubjectOutput)
}

// The subject alternative name fields.
// Structure is documented below.
func (o CertificateConfigSubjectConfigOutput) SubjectAltName() CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfig) *CertificateConfigSubjectConfigSubjectAltName {
		return v.SubjectAltName
	}).(CertificateConfigSubjectConfigSubjectAltNamePtrOutput)
}

type CertificateConfigSubjectConfigPtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigSubjectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigSubjectConfig)(nil)).Elem()
}

func (o CertificateConfigSubjectConfigPtrOutput) ToCertificateConfigSubjectConfigPtrOutput() CertificateConfigSubjectConfigPtrOutput {
	return o
}

func (o CertificateConfigSubjectConfigPtrOutput) ToCertificateConfigSubjectConfigPtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigPtrOutput {
	return o
}

func (o CertificateConfigSubjectConfigPtrOutput) Elem() CertificateConfigSubjectConfigOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfig) CertificateConfigSubjectConfig {
		if v != nil {
			return *v
		}
		var ret CertificateConfigSubjectConfig
		return ret
	}).(CertificateConfigSubjectConfigOutput)
}

// Contains distinguished name fields such as the location and organization.
// Structure is documented below.
func (o CertificateConfigSubjectConfigPtrOutput) Subject() CertificateConfigSubjectConfigSubjectPtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfig) *CertificateConfigSubjectConfigSubject {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(CertificateConfigSubjectConfigSubjectPtrOutput)
}

// The subject alternative name fields.
// Structure is documented below.
func (o CertificateConfigSubjectConfigPtrOutput) SubjectAltName() CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfig) *CertificateConfigSubjectConfigSubjectAltName {
		if v == nil {
			return nil
		}
		return v.SubjectAltName
	}).(CertificateConfigSubjectConfigSubjectAltNamePtrOutput)
}

type CertificateConfigSubjectConfigSubject struct {
	// The common name of the distinguished name.
	CommonName string `pulumi:"commonName"`
	// The country code of the subject.
	CountryCode *string `pulumi:"countryCode"`
	// The locality or city of the subject.
	Locality *string `pulumi:"locality"`
	// The organization of the subject.
	Organization string `pulumi:"organization"`
	// The organizational unit of the subject.
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// The postal code of the subject.
	PostalCode *string `pulumi:"postalCode"`
	// The province, territory, or regional state of the subject.
	Province *string `pulumi:"province"`
	// The street address of the subject.
	StreetAddress *string `pulumi:"streetAddress"`
}

// CertificateConfigSubjectConfigSubjectInput is an input type that accepts CertificateConfigSubjectConfigSubjectArgs and CertificateConfigSubjectConfigSubjectOutput values.
// You can construct a concrete instance of `CertificateConfigSubjectConfigSubjectInput` via:
//
//          CertificateConfigSubjectConfigSubjectArgs{...}
type CertificateConfigSubjectConfigSubjectInput interface {
	pulumi.Input

	ToCertificateConfigSubjectConfigSubjectOutput() CertificateConfigSubjectConfigSubjectOutput
	ToCertificateConfigSubjectConfigSubjectOutputWithContext(context.Context) CertificateConfigSubjectConfigSubjectOutput
}

type CertificateConfigSubjectConfigSubjectArgs struct {
	// The common name of the distinguished name.
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// The country code of the subject.
	CountryCode pulumi.StringPtrInput `pulumi:"countryCode"`
	// The locality or city of the subject.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// The organization of the subject.
	Organization pulumi.StringInput `pulumi:"organization"`
	// The organizational unit of the subject.
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// The postal code of the subject.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The province, territory, or regional state of the subject.
	Province pulumi.StringPtrInput `pulumi:"province"`
	// The street address of the subject.
	StreetAddress pulumi.StringPtrInput `pulumi:"streetAddress"`
}

func (CertificateConfigSubjectConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigSubjectConfigSubject)(nil)).Elem()
}

func (i CertificateConfigSubjectConfigSubjectArgs) ToCertificateConfigSubjectConfigSubjectOutput() CertificateConfigSubjectConfigSubjectOutput {
	return i.ToCertificateConfigSubjectConfigSubjectOutputWithContext(context.Background())
}

func (i CertificateConfigSubjectConfigSubjectArgs) ToCertificateConfigSubjectConfigSubjectOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigSubjectConfigSubjectOutput)
}

func (i CertificateConfigSubjectConfigSubjectArgs) ToCertificateConfigSubjectConfigSubjectPtrOutput() CertificateConfigSubjectConfigSubjectPtrOutput {
	return i.ToCertificateConfigSubjectConfigSubjectPtrOutputWithContext(context.Background())
}

func (i CertificateConfigSubjectConfigSubjectArgs) ToCertificateConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigSubjectConfigSubjectOutput).ToCertificateConfigSubjectConfigSubjectPtrOutputWithContext(ctx)
}

// CertificateConfigSubjectConfigSubjectPtrInput is an input type that accepts CertificateConfigSubjectConfigSubjectArgs, CertificateConfigSubjectConfigSubjectPtr and CertificateConfigSubjectConfigSubjectPtrOutput values.
// You can construct a concrete instance of `CertificateConfigSubjectConfigSubjectPtrInput` via:
//
//          CertificateConfigSubjectConfigSubjectArgs{...}
//
//  or:
//
//          nil
type CertificateConfigSubjectConfigSubjectPtrInput interface {
	pulumi.Input

	ToCertificateConfigSubjectConfigSubjectPtrOutput() CertificateConfigSubjectConfigSubjectPtrOutput
	ToCertificateConfigSubjectConfigSubjectPtrOutputWithContext(context.Context) CertificateConfigSubjectConfigSubjectPtrOutput
}

type certificateConfigSubjectConfigSubjectPtrType CertificateConfigSubjectConfigSubjectArgs

func CertificateConfigSubjectConfigSubjectPtr(v *CertificateConfigSubjectConfigSubjectArgs) CertificateConfigSubjectConfigSubjectPtrInput {
	return (*certificateConfigSubjectConfigSubjectPtrType)(v)
}

func (*certificateConfigSubjectConfigSubjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigSubjectConfigSubject)(nil)).Elem()
}

func (i *certificateConfigSubjectConfigSubjectPtrType) ToCertificateConfigSubjectConfigSubjectPtrOutput() CertificateConfigSubjectConfigSubjectPtrOutput {
	return i.ToCertificateConfigSubjectConfigSubjectPtrOutputWithContext(context.Background())
}

func (i *certificateConfigSubjectConfigSubjectPtrType) ToCertificateConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigSubjectConfigSubjectPtrOutput)
}

type CertificateConfigSubjectConfigSubjectOutput struct{ *pulumi.OutputState }

func (CertificateConfigSubjectConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigSubjectConfigSubject)(nil)).Elem()
}

func (o CertificateConfigSubjectConfigSubjectOutput) ToCertificateConfigSubjectConfigSubjectOutput() CertificateConfigSubjectConfigSubjectOutput {
	return o
}

func (o CertificateConfigSubjectConfigSubjectOutput) ToCertificateConfigSubjectConfigSubjectOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectOutput {
	return o
}

func (o CertificateConfigSubjectConfigSubjectOutput) ToCertificateConfigSubjectConfigSubjectPtrOutput() CertificateConfigSubjectConfigSubjectPtrOutput {
	return o.ToCertificateConfigSubjectConfigSubjectPtrOutputWithContext(context.Background())
}

func (o CertificateConfigSubjectConfigSubjectOutput) ToCertificateConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfigSubjectConfigSubject) *CertificateConfigSubjectConfigSubject {
		return &v
	}).(CertificateConfigSubjectConfigSubjectPtrOutput)
}

// The common name of the distinguished name.
func (o CertificateConfigSubjectConfigSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// The country code of the subject.
func (o CertificateConfigSubjectConfigSubjectOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubject) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

// The locality or city of the subject.
func (o CertificateConfigSubjectConfigSubjectOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubject) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// The organization of the subject.
func (o CertificateConfigSubjectConfigSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubject) string { return v.Organization }).(pulumi.StringOutput)
}

// The organizational unit of the subject.
func (o CertificateConfigSubjectConfigSubjectOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubject) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// The postal code of the subject.
func (o CertificateConfigSubjectConfigSubjectOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubject) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The province, territory, or regional state of the subject.
func (o CertificateConfigSubjectConfigSubjectOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubject) *string { return v.Province }).(pulumi.StringPtrOutput)
}

// The street address of the subject.
func (o CertificateConfigSubjectConfigSubjectOutput) StreetAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubject) *string { return v.StreetAddress }).(pulumi.StringPtrOutput)
}

type CertificateConfigSubjectConfigSubjectPtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigSubjectConfigSubjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigSubjectConfigSubject)(nil)).Elem()
}

func (o CertificateConfigSubjectConfigSubjectPtrOutput) ToCertificateConfigSubjectConfigSubjectPtrOutput() CertificateConfigSubjectConfigSubjectPtrOutput {
	return o
}

func (o CertificateConfigSubjectConfigSubjectPtrOutput) ToCertificateConfigSubjectConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectPtrOutput {
	return o
}

func (o CertificateConfigSubjectConfigSubjectPtrOutput) Elem() CertificateConfigSubjectConfigSubjectOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubject) CertificateConfigSubjectConfigSubject {
		if v != nil {
			return *v
		}
		var ret CertificateConfigSubjectConfigSubject
		return ret
	}).(CertificateConfigSubjectConfigSubjectOutput)
}

// The common name of the distinguished name.
func (o CertificateConfigSubjectConfigSubjectPtrOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return &v.CommonName
	}).(pulumi.StringPtrOutput)
}

// The country code of the subject.
func (o CertificateConfigSubjectConfigSubjectPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(pulumi.StringPtrOutput)
}

// The locality or city of the subject.
func (o CertificateConfigSubjectConfigSubjectPtrOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Locality
	}).(pulumi.StringPtrOutput)
}

// The organization of the subject.
func (o CertificateConfigSubjectConfigSubjectPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return &v.Organization
	}).(pulumi.StringPtrOutput)
}

// The organizational unit of the subject.
func (o CertificateConfigSubjectConfigSubjectPtrOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnit
	}).(pulumi.StringPtrOutput)
}

// The postal code of the subject.
func (o CertificateConfigSubjectConfigSubjectPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The province, territory, or regional state of the subject.
func (o CertificateConfigSubjectConfigSubjectPtrOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Province
	}).(pulumi.StringPtrOutput)
}

// The street address of the subject.
func (o CertificateConfigSubjectConfigSubjectPtrOutput) StreetAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress
	}).(pulumi.StringPtrOutput)
}

type CertificateConfigSubjectConfigSubjectAltName struct {
	// Contains only valid, fully-qualified host names.
	DnsNames []string `pulumi:"dnsNames"`
	// Contains only valid RFC 2822 E-mail addresses.
	EmailAddresses []string `pulumi:"emailAddresses"`
	// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// Contains only valid RFC 3986 URIs.
	Uris []string `pulumi:"uris"`
}

// CertificateConfigSubjectConfigSubjectAltNameInput is an input type that accepts CertificateConfigSubjectConfigSubjectAltNameArgs and CertificateConfigSubjectConfigSubjectAltNameOutput values.
// You can construct a concrete instance of `CertificateConfigSubjectConfigSubjectAltNameInput` via:
//
//          CertificateConfigSubjectConfigSubjectAltNameArgs{...}
type CertificateConfigSubjectConfigSubjectAltNameInput interface {
	pulumi.Input

	ToCertificateConfigSubjectConfigSubjectAltNameOutput() CertificateConfigSubjectConfigSubjectAltNameOutput
	ToCertificateConfigSubjectConfigSubjectAltNameOutputWithContext(context.Context) CertificateConfigSubjectConfigSubjectAltNameOutput
}

type CertificateConfigSubjectConfigSubjectAltNameArgs struct {
	// Contains only valid, fully-qualified host names.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// Contains only valid RFC 2822 E-mail addresses.
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// Contains only valid RFC 3986 URIs.
	Uris pulumi.StringArrayInput `pulumi:"uris"`
}

func (CertificateConfigSubjectConfigSubjectAltNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (i CertificateConfigSubjectConfigSubjectAltNameArgs) ToCertificateConfigSubjectConfigSubjectAltNameOutput() CertificateConfigSubjectConfigSubjectAltNameOutput {
	return i.ToCertificateConfigSubjectConfigSubjectAltNameOutputWithContext(context.Background())
}

func (i CertificateConfigSubjectConfigSubjectAltNameArgs) ToCertificateConfigSubjectConfigSubjectAltNameOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectAltNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigSubjectConfigSubjectAltNameOutput)
}

func (i CertificateConfigSubjectConfigSubjectAltNameArgs) ToCertificateConfigSubjectConfigSubjectAltNamePtrOutput() CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return i.ToCertificateConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Background())
}

func (i CertificateConfigSubjectConfigSubjectAltNameArgs) ToCertificateConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigSubjectConfigSubjectAltNameOutput).ToCertificateConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx)
}

// CertificateConfigSubjectConfigSubjectAltNamePtrInput is an input type that accepts CertificateConfigSubjectConfigSubjectAltNameArgs, CertificateConfigSubjectConfigSubjectAltNamePtr and CertificateConfigSubjectConfigSubjectAltNamePtrOutput values.
// You can construct a concrete instance of `CertificateConfigSubjectConfigSubjectAltNamePtrInput` via:
//
//          CertificateConfigSubjectConfigSubjectAltNameArgs{...}
//
//  or:
//
//          nil
type CertificateConfigSubjectConfigSubjectAltNamePtrInput interface {
	pulumi.Input

	ToCertificateConfigSubjectConfigSubjectAltNamePtrOutput() CertificateConfigSubjectConfigSubjectAltNamePtrOutput
	ToCertificateConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Context) CertificateConfigSubjectConfigSubjectAltNamePtrOutput
}

type certificateConfigSubjectConfigSubjectAltNamePtrType CertificateConfigSubjectConfigSubjectAltNameArgs

func CertificateConfigSubjectConfigSubjectAltNamePtr(v *CertificateConfigSubjectConfigSubjectAltNameArgs) CertificateConfigSubjectConfigSubjectAltNamePtrInput {
	return (*certificateConfigSubjectConfigSubjectAltNamePtrType)(v)
}

func (*certificateConfigSubjectConfigSubjectAltNamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (i *certificateConfigSubjectConfigSubjectAltNamePtrType) ToCertificateConfigSubjectConfigSubjectAltNamePtrOutput() CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return i.ToCertificateConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Background())
}

func (i *certificateConfigSubjectConfigSubjectAltNamePtrType) ToCertificateConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigSubjectConfigSubjectAltNamePtrOutput)
}

type CertificateConfigSubjectConfigSubjectAltNameOutput struct{ *pulumi.OutputState }

func (CertificateConfigSubjectConfigSubjectAltNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (o CertificateConfigSubjectConfigSubjectAltNameOutput) ToCertificateConfigSubjectConfigSubjectAltNameOutput() CertificateConfigSubjectConfigSubjectAltNameOutput {
	return o
}

func (o CertificateConfigSubjectConfigSubjectAltNameOutput) ToCertificateConfigSubjectConfigSubjectAltNameOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectAltNameOutput {
	return o
}

func (o CertificateConfigSubjectConfigSubjectAltNameOutput) ToCertificateConfigSubjectConfigSubjectAltNamePtrOutput() CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ToCertificateConfigSubjectConfigSubjectAltNamePtrOutputWithContext(context.Background())
}

func (o CertificateConfigSubjectConfigSubjectAltNameOutput) ToCertificateConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfigSubjectConfigSubjectAltName) *CertificateConfigSubjectConfigSubjectAltName {
		return &v
	}).(CertificateConfigSubjectConfigSubjectAltNamePtrOutput)
}

// Contains only valid, fully-qualified host names.
func (o CertificateConfigSubjectConfigSubjectAltNameOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubjectAltName) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 2822 E-mail addresses.
func (o CertificateConfigSubjectConfigSubjectAltNameOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubjectAltName) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
func (o CertificateConfigSubjectConfigSubjectAltNameOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubjectAltName) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 3986 URIs.
func (o CertificateConfigSubjectConfigSubjectAltNameOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateConfigSubjectConfigSubjectAltName) []string { return v.Uris }).(pulumi.StringArrayOutput)
}

type CertificateConfigSubjectConfigSubjectAltNamePtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigSubjectConfigSubjectAltNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (o CertificateConfigSubjectConfigSubjectAltNamePtrOutput) ToCertificateConfigSubjectConfigSubjectAltNamePtrOutput() CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return o
}

func (o CertificateConfigSubjectConfigSubjectAltNamePtrOutput) ToCertificateConfigSubjectConfigSubjectAltNamePtrOutputWithContext(ctx context.Context) CertificateConfigSubjectConfigSubjectAltNamePtrOutput {
	return o
}

func (o CertificateConfigSubjectConfigSubjectAltNamePtrOutput) Elem() CertificateConfigSubjectConfigSubjectAltNameOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubjectAltName) CertificateConfigSubjectConfigSubjectAltName {
		if v != nil {
			return *v
		}
		var ret CertificateConfigSubjectConfigSubjectAltName
		return ret
	}).(CertificateConfigSubjectConfigSubjectAltNameOutput)
}

// Contains only valid, fully-qualified host names.
func (o CertificateConfigSubjectConfigSubjectAltNamePtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.DnsNames
	}).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 2822 E-mail addresses.
func (o CertificateConfigSubjectConfigSubjectAltNamePtrOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.EmailAddresses
	}).(pulumi.StringArrayOutput)
}

// Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
func (o CertificateConfigSubjectConfigSubjectAltNamePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// Contains only valid RFC 3986 URIs.
func (o CertificateConfigSubjectConfigSubjectAltNamePtrOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateConfigSubjectConfigSubjectAltName) []string {
		if v == nil {
			return nil
		}
		return v.Uris
	}).(pulumi.StringArrayOutput)
}

type CertificateConfigX509Config struct {
	// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
	// Structure is documented below.
	AdditionalExtensions []CertificateConfigX509ConfigAdditionalExtension `pulumi:"additionalExtensions"`
	// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
	// "Authority Information Access" extension in the certificate.
	AiaOcspServers []string `pulumi:"aiaOcspServers"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	CaOptions *CertificateConfigX509ConfigCaOptions `pulumi:"caOptions"`
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsage CertificateConfigX509ConfigKeyUsage `pulumi:"keyUsage"`
	// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	// Structure is documented below.
	PolicyIds []CertificateConfigX509ConfigPolicyId `pulumi:"policyIds"`
}

// CertificateConfigX509ConfigInput is an input type that accepts CertificateConfigX509ConfigArgs and CertificateConfigX509ConfigOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigInput` via:
//
//          CertificateConfigX509ConfigArgs{...}
type CertificateConfigX509ConfigInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigOutput() CertificateConfigX509ConfigOutput
	ToCertificateConfigX509ConfigOutputWithContext(context.Context) CertificateConfigX509ConfigOutput
}

type CertificateConfigX509ConfigArgs struct {
	// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
	// Structure is documented below.
	AdditionalExtensions CertificateConfigX509ConfigAdditionalExtensionArrayInput `pulumi:"additionalExtensions"`
	// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
	// "Authority Information Access" extension in the certificate.
	AiaOcspServers pulumi.StringArrayInput `pulumi:"aiaOcspServers"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	CaOptions CertificateConfigX509ConfigCaOptionsPtrInput `pulumi:"caOptions"`
	// Indicates the intended use for keys that correspond to a certificate.
	// Structure is documented below.
	KeyUsage CertificateConfigX509ConfigKeyUsageInput `pulumi:"keyUsage"`
	// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	// Structure is documented below.
	PolicyIds CertificateConfigX509ConfigPolicyIdArrayInput `pulumi:"policyIds"`
}

func (CertificateConfigX509ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509Config)(nil)).Elem()
}

func (i CertificateConfigX509ConfigArgs) ToCertificateConfigX509ConfigOutput() CertificateConfigX509ConfigOutput {
	return i.ToCertificateConfigX509ConfigOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigArgs) ToCertificateConfigX509ConfigOutputWithContext(ctx context.Context) CertificateConfigX509ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigOutput)
}

func (i CertificateConfigX509ConfigArgs) ToCertificateConfigX509ConfigPtrOutput() CertificateConfigX509ConfigPtrOutput {
	return i.ToCertificateConfigX509ConfigPtrOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigArgs) ToCertificateConfigX509ConfigPtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigOutput).ToCertificateConfigX509ConfigPtrOutputWithContext(ctx)
}

// CertificateConfigX509ConfigPtrInput is an input type that accepts CertificateConfigX509ConfigArgs, CertificateConfigX509ConfigPtr and CertificateConfigX509ConfigPtrOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigPtrInput` via:
//
//          CertificateConfigX509ConfigArgs{...}
//
//  or:
//
//          nil
type CertificateConfigX509ConfigPtrInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigPtrOutput() CertificateConfigX509ConfigPtrOutput
	ToCertificateConfigX509ConfigPtrOutputWithContext(context.Context) CertificateConfigX509ConfigPtrOutput
}

type certificateConfigX509ConfigPtrType CertificateConfigX509ConfigArgs

func CertificateConfigX509ConfigPtr(v *CertificateConfigX509ConfigArgs) CertificateConfigX509ConfigPtrInput {
	return (*certificateConfigX509ConfigPtrType)(v)
}

func (*certificateConfigX509ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509Config)(nil)).Elem()
}

func (i *certificateConfigX509ConfigPtrType) ToCertificateConfigX509ConfigPtrOutput() CertificateConfigX509ConfigPtrOutput {
	return i.ToCertificateConfigX509ConfigPtrOutputWithContext(context.Background())
}

func (i *certificateConfigX509ConfigPtrType) ToCertificateConfigX509ConfigPtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigPtrOutput)
}

type CertificateConfigX509ConfigOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509Config)(nil)).Elem()
}

func (o CertificateConfigX509ConfigOutput) ToCertificateConfigX509ConfigOutput() CertificateConfigX509ConfigOutput {
	return o
}

func (o CertificateConfigX509ConfigOutput) ToCertificateConfigX509ConfigOutputWithContext(ctx context.Context) CertificateConfigX509ConfigOutput {
	return o
}

func (o CertificateConfigX509ConfigOutput) ToCertificateConfigX509ConfigPtrOutput() CertificateConfigX509ConfigPtrOutput {
	return o.ToCertificateConfigX509ConfigPtrOutputWithContext(context.Background())
}

func (o CertificateConfigX509ConfigOutput) ToCertificateConfigX509ConfigPtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfigX509Config) *CertificateConfigX509Config {
		return &v
	}).(CertificateConfigX509ConfigPtrOutput)
}

// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
// Structure is documented below.
func (o CertificateConfigX509ConfigOutput) AdditionalExtensions() CertificateConfigX509ConfigAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v CertificateConfigX509Config) []CertificateConfigX509ConfigAdditionalExtension {
		return v.AdditionalExtensions
	}).(CertificateConfigX509ConfigAdditionalExtensionArrayOutput)
}

// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
// "Authority Information Access" extension in the certificate.
func (o CertificateConfigX509ConfigOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateConfigX509Config) []string { return v.AiaOcspServers }).(pulumi.StringArrayOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o CertificateConfigX509ConfigOutput) CaOptions() CertificateConfigX509ConfigCaOptionsPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509Config) *CertificateConfigX509ConfigCaOptions { return v.CaOptions }).(CertificateConfigX509ConfigCaOptionsPtrOutput)
}

// Indicates the intended use for keys that correspond to a certificate.
// Structure is documented below.
func (o CertificateConfigX509ConfigOutput) KeyUsage() CertificateConfigX509ConfigKeyUsageOutput {
	return o.ApplyT(func(v CertificateConfigX509Config) CertificateConfigX509ConfigKeyUsage { return v.KeyUsage }).(CertificateConfigX509ConfigKeyUsageOutput)
}

// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
// Structure is documented below.
func (o CertificateConfigX509ConfigOutput) PolicyIds() CertificateConfigX509ConfigPolicyIdArrayOutput {
	return o.ApplyT(func(v CertificateConfigX509Config) []CertificateConfigX509ConfigPolicyId { return v.PolicyIds }).(CertificateConfigX509ConfigPolicyIdArrayOutput)
}

type CertificateConfigX509ConfigPtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509Config)(nil)).Elem()
}

func (o CertificateConfigX509ConfigPtrOutput) ToCertificateConfigX509ConfigPtrOutput() CertificateConfigX509ConfigPtrOutput {
	return o
}

func (o CertificateConfigX509ConfigPtrOutput) ToCertificateConfigX509ConfigPtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigPtrOutput {
	return o
}

func (o CertificateConfigX509ConfigPtrOutput) Elem() CertificateConfigX509ConfigOutput {
	return o.ApplyT(func(v *CertificateConfigX509Config) CertificateConfigX509Config {
		if v != nil {
			return *v
		}
		var ret CertificateConfigX509Config
		return ret
	}).(CertificateConfigX509ConfigOutput)
}

// Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
// Structure is documented below.
func (o CertificateConfigX509ConfigPtrOutput) AdditionalExtensions() CertificateConfigX509ConfigAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v *CertificateConfigX509Config) []CertificateConfigX509ConfigAdditionalExtension {
		if v == nil {
			return nil
		}
		return v.AdditionalExtensions
	}).(CertificateConfigX509ConfigAdditionalExtensionArrayOutput)
}

// Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
// "Authority Information Access" extension in the certificate.
func (o CertificateConfigX509ConfigPtrOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateConfigX509Config) []string {
		if v == nil {
			return nil
		}
		return v.AiaOcspServers
	}).(pulumi.StringArrayOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o CertificateConfigX509ConfigPtrOutput) CaOptions() CertificateConfigX509ConfigCaOptionsPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509Config) *CertificateConfigX509ConfigCaOptions {
		if v == nil {
			return nil
		}
		return v.CaOptions
	}).(CertificateConfigX509ConfigCaOptionsPtrOutput)
}

// Indicates the intended use for keys that correspond to a certificate.
// Structure is documented below.
func (o CertificateConfigX509ConfigPtrOutput) KeyUsage() CertificateConfigX509ConfigKeyUsagePtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509Config) *CertificateConfigX509ConfigKeyUsage {
		if v == nil {
			return nil
		}
		return &v.KeyUsage
	}).(CertificateConfigX509ConfigKeyUsagePtrOutput)
}

// Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
// Structure is documented below.
func (o CertificateConfigX509ConfigPtrOutput) PolicyIds() CertificateConfigX509ConfigPolicyIdArrayOutput {
	return o.ApplyT(func(v *CertificateConfigX509Config) []CertificateConfigX509ConfigPolicyId {
		if v == nil {
			return nil
		}
		return v.PolicyIds
	}).(CertificateConfigX509ConfigPolicyIdArrayOutput)
}

type CertificateConfigX509ConfigAdditionalExtension struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical bool `pulumi:"critical"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	ObjectId CertificateConfigX509ConfigAdditionalExtensionObjectId `pulumi:"objectId"`
	// The value of this X.509 extension. A base64-encoded string.
	Value string `pulumi:"value"`
}

// CertificateConfigX509ConfigAdditionalExtensionInput is an input type that accepts CertificateConfigX509ConfigAdditionalExtensionArgs and CertificateConfigX509ConfigAdditionalExtensionOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigAdditionalExtensionInput` via:
//
//          CertificateConfigX509ConfigAdditionalExtensionArgs{...}
type CertificateConfigX509ConfigAdditionalExtensionInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigAdditionalExtensionOutput() CertificateConfigX509ConfigAdditionalExtensionOutput
	ToCertificateConfigX509ConfigAdditionalExtensionOutputWithContext(context.Context) CertificateConfigX509ConfigAdditionalExtensionOutput
}

type CertificateConfigX509ConfigAdditionalExtensionArgs struct {
	// Indicates whether or not this extension is critical (i.e., if the client does not know how to
	// handle this extension, the client should consider this to be an error).
	Critical pulumi.BoolInput `pulumi:"critical"`
	// Describes values that are relevant in a CA certificate.
	// Structure is documented below.
	ObjectId CertificateConfigX509ConfigAdditionalExtensionObjectIdInput `pulumi:"objectId"`
	// The value of this X.509 extension. A base64-encoded string.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CertificateConfigX509ConfigAdditionalExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (i CertificateConfigX509ConfigAdditionalExtensionArgs) ToCertificateConfigX509ConfigAdditionalExtensionOutput() CertificateConfigX509ConfigAdditionalExtensionOutput {
	return i.ToCertificateConfigX509ConfigAdditionalExtensionOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigAdditionalExtensionArgs) ToCertificateConfigX509ConfigAdditionalExtensionOutputWithContext(ctx context.Context) CertificateConfigX509ConfigAdditionalExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigAdditionalExtensionOutput)
}

// CertificateConfigX509ConfigAdditionalExtensionArrayInput is an input type that accepts CertificateConfigX509ConfigAdditionalExtensionArray and CertificateConfigX509ConfigAdditionalExtensionArrayOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigAdditionalExtensionArrayInput` via:
//
//          CertificateConfigX509ConfigAdditionalExtensionArray{ CertificateConfigX509ConfigAdditionalExtensionArgs{...} }
type CertificateConfigX509ConfigAdditionalExtensionArrayInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigAdditionalExtensionArrayOutput() CertificateConfigX509ConfigAdditionalExtensionArrayOutput
	ToCertificateConfigX509ConfigAdditionalExtensionArrayOutputWithContext(context.Context) CertificateConfigX509ConfigAdditionalExtensionArrayOutput
}

type CertificateConfigX509ConfigAdditionalExtensionArray []CertificateConfigX509ConfigAdditionalExtensionInput

func (CertificateConfigX509ConfigAdditionalExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (i CertificateConfigX509ConfigAdditionalExtensionArray) ToCertificateConfigX509ConfigAdditionalExtensionArrayOutput() CertificateConfigX509ConfigAdditionalExtensionArrayOutput {
	return i.ToCertificateConfigX509ConfigAdditionalExtensionArrayOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigAdditionalExtensionArray) ToCertificateConfigX509ConfigAdditionalExtensionArrayOutputWithContext(ctx context.Context) CertificateConfigX509ConfigAdditionalExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigAdditionalExtensionArrayOutput)
}

type CertificateConfigX509ConfigAdditionalExtensionOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigAdditionalExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (o CertificateConfigX509ConfigAdditionalExtensionOutput) ToCertificateConfigX509ConfigAdditionalExtensionOutput() CertificateConfigX509ConfigAdditionalExtensionOutput {
	return o
}

func (o CertificateConfigX509ConfigAdditionalExtensionOutput) ToCertificateConfigX509ConfigAdditionalExtensionOutputWithContext(ctx context.Context) CertificateConfigX509ConfigAdditionalExtensionOutput {
	return o
}

// Indicates whether or not this extension is critical (i.e., if the client does not know how to
// handle this extension, the client should consider this to be an error).
func (o CertificateConfigX509ConfigAdditionalExtensionOutput) Critical() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigAdditionalExtension) bool { return v.Critical }).(pulumi.BoolOutput)
}

// Describes values that are relevant in a CA certificate.
// Structure is documented below.
func (o CertificateConfigX509ConfigAdditionalExtensionOutput) ObjectId() CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigAdditionalExtension) CertificateConfigX509ConfigAdditionalExtensionObjectId {
		return v.ObjectId
	}).(CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput)
}

// The value of this X.509 extension. A base64-encoded string.
func (o CertificateConfigX509ConfigAdditionalExtensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigAdditionalExtension) string { return v.Value }).(pulumi.StringOutput)
}

type CertificateConfigX509ConfigAdditionalExtensionArrayOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigAdditionalExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (o CertificateConfigX509ConfigAdditionalExtensionArrayOutput) ToCertificateConfigX509ConfigAdditionalExtensionArrayOutput() CertificateConfigX509ConfigAdditionalExtensionArrayOutput {
	return o
}

func (o CertificateConfigX509ConfigAdditionalExtensionArrayOutput) ToCertificateConfigX509ConfigAdditionalExtensionArrayOutputWithContext(ctx context.Context) CertificateConfigX509ConfigAdditionalExtensionArrayOutput {
	return o
}

func (o CertificateConfigX509ConfigAdditionalExtensionArrayOutput) Index(i pulumi.IntInput) CertificateConfigX509ConfigAdditionalExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateConfigX509ConfigAdditionalExtension {
		return vs[0].([]CertificateConfigX509ConfigAdditionalExtension)[vs[1].(int)]
	}).(CertificateConfigX509ConfigAdditionalExtensionOutput)
}

type CertificateConfigX509ConfigAdditionalExtensionObjectId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateConfigX509ConfigAdditionalExtensionObjectIdInput is an input type that accepts CertificateConfigX509ConfigAdditionalExtensionObjectIdArgs and CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigAdditionalExtensionObjectIdInput` via:
//
//          CertificateConfigX509ConfigAdditionalExtensionObjectIdArgs{...}
type CertificateConfigX509ConfigAdditionalExtensionObjectIdInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigAdditionalExtensionObjectIdOutput() CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput
	ToCertificateConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(context.Context) CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput
}

type CertificateConfigX509ConfigAdditionalExtensionObjectIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateConfigX509ConfigAdditionalExtensionObjectIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigAdditionalExtensionObjectId)(nil)).Elem()
}

func (i CertificateConfigX509ConfigAdditionalExtensionObjectIdArgs) ToCertificateConfigX509ConfigAdditionalExtensionObjectIdOutput() CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return i.ToCertificateConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigAdditionalExtensionObjectIdArgs) ToCertificateConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput)
}

type CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigAdditionalExtensionObjectId)(nil)).Elem()
}

func (o CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput) ToCertificateConfigX509ConfigAdditionalExtensionObjectIdOutput() CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return o
}

func (o CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput) ToCertificateConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigAdditionalExtensionObjectId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type CertificateConfigX509ConfigCaOptions struct {
	// When true, the "CA" in Basic Constraints extension will be set to true.
	IsCa *bool `pulumi:"isCa"`
	// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
	// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
	MaxIssuerPathLength *int `pulumi:"maxIssuerPathLength"`
	// When true, the "CA" in Basic Constraints extension will be set to false.
	// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
	NonCa *bool `pulumi:"nonCa"`
	// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
	// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
	// the max path length will be omitted from the CA certificate.
	ZeroMaxIssuerPathLength *bool `pulumi:"zeroMaxIssuerPathLength"`
}

// CertificateConfigX509ConfigCaOptionsInput is an input type that accepts CertificateConfigX509ConfigCaOptionsArgs and CertificateConfigX509ConfigCaOptionsOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigCaOptionsInput` via:
//
//          CertificateConfigX509ConfigCaOptionsArgs{...}
type CertificateConfigX509ConfigCaOptionsInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigCaOptionsOutput() CertificateConfigX509ConfigCaOptionsOutput
	ToCertificateConfigX509ConfigCaOptionsOutputWithContext(context.Context) CertificateConfigX509ConfigCaOptionsOutput
}

type CertificateConfigX509ConfigCaOptionsArgs struct {
	// When true, the "CA" in Basic Constraints extension will be set to true.
	IsCa pulumi.BoolPtrInput `pulumi:"isCa"`
	// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
	// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
	MaxIssuerPathLength pulumi.IntPtrInput `pulumi:"maxIssuerPathLength"`
	// When true, the "CA" in Basic Constraints extension will be set to false.
	// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
	NonCa pulumi.BoolPtrInput `pulumi:"nonCa"`
	// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
	// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
	// the max path length will be omitted from the CA certificate.
	ZeroMaxIssuerPathLength pulumi.BoolPtrInput `pulumi:"zeroMaxIssuerPathLength"`
}

func (CertificateConfigX509ConfigCaOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigCaOptions)(nil)).Elem()
}

func (i CertificateConfigX509ConfigCaOptionsArgs) ToCertificateConfigX509ConfigCaOptionsOutput() CertificateConfigX509ConfigCaOptionsOutput {
	return i.ToCertificateConfigX509ConfigCaOptionsOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigCaOptionsArgs) ToCertificateConfigX509ConfigCaOptionsOutputWithContext(ctx context.Context) CertificateConfigX509ConfigCaOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigCaOptionsOutput)
}

func (i CertificateConfigX509ConfigCaOptionsArgs) ToCertificateConfigX509ConfigCaOptionsPtrOutput() CertificateConfigX509ConfigCaOptionsPtrOutput {
	return i.ToCertificateConfigX509ConfigCaOptionsPtrOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigCaOptionsArgs) ToCertificateConfigX509ConfigCaOptionsPtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigCaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigCaOptionsOutput).ToCertificateConfigX509ConfigCaOptionsPtrOutputWithContext(ctx)
}

// CertificateConfigX509ConfigCaOptionsPtrInput is an input type that accepts CertificateConfigX509ConfigCaOptionsArgs, CertificateConfigX509ConfigCaOptionsPtr and CertificateConfigX509ConfigCaOptionsPtrOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigCaOptionsPtrInput` via:
//
//          CertificateConfigX509ConfigCaOptionsArgs{...}
//
//  or:
//
//          nil
type CertificateConfigX509ConfigCaOptionsPtrInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigCaOptionsPtrOutput() CertificateConfigX509ConfigCaOptionsPtrOutput
	ToCertificateConfigX509ConfigCaOptionsPtrOutputWithContext(context.Context) CertificateConfigX509ConfigCaOptionsPtrOutput
}

type certificateConfigX509ConfigCaOptionsPtrType CertificateConfigX509ConfigCaOptionsArgs

func CertificateConfigX509ConfigCaOptionsPtr(v *CertificateConfigX509ConfigCaOptionsArgs) CertificateConfigX509ConfigCaOptionsPtrInput {
	return (*certificateConfigX509ConfigCaOptionsPtrType)(v)
}

func (*certificateConfigX509ConfigCaOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509ConfigCaOptions)(nil)).Elem()
}

func (i *certificateConfigX509ConfigCaOptionsPtrType) ToCertificateConfigX509ConfigCaOptionsPtrOutput() CertificateConfigX509ConfigCaOptionsPtrOutput {
	return i.ToCertificateConfigX509ConfigCaOptionsPtrOutputWithContext(context.Background())
}

func (i *certificateConfigX509ConfigCaOptionsPtrType) ToCertificateConfigX509ConfigCaOptionsPtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigCaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigCaOptionsPtrOutput)
}

type CertificateConfigX509ConfigCaOptionsOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigCaOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigCaOptions)(nil)).Elem()
}

func (o CertificateConfigX509ConfigCaOptionsOutput) ToCertificateConfigX509ConfigCaOptionsOutput() CertificateConfigX509ConfigCaOptionsOutput {
	return o
}

func (o CertificateConfigX509ConfigCaOptionsOutput) ToCertificateConfigX509ConfigCaOptionsOutputWithContext(ctx context.Context) CertificateConfigX509ConfigCaOptionsOutput {
	return o
}

func (o CertificateConfigX509ConfigCaOptionsOutput) ToCertificateConfigX509ConfigCaOptionsPtrOutput() CertificateConfigX509ConfigCaOptionsPtrOutput {
	return o.ToCertificateConfigX509ConfigCaOptionsPtrOutputWithContext(context.Background())
}

func (o CertificateConfigX509ConfigCaOptionsOutput) ToCertificateConfigX509ConfigCaOptionsPtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigCaOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfigX509ConfigCaOptions) *CertificateConfigX509ConfigCaOptions {
		return &v
	}).(CertificateConfigX509ConfigCaOptionsPtrOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to true.
func (o CertificateConfigX509ConfigCaOptionsOutput) IsCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigCaOptions) *bool { return v.IsCa }).(pulumi.BoolPtrOutput)
}

// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
func (o CertificateConfigX509ConfigCaOptionsOutput) MaxIssuerPathLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigCaOptions) *int { return v.MaxIssuerPathLength }).(pulumi.IntPtrOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to false.
// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
func (o CertificateConfigX509ConfigCaOptionsOutput) NonCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigCaOptions) *bool { return v.NonCa }).(pulumi.BoolPtrOutput)
}

// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
// the max path length will be omitted from the CA certificate.
func (o CertificateConfigX509ConfigCaOptionsOutput) ZeroMaxIssuerPathLength() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigCaOptions) *bool { return v.ZeroMaxIssuerPathLength }).(pulumi.BoolPtrOutput)
}

type CertificateConfigX509ConfigCaOptionsPtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigCaOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509ConfigCaOptions)(nil)).Elem()
}

func (o CertificateConfigX509ConfigCaOptionsPtrOutput) ToCertificateConfigX509ConfigCaOptionsPtrOutput() CertificateConfigX509ConfigCaOptionsPtrOutput {
	return o
}

func (o CertificateConfigX509ConfigCaOptionsPtrOutput) ToCertificateConfigX509ConfigCaOptionsPtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigCaOptionsPtrOutput {
	return o
}

func (o CertificateConfigX509ConfigCaOptionsPtrOutput) Elem() CertificateConfigX509ConfigCaOptionsOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigCaOptions) CertificateConfigX509ConfigCaOptions {
		if v != nil {
			return *v
		}
		var ret CertificateConfigX509ConfigCaOptions
		return ret
	}).(CertificateConfigX509ConfigCaOptionsOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to true.
func (o CertificateConfigX509ConfigCaOptionsPtrOutput) IsCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigCaOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsCa
	}).(pulumi.BoolPtrOutput)
}

// Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
// subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
func (o CertificateConfigX509ConfigCaOptionsPtrOutput) MaxIssuerPathLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigCaOptions) *int {
		if v == nil {
			return nil
		}
		return v.MaxIssuerPathLength
	}).(pulumi.IntPtrOutput)
}

// When true, the "CA" in Basic Constraints extension will be set to false.
// If both `isCa` and `nonCa` are unset, the extension will be omitted from the CA certificate.
func (o CertificateConfigX509ConfigCaOptionsPtrOutput) NonCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigCaOptions) *bool {
		if v == nil {
			return nil
		}
		return v.NonCa
	}).(pulumi.BoolPtrOutput)
}

// When true, the "path length constraint" in Basic Constraints extension will be set to 0.
// if both `maxIssuerPathLength` and `zeroMaxIssuerPathLength` are unset,
// the max path length will be omitted from the CA certificate.
func (o CertificateConfigX509ConfigCaOptionsPtrOutput) ZeroMaxIssuerPathLength() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigCaOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ZeroMaxIssuerPathLength
	}).(pulumi.BoolPtrOutput)
}

type CertificateConfigX509ConfigKeyUsage struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsage CertificateConfigX509ConfigKeyUsageBaseKeyUsage `pulumi:"baseKeyUsage"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsage CertificateConfigX509ConfigKeyUsageExtendedKeyUsage `pulumi:"extendedKeyUsage"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages []CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage `pulumi:"unknownExtendedKeyUsages"`
}

// CertificateConfigX509ConfigKeyUsageInput is an input type that accepts CertificateConfigX509ConfigKeyUsageArgs and CertificateConfigX509ConfigKeyUsageOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigKeyUsageInput` via:
//
//          CertificateConfigX509ConfigKeyUsageArgs{...}
type CertificateConfigX509ConfigKeyUsageInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigKeyUsageOutput() CertificateConfigX509ConfigKeyUsageOutput
	ToCertificateConfigX509ConfigKeyUsageOutputWithContext(context.Context) CertificateConfigX509ConfigKeyUsageOutput
}

type CertificateConfigX509ConfigKeyUsageArgs struct {
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	BaseKeyUsage CertificateConfigX509ConfigKeyUsageBaseKeyUsageInput `pulumi:"baseKeyUsage"`
	// Describes high-level ways in which a key may be used.
	// Structure is documented below.
	ExtendedKeyUsage CertificateConfigX509ConfigKeyUsageExtendedKeyUsageInput `pulumi:"extendedKeyUsage"`
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	// Structure is documented below.
	UnknownExtendedKeyUsages CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput `pulumi:"unknownExtendedKeyUsages"`
}

func (CertificateConfigX509ConfigKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (i CertificateConfigX509ConfigKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageOutput() CertificateConfigX509ConfigKeyUsageOutput {
	return i.ToCertificateConfigX509ConfigKeyUsageOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageOutput)
}

func (i CertificateConfigX509ConfigKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsagePtrOutput {
	return i.ToCertificateConfigX509ConfigKeyUsagePtrOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageOutput).ToCertificateConfigX509ConfigKeyUsagePtrOutputWithContext(ctx)
}

// CertificateConfigX509ConfigKeyUsagePtrInput is an input type that accepts CertificateConfigX509ConfigKeyUsageArgs, CertificateConfigX509ConfigKeyUsagePtr and CertificateConfigX509ConfigKeyUsagePtrOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigKeyUsagePtrInput` via:
//
//          CertificateConfigX509ConfigKeyUsageArgs{...}
//
//  or:
//
//          nil
type CertificateConfigX509ConfigKeyUsagePtrInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsagePtrOutput
	ToCertificateConfigX509ConfigKeyUsagePtrOutputWithContext(context.Context) CertificateConfigX509ConfigKeyUsagePtrOutput
}

type certificateConfigX509ConfigKeyUsagePtrType CertificateConfigX509ConfigKeyUsageArgs

func CertificateConfigX509ConfigKeyUsagePtr(v *CertificateConfigX509ConfigKeyUsageArgs) CertificateConfigX509ConfigKeyUsagePtrInput {
	return (*certificateConfigX509ConfigKeyUsagePtrType)(v)
}

func (*certificateConfigX509ConfigKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (i *certificateConfigX509ConfigKeyUsagePtrType) ToCertificateConfigX509ConfigKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsagePtrOutput {
	return i.ToCertificateConfigX509ConfigKeyUsagePtrOutputWithContext(context.Background())
}

func (i *certificateConfigX509ConfigKeyUsagePtrType) ToCertificateConfigX509ConfigKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsagePtrOutput)
}

type CertificateConfigX509ConfigKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (o CertificateConfigX509ConfigKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageOutput() CertificateConfigX509ConfigKeyUsageOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsagePtrOutput {
	return o.ToCertificateConfigX509ConfigKeyUsagePtrOutputWithContext(context.Background())
}

func (o CertificateConfigX509ConfigKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfigX509ConfigKeyUsage) *CertificateConfigX509ConfigKeyUsage {
		return &v
	}).(CertificateConfigX509ConfigKeyUsagePtrOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CertificateConfigX509ConfigKeyUsageOutput) BaseKeyUsage() CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsage) CertificateConfigX509ConfigKeyUsageBaseKeyUsage {
		return v.BaseKeyUsage
	}).(CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CertificateConfigX509ConfigKeyUsageOutput) ExtendedKeyUsage() CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsage) CertificateConfigX509ConfigKeyUsageExtendedKeyUsage {
		return v.ExtendedKeyUsage
	}).(CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput)
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
// Structure is documented below.
func (o CertificateConfigX509ConfigKeyUsageOutput) UnknownExtendedKeyUsages() CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsage) []CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage {
		return v.UnknownExtendedKeyUsages
	}).(CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateConfigX509ConfigKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (o CertificateConfigX509ConfigKeyUsagePtrOutput) ToCertificateConfigX509ConfigKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsagePtrOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsagePtrOutput) ToCertificateConfigX509ConfigKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsagePtrOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsagePtrOutput) Elem() CertificateConfigX509ConfigKeyUsageOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsage) CertificateConfigX509ConfigKeyUsage {
		if v != nil {
			return *v
		}
		var ret CertificateConfigX509ConfigKeyUsage
		return ret
	}).(CertificateConfigX509ConfigKeyUsageOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CertificateConfigX509ConfigKeyUsagePtrOutput) BaseKeyUsage() CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsage) *CertificateConfigX509ConfigKeyUsageBaseKeyUsage {
		if v == nil {
			return nil
		}
		return &v.BaseKeyUsage
	}).(CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput)
}

// Describes high-level ways in which a key may be used.
// Structure is documented below.
func (o CertificateConfigX509ConfigKeyUsagePtrOutput) ExtendedKeyUsage() CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsage) *CertificateConfigX509ConfigKeyUsageExtendedKeyUsage {
		if v == nil {
			return nil
		}
		return &v.ExtendedKeyUsage
	}).(CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput)
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
// Structure is documented below.
func (o CertificateConfigX509ConfigKeyUsagePtrOutput) UnknownExtendedKeyUsages() CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsage) []CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage {
		if v == nil {
			return nil
		}
		return v.UnknownExtendedKeyUsages
	}).(CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateConfigX509ConfigKeyUsageBaseKeyUsage struct {
	// The key may be used to sign certificates.
	CertSign *bool `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment *bool `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign *bool `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment *bool `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly *bool `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature *bool `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly *bool `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement *bool `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment *bool `pulumi:"keyEncipherment"`
}

// CertificateConfigX509ConfigKeyUsageBaseKeyUsageInput is an input type that accepts CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs and CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigKeyUsageBaseKeyUsageInput` via:
//
//          CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs{...}
type CertificateConfigX509ConfigKeyUsageBaseKeyUsageInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput() CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput
	ToCertificateConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(context.Context) CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput
}

type CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs struct {
	// The key may be used to sign certificates.
	CertSign pulumi.BoolPtrInput `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment pulumi.BoolPtrInput `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign pulumi.BoolPtrInput `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment pulumi.BoolPtrInput `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly pulumi.BoolPtrInput `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature pulumi.BoolPtrInput `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly pulumi.BoolPtrInput `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement pulumi.BoolPtrInput `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment pulumi.BoolPtrInput `pulumi:"keyEncipherment"`
}

func (CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput() CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return i.ToCertificateConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput)
}

func (i CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return i.ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput).ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx)
}

// CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrInput is an input type that accepts CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs, CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtr and CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrInput` via:
//
//          CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs{...}
//
//  or:
//
//          nil
type CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput
	ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(context.Context) CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput
}

type certificateConfigX509ConfigKeyUsageBaseKeyUsagePtrType CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs

func CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtr(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs) CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrInput {
	return (*certificateConfigX509ConfigKeyUsageBaseKeyUsagePtrType)(v)
}

func (*certificateConfigX509ConfigKeyUsageBaseKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i *certificateConfigX509ConfigKeyUsageBaseKeyUsagePtrType) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return i.ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (i *certificateConfigX509ConfigKeyUsageBaseKeyUsagePtrType) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput)
}

type CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput() CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o.ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *CertificateConfigX509ConfigKeyUsageBaseKeyUsage {
		return &v
	}).(CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput)
}

// The key may be used to sign certificates.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.CertSign }).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.ContentCommitment }).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.CrlSign }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.DataEncipherment }).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.DecipherOnly }).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.DigitalSignature }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.EncipherOnly }).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.KeyAgreement }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool { return v.KeyEncipherment }).(pulumi.BoolPtrOutput)
}

type CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) ToCertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) Elem() CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) CertificateConfigX509ConfigKeyUsageBaseKeyUsage {
		if v != nil {
			return *v
		}
		var ret CertificateConfigX509ConfigKeyUsageBaseKeyUsage
		return ret
	}).(CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput)
}

// The key may be used to sign certificates.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CertSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ContentCommitment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CrlSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DataEncipherment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DecipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DigitalSignature
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.EncipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.KeyAgreement
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.KeyEncipherment
	}).(pulumi.BoolPtrOutput)
}

type CertificateConfigX509ConfigKeyUsageExtendedKeyUsage struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth *bool `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning *bool `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection *bool `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning *bool `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth *bool `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping *bool `pulumi:"timeStamping"`
}

// CertificateConfigX509ConfigKeyUsageExtendedKeyUsageInput is an input type that accepts CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs and CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigKeyUsageExtendedKeyUsageInput` via:
//
//          CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs{...}
type CertificateConfigX509ConfigKeyUsageExtendedKeyUsageInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput() CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput
	ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(context.Context) CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput
}

type CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth pulumi.BoolPtrInput `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning pulumi.BoolPtrInput `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection pulumi.BoolPtrInput `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning pulumi.BoolPtrInput `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth pulumi.BoolPtrInput `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping pulumi.BoolPtrInput `pulumi:"timeStamping"`
}

func (CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput() CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return i.ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput)
}

func (i CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return i.ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput).ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx)
}

// CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput is an input type that accepts CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs, CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtr and CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput` via:
//
//          CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs{...}
//
//  or:
//
//          nil
type CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput
	ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Context) CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput
}

type certificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrType CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs

func CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtr(v *CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs) CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput {
	return (*certificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrType)(v)
}

func (*certificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i *certificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrType) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return i.ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (i *certificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrType) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput)
}

type CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput() CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o.ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *CertificateConfigX509ConfigKeyUsageExtendedKeyUsage {
		return &v
	}).(CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.ClientAuth }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.CodeSigning }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.EmailProtection }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.OcspSigning }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.ServerAuth }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool { return v.TimeStamping }).(pulumi.BoolPtrOutput)
}

type CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput() CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ToCertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) Elem() CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) CertificateConfigX509ConfigKeyUsageExtendedKeyUsage {
		if v != nil {
			return *v
		}
		var ret CertificateConfigX509ConfigKeyUsageExtendedKeyUsage
		return ret
	}).(CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ClientAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CodeSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.EmailProtection
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.OcspSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ServerAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateConfigX509ConfigKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.TimeStamping
	}).(pulumi.BoolPtrOutput)
}

type CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput is an input type that accepts CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs and CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput` via:
//
//          CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs{...}
type CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput() CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput
	ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Context) CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput
}

type CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput() CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return i.ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs) ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput)
}

// CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput is an input type that accepts CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray and CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput` via:
//
//          CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray{ CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs{...} }
type CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput
	ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Context) CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput
}

type CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray []CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput

func (CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray) ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return i.ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray) ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput() CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage {
		return vs[0].([]CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)[vs[1].(int)]
	}).(CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput)
}

type CertificateConfigX509ConfigPolicyId struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateConfigX509ConfigPolicyIdInput is an input type that accepts CertificateConfigX509ConfigPolicyIdArgs and CertificateConfigX509ConfigPolicyIdOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigPolicyIdInput` via:
//
//          CertificateConfigX509ConfigPolicyIdArgs{...}
type CertificateConfigX509ConfigPolicyIdInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigPolicyIdOutput() CertificateConfigX509ConfigPolicyIdOutput
	ToCertificateConfigX509ConfigPolicyIdOutputWithContext(context.Context) CertificateConfigX509ConfigPolicyIdOutput
}

type CertificateConfigX509ConfigPolicyIdArgs struct {
	// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateConfigX509ConfigPolicyIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigPolicyId)(nil)).Elem()
}

func (i CertificateConfigX509ConfigPolicyIdArgs) ToCertificateConfigX509ConfigPolicyIdOutput() CertificateConfigX509ConfigPolicyIdOutput {
	return i.ToCertificateConfigX509ConfigPolicyIdOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigPolicyIdArgs) ToCertificateConfigX509ConfigPolicyIdOutputWithContext(ctx context.Context) CertificateConfigX509ConfigPolicyIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigPolicyIdOutput)
}

// CertificateConfigX509ConfigPolicyIdArrayInput is an input type that accepts CertificateConfigX509ConfigPolicyIdArray and CertificateConfigX509ConfigPolicyIdArrayOutput values.
// You can construct a concrete instance of `CertificateConfigX509ConfigPolicyIdArrayInput` via:
//
//          CertificateConfigX509ConfigPolicyIdArray{ CertificateConfigX509ConfigPolicyIdArgs{...} }
type CertificateConfigX509ConfigPolicyIdArrayInput interface {
	pulumi.Input

	ToCertificateConfigX509ConfigPolicyIdArrayOutput() CertificateConfigX509ConfigPolicyIdArrayOutput
	ToCertificateConfigX509ConfigPolicyIdArrayOutputWithContext(context.Context) CertificateConfigX509ConfigPolicyIdArrayOutput
}

type CertificateConfigX509ConfigPolicyIdArray []CertificateConfigX509ConfigPolicyIdInput

func (CertificateConfigX509ConfigPolicyIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigX509ConfigPolicyId)(nil)).Elem()
}

func (i CertificateConfigX509ConfigPolicyIdArray) ToCertificateConfigX509ConfigPolicyIdArrayOutput() CertificateConfigX509ConfigPolicyIdArrayOutput {
	return i.ToCertificateConfigX509ConfigPolicyIdArrayOutputWithContext(context.Background())
}

func (i CertificateConfigX509ConfigPolicyIdArray) ToCertificateConfigX509ConfigPolicyIdArrayOutputWithContext(ctx context.Context) CertificateConfigX509ConfigPolicyIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigX509ConfigPolicyIdArrayOutput)
}

type CertificateConfigX509ConfigPolicyIdOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigPolicyIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigX509ConfigPolicyId)(nil)).Elem()
}

func (o CertificateConfigX509ConfigPolicyIdOutput) ToCertificateConfigX509ConfigPolicyIdOutput() CertificateConfigX509ConfigPolicyIdOutput {
	return o
}

func (o CertificateConfigX509ConfigPolicyIdOutput) ToCertificateConfigX509ConfigPolicyIdOutputWithContext(ctx context.Context) CertificateConfigX509ConfigPolicyIdOutput {
	return o
}

// An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
func (o CertificateConfigX509ConfigPolicyIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateConfigX509ConfigPolicyId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type CertificateConfigX509ConfigPolicyIdArrayOutput struct{ *pulumi.OutputState }

func (CertificateConfigX509ConfigPolicyIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigX509ConfigPolicyId)(nil)).Elem()
}

func (o CertificateConfigX509ConfigPolicyIdArrayOutput) ToCertificateConfigX509ConfigPolicyIdArrayOutput() CertificateConfigX509ConfigPolicyIdArrayOutput {
	return o
}

func (o CertificateConfigX509ConfigPolicyIdArrayOutput) ToCertificateConfigX509ConfigPolicyIdArrayOutputWithContext(ctx context.Context) CertificateConfigX509ConfigPolicyIdArrayOutput {
	return o
}

func (o CertificateConfigX509ConfigPolicyIdArrayOutput) Index(i pulumi.IntInput) CertificateConfigX509ConfigPolicyIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateConfigX509ConfigPolicyId {
		return vs[0].([]CertificateConfigX509ConfigPolicyId)[vs[1].(int)]
	}).(CertificateConfigX509ConfigPolicyIdOutput)
}

type CertificateRevocationDetail struct {
	RevocationState *string `pulumi:"revocationState"`
	RevocationTime  *string `pulumi:"revocationTime"`
}

// CertificateRevocationDetailInput is an input type that accepts CertificateRevocationDetailArgs and CertificateRevocationDetailOutput values.
// You can construct a concrete instance of `CertificateRevocationDetailInput` via:
//
//          CertificateRevocationDetailArgs{...}
type CertificateRevocationDetailInput interface {
	pulumi.Input

	ToCertificateRevocationDetailOutput() CertificateRevocationDetailOutput
	ToCertificateRevocationDetailOutputWithContext(context.Context) CertificateRevocationDetailOutput
}

type CertificateRevocationDetailArgs struct {
	RevocationState pulumi.StringPtrInput `pulumi:"revocationState"`
	RevocationTime  pulumi.StringPtrInput `pulumi:"revocationTime"`
}

func (CertificateRevocationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRevocationDetail)(nil)).Elem()
}

func (i CertificateRevocationDetailArgs) ToCertificateRevocationDetailOutput() CertificateRevocationDetailOutput {
	return i.ToCertificateRevocationDetailOutputWithContext(context.Background())
}

func (i CertificateRevocationDetailArgs) ToCertificateRevocationDetailOutputWithContext(ctx context.Context) CertificateRevocationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRevocationDetailOutput)
}

// CertificateRevocationDetailArrayInput is an input type that accepts CertificateRevocationDetailArray and CertificateRevocationDetailArrayOutput values.
// You can construct a concrete instance of `CertificateRevocationDetailArrayInput` via:
//
//          CertificateRevocationDetailArray{ CertificateRevocationDetailArgs{...} }
type CertificateRevocationDetailArrayInput interface {
	pulumi.Input

	ToCertificateRevocationDetailArrayOutput() CertificateRevocationDetailArrayOutput
	ToCertificateRevocationDetailArrayOutputWithContext(context.Context) CertificateRevocationDetailArrayOutput
}

type CertificateRevocationDetailArray []CertificateRevocationDetailInput

func (CertificateRevocationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateRevocationDetail)(nil)).Elem()
}

func (i CertificateRevocationDetailArray) ToCertificateRevocationDetailArrayOutput() CertificateRevocationDetailArrayOutput {
	return i.ToCertificateRevocationDetailArrayOutputWithContext(context.Background())
}

func (i CertificateRevocationDetailArray) ToCertificateRevocationDetailArrayOutputWithContext(ctx context.Context) CertificateRevocationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateRevocationDetailArrayOutput)
}

type CertificateRevocationDetailOutput struct{ *pulumi.OutputState }

func (CertificateRevocationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateRevocationDetail)(nil)).Elem()
}

func (o CertificateRevocationDetailOutput) ToCertificateRevocationDetailOutput() CertificateRevocationDetailOutput {
	return o
}

func (o CertificateRevocationDetailOutput) ToCertificateRevocationDetailOutputWithContext(ctx context.Context) CertificateRevocationDetailOutput {
	return o
}

func (o CertificateRevocationDetailOutput) RevocationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRevocationDetail) *string { return v.RevocationState }).(pulumi.StringPtrOutput)
}

func (o CertificateRevocationDetailOutput) RevocationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateRevocationDetail) *string { return v.RevocationTime }).(pulumi.StringPtrOutput)
}

type CertificateRevocationDetailArrayOutput struct{ *pulumi.OutputState }

func (CertificateRevocationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateRevocationDetail)(nil)).Elem()
}

func (o CertificateRevocationDetailArrayOutput) ToCertificateRevocationDetailArrayOutput() CertificateRevocationDetailArrayOutput {
	return o
}

func (o CertificateRevocationDetailArrayOutput) ToCertificateRevocationDetailArrayOutputWithContext(ctx context.Context) CertificateRevocationDetailArrayOutput {
	return o
}

func (o CertificateRevocationDetailArrayOutput) Index(i pulumi.IntInput) CertificateRevocationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateRevocationDetail {
		return vs[0].([]CertificateRevocationDetail)[vs[1].(int)]
	}).(CertificateRevocationDetailOutput)
}

type CertificateTemplateIamBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// CertificateTemplateIamBindingConditionInput is an input type that accepts CertificateTemplateIamBindingConditionArgs and CertificateTemplateIamBindingConditionOutput values.
// You can construct a concrete instance of `CertificateTemplateIamBindingConditionInput` via:
//
//          CertificateTemplateIamBindingConditionArgs{...}
type CertificateTemplateIamBindingConditionInput interface {
	pulumi.Input

	ToCertificateTemplateIamBindingConditionOutput() CertificateTemplateIamBindingConditionOutput
	ToCertificateTemplateIamBindingConditionOutputWithContext(context.Context) CertificateTemplateIamBindingConditionOutput
}

type CertificateTemplateIamBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (CertificateTemplateIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplateIamBindingCondition)(nil)).Elem()
}

func (i CertificateTemplateIamBindingConditionArgs) ToCertificateTemplateIamBindingConditionOutput() CertificateTemplateIamBindingConditionOutput {
	return i.ToCertificateTemplateIamBindingConditionOutputWithContext(context.Background())
}

func (i CertificateTemplateIamBindingConditionArgs) ToCertificateTemplateIamBindingConditionOutputWithContext(ctx context.Context) CertificateTemplateIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIamBindingConditionOutput)
}

func (i CertificateTemplateIamBindingConditionArgs) ToCertificateTemplateIamBindingConditionPtrOutput() CertificateTemplateIamBindingConditionPtrOutput {
	return i.ToCertificateTemplateIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i CertificateTemplateIamBindingConditionArgs) ToCertificateTemplateIamBindingConditionPtrOutputWithContext(ctx context.Context) CertificateTemplateIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIamBindingConditionOutput).ToCertificateTemplateIamBindingConditionPtrOutputWithContext(ctx)
}

// CertificateTemplateIamBindingConditionPtrInput is an input type that accepts CertificateTemplateIamBindingConditionArgs, CertificateTemplateIamBindingConditionPtr and CertificateTemplateIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `CertificateTemplateIamBindingConditionPtrInput` via:
//
//          CertificateTemplateIamBindingConditionArgs{...}
//
//  or:
//
//          nil
type CertificateTemplateIamBindingConditionPtrInput interface {
	pulumi.Input

	ToCertificateTemplateIamBindingConditionPtrOutput() CertificateTemplateIamBindingConditionPtrOutput
	ToCertificateTemplateIamBindingConditionPtrOutputWithContext(context.Context) CertificateTemplateIamBindingConditionPtrOutput
}

type certificateTemplateIamBindingConditionPtrType CertificateTemplateIamBindingConditionArgs

func CertificateTemplateIamBindingConditionPtr(v *CertificateTemplateIamBindingConditionArgs) CertificateTemplateIamBindingConditionPtrInput {
	return (*certificateTemplateIamBindingConditionPtrType)(v)
}

func (*certificateTemplateIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplateIamBindingCondition)(nil)).Elem()
}

func (i *certificateTemplateIamBindingConditionPtrType) ToCertificateTemplateIamBindingConditionPtrOutput() CertificateTemplateIamBindingConditionPtrOutput {
	return i.ToCertificateTemplateIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *certificateTemplateIamBindingConditionPtrType) ToCertificateTemplateIamBindingConditionPtrOutputWithContext(ctx context.Context) CertificateTemplateIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIamBindingConditionPtrOutput)
}

type CertificateTemplateIamBindingConditionOutput struct{ *pulumi.OutputState }

func (CertificateTemplateIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplateIamBindingCondition)(nil)).Elem()
}

func (o CertificateTemplateIamBindingConditionOutput) ToCertificateTemplateIamBindingConditionOutput() CertificateTemplateIamBindingConditionOutput {
	return o
}

func (o CertificateTemplateIamBindingConditionOutput) ToCertificateTemplateIamBindingConditionOutputWithContext(ctx context.Context) CertificateTemplateIamBindingConditionOutput {
	return o
}

func (o CertificateTemplateIamBindingConditionOutput) ToCertificateTemplateIamBindingConditionPtrOutput() CertificateTemplateIamBindingConditionPtrOutput {
	return o.ToCertificateTemplateIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o CertificateTemplateIamBindingConditionOutput) ToCertificateTemplateIamBindingConditionPtrOutputWithContext(ctx context.Context) CertificateTemplateIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplateIamBindingCondition) *CertificateTemplateIamBindingCondition {
		return &v
	}).(CertificateTemplateIamBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CertificateTemplateIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateTemplateIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CertificateTemplateIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateTemplateIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o CertificateTemplateIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateTemplateIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type CertificateTemplateIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplateIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplateIamBindingCondition)(nil)).Elem()
}

func (o CertificateTemplateIamBindingConditionPtrOutput) ToCertificateTemplateIamBindingConditionPtrOutput() CertificateTemplateIamBindingConditionPtrOutput {
	return o
}

func (o CertificateTemplateIamBindingConditionPtrOutput) ToCertificateTemplateIamBindingConditionPtrOutputWithContext(ctx context.Context) CertificateTemplateIamBindingConditionPtrOutput {
	return o
}

func (o CertificateTemplateIamBindingConditionPtrOutput) Elem() CertificateTemplateIamBindingConditionOutput {
	return o.ApplyT(func(v *CertificateTemplateIamBindingCondition) CertificateTemplateIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret CertificateTemplateIamBindingCondition
		return ret
	}).(CertificateTemplateIamBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CertificateTemplateIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CertificateTemplateIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o CertificateTemplateIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type CertificateTemplateIamMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// CertificateTemplateIamMemberConditionInput is an input type that accepts CertificateTemplateIamMemberConditionArgs and CertificateTemplateIamMemberConditionOutput values.
// You can construct a concrete instance of `CertificateTemplateIamMemberConditionInput` via:
//
//          CertificateTemplateIamMemberConditionArgs{...}
type CertificateTemplateIamMemberConditionInput interface {
	pulumi.Input

	ToCertificateTemplateIamMemberConditionOutput() CertificateTemplateIamMemberConditionOutput
	ToCertificateTemplateIamMemberConditionOutputWithContext(context.Context) CertificateTemplateIamMemberConditionOutput
}

type CertificateTemplateIamMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (CertificateTemplateIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplateIamMemberCondition)(nil)).Elem()
}

func (i CertificateTemplateIamMemberConditionArgs) ToCertificateTemplateIamMemberConditionOutput() CertificateTemplateIamMemberConditionOutput {
	return i.ToCertificateTemplateIamMemberConditionOutputWithContext(context.Background())
}

func (i CertificateTemplateIamMemberConditionArgs) ToCertificateTemplateIamMemberConditionOutputWithContext(ctx context.Context) CertificateTemplateIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIamMemberConditionOutput)
}

func (i CertificateTemplateIamMemberConditionArgs) ToCertificateTemplateIamMemberConditionPtrOutput() CertificateTemplateIamMemberConditionPtrOutput {
	return i.ToCertificateTemplateIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i CertificateTemplateIamMemberConditionArgs) ToCertificateTemplateIamMemberConditionPtrOutputWithContext(ctx context.Context) CertificateTemplateIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIamMemberConditionOutput).ToCertificateTemplateIamMemberConditionPtrOutputWithContext(ctx)
}

// CertificateTemplateIamMemberConditionPtrInput is an input type that accepts CertificateTemplateIamMemberConditionArgs, CertificateTemplateIamMemberConditionPtr and CertificateTemplateIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `CertificateTemplateIamMemberConditionPtrInput` via:
//
//          CertificateTemplateIamMemberConditionArgs{...}
//
//  or:
//
//          nil
type CertificateTemplateIamMemberConditionPtrInput interface {
	pulumi.Input

	ToCertificateTemplateIamMemberConditionPtrOutput() CertificateTemplateIamMemberConditionPtrOutput
	ToCertificateTemplateIamMemberConditionPtrOutputWithContext(context.Context) CertificateTemplateIamMemberConditionPtrOutput
}

type certificateTemplateIamMemberConditionPtrType CertificateTemplateIamMemberConditionArgs

func CertificateTemplateIamMemberConditionPtr(v *CertificateTemplateIamMemberConditionArgs) CertificateTemplateIamMemberConditionPtrInput {
	return (*certificateTemplateIamMemberConditionPtrType)(v)
}

func (*certificateTemplateIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplateIamMemberCondition)(nil)).Elem()
}

func (i *certificateTemplateIamMemberConditionPtrType) ToCertificateTemplateIamMemberConditionPtrOutput() CertificateTemplateIamMemberConditionPtrOutput {
	return i.ToCertificateTemplateIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *certificateTemplateIamMemberConditionPtrType) ToCertificateTemplateIamMemberConditionPtrOutputWithContext(ctx context.Context) CertificateTemplateIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIamMemberConditionPtrOutput)
}

type CertificateTemplateIamMemberConditionOutput struct{ *pulumi.OutputState }

func (CertificateTemplateIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplateIamMemberCondition)(nil)).Elem()
}

func (o CertificateTemplateIamMemberConditionOutput) ToCertificateTemplateIamMemberConditionOutput() CertificateTemplateIamMemberConditionOutput {
	return o
}

func (o CertificateTemplateIamMemberConditionOutput) ToCertificateTemplateIamMemberConditionOutputWithContext(ctx context.Context) CertificateTemplateIamMemberConditionOutput {
	return o
}

func (o CertificateTemplateIamMemberConditionOutput) ToCertificateTemplateIamMemberConditionPtrOutput() CertificateTemplateIamMemberConditionPtrOutput {
	return o.ToCertificateTemplateIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o CertificateTemplateIamMemberConditionOutput) ToCertificateTemplateIamMemberConditionPtrOutputWithContext(ctx context.Context) CertificateTemplateIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplateIamMemberCondition) *CertificateTemplateIamMemberCondition {
		return &v
	}).(CertificateTemplateIamMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CertificateTemplateIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateTemplateIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CertificateTemplateIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateTemplateIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o CertificateTemplateIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateTemplateIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type CertificateTemplateIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplateIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplateIamMemberCondition)(nil)).Elem()
}

func (o CertificateTemplateIamMemberConditionPtrOutput) ToCertificateTemplateIamMemberConditionPtrOutput() CertificateTemplateIamMemberConditionPtrOutput {
	return o
}

func (o CertificateTemplateIamMemberConditionPtrOutput) ToCertificateTemplateIamMemberConditionPtrOutputWithContext(ctx context.Context) CertificateTemplateIamMemberConditionPtrOutput {
	return o
}

func (o CertificateTemplateIamMemberConditionPtrOutput) Elem() CertificateTemplateIamMemberConditionOutput {
	return o.ApplyT(func(v *CertificateTemplateIamMemberCondition) CertificateTemplateIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret CertificateTemplateIamMemberCondition
		return ret
	}).(CertificateTemplateIamMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CertificateTemplateIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CertificateTemplateIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o CertificateTemplateIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type CertificateTemplateIdentityConstraints struct {
	// Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded.
	AllowSubjectAltNamesPassthrough bool `pulumi:"allowSubjectAltNamesPassthrough"`
	// Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded.
	AllowSubjectPassthrough bool `pulumi:"allowSubjectPassthrough"`
	// Optional. A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a certificate is signed. To see the full allowed syntax and some examples, see https://cloud.google.com/certificate-authority-service/docs/using-cel
	CelExpression *CertificateTemplateIdentityConstraintsCelExpression `pulumi:"celExpression"`
}

// CertificateTemplateIdentityConstraintsInput is an input type that accepts CertificateTemplateIdentityConstraintsArgs and CertificateTemplateIdentityConstraintsOutput values.
// You can construct a concrete instance of `CertificateTemplateIdentityConstraintsInput` via:
//
//          CertificateTemplateIdentityConstraintsArgs{...}
type CertificateTemplateIdentityConstraintsInput interface {
	pulumi.Input

	ToCertificateTemplateIdentityConstraintsOutput() CertificateTemplateIdentityConstraintsOutput
	ToCertificateTemplateIdentityConstraintsOutputWithContext(context.Context) CertificateTemplateIdentityConstraintsOutput
}

type CertificateTemplateIdentityConstraintsArgs struct {
	// Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded.
	AllowSubjectAltNamesPassthrough pulumi.BoolInput `pulumi:"allowSubjectAltNamesPassthrough"`
	// Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded.
	AllowSubjectPassthrough pulumi.BoolInput `pulumi:"allowSubjectPassthrough"`
	// Optional. A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a certificate is signed. To see the full allowed syntax and some examples, see https://cloud.google.com/certificate-authority-service/docs/using-cel
	CelExpression CertificateTemplateIdentityConstraintsCelExpressionPtrInput `pulumi:"celExpression"`
}

func (CertificateTemplateIdentityConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplateIdentityConstraints)(nil)).Elem()
}

func (i CertificateTemplateIdentityConstraintsArgs) ToCertificateTemplateIdentityConstraintsOutput() CertificateTemplateIdentityConstraintsOutput {
	return i.ToCertificateTemplateIdentityConstraintsOutputWithContext(context.Background())
}

func (i CertificateTemplateIdentityConstraintsArgs) ToCertificateTemplateIdentityConstraintsOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIdentityConstraintsOutput)
}

func (i CertificateTemplateIdentityConstraintsArgs) ToCertificateTemplateIdentityConstraintsPtrOutput() CertificateTemplateIdentityConstraintsPtrOutput {
	return i.ToCertificateTemplateIdentityConstraintsPtrOutputWithContext(context.Background())
}

func (i CertificateTemplateIdentityConstraintsArgs) ToCertificateTemplateIdentityConstraintsPtrOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIdentityConstraintsOutput).ToCertificateTemplateIdentityConstraintsPtrOutputWithContext(ctx)
}

// CertificateTemplateIdentityConstraintsPtrInput is an input type that accepts CertificateTemplateIdentityConstraintsArgs, CertificateTemplateIdentityConstraintsPtr and CertificateTemplateIdentityConstraintsPtrOutput values.
// You can construct a concrete instance of `CertificateTemplateIdentityConstraintsPtrInput` via:
//
//          CertificateTemplateIdentityConstraintsArgs{...}
//
//  or:
//
//          nil
type CertificateTemplateIdentityConstraintsPtrInput interface {
	pulumi.Input

	ToCertificateTemplateIdentityConstraintsPtrOutput() CertificateTemplateIdentityConstraintsPtrOutput
	ToCertificateTemplateIdentityConstraintsPtrOutputWithContext(context.Context) CertificateTemplateIdentityConstraintsPtrOutput
}

type certificateTemplateIdentityConstraintsPtrType CertificateTemplateIdentityConstraintsArgs

func CertificateTemplateIdentityConstraintsPtr(v *CertificateTemplateIdentityConstraintsArgs) CertificateTemplateIdentityConstraintsPtrInput {
	return (*certificateTemplateIdentityConstraintsPtrType)(v)
}

func (*certificateTemplateIdentityConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplateIdentityConstraints)(nil)).Elem()
}

func (i *certificateTemplateIdentityConstraintsPtrType) ToCertificateTemplateIdentityConstraintsPtrOutput() CertificateTemplateIdentityConstraintsPtrOutput {
	return i.ToCertificateTemplateIdentityConstraintsPtrOutputWithContext(context.Background())
}

func (i *certificateTemplateIdentityConstraintsPtrType) ToCertificateTemplateIdentityConstraintsPtrOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIdentityConstraintsPtrOutput)
}

type CertificateTemplateIdentityConstraintsOutput struct{ *pulumi.OutputState }

func (CertificateTemplateIdentityConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplateIdentityConstraints)(nil)).Elem()
}

func (o CertificateTemplateIdentityConstraintsOutput) ToCertificateTemplateIdentityConstraintsOutput() CertificateTemplateIdentityConstraintsOutput {
	return o
}

func (o CertificateTemplateIdentityConstraintsOutput) ToCertificateTemplateIdentityConstraintsOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsOutput {
	return o
}

func (o CertificateTemplateIdentityConstraintsOutput) ToCertificateTemplateIdentityConstraintsPtrOutput() CertificateTemplateIdentityConstraintsPtrOutput {
	return o.ToCertificateTemplateIdentityConstraintsPtrOutputWithContext(context.Background())
}

func (o CertificateTemplateIdentityConstraintsOutput) ToCertificateTemplateIdentityConstraintsPtrOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplateIdentityConstraints) *CertificateTemplateIdentityConstraints {
		return &v
	}).(CertificateTemplateIdentityConstraintsPtrOutput)
}

// Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded.
func (o CertificateTemplateIdentityConstraintsOutput) AllowSubjectAltNamesPassthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificateTemplateIdentityConstraints) bool { return v.AllowSubjectAltNamesPassthrough }).(pulumi.BoolOutput)
}

// Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded.
func (o CertificateTemplateIdentityConstraintsOutput) AllowSubjectPassthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificateTemplateIdentityConstraints) bool { return v.AllowSubjectPassthrough }).(pulumi.BoolOutput)
}

// Optional. A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a certificate is signed. To see the full allowed syntax and some examples, see https://cloud.google.com/certificate-authority-service/docs/using-cel
func (o CertificateTemplateIdentityConstraintsOutput) CelExpression() CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return o.ApplyT(func(v CertificateTemplateIdentityConstraints) *CertificateTemplateIdentityConstraintsCelExpression {
		return v.CelExpression
	}).(CertificateTemplateIdentityConstraintsCelExpressionPtrOutput)
}

type CertificateTemplateIdentityConstraintsPtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplateIdentityConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplateIdentityConstraints)(nil)).Elem()
}

func (o CertificateTemplateIdentityConstraintsPtrOutput) ToCertificateTemplateIdentityConstraintsPtrOutput() CertificateTemplateIdentityConstraintsPtrOutput {
	return o
}

func (o CertificateTemplateIdentityConstraintsPtrOutput) ToCertificateTemplateIdentityConstraintsPtrOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsPtrOutput {
	return o
}

func (o CertificateTemplateIdentityConstraintsPtrOutput) Elem() CertificateTemplateIdentityConstraintsOutput {
	return o.ApplyT(func(v *CertificateTemplateIdentityConstraints) CertificateTemplateIdentityConstraints {
		if v != nil {
			return *v
		}
		var ret CertificateTemplateIdentityConstraints
		return ret
	}).(CertificateTemplateIdentityConstraintsOutput)
}

// Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded.
func (o CertificateTemplateIdentityConstraintsPtrOutput) AllowSubjectAltNamesPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIdentityConstraints) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowSubjectAltNamesPassthrough
	}).(pulumi.BoolPtrOutput)
}

// Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded.
func (o CertificateTemplateIdentityConstraintsPtrOutput) AllowSubjectPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIdentityConstraints) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowSubjectPassthrough
	}).(pulumi.BoolPtrOutput)
}

// Optional. A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a certificate is signed. To see the full allowed syntax and some examples, see https://cloud.google.com/certificate-authority-service/docs/using-cel
func (o CertificateTemplateIdentityConstraintsPtrOutput) CelExpression() CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIdentityConstraints) *CertificateTemplateIdentityConstraintsCelExpression {
		if v == nil {
			return nil
		}
		return v.CelExpression
	}).(CertificateTemplateIdentityConstraintsCelExpressionPtrOutput)
}

type CertificateTemplateIdentityConstraintsCelExpression struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// CertificateTemplateIdentityConstraintsCelExpressionInput is an input type that accepts CertificateTemplateIdentityConstraintsCelExpressionArgs and CertificateTemplateIdentityConstraintsCelExpressionOutput values.
// You can construct a concrete instance of `CertificateTemplateIdentityConstraintsCelExpressionInput` via:
//
//          CertificateTemplateIdentityConstraintsCelExpressionArgs{...}
type CertificateTemplateIdentityConstraintsCelExpressionInput interface {
	pulumi.Input

	ToCertificateTemplateIdentityConstraintsCelExpressionOutput() CertificateTemplateIdentityConstraintsCelExpressionOutput
	ToCertificateTemplateIdentityConstraintsCelExpressionOutputWithContext(context.Context) CertificateTemplateIdentityConstraintsCelExpressionOutput
}

type CertificateTemplateIdentityConstraintsCelExpressionArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (CertificateTemplateIdentityConstraintsCelExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplateIdentityConstraintsCelExpression)(nil)).Elem()
}

func (i CertificateTemplateIdentityConstraintsCelExpressionArgs) ToCertificateTemplateIdentityConstraintsCelExpressionOutput() CertificateTemplateIdentityConstraintsCelExpressionOutput {
	return i.ToCertificateTemplateIdentityConstraintsCelExpressionOutputWithContext(context.Background())
}

func (i CertificateTemplateIdentityConstraintsCelExpressionArgs) ToCertificateTemplateIdentityConstraintsCelExpressionOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsCelExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIdentityConstraintsCelExpressionOutput)
}

func (i CertificateTemplateIdentityConstraintsCelExpressionArgs) ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutput() CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return i.ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutputWithContext(context.Background())
}

func (i CertificateTemplateIdentityConstraintsCelExpressionArgs) ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIdentityConstraintsCelExpressionOutput).ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutputWithContext(ctx)
}

// CertificateTemplateIdentityConstraintsCelExpressionPtrInput is an input type that accepts CertificateTemplateIdentityConstraintsCelExpressionArgs, CertificateTemplateIdentityConstraintsCelExpressionPtr and CertificateTemplateIdentityConstraintsCelExpressionPtrOutput values.
// You can construct a concrete instance of `CertificateTemplateIdentityConstraintsCelExpressionPtrInput` via:
//
//          CertificateTemplateIdentityConstraintsCelExpressionArgs{...}
//
//  or:
//
//          nil
type CertificateTemplateIdentityConstraintsCelExpressionPtrInput interface {
	pulumi.Input

	ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutput() CertificateTemplateIdentityConstraintsCelExpressionPtrOutput
	ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutputWithContext(context.Context) CertificateTemplateIdentityConstraintsCelExpressionPtrOutput
}

type certificateTemplateIdentityConstraintsCelExpressionPtrType CertificateTemplateIdentityConstraintsCelExpressionArgs

func CertificateTemplateIdentityConstraintsCelExpressionPtr(v *CertificateTemplateIdentityConstraintsCelExpressionArgs) CertificateTemplateIdentityConstraintsCelExpressionPtrInput {
	return (*certificateTemplateIdentityConstraintsCelExpressionPtrType)(v)
}

func (*certificateTemplateIdentityConstraintsCelExpressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplateIdentityConstraintsCelExpression)(nil)).Elem()
}

func (i *certificateTemplateIdentityConstraintsCelExpressionPtrType) ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutput() CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return i.ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutputWithContext(context.Background())
}

func (i *certificateTemplateIdentityConstraintsCelExpressionPtrType) ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplateIdentityConstraintsCelExpressionPtrOutput)
}

type CertificateTemplateIdentityConstraintsCelExpressionOutput struct{ *pulumi.OutputState }

func (CertificateTemplateIdentityConstraintsCelExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplateIdentityConstraintsCelExpression)(nil)).Elem()
}

func (o CertificateTemplateIdentityConstraintsCelExpressionOutput) ToCertificateTemplateIdentityConstraintsCelExpressionOutput() CertificateTemplateIdentityConstraintsCelExpressionOutput {
	return o
}

func (o CertificateTemplateIdentityConstraintsCelExpressionOutput) ToCertificateTemplateIdentityConstraintsCelExpressionOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsCelExpressionOutput {
	return o
}

func (o CertificateTemplateIdentityConstraintsCelExpressionOutput) ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutput() CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return o.ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutputWithContext(context.Background())
}

func (o CertificateTemplateIdentityConstraintsCelExpressionOutput) ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplateIdentityConstraintsCelExpression) *CertificateTemplateIdentityConstraintsCelExpression {
		return &v
	}).(CertificateTemplateIdentityConstraintsCelExpressionPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CertificateTemplateIdentityConstraintsCelExpressionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateTemplateIdentityConstraintsCelExpression) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CertificateTemplateIdentityConstraintsCelExpressionOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateTemplateIdentityConstraintsCelExpression) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o CertificateTemplateIdentityConstraintsCelExpressionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateTemplateIdentityConstraintsCelExpression) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o CertificateTemplateIdentityConstraintsCelExpressionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateTemplateIdentityConstraintsCelExpression) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type CertificateTemplateIdentityConstraintsCelExpressionPtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplateIdentityConstraintsCelExpressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplateIdentityConstraintsCelExpression)(nil)).Elem()
}

func (o CertificateTemplateIdentityConstraintsCelExpressionPtrOutput) ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutput() CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return o
}

func (o CertificateTemplateIdentityConstraintsCelExpressionPtrOutput) ToCertificateTemplateIdentityConstraintsCelExpressionPtrOutputWithContext(ctx context.Context) CertificateTemplateIdentityConstraintsCelExpressionPtrOutput {
	return o
}

func (o CertificateTemplateIdentityConstraintsCelExpressionPtrOutput) Elem() CertificateTemplateIdentityConstraintsCelExpressionOutput {
	return o.ApplyT(func(v *CertificateTemplateIdentityConstraintsCelExpression) CertificateTemplateIdentityConstraintsCelExpression {
		if v != nil {
			return *v
		}
		var ret CertificateTemplateIdentityConstraintsCelExpression
		return ret
	}).(CertificateTemplateIdentityConstraintsCelExpressionOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o CertificateTemplateIdentityConstraintsCelExpressionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIdentityConstraintsCelExpression) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o CertificateTemplateIdentityConstraintsCelExpressionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIdentityConstraintsCelExpression) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o CertificateTemplateIdentityConstraintsCelExpressionPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIdentityConstraintsCelExpression) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o CertificateTemplateIdentityConstraintsCelExpressionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateTemplateIdentityConstraintsCelExpression) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type CertificateTemplatePassthroughExtensions struct {
	// Optional. Describes custom X.509 extensions.
	AdditionalExtensions []CertificateTemplatePassthroughExtensionsAdditionalExtension `pulumi:"additionalExtensions"`
	// Optional. A set of named X.509 extensions. Will be combined with additionalExtensions to determine the full set of X.509 extensions.
	KnownExtensions []string `pulumi:"knownExtensions"`
}

// CertificateTemplatePassthroughExtensionsInput is an input type that accepts CertificateTemplatePassthroughExtensionsArgs and CertificateTemplatePassthroughExtensionsOutput values.
// You can construct a concrete instance of `CertificateTemplatePassthroughExtensionsInput` via:
//
//          CertificateTemplatePassthroughExtensionsArgs{...}
type CertificateTemplatePassthroughExtensionsInput interface {
	pulumi.Input

	ToCertificateTemplatePassthroughExtensionsOutput() CertificateTemplatePassthroughExtensionsOutput
	ToCertificateTemplatePassthroughExtensionsOutputWithContext(context.Context) CertificateTemplatePassthroughExtensionsOutput
}

type CertificateTemplatePassthroughExtensionsArgs struct {
	// Optional. Describes custom X.509 extensions.
	AdditionalExtensions CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayInput `pulumi:"additionalExtensions"`
	// Optional. A set of named X.509 extensions. Will be combined with additionalExtensions to determine the full set of X.509 extensions.
	KnownExtensions pulumi.StringArrayInput `pulumi:"knownExtensions"`
}

func (CertificateTemplatePassthroughExtensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePassthroughExtensions)(nil)).Elem()
}

func (i CertificateTemplatePassthroughExtensionsArgs) ToCertificateTemplatePassthroughExtensionsOutput() CertificateTemplatePassthroughExtensionsOutput {
	return i.ToCertificateTemplatePassthroughExtensionsOutputWithContext(context.Background())
}

func (i CertificateTemplatePassthroughExtensionsArgs) ToCertificateTemplatePassthroughExtensionsOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePassthroughExtensionsOutput)
}

func (i CertificateTemplatePassthroughExtensionsArgs) ToCertificateTemplatePassthroughExtensionsPtrOutput() CertificateTemplatePassthroughExtensionsPtrOutput {
	return i.ToCertificateTemplatePassthroughExtensionsPtrOutputWithContext(context.Background())
}

func (i CertificateTemplatePassthroughExtensionsArgs) ToCertificateTemplatePassthroughExtensionsPtrOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePassthroughExtensionsOutput).ToCertificateTemplatePassthroughExtensionsPtrOutputWithContext(ctx)
}

// CertificateTemplatePassthroughExtensionsPtrInput is an input type that accepts CertificateTemplatePassthroughExtensionsArgs, CertificateTemplatePassthroughExtensionsPtr and CertificateTemplatePassthroughExtensionsPtrOutput values.
// You can construct a concrete instance of `CertificateTemplatePassthroughExtensionsPtrInput` via:
//
//          CertificateTemplatePassthroughExtensionsArgs{...}
//
//  or:
//
//          nil
type CertificateTemplatePassthroughExtensionsPtrInput interface {
	pulumi.Input

	ToCertificateTemplatePassthroughExtensionsPtrOutput() CertificateTemplatePassthroughExtensionsPtrOutput
	ToCertificateTemplatePassthroughExtensionsPtrOutputWithContext(context.Context) CertificateTemplatePassthroughExtensionsPtrOutput
}

type certificateTemplatePassthroughExtensionsPtrType CertificateTemplatePassthroughExtensionsArgs

func CertificateTemplatePassthroughExtensionsPtr(v *CertificateTemplatePassthroughExtensionsArgs) CertificateTemplatePassthroughExtensionsPtrInput {
	return (*certificateTemplatePassthroughExtensionsPtrType)(v)
}

func (*certificateTemplatePassthroughExtensionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePassthroughExtensions)(nil)).Elem()
}

func (i *certificateTemplatePassthroughExtensionsPtrType) ToCertificateTemplatePassthroughExtensionsPtrOutput() CertificateTemplatePassthroughExtensionsPtrOutput {
	return i.ToCertificateTemplatePassthroughExtensionsPtrOutputWithContext(context.Background())
}

func (i *certificateTemplatePassthroughExtensionsPtrType) ToCertificateTemplatePassthroughExtensionsPtrOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePassthroughExtensionsPtrOutput)
}

type CertificateTemplatePassthroughExtensionsOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePassthroughExtensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePassthroughExtensions)(nil)).Elem()
}

func (o CertificateTemplatePassthroughExtensionsOutput) ToCertificateTemplatePassthroughExtensionsOutput() CertificateTemplatePassthroughExtensionsOutput {
	return o
}

func (o CertificateTemplatePassthroughExtensionsOutput) ToCertificateTemplatePassthroughExtensionsOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsOutput {
	return o
}

func (o CertificateTemplatePassthroughExtensionsOutput) ToCertificateTemplatePassthroughExtensionsPtrOutput() CertificateTemplatePassthroughExtensionsPtrOutput {
	return o.ToCertificateTemplatePassthroughExtensionsPtrOutputWithContext(context.Background())
}

func (o CertificateTemplatePassthroughExtensionsOutput) ToCertificateTemplatePassthroughExtensionsPtrOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplatePassthroughExtensions) *CertificateTemplatePassthroughExtensions {
		return &v
	}).(CertificateTemplatePassthroughExtensionsPtrOutput)
}

// Optional. Describes custom X.509 extensions.
func (o CertificateTemplatePassthroughExtensionsOutput) AdditionalExtensions() CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePassthroughExtensions) []CertificateTemplatePassthroughExtensionsAdditionalExtension {
		return v.AdditionalExtensions
	}).(CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput)
}

// Optional. A set of named X.509 extensions. Will be combined with additionalExtensions to determine the full set of X.509 extensions.
func (o CertificateTemplatePassthroughExtensionsOutput) KnownExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePassthroughExtensions) []string { return v.KnownExtensions }).(pulumi.StringArrayOutput)
}

type CertificateTemplatePassthroughExtensionsPtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePassthroughExtensionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePassthroughExtensions)(nil)).Elem()
}

func (o CertificateTemplatePassthroughExtensionsPtrOutput) ToCertificateTemplatePassthroughExtensionsPtrOutput() CertificateTemplatePassthroughExtensionsPtrOutput {
	return o
}

func (o CertificateTemplatePassthroughExtensionsPtrOutput) ToCertificateTemplatePassthroughExtensionsPtrOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsPtrOutput {
	return o
}

func (o CertificateTemplatePassthroughExtensionsPtrOutput) Elem() CertificateTemplatePassthroughExtensionsOutput {
	return o.ApplyT(func(v *CertificateTemplatePassthroughExtensions) CertificateTemplatePassthroughExtensions {
		if v != nil {
			return *v
		}
		var ret CertificateTemplatePassthroughExtensions
		return ret
	}).(CertificateTemplatePassthroughExtensionsOutput)
}

// Optional. Describes custom X.509 extensions.
func (o CertificateTemplatePassthroughExtensionsPtrOutput) AdditionalExtensions() CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v *CertificateTemplatePassthroughExtensions) []CertificateTemplatePassthroughExtensionsAdditionalExtension {
		if v == nil {
			return nil
		}
		return v.AdditionalExtensions
	}).(CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput)
}

// Optional. A set of named X.509 extensions. Will be combined with additionalExtensions to determine the full set of X.509 extensions.
func (o CertificateTemplatePassthroughExtensionsPtrOutput) KnownExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateTemplatePassthroughExtensions) []string {
		if v == nil {
			return nil
		}
		return v.KnownExtensions
	}).(pulumi.StringArrayOutput)
}

type CertificateTemplatePassthroughExtensionsAdditionalExtension struct {
	// Required. The parts of an OID path. The most significant parts of the path come first.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateTemplatePassthroughExtensionsAdditionalExtensionInput is an input type that accepts CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs and CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput values.
// You can construct a concrete instance of `CertificateTemplatePassthroughExtensionsAdditionalExtensionInput` via:
//
//          CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs{...}
type CertificateTemplatePassthroughExtensionsAdditionalExtensionInput interface {
	pulumi.Input

	ToCertificateTemplatePassthroughExtensionsAdditionalExtensionOutput() CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput
	ToCertificateTemplatePassthroughExtensionsAdditionalExtensionOutputWithContext(context.Context) CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput
}

type CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs struct {
	// Required. The parts of an OID path. The most significant parts of the path come first.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePassthroughExtensionsAdditionalExtension)(nil)).Elem()
}

func (i CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs) ToCertificateTemplatePassthroughExtensionsAdditionalExtensionOutput() CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput {
	return i.ToCertificateTemplatePassthroughExtensionsAdditionalExtensionOutputWithContext(context.Background())
}

func (i CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs) ToCertificateTemplatePassthroughExtensionsAdditionalExtensionOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput)
}

// CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayInput is an input type that accepts CertificateTemplatePassthroughExtensionsAdditionalExtensionArray and CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput values.
// You can construct a concrete instance of `CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayInput` via:
//
//          CertificateTemplatePassthroughExtensionsAdditionalExtensionArray{ CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs{...} }
type CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayInput interface {
	pulumi.Input

	ToCertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput() CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput
	ToCertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutputWithContext(context.Context) CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput
}

type CertificateTemplatePassthroughExtensionsAdditionalExtensionArray []CertificateTemplatePassthroughExtensionsAdditionalExtensionInput

func (CertificateTemplatePassthroughExtensionsAdditionalExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTemplatePassthroughExtensionsAdditionalExtension)(nil)).Elem()
}

func (i CertificateTemplatePassthroughExtensionsAdditionalExtensionArray) ToCertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput() CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput {
	return i.ToCertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutputWithContext(context.Background())
}

func (i CertificateTemplatePassthroughExtensionsAdditionalExtensionArray) ToCertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput)
}

type CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePassthroughExtensionsAdditionalExtension)(nil)).Elem()
}

func (o CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput) ToCertificateTemplatePassthroughExtensionsAdditionalExtensionOutput() CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput {
	return o
}

func (o CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput) ToCertificateTemplatePassthroughExtensionsAdditionalExtensionOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput {
	return o
}

// Required. The parts of an OID path. The most significant parts of the path come first.
func (o CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePassthroughExtensionsAdditionalExtension) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTemplatePassthroughExtensionsAdditionalExtension)(nil)).Elem()
}

func (o CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput) ToCertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput() CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput {
	return o
}

func (o CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput) ToCertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutputWithContext(ctx context.Context) CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput {
	return o
}

func (o CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput) Index(i pulumi.IntInput) CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateTemplatePassthroughExtensionsAdditionalExtension {
		return vs[0].([]CertificateTemplatePassthroughExtensionsAdditionalExtension)[vs[1].(int)]
	}).(CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput)
}

type CertificateTemplatePredefinedValues struct {
	// Optional. Describes custom X.509 extensions.
	AdditionalExtensions []CertificateTemplatePredefinedValuesAdditionalExtension `pulumi:"additionalExtensions"`
	// Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the "Authority Information Access" extension in the certificate.
	AiaOcspServers []string `pulumi:"aiaOcspServers"`
	// Optional. Describes options in this X509Parameters that are relevant in a CA certificate.
	CaOptions *CertificateTemplatePredefinedValuesCaOptions `pulumi:"caOptions"`
	// Optional. Indicates the intended use for keys that correspond to a certificate.
	KeyUsage *CertificateTemplatePredefinedValuesKeyUsage `pulumi:"keyUsage"`
	// Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	PolicyIds []CertificateTemplatePredefinedValuesPolicyId `pulumi:"policyIds"`
}

// CertificateTemplatePredefinedValuesInput is an input type that accepts CertificateTemplatePredefinedValuesArgs and CertificateTemplatePredefinedValuesOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesInput` via:
//
//          CertificateTemplatePredefinedValuesArgs{...}
type CertificateTemplatePredefinedValuesInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesOutput() CertificateTemplatePredefinedValuesOutput
	ToCertificateTemplatePredefinedValuesOutputWithContext(context.Context) CertificateTemplatePredefinedValuesOutput
}

type CertificateTemplatePredefinedValuesArgs struct {
	// Optional. Describes custom X.509 extensions.
	AdditionalExtensions CertificateTemplatePredefinedValuesAdditionalExtensionArrayInput `pulumi:"additionalExtensions"`
	// Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the "Authority Information Access" extension in the certificate.
	AiaOcspServers pulumi.StringArrayInput `pulumi:"aiaOcspServers"`
	// Optional. Describes options in this X509Parameters that are relevant in a CA certificate.
	CaOptions CertificateTemplatePredefinedValuesCaOptionsPtrInput `pulumi:"caOptions"`
	// Optional. Indicates the intended use for keys that correspond to a certificate.
	KeyUsage CertificateTemplatePredefinedValuesKeyUsagePtrInput `pulumi:"keyUsage"`
	// Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
	PolicyIds CertificateTemplatePredefinedValuesPolicyIdArrayInput `pulumi:"policyIds"`
}

func (CertificateTemplatePredefinedValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValues)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesArgs) ToCertificateTemplatePredefinedValuesOutput() CertificateTemplatePredefinedValuesOutput {
	return i.ToCertificateTemplatePredefinedValuesOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesArgs) ToCertificateTemplatePredefinedValuesOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesOutput)
}

func (i CertificateTemplatePredefinedValuesArgs) ToCertificateTemplatePredefinedValuesPtrOutput() CertificateTemplatePredefinedValuesPtrOutput {
	return i.ToCertificateTemplatePredefinedValuesPtrOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesArgs) ToCertificateTemplatePredefinedValuesPtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesOutput).ToCertificateTemplatePredefinedValuesPtrOutputWithContext(ctx)
}

// CertificateTemplatePredefinedValuesPtrInput is an input type that accepts CertificateTemplatePredefinedValuesArgs, CertificateTemplatePredefinedValuesPtr and CertificateTemplatePredefinedValuesPtrOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesPtrInput` via:
//
//          CertificateTemplatePredefinedValuesArgs{...}
//
//  or:
//
//          nil
type CertificateTemplatePredefinedValuesPtrInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesPtrOutput() CertificateTemplatePredefinedValuesPtrOutput
	ToCertificateTemplatePredefinedValuesPtrOutputWithContext(context.Context) CertificateTemplatePredefinedValuesPtrOutput
}

type certificateTemplatePredefinedValuesPtrType CertificateTemplatePredefinedValuesArgs

func CertificateTemplatePredefinedValuesPtr(v *CertificateTemplatePredefinedValuesArgs) CertificateTemplatePredefinedValuesPtrInput {
	return (*certificateTemplatePredefinedValuesPtrType)(v)
}

func (*certificateTemplatePredefinedValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValues)(nil)).Elem()
}

func (i *certificateTemplatePredefinedValuesPtrType) ToCertificateTemplatePredefinedValuesPtrOutput() CertificateTemplatePredefinedValuesPtrOutput {
	return i.ToCertificateTemplatePredefinedValuesPtrOutputWithContext(context.Background())
}

func (i *certificateTemplatePredefinedValuesPtrType) ToCertificateTemplatePredefinedValuesPtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesPtrOutput)
}

type CertificateTemplatePredefinedValuesOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValues)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesOutput) ToCertificateTemplatePredefinedValuesOutput() CertificateTemplatePredefinedValuesOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesOutput) ToCertificateTemplatePredefinedValuesOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesOutput) ToCertificateTemplatePredefinedValuesPtrOutput() CertificateTemplatePredefinedValuesPtrOutput {
	return o.ToCertificateTemplatePredefinedValuesPtrOutputWithContext(context.Background())
}

func (o CertificateTemplatePredefinedValuesOutput) ToCertificateTemplatePredefinedValuesPtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplatePredefinedValues) *CertificateTemplatePredefinedValues {
		return &v
	}).(CertificateTemplatePredefinedValuesPtrOutput)
}

// Optional. Describes custom X.509 extensions.
func (o CertificateTemplatePredefinedValuesOutput) AdditionalExtensions() CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValues) []CertificateTemplatePredefinedValuesAdditionalExtension {
		return v.AdditionalExtensions
	}).(CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput)
}

// Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the "Authority Information Access" extension in the certificate.
func (o CertificateTemplatePredefinedValuesOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValues) []string { return v.AiaOcspServers }).(pulumi.StringArrayOutput)
}

// Optional. Describes options in this X509Parameters that are relevant in a CA certificate.
func (o CertificateTemplatePredefinedValuesOutput) CaOptions() CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValues) *CertificateTemplatePredefinedValuesCaOptions {
		return v.CaOptions
	}).(CertificateTemplatePredefinedValuesCaOptionsPtrOutput)
}

// Optional. Indicates the intended use for keys that correspond to a certificate.
func (o CertificateTemplatePredefinedValuesOutput) KeyUsage() CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValues) *CertificateTemplatePredefinedValuesKeyUsage {
		return v.KeyUsage
	}).(CertificateTemplatePredefinedValuesKeyUsagePtrOutput)
}

// Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
func (o CertificateTemplatePredefinedValuesOutput) PolicyIds() CertificateTemplatePredefinedValuesPolicyIdArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValues) []CertificateTemplatePredefinedValuesPolicyId {
		return v.PolicyIds
	}).(CertificateTemplatePredefinedValuesPolicyIdArrayOutput)
}

type CertificateTemplatePredefinedValuesPtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValues)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesPtrOutput) ToCertificateTemplatePredefinedValuesPtrOutput() CertificateTemplatePredefinedValuesPtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesPtrOutput) ToCertificateTemplatePredefinedValuesPtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesPtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesPtrOutput) Elem() CertificateTemplatePredefinedValuesOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValues) CertificateTemplatePredefinedValues {
		if v != nil {
			return *v
		}
		var ret CertificateTemplatePredefinedValues
		return ret
	}).(CertificateTemplatePredefinedValuesOutput)
}

// Optional. Describes custom X.509 extensions.
func (o CertificateTemplatePredefinedValuesPtrOutput) AdditionalExtensions() CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValues) []CertificateTemplatePredefinedValuesAdditionalExtension {
		if v == nil {
			return nil
		}
		return v.AdditionalExtensions
	}).(CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput)
}

// Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the "Authority Information Access" extension in the certificate.
func (o CertificateTemplatePredefinedValuesPtrOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValues) []string {
		if v == nil {
			return nil
		}
		return v.AiaOcspServers
	}).(pulumi.StringArrayOutput)
}

// Optional. Describes options in this X509Parameters that are relevant in a CA certificate.
func (o CertificateTemplatePredefinedValuesPtrOutput) CaOptions() CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValues) *CertificateTemplatePredefinedValuesCaOptions {
		if v == nil {
			return nil
		}
		return v.CaOptions
	}).(CertificateTemplatePredefinedValuesCaOptionsPtrOutput)
}

// Optional. Indicates the intended use for keys that correspond to a certificate.
func (o CertificateTemplatePredefinedValuesPtrOutput) KeyUsage() CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValues) *CertificateTemplatePredefinedValuesKeyUsage {
		if v == nil {
			return nil
		}
		return v.KeyUsage
	}).(CertificateTemplatePredefinedValuesKeyUsagePtrOutput)
}

// Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
func (o CertificateTemplatePredefinedValuesPtrOutput) PolicyIds() CertificateTemplatePredefinedValuesPolicyIdArrayOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValues) []CertificateTemplatePredefinedValuesPolicyId {
		if v == nil {
			return nil
		}
		return v.PolicyIds
	}).(CertificateTemplatePredefinedValuesPolicyIdArrayOutput)
}

type CertificateTemplatePredefinedValuesAdditionalExtension struct {
	// Optional. Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error).
	Critical *bool `pulumi:"critical"`
	// Required. The OID for this X.509 extension.
	ObjectId CertificateTemplatePredefinedValuesAdditionalExtensionObjectId `pulumi:"objectId"`
	// Required. The value of this X.509 extension.
	Value string `pulumi:"value"`
}

// CertificateTemplatePredefinedValuesAdditionalExtensionInput is an input type that accepts CertificateTemplatePredefinedValuesAdditionalExtensionArgs and CertificateTemplatePredefinedValuesAdditionalExtensionOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesAdditionalExtensionInput` via:
//
//          CertificateTemplatePredefinedValuesAdditionalExtensionArgs{...}
type CertificateTemplatePredefinedValuesAdditionalExtensionInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesAdditionalExtensionOutput() CertificateTemplatePredefinedValuesAdditionalExtensionOutput
	ToCertificateTemplatePredefinedValuesAdditionalExtensionOutputWithContext(context.Context) CertificateTemplatePredefinedValuesAdditionalExtensionOutput
}

type CertificateTemplatePredefinedValuesAdditionalExtensionArgs struct {
	// Optional. Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error).
	Critical pulumi.BoolPtrInput `pulumi:"critical"`
	// Required. The OID for this X.509 extension.
	ObjectId CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdInput `pulumi:"objectId"`
	// Required. The value of this X.509 extension.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CertificateTemplatePredefinedValuesAdditionalExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesAdditionalExtension)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesAdditionalExtensionArgs) ToCertificateTemplatePredefinedValuesAdditionalExtensionOutput() CertificateTemplatePredefinedValuesAdditionalExtensionOutput {
	return i.ToCertificateTemplatePredefinedValuesAdditionalExtensionOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesAdditionalExtensionArgs) ToCertificateTemplatePredefinedValuesAdditionalExtensionOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesAdditionalExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesAdditionalExtensionOutput)
}

// CertificateTemplatePredefinedValuesAdditionalExtensionArrayInput is an input type that accepts CertificateTemplatePredefinedValuesAdditionalExtensionArray and CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesAdditionalExtensionArrayInput` via:
//
//          CertificateTemplatePredefinedValuesAdditionalExtensionArray{ CertificateTemplatePredefinedValuesAdditionalExtensionArgs{...} }
type CertificateTemplatePredefinedValuesAdditionalExtensionArrayInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput() CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput
	ToCertificateTemplatePredefinedValuesAdditionalExtensionArrayOutputWithContext(context.Context) CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput
}

type CertificateTemplatePredefinedValuesAdditionalExtensionArray []CertificateTemplatePredefinedValuesAdditionalExtensionInput

func (CertificateTemplatePredefinedValuesAdditionalExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTemplatePredefinedValuesAdditionalExtension)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesAdditionalExtensionArray) ToCertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput() CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput {
	return i.ToCertificateTemplatePredefinedValuesAdditionalExtensionArrayOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesAdditionalExtensionArray) ToCertificateTemplatePredefinedValuesAdditionalExtensionArrayOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput)
}

type CertificateTemplatePredefinedValuesAdditionalExtensionOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesAdditionalExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesAdditionalExtension)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesAdditionalExtensionOutput) ToCertificateTemplatePredefinedValuesAdditionalExtensionOutput() CertificateTemplatePredefinedValuesAdditionalExtensionOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesAdditionalExtensionOutput) ToCertificateTemplatePredefinedValuesAdditionalExtensionOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesAdditionalExtensionOutput {
	return o
}

// Optional. Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error).
func (o CertificateTemplatePredefinedValuesAdditionalExtensionOutput) Critical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesAdditionalExtension) *bool { return v.Critical }).(pulumi.BoolPtrOutput)
}

// Required. The OID for this X.509 extension.
func (o CertificateTemplatePredefinedValuesAdditionalExtensionOutput) ObjectId() CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesAdditionalExtension) CertificateTemplatePredefinedValuesAdditionalExtensionObjectId {
		return v.ObjectId
	}).(CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput)
}

// Required. The value of this X.509 extension.
func (o CertificateTemplatePredefinedValuesAdditionalExtensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesAdditionalExtension) string { return v.Value }).(pulumi.StringOutput)
}

type CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTemplatePredefinedValuesAdditionalExtension)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput) ToCertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput() CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput) ToCertificateTemplatePredefinedValuesAdditionalExtensionArrayOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput) Index(i pulumi.IntInput) CertificateTemplatePredefinedValuesAdditionalExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateTemplatePredefinedValuesAdditionalExtension {
		return vs[0].([]CertificateTemplatePredefinedValuesAdditionalExtension)[vs[1].(int)]
	}).(CertificateTemplatePredefinedValuesAdditionalExtensionOutput)
}

type CertificateTemplatePredefinedValuesAdditionalExtensionObjectId struct {
	// Required. The parts of an OID path. The most significant parts of the path come first.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdInput is an input type that accepts CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdArgs and CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdInput` via:
//
//          CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdArgs{...}
type CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput() CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput
	ToCertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutputWithContext(context.Context) CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput
}

type CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdArgs struct {
	// Required. The parts of an OID path. The most significant parts of the path come first.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesAdditionalExtensionObjectId)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdArgs) ToCertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput() CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput {
	return i.ToCertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdArgs) ToCertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput)
}

type CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesAdditionalExtensionObjectId)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput) ToCertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput() CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput) ToCertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput {
	return o
}

// Required. The parts of an OID path. The most significant parts of the path come first.
func (o CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesAdditionalExtensionObjectId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type CertificateTemplatePredefinedValuesCaOptions struct {
	// Optional. Refers to the "CA" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate.
	IsCa *bool `pulumi:"isCa"`
	// Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate.
	MaxIssuerPathLength *int `pulumi:"maxIssuerPathLength"`
}

// CertificateTemplatePredefinedValuesCaOptionsInput is an input type that accepts CertificateTemplatePredefinedValuesCaOptionsArgs and CertificateTemplatePredefinedValuesCaOptionsOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesCaOptionsInput` via:
//
//          CertificateTemplatePredefinedValuesCaOptionsArgs{...}
type CertificateTemplatePredefinedValuesCaOptionsInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesCaOptionsOutput() CertificateTemplatePredefinedValuesCaOptionsOutput
	ToCertificateTemplatePredefinedValuesCaOptionsOutputWithContext(context.Context) CertificateTemplatePredefinedValuesCaOptionsOutput
}

type CertificateTemplatePredefinedValuesCaOptionsArgs struct {
	// Optional. Refers to the "CA" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate.
	IsCa pulumi.BoolPtrInput `pulumi:"isCa"`
	// Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate.
	MaxIssuerPathLength pulumi.IntPtrInput `pulumi:"maxIssuerPathLength"`
}

func (CertificateTemplatePredefinedValuesCaOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesCaOptions)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesCaOptionsArgs) ToCertificateTemplatePredefinedValuesCaOptionsOutput() CertificateTemplatePredefinedValuesCaOptionsOutput {
	return i.ToCertificateTemplatePredefinedValuesCaOptionsOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesCaOptionsArgs) ToCertificateTemplatePredefinedValuesCaOptionsOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesCaOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesCaOptionsOutput)
}

func (i CertificateTemplatePredefinedValuesCaOptionsArgs) ToCertificateTemplatePredefinedValuesCaOptionsPtrOutput() CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return i.ToCertificateTemplatePredefinedValuesCaOptionsPtrOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesCaOptionsArgs) ToCertificateTemplatePredefinedValuesCaOptionsPtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesCaOptionsOutput).ToCertificateTemplatePredefinedValuesCaOptionsPtrOutputWithContext(ctx)
}

// CertificateTemplatePredefinedValuesCaOptionsPtrInput is an input type that accepts CertificateTemplatePredefinedValuesCaOptionsArgs, CertificateTemplatePredefinedValuesCaOptionsPtr and CertificateTemplatePredefinedValuesCaOptionsPtrOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesCaOptionsPtrInput` via:
//
//          CertificateTemplatePredefinedValuesCaOptionsArgs{...}
//
//  or:
//
//          nil
type CertificateTemplatePredefinedValuesCaOptionsPtrInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesCaOptionsPtrOutput() CertificateTemplatePredefinedValuesCaOptionsPtrOutput
	ToCertificateTemplatePredefinedValuesCaOptionsPtrOutputWithContext(context.Context) CertificateTemplatePredefinedValuesCaOptionsPtrOutput
}

type certificateTemplatePredefinedValuesCaOptionsPtrType CertificateTemplatePredefinedValuesCaOptionsArgs

func CertificateTemplatePredefinedValuesCaOptionsPtr(v *CertificateTemplatePredefinedValuesCaOptionsArgs) CertificateTemplatePredefinedValuesCaOptionsPtrInput {
	return (*certificateTemplatePredefinedValuesCaOptionsPtrType)(v)
}

func (*certificateTemplatePredefinedValuesCaOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValuesCaOptions)(nil)).Elem()
}

func (i *certificateTemplatePredefinedValuesCaOptionsPtrType) ToCertificateTemplatePredefinedValuesCaOptionsPtrOutput() CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return i.ToCertificateTemplatePredefinedValuesCaOptionsPtrOutputWithContext(context.Background())
}

func (i *certificateTemplatePredefinedValuesCaOptionsPtrType) ToCertificateTemplatePredefinedValuesCaOptionsPtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesCaOptionsPtrOutput)
}

type CertificateTemplatePredefinedValuesCaOptionsOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesCaOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesCaOptions)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesCaOptionsOutput) ToCertificateTemplatePredefinedValuesCaOptionsOutput() CertificateTemplatePredefinedValuesCaOptionsOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesCaOptionsOutput) ToCertificateTemplatePredefinedValuesCaOptionsOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesCaOptionsOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesCaOptionsOutput) ToCertificateTemplatePredefinedValuesCaOptionsPtrOutput() CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return o.ToCertificateTemplatePredefinedValuesCaOptionsPtrOutputWithContext(context.Background())
}

func (o CertificateTemplatePredefinedValuesCaOptionsOutput) ToCertificateTemplatePredefinedValuesCaOptionsPtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplatePredefinedValuesCaOptions) *CertificateTemplatePredefinedValuesCaOptions {
		return &v
	}).(CertificateTemplatePredefinedValuesCaOptionsPtrOutput)
}

// Optional. Refers to the "CA" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate.
func (o CertificateTemplatePredefinedValuesCaOptionsOutput) IsCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesCaOptions) *bool { return v.IsCa }).(pulumi.BoolPtrOutput)
}

// Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate.
func (o CertificateTemplatePredefinedValuesCaOptionsOutput) MaxIssuerPathLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesCaOptions) *int { return v.MaxIssuerPathLength }).(pulumi.IntPtrOutput)
}

type CertificateTemplatePredefinedValuesCaOptionsPtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesCaOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValuesCaOptions)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesCaOptionsPtrOutput) ToCertificateTemplatePredefinedValuesCaOptionsPtrOutput() CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesCaOptionsPtrOutput) ToCertificateTemplatePredefinedValuesCaOptionsPtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesCaOptionsPtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesCaOptionsPtrOutput) Elem() CertificateTemplatePredefinedValuesCaOptionsOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesCaOptions) CertificateTemplatePredefinedValuesCaOptions {
		if v != nil {
			return *v
		}
		var ret CertificateTemplatePredefinedValuesCaOptions
		return ret
	}).(CertificateTemplatePredefinedValuesCaOptionsOutput)
}

// Optional. Refers to the "CA" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate.
func (o CertificateTemplatePredefinedValuesCaOptionsPtrOutput) IsCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesCaOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsCa
	}).(pulumi.BoolPtrOutput)
}

// Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate.
func (o CertificateTemplatePredefinedValuesCaOptionsPtrOutput) MaxIssuerPathLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesCaOptions) *int {
		if v == nil {
			return nil
		}
		return v.MaxIssuerPathLength
	}).(pulumi.IntPtrOutput)
}

type CertificateTemplatePredefinedValuesKeyUsage struct {
	// Describes high-level ways in which a key may be used.
	BaseKeyUsage *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage `pulumi:"baseKeyUsage"`
	// Detailed scenarios in which a key may be used.
	ExtendedKeyUsage *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage `pulumi:"extendedKeyUsage"`
	// Used to describe extended key usages that are not listed in the KeyUsage.ExtendedKeyUsageOptions message.
	UnknownExtendedKeyUsages []CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage `pulumi:"unknownExtendedKeyUsages"`
}

// CertificateTemplatePredefinedValuesKeyUsageInput is an input type that accepts CertificateTemplatePredefinedValuesKeyUsageArgs and CertificateTemplatePredefinedValuesKeyUsageOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesKeyUsageInput` via:
//
//          CertificateTemplatePredefinedValuesKeyUsageArgs{...}
type CertificateTemplatePredefinedValuesKeyUsageInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageOutput
	ToCertificateTemplatePredefinedValuesKeyUsageOutputWithContext(context.Context) CertificateTemplatePredefinedValuesKeyUsageOutput
}

type CertificateTemplatePredefinedValuesKeyUsageArgs struct {
	// Describes high-level ways in which a key may be used.
	BaseKeyUsage CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrInput `pulumi:"baseKeyUsage"`
	// Detailed scenarios in which a key may be used.
	ExtendedKeyUsage CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrInput `pulumi:"extendedKeyUsage"`
	// Used to describe extended key usages that are not listed in the KeyUsage.ExtendedKeyUsageOptions message.
	UnknownExtendedKeyUsages CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayInput `pulumi:"unknownExtendedKeyUsages"`
}

func (CertificateTemplatePredefinedValuesKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsage)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsageOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageOutput)
}

func (i CertificateTemplatePredefinedValuesKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsagePtrOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageOutput).ToCertificateTemplatePredefinedValuesKeyUsagePtrOutputWithContext(ctx)
}

// CertificateTemplatePredefinedValuesKeyUsagePtrInput is an input type that accepts CertificateTemplatePredefinedValuesKeyUsageArgs, CertificateTemplatePredefinedValuesKeyUsagePtr and CertificateTemplatePredefinedValuesKeyUsagePtrOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesKeyUsagePtrInput` via:
//
//          CertificateTemplatePredefinedValuesKeyUsageArgs{...}
//
//  or:
//
//          nil
type CertificateTemplatePredefinedValuesKeyUsagePtrInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsagePtrOutput
	ToCertificateTemplatePredefinedValuesKeyUsagePtrOutputWithContext(context.Context) CertificateTemplatePredefinedValuesKeyUsagePtrOutput
}

type certificateTemplatePredefinedValuesKeyUsagePtrType CertificateTemplatePredefinedValuesKeyUsageArgs

func CertificateTemplatePredefinedValuesKeyUsagePtr(v *CertificateTemplatePredefinedValuesKeyUsageArgs) CertificateTemplatePredefinedValuesKeyUsagePtrInput {
	return (*certificateTemplatePredefinedValuesKeyUsagePtrType)(v)
}

func (*certificateTemplatePredefinedValuesKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValuesKeyUsage)(nil)).Elem()
}

func (i *certificateTemplatePredefinedValuesKeyUsagePtrType) ToCertificateTemplatePredefinedValuesKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsagePtrOutputWithContext(context.Background())
}

func (i *certificateTemplatePredefinedValuesKeyUsagePtrType) ToCertificateTemplatePredefinedValuesKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsagePtrOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsage)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return o.ToCertificateTemplatePredefinedValuesKeyUsagePtrOutputWithContext(context.Background())
}

func (o CertificateTemplatePredefinedValuesKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplatePredefinedValuesKeyUsage) *CertificateTemplatePredefinedValuesKeyUsage {
		return &v
	}).(CertificateTemplatePredefinedValuesKeyUsagePtrOutput)
}

// Describes high-level ways in which a key may be used.
func (o CertificateTemplatePredefinedValuesKeyUsageOutput) BaseKeyUsage() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsage) *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage {
		return v.BaseKeyUsage
	}).(CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput)
}

// Detailed scenarios in which a key may be used.
func (o CertificateTemplatePredefinedValuesKeyUsageOutput) ExtendedKeyUsage() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsage) *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage {
		return v.ExtendedKeyUsage
	}).(CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput)
}

// Used to describe extended key usages that are not listed in the KeyUsage.ExtendedKeyUsageOptions message.
func (o CertificateTemplatePredefinedValuesKeyUsageOutput) UnknownExtendedKeyUsages() CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsage) []CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage {
		return v.UnknownExtendedKeyUsages
	}).(CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateTemplatePredefinedValuesKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValuesKeyUsage)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesKeyUsagePtrOutput) ToCertificateTemplatePredefinedValuesKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsagePtrOutput) ToCertificateTemplatePredefinedValuesKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsagePtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsagePtrOutput) Elem() CertificateTemplatePredefinedValuesKeyUsageOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsage) CertificateTemplatePredefinedValuesKeyUsage {
		if v != nil {
			return *v
		}
		var ret CertificateTemplatePredefinedValuesKeyUsage
		return ret
	}).(CertificateTemplatePredefinedValuesKeyUsageOutput)
}

// Describes high-level ways in which a key may be used.
func (o CertificateTemplatePredefinedValuesKeyUsagePtrOutput) BaseKeyUsage() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsage) *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage {
		if v == nil {
			return nil
		}
		return v.BaseKeyUsage
	}).(CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput)
}

// Detailed scenarios in which a key may be used.
func (o CertificateTemplatePredefinedValuesKeyUsagePtrOutput) ExtendedKeyUsage() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsage) *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage {
		if v == nil {
			return nil
		}
		return v.ExtendedKeyUsage
	}).(CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput)
}

// Used to describe extended key usages that are not listed in the KeyUsage.ExtendedKeyUsageOptions message.
func (o CertificateTemplatePredefinedValuesKeyUsagePtrOutput) UnknownExtendedKeyUsages() CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsage) []CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage {
		if v == nil {
			return nil
		}
		return v.UnknownExtendedKeyUsages
	}).(CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage struct {
	// The key may be used to sign certificates.
	CertSign *bool `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment *bool `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign *bool `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment *bool `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly *bool `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature *bool `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly *bool `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement *bool `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment *bool `pulumi:"keyEncipherment"`
}

// CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageInput is an input type that accepts CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs and CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageInput` via:
//
//          CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs{...}
type CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput
	ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutputWithContext(context.Context) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput
}

type CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs struct {
	// The key may be used to sign certificates.
	CertSign pulumi.BoolPtrInput `pulumi:"certSign"`
	// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
	ContentCommitment pulumi.BoolPtrInput `pulumi:"contentCommitment"`
	// The key may be used sign certificate revocation lists.
	CrlSign pulumi.BoolPtrInput `pulumi:"crlSign"`
	// The key may be used to encipher data.
	DataEncipherment pulumi.BoolPtrInput `pulumi:"dataEncipherment"`
	// The key may be used to decipher only.
	DecipherOnly pulumi.BoolPtrInput `pulumi:"decipherOnly"`
	// The key may be used for digital signatures.
	DigitalSignature pulumi.BoolPtrInput `pulumi:"digitalSignature"`
	// The key may be used to encipher only.
	EncipherOnly pulumi.BoolPtrInput `pulumi:"encipherOnly"`
	// The key may be used in a key agreement protocol.
	KeyAgreement pulumi.BoolPtrInput `pulumi:"keyAgreement"`
	// The key may be used to encipher other keys.
	KeyEncipherment pulumi.BoolPtrInput `pulumi:"keyEncipherment"`
}

func (CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput)
}

func (i CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput).ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx)
}

// CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrInput is an input type that accepts CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs, CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtr and CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrInput` via:
//
//          CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs{...}
//
//  or:
//
//          nil
type CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput
	ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutputWithContext(context.Context) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput
}

type certificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrType CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs

func CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtr(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrInput {
	return (*certificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrType)(v)
}

func (*certificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i *certificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrType) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (i *certificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrType) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return o.ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutputWithContext(context.Background())
}

func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage {
		return &v
	}).(CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput)
}

// The key may be used to sign certificates.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool { return v.CertSign }).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool { return v.ContentCommitment }).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool { return v.CrlSign }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool { return v.DataEncipherment }).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool { return v.DecipherOnly }).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool { return v.DigitalSignature }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool { return v.EncipherOnly }).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool { return v.KeyAgreement }).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool { return v.KeyEncipherment }).(pulumi.BoolPtrOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) ToCertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) Elem() CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage {
		if v != nil {
			return *v
		}
		var ret CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage
		return ret
	}).(CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput)
}

// The key may be used to sign certificates.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) CertSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CertSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) ContentCommitment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ContentCommitment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used sign certificate revocation lists.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) CrlSign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CrlSign
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher data.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DataEncipherment
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to decipher only.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) DecipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DecipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used for digital signatures.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.DigitalSignature
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher only.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) EncipherOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.EncipherOnly
	}).(pulumi.BoolPtrOutput)
}

// The key may be used in a key agreement protocol.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.KeyAgreement
	}).(pulumi.BoolPtrOutput)
}

// The key may be used to encipher other keys.
func (o CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.KeyEncipherment
	}).(pulumi.BoolPtrOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth *bool `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning *bool `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection *bool `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning *bool `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth *bool `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping *bool `pulumi:"timeStamping"`
}

// CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageInput is an input type that accepts CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs and CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageInput` via:
//
//          CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs{...}
type CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput
	ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutputWithContext(context.Context) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput
}

type CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs struct {
	// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
	ClientAuth pulumi.BoolPtrInput `pulumi:"clientAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
	CodeSigning pulumi.BoolPtrInput `pulumi:"codeSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
	EmailProtection pulumi.BoolPtrInput `pulumi:"emailProtection"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
	OcspSigning pulumi.BoolPtrInput `pulumi:"ocspSigning"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
	ServerAuth pulumi.BoolPtrInput `pulumi:"serverAuth"`
	// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
	TimeStamping pulumi.BoolPtrInput `pulumi:"timeStamping"`
}

func (CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput)
}

func (i CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput).ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx)
}

// CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrInput is an input type that accepts CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs, CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtr and CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrInput` via:
//
//          CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs{...}
//
//  or:
//
//          nil
type CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput
	ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Context) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput
}

type certificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrType CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs

func CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtr(v *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrInput {
	return (*certificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrType)(v)
}

func (*certificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i *certificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrType) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (i *certificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrType) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o.ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(context.Background())
}

func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage {
		return &v
	}).(CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool { return v.ClientAuth }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool { return v.CodeSigning }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool { return v.EmailProtection }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool { return v.OcspSigning }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool { return v.ServerAuth }).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool { return v.TimeStamping }).(pulumi.BoolPtrOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) ToCertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) Elem() CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage {
		if v != nil {
			return *v
		}
		var ret CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage
		return ret
	}).(CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) ClientAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ClientAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) CodeSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.CodeSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) EmailProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.EmailProtection
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) OcspSigning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.OcspSigning
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) ServerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.ServerAuth
	}).(pulumi.BoolPtrOutput)
}

// Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
func (o CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput) TimeStamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsage) *bool {
		if v == nil {
			return nil
		}
		return v.TimeStamping
	}).(pulumi.BoolPtrOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage struct {
	// Required. The parts of an OID path. The most significant parts of the path come first.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageInput is an input type that accepts CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArgs and CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageInput` via:
//
//          CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArgs{...}
type CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput
	ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Context) CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput
}

type CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArgs struct {
	// Required. The parts of an OID path. The most significant parts of the path come first.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArgs) ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput)
}

// CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayInput is an input type that accepts CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArray and CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayInput` via:
//
//          CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArray{ CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArgs{...} }
type CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput
	ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Context) CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput
}

type CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArray []CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageInput

func (CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArray) ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return i.ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArray) ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput() CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput) ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

// Required. The parts of an OID path. The most significant parts of the path come first.
func (o CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage) []int {
		return v.ObjectIdPaths
	}).(pulumi.IntArrayOutput)
}

type CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput() CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput) ToCertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage {
		return vs[0].([]CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsage)[vs[1].(int)]
	}).(CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput)
}

type CertificateTemplatePredefinedValuesPolicyId struct {
	// Required. The parts of an OID path. The most significant parts of the path come first.
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// CertificateTemplatePredefinedValuesPolicyIdInput is an input type that accepts CertificateTemplatePredefinedValuesPolicyIdArgs and CertificateTemplatePredefinedValuesPolicyIdOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesPolicyIdInput` via:
//
//          CertificateTemplatePredefinedValuesPolicyIdArgs{...}
type CertificateTemplatePredefinedValuesPolicyIdInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesPolicyIdOutput() CertificateTemplatePredefinedValuesPolicyIdOutput
	ToCertificateTemplatePredefinedValuesPolicyIdOutputWithContext(context.Context) CertificateTemplatePredefinedValuesPolicyIdOutput
}

type CertificateTemplatePredefinedValuesPolicyIdArgs struct {
	// Required. The parts of an OID path. The most significant parts of the path come first.
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (CertificateTemplatePredefinedValuesPolicyIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesPolicyId)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesPolicyIdArgs) ToCertificateTemplatePredefinedValuesPolicyIdOutput() CertificateTemplatePredefinedValuesPolicyIdOutput {
	return i.ToCertificateTemplatePredefinedValuesPolicyIdOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesPolicyIdArgs) ToCertificateTemplatePredefinedValuesPolicyIdOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesPolicyIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesPolicyIdOutput)
}

// CertificateTemplatePredefinedValuesPolicyIdArrayInput is an input type that accepts CertificateTemplatePredefinedValuesPolicyIdArray and CertificateTemplatePredefinedValuesPolicyIdArrayOutput values.
// You can construct a concrete instance of `CertificateTemplatePredefinedValuesPolicyIdArrayInput` via:
//
//          CertificateTemplatePredefinedValuesPolicyIdArray{ CertificateTemplatePredefinedValuesPolicyIdArgs{...} }
type CertificateTemplatePredefinedValuesPolicyIdArrayInput interface {
	pulumi.Input

	ToCertificateTemplatePredefinedValuesPolicyIdArrayOutput() CertificateTemplatePredefinedValuesPolicyIdArrayOutput
	ToCertificateTemplatePredefinedValuesPolicyIdArrayOutputWithContext(context.Context) CertificateTemplatePredefinedValuesPolicyIdArrayOutput
}

type CertificateTemplatePredefinedValuesPolicyIdArray []CertificateTemplatePredefinedValuesPolicyIdInput

func (CertificateTemplatePredefinedValuesPolicyIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTemplatePredefinedValuesPolicyId)(nil)).Elem()
}

func (i CertificateTemplatePredefinedValuesPolicyIdArray) ToCertificateTemplatePredefinedValuesPolicyIdArrayOutput() CertificateTemplatePredefinedValuesPolicyIdArrayOutput {
	return i.ToCertificateTemplatePredefinedValuesPolicyIdArrayOutputWithContext(context.Background())
}

func (i CertificateTemplatePredefinedValuesPolicyIdArray) ToCertificateTemplatePredefinedValuesPolicyIdArrayOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesPolicyIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTemplatePredefinedValuesPolicyIdArrayOutput)
}

type CertificateTemplatePredefinedValuesPolicyIdOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesPolicyIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplatePredefinedValuesPolicyId)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesPolicyIdOutput) ToCertificateTemplatePredefinedValuesPolicyIdOutput() CertificateTemplatePredefinedValuesPolicyIdOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesPolicyIdOutput) ToCertificateTemplatePredefinedValuesPolicyIdOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesPolicyIdOutput {
	return o
}

// Required. The parts of an OID path. The most significant parts of the path come first.
func (o CertificateTemplatePredefinedValuesPolicyIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CertificateTemplatePredefinedValuesPolicyId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type CertificateTemplatePredefinedValuesPolicyIdArrayOutput struct{ *pulumi.OutputState }

func (CertificateTemplatePredefinedValuesPolicyIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTemplatePredefinedValuesPolicyId)(nil)).Elem()
}

func (o CertificateTemplatePredefinedValuesPolicyIdArrayOutput) ToCertificateTemplatePredefinedValuesPolicyIdArrayOutput() CertificateTemplatePredefinedValuesPolicyIdArrayOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesPolicyIdArrayOutput) ToCertificateTemplatePredefinedValuesPolicyIdArrayOutputWithContext(ctx context.Context) CertificateTemplatePredefinedValuesPolicyIdArrayOutput {
	return o
}

func (o CertificateTemplatePredefinedValuesPolicyIdArrayOutput) Index(i pulumi.IntInput) CertificateTemplatePredefinedValuesPolicyIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateTemplatePredefinedValuesPolicyId {
		return vs[0].([]CertificateTemplatePredefinedValuesPolicyId)[vs[1].(int)]
	}).(CertificateTemplatePredefinedValuesPolicyIdOutput)
}

type GetAuthorityAccessUrl struct {
	CaCertificateAccessUrl string   `pulumi:"caCertificateAccessUrl"`
	CrlAccessUrls          []string `pulumi:"crlAccessUrls"`
}

// GetAuthorityAccessUrlInput is an input type that accepts GetAuthorityAccessUrlArgs and GetAuthorityAccessUrlOutput values.
// You can construct a concrete instance of `GetAuthorityAccessUrlInput` via:
//
//          GetAuthorityAccessUrlArgs{...}
type GetAuthorityAccessUrlInput interface {
	pulumi.Input

	ToGetAuthorityAccessUrlOutput() GetAuthorityAccessUrlOutput
	ToGetAuthorityAccessUrlOutputWithContext(context.Context) GetAuthorityAccessUrlOutput
}

type GetAuthorityAccessUrlArgs struct {
	CaCertificateAccessUrl pulumi.StringInput      `pulumi:"caCertificateAccessUrl"`
	CrlAccessUrls          pulumi.StringArrayInput `pulumi:"crlAccessUrls"`
}

func (GetAuthorityAccessUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityAccessUrl)(nil)).Elem()
}

func (i GetAuthorityAccessUrlArgs) ToGetAuthorityAccessUrlOutput() GetAuthorityAccessUrlOutput {
	return i.ToGetAuthorityAccessUrlOutputWithContext(context.Background())
}

func (i GetAuthorityAccessUrlArgs) ToGetAuthorityAccessUrlOutputWithContext(ctx context.Context) GetAuthorityAccessUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityAccessUrlOutput)
}

// GetAuthorityAccessUrlArrayInput is an input type that accepts GetAuthorityAccessUrlArray and GetAuthorityAccessUrlArrayOutput values.
// You can construct a concrete instance of `GetAuthorityAccessUrlArrayInput` via:
//
//          GetAuthorityAccessUrlArray{ GetAuthorityAccessUrlArgs{...} }
type GetAuthorityAccessUrlArrayInput interface {
	pulumi.Input

	ToGetAuthorityAccessUrlArrayOutput() GetAuthorityAccessUrlArrayOutput
	ToGetAuthorityAccessUrlArrayOutputWithContext(context.Context) GetAuthorityAccessUrlArrayOutput
}

type GetAuthorityAccessUrlArray []GetAuthorityAccessUrlInput

func (GetAuthorityAccessUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityAccessUrl)(nil)).Elem()
}

func (i GetAuthorityAccessUrlArray) ToGetAuthorityAccessUrlArrayOutput() GetAuthorityAccessUrlArrayOutput {
	return i.ToGetAuthorityAccessUrlArrayOutputWithContext(context.Background())
}

func (i GetAuthorityAccessUrlArray) ToGetAuthorityAccessUrlArrayOutputWithContext(ctx context.Context) GetAuthorityAccessUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityAccessUrlArrayOutput)
}

type GetAuthorityAccessUrlOutput struct{ *pulumi.OutputState }

func (GetAuthorityAccessUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityAccessUrl)(nil)).Elem()
}

func (o GetAuthorityAccessUrlOutput) ToGetAuthorityAccessUrlOutput() GetAuthorityAccessUrlOutput {
	return o
}

func (o GetAuthorityAccessUrlOutput) ToGetAuthorityAccessUrlOutputWithContext(ctx context.Context) GetAuthorityAccessUrlOutput {
	return o
}

func (o GetAuthorityAccessUrlOutput) CaCertificateAccessUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityAccessUrl) string { return v.CaCertificateAccessUrl }).(pulumi.StringOutput)
}

func (o GetAuthorityAccessUrlOutput) CrlAccessUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthorityAccessUrl) []string { return v.CrlAccessUrls }).(pulumi.StringArrayOutput)
}

type GetAuthorityAccessUrlArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityAccessUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityAccessUrl)(nil)).Elem()
}

func (o GetAuthorityAccessUrlArrayOutput) ToGetAuthorityAccessUrlArrayOutput() GetAuthorityAccessUrlArrayOutput {
	return o
}

func (o GetAuthorityAccessUrlArrayOutput) ToGetAuthorityAccessUrlArrayOutputWithContext(ctx context.Context) GetAuthorityAccessUrlArrayOutput {
	return o
}

func (o GetAuthorityAccessUrlArrayOutput) Index(i pulumi.IntInput) GetAuthorityAccessUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityAccessUrl {
		return vs[0].([]GetAuthorityAccessUrl)[vs[1].(int)]
	}).(GetAuthorityAccessUrlOutput)
}

type GetAuthorityConfig struct {
	SubjectConfigs []GetAuthorityConfigSubjectConfig `pulumi:"subjectConfigs"`
	X509Configs    []GetAuthorityConfigX509Config    `pulumi:"x509Configs"`
}

// GetAuthorityConfigInput is an input type that accepts GetAuthorityConfigArgs and GetAuthorityConfigOutput values.
// You can construct a concrete instance of `GetAuthorityConfigInput` via:
//
//          GetAuthorityConfigArgs{...}
type GetAuthorityConfigInput interface {
	pulumi.Input

	ToGetAuthorityConfigOutput() GetAuthorityConfigOutput
	ToGetAuthorityConfigOutputWithContext(context.Context) GetAuthorityConfigOutput
}

type GetAuthorityConfigArgs struct {
	SubjectConfigs GetAuthorityConfigSubjectConfigArrayInput `pulumi:"subjectConfigs"`
	X509Configs    GetAuthorityConfigX509ConfigArrayInput    `pulumi:"x509Configs"`
}

func (GetAuthorityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfig)(nil)).Elem()
}

func (i GetAuthorityConfigArgs) ToGetAuthorityConfigOutput() GetAuthorityConfigOutput {
	return i.ToGetAuthorityConfigOutputWithContext(context.Background())
}

func (i GetAuthorityConfigArgs) ToGetAuthorityConfigOutputWithContext(ctx context.Context) GetAuthorityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigOutput)
}

// GetAuthorityConfigArrayInput is an input type that accepts GetAuthorityConfigArray and GetAuthorityConfigArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigArrayInput` via:
//
//          GetAuthorityConfigArray{ GetAuthorityConfigArgs{...} }
type GetAuthorityConfigArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigArrayOutput() GetAuthorityConfigArrayOutput
	ToGetAuthorityConfigArrayOutputWithContext(context.Context) GetAuthorityConfigArrayOutput
}

type GetAuthorityConfigArray []GetAuthorityConfigInput

func (GetAuthorityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfig)(nil)).Elem()
}

func (i GetAuthorityConfigArray) ToGetAuthorityConfigArrayOutput() GetAuthorityConfigArrayOutput {
	return i.ToGetAuthorityConfigArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigArray) ToGetAuthorityConfigArrayOutputWithContext(ctx context.Context) GetAuthorityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigArrayOutput)
}

type GetAuthorityConfigOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfig)(nil)).Elem()
}

func (o GetAuthorityConfigOutput) ToGetAuthorityConfigOutput() GetAuthorityConfigOutput {
	return o
}

func (o GetAuthorityConfigOutput) ToGetAuthorityConfigOutputWithContext(ctx context.Context) GetAuthorityConfigOutput {
	return o
}

func (o GetAuthorityConfigOutput) SubjectConfigs() GetAuthorityConfigSubjectConfigArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfig) []GetAuthorityConfigSubjectConfig { return v.SubjectConfigs }).(GetAuthorityConfigSubjectConfigArrayOutput)
}

func (o GetAuthorityConfigOutput) X509Configs() GetAuthorityConfigX509ConfigArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfig) []GetAuthorityConfigX509Config { return v.X509Configs }).(GetAuthorityConfigX509ConfigArrayOutput)
}

type GetAuthorityConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfig)(nil)).Elem()
}

func (o GetAuthorityConfigArrayOutput) ToGetAuthorityConfigArrayOutput() GetAuthorityConfigArrayOutput {
	return o
}

func (o GetAuthorityConfigArrayOutput) ToGetAuthorityConfigArrayOutputWithContext(ctx context.Context) GetAuthorityConfigArrayOutput {
	return o
}

func (o GetAuthorityConfigArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfig {
		return vs[0].([]GetAuthorityConfig)[vs[1].(int)]
	}).(GetAuthorityConfigOutput)
}

type GetAuthorityConfigSubjectConfig struct {
	SubjectAltNames []GetAuthorityConfigSubjectConfigSubjectAltName `pulumi:"subjectAltNames"`
	Subjects        []GetAuthorityConfigSubjectConfigSubject        `pulumi:"subjects"`
}

// GetAuthorityConfigSubjectConfigInput is an input type that accepts GetAuthorityConfigSubjectConfigArgs and GetAuthorityConfigSubjectConfigOutput values.
// You can construct a concrete instance of `GetAuthorityConfigSubjectConfigInput` via:
//
//          GetAuthorityConfigSubjectConfigArgs{...}
type GetAuthorityConfigSubjectConfigInput interface {
	pulumi.Input

	ToGetAuthorityConfigSubjectConfigOutput() GetAuthorityConfigSubjectConfigOutput
	ToGetAuthorityConfigSubjectConfigOutputWithContext(context.Context) GetAuthorityConfigSubjectConfigOutput
}

type GetAuthorityConfigSubjectConfigArgs struct {
	SubjectAltNames GetAuthorityConfigSubjectConfigSubjectAltNameArrayInput `pulumi:"subjectAltNames"`
	Subjects        GetAuthorityConfigSubjectConfigSubjectArrayInput        `pulumi:"subjects"`
}

func (GetAuthorityConfigSubjectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigSubjectConfig)(nil)).Elem()
}

func (i GetAuthorityConfigSubjectConfigArgs) ToGetAuthorityConfigSubjectConfigOutput() GetAuthorityConfigSubjectConfigOutput {
	return i.ToGetAuthorityConfigSubjectConfigOutputWithContext(context.Background())
}

func (i GetAuthorityConfigSubjectConfigArgs) ToGetAuthorityConfigSubjectConfigOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigSubjectConfigOutput)
}

// GetAuthorityConfigSubjectConfigArrayInput is an input type that accepts GetAuthorityConfigSubjectConfigArray and GetAuthorityConfigSubjectConfigArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigSubjectConfigArrayInput` via:
//
//          GetAuthorityConfigSubjectConfigArray{ GetAuthorityConfigSubjectConfigArgs{...} }
type GetAuthorityConfigSubjectConfigArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigSubjectConfigArrayOutput() GetAuthorityConfigSubjectConfigArrayOutput
	ToGetAuthorityConfigSubjectConfigArrayOutputWithContext(context.Context) GetAuthorityConfigSubjectConfigArrayOutput
}

type GetAuthorityConfigSubjectConfigArray []GetAuthorityConfigSubjectConfigInput

func (GetAuthorityConfigSubjectConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigSubjectConfig)(nil)).Elem()
}

func (i GetAuthorityConfigSubjectConfigArray) ToGetAuthorityConfigSubjectConfigArrayOutput() GetAuthorityConfigSubjectConfigArrayOutput {
	return i.ToGetAuthorityConfigSubjectConfigArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigSubjectConfigArray) ToGetAuthorityConfigSubjectConfigArrayOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigSubjectConfigArrayOutput)
}

type GetAuthorityConfigSubjectConfigOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigSubjectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigSubjectConfig)(nil)).Elem()
}

func (o GetAuthorityConfigSubjectConfigOutput) ToGetAuthorityConfigSubjectConfigOutput() GetAuthorityConfigSubjectConfigOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigOutput) ToGetAuthorityConfigSubjectConfigOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigOutput) SubjectAltNames() GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfig) []GetAuthorityConfigSubjectConfigSubjectAltName {
		return v.SubjectAltNames
	}).(GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput)
}

func (o GetAuthorityConfigSubjectConfigOutput) Subjects() GetAuthorityConfigSubjectConfigSubjectArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfig) []GetAuthorityConfigSubjectConfigSubject { return v.Subjects }).(GetAuthorityConfigSubjectConfigSubjectArrayOutput)
}

type GetAuthorityConfigSubjectConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigSubjectConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigSubjectConfig)(nil)).Elem()
}

func (o GetAuthorityConfigSubjectConfigArrayOutput) ToGetAuthorityConfigSubjectConfigArrayOutput() GetAuthorityConfigSubjectConfigArrayOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigArrayOutput) ToGetAuthorityConfigSubjectConfigArrayOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigArrayOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigSubjectConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigSubjectConfig {
		return vs[0].([]GetAuthorityConfigSubjectConfig)[vs[1].(int)]
	}).(GetAuthorityConfigSubjectConfigOutput)
}

type GetAuthorityConfigSubjectConfigSubject struct {
	CommonName         string `pulumi:"commonName"`
	CountryCode        string `pulumi:"countryCode"`
	Locality           string `pulumi:"locality"`
	Organization       string `pulumi:"organization"`
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	PostalCode         string `pulumi:"postalCode"`
	Province           string `pulumi:"province"`
	StreetAddress      string `pulumi:"streetAddress"`
}

// GetAuthorityConfigSubjectConfigSubjectInput is an input type that accepts GetAuthorityConfigSubjectConfigSubjectArgs and GetAuthorityConfigSubjectConfigSubjectOutput values.
// You can construct a concrete instance of `GetAuthorityConfigSubjectConfigSubjectInput` via:
//
//          GetAuthorityConfigSubjectConfigSubjectArgs{...}
type GetAuthorityConfigSubjectConfigSubjectInput interface {
	pulumi.Input

	ToGetAuthorityConfigSubjectConfigSubjectOutput() GetAuthorityConfigSubjectConfigSubjectOutput
	ToGetAuthorityConfigSubjectConfigSubjectOutputWithContext(context.Context) GetAuthorityConfigSubjectConfigSubjectOutput
}

type GetAuthorityConfigSubjectConfigSubjectArgs struct {
	CommonName         pulumi.StringInput `pulumi:"commonName"`
	CountryCode        pulumi.StringInput `pulumi:"countryCode"`
	Locality           pulumi.StringInput `pulumi:"locality"`
	Organization       pulumi.StringInput `pulumi:"organization"`
	OrganizationalUnit pulumi.StringInput `pulumi:"organizationalUnit"`
	PostalCode         pulumi.StringInput `pulumi:"postalCode"`
	Province           pulumi.StringInput `pulumi:"province"`
	StreetAddress      pulumi.StringInput `pulumi:"streetAddress"`
}

func (GetAuthorityConfigSubjectConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (i GetAuthorityConfigSubjectConfigSubjectArgs) ToGetAuthorityConfigSubjectConfigSubjectOutput() GetAuthorityConfigSubjectConfigSubjectOutput {
	return i.ToGetAuthorityConfigSubjectConfigSubjectOutputWithContext(context.Background())
}

func (i GetAuthorityConfigSubjectConfigSubjectArgs) ToGetAuthorityConfigSubjectConfigSubjectOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigSubjectConfigSubjectOutput)
}

// GetAuthorityConfigSubjectConfigSubjectArrayInput is an input type that accepts GetAuthorityConfigSubjectConfigSubjectArray and GetAuthorityConfigSubjectConfigSubjectArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigSubjectConfigSubjectArrayInput` via:
//
//          GetAuthorityConfigSubjectConfigSubjectArray{ GetAuthorityConfigSubjectConfigSubjectArgs{...} }
type GetAuthorityConfigSubjectConfigSubjectArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigSubjectConfigSubjectArrayOutput() GetAuthorityConfigSubjectConfigSubjectArrayOutput
	ToGetAuthorityConfigSubjectConfigSubjectArrayOutputWithContext(context.Context) GetAuthorityConfigSubjectConfigSubjectArrayOutput
}

type GetAuthorityConfigSubjectConfigSubjectArray []GetAuthorityConfigSubjectConfigSubjectInput

func (GetAuthorityConfigSubjectConfigSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (i GetAuthorityConfigSubjectConfigSubjectArray) ToGetAuthorityConfigSubjectConfigSubjectArrayOutput() GetAuthorityConfigSubjectConfigSubjectArrayOutput {
	return i.ToGetAuthorityConfigSubjectConfigSubjectArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigSubjectConfigSubjectArray) ToGetAuthorityConfigSubjectConfigSubjectArrayOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigSubjectConfigSubjectArrayOutput)
}

type GetAuthorityConfigSubjectConfigSubjectOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigSubjectConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) ToGetAuthorityConfigSubjectConfigSubjectOutput() GetAuthorityConfigSubjectConfigSubjectOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) ToGetAuthorityConfigSubjectConfigSubjectOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigSubjectOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubject) string { return v.CountryCode }).(pulumi.StringOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) Locality() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubject) string { return v.Locality }).(pulumi.StringOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubject) string { return v.Organization }).(pulumi.StringOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) OrganizationalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubject) string { return v.OrganizationalUnit }).(pulumi.StringOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubject) string { return v.PostalCode }).(pulumi.StringOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) Province() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubject) string { return v.Province }).(pulumi.StringOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectOutput) StreetAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubject) string { return v.StreetAddress }).(pulumi.StringOutput)
}

type GetAuthorityConfigSubjectConfigSubjectArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigSubjectConfigSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigSubjectConfigSubject)(nil)).Elem()
}

func (o GetAuthorityConfigSubjectConfigSubjectArrayOutput) ToGetAuthorityConfigSubjectConfigSubjectArrayOutput() GetAuthorityConfigSubjectConfigSubjectArrayOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigSubjectArrayOutput) ToGetAuthorityConfigSubjectConfigSubjectArrayOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigSubjectArrayOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigSubjectArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigSubjectConfigSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigSubjectConfigSubject {
		return vs[0].([]GetAuthorityConfigSubjectConfigSubject)[vs[1].(int)]
	}).(GetAuthorityConfigSubjectConfigSubjectOutput)
}

type GetAuthorityConfigSubjectConfigSubjectAltName struct {
	DnsNames       []string `pulumi:"dnsNames"`
	EmailAddresses []string `pulumi:"emailAddresses"`
	IpAddresses    []string `pulumi:"ipAddresses"`
	Uris           []string `pulumi:"uris"`
}

// GetAuthorityConfigSubjectConfigSubjectAltNameInput is an input type that accepts GetAuthorityConfigSubjectConfigSubjectAltNameArgs and GetAuthorityConfigSubjectConfigSubjectAltNameOutput values.
// You can construct a concrete instance of `GetAuthorityConfigSubjectConfigSubjectAltNameInput` via:
//
//          GetAuthorityConfigSubjectConfigSubjectAltNameArgs{...}
type GetAuthorityConfigSubjectConfigSubjectAltNameInput interface {
	pulumi.Input

	ToGetAuthorityConfigSubjectConfigSubjectAltNameOutput() GetAuthorityConfigSubjectConfigSubjectAltNameOutput
	ToGetAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(context.Context) GetAuthorityConfigSubjectConfigSubjectAltNameOutput
}

type GetAuthorityConfigSubjectConfigSubjectAltNameArgs struct {
	DnsNames       pulumi.StringArrayInput `pulumi:"dnsNames"`
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	IpAddresses    pulumi.StringArrayInput `pulumi:"ipAddresses"`
	Uris           pulumi.StringArrayInput `pulumi:"uris"`
}

func (GetAuthorityConfigSubjectConfigSubjectAltNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (i GetAuthorityConfigSubjectConfigSubjectAltNameArgs) ToGetAuthorityConfigSubjectConfigSubjectAltNameOutput() GetAuthorityConfigSubjectConfigSubjectAltNameOutput {
	return i.ToGetAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(context.Background())
}

func (i GetAuthorityConfigSubjectConfigSubjectAltNameArgs) ToGetAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigSubjectAltNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigSubjectConfigSubjectAltNameOutput)
}

// GetAuthorityConfigSubjectConfigSubjectAltNameArrayInput is an input type that accepts GetAuthorityConfigSubjectConfigSubjectAltNameArray and GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigSubjectConfigSubjectAltNameArrayInput` via:
//
//          GetAuthorityConfigSubjectConfigSubjectAltNameArray{ GetAuthorityConfigSubjectConfigSubjectAltNameArgs{...} }
type GetAuthorityConfigSubjectConfigSubjectAltNameArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput() GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput
	ToGetAuthorityConfigSubjectConfigSubjectAltNameArrayOutputWithContext(context.Context) GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput
}

type GetAuthorityConfigSubjectConfigSubjectAltNameArray []GetAuthorityConfigSubjectConfigSubjectAltNameInput

func (GetAuthorityConfigSubjectConfigSubjectAltNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (i GetAuthorityConfigSubjectConfigSubjectAltNameArray) ToGetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput() GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput {
	return i.ToGetAuthorityConfigSubjectConfigSubjectAltNameArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigSubjectConfigSubjectAltNameArray) ToGetAuthorityConfigSubjectConfigSubjectAltNameArrayOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput)
}

type GetAuthorityConfigSubjectConfigSubjectAltNameOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigSubjectConfigSubjectAltNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (o GetAuthorityConfigSubjectConfigSubjectAltNameOutput) ToGetAuthorityConfigSubjectConfigSubjectAltNameOutput() GetAuthorityConfigSubjectConfigSubjectAltNameOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigSubjectAltNameOutput) ToGetAuthorityConfigSubjectConfigSubjectAltNameOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigSubjectAltNameOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigSubjectAltNameOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubjectAltName) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectAltNameOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubjectAltName) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectAltNameOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubjectAltName) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o GetAuthorityConfigSubjectConfigSubjectAltNameOutput) Uris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigSubjectConfigSubjectAltName) []string { return v.Uris }).(pulumi.StringArrayOutput)
}

type GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigSubjectConfigSubjectAltName)(nil)).Elem()
}

func (o GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput) ToGetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput() GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput) ToGetAuthorityConfigSubjectConfigSubjectAltNameArrayOutputWithContext(ctx context.Context) GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput {
	return o
}

func (o GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigSubjectConfigSubjectAltNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigSubjectConfigSubjectAltName {
		return vs[0].([]GetAuthorityConfigSubjectConfigSubjectAltName)[vs[1].(int)]
	}).(GetAuthorityConfigSubjectConfigSubjectAltNameOutput)
}

type GetAuthorityConfigX509Config struct {
	AdditionalExtensions []GetAuthorityConfigX509ConfigAdditionalExtension `pulumi:"additionalExtensions"`
	AiaOcspServers       []string                                          `pulumi:"aiaOcspServers"`
	CaOptions            []GetAuthorityConfigX509ConfigCaOption            `pulumi:"caOptions"`
	KeyUsages            []GetAuthorityConfigX509ConfigKeyUsage            `pulumi:"keyUsages"`
	PolicyIds            []GetAuthorityConfigX509ConfigPolicyId            `pulumi:"policyIds"`
}

// GetAuthorityConfigX509ConfigInput is an input type that accepts GetAuthorityConfigX509ConfigArgs and GetAuthorityConfigX509ConfigOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigInput` via:
//
//          GetAuthorityConfigX509ConfigArgs{...}
type GetAuthorityConfigX509ConfigInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigOutput() GetAuthorityConfigX509ConfigOutput
	ToGetAuthorityConfigX509ConfigOutputWithContext(context.Context) GetAuthorityConfigX509ConfigOutput
}

type GetAuthorityConfigX509ConfigArgs struct {
	AdditionalExtensions GetAuthorityConfigX509ConfigAdditionalExtensionArrayInput `pulumi:"additionalExtensions"`
	AiaOcspServers       pulumi.StringArrayInput                                   `pulumi:"aiaOcspServers"`
	CaOptions            GetAuthorityConfigX509ConfigCaOptionArrayInput            `pulumi:"caOptions"`
	KeyUsages            GetAuthorityConfigX509ConfigKeyUsageArrayInput            `pulumi:"keyUsages"`
	PolicyIds            GetAuthorityConfigX509ConfigPolicyIdArrayInput            `pulumi:"policyIds"`
}

func (GetAuthorityConfigX509ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509Config)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigArgs) ToGetAuthorityConfigX509ConfigOutput() GetAuthorityConfigX509ConfigOutput {
	return i.ToGetAuthorityConfigX509ConfigOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigArgs) ToGetAuthorityConfigX509ConfigOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigOutput)
}

// GetAuthorityConfigX509ConfigArrayInput is an input type that accepts GetAuthorityConfigX509ConfigArray and GetAuthorityConfigX509ConfigArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigArrayInput` via:
//
//          GetAuthorityConfigX509ConfigArray{ GetAuthorityConfigX509ConfigArgs{...} }
type GetAuthorityConfigX509ConfigArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigArrayOutput() GetAuthorityConfigX509ConfigArrayOutput
	ToGetAuthorityConfigX509ConfigArrayOutputWithContext(context.Context) GetAuthorityConfigX509ConfigArrayOutput
}

type GetAuthorityConfigX509ConfigArray []GetAuthorityConfigX509ConfigInput

func (GetAuthorityConfigX509ConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509Config)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigArray) ToGetAuthorityConfigX509ConfigArrayOutput() GetAuthorityConfigX509ConfigArrayOutput {
	return i.ToGetAuthorityConfigX509ConfigArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigArray) ToGetAuthorityConfigX509ConfigArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigArrayOutput)
}

type GetAuthorityConfigX509ConfigOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509Config)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigOutput) ToGetAuthorityConfigX509ConfigOutput() GetAuthorityConfigX509ConfigOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigOutput) ToGetAuthorityConfigX509ConfigOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigOutput) AdditionalExtensions() GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509Config) []GetAuthorityConfigX509ConfigAdditionalExtension {
		return v.AdditionalExtensions
	}).(GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput)
}

func (o GetAuthorityConfigX509ConfigOutput) AiaOcspServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509Config) []string { return v.AiaOcspServers }).(pulumi.StringArrayOutput)
}

func (o GetAuthorityConfigX509ConfigOutput) CaOptions() GetAuthorityConfigX509ConfigCaOptionArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509Config) []GetAuthorityConfigX509ConfigCaOption { return v.CaOptions }).(GetAuthorityConfigX509ConfigCaOptionArrayOutput)
}

func (o GetAuthorityConfigX509ConfigOutput) KeyUsages() GetAuthorityConfigX509ConfigKeyUsageArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509Config) []GetAuthorityConfigX509ConfigKeyUsage { return v.KeyUsages }).(GetAuthorityConfigX509ConfigKeyUsageArrayOutput)
}

func (o GetAuthorityConfigX509ConfigOutput) PolicyIds() GetAuthorityConfigX509ConfigPolicyIdArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509Config) []GetAuthorityConfigX509ConfigPolicyId { return v.PolicyIds }).(GetAuthorityConfigX509ConfigPolicyIdArrayOutput)
}

type GetAuthorityConfigX509ConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509Config)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigArrayOutput) ToGetAuthorityConfigX509ConfigArrayOutput() GetAuthorityConfigX509ConfigArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigArrayOutput) ToGetAuthorityConfigX509ConfigArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigX509ConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigX509Config {
		return vs[0].([]GetAuthorityConfigX509Config)[vs[1].(int)]
	}).(GetAuthorityConfigX509ConfigOutput)
}

type GetAuthorityConfigX509ConfigAdditionalExtension struct {
	Critical  bool                                                      `pulumi:"critical"`
	ObjectIds []GetAuthorityConfigX509ConfigAdditionalExtensionObjectId `pulumi:"objectIds"`
	Value     string                                                    `pulumi:"value"`
}

// GetAuthorityConfigX509ConfigAdditionalExtensionInput is an input type that accepts GetAuthorityConfigX509ConfigAdditionalExtensionArgs and GetAuthorityConfigX509ConfigAdditionalExtensionOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigAdditionalExtensionInput` via:
//
//          GetAuthorityConfigX509ConfigAdditionalExtensionArgs{...}
type GetAuthorityConfigX509ConfigAdditionalExtensionInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigAdditionalExtensionOutput() GetAuthorityConfigX509ConfigAdditionalExtensionOutput
	ToGetAuthorityConfigX509ConfigAdditionalExtensionOutputWithContext(context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionOutput
}

type GetAuthorityConfigX509ConfigAdditionalExtensionArgs struct {
	Critical  pulumi.BoolInput                                                  `pulumi:"critical"`
	ObjectIds GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayInput `pulumi:"objectIds"`
	Value     pulumi.StringInput                                                `pulumi:"value"`
}

func (GetAuthorityConfigX509ConfigAdditionalExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigAdditionalExtensionArgs) ToGetAuthorityConfigX509ConfigAdditionalExtensionOutput() GetAuthorityConfigX509ConfigAdditionalExtensionOutput {
	return i.ToGetAuthorityConfigX509ConfigAdditionalExtensionOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigAdditionalExtensionArgs) ToGetAuthorityConfigX509ConfigAdditionalExtensionOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigAdditionalExtensionOutput)
}

// GetAuthorityConfigX509ConfigAdditionalExtensionArrayInput is an input type that accepts GetAuthorityConfigX509ConfigAdditionalExtensionArray and GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigAdditionalExtensionArrayInput` via:
//
//          GetAuthorityConfigX509ConfigAdditionalExtensionArray{ GetAuthorityConfigX509ConfigAdditionalExtensionArgs{...} }
type GetAuthorityConfigX509ConfigAdditionalExtensionArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput() GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput
	ToGetAuthorityConfigX509ConfigAdditionalExtensionArrayOutputWithContext(context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput
}

type GetAuthorityConfigX509ConfigAdditionalExtensionArray []GetAuthorityConfigX509ConfigAdditionalExtensionInput

func (GetAuthorityConfigX509ConfigAdditionalExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigAdditionalExtensionArray) ToGetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput() GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return i.ToGetAuthorityConfigX509ConfigAdditionalExtensionArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigAdditionalExtensionArray) ToGetAuthorityConfigX509ConfigAdditionalExtensionArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput)
}

type GetAuthorityConfigX509ConfigAdditionalExtensionOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigAdditionalExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionOutput) ToGetAuthorityConfigX509ConfigAdditionalExtensionOutput() GetAuthorityConfigX509ConfigAdditionalExtensionOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionOutput) ToGetAuthorityConfigX509ConfigAdditionalExtensionOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionOutput) Critical() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigAdditionalExtension) bool { return v.Critical }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionOutput) ObjectIds() GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigAdditionalExtension) []GetAuthorityConfigX509ConfigAdditionalExtensionObjectId {
		return v.ObjectIds
	}).(GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput)
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigAdditionalExtension) string { return v.Value }).(pulumi.StringOutput)
}

type GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigAdditionalExtension)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput) ToGetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput() GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput) ToGetAuthorityConfigX509ConfigAdditionalExtensionArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigX509ConfigAdditionalExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigX509ConfigAdditionalExtension {
		return vs[0].([]GetAuthorityConfigX509ConfigAdditionalExtension)[vs[1].(int)]
	}).(GetAuthorityConfigX509ConfigAdditionalExtensionOutput)
}

type GetAuthorityConfigX509ConfigAdditionalExtensionObjectId struct {
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdInput is an input type that accepts GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs and GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdInput` via:
//
//          GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs{...}
type GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput() GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput
	ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput
}

type GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs struct {
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigAdditionalExtensionObjectId)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs) ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput() GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return i.ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs) ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput)
}

// GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayInput is an input type that accepts GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArray and GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayInput` via:
//
//          GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArray{ GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs{...} }
type GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput() GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput
	ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutputWithContext(context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput
}

type GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArray []GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdInput

func (GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigAdditionalExtensionObjectId)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArray) ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput() GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput {
	return i.ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArray) ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput)
}

type GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigAdditionalExtensionObjectId)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput) ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput() GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput) ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigAdditionalExtensionObjectId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigAdditionalExtensionObjectId)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput) ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput() GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput) ToGetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigX509ConfigAdditionalExtensionObjectId {
		return vs[0].([]GetAuthorityConfigX509ConfigAdditionalExtensionObjectId)[vs[1].(int)]
	}).(GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput)
}

type GetAuthorityConfigX509ConfigCaOption struct {
	IsCa                    bool `pulumi:"isCa"`
	MaxIssuerPathLength     int  `pulumi:"maxIssuerPathLength"`
	NonCa                   bool `pulumi:"nonCa"`
	ZeroMaxIssuerPathLength bool `pulumi:"zeroMaxIssuerPathLength"`
}

// GetAuthorityConfigX509ConfigCaOptionInput is an input type that accepts GetAuthorityConfigX509ConfigCaOptionArgs and GetAuthorityConfigX509ConfigCaOptionOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigCaOptionInput` via:
//
//          GetAuthorityConfigX509ConfigCaOptionArgs{...}
type GetAuthorityConfigX509ConfigCaOptionInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigCaOptionOutput() GetAuthorityConfigX509ConfigCaOptionOutput
	ToGetAuthorityConfigX509ConfigCaOptionOutputWithContext(context.Context) GetAuthorityConfigX509ConfigCaOptionOutput
}

type GetAuthorityConfigX509ConfigCaOptionArgs struct {
	IsCa                    pulumi.BoolInput `pulumi:"isCa"`
	MaxIssuerPathLength     pulumi.IntInput  `pulumi:"maxIssuerPathLength"`
	NonCa                   pulumi.BoolInput `pulumi:"nonCa"`
	ZeroMaxIssuerPathLength pulumi.BoolInput `pulumi:"zeroMaxIssuerPathLength"`
}

func (GetAuthorityConfigX509ConfigCaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigCaOption)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigCaOptionArgs) ToGetAuthorityConfigX509ConfigCaOptionOutput() GetAuthorityConfigX509ConfigCaOptionOutput {
	return i.ToGetAuthorityConfigX509ConfigCaOptionOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigCaOptionArgs) ToGetAuthorityConfigX509ConfigCaOptionOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigCaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigCaOptionOutput)
}

// GetAuthorityConfigX509ConfigCaOptionArrayInput is an input type that accepts GetAuthorityConfigX509ConfigCaOptionArray and GetAuthorityConfigX509ConfigCaOptionArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigCaOptionArrayInput` via:
//
//          GetAuthorityConfigX509ConfigCaOptionArray{ GetAuthorityConfigX509ConfigCaOptionArgs{...} }
type GetAuthorityConfigX509ConfigCaOptionArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigCaOptionArrayOutput() GetAuthorityConfigX509ConfigCaOptionArrayOutput
	ToGetAuthorityConfigX509ConfigCaOptionArrayOutputWithContext(context.Context) GetAuthorityConfigX509ConfigCaOptionArrayOutput
}

type GetAuthorityConfigX509ConfigCaOptionArray []GetAuthorityConfigX509ConfigCaOptionInput

func (GetAuthorityConfigX509ConfigCaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigCaOption)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigCaOptionArray) ToGetAuthorityConfigX509ConfigCaOptionArrayOutput() GetAuthorityConfigX509ConfigCaOptionArrayOutput {
	return i.ToGetAuthorityConfigX509ConfigCaOptionArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigCaOptionArray) ToGetAuthorityConfigX509ConfigCaOptionArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigCaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigCaOptionArrayOutput)
}

type GetAuthorityConfigX509ConfigCaOptionOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigCaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigCaOption)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigCaOptionOutput) ToGetAuthorityConfigX509ConfigCaOptionOutput() GetAuthorityConfigX509ConfigCaOptionOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigCaOptionOutput) ToGetAuthorityConfigX509ConfigCaOptionOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigCaOptionOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigCaOptionOutput) IsCa() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigCaOption) bool { return v.IsCa }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigCaOptionOutput) MaxIssuerPathLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigCaOption) int { return v.MaxIssuerPathLength }).(pulumi.IntOutput)
}

func (o GetAuthorityConfigX509ConfigCaOptionOutput) NonCa() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigCaOption) bool { return v.NonCa }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigCaOptionOutput) ZeroMaxIssuerPathLength() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigCaOption) bool { return v.ZeroMaxIssuerPathLength }).(pulumi.BoolOutput)
}

type GetAuthorityConfigX509ConfigCaOptionArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigCaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigCaOption)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigCaOptionArrayOutput) ToGetAuthorityConfigX509ConfigCaOptionArrayOutput() GetAuthorityConfigX509ConfigCaOptionArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigCaOptionArrayOutput) ToGetAuthorityConfigX509ConfigCaOptionArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigCaOptionArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigCaOptionArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigX509ConfigCaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigX509ConfigCaOption {
		return vs[0].([]GetAuthorityConfigX509ConfigCaOption)[vs[1].(int)]
	}).(GetAuthorityConfigX509ConfigCaOptionOutput)
}

type GetAuthorityConfigX509ConfigKeyUsage struct {
	BaseKeyUsages            []GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage            `pulumi:"baseKeyUsages"`
	ExtendedKeyUsages        []GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage        `pulumi:"extendedKeyUsages"`
	UnknownExtendedKeyUsages []GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage `pulumi:"unknownExtendedKeyUsages"`
}

// GetAuthorityConfigX509ConfigKeyUsageInput is an input type that accepts GetAuthorityConfigX509ConfigKeyUsageArgs and GetAuthorityConfigX509ConfigKeyUsageOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigKeyUsageInput` via:
//
//          GetAuthorityConfigX509ConfigKeyUsageArgs{...}
type GetAuthorityConfigX509ConfigKeyUsageInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageOutput
	ToGetAuthorityConfigX509ConfigKeyUsageOutputWithContext(context.Context) GetAuthorityConfigX509ConfigKeyUsageOutput
}

type GetAuthorityConfigX509ConfigKeyUsageArgs struct {
	BaseKeyUsages            GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayInput            `pulumi:"baseKeyUsages"`
	ExtendedKeyUsages        GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayInput        `pulumi:"extendedKeyUsages"`
	UnknownExtendedKeyUsages GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput `pulumi:"unknownExtendedKeyUsages"`
}

func (GetAuthorityConfigX509ConfigKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigKeyUsageArgs) ToGetAuthorityConfigX509ConfigKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageOutput {
	return i.ToGetAuthorityConfigX509ConfigKeyUsageOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigKeyUsageArgs) ToGetAuthorityConfigX509ConfigKeyUsageOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigKeyUsageOutput)
}

// GetAuthorityConfigX509ConfigKeyUsageArrayInput is an input type that accepts GetAuthorityConfigX509ConfigKeyUsageArray and GetAuthorityConfigX509ConfigKeyUsageArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigKeyUsageArrayInput` via:
//
//          GetAuthorityConfigX509ConfigKeyUsageArray{ GetAuthorityConfigX509ConfigKeyUsageArgs{...} }
type GetAuthorityConfigX509ConfigKeyUsageArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageArrayOutput
	ToGetAuthorityConfigX509ConfigKeyUsageArrayOutputWithContext(context.Context) GetAuthorityConfigX509ConfigKeyUsageArrayOutput
}

type GetAuthorityConfigX509ConfigKeyUsageArray []GetAuthorityConfigX509ConfigKeyUsageInput

func (GetAuthorityConfigX509ConfigKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigKeyUsageArray) ToGetAuthorityConfigX509ConfigKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageArrayOutput {
	return i.ToGetAuthorityConfigX509ConfigKeyUsageArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigKeyUsageArray) ToGetAuthorityConfigX509ConfigKeyUsageArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigKeyUsageArrayOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigKeyUsageOutput) ToGetAuthorityConfigX509ConfigKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageOutput) ToGetAuthorityConfigX509ConfigKeyUsageOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageOutput) BaseKeyUsages() GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsage) []GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage {
		return v.BaseKeyUsages
	}).(GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageOutput) ExtendedKeyUsages() GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsage) []GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage {
		return v.ExtendedKeyUsages
	}).(GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageOutput) UnknownExtendedKeyUsages() GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsage) []GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage {
		return v.UnknownExtendedKeyUsages
	}).(GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigKeyUsage)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigKeyUsageArrayOutput) ToGetAuthorityConfigX509ConfigKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageArrayOutput) ToGetAuthorityConfigX509ConfigKeyUsageArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigX509ConfigKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigX509ConfigKeyUsage {
		return vs[0].([]GetAuthorityConfigX509ConfigKeyUsage)[vs[1].(int)]
	}).(GetAuthorityConfigX509ConfigKeyUsageOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage struct {
	CertSign          bool `pulumi:"certSign"`
	ContentCommitment bool `pulumi:"contentCommitment"`
	CrlSign           bool `pulumi:"crlSign"`
	DataEncipherment  bool `pulumi:"dataEncipherment"`
	DecipherOnly      bool `pulumi:"decipherOnly"`
	DigitalSignature  bool `pulumi:"digitalSignature"`
	EncipherOnly      bool `pulumi:"encipherOnly"`
	KeyAgreement      bool `pulumi:"keyAgreement"`
	KeyEncipherment   bool `pulumi:"keyEncipherment"`
}

// GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput is an input type that accepts GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs and GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput` via:
//
//          GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs{...}
type GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput
	ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(context.Context) GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput
}

type GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs struct {
	CertSign          pulumi.BoolInput `pulumi:"certSign"`
	ContentCommitment pulumi.BoolInput `pulumi:"contentCommitment"`
	CrlSign           pulumi.BoolInput `pulumi:"crlSign"`
	DataEncipherment  pulumi.BoolInput `pulumi:"dataEncipherment"`
	DecipherOnly      pulumi.BoolInput `pulumi:"decipherOnly"`
	DigitalSignature  pulumi.BoolInput `pulumi:"digitalSignature"`
	EncipherOnly      pulumi.BoolInput `pulumi:"encipherOnly"`
	KeyAgreement      pulumi.BoolInput `pulumi:"keyAgreement"`
	KeyEncipherment   pulumi.BoolInput `pulumi:"keyEncipherment"`
}

func (GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return i.ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs) ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput)
}

// GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayInput is an input type that accepts GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArray and GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayInput` via:
//
//          GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArray{ GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs{...} }
type GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput
	ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutputWithContext(context.Context) GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput
}

type GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArray []GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput

func (GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArray) ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput {
	return i.ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArray) ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) CertSign() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage) bool { return v.CertSign }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) ContentCommitment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage) bool { return v.ContentCommitment }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) CrlSign() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage) bool { return v.CrlSign }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) DataEncipherment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage) bool { return v.DataEncipherment }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) DecipherOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage) bool { return v.DecipherOnly }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) DigitalSignature() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage) bool { return v.DigitalSignature }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) EncipherOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage) bool { return v.EncipherOnly }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) KeyAgreement() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage) bool { return v.KeyAgreement }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput) KeyEncipherment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage) bool { return v.KeyEncipherment }).(pulumi.BoolOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput) ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput) ToGetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage {
		return vs[0].([]GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsage)[vs[1].(int)]
	}).(GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage struct {
	ClientAuth      bool `pulumi:"clientAuth"`
	CodeSigning     bool `pulumi:"codeSigning"`
	EmailProtection bool `pulumi:"emailProtection"`
	OcspSigning     bool `pulumi:"ocspSigning"`
	ServerAuth      bool `pulumi:"serverAuth"`
	TimeStamping    bool `pulumi:"timeStamping"`
}

// GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput is an input type that accepts GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs and GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput` via:
//
//          GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs{...}
type GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput
	ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(context.Context) GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput
}

type GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs struct {
	ClientAuth      pulumi.BoolInput `pulumi:"clientAuth"`
	CodeSigning     pulumi.BoolInput `pulumi:"codeSigning"`
	EmailProtection pulumi.BoolInput `pulumi:"emailProtection"`
	OcspSigning     pulumi.BoolInput `pulumi:"ocspSigning"`
	ServerAuth      pulumi.BoolInput `pulumi:"serverAuth"`
	TimeStamping    pulumi.BoolInput `pulumi:"timeStamping"`
}

func (GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return i.ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs) ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput)
}

// GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayInput is an input type that accepts GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArray and GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayInput` via:
//
//          GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArray{ GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs{...} }
type GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput
	ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutputWithContext(context.Context) GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput
}

type GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArray []GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput

func (GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArray) ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput {
	return i.ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArray) ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ClientAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) bool { return v.ClientAuth }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) CodeSigning() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) bool { return v.CodeSigning }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) EmailProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) bool { return v.EmailProtection }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) OcspSigning() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) bool { return v.OcspSigning }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) ServerAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) bool { return v.ServerAuth }).(pulumi.BoolOutput)
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput) TimeStamping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage) bool { return v.TimeStamping }).(pulumi.BoolOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput) ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput) ToGetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage {
		return vs[0].([]GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage)[vs[1].(int)]
	}).(GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage struct {
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput is an input type that accepts GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs and GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput` via:
//
//          GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs{...}
type GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput
	ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Context) GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput
}

type GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs struct {
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs) ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return i.ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs) ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput)
}

// GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput is an input type that accepts GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray and GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput` via:
//
//          GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray{ GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs{...} }
type GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput
	ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Context) GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput
}

type GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray []GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput

func (GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray) ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return i.ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray) ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput() GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput() GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) ToGetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage {
		return vs[0].([]GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsage)[vs[1].(int)]
	}).(GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput)
}

type GetAuthorityConfigX509ConfigPolicyId struct {
	ObjectIdPaths []int `pulumi:"objectIdPaths"`
}

// GetAuthorityConfigX509ConfigPolicyIdInput is an input type that accepts GetAuthorityConfigX509ConfigPolicyIdArgs and GetAuthorityConfigX509ConfigPolicyIdOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigPolicyIdInput` via:
//
//          GetAuthorityConfigX509ConfigPolicyIdArgs{...}
type GetAuthorityConfigX509ConfigPolicyIdInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigPolicyIdOutput() GetAuthorityConfigX509ConfigPolicyIdOutput
	ToGetAuthorityConfigX509ConfigPolicyIdOutputWithContext(context.Context) GetAuthorityConfigX509ConfigPolicyIdOutput
}

type GetAuthorityConfigX509ConfigPolicyIdArgs struct {
	ObjectIdPaths pulumi.IntArrayInput `pulumi:"objectIdPaths"`
}

func (GetAuthorityConfigX509ConfigPolicyIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigPolicyId)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigPolicyIdArgs) ToGetAuthorityConfigX509ConfigPolicyIdOutput() GetAuthorityConfigX509ConfigPolicyIdOutput {
	return i.ToGetAuthorityConfigX509ConfigPolicyIdOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigPolicyIdArgs) ToGetAuthorityConfigX509ConfigPolicyIdOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigPolicyIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigPolicyIdOutput)
}

// GetAuthorityConfigX509ConfigPolicyIdArrayInput is an input type that accepts GetAuthorityConfigX509ConfigPolicyIdArray and GetAuthorityConfigX509ConfigPolicyIdArrayOutput values.
// You can construct a concrete instance of `GetAuthorityConfigX509ConfigPolicyIdArrayInput` via:
//
//          GetAuthorityConfigX509ConfigPolicyIdArray{ GetAuthorityConfigX509ConfigPolicyIdArgs{...} }
type GetAuthorityConfigX509ConfigPolicyIdArrayInput interface {
	pulumi.Input

	ToGetAuthorityConfigX509ConfigPolicyIdArrayOutput() GetAuthorityConfigX509ConfigPolicyIdArrayOutput
	ToGetAuthorityConfigX509ConfigPolicyIdArrayOutputWithContext(context.Context) GetAuthorityConfigX509ConfigPolicyIdArrayOutput
}

type GetAuthorityConfigX509ConfigPolicyIdArray []GetAuthorityConfigX509ConfigPolicyIdInput

func (GetAuthorityConfigX509ConfigPolicyIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigPolicyId)(nil)).Elem()
}

func (i GetAuthorityConfigX509ConfigPolicyIdArray) ToGetAuthorityConfigX509ConfigPolicyIdArrayOutput() GetAuthorityConfigX509ConfigPolicyIdArrayOutput {
	return i.ToGetAuthorityConfigX509ConfigPolicyIdArrayOutputWithContext(context.Background())
}

func (i GetAuthorityConfigX509ConfigPolicyIdArray) ToGetAuthorityConfigX509ConfigPolicyIdArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigPolicyIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityConfigX509ConfigPolicyIdArrayOutput)
}

type GetAuthorityConfigX509ConfigPolicyIdOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigPolicyIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityConfigX509ConfigPolicyId)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigPolicyIdOutput) ToGetAuthorityConfigX509ConfigPolicyIdOutput() GetAuthorityConfigX509ConfigPolicyIdOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigPolicyIdOutput) ToGetAuthorityConfigX509ConfigPolicyIdOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigPolicyIdOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigPolicyIdOutput) ObjectIdPaths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAuthorityConfigX509ConfigPolicyId) []int { return v.ObjectIdPaths }).(pulumi.IntArrayOutput)
}

type GetAuthorityConfigX509ConfigPolicyIdArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityConfigX509ConfigPolicyIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityConfigX509ConfigPolicyId)(nil)).Elem()
}

func (o GetAuthorityConfigX509ConfigPolicyIdArrayOutput) ToGetAuthorityConfigX509ConfigPolicyIdArrayOutput() GetAuthorityConfigX509ConfigPolicyIdArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigPolicyIdArrayOutput) ToGetAuthorityConfigX509ConfigPolicyIdArrayOutputWithContext(ctx context.Context) GetAuthorityConfigX509ConfigPolicyIdArrayOutput {
	return o
}

func (o GetAuthorityConfigX509ConfigPolicyIdArrayOutput) Index(i pulumi.IntInput) GetAuthorityConfigX509ConfigPolicyIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityConfigX509ConfigPolicyId {
		return vs[0].([]GetAuthorityConfigX509ConfigPolicyId)[vs[1].(int)]
	}).(GetAuthorityConfigX509ConfigPolicyIdOutput)
}

type GetAuthorityKeySpec struct {
	Algorithm          string `pulumi:"algorithm"`
	CloudKmsKeyVersion string `pulumi:"cloudKmsKeyVersion"`
}

// GetAuthorityKeySpecInput is an input type that accepts GetAuthorityKeySpecArgs and GetAuthorityKeySpecOutput values.
// You can construct a concrete instance of `GetAuthorityKeySpecInput` via:
//
//          GetAuthorityKeySpecArgs{...}
type GetAuthorityKeySpecInput interface {
	pulumi.Input

	ToGetAuthorityKeySpecOutput() GetAuthorityKeySpecOutput
	ToGetAuthorityKeySpecOutputWithContext(context.Context) GetAuthorityKeySpecOutput
}

type GetAuthorityKeySpecArgs struct {
	Algorithm          pulumi.StringInput `pulumi:"algorithm"`
	CloudKmsKeyVersion pulumi.StringInput `pulumi:"cloudKmsKeyVersion"`
}

func (GetAuthorityKeySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityKeySpec)(nil)).Elem()
}

func (i GetAuthorityKeySpecArgs) ToGetAuthorityKeySpecOutput() GetAuthorityKeySpecOutput {
	return i.ToGetAuthorityKeySpecOutputWithContext(context.Background())
}

func (i GetAuthorityKeySpecArgs) ToGetAuthorityKeySpecOutputWithContext(ctx context.Context) GetAuthorityKeySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityKeySpecOutput)
}

// GetAuthorityKeySpecArrayInput is an input type that accepts GetAuthorityKeySpecArray and GetAuthorityKeySpecArrayOutput values.
// You can construct a concrete instance of `GetAuthorityKeySpecArrayInput` via:
//
//          GetAuthorityKeySpecArray{ GetAuthorityKeySpecArgs{...} }
type GetAuthorityKeySpecArrayInput interface {
	pulumi.Input

	ToGetAuthorityKeySpecArrayOutput() GetAuthorityKeySpecArrayOutput
	ToGetAuthorityKeySpecArrayOutputWithContext(context.Context) GetAuthorityKeySpecArrayOutput
}

type GetAuthorityKeySpecArray []GetAuthorityKeySpecInput

func (GetAuthorityKeySpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityKeySpec)(nil)).Elem()
}

func (i GetAuthorityKeySpecArray) ToGetAuthorityKeySpecArrayOutput() GetAuthorityKeySpecArrayOutput {
	return i.ToGetAuthorityKeySpecArrayOutputWithContext(context.Background())
}

func (i GetAuthorityKeySpecArray) ToGetAuthorityKeySpecArrayOutputWithContext(ctx context.Context) GetAuthorityKeySpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthorityKeySpecArrayOutput)
}

type GetAuthorityKeySpecOutput struct{ *pulumi.OutputState }

func (GetAuthorityKeySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorityKeySpec)(nil)).Elem()
}

func (o GetAuthorityKeySpecOutput) ToGetAuthorityKeySpecOutput() GetAuthorityKeySpecOutput {
	return o
}

func (o GetAuthorityKeySpecOutput) ToGetAuthorityKeySpecOutputWithContext(ctx context.Context) GetAuthorityKeySpecOutput {
	return o
}

func (o GetAuthorityKeySpecOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityKeySpec) string { return v.Algorithm }).(pulumi.StringOutput)
}

func (o GetAuthorityKeySpecOutput) CloudKmsKeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorityKeySpec) string { return v.CloudKmsKeyVersion }).(pulumi.StringOutput)
}

type GetAuthorityKeySpecArrayOutput struct{ *pulumi.OutputState }

func (GetAuthorityKeySpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthorityKeySpec)(nil)).Elem()
}

func (o GetAuthorityKeySpecArrayOutput) ToGetAuthorityKeySpecArrayOutput() GetAuthorityKeySpecArrayOutput {
	return o
}

func (o GetAuthorityKeySpecArrayOutput) ToGetAuthorityKeySpecArrayOutputWithContext(ctx context.Context) GetAuthorityKeySpecArrayOutput {
	return o
}

func (o GetAuthorityKeySpecArrayOutput) Index(i pulumi.IntInput) GetAuthorityKeySpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthorityKeySpec {
		return vs[0].([]GetAuthorityKeySpec)[vs[1].(int)]
	}).(GetAuthorityKeySpecOutput)
}

type GetAuthoritySubordinateConfig struct {
	CertificateAuthority string                                        `pulumi:"certificateAuthority"`
	PemIssuerChains      []GetAuthoritySubordinateConfigPemIssuerChain `pulumi:"pemIssuerChains"`
}

// GetAuthoritySubordinateConfigInput is an input type that accepts GetAuthoritySubordinateConfigArgs and GetAuthoritySubordinateConfigOutput values.
// You can construct a concrete instance of `GetAuthoritySubordinateConfigInput` via:
//
//          GetAuthoritySubordinateConfigArgs{...}
type GetAuthoritySubordinateConfigInput interface {
	pulumi.Input

	ToGetAuthoritySubordinateConfigOutput() GetAuthoritySubordinateConfigOutput
	ToGetAuthoritySubordinateConfigOutputWithContext(context.Context) GetAuthoritySubordinateConfigOutput
}

type GetAuthoritySubordinateConfigArgs struct {
	CertificateAuthority pulumi.StringInput                                    `pulumi:"certificateAuthority"`
	PemIssuerChains      GetAuthoritySubordinateConfigPemIssuerChainArrayInput `pulumi:"pemIssuerChains"`
}

func (GetAuthoritySubordinateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthoritySubordinateConfig)(nil)).Elem()
}

func (i GetAuthoritySubordinateConfigArgs) ToGetAuthoritySubordinateConfigOutput() GetAuthoritySubordinateConfigOutput {
	return i.ToGetAuthoritySubordinateConfigOutputWithContext(context.Background())
}

func (i GetAuthoritySubordinateConfigArgs) ToGetAuthoritySubordinateConfigOutputWithContext(ctx context.Context) GetAuthoritySubordinateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthoritySubordinateConfigOutput)
}

// GetAuthoritySubordinateConfigArrayInput is an input type that accepts GetAuthoritySubordinateConfigArray and GetAuthoritySubordinateConfigArrayOutput values.
// You can construct a concrete instance of `GetAuthoritySubordinateConfigArrayInput` via:
//
//          GetAuthoritySubordinateConfigArray{ GetAuthoritySubordinateConfigArgs{...} }
type GetAuthoritySubordinateConfigArrayInput interface {
	pulumi.Input

	ToGetAuthoritySubordinateConfigArrayOutput() GetAuthoritySubordinateConfigArrayOutput
	ToGetAuthoritySubordinateConfigArrayOutputWithContext(context.Context) GetAuthoritySubordinateConfigArrayOutput
}

type GetAuthoritySubordinateConfigArray []GetAuthoritySubordinateConfigInput

func (GetAuthoritySubordinateConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthoritySubordinateConfig)(nil)).Elem()
}

func (i GetAuthoritySubordinateConfigArray) ToGetAuthoritySubordinateConfigArrayOutput() GetAuthoritySubordinateConfigArrayOutput {
	return i.ToGetAuthoritySubordinateConfigArrayOutputWithContext(context.Background())
}

func (i GetAuthoritySubordinateConfigArray) ToGetAuthoritySubordinateConfigArrayOutputWithContext(ctx context.Context) GetAuthoritySubordinateConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthoritySubordinateConfigArrayOutput)
}

type GetAuthoritySubordinateConfigOutput struct{ *pulumi.OutputState }

func (GetAuthoritySubordinateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthoritySubordinateConfig)(nil)).Elem()
}

func (o GetAuthoritySubordinateConfigOutput) ToGetAuthoritySubordinateConfigOutput() GetAuthoritySubordinateConfigOutput {
	return o
}

func (o GetAuthoritySubordinateConfigOutput) ToGetAuthoritySubordinateConfigOutputWithContext(ctx context.Context) GetAuthoritySubordinateConfigOutput {
	return o
}

func (o GetAuthoritySubordinateConfigOutput) CertificateAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthoritySubordinateConfig) string { return v.CertificateAuthority }).(pulumi.StringOutput)
}

func (o GetAuthoritySubordinateConfigOutput) PemIssuerChains() GetAuthoritySubordinateConfigPemIssuerChainArrayOutput {
	return o.ApplyT(func(v GetAuthoritySubordinateConfig) []GetAuthoritySubordinateConfigPemIssuerChain {
		return v.PemIssuerChains
	}).(GetAuthoritySubordinateConfigPemIssuerChainArrayOutput)
}

type GetAuthoritySubordinateConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAuthoritySubordinateConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthoritySubordinateConfig)(nil)).Elem()
}

func (o GetAuthoritySubordinateConfigArrayOutput) ToGetAuthoritySubordinateConfigArrayOutput() GetAuthoritySubordinateConfigArrayOutput {
	return o
}

func (o GetAuthoritySubordinateConfigArrayOutput) ToGetAuthoritySubordinateConfigArrayOutputWithContext(ctx context.Context) GetAuthoritySubordinateConfigArrayOutput {
	return o
}

func (o GetAuthoritySubordinateConfigArrayOutput) Index(i pulumi.IntInput) GetAuthoritySubordinateConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthoritySubordinateConfig {
		return vs[0].([]GetAuthoritySubordinateConfig)[vs[1].(int)]
	}).(GetAuthoritySubordinateConfigOutput)
}

type GetAuthoritySubordinateConfigPemIssuerChain struct {
	PemCertificates []string `pulumi:"pemCertificates"`
}

// GetAuthoritySubordinateConfigPemIssuerChainInput is an input type that accepts GetAuthoritySubordinateConfigPemIssuerChainArgs and GetAuthoritySubordinateConfigPemIssuerChainOutput values.
// You can construct a concrete instance of `GetAuthoritySubordinateConfigPemIssuerChainInput` via:
//
//          GetAuthoritySubordinateConfigPemIssuerChainArgs{...}
type GetAuthoritySubordinateConfigPemIssuerChainInput interface {
	pulumi.Input

	ToGetAuthoritySubordinateConfigPemIssuerChainOutput() GetAuthoritySubordinateConfigPemIssuerChainOutput
	ToGetAuthoritySubordinateConfigPemIssuerChainOutputWithContext(context.Context) GetAuthoritySubordinateConfigPemIssuerChainOutput
}

type GetAuthoritySubordinateConfigPemIssuerChainArgs struct {
	PemCertificates pulumi.StringArrayInput `pulumi:"pemCertificates"`
}

func (GetAuthoritySubordinateConfigPemIssuerChainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthoritySubordinateConfigPemIssuerChain)(nil)).Elem()
}

func (i GetAuthoritySubordinateConfigPemIssuerChainArgs) ToGetAuthoritySubordinateConfigPemIssuerChainOutput() GetAuthoritySubordinateConfigPemIssuerChainOutput {
	return i.ToGetAuthoritySubordinateConfigPemIssuerChainOutputWithContext(context.Background())
}

func (i GetAuthoritySubordinateConfigPemIssuerChainArgs) ToGetAuthoritySubordinateConfigPemIssuerChainOutputWithContext(ctx context.Context) GetAuthoritySubordinateConfigPemIssuerChainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthoritySubordinateConfigPemIssuerChainOutput)
}

// GetAuthoritySubordinateConfigPemIssuerChainArrayInput is an input type that accepts GetAuthoritySubordinateConfigPemIssuerChainArray and GetAuthoritySubordinateConfigPemIssuerChainArrayOutput values.
// You can construct a concrete instance of `GetAuthoritySubordinateConfigPemIssuerChainArrayInput` via:
//
//          GetAuthoritySubordinateConfigPemIssuerChainArray{ GetAuthoritySubordinateConfigPemIssuerChainArgs{...} }
type GetAuthoritySubordinateConfigPemIssuerChainArrayInput interface {
	pulumi.Input

	ToGetAuthoritySubordinateConfigPemIssuerChainArrayOutput() GetAuthoritySubordinateConfigPemIssuerChainArrayOutput
	ToGetAuthoritySubordinateConfigPemIssuerChainArrayOutputWithContext(context.Context) GetAuthoritySubordinateConfigPemIssuerChainArrayOutput
}

type GetAuthoritySubordinateConfigPemIssuerChainArray []GetAuthoritySubordinateConfigPemIssuerChainInput

func (GetAuthoritySubordinateConfigPemIssuerChainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthoritySubordinateConfigPemIssuerChain)(nil)).Elem()
}

func (i GetAuthoritySubordinateConfigPemIssuerChainArray) ToGetAuthoritySubordinateConfigPemIssuerChainArrayOutput() GetAuthoritySubordinateConfigPemIssuerChainArrayOutput {
	return i.ToGetAuthoritySubordinateConfigPemIssuerChainArrayOutputWithContext(context.Background())
}

func (i GetAuthoritySubordinateConfigPemIssuerChainArray) ToGetAuthoritySubordinateConfigPemIssuerChainArrayOutputWithContext(ctx context.Context) GetAuthoritySubordinateConfigPemIssuerChainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAuthoritySubordinateConfigPemIssuerChainArrayOutput)
}

type GetAuthoritySubordinateConfigPemIssuerChainOutput struct{ *pulumi.OutputState }

func (GetAuthoritySubordinateConfigPemIssuerChainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthoritySubordinateConfigPemIssuerChain)(nil)).Elem()
}

func (o GetAuthoritySubordinateConfigPemIssuerChainOutput) ToGetAuthoritySubordinateConfigPemIssuerChainOutput() GetAuthoritySubordinateConfigPemIssuerChainOutput {
	return o
}

func (o GetAuthoritySubordinateConfigPemIssuerChainOutput) ToGetAuthoritySubordinateConfigPemIssuerChainOutputWithContext(ctx context.Context) GetAuthoritySubordinateConfigPemIssuerChainOutput {
	return o
}

func (o GetAuthoritySubordinateConfigPemIssuerChainOutput) PemCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAuthoritySubordinateConfigPemIssuerChain) []string { return v.PemCertificates }).(pulumi.StringArrayOutput)
}

type GetAuthoritySubordinateConfigPemIssuerChainArrayOutput struct{ *pulumi.OutputState }

func (GetAuthoritySubordinateConfigPemIssuerChainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAuthoritySubordinateConfigPemIssuerChain)(nil)).Elem()
}

func (o GetAuthoritySubordinateConfigPemIssuerChainArrayOutput) ToGetAuthoritySubordinateConfigPemIssuerChainArrayOutput() GetAuthoritySubordinateConfigPemIssuerChainArrayOutput {
	return o
}

func (o GetAuthoritySubordinateConfigPemIssuerChainArrayOutput) ToGetAuthoritySubordinateConfigPemIssuerChainArrayOutputWithContext(ctx context.Context) GetAuthoritySubordinateConfigPemIssuerChainArrayOutput {
	return o
}

func (o GetAuthoritySubordinateConfigPemIssuerChainArrayOutput) Index(i pulumi.IntInput) GetAuthoritySubordinateConfigPemIssuerChainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAuthoritySubordinateConfigPemIssuerChain {
		return vs[0].([]GetAuthoritySubordinateConfigPemIssuerChain)[vs[1].(int)]
	}).(GetAuthoritySubordinateConfigPemIssuerChainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityAccessUrlInput)(nil)).Elem(), AuthorityAccessUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityAccessUrlArrayInput)(nil)).Elem(), AuthorityAccessUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigInput)(nil)).Elem(), AuthorityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigPtrInput)(nil)).Elem(), AuthorityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigSubjectConfigInput)(nil)).Elem(), AuthorityConfigSubjectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigSubjectConfigPtrInput)(nil)).Elem(), AuthorityConfigSubjectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigSubjectConfigSubjectInput)(nil)).Elem(), AuthorityConfigSubjectConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigSubjectConfigSubjectPtrInput)(nil)).Elem(), AuthorityConfigSubjectConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigSubjectConfigSubjectAltNameInput)(nil)).Elem(), AuthorityConfigSubjectConfigSubjectAltNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigSubjectConfigSubjectAltNamePtrInput)(nil)).Elem(), AuthorityConfigSubjectConfigSubjectAltNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigInput)(nil)).Elem(), AuthorityConfigX509ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigPtrInput)(nil)).Elem(), AuthorityConfigX509ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigAdditionalExtensionInput)(nil)).Elem(), AuthorityConfigX509ConfigAdditionalExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigAdditionalExtensionArrayInput)(nil)).Elem(), AuthorityConfigX509ConfigAdditionalExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigAdditionalExtensionObjectIdInput)(nil)).Elem(), AuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigCaOptionsInput)(nil)).Elem(), AuthorityConfigX509ConfigCaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigCaOptionsPtrInput)(nil)).Elem(), AuthorityConfigX509ConfigCaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageInput)(nil)).Elem(), AuthorityConfigX509ConfigKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsagePtrInput)(nil)).Elem(), AuthorityConfigX509ConfigKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput)(nil)).Elem(), AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrInput)(nil)).Elem(), AuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput)(nil)).Elem(), AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput)(nil)).Elem(), AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput)(nil)).Elem(), AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput)(nil)).Elem(), AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigPolicyIdInput)(nil)).Elem(), AuthorityConfigX509ConfigPolicyIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityConfigX509ConfigPolicyIdArrayInput)(nil)).Elem(), AuthorityConfigX509ConfigPolicyIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityKeySpecInput)(nil)).Elem(), AuthorityKeySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityKeySpecPtrInput)(nil)).Elem(), AuthorityKeySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthoritySubordinateConfigInput)(nil)).Elem(), AuthoritySubordinateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthoritySubordinateConfigPtrInput)(nil)).Elem(), AuthoritySubordinateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthoritySubordinateConfigPemIssuerChainInput)(nil)).Elem(), AuthoritySubordinateConfigPemIssuerChainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthoritySubordinateConfigPemIssuerChainPtrInput)(nil)).Elem(), AuthoritySubordinateConfigPemIssuerChainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIamBindingConditionInput)(nil)).Elem(), CaPoolIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIamBindingConditionPtrInput)(nil)).Elem(), CaPoolIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIamMemberConditionInput)(nil)).Elem(), CaPoolIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIamMemberConditionPtrInput)(nil)).Elem(), CaPoolIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyInput)(nil)).Elem(), CaPoolIssuancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyPtrInput)(nil)).Elem(), CaPoolIssuancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyAllowedIssuanceModesInput)(nil)).Elem(), CaPoolIssuancePolicyAllowedIssuanceModesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyAllowedIssuanceModesPtrInput)(nil)).Elem(), CaPoolIssuancePolicyAllowedIssuanceModesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeInput)(nil)).Elem(), CaPoolIssuancePolicyAllowedKeyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeArrayInput)(nil)).Elem(), CaPoolIssuancePolicyAllowedKeyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveInput)(nil)).Elem(), CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrInput)(nil)).Elem(), CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeRsaInput)(nil)).Elem(), CaPoolIssuancePolicyAllowedKeyTypeRsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyAllowedKeyTypeRsaPtrInput)(nil)).Elem(), CaPoolIssuancePolicyAllowedKeyTypeRsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesPtrInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesAdditionalExtensionInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesCaOptionsInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesCaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesCaOptionsPtrInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesCaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsagePtrInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesPolicyIdInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesPolicyIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyBaselineValuesPolicyIdArrayInput)(nil)).Elem(), CaPoolIssuancePolicyBaselineValuesPolicyIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyIdentityConstraintsInput)(nil)).Elem(), CaPoolIssuancePolicyIdentityConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyIdentityConstraintsPtrInput)(nil)).Elem(), CaPoolIssuancePolicyIdentityConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyIdentityConstraintsCelExpressionInput)(nil)).Elem(), CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrInput)(nil)).Elem(), CaPoolIssuancePolicyIdentityConstraintsCelExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolPublishingOptionsInput)(nil)).Elem(), CaPoolPublishingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaPoolPublishingOptionsPtrInput)(nil)).Elem(), CaPoolPublishingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionInput)(nil)).Elem(), CertificateCertificateDescriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionArrayInput)(nil)).Elem(), CertificateCertificateDescriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionAuthorityKeyIdInput)(nil)).Elem(), CertificateCertificateDescriptionAuthorityKeyIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionAuthorityKeyIdArrayInput)(nil)).Elem(), CertificateCertificateDescriptionAuthorityKeyIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionCertFingerprintInput)(nil)).Elem(), CertificateCertificateDescriptionCertFingerprintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionCertFingerprintArrayInput)(nil)).Elem(), CertificateCertificateDescriptionCertFingerprintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueArrayInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageArrayInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayInput)(nil)).Elem(), CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionPublicKeyInput)(nil)).Elem(), CertificateCertificateDescriptionPublicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionPublicKeyArrayInput)(nil)).Elem(), CertificateCertificateDescriptionPublicKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionArrayInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectArrayInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectKeyIdInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectKeyIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionSubjectKeyIdArrayInput)(nil)).Elem(), CertificateCertificateDescriptionSubjectKeyIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionArrayInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionAdditionalExtensionInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionCaOptionInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionCaOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionCaOptionArrayInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionCaOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageArrayInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionPolicyIdInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionPolicyIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateDescriptionX509DescriptionPolicyIdArrayInput)(nil)).Elem(), CertificateCertificateDescriptionX509DescriptionPolicyIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigInput)(nil)).Elem(), CertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigPtrInput)(nil)).Elem(), CertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigPublicKeyInput)(nil)).Elem(), CertificateConfigPublicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigPublicKeyPtrInput)(nil)).Elem(), CertificateConfigPublicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigSubjectConfigInput)(nil)).Elem(), CertificateConfigSubjectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigSubjectConfigPtrInput)(nil)).Elem(), CertificateConfigSubjectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigSubjectConfigSubjectInput)(nil)).Elem(), CertificateConfigSubjectConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigSubjectConfigSubjectPtrInput)(nil)).Elem(), CertificateConfigSubjectConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigSubjectConfigSubjectAltNameInput)(nil)).Elem(), CertificateConfigSubjectConfigSubjectAltNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigSubjectConfigSubjectAltNamePtrInput)(nil)).Elem(), CertificateConfigSubjectConfigSubjectAltNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigInput)(nil)).Elem(), CertificateConfigX509ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigPtrInput)(nil)).Elem(), CertificateConfigX509ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigAdditionalExtensionInput)(nil)).Elem(), CertificateConfigX509ConfigAdditionalExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigAdditionalExtensionArrayInput)(nil)).Elem(), CertificateConfigX509ConfigAdditionalExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigAdditionalExtensionObjectIdInput)(nil)).Elem(), CertificateConfigX509ConfigAdditionalExtensionObjectIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigCaOptionsInput)(nil)).Elem(), CertificateConfigX509ConfigCaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigCaOptionsPtrInput)(nil)).Elem(), CertificateConfigX509ConfigCaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageInput)(nil)).Elem(), CertificateConfigX509ConfigKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigKeyUsagePtrInput)(nil)).Elem(), CertificateConfigX509ConfigKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageBaseKeyUsageInput)(nil)).Elem(), CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrInput)(nil)).Elem(), CertificateConfigX509ConfigKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageExtendedKeyUsageInput)(nil)).Elem(), CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrInput)(nil)).Elem(), CertificateConfigX509ConfigKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput)(nil)).Elem(), CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput)(nil)).Elem(), CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigPolicyIdInput)(nil)).Elem(), CertificateConfigX509ConfigPolicyIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateConfigX509ConfigPolicyIdArrayInput)(nil)).Elem(), CertificateConfigX509ConfigPolicyIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateRevocationDetailInput)(nil)).Elem(), CertificateRevocationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateRevocationDetailArrayInput)(nil)).Elem(), CertificateRevocationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplateIamBindingConditionInput)(nil)).Elem(), CertificateTemplateIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplateIamBindingConditionPtrInput)(nil)).Elem(), CertificateTemplateIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplateIamMemberConditionInput)(nil)).Elem(), CertificateTemplateIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplateIamMemberConditionPtrInput)(nil)).Elem(), CertificateTemplateIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplateIdentityConstraintsInput)(nil)).Elem(), CertificateTemplateIdentityConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplateIdentityConstraintsPtrInput)(nil)).Elem(), CertificateTemplateIdentityConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplateIdentityConstraintsCelExpressionInput)(nil)).Elem(), CertificateTemplateIdentityConstraintsCelExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplateIdentityConstraintsCelExpressionPtrInput)(nil)).Elem(), CertificateTemplateIdentityConstraintsCelExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePassthroughExtensionsInput)(nil)).Elem(), CertificateTemplatePassthroughExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePassthroughExtensionsPtrInput)(nil)).Elem(), CertificateTemplatePassthroughExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePassthroughExtensionsAdditionalExtensionInput)(nil)).Elem(), CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayInput)(nil)).Elem(), CertificateTemplatePassthroughExtensionsAdditionalExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesInput)(nil)).Elem(), CertificateTemplatePredefinedValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesPtrInput)(nil)).Elem(), CertificateTemplatePredefinedValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesAdditionalExtensionInput)(nil)).Elem(), CertificateTemplatePredefinedValuesAdditionalExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesAdditionalExtensionArrayInput)(nil)).Elem(), CertificateTemplatePredefinedValuesAdditionalExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdInput)(nil)).Elem(), CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesCaOptionsInput)(nil)).Elem(), CertificateTemplatePredefinedValuesCaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesCaOptionsPtrInput)(nil)).Elem(), CertificateTemplatePredefinedValuesCaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageInput)(nil)).Elem(), CertificateTemplatePredefinedValuesKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsagePtrInput)(nil)).Elem(), CertificateTemplatePredefinedValuesKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageInput)(nil)).Elem(), CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrInput)(nil)).Elem(), CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageInput)(nil)).Elem(), CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrInput)(nil)).Elem(), CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageInput)(nil)).Elem(), CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayInput)(nil)).Elem(), CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesPolicyIdInput)(nil)).Elem(), CertificateTemplatePredefinedValuesPolicyIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTemplatePredefinedValuesPolicyIdArrayInput)(nil)).Elem(), CertificateTemplatePredefinedValuesPolicyIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityAccessUrlInput)(nil)).Elem(), GetAuthorityAccessUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityAccessUrlArrayInput)(nil)).Elem(), GetAuthorityAccessUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigInput)(nil)).Elem(), GetAuthorityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigArrayInput)(nil)).Elem(), GetAuthorityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigSubjectConfigInput)(nil)).Elem(), GetAuthorityConfigSubjectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigSubjectConfigArrayInput)(nil)).Elem(), GetAuthorityConfigSubjectConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigSubjectConfigSubjectInput)(nil)).Elem(), GetAuthorityConfigSubjectConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigSubjectConfigSubjectArrayInput)(nil)).Elem(), GetAuthorityConfigSubjectConfigSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigSubjectConfigSubjectAltNameInput)(nil)).Elem(), GetAuthorityConfigSubjectConfigSubjectAltNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigSubjectConfigSubjectAltNameArrayInput)(nil)).Elem(), GetAuthorityConfigSubjectConfigSubjectAltNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigInput)(nil)).Elem(), GetAuthorityConfigX509ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigArrayInput)(nil)).Elem(), GetAuthorityConfigX509ConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigAdditionalExtensionInput)(nil)).Elem(), GetAuthorityConfigX509ConfigAdditionalExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigAdditionalExtensionArrayInput)(nil)).Elem(), GetAuthorityConfigX509ConfigAdditionalExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdInput)(nil)).Elem(), GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayInput)(nil)).Elem(), GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigCaOptionInput)(nil)).Elem(), GetAuthorityConfigX509ConfigCaOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigCaOptionArrayInput)(nil)).Elem(), GetAuthorityConfigX509ConfigCaOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageInput)(nil)).Elem(), GetAuthorityConfigX509ConfigKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageArrayInput)(nil)).Elem(), GetAuthorityConfigX509ConfigKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageInput)(nil)).Elem(), GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayInput)(nil)).Elem(), GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageInput)(nil)).Elem(), GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayInput)(nil)).Elem(), GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageInput)(nil)).Elem(), GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayInput)(nil)).Elem(), GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigPolicyIdInput)(nil)).Elem(), GetAuthorityConfigX509ConfigPolicyIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityConfigX509ConfigPolicyIdArrayInput)(nil)).Elem(), GetAuthorityConfigX509ConfigPolicyIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityKeySpecInput)(nil)).Elem(), GetAuthorityKeySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthorityKeySpecArrayInput)(nil)).Elem(), GetAuthorityKeySpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthoritySubordinateConfigInput)(nil)).Elem(), GetAuthoritySubordinateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthoritySubordinateConfigArrayInput)(nil)).Elem(), GetAuthoritySubordinateConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthoritySubordinateConfigPemIssuerChainInput)(nil)).Elem(), GetAuthoritySubordinateConfigPemIssuerChainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAuthoritySubordinateConfigPemIssuerChainArrayInput)(nil)).Elem(), GetAuthoritySubordinateConfigPemIssuerChainArray{})
	pulumi.RegisterOutputType(AuthorityAccessUrlOutput{})
	pulumi.RegisterOutputType(AuthorityAccessUrlArrayOutput{})
	pulumi.RegisterOutputType(AuthorityConfigOutput{})
	pulumi.RegisterOutputType(AuthorityConfigPtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigPtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigSubjectOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigSubjectPtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigSubjectAltNameOutput{})
	pulumi.RegisterOutputType(AuthorityConfigSubjectConfigSubjectAltNamePtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigPtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigAdditionalExtensionOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigAdditionalExtensionArrayOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigCaOptionsOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigCaOptionsPtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigKeyUsageOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigPolicyIdOutput{})
	pulumi.RegisterOutputType(AuthorityConfigX509ConfigPolicyIdArrayOutput{})
	pulumi.RegisterOutputType(AuthorityKeySpecOutput{})
	pulumi.RegisterOutputType(AuthorityKeySpecPtrOutput{})
	pulumi.RegisterOutputType(AuthoritySubordinateConfigOutput{})
	pulumi.RegisterOutputType(AuthoritySubordinateConfigPtrOutput{})
	pulumi.RegisterOutputType(AuthoritySubordinateConfigPemIssuerChainOutput{})
	pulumi.RegisterOutputType(AuthoritySubordinateConfigPemIssuerChainPtrOutput{})
	pulumi.RegisterOutputType(CaPoolIamBindingConditionOutput{})
	pulumi.RegisterOutputType(CaPoolIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(CaPoolIamMemberConditionOutput{})
	pulumi.RegisterOutputType(CaPoolIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyPtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyAllowedIssuanceModesOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyAllowedIssuanceModesPtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyAllowedKeyTypeOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyAllowedKeyTypeArrayOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyAllowedKeyTypeEllipticCurveOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyAllowedKeyTypeEllipticCurvePtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyAllowedKeyTypeRsaOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyAllowedKeyTypeRsaPtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesPtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionArrayOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesAdditionalExtensionObjectIdOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesCaOptionsOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesCaOptionsPtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesKeyUsageOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsageOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesKeyUsageBaseKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesKeyUsageExtendedKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesKeyUsageUnknownExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesPolicyIdOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyBaselineValuesPolicyIdArrayOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyIdentityConstraintsOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyIdentityConstraintsPtrOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyIdentityConstraintsCelExpressionOutput{})
	pulumi.RegisterOutputType(CaPoolIssuancePolicyIdentityConstraintsCelExpressionPtrOutput{})
	pulumi.RegisterOutputType(CaPoolPublishingOptionsOutput{})
	pulumi.RegisterOutputType(CaPoolPublishingOptionsPtrOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionAuthorityKeyIdOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionAuthorityKeyIdArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionCertFingerprintOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionCertFingerprintArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageBaseKeyUsageKeyUsageOptionArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionConfigValueKeyUsageUnknownExtendedKeyUsageObectIdArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionPublicKeyOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionSubjectOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionSubjectArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectDescriptionSubjectAltNameCustomSanObectIdArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectKeyIdOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionSubjectKeyIdArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionAdditionalExtensionObjectIdArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionCaOptionOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionCaOptionArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionKeyUsageBaseKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionKeyUsageExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionKeyUsageUnknownExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionPolicyIdOutput{})
	pulumi.RegisterOutputType(CertificateCertificateDescriptionX509DescriptionPolicyIdArrayOutput{})
	pulumi.RegisterOutputType(CertificateConfigOutput{})
	pulumi.RegisterOutputType(CertificateConfigPtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigPublicKeyOutput{})
	pulumi.RegisterOutputType(CertificateConfigPublicKeyPtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigSubjectConfigOutput{})
	pulumi.RegisterOutputType(CertificateConfigSubjectConfigPtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigSubjectConfigSubjectOutput{})
	pulumi.RegisterOutputType(CertificateConfigSubjectConfigSubjectPtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigSubjectConfigSubjectAltNameOutput{})
	pulumi.RegisterOutputType(CertificateConfigSubjectConfigSubjectAltNamePtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigPtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigAdditionalExtensionOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigAdditionalExtensionArrayOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigAdditionalExtensionObjectIdOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigCaOptionsOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigCaOptionsPtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigKeyUsageBaseKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigKeyUsageBaseKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigKeyUsageExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigKeyUsageExtendedKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigPolicyIdOutput{})
	pulumi.RegisterOutputType(CertificateConfigX509ConfigPolicyIdArrayOutput{})
	pulumi.RegisterOutputType(CertificateRevocationDetailOutput{})
	pulumi.RegisterOutputType(CertificateRevocationDetailArrayOutput{})
	pulumi.RegisterOutputType(CertificateTemplateIamBindingConditionOutput{})
	pulumi.RegisterOutputType(CertificateTemplateIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplateIamMemberConditionOutput{})
	pulumi.RegisterOutputType(CertificateTemplateIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplateIdentityConstraintsOutput{})
	pulumi.RegisterOutputType(CertificateTemplateIdentityConstraintsPtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplateIdentityConstraintsCelExpressionOutput{})
	pulumi.RegisterOutputType(CertificateTemplateIdentityConstraintsCelExpressionPtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePassthroughExtensionsOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePassthroughExtensionsPtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePassthroughExtensionsAdditionalExtensionOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePassthroughExtensionsAdditionalExtensionArrayOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesPtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesAdditionalExtensionOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesAdditionalExtensionArrayOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesAdditionalExtensionObjectIdOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesCaOptionsOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesCaOptionsPtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesKeyUsageBaseKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesKeyUsageExtendedKeyUsagePtrOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesKeyUsageUnknownExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesPolicyIdOutput{})
	pulumi.RegisterOutputType(CertificateTemplatePredefinedValuesPolicyIdArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityAccessUrlOutput{})
	pulumi.RegisterOutputType(GetAuthorityAccessUrlArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigSubjectConfigOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigSubjectConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigSubjectConfigSubjectOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigSubjectConfigSubjectArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigSubjectConfigSubjectAltNameOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigSubjectConfigSubjectAltNameArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigAdditionalExtensionOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigAdditionalExtensionArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigAdditionalExtensionObjectIdArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigCaOptionOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigCaOptionArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigKeyUsageOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigKeyUsageBaseKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigKeyUsageUnknownExtendedKeyUsageArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigPolicyIdOutput{})
	pulumi.RegisterOutputType(GetAuthorityConfigX509ConfigPolicyIdArrayOutput{})
	pulumi.RegisterOutputType(GetAuthorityKeySpecOutput{})
	pulumi.RegisterOutputType(GetAuthorityKeySpecArrayOutput{})
	pulumi.RegisterOutputType(GetAuthoritySubordinateConfigOutput{})
	pulumi.RegisterOutputType(GetAuthoritySubordinateConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAuthoritySubordinateConfigPemIssuerChainOutput{})
	pulumi.RegisterOutputType(GetAuthoritySubordinateConfigPemIssuerChainArrayOutput{})
}
