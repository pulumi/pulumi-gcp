// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package colab

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for runtimetemplate
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/colab"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := colab.LookupRuntimeTemplateIamPolicy(ctx, &colab.LookupRuntimeTemplateIamPolicyArgs{
//				Project:         pulumi.StringRef(runtime_template.Project),
//				Location:        pulumi.StringRef(runtime_template.Location),
//				RuntimeTemplate: runtime_template.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRuntimeTemplateIamPolicy(ctx *pulumi.Context, args *LookupRuntimeTemplateIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupRuntimeTemplateIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRuntimeTemplateIamPolicyResult
	err := ctx.Invoke("gcp:colab/getRuntimeTemplateIamPolicy:getRuntimeTemplateIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuntimeTemplateIamPolicy.
type LookupRuntimeTemplateIamPolicyArgs struct {
	// The location for the resource: https://cloud.google.com/colab/docs/locations Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	RuntimeTemplate string `pulumi:"runtimeTemplate"`
}

// A collection of values returned by getRuntimeTemplateIamPolicy.
type LookupRuntimeTemplateIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// (Required only by `colab.RuntimeTemplateIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData      string `pulumi:"policyData"`
	Project         string `pulumi:"project"`
	RuntimeTemplate string `pulumi:"runtimeTemplate"`
}

func LookupRuntimeTemplateIamPolicyOutput(ctx *pulumi.Context, args LookupRuntimeTemplateIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupRuntimeTemplateIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRuntimeTemplateIamPolicyResultOutput, error) {
			args := v.(LookupRuntimeTemplateIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:colab/getRuntimeTemplateIamPolicy:getRuntimeTemplateIamPolicy", args, LookupRuntimeTemplateIamPolicyResultOutput{}, options).(LookupRuntimeTemplateIamPolicyResultOutput), nil
		}).(LookupRuntimeTemplateIamPolicyResultOutput)
}

// A collection of arguments for invoking getRuntimeTemplateIamPolicy.
type LookupRuntimeTemplateIamPolicyOutputArgs struct {
	// The location for the resource: https://cloud.google.com/colab/docs/locations Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	RuntimeTemplate pulumi.StringInput `pulumi:"runtimeTemplate"`
}

func (LookupRuntimeTemplateIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuntimeTemplateIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getRuntimeTemplateIamPolicy.
type LookupRuntimeTemplateIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupRuntimeTemplateIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuntimeTemplateIamPolicyResult)(nil)).Elem()
}

func (o LookupRuntimeTemplateIamPolicyResultOutput) ToLookupRuntimeTemplateIamPolicyResultOutput() LookupRuntimeTemplateIamPolicyResultOutput {
	return o
}

func (o LookupRuntimeTemplateIamPolicyResultOutput) ToLookupRuntimeTemplateIamPolicyResultOutputWithContext(ctx context.Context) LookupRuntimeTemplateIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupRuntimeTemplateIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeTemplateIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRuntimeTemplateIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeTemplateIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRuntimeTemplateIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeTemplateIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

// (Required only by `colab.RuntimeTemplateIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupRuntimeTemplateIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeTemplateIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupRuntimeTemplateIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeTemplateIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupRuntimeTemplateIamPolicyResultOutput) RuntimeTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRuntimeTemplateIamPolicyResult) string { return v.RuntimeTemplate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRuntimeTemplateIamPolicyResultOutput{})
}
