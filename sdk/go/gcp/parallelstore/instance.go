// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package parallelstore

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Parallelstore Instance Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/compute"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/parallelstore"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/servicenetworking"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			network, err := compute.NewNetwork(ctx, "network", &compute.NetworkArgs{
//				Name:                  pulumi.String("network"),
//				AutoCreateSubnetworks: pulumi.Bool(true),
//				Mtu:                   pulumi.Int(8896),
//			})
//			if err != nil {
//				return err
//			}
//			// Create an IP address
//			privateIpAlloc, err := compute.NewGlobalAddress(ctx, "private_ip_alloc", &compute.GlobalAddressArgs{
//				Name:         pulumi.String("address"),
//				Purpose:      pulumi.String("VPC_PEERING"),
//				AddressType:  pulumi.String("INTERNAL"),
//				PrefixLength: pulumi.Int(24),
//				Network:      network.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			// Create a private connection
//			_, err = servicenetworking.NewConnection(ctx, "default", &servicenetworking.ConnectionArgs{
//				Network: network.ID(),
//				Service: pulumi.String("servicenetworking.googleapis.com"),
//				ReservedPeeringRanges: pulumi.StringArray{
//					privateIpAlloc.Name,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = parallelstore.NewInstance(ctx, "instance", &parallelstore.InstanceArgs{
//				InstanceId:           pulumi.String("instance"),
//				Location:             pulumi.String("us-central1-a"),
//				Description:          pulumi.String("test instance"),
//				CapacityGib:          pulumi.String("12000"),
//				Network:              network.Name,
//				FileStripeLevel:      pulumi.String("FILE_STRIPE_LEVEL_MIN"),
//				DirectoryStripeLevel: pulumi.String("DIRECTORY_STRIPE_LEVEL_MIN"),
//				Labels: pulumi.StringMap{
//					"test": pulumi.String("value"),
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				_default,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Instance can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/{{location}}/instances/{{instance_id}}`
//
// * `{{project}}/{{location}}/{{instance_id}}`
//
// * `{{location}}/{{instance_id}}`
//
// When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:parallelstore/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
// ```
//
// ```sh
// $ pulumi import gcp:parallelstore/instance:Instance default {{project}}/{{location}}/{{instance_id}}
// ```
//
// ```sh
// $ pulumi import gcp:parallelstore/instance:Instance default {{location}}/{{instance_id}}
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Output only. List of access_points.
	// Contains a list of IPv4 addresses used for client side configuration.
	AccessPoints pulumi.StringArrayOutput `pulumi:"accessPoints"`
	// Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
	CapacityGib pulumi.StringOutput `pulumi:"capacityGib"`
	// The time when the instance was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The version of DAOS software running in the instance
	DaosVersion pulumi.StringOutput `pulumi:"daosVersion"`
	// The description of the instance. 2048 characters or less.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Stripe level for directories.
	// MIN when directory has a small number of files.
	// MAX when directory has a large number of files.
	// Possible values:
	// DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
	// DIRECTORY_STRIPE_LEVEL_MIN
	// DIRECTORY_STRIPE_LEVEL_BALANCED
	// DIRECTORY_STRIPE_LEVEL_MAX
	DirectoryStripeLevel pulumi.StringPtrOutput `pulumi:"directoryStripeLevel"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Immutable. Contains the id of the allocated IP address range associated with the
	// private service access connection for example, "test-default" associated
	// with IP range 10.0.0.0/29. This field is populated by the service and
	// and contains the value currently used by the service.
	EffectiveReservedIpRange pulumi.StringOutput `pulumi:"effectiveReservedIpRange"`
	// Stripe level for files.
	// MIN better suited for small size files.
	// MAX higher throughput performance for larger files.
	// Possible values:
	// FILE_STRIPE_LEVEL_UNSPECIFIED
	// FILE_STRIPE_LEVEL_MIN
	// FILE_STRIPE_LEVEL_BALANCED
	// FILE_STRIPE_LEVEL_MAX
	FileStripeLevel pulumi.StringPtrOutput `pulumi:"fileStripeLevel"`
	// The logical name of the Parallelstore instance in the user project with the following restrictions:
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	// * Must be unique within the customer project/ location
	//
	// ***
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Cloud Labels are a flexible and lightweight mechanism for organizing cloud
	// resources into groups that reflect a customer's organizational needs and
	// deployment strategies. Cloud Labels can be used to filter collections of
	// resources. They can be used to control how resource metrics are aggregated.
	// And they can be used as arguments to policy management rules (e.g. route,
	// firewall, load balancing, etc.).
	// * Label keys must be between 1 and 63 characters long and must conform to
	//   the following regular expression: `a-z{0,62}`.
	// * Label values must be between 0 and 63 characters long and must conform
	//   to the regular expression `[a-z0-9_-]{0,63}`.
	// * No more than 64 labels can be associated with a given resource.
	//   See https://goo.gl/xmQnxf for more information on and examples of labels.
	//   If you plan to use labels in your own code, please note that additional
	//   characters may be allowed in the future. Therefore, you are advised to use
	//   an internal label representation, such as JSON, which doesn't rely upon
	//   specific characters being disallowed.  For example, representing labels
	//   as the string:  name + "_" + value  would prove problematic if we were to
	//   allow "_" in a future release.
	//   **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	//   Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Part of `parent`. See documentation of `projectsId`.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The resource name of the instance, in the format
	// `projects/{project}/locations/{location}/instances/{instance_id}`
	Name pulumi.StringOutput `pulumi:"name"`
	// Immutable. The name of the Google Compute Engine
	// [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
	// instance is connected.
	Network pulumi.StringPtrOutput `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapOutput `pulumi:"pulumiLabels"`
	// Immutable. Contains the id of the allocated IP address range associated with the
	// private service access connection for example, "test-default" associated
	// with IP range 10.0.0.0/29. If no range id is provided all ranges will be
	// considered.
	ReservedIpRange pulumi.StringPtrOutput `pulumi:"reservedIpRange"`
	// The instance state.
	// Possible values:
	// STATE_UNSPECIFIED
	// CREATING
	// ACTIVE
	// DELETING
	// FAILED
	// UPGRADING
	State pulumi.StringOutput `pulumi:"state"`
	// The time when the instance was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CapacityGib == nil {
		return nil, errors.New("invalid value for required argument 'CapacityGib'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"effectiveLabels",
		"pulumiLabels",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("gcp:parallelstore/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("gcp:parallelstore/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Output only. List of access_points.
	// Contains a list of IPv4 addresses used for client side configuration.
	AccessPoints []string `pulumi:"accessPoints"`
	// Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
	CapacityGib *string `pulumi:"capacityGib"`
	// The time when the instance was created.
	CreateTime *string `pulumi:"createTime"`
	// The version of DAOS software running in the instance
	DaosVersion *string `pulumi:"daosVersion"`
	// The description of the instance. 2048 characters or less.
	Description *string `pulumi:"description"`
	// Stripe level for directories.
	// MIN when directory has a small number of files.
	// MAX when directory has a large number of files.
	// Possible values:
	// DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
	// DIRECTORY_STRIPE_LEVEL_MIN
	// DIRECTORY_STRIPE_LEVEL_BALANCED
	// DIRECTORY_STRIPE_LEVEL_MAX
	DirectoryStripeLevel *string `pulumi:"directoryStripeLevel"`
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Immutable. Contains the id of the allocated IP address range associated with the
	// private service access connection for example, "test-default" associated
	// with IP range 10.0.0.0/29. This field is populated by the service and
	// and contains the value currently used by the service.
	EffectiveReservedIpRange *string `pulumi:"effectiveReservedIpRange"`
	// Stripe level for files.
	// MIN better suited for small size files.
	// MAX higher throughput performance for larger files.
	// Possible values:
	// FILE_STRIPE_LEVEL_UNSPECIFIED
	// FILE_STRIPE_LEVEL_MIN
	// FILE_STRIPE_LEVEL_BALANCED
	// FILE_STRIPE_LEVEL_MAX
	FileStripeLevel *string `pulumi:"fileStripeLevel"`
	// The logical name of the Parallelstore instance in the user project with the following restrictions:
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	// * Must be unique within the customer project/ location
	//
	// ***
	InstanceId *string `pulumi:"instanceId"`
	// Cloud Labels are a flexible and lightweight mechanism for organizing cloud
	// resources into groups that reflect a customer's organizational needs and
	// deployment strategies. Cloud Labels can be used to filter collections of
	// resources. They can be used to control how resource metrics are aggregated.
	// And they can be used as arguments to policy management rules (e.g. route,
	// firewall, load balancing, etc.).
	// * Label keys must be between 1 and 63 characters long and must conform to
	//   the following regular expression: `a-z{0,62}`.
	// * Label values must be between 0 and 63 characters long and must conform
	//   to the regular expression `[a-z0-9_-]{0,63}`.
	// * No more than 64 labels can be associated with a given resource.
	//   See https://goo.gl/xmQnxf for more information on and examples of labels.
	//   If you plan to use labels in your own code, please note that additional
	//   characters may be allowed in the future. Therefore, you are advised to use
	//   an internal label representation, such as JSON, which doesn't rely upon
	//   specific characters being disallowed.  For example, representing labels
	//   as the string:  name + "_" + value  would prove problematic if we were to
	//   allow "_" in a future release.
	//   **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	//   Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Part of `parent`. See documentation of `projectsId`.
	Location *string `pulumi:"location"`
	// Identifier. The resource name of the instance, in the format
	// `projects/{project}/locations/{location}/instances/{instance_id}`
	Name *string `pulumi:"name"`
	// Immutable. The name of the Google Compute Engine
	// [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
	// instance is connected.
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels map[string]string `pulumi:"pulumiLabels"`
	// Immutable. Contains the id of the allocated IP address range associated with the
	// private service access connection for example, "test-default" associated
	// with IP range 10.0.0.0/29. If no range id is provided all ranges will be
	// considered.
	ReservedIpRange *string `pulumi:"reservedIpRange"`
	// The instance state.
	// Possible values:
	// STATE_UNSPECIFIED
	// CREATING
	// ACTIVE
	// DELETING
	// FAILED
	// UPGRADING
	State *string `pulumi:"state"`
	// The time when the instance was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type InstanceState struct {
	// Output only. List of access_points.
	// Contains a list of IPv4 addresses used for client side configuration.
	AccessPoints pulumi.StringArrayInput
	// Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
	CapacityGib pulumi.StringPtrInput
	// The time when the instance was created.
	CreateTime pulumi.StringPtrInput
	// The version of DAOS software running in the instance
	DaosVersion pulumi.StringPtrInput
	// The description of the instance. 2048 characters or less.
	Description pulumi.StringPtrInput
	// Stripe level for directories.
	// MIN when directory has a small number of files.
	// MAX when directory has a large number of files.
	// Possible values:
	// DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
	// DIRECTORY_STRIPE_LEVEL_MIN
	// DIRECTORY_STRIPE_LEVEL_BALANCED
	// DIRECTORY_STRIPE_LEVEL_MAX
	DirectoryStripeLevel pulumi.StringPtrInput
	// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
	EffectiveLabels pulumi.StringMapInput
	// Immutable. Contains the id of the allocated IP address range associated with the
	// private service access connection for example, "test-default" associated
	// with IP range 10.0.0.0/29. This field is populated by the service and
	// and contains the value currently used by the service.
	EffectiveReservedIpRange pulumi.StringPtrInput
	// Stripe level for files.
	// MIN better suited for small size files.
	// MAX higher throughput performance for larger files.
	// Possible values:
	// FILE_STRIPE_LEVEL_UNSPECIFIED
	// FILE_STRIPE_LEVEL_MIN
	// FILE_STRIPE_LEVEL_BALANCED
	// FILE_STRIPE_LEVEL_MAX
	FileStripeLevel pulumi.StringPtrInput
	// The logical name of the Parallelstore instance in the user project with the following restrictions:
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	// * Must be unique within the customer project/ location
	//
	// ***
	InstanceId pulumi.StringPtrInput
	// Cloud Labels are a flexible and lightweight mechanism for organizing cloud
	// resources into groups that reflect a customer's organizational needs and
	// deployment strategies. Cloud Labels can be used to filter collections of
	// resources. They can be used to control how resource metrics are aggregated.
	// And they can be used as arguments to policy management rules (e.g. route,
	// firewall, load balancing, etc.).
	// * Label keys must be between 1 and 63 characters long and must conform to
	//   the following regular expression: `a-z{0,62}`.
	// * Label values must be between 0 and 63 characters long and must conform
	//   to the regular expression `[a-z0-9_-]{0,63}`.
	// * No more than 64 labels can be associated with a given resource.
	//   See https://goo.gl/xmQnxf for more information on and examples of labels.
	//   If you plan to use labels in your own code, please note that additional
	//   characters may be allowed in the future. Therefore, you are advised to use
	//   an internal label representation, such as JSON, which doesn't rely upon
	//   specific characters being disallowed.  For example, representing labels
	//   as the string:  name + "_" + value  would prove problematic if we were to
	//   allow "_" in a future release.
	//   **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	//   Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Part of `parent`. See documentation of `projectsId`.
	Location pulumi.StringPtrInput
	// Identifier. The resource name of the instance, in the format
	// `projects/{project}/locations/{location}/instances/{instance_id}`
	Name pulumi.StringPtrInput
	// Immutable. The name of the Google Compute Engine
	// [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
	// instance is connected.
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource
	// and default labels configured on the provider.
	PulumiLabels pulumi.StringMapInput
	// Immutable. Contains the id of the allocated IP address range associated with the
	// private service access connection for example, "test-default" associated
	// with IP range 10.0.0.0/29. If no range id is provided all ranges will be
	// considered.
	ReservedIpRange pulumi.StringPtrInput
	// The instance state.
	// Possible values:
	// STATE_UNSPECIFIED
	// CREATING
	// ACTIVE
	// DELETING
	// FAILED
	// UPGRADING
	State pulumi.StringPtrInput
	// The time when the instance was updated.
	UpdateTime pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
	CapacityGib string `pulumi:"capacityGib"`
	// The description of the instance. 2048 characters or less.
	Description *string `pulumi:"description"`
	// Stripe level for directories.
	// MIN when directory has a small number of files.
	// MAX when directory has a large number of files.
	// Possible values:
	// DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
	// DIRECTORY_STRIPE_LEVEL_MIN
	// DIRECTORY_STRIPE_LEVEL_BALANCED
	// DIRECTORY_STRIPE_LEVEL_MAX
	DirectoryStripeLevel *string `pulumi:"directoryStripeLevel"`
	// Stripe level for files.
	// MIN better suited for small size files.
	// MAX higher throughput performance for larger files.
	// Possible values:
	// FILE_STRIPE_LEVEL_UNSPECIFIED
	// FILE_STRIPE_LEVEL_MIN
	// FILE_STRIPE_LEVEL_BALANCED
	// FILE_STRIPE_LEVEL_MAX
	FileStripeLevel *string `pulumi:"fileStripeLevel"`
	// The logical name of the Parallelstore instance in the user project with the following restrictions:
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	// * Must be unique within the customer project/ location
	//
	// ***
	InstanceId string `pulumi:"instanceId"`
	// Cloud Labels are a flexible and lightweight mechanism for organizing cloud
	// resources into groups that reflect a customer's organizational needs and
	// deployment strategies. Cloud Labels can be used to filter collections of
	// resources. They can be used to control how resource metrics are aggregated.
	// And they can be used as arguments to policy management rules (e.g. route,
	// firewall, load balancing, etc.).
	// * Label keys must be between 1 and 63 characters long and must conform to
	//   the following regular expression: `a-z{0,62}`.
	// * Label values must be between 0 and 63 characters long and must conform
	//   to the regular expression `[a-z0-9_-]{0,63}`.
	// * No more than 64 labels can be associated with a given resource.
	//   See https://goo.gl/xmQnxf for more information on and examples of labels.
	//   If you plan to use labels in your own code, please note that additional
	//   characters may be allowed in the future. Therefore, you are advised to use
	//   an internal label representation, such as JSON, which doesn't rely upon
	//   specific characters being disallowed.  For example, representing labels
	//   as the string:  name + "_" + value  would prove problematic if we were to
	//   allow "_" in a future release.
	//   **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	//   Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Part of `parent`. See documentation of `projectsId`.
	Location string `pulumi:"location"`
	// Immutable. The name of the Google Compute Engine
	// [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
	// instance is connected.
	Network *string `pulumi:"network"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Immutable. Contains the id of the allocated IP address range associated with the
	// private service access connection for example, "test-default" associated
	// with IP range 10.0.0.0/29. If no range id is provided all ranges will be
	// considered.
	ReservedIpRange *string `pulumi:"reservedIpRange"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
	CapacityGib pulumi.StringInput
	// The description of the instance. 2048 characters or less.
	Description pulumi.StringPtrInput
	// Stripe level for directories.
	// MIN when directory has a small number of files.
	// MAX when directory has a large number of files.
	// Possible values:
	// DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
	// DIRECTORY_STRIPE_LEVEL_MIN
	// DIRECTORY_STRIPE_LEVEL_BALANCED
	// DIRECTORY_STRIPE_LEVEL_MAX
	DirectoryStripeLevel pulumi.StringPtrInput
	// Stripe level for files.
	// MIN better suited for small size files.
	// MAX higher throughput performance for larger files.
	// Possible values:
	// FILE_STRIPE_LEVEL_UNSPECIFIED
	// FILE_STRIPE_LEVEL_MIN
	// FILE_STRIPE_LEVEL_BALANCED
	// FILE_STRIPE_LEVEL_MAX
	FileStripeLevel pulumi.StringPtrInput
	// The logical name of the Parallelstore instance in the user project with the following restrictions:
	// * Must contain only lowercase letters, numbers, and hyphens.
	// * Must start with a letter.
	// * Must be between 1-63 characters.
	// * Must end with a number or a letter.
	// * Must be unique within the customer project/ location
	//
	// ***
	InstanceId pulumi.StringInput
	// Cloud Labels are a flexible and lightweight mechanism for organizing cloud
	// resources into groups that reflect a customer's organizational needs and
	// deployment strategies. Cloud Labels can be used to filter collections of
	// resources. They can be used to control how resource metrics are aggregated.
	// And they can be used as arguments to policy management rules (e.g. route,
	// firewall, load balancing, etc.).
	// * Label keys must be between 1 and 63 characters long and must conform to
	//   the following regular expression: `a-z{0,62}`.
	// * Label values must be between 0 and 63 characters long and must conform
	//   to the regular expression `[a-z0-9_-]{0,63}`.
	// * No more than 64 labels can be associated with a given resource.
	//   See https://goo.gl/xmQnxf for more information on and examples of labels.
	//   If you plan to use labels in your own code, please note that additional
	//   characters may be allowed in the future. Therefore, you are advised to use
	//   an internal label representation, such as JSON, which doesn't rely upon
	//   specific characters being disallowed.  For example, representing labels
	//   as the string:  name + "_" + value  would prove problematic if we were to
	//   allow "_" in a future release.
	//   **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	//   Please refer to the field `effectiveLabels` for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Part of `parent`. See documentation of `projectsId`.
	Location pulumi.StringInput
	// Immutable. The name of the Google Compute Engine
	// [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
	// instance is connected.
	Network pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Immutable. Contains the id of the allocated IP address range associated with the
	// private service access connection for example, "test-default" associated
	// with IP range 10.0.0.0/29. If no range id is provided all ranges will be
	// considered.
	ReservedIpRange pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Output only. List of access_points.
// Contains a list of IPv4 addresses used for client side configuration.
func (o InstanceOutput) AccessPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.AccessPoints }).(pulumi.StringArrayOutput)
}

// Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
func (o InstanceOutput) CapacityGib() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CapacityGib }).(pulumi.StringOutput)
}

// The time when the instance was created.
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The version of DAOS software running in the instance
func (o InstanceOutput) DaosVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DaosVersion }).(pulumi.StringOutput)
}

// The description of the instance. 2048 characters or less.
func (o InstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Stripe level for directories.
// MIN when directory has a small number of files.
// MAX when directory has a large number of files.
// Possible values:
// DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
// DIRECTORY_STRIPE_LEVEL_MIN
// DIRECTORY_STRIPE_LEVEL_BALANCED
// DIRECTORY_STRIPE_LEVEL_MAX
func (o InstanceOutput) DirectoryStripeLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.DirectoryStripeLevel }).(pulumi.StringPtrOutput)
}

// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
func (o InstanceOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Immutable. Contains the id of the allocated IP address range associated with the
// private service access connection for example, "test-default" associated
// with IP range 10.0.0.0/29. This field is populated by the service and
// and contains the value currently used by the service.
func (o InstanceOutput) EffectiveReservedIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EffectiveReservedIpRange }).(pulumi.StringOutput)
}

// Stripe level for files.
// MIN better suited for small size files.
// MAX higher throughput performance for larger files.
// Possible values:
// FILE_STRIPE_LEVEL_UNSPECIFIED
// FILE_STRIPE_LEVEL_MIN
// FILE_STRIPE_LEVEL_BALANCED
// FILE_STRIPE_LEVEL_MAX
func (o InstanceOutput) FileStripeLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.FileStripeLevel }).(pulumi.StringPtrOutput)
}

// The logical name of the Parallelstore instance in the user project with the following restrictions:
// * Must contain only lowercase letters, numbers, and hyphens.
// * Must start with a letter.
// * Must be between 1-63 characters.
// * Must end with a number or a letter.
// * Must be unique within the customer project/ location
//
// ***
func (o InstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Cloud Labels are a flexible and lightweight mechanism for organizing cloud
// resources into groups that reflect a customer's organizational needs and
// deployment strategies. Cloud Labels can be used to filter collections of
// resources. They can be used to control how resource metrics are aggregated.
// And they can be used as arguments to policy management rules (e.g. route,
// firewall, load balancing, etc.).
//   - Label keys must be between 1 and 63 characters long and must conform to
//     the following regular expression: `a-z{0,62}`.
//   - Label values must be between 0 and 63 characters long and must conform
//     to the regular expression `[a-z0-9_-]{0,63}`.
//   - No more than 64 labels can be associated with a given resource.
//     See https://goo.gl/xmQnxf for more information on and examples of labels.
//     If you plan to use labels in your own code, please note that additional
//     characters may be allowed in the future. Therefore, you are advised to use
//     an internal label representation, such as JSON, which doesn't rely upon
//     specific characters being disallowed.  For example, representing labels
//     as the string:  name + "_" + value  would prove problematic if we were to
//     allow "_" in a future release.
//     **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
//     Please refer to the field `effectiveLabels` for all of the labels present on the resource.
func (o InstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Part of `parent`. See documentation of `projectsId`.
func (o InstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The resource name of the instance, in the format
// `projects/{project}/locations/{location}/instances/{instance_id}`
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The name of the Google Compute Engine
// [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
// instance is connected.
func (o InstanceOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Network }).(pulumi.StringPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o InstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource
// and default labels configured on the provider.
func (o InstanceOutput) PulumiLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.PulumiLabels }).(pulumi.StringMapOutput)
}

// Immutable. Contains the id of the allocated IP address range associated with the
// private service access connection for example, "test-default" associated
// with IP range 10.0.0.0/29. If no range id is provided all ranges will be
// considered.
func (o InstanceOutput) ReservedIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ReservedIpRange }).(pulumi.StringPtrOutput)
}

// The instance state.
// Possible values:
// STATE_UNSPECIFIED
// CREATING
// ACTIVE
// DELETING
// FAILED
// UPGRADING
func (o InstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The time when the instance was updated.
func (o InstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
