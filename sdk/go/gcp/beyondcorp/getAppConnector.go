// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beyondcorp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Google BeyondCorp App Connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = beyondcorp.LookupAppConnector(ctx, &beyondcorp.LookupAppConnectorArgs{
//				Name: "my-beyondcorp-app-connector",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAppConnector(ctx *pulumi.Context, args *LookupAppConnectorArgs, opts ...pulumi.InvokeOption) (*LookupAppConnectorResult, error) {
	var rv LookupAppConnectorResult
	err := ctx.Invoke("gcp:beyondcorp/getAppConnector:getAppConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppConnector.
type LookupAppConnectorArgs struct {
	// The name of the App Connector.
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region in which the resource belongs. If it
	// is not provided, the provider region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getAppConnector.
type LookupAppConnectorResult struct {
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                         `pulumi:"id"`
	Labels         map[string]string              `pulumi:"labels"`
	Name           string                         `pulumi:"name"`
	PrincipalInfos []GetAppConnectorPrincipalInfo `pulumi:"principalInfos"`
	Project        *string                        `pulumi:"project"`
	Region         *string                        `pulumi:"region"`
	State          string                         `pulumi:"state"`
}

func LookupAppConnectorOutput(ctx *pulumi.Context, args LookupAppConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupAppConnectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppConnectorResult, error) {
			args := v.(LookupAppConnectorArgs)
			r, err := LookupAppConnector(ctx, &args, opts...)
			var s LookupAppConnectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAppConnectorResultOutput)
}

// A collection of arguments for invoking getAppConnector.
type LookupAppConnectorOutputArgs struct {
	// The name of the App Connector.
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region in which the resource belongs. If it
	// is not provided, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupAppConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppConnectorArgs)(nil)).Elem()
}

// A collection of values returned by getAppConnector.
type LookupAppConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupAppConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppConnectorResult)(nil)).Elem()
}

func (o LookupAppConnectorResultOutput) ToLookupAppConnectorResultOutput() LookupAppConnectorResultOutput {
	return o
}

func (o LookupAppConnectorResultOutput) ToLookupAppConnectorResultOutputWithContext(ctx context.Context) LookupAppConnectorResultOutput {
	return o
}

func (o LookupAppConnectorResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppConnectorResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAppConnectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppConnectorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAppConnectorResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAppConnectorResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupAppConnectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppConnectorResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAppConnectorResultOutput) PrincipalInfos() GetAppConnectorPrincipalInfoArrayOutput {
	return o.ApplyT(func(v LookupAppConnectorResult) []GetAppConnectorPrincipalInfo { return v.PrincipalInfos }).(GetAppConnectorPrincipalInfoArrayOutput)
}

func (o LookupAppConnectorResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAppConnectorResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupAppConnectorResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAppConnectorResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupAppConnectorResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppConnectorResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppConnectorResultOutput{})
}
