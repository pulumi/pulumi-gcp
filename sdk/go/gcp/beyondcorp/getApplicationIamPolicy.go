// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beyondcorp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for application
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.LookupApplicationIamPolicy(ctx, &beyondcorp.LookupApplicationIamPolicyArgs{
//				Project:            pulumi.StringRef(example.Project),
//				SecurityGatewaysId: example.SecurityGatewaysId,
//				ApplicationId:      example.ApplicationId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupApplicationIamPolicy(ctx *pulumi.Context, args *LookupApplicationIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupApplicationIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationIamPolicyResult
	err := ctx.Invoke("gcp:beyondcorp/getApplicationIamPolicy:getApplicationIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplicationIamPolicy.
type LookupApplicationIamPolicyArgs struct {
	ApplicationId string `pulumi:"applicationId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project            *string `pulumi:"project"`
	SecurityGatewaysId string  `pulumi:"securityGatewaysId"`
}

// A collection of values returned by getApplicationIamPolicy.
type LookupApplicationIamPolicyResult struct {
	ApplicationId string `pulumi:"applicationId"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `beyondcorp.ApplicationIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData         string `pulumi:"policyData"`
	Project            string `pulumi:"project"`
	SecurityGatewaysId string `pulumi:"securityGatewaysId"`
}

func LookupApplicationIamPolicyOutput(ctx *pulumi.Context, args LookupApplicationIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApplicationIamPolicyResultOutput, error) {
			args := v.(LookupApplicationIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:beyondcorp/getApplicationIamPolicy:getApplicationIamPolicy", args, LookupApplicationIamPolicyResultOutput{}, options).(LookupApplicationIamPolicyResultOutput), nil
		}).(LookupApplicationIamPolicyResultOutput)
}

// A collection of arguments for invoking getApplicationIamPolicy.
type LookupApplicationIamPolicyOutputArgs struct {
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project            pulumi.StringPtrInput `pulumi:"project"`
	SecurityGatewaysId pulumi.StringInput    `pulumi:"securityGatewaysId"`
}

func (LookupApplicationIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getApplicationIamPolicy.
type LookupApplicationIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationIamPolicyResult)(nil)).Elem()
}

func (o LookupApplicationIamPolicyResultOutput) ToLookupApplicationIamPolicyResultOutput() LookupApplicationIamPolicyResultOutput {
	return o
}

func (o LookupApplicationIamPolicyResultOutput) ToLookupApplicationIamPolicyResultOutputWithContext(ctx context.Context) LookupApplicationIamPolicyResultOutput {
	return o
}

func (o LookupApplicationIamPolicyResultOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationIamPolicyResult) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupApplicationIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApplicationIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `beyondcorp.ApplicationIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupApplicationIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupApplicationIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupApplicationIamPolicyResultOutput) SecurityGatewaysId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationIamPolicyResult) string { return v.SecurityGatewaysId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationIamPolicyResultOutput{})
}
