// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beyondcorp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for BeyondCorp SecurityGateway. Each of these resources serves a different use case:
//
// * `beyondcorp.SecurityGatewayIamPolicy`: Authoritative. Sets the IAM policy for the securitygateway and replaces any existing policy already attached.
// * `beyondcorp.SecurityGatewayIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the securitygateway are preserved.
// * `beyondcorp.SecurityGatewayIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the securitygateway are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `beyondcorp.SecurityGatewayIamPolicy`: Retrieves the IAM policy for the securitygateway
//
// > **Note:** `beyondcorp.SecurityGatewayIamPolicy` **cannot** be used in conjunction with `beyondcorp.SecurityGatewayIamBinding` and `beyondcorp.SecurityGatewayIamMember` or they will fight over what your policy should be.
//
// > **Note:** `beyondcorp.SecurityGatewayIamBinding` resources **can be** used in conjunction with `beyondcorp.SecurityGatewayIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## beyondcorp.SecurityGatewayIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &beyondcorp.SecurityGatewayIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamMember(ctx, "member", &beyondcorp.SecurityGatewayIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamMember(ctx, "member", &beyondcorp.SecurityGatewayIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//				Condition: &beyondcorp.SecurityGatewayIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## This resource supports User Project Overrides.
//
// -
//
// # IAM policy for BeyondCorp SecurityGateway
//
// Three different resources help you manage your IAM policy for BeyondCorp SecurityGateway. Each of these resources serves a different use case:
//
// * `beyondcorp.SecurityGatewayIamPolicy`: Authoritative. Sets the IAM policy for the securitygateway and replaces any existing policy already attached.
// * `beyondcorp.SecurityGatewayIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the securitygateway are preserved.
// * `beyondcorp.SecurityGatewayIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the securitygateway are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `beyondcorp.SecurityGatewayIamPolicy`: Retrieves the IAM policy for the securitygateway
//
// > **Note:** `beyondcorp.SecurityGatewayIamPolicy` **cannot** be used in conjunction with `beyondcorp.SecurityGatewayIamBinding` and `beyondcorp.SecurityGatewayIamMember` or they will fight over what your policy should be.
//
// > **Note:** `beyondcorp.SecurityGatewayIamBinding` resources **can be** used in conjunction with `beyondcorp.SecurityGatewayIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## beyondcorp.SecurityGatewayIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &beyondcorp.SecurityGatewayIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamMember(ctx, "member", &beyondcorp.SecurityGatewayIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamMember(ctx, "member", &beyondcorp.SecurityGatewayIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//				Condition: &beyondcorp.SecurityGatewayIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/locations/{{location}}/securityGateways/{{security_gateway_id}}
//
// * {{project}}/{{location}}/{{security_gateway_id}}
//
// * {{location}}/{{security_gateway_id}}
//
// * {{security_gateway_id}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// BeyondCorp securitygateway IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayIamPolicy:SecurityGatewayIamPolicy editor "projects/{{project}}/locations/{{location}}/securityGateways/{{security_gateway_id}} roles/beyondcorp.securityGatewayUser user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayIamPolicy:SecurityGatewayIamPolicy editor "projects/{{project}}/locations/{{location}}/securityGateways/{{security_gateway_id}} roles/beyondcorp.securityGatewayUser"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayIamPolicy:SecurityGatewayIamPolicy editor projects/{{project}}/locations/{{location}}/securityGateways/{{security_gateway_id}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type SecurityGatewayIamPolicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringOutput `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringOutput `pulumi:"securityGatewayId"`
}

// NewSecurityGatewayIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewSecurityGatewayIamPolicy(ctx *pulumi.Context,
	name string, args *SecurityGatewayIamPolicyArgs, opts ...pulumi.ResourceOption) (*SecurityGatewayIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.SecurityGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGatewayIamPolicy
	err := ctx.RegisterResource("gcp:beyondcorp/securityGatewayIamPolicy:SecurityGatewayIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGatewayIamPolicy gets an existing SecurityGatewayIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGatewayIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGatewayIamPolicyState, opts ...pulumi.ResourceOption) (*SecurityGatewayIamPolicy, error) {
	var resource SecurityGatewayIamPolicy
	err := ctx.ReadResource("gcp:beyondcorp/securityGatewayIamPolicy:SecurityGatewayIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGatewayIamPolicy resources.
type securityGatewayIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId *string `pulumi:"securityGatewayId"`
}

type SecurityGatewayIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringPtrInput
}

func (SecurityGatewayIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayIamPolicyState)(nil)).Elem()
}

type securityGatewayIamPolicyArgs struct {
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId string `pulumi:"securityGatewayId"`
}

// The set of arguments for constructing a SecurityGatewayIamPolicy resource.
type SecurityGatewayIamPolicyArgs struct {
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringInput
}

func (SecurityGatewayIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayIamPolicyArgs)(nil)).Elem()
}

type SecurityGatewayIamPolicyInput interface {
	pulumi.Input

	ToSecurityGatewayIamPolicyOutput() SecurityGatewayIamPolicyOutput
	ToSecurityGatewayIamPolicyOutputWithContext(ctx context.Context) SecurityGatewayIamPolicyOutput
}

func (*SecurityGatewayIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayIamPolicy)(nil)).Elem()
}

func (i *SecurityGatewayIamPolicy) ToSecurityGatewayIamPolicyOutput() SecurityGatewayIamPolicyOutput {
	return i.ToSecurityGatewayIamPolicyOutputWithContext(context.Background())
}

func (i *SecurityGatewayIamPolicy) ToSecurityGatewayIamPolicyOutputWithContext(ctx context.Context) SecurityGatewayIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayIamPolicyOutput)
}

// SecurityGatewayIamPolicyArrayInput is an input type that accepts SecurityGatewayIamPolicyArray and SecurityGatewayIamPolicyArrayOutput values.
// You can construct a concrete instance of `SecurityGatewayIamPolicyArrayInput` via:
//
//	SecurityGatewayIamPolicyArray{ SecurityGatewayIamPolicyArgs{...} }
type SecurityGatewayIamPolicyArrayInput interface {
	pulumi.Input

	ToSecurityGatewayIamPolicyArrayOutput() SecurityGatewayIamPolicyArrayOutput
	ToSecurityGatewayIamPolicyArrayOutputWithContext(context.Context) SecurityGatewayIamPolicyArrayOutput
}

type SecurityGatewayIamPolicyArray []SecurityGatewayIamPolicyInput

func (SecurityGatewayIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayIamPolicy)(nil)).Elem()
}

func (i SecurityGatewayIamPolicyArray) ToSecurityGatewayIamPolicyArrayOutput() SecurityGatewayIamPolicyArrayOutput {
	return i.ToSecurityGatewayIamPolicyArrayOutputWithContext(context.Background())
}

func (i SecurityGatewayIamPolicyArray) ToSecurityGatewayIamPolicyArrayOutputWithContext(ctx context.Context) SecurityGatewayIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayIamPolicyArrayOutput)
}

// SecurityGatewayIamPolicyMapInput is an input type that accepts SecurityGatewayIamPolicyMap and SecurityGatewayIamPolicyMapOutput values.
// You can construct a concrete instance of `SecurityGatewayIamPolicyMapInput` via:
//
//	SecurityGatewayIamPolicyMap{ "key": SecurityGatewayIamPolicyArgs{...} }
type SecurityGatewayIamPolicyMapInput interface {
	pulumi.Input

	ToSecurityGatewayIamPolicyMapOutput() SecurityGatewayIamPolicyMapOutput
	ToSecurityGatewayIamPolicyMapOutputWithContext(context.Context) SecurityGatewayIamPolicyMapOutput
}

type SecurityGatewayIamPolicyMap map[string]SecurityGatewayIamPolicyInput

func (SecurityGatewayIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayIamPolicy)(nil)).Elem()
}

func (i SecurityGatewayIamPolicyMap) ToSecurityGatewayIamPolicyMapOutput() SecurityGatewayIamPolicyMapOutput {
	return i.ToSecurityGatewayIamPolicyMapOutputWithContext(context.Background())
}

func (i SecurityGatewayIamPolicyMap) ToSecurityGatewayIamPolicyMapOutputWithContext(ctx context.Context) SecurityGatewayIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayIamPolicyMapOutput)
}

type SecurityGatewayIamPolicyOutput struct{ *pulumi.OutputState }

func (SecurityGatewayIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayIamPolicy)(nil)).Elem()
}

func (o SecurityGatewayIamPolicyOutput) ToSecurityGatewayIamPolicyOutput() SecurityGatewayIamPolicyOutput {
	return o
}

func (o SecurityGatewayIamPolicyOutput) ToSecurityGatewayIamPolicyOutputWithContext(ctx context.Context) SecurityGatewayIamPolicyOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o SecurityGatewayIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
// location is specified, it is taken from the provider configuration.
func (o SecurityGatewayIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o SecurityGatewayIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o SecurityGatewayIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o SecurityGatewayIamPolicyOutput) SecurityGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamPolicy) pulumi.StringOutput { return v.SecurityGatewayId }).(pulumi.StringOutput)
}

type SecurityGatewayIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (SecurityGatewayIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayIamPolicy)(nil)).Elem()
}

func (o SecurityGatewayIamPolicyArrayOutput) ToSecurityGatewayIamPolicyArrayOutput() SecurityGatewayIamPolicyArrayOutput {
	return o
}

func (o SecurityGatewayIamPolicyArrayOutput) ToSecurityGatewayIamPolicyArrayOutputWithContext(ctx context.Context) SecurityGatewayIamPolicyArrayOutput {
	return o
}

func (o SecurityGatewayIamPolicyArrayOutput) Index(i pulumi.IntInput) SecurityGatewayIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGatewayIamPolicy {
		return vs[0].([]*SecurityGatewayIamPolicy)[vs[1].(int)]
	}).(SecurityGatewayIamPolicyOutput)
}

type SecurityGatewayIamPolicyMapOutput struct{ *pulumi.OutputState }

func (SecurityGatewayIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayIamPolicy)(nil)).Elem()
}

func (o SecurityGatewayIamPolicyMapOutput) ToSecurityGatewayIamPolicyMapOutput() SecurityGatewayIamPolicyMapOutput {
	return o
}

func (o SecurityGatewayIamPolicyMapOutput) ToSecurityGatewayIamPolicyMapOutputWithContext(ctx context.Context) SecurityGatewayIamPolicyMapOutput {
	return o
}

func (o SecurityGatewayIamPolicyMapOutput) MapIndex(k pulumi.StringInput) SecurityGatewayIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGatewayIamPolicy {
		return vs[0].(map[string]*SecurityGatewayIamPolicy)[vs[1].(string)]
	}).(SecurityGatewayIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayIamPolicyInput)(nil)).Elem(), &SecurityGatewayIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayIamPolicyArrayInput)(nil)).Elem(), SecurityGatewayIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayIamPolicyMapInput)(nil)).Elem(), SecurityGatewayIamPolicyMap{})
	pulumi.RegisterOutputType(SecurityGatewayIamPolicyOutput{})
	pulumi.RegisterOutputType(SecurityGatewayIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(SecurityGatewayIamPolicyMapOutput{})
}
