// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beyondcorp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies application endpoint(s) to protect behind a Security Gateway.
//
// ## Example Usage
//
// ### Beyondcorp Security Gateway Application Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := beyondcorp.NewSecurityGateway(ctx, "default", &beyondcorp.SecurityGatewayArgs{
//				SecurityGatewayId: pulumi.String("default-sg"),
//				DisplayName:       pulumi.String("My Security Gateway resource"),
//				Hubs: beyondcorp.SecurityGatewayHubArray{
//					&beyondcorp.SecurityGatewayHubArgs{
//						Region: pulumi.String("us-central1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplication(ctx, "example", &beyondcorp.SecurityGatewayApplicationArgs{
//				SecurityGatewayId: _default.SecurityGatewayId,
//				ApplicationId:     pulumi.String("google-sga"),
//				EndpointMatchers: beyondcorp.SecurityGatewayApplicationEndpointMatcherArray{
//					&beyondcorp.SecurityGatewayApplicationEndpointMatcherArgs{
//						Hostname: pulumi.String("google.com"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Beyondcorp Security Gateway Application Vpc
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			project, err := organizations.LookupProject(ctx, &organizations.LookupProjectArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			_default, err := beyondcorp.NewSecurityGateway(ctx, "default", &beyondcorp.SecurityGatewayArgs{
//				SecurityGatewayId: pulumi.String("default-sg"),
//				DisplayName:       pulumi.String("My Security Gateway resource"),
//				Hubs: beyondcorp.SecurityGatewayHubArray{
//					&beyondcorp.SecurityGatewayHubArgs{
//						Region: pulumi.String("us-central1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplication(ctx, "example", &beyondcorp.SecurityGatewayApplicationArgs{
//				SecurityGatewayId: _default.SecurityGatewayId,
//				ApplicationId:     pulumi.String("my-vm-service2"),
//				EndpointMatchers: beyondcorp.SecurityGatewayApplicationEndpointMatcherArray{
//					&beyondcorp.SecurityGatewayApplicationEndpointMatcherArgs{
//						Hostname: pulumi.String("my-vm-service.com"),
//					},
//				},
//				Upstreams: beyondcorp.SecurityGatewayApplicationUpstreamArray{
//					&beyondcorp.SecurityGatewayApplicationUpstreamArgs{
//						EgressPolicy: &beyondcorp.SecurityGatewayApplicationUpstreamEgressPolicyArgs{
//							Regions: pulumi.StringArray{
//								pulumi.String("us-central1"),
//							},
//						},
//						Network: &beyondcorp.SecurityGatewayApplicationUpstreamNetworkArgs{
//							Name: pulumi.Sprintf("projects/%v/global/networks/default", project.ProjectId),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Beyondcorp Security Gateway Application Spa Api
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := beyondcorp.NewSecurityGateway(ctx, "default", &beyondcorp.SecurityGatewayArgs{
//				SecurityGatewayId: pulumi.String("default-sg-spa-api"),
//				DisplayName:       pulumi.String("My SPA Security Gateway resource"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplication(ctx, "example-spa", &beyondcorp.SecurityGatewayApplicationArgs{
//				SecurityGatewayId: _default.SecurityGatewayId,
//				ApplicationId:     pulumi.String("app-discovery"),
//				Upstreams: beyondcorp.SecurityGatewayApplicationUpstreamArray{
//					&beyondcorp.SecurityGatewayApplicationUpstreamArgs{
//						External: &beyondcorp.SecurityGatewayApplicationUpstreamExternalArgs{
//							Endpoints: beyondcorp.SecurityGatewayApplicationUpstreamExternalEndpointArray{
//								&beyondcorp.SecurityGatewayApplicationUpstreamExternalEndpointArgs{
//									Hostname: pulumi.String("my.discovery.service.com"),
//									Port:     pulumi.Int(443),
//								},
//							},
//						},
//						ProxyProtocol: &beyondcorp.SecurityGatewayApplicationUpstreamProxyProtocolArgs{
//							AllowedClientHeaders: pulumi.StringArray{
//								pulumi.String("header"),
//							},
//						},
//					},
//				},
//				Schema: pulumi.String("API_GATEWAY"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Beyondcorp Security Gateway Application Spa Proxy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := beyondcorp.NewSecurityGateway(ctx, "default", &beyondcorp.SecurityGatewayArgs{
//				SecurityGatewayId: pulumi.String("default-sg-spa-proxy"),
//				DisplayName:       pulumi.String("My SPA Security Gateway resource"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplication(ctx, "example-spa", &beyondcorp.SecurityGatewayApplicationArgs{
//				SecurityGatewayId: _default.SecurityGatewayId,
//				ApplicationId:     pulumi.String("app-proxy"),
//				EndpointMatchers: beyondcorp.SecurityGatewayApplicationEndpointMatcherArray{
//					&beyondcorp.SecurityGatewayApplicationEndpointMatcherArgs{
//						Hostname: pulumi.String("a.site.com"),
//						Ports: pulumi.IntArray{
//							pulumi.Int(443),
//						},
//					},
//				},
//				Upstreams: beyondcorp.SecurityGatewayApplicationUpstreamArray{
//					&beyondcorp.SecurityGatewayApplicationUpstreamArgs{
//						External: &beyondcorp.SecurityGatewayApplicationUpstreamExternalArgs{
//							Endpoints: beyondcorp.SecurityGatewayApplicationUpstreamExternalEndpointArray{
//								&beyondcorp.SecurityGatewayApplicationUpstreamExternalEndpointArgs{
//									Hostname: pulumi.String("my.proxy.service.com"),
//									Port:     pulumi.Int(443),
//								},
//							},
//						},
//						ProxyProtocol: &beyondcorp.SecurityGatewayApplicationUpstreamProxyProtocolArgs{
//							AllowedClientHeaders: pulumi.StringArray{
//								pulumi.String("header1"),
//								pulumi.String("header2"),
//							},
//							ContextualHeaders: &beyondcorp.SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersArgs{
//								UserInfo: &beyondcorp.SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersUserInfoArgs{
//									OutputType: pulumi.String("PROTOBUF"),
//								},
//								GroupInfo: &beyondcorp.SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersGroupInfoArgs{
//									OutputType: pulumi.String("JSON"),
//								},
//								DeviceInfo: &beyondcorp.SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersDeviceInfoArgs{
//									OutputType: pulumi.String("NONE"),
//								},
//								OutputType: pulumi.String("JSON"),
//							},
//							MetadataHeaders: pulumi.StringMap{
//								"metadata-header1": pulumi.String("value1"),
//								"metadata-header2": pulumi.String("value2"),
//							},
//							GatewayIdentity: pulumi.String("RESOURCE_NAME"),
//							ClientIp:        pulumi.Bool(true),
//						},
//					},
//				},
//				Schema: pulumi.String("PROXY_GATEWAY"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SecurityGatewayApplication can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}}`
//
// * `{{project}}/{{security_gateway_id}}/{{application_id}}`
//
// * `{{security_gateway_id}}/{{application_id}}`
//
// When using the `pulumi import` command, SecurityGatewayApplication can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication default projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}}
// ```
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication default {{project}}/{{security_gateway_id}}/{{application_id}}
// ```
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication default {{security_gateway_id}}/{{application_id}}
// ```
type SecurityGatewayApplication struct {
	pulumi.CustomResourceState

	// User-settable Application resource ID.
	// * Must start with a letter.
	// * Must contain between 4-63 characters from `/a-z-/`.
	// * Must end with a number or letter.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Output only. Timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. An arbitrary user-provided name for the Application resource.
	// Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Required. Endpoint matchers associated with an application.
	// A combination of hostname and ports as endpoint matcher is used to match
	// the application.
	// Match conditions for OR logic.
	// An array of match conditions to allow for multiple matching criteria.
	// The rule is considered a match if one the conditions are met.
	// The conditions can be one of the following combination
	// (Hostname), (Hostname & Ports)
	// EXAMPLES:
	// Hostname - ("*.abc.com"), ("xyz.abc.com")
	// Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	// Structure is documented below.
	EndpointMatchers SecurityGatewayApplicationEndpointMatcherArrayOutput `pulumi:"endpointMatchers"`
	// Identifier. Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Type of the external application.
	// Possible values are: `PROXY_GATEWAY`, `API_GATEWAY`.
	Schema pulumi.StringPtrOutput `pulumi:"schema"`
	// ID of the Security Gateway resource this belongs to.
	SecurityGatewayId pulumi.StringOutput `pulumi:"securityGatewayId"`
	// Output only. Timestamp when the resource was last modified.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Optional. List of which upstream resource(s) to forward traffic to.
	// Structure is documented below.
	Upstreams SecurityGatewayApplicationUpstreamArrayOutput `pulumi:"upstreams"`
}

// NewSecurityGatewayApplication registers a new resource with the given unique name, arguments, and options.
func NewSecurityGatewayApplication(ctx *pulumi.Context,
	name string, args *SecurityGatewayApplicationArgs, opts ...pulumi.ResourceOption) (*SecurityGatewayApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.SecurityGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGatewayApplication
	err := ctx.RegisterResource("gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGatewayApplication gets an existing SecurityGatewayApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGatewayApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGatewayApplicationState, opts ...pulumi.ResourceOption) (*SecurityGatewayApplication, error) {
	var resource SecurityGatewayApplication
	err := ctx.ReadResource("gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGatewayApplication resources.
type securityGatewayApplicationState struct {
	// User-settable Application resource ID.
	// * Must start with a letter.
	// * Must contain between 4-63 characters from `/a-z-/`.
	// * Must end with a number or letter.
	ApplicationId *string `pulumi:"applicationId"`
	// Output only. Timestamp when the resource was created.
	CreateTime *string `pulumi:"createTime"`
	// Optional. An arbitrary user-provided name for the Application resource.
	// Cannot exceed 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// Required. Endpoint matchers associated with an application.
	// A combination of hostname and ports as endpoint matcher is used to match
	// the application.
	// Match conditions for OR logic.
	// An array of match conditions to allow for multiple matching criteria.
	// The rule is considered a match if one the conditions are met.
	// The conditions can be one of the following combination
	// (Hostname), (Hostname & Ports)
	// EXAMPLES:
	// Hostname - ("*.abc.com"), ("xyz.abc.com")
	// Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	// Structure is documented below.
	EndpointMatchers []SecurityGatewayApplicationEndpointMatcher `pulumi:"endpointMatchers"`
	// Identifier. Name of the resource.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Type of the external application.
	// Possible values are: `PROXY_GATEWAY`, `API_GATEWAY`.
	Schema *string `pulumi:"schema"`
	// ID of the Security Gateway resource this belongs to.
	SecurityGatewayId *string `pulumi:"securityGatewayId"`
	// Output only. Timestamp when the resource was last modified.
	UpdateTime *string `pulumi:"updateTime"`
	// Optional. List of which upstream resource(s) to forward traffic to.
	// Structure is documented below.
	Upstreams []SecurityGatewayApplicationUpstream `pulumi:"upstreams"`
}

type SecurityGatewayApplicationState struct {
	// User-settable Application resource ID.
	// * Must start with a letter.
	// * Must contain between 4-63 characters from `/a-z-/`.
	// * Must end with a number or letter.
	ApplicationId pulumi.StringPtrInput
	// Output only. Timestamp when the resource was created.
	CreateTime pulumi.StringPtrInput
	// Optional. An arbitrary user-provided name for the Application resource.
	// Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrInput
	// Required. Endpoint matchers associated with an application.
	// A combination of hostname and ports as endpoint matcher is used to match
	// the application.
	// Match conditions for OR logic.
	// An array of match conditions to allow for multiple matching criteria.
	// The rule is considered a match if one the conditions are met.
	// The conditions can be one of the following combination
	// (Hostname), (Hostname & Ports)
	// EXAMPLES:
	// Hostname - ("*.abc.com"), ("xyz.abc.com")
	// Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	// Structure is documented below.
	EndpointMatchers SecurityGatewayApplicationEndpointMatcherArrayInput
	// Identifier. Name of the resource.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Type of the external application.
	// Possible values are: `PROXY_GATEWAY`, `API_GATEWAY`.
	Schema pulumi.StringPtrInput
	// ID of the Security Gateway resource this belongs to.
	SecurityGatewayId pulumi.StringPtrInput
	// Output only. Timestamp when the resource was last modified.
	UpdateTime pulumi.StringPtrInput
	// Optional. List of which upstream resource(s) to forward traffic to.
	// Structure is documented below.
	Upstreams SecurityGatewayApplicationUpstreamArrayInput
}

func (SecurityGatewayApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayApplicationState)(nil)).Elem()
}

type securityGatewayApplicationArgs struct {
	// User-settable Application resource ID.
	// * Must start with a letter.
	// * Must contain between 4-63 characters from `/a-z-/`.
	// * Must end with a number or letter.
	ApplicationId string `pulumi:"applicationId"`
	// Optional. An arbitrary user-provided name for the Application resource.
	// Cannot exceed 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// Required. Endpoint matchers associated with an application.
	// A combination of hostname and ports as endpoint matcher is used to match
	// the application.
	// Match conditions for OR logic.
	// An array of match conditions to allow for multiple matching criteria.
	// The rule is considered a match if one the conditions are met.
	// The conditions can be one of the following combination
	// (Hostname), (Hostname & Ports)
	// EXAMPLES:
	// Hostname - ("*.abc.com"), ("xyz.abc.com")
	// Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	// Structure is documented below.
	EndpointMatchers []SecurityGatewayApplicationEndpointMatcher `pulumi:"endpointMatchers"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Type of the external application.
	// Possible values are: `PROXY_GATEWAY`, `API_GATEWAY`.
	Schema *string `pulumi:"schema"`
	// ID of the Security Gateway resource this belongs to.
	SecurityGatewayId string `pulumi:"securityGatewayId"`
	// Optional. List of which upstream resource(s) to forward traffic to.
	// Structure is documented below.
	Upstreams []SecurityGatewayApplicationUpstream `pulumi:"upstreams"`
}

// The set of arguments for constructing a SecurityGatewayApplication resource.
type SecurityGatewayApplicationArgs struct {
	// User-settable Application resource ID.
	// * Must start with a letter.
	// * Must contain between 4-63 characters from `/a-z-/`.
	// * Must end with a number or letter.
	ApplicationId pulumi.StringInput
	// Optional. An arbitrary user-provided name for the Application resource.
	// Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrInput
	// Required. Endpoint matchers associated with an application.
	// A combination of hostname and ports as endpoint matcher is used to match
	// the application.
	// Match conditions for OR logic.
	// An array of match conditions to allow for multiple matching criteria.
	// The rule is considered a match if one the conditions are met.
	// The conditions can be one of the following combination
	// (Hostname), (Hostname & Ports)
	// EXAMPLES:
	// Hostname - ("*.abc.com"), ("xyz.abc.com")
	// Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	// Structure is documented below.
	EndpointMatchers SecurityGatewayApplicationEndpointMatcherArrayInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Type of the external application.
	// Possible values are: `PROXY_GATEWAY`, `API_GATEWAY`.
	Schema pulumi.StringPtrInput
	// ID of the Security Gateway resource this belongs to.
	SecurityGatewayId pulumi.StringInput
	// Optional. List of which upstream resource(s) to forward traffic to.
	// Structure is documented below.
	Upstreams SecurityGatewayApplicationUpstreamArrayInput
}

func (SecurityGatewayApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayApplicationArgs)(nil)).Elem()
}

type SecurityGatewayApplicationInput interface {
	pulumi.Input

	ToSecurityGatewayApplicationOutput() SecurityGatewayApplicationOutput
	ToSecurityGatewayApplicationOutputWithContext(ctx context.Context) SecurityGatewayApplicationOutput
}

func (*SecurityGatewayApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayApplication)(nil)).Elem()
}

func (i *SecurityGatewayApplication) ToSecurityGatewayApplicationOutput() SecurityGatewayApplicationOutput {
	return i.ToSecurityGatewayApplicationOutputWithContext(context.Background())
}

func (i *SecurityGatewayApplication) ToSecurityGatewayApplicationOutputWithContext(ctx context.Context) SecurityGatewayApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayApplicationOutput)
}

// SecurityGatewayApplicationArrayInput is an input type that accepts SecurityGatewayApplicationArray and SecurityGatewayApplicationArrayOutput values.
// You can construct a concrete instance of `SecurityGatewayApplicationArrayInput` via:
//
//	SecurityGatewayApplicationArray{ SecurityGatewayApplicationArgs{...} }
type SecurityGatewayApplicationArrayInput interface {
	pulumi.Input

	ToSecurityGatewayApplicationArrayOutput() SecurityGatewayApplicationArrayOutput
	ToSecurityGatewayApplicationArrayOutputWithContext(context.Context) SecurityGatewayApplicationArrayOutput
}

type SecurityGatewayApplicationArray []SecurityGatewayApplicationInput

func (SecurityGatewayApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayApplication)(nil)).Elem()
}

func (i SecurityGatewayApplicationArray) ToSecurityGatewayApplicationArrayOutput() SecurityGatewayApplicationArrayOutput {
	return i.ToSecurityGatewayApplicationArrayOutputWithContext(context.Background())
}

func (i SecurityGatewayApplicationArray) ToSecurityGatewayApplicationArrayOutputWithContext(ctx context.Context) SecurityGatewayApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayApplicationArrayOutput)
}

// SecurityGatewayApplicationMapInput is an input type that accepts SecurityGatewayApplicationMap and SecurityGatewayApplicationMapOutput values.
// You can construct a concrete instance of `SecurityGatewayApplicationMapInput` via:
//
//	SecurityGatewayApplicationMap{ "key": SecurityGatewayApplicationArgs{...} }
type SecurityGatewayApplicationMapInput interface {
	pulumi.Input

	ToSecurityGatewayApplicationMapOutput() SecurityGatewayApplicationMapOutput
	ToSecurityGatewayApplicationMapOutputWithContext(context.Context) SecurityGatewayApplicationMapOutput
}

type SecurityGatewayApplicationMap map[string]SecurityGatewayApplicationInput

func (SecurityGatewayApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayApplication)(nil)).Elem()
}

func (i SecurityGatewayApplicationMap) ToSecurityGatewayApplicationMapOutput() SecurityGatewayApplicationMapOutput {
	return i.ToSecurityGatewayApplicationMapOutputWithContext(context.Background())
}

func (i SecurityGatewayApplicationMap) ToSecurityGatewayApplicationMapOutputWithContext(ctx context.Context) SecurityGatewayApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayApplicationMapOutput)
}

type SecurityGatewayApplicationOutput struct{ *pulumi.OutputState }

func (SecurityGatewayApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayApplication)(nil)).Elem()
}

func (o SecurityGatewayApplicationOutput) ToSecurityGatewayApplicationOutput() SecurityGatewayApplicationOutput {
	return o
}

func (o SecurityGatewayApplicationOutput) ToSecurityGatewayApplicationOutputWithContext(ctx context.Context) SecurityGatewayApplicationOutput {
	return o
}

// User-settable Application resource ID.
// * Must start with a letter.
// * Must contain between 4-63 characters from `/a-z-/`.
// * Must end with a number or letter.
func (o SecurityGatewayApplicationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Output only. Timestamp when the resource was created.
func (o SecurityGatewayApplicationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. An arbitrary user-provided name for the Application resource.
// Cannot exceed 64 characters.
func (o SecurityGatewayApplicationOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Required. Endpoint matchers associated with an application.
// A combination of hostname and ports as endpoint matcher is used to match
// the application.
// Match conditions for OR logic.
// An array of match conditions to allow for multiple matching criteria.
// The rule is considered a match if one the conditions are met.
// The conditions can be one of the following combination
// (Hostname), (Hostname & Ports)
// EXAMPLES:
// Hostname - ("*.abc.com"), ("xyz.abc.com")
// Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
// Structure is documented below.
func (o SecurityGatewayApplicationOutput) EndpointMatchers() SecurityGatewayApplicationEndpointMatcherArrayOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) SecurityGatewayApplicationEndpointMatcherArrayOutput {
		return v.EndpointMatchers
	}).(SecurityGatewayApplicationEndpointMatcherArrayOutput)
}

// Identifier. Name of the resource.
func (o SecurityGatewayApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o SecurityGatewayApplicationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Type of the external application.
// Possible values are: `PROXY_GATEWAY`, `API_GATEWAY`.
func (o SecurityGatewayApplicationOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) pulumi.StringPtrOutput { return v.Schema }).(pulumi.StringPtrOutput)
}

// ID of the Security Gateway resource this belongs to.
func (o SecurityGatewayApplicationOutput) SecurityGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) pulumi.StringOutput { return v.SecurityGatewayId }).(pulumi.StringOutput)
}

// Output only. Timestamp when the resource was last modified.
func (o SecurityGatewayApplicationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. List of which upstream resource(s) to forward traffic to.
// Structure is documented below.
func (o SecurityGatewayApplicationOutput) Upstreams() SecurityGatewayApplicationUpstreamArrayOutput {
	return o.ApplyT(func(v *SecurityGatewayApplication) SecurityGatewayApplicationUpstreamArrayOutput { return v.Upstreams }).(SecurityGatewayApplicationUpstreamArrayOutput)
}

type SecurityGatewayApplicationArrayOutput struct{ *pulumi.OutputState }

func (SecurityGatewayApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayApplication)(nil)).Elem()
}

func (o SecurityGatewayApplicationArrayOutput) ToSecurityGatewayApplicationArrayOutput() SecurityGatewayApplicationArrayOutput {
	return o
}

func (o SecurityGatewayApplicationArrayOutput) ToSecurityGatewayApplicationArrayOutputWithContext(ctx context.Context) SecurityGatewayApplicationArrayOutput {
	return o
}

func (o SecurityGatewayApplicationArrayOutput) Index(i pulumi.IntInput) SecurityGatewayApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGatewayApplication {
		return vs[0].([]*SecurityGatewayApplication)[vs[1].(int)]
	}).(SecurityGatewayApplicationOutput)
}

type SecurityGatewayApplicationMapOutput struct{ *pulumi.OutputState }

func (SecurityGatewayApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayApplication)(nil)).Elem()
}

func (o SecurityGatewayApplicationMapOutput) ToSecurityGatewayApplicationMapOutput() SecurityGatewayApplicationMapOutput {
	return o
}

func (o SecurityGatewayApplicationMapOutput) ToSecurityGatewayApplicationMapOutputWithContext(ctx context.Context) SecurityGatewayApplicationMapOutput {
	return o
}

func (o SecurityGatewayApplicationMapOutput) MapIndex(k pulumi.StringInput) SecurityGatewayApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGatewayApplication {
		return vs[0].(map[string]*SecurityGatewayApplication)[vs[1].(string)]
	}).(SecurityGatewayApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayApplicationInput)(nil)).Elem(), &SecurityGatewayApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayApplicationArrayInput)(nil)).Elem(), SecurityGatewayApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayApplicationMapInput)(nil)).Elem(), SecurityGatewayApplicationMap{})
	pulumi.RegisterOutputType(SecurityGatewayApplicationOutput{})
	pulumi.RegisterOutputType(SecurityGatewayApplicationArrayOutput{})
	pulumi.RegisterOutputType(SecurityGatewayApplicationMapOutput{})
}
