// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beyondcorp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for BeyondCorp SecurityGatewayApplication. Each of these resources serves a different use case:
//
// * `beyondcorp.SecurityGatewayApplicationIamPolicy`: Authoritative. Sets the IAM policy for the securitygatewayapplication and replaces any existing policy already attached.
// * `beyondcorp.SecurityGatewayApplicationIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the securitygatewayapplication are preserved.
// * `beyondcorp.SecurityGatewayApplicationIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the securitygatewayapplication are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `beyondcorp.SecurityGatewayApplicationIamPolicy`: Retrieves the IAM policy for the securitygatewayapplication
//
// > **Note:** `beyondcorp.SecurityGatewayApplicationIamPolicy` **cannot** be used in conjunction with `beyondcorp.SecurityGatewayApplicationIamBinding` and `beyondcorp.SecurityGatewayApplicationIamMember` or they will fight over what your policy should be.
//
// > **Note:** `beyondcorp.SecurityGatewayApplicationIamBinding` resources **can be** used in conjunction with `beyondcorp.SecurityGatewayApplicationIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## beyondcorp.SecurityGatewayApplicationIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplicationIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayApplicationIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplicationIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayApplicationIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayApplicationIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayApplicationIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayApplicationIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &beyondcorp.SecurityGatewayApplicationIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayApplicationIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamMember(ctx, "member", &beyondcorp.SecurityGatewayApplicationIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamMember(ctx, "member", &beyondcorp.SecurityGatewayApplicationIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//				Condition: &beyondcorp.SecurityGatewayApplicationIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## This resource supports User Project Overrides.
//
// -
//
// # IAM policy for BeyondCorp SecurityGatewayApplication
//
// Three different resources help you manage your IAM policy for BeyondCorp SecurityGatewayApplication. Each of these resources serves a different use case:
//
// * `beyondcorp.SecurityGatewayApplicationIamPolicy`: Authoritative. Sets the IAM policy for the securitygatewayapplication and replaces any existing policy already attached.
// * `beyondcorp.SecurityGatewayApplicationIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the securitygatewayapplication are preserved.
// * `beyondcorp.SecurityGatewayApplicationIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the securitygatewayapplication are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `beyondcorp.SecurityGatewayApplicationIamPolicy`: Retrieves the IAM policy for the securitygatewayapplication
//
// > **Note:** `beyondcorp.SecurityGatewayApplicationIamPolicy` **cannot** be used in conjunction with `beyondcorp.SecurityGatewayApplicationIamBinding` and `beyondcorp.SecurityGatewayApplicationIamMember` or they will fight over what your policy should be.
//
// > **Note:** `beyondcorp.SecurityGatewayApplicationIamBinding` resources **can be** used in conjunction with `beyondcorp.SecurityGatewayApplicationIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## beyondcorp.SecurityGatewayApplicationIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplicationIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayApplicationIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplicationIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayApplicationIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayApplicationIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayApplicationIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayApplicationIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &beyondcorp.SecurityGatewayApplicationIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayApplicationIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamMember(ctx, "member", &beyondcorp.SecurityGatewayApplicationIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamMember(ctx, "member", &beyondcorp.SecurityGatewayApplicationIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//				Condition: &beyondcorp.SecurityGatewayApplicationIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}}
//
// * {{project}}/{{security_gateway_id}}/{{application_id}}
//
// * {{security_gateway_id}}/{{application_id}}
//
// * {{application_id}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// BeyondCorp securitygatewayapplication IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayApplicationIamPolicy:SecurityGatewayApplicationIamPolicy editor "projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}} roles/beyondcorp.securityGatewayUser user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayApplicationIamPolicy:SecurityGatewayApplicationIamPolicy editor "projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}} roles/beyondcorp.securityGatewayUser"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayApplicationIamPolicy:SecurityGatewayApplicationIamPolicy editor projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type SecurityGatewayApplicationIamPolicy struct {
	pulumi.CustomResourceState

	// Used to find the parent resource to bind the IAM policy to
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringOutput `pulumi:"securityGatewayId"`
}

// NewSecurityGatewayApplicationIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewSecurityGatewayApplicationIamPolicy(ctx *pulumi.Context,
	name string, args *SecurityGatewayApplicationIamPolicyArgs, opts ...pulumi.ResourceOption) (*SecurityGatewayApplicationIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.SecurityGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGatewayApplicationIamPolicy
	err := ctx.RegisterResource("gcp:beyondcorp/securityGatewayApplicationIamPolicy:SecurityGatewayApplicationIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGatewayApplicationIamPolicy gets an existing SecurityGatewayApplicationIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGatewayApplicationIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGatewayApplicationIamPolicyState, opts ...pulumi.ResourceOption) (*SecurityGatewayApplicationIamPolicy, error) {
	var resource SecurityGatewayApplicationIamPolicy
	err := ctx.ReadResource("gcp:beyondcorp/securityGatewayApplicationIamPolicy:SecurityGatewayApplicationIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGatewayApplicationIamPolicy resources.
type securityGatewayApplicationIamPolicyState struct {
	// Used to find the parent resource to bind the IAM policy to
	ApplicationId *string `pulumi:"applicationId"`
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId *string `pulumi:"securityGatewayId"`
}

type SecurityGatewayApplicationIamPolicyState struct {
	// Used to find the parent resource to bind the IAM policy to
	ApplicationId pulumi.StringPtrInput
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringPtrInput
}

func (SecurityGatewayApplicationIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayApplicationIamPolicyState)(nil)).Elem()
}

type securityGatewayApplicationIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ApplicationId string `pulumi:"applicationId"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId string `pulumi:"securityGatewayId"`
}

// The set of arguments for constructing a SecurityGatewayApplicationIamPolicy resource.
type SecurityGatewayApplicationIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ApplicationId pulumi.StringInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringInput
}

func (SecurityGatewayApplicationIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayApplicationIamPolicyArgs)(nil)).Elem()
}

type SecurityGatewayApplicationIamPolicyInput interface {
	pulumi.Input

	ToSecurityGatewayApplicationIamPolicyOutput() SecurityGatewayApplicationIamPolicyOutput
	ToSecurityGatewayApplicationIamPolicyOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamPolicyOutput
}

func (*SecurityGatewayApplicationIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayApplicationIamPolicy)(nil)).Elem()
}

func (i *SecurityGatewayApplicationIamPolicy) ToSecurityGatewayApplicationIamPolicyOutput() SecurityGatewayApplicationIamPolicyOutput {
	return i.ToSecurityGatewayApplicationIamPolicyOutputWithContext(context.Background())
}

func (i *SecurityGatewayApplicationIamPolicy) ToSecurityGatewayApplicationIamPolicyOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayApplicationIamPolicyOutput)
}

// SecurityGatewayApplicationIamPolicyArrayInput is an input type that accepts SecurityGatewayApplicationIamPolicyArray and SecurityGatewayApplicationIamPolicyArrayOutput values.
// You can construct a concrete instance of `SecurityGatewayApplicationIamPolicyArrayInput` via:
//
//	SecurityGatewayApplicationIamPolicyArray{ SecurityGatewayApplicationIamPolicyArgs{...} }
type SecurityGatewayApplicationIamPolicyArrayInput interface {
	pulumi.Input

	ToSecurityGatewayApplicationIamPolicyArrayOutput() SecurityGatewayApplicationIamPolicyArrayOutput
	ToSecurityGatewayApplicationIamPolicyArrayOutputWithContext(context.Context) SecurityGatewayApplicationIamPolicyArrayOutput
}

type SecurityGatewayApplicationIamPolicyArray []SecurityGatewayApplicationIamPolicyInput

func (SecurityGatewayApplicationIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayApplicationIamPolicy)(nil)).Elem()
}

func (i SecurityGatewayApplicationIamPolicyArray) ToSecurityGatewayApplicationIamPolicyArrayOutput() SecurityGatewayApplicationIamPolicyArrayOutput {
	return i.ToSecurityGatewayApplicationIamPolicyArrayOutputWithContext(context.Background())
}

func (i SecurityGatewayApplicationIamPolicyArray) ToSecurityGatewayApplicationIamPolicyArrayOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayApplicationIamPolicyArrayOutput)
}

// SecurityGatewayApplicationIamPolicyMapInput is an input type that accepts SecurityGatewayApplicationIamPolicyMap and SecurityGatewayApplicationIamPolicyMapOutput values.
// You can construct a concrete instance of `SecurityGatewayApplicationIamPolicyMapInput` via:
//
//	SecurityGatewayApplicationIamPolicyMap{ "key": SecurityGatewayApplicationIamPolicyArgs{...} }
type SecurityGatewayApplicationIamPolicyMapInput interface {
	pulumi.Input

	ToSecurityGatewayApplicationIamPolicyMapOutput() SecurityGatewayApplicationIamPolicyMapOutput
	ToSecurityGatewayApplicationIamPolicyMapOutputWithContext(context.Context) SecurityGatewayApplicationIamPolicyMapOutput
}

type SecurityGatewayApplicationIamPolicyMap map[string]SecurityGatewayApplicationIamPolicyInput

func (SecurityGatewayApplicationIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayApplicationIamPolicy)(nil)).Elem()
}

func (i SecurityGatewayApplicationIamPolicyMap) ToSecurityGatewayApplicationIamPolicyMapOutput() SecurityGatewayApplicationIamPolicyMapOutput {
	return i.ToSecurityGatewayApplicationIamPolicyMapOutputWithContext(context.Background())
}

func (i SecurityGatewayApplicationIamPolicyMap) ToSecurityGatewayApplicationIamPolicyMapOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayApplicationIamPolicyMapOutput)
}

type SecurityGatewayApplicationIamPolicyOutput struct{ *pulumi.OutputState }

func (SecurityGatewayApplicationIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayApplicationIamPolicy)(nil)).Elem()
}

func (o SecurityGatewayApplicationIamPolicyOutput) ToSecurityGatewayApplicationIamPolicyOutput() SecurityGatewayApplicationIamPolicyOutput {
	return o
}

func (o SecurityGatewayApplicationIamPolicyOutput) ToSecurityGatewayApplicationIamPolicyOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamPolicyOutput {
	return o
}

// Used to find the parent resource to bind the IAM policy to
func (o SecurityGatewayApplicationIamPolicyOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamPolicy) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o SecurityGatewayApplicationIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o SecurityGatewayApplicationIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o SecurityGatewayApplicationIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
func (o SecurityGatewayApplicationIamPolicyOutput) SecurityGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamPolicy) pulumi.StringOutput { return v.SecurityGatewayId }).(pulumi.StringOutput)
}

type SecurityGatewayApplicationIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (SecurityGatewayApplicationIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayApplicationIamPolicy)(nil)).Elem()
}

func (o SecurityGatewayApplicationIamPolicyArrayOutput) ToSecurityGatewayApplicationIamPolicyArrayOutput() SecurityGatewayApplicationIamPolicyArrayOutput {
	return o
}

func (o SecurityGatewayApplicationIamPolicyArrayOutput) ToSecurityGatewayApplicationIamPolicyArrayOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamPolicyArrayOutput {
	return o
}

func (o SecurityGatewayApplicationIamPolicyArrayOutput) Index(i pulumi.IntInput) SecurityGatewayApplicationIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGatewayApplicationIamPolicy {
		return vs[0].([]*SecurityGatewayApplicationIamPolicy)[vs[1].(int)]
	}).(SecurityGatewayApplicationIamPolicyOutput)
}

type SecurityGatewayApplicationIamPolicyMapOutput struct{ *pulumi.OutputState }

func (SecurityGatewayApplicationIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayApplicationIamPolicy)(nil)).Elem()
}

func (o SecurityGatewayApplicationIamPolicyMapOutput) ToSecurityGatewayApplicationIamPolicyMapOutput() SecurityGatewayApplicationIamPolicyMapOutput {
	return o
}

func (o SecurityGatewayApplicationIamPolicyMapOutput) ToSecurityGatewayApplicationIamPolicyMapOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamPolicyMapOutput {
	return o
}

func (o SecurityGatewayApplicationIamPolicyMapOutput) MapIndex(k pulumi.StringInput) SecurityGatewayApplicationIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGatewayApplicationIamPolicy {
		return vs[0].(map[string]*SecurityGatewayApplicationIamPolicy)[vs[1].(string)]
	}).(SecurityGatewayApplicationIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayApplicationIamPolicyInput)(nil)).Elem(), &SecurityGatewayApplicationIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayApplicationIamPolicyArrayInput)(nil)).Elem(), SecurityGatewayApplicationIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayApplicationIamPolicyMapInput)(nil)).Elem(), SecurityGatewayApplicationIamPolicyMap{})
	pulumi.RegisterOutputType(SecurityGatewayApplicationIamPolicyOutput{})
	pulumi.RegisterOutputType(SecurityGatewayApplicationIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(SecurityGatewayApplicationIamPolicyMapOutput{})
}
