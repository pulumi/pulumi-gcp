// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beyondcorp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates
// all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be
// authorised for a single AppGateway.
//
// To get more information about AppGateway, see:
//
// * [API documentation](https://cloud.google.com/beyondcorp/docs/reference/rest#rest-resource:-v1.projects.locations.appgateways)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/beyondcorp-enterprise/docs/enable-app-connector)
//
// ## Example Usage
// ### Beyondcorp App Gateway Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewAppGateway(ctx, "appGateway", &beyondcorp.AppGatewayArgs{
//				HostType: pulumi.String("GCP_REGIONAL_MIG"),
//				Region:   pulumi.String("us-central1"),
//				Type:     pulumi.String("TCP_PROXY"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Beyondcorp App Gateway Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewAppGateway(ctx, "appGateway", &beyondcorp.AppGatewayArgs{
//				DisplayName: pulumi.String("some display name"),
//				HostType:    pulumi.String("GCP_REGIONAL_MIG"),
//				Labels: pulumi.StringMap{
//					"bar": pulumi.String("baz"),
//					"foo": pulumi.String("bar"),
//				},
//				Region: pulumi.String("us-central1"),
//				Type:   pulumi.String("TCP_PROXY"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # AppGateway can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:beyondcorp/appGateway:AppGateway default projects/{{project}}/locations/{{region}}/appGateways/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:beyondcorp/appGateway:AppGateway default {{project}}/{{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:beyondcorp/appGateway:AppGateway default {{region}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:beyondcorp/appGateway:AppGateway default {{name}}
//
// ```
type AppGateway struct {
	pulumi.CustomResourceState

	// A list of connections allocated for the Gateway.
	// Structure is documented below.
	AllocatedConnections AppGatewayAllocatedConnectionArrayOutput `pulumi:"allocatedConnections"`
	// An arbitrary user-provided name for the AppGateway.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The type of hosting used by the AppGateway.
	// Default value is `HOST_TYPE_UNSPECIFIED`.
	// Possible values are `HOST_TYPE_UNSPECIFIED` and `GCP_REGIONAL_MIG`.
	HostType pulumi.StringPtrOutput `pulumi:"hostType"`
	// Resource labels to represent user provided metadata.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// ID of the AppGateway.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The region of the AppGateway.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// Represents the different states of a AppGateway.
	State pulumi.StringOutput `pulumi:"state"`
	// The type of network connectivity used by the AppGateway.
	// Default value is `TYPE_UNSPECIFIED`.
	// Possible values are `TYPE_UNSPECIFIED` and `TCP_PROXY`.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Server-defined URI for this resource.
	Uri pulumi.StringOutput `pulumi:"uri"`
}

// NewAppGateway registers a new resource with the given unique name, arguments, and options.
func NewAppGateway(ctx *pulumi.Context,
	name string, args *AppGatewayArgs, opts ...pulumi.ResourceOption) (*AppGateway, error) {
	if args == nil {
		args = &AppGatewayArgs{}
	}

	var resource AppGateway
	err := ctx.RegisterResource("gcp:beyondcorp/appGateway:AppGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppGateway gets an existing AppGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppGatewayState, opts ...pulumi.ResourceOption) (*AppGateway, error) {
	var resource AppGateway
	err := ctx.ReadResource("gcp:beyondcorp/appGateway:AppGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppGateway resources.
type appGatewayState struct {
	// A list of connections allocated for the Gateway.
	// Structure is documented below.
	AllocatedConnections []AppGatewayAllocatedConnection `pulumi:"allocatedConnections"`
	// An arbitrary user-provided name for the AppGateway.
	DisplayName *string `pulumi:"displayName"`
	// The type of hosting used by the AppGateway.
	// Default value is `HOST_TYPE_UNSPECIFIED`.
	// Possible values are `HOST_TYPE_UNSPECIFIED` and `GCP_REGIONAL_MIG`.
	HostType *string `pulumi:"hostType"`
	// Resource labels to represent user provided metadata.
	Labels map[string]string `pulumi:"labels"`
	// ID of the AppGateway.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region of the AppGateway.
	Region *string `pulumi:"region"`
	// Represents the different states of a AppGateway.
	State *string `pulumi:"state"`
	// The type of network connectivity used by the AppGateway.
	// Default value is `TYPE_UNSPECIFIED`.
	// Possible values are `TYPE_UNSPECIFIED` and `TCP_PROXY`.
	Type *string `pulumi:"type"`
	// Server-defined URI for this resource.
	Uri *string `pulumi:"uri"`
}

type AppGatewayState struct {
	// A list of connections allocated for the Gateway.
	// Structure is documented below.
	AllocatedConnections AppGatewayAllocatedConnectionArrayInput
	// An arbitrary user-provided name for the AppGateway.
	DisplayName pulumi.StringPtrInput
	// The type of hosting used by the AppGateway.
	// Default value is `HOST_TYPE_UNSPECIFIED`.
	// Possible values are `HOST_TYPE_UNSPECIFIED` and `GCP_REGIONAL_MIG`.
	HostType pulumi.StringPtrInput
	// Resource labels to represent user provided metadata.
	Labels pulumi.StringMapInput
	// ID of the AppGateway.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The region of the AppGateway.
	Region pulumi.StringPtrInput
	// Represents the different states of a AppGateway.
	State pulumi.StringPtrInput
	// The type of network connectivity used by the AppGateway.
	// Default value is `TYPE_UNSPECIFIED`.
	// Possible values are `TYPE_UNSPECIFIED` and `TCP_PROXY`.
	Type pulumi.StringPtrInput
	// Server-defined URI for this resource.
	Uri pulumi.StringPtrInput
}

func (AppGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*appGatewayState)(nil)).Elem()
}

type appGatewayArgs struct {
	// An arbitrary user-provided name for the AppGateway.
	DisplayName *string `pulumi:"displayName"`
	// The type of hosting used by the AppGateway.
	// Default value is `HOST_TYPE_UNSPECIFIED`.
	// Possible values are `HOST_TYPE_UNSPECIFIED` and `GCP_REGIONAL_MIG`.
	HostType *string `pulumi:"hostType"`
	// Resource labels to represent user provided metadata.
	Labels map[string]string `pulumi:"labels"`
	// ID of the AppGateway.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region of the AppGateway.
	Region *string `pulumi:"region"`
	// The type of network connectivity used by the AppGateway.
	// Default value is `TYPE_UNSPECIFIED`.
	// Possible values are `TYPE_UNSPECIFIED` and `TCP_PROXY`.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a AppGateway resource.
type AppGatewayArgs struct {
	// An arbitrary user-provided name for the AppGateway.
	DisplayName pulumi.StringPtrInput
	// The type of hosting used by the AppGateway.
	// Default value is `HOST_TYPE_UNSPECIFIED`.
	// Possible values are `HOST_TYPE_UNSPECIFIED` and `GCP_REGIONAL_MIG`.
	HostType pulumi.StringPtrInput
	// Resource labels to represent user provided metadata.
	Labels pulumi.StringMapInput
	// ID of the AppGateway.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The region of the AppGateway.
	Region pulumi.StringPtrInput
	// The type of network connectivity used by the AppGateway.
	// Default value is `TYPE_UNSPECIFIED`.
	// Possible values are `TYPE_UNSPECIFIED` and `TCP_PROXY`.
	Type pulumi.StringPtrInput
}

func (AppGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appGatewayArgs)(nil)).Elem()
}

type AppGatewayInput interface {
	pulumi.Input

	ToAppGatewayOutput() AppGatewayOutput
	ToAppGatewayOutputWithContext(ctx context.Context) AppGatewayOutput
}

func (*AppGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**AppGateway)(nil)).Elem()
}

func (i *AppGateway) ToAppGatewayOutput() AppGatewayOutput {
	return i.ToAppGatewayOutputWithContext(context.Background())
}

func (i *AppGateway) ToAppGatewayOutputWithContext(ctx context.Context) AppGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppGatewayOutput)
}

// AppGatewayArrayInput is an input type that accepts AppGatewayArray and AppGatewayArrayOutput values.
// You can construct a concrete instance of `AppGatewayArrayInput` via:
//
//	AppGatewayArray{ AppGatewayArgs{...} }
type AppGatewayArrayInput interface {
	pulumi.Input

	ToAppGatewayArrayOutput() AppGatewayArrayOutput
	ToAppGatewayArrayOutputWithContext(context.Context) AppGatewayArrayOutput
}

type AppGatewayArray []AppGatewayInput

func (AppGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppGateway)(nil)).Elem()
}

func (i AppGatewayArray) ToAppGatewayArrayOutput() AppGatewayArrayOutput {
	return i.ToAppGatewayArrayOutputWithContext(context.Background())
}

func (i AppGatewayArray) ToAppGatewayArrayOutputWithContext(ctx context.Context) AppGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppGatewayArrayOutput)
}

// AppGatewayMapInput is an input type that accepts AppGatewayMap and AppGatewayMapOutput values.
// You can construct a concrete instance of `AppGatewayMapInput` via:
//
//	AppGatewayMap{ "key": AppGatewayArgs{...} }
type AppGatewayMapInput interface {
	pulumi.Input

	ToAppGatewayMapOutput() AppGatewayMapOutput
	ToAppGatewayMapOutputWithContext(context.Context) AppGatewayMapOutput
}

type AppGatewayMap map[string]AppGatewayInput

func (AppGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppGateway)(nil)).Elem()
}

func (i AppGatewayMap) ToAppGatewayMapOutput() AppGatewayMapOutput {
	return i.ToAppGatewayMapOutputWithContext(context.Background())
}

func (i AppGatewayMap) ToAppGatewayMapOutputWithContext(ctx context.Context) AppGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppGatewayMapOutput)
}

type AppGatewayOutput struct{ *pulumi.OutputState }

func (AppGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppGateway)(nil)).Elem()
}

func (o AppGatewayOutput) ToAppGatewayOutput() AppGatewayOutput {
	return o
}

func (o AppGatewayOutput) ToAppGatewayOutputWithContext(ctx context.Context) AppGatewayOutput {
	return o
}

// A list of connections allocated for the Gateway.
// Structure is documented below.
func (o AppGatewayOutput) AllocatedConnections() AppGatewayAllocatedConnectionArrayOutput {
	return o.ApplyT(func(v *AppGateway) AppGatewayAllocatedConnectionArrayOutput { return v.AllocatedConnections }).(AppGatewayAllocatedConnectionArrayOutput)
}

// An arbitrary user-provided name for the AppGateway.
func (o AppGatewayOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The type of hosting used by the AppGateway.
// Default value is `HOST_TYPE_UNSPECIFIED`.
// Possible values are `HOST_TYPE_UNSPECIFIED` and `GCP_REGIONAL_MIG`.
func (o AppGatewayOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringPtrOutput { return v.HostType }).(pulumi.StringPtrOutput)
}

// Resource labels to represent user provided metadata.
func (o AppGatewayOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// ID of the AppGateway.
func (o AppGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o AppGatewayOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of the AppGateway.
func (o AppGatewayOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// Represents the different states of a AppGateway.
func (o AppGatewayOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The type of network connectivity used by the AppGateway.
// Default value is `TYPE_UNSPECIFIED`.
// Possible values are `TYPE_UNSPECIFIED` and `TCP_PROXY`.
func (o AppGatewayOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// Server-defined URI for this resource.
func (o AppGatewayOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

type AppGatewayArrayOutput struct{ *pulumi.OutputState }

func (AppGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppGateway)(nil)).Elem()
}

func (o AppGatewayArrayOutput) ToAppGatewayArrayOutput() AppGatewayArrayOutput {
	return o
}

func (o AppGatewayArrayOutput) ToAppGatewayArrayOutputWithContext(ctx context.Context) AppGatewayArrayOutput {
	return o
}

func (o AppGatewayArrayOutput) Index(i pulumi.IntInput) AppGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppGateway {
		return vs[0].([]*AppGateway)[vs[1].(int)]
	}).(AppGatewayOutput)
}

type AppGatewayMapOutput struct{ *pulumi.OutputState }

func (AppGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppGateway)(nil)).Elem()
}

func (o AppGatewayMapOutput) ToAppGatewayMapOutput() AppGatewayMapOutput {
	return o
}

func (o AppGatewayMapOutput) ToAppGatewayMapOutputWithContext(ctx context.Context) AppGatewayMapOutput {
	return o
}

func (o AppGatewayMapOutput) MapIndex(k pulumi.StringInput) AppGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppGateway {
		return vs[0].(map[string]*AppGateway)[vs[1].(string)]
	}).(AppGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppGatewayInput)(nil)).Elem(), &AppGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppGatewayArrayInput)(nil)).Elem(), AppGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppGatewayMapInput)(nil)).Elem(), AppGatewayMap{})
	pulumi.RegisterOutputType(AppGatewayOutput{})
	pulumi.RegisterOutputType(AppGatewayArrayOutput{})
	pulumi.RegisterOutputType(AppGatewayMapOutput{})
}
