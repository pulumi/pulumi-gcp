// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beyondcorp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for BeyondCorp SecurityGateway. Each of these resources serves a different use case:
//
// * `beyondcorp.SecurityGatewayIamPolicy`: Authoritative. Sets the IAM policy for the securitygateway and replaces any existing policy already attached.
// * `beyondcorp.SecurityGatewayIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the securitygateway are preserved.
// * `beyondcorp.SecurityGatewayIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the securitygateway are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `beyondcorp.SecurityGatewayIamPolicy`: Retrieves the IAM policy for the securitygateway
//
// > **Note:** `beyondcorp.SecurityGatewayIamPolicy` **cannot** be used in conjunction with `beyondcorp.SecurityGatewayIamBinding` and `beyondcorp.SecurityGatewayIamMember` or they will fight over what your policy should be.
//
// > **Note:** `beyondcorp.SecurityGatewayIamBinding` resources **can be** used in conjunction with `beyondcorp.SecurityGatewayIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## beyondcorp.SecurityGatewayIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &beyondcorp.SecurityGatewayIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamMember(ctx, "member", &beyondcorp.SecurityGatewayIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamMember(ctx, "member", &beyondcorp.SecurityGatewayIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//				Condition: &beyondcorp.SecurityGatewayIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## This resource supports User Project Overrides.
//
// -
//
// # IAM policy for BeyondCorp SecurityGateway
//
// Three different resources help you manage your IAM policy for BeyondCorp SecurityGateway. Each of these resources serves a different use case:
//
// * `beyondcorp.SecurityGatewayIamPolicy`: Authoritative. Sets the IAM policy for the securitygateway and replaces any existing policy already attached.
// * `beyondcorp.SecurityGatewayIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the securitygateway are preserved.
// * `beyondcorp.SecurityGatewayIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the securitygateway are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `beyondcorp.SecurityGatewayIamPolicy`: Retrieves the IAM policy for the securitygateway
//
// > **Note:** `beyondcorp.SecurityGatewayIamPolicy` **cannot** be used in conjunction with `beyondcorp.SecurityGatewayIamBinding` and `beyondcorp.SecurityGatewayIamMember` or they will fight over what your policy should be.
//
// > **Note:** `beyondcorp.SecurityGatewayIamBinding` resources **can be** used in conjunction with `beyondcorp.SecurityGatewayIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## beyondcorp.SecurityGatewayIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &beyondcorp.SecurityGatewayIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamMember(ctx, "member", &beyondcorp.SecurityGatewayIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayIamMember(ctx, "member", &beyondcorp.SecurityGatewayIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				Location:          pulumi.Any(example.Location),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//				Condition: &beyondcorp.SecurityGatewayIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/locations/{{location}}/securityGateways/{{security_gateway_id}}
//
// * {{project}}/{{location}}/{{security_gateway_id}}
//
// * {{location}}/{{security_gateway_id}}
//
// * {{security_gateway_id}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// BeyondCorp securitygateway IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayIamBinding:SecurityGatewayIamBinding editor "projects/{{project}}/locations/{{location}}/securityGateways/{{security_gateway_id}} roles/beyondcorp.securityGatewayUser user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayIamBinding:SecurityGatewayIamBinding editor "projects/{{project}}/locations/{{location}}/securityGateways/{{security_gateway_id}} roles/beyondcorp.securityGatewayUser"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayIamBinding:SecurityGatewayIamBinding editor projects/{{project}}/locations/{{location}}/securityGateways/{{security_gateway_id}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type SecurityGatewayIamBinding struct {
	pulumi.CustomResourceState

	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition SecurityGatewayIamBindingConditionPtrOutput `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringOutput `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringOutput `pulumi:"securityGatewayId"`
}

// NewSecurityGatewayIamBinding registers a new resource with the given unique name, arguments, and options.
func NewSecurityGatewayIamBinding(ctx *pulumi.Context,
	name string, args *SecurityGatewayIamBindingArgs, opts ...pulumi.ResourceOption) (*SecurityGatewayIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.SecurityGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGatewayIamBinding
	err := ctx.RegisterResource("gcp:beyondcorp/securityGatewayIamBinding:SecurityGatewayIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGatewayIamBinding gets an existing SecurityGatewayIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGatewayIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGatewayIamBindingState, opts ...pulumi.ResourceOption) (*SecurityGatewayIamBinding, error) {
	var resource SecurityGatewayIamBinding
	err := ctx.ReadResource("gcp:beyondcorp/securityGatewayIamBinding:SecurityGatewayIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGatewayIamBinding resources.
type securityGatewayIamBindingState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *SecurityGatewayIamBindingCondition `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members []string `pulumi:"members"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role *string `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId *string `pulumi:"securityGatewayId"`
}

type SecurityGatewayIamBindingState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition SecurityGatewayIamBindingConditionPtrInput
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members pulumi.StringArrayInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringPtrInput
}

func (SecurityGatewayIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayIamBindingState)(nil)).Elem()
}

type securityGatewayIamBindingArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *SecurityGatewayIamBindingCondition `pulumi:"condition"`
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members []string `pulumi:"members"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId string `pulumi:"securityGatewayId"`
}

// The set of arguments for constructing a SecurityGatewayIamBinding resource.
type SecurityGatewayIamBindingArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition SecurityGatewayIamBindingConditionPtrInput
	// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members pulumi.StringArrayInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput
	// Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringInput
}

func (SecurityGatewayIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayIamBindingArgs)(nil)).Elem()
}

type SecurityGatewayIamBindingInput interface {
	pulumi.Input

	ToSecurityGatewayIamBindingOutput() SecurityGatewayIamBindingOutput
	ToSecurityGatewayIamBindingOutputWithContext(ctx context.Context) SecurityGatewayIamBindingOutput
}

func (*SecurityGatewayIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayIamBinding)(nil)).Elem()
}

func (i *SecurityGatewayIamBinding) ToSecurityGatewayIamBindingOutput() SecurityGatewayIamBindingOutput {
	return i.ToSecurityGatewayIamBindingOutputWithContext(context.Background())
}

func (i *SecurityGatewayIamBinding) ToSecurityGatewayIamBindingOutputWithContext(ctx context.Context) SecurityGatewayIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayIamBindingOutput)
}

// SecurityGatewayIamBindingArrayInput is an input type that accepts SecurityGatewayIamBindingArray and SecurityGatewayIamBindingArrayOutput values.
// You can construct a concrete instance of `SecurityGatewayIamBindingArrayInput` via:
//
//	SecurityGatewayIamBindingArray{ SecurityGatewayIamBindingArgs{...} }
type SecurityGatewayIamBindingArrayInput interface {
	pulumi.Input

	ToSecurityGatewayIamBindingArrayOutput() SecurityGatewayIamBindingArrayOutput
	ToSecurityGatewayIamBindingArrayOutputWithContext(context.Context) SecurityGatewayIamBindingArrayOutput
}

type SecurityGatewayIamBindingArray []SecurityGatewayIamBindingInput

func (SecurityGatewayIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayIamBinding)(nil)).Elem()
}

func (i SecurityGatewayIamBindingArray) ToSecurityGatewayIamBindingArrayOutput() SecurityGatewayIamBindingArrayOutput {
	return i.ToSecurityGatewayIamBindingArrayOutputWithContext(context.Background())
}

func (i SecurityGatewayIamBindingArray) ToSecurityGatewayIamBindingArrayOutputWithContext(ctx context.Context) SecurityGatewayIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayIamBindingArrayOutput)
}

// SecurityGatewayIamBindingMapInput is an input type that accepts SecurityGatewayIamBindingMap and SecurityGatewayIamBindingMapOutput values.
// You can construct a concrete instance of `SecurityGatewayIamBindingMapInput` via:
//
//	SecurityGatewayIamBindingMap{ "key": SecurityGatewayIamBindingArgs{...} }
type SecurityGatewayIamBindingMapInput interface {
	pulumi.Input

	ToSecurityGatewayIamBindingMapOutput() SecurityGatewayIamBindingMapOutput
	ToSecurityGatewayIamBindingMapOutputWithContext(context.Context) SecurityGatewayIamBindingMapOutput
}

type SecurityGatewayIamBindingMap map[string]SecurityGatewayIamBindingInput

func (SecurityGatewayIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayIamBinding)(nil)).Elem()
}

func (i SecurityGatewayIamBindingMap) ToSecurityGatewayIamBindingMapOutput() SecurityGatewayIamBindingMapOutput {
	return i.ToSecurityGatewayIamBindingMapOutputWithContext(context.Background())
}

func (i SecurityGatewayIamBindingMap) ToSecurityGatewayIamBindingMapOutputWithContext(ctx context.Context) SecurityGatewayIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayIamBindingMapOutput)
}

type SecurityGatewayIamBindingOutput struct{ *pulumi.OutputState }

func (SecurityGatewayIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayIamBinding)(nil)).Elem()
}

func (o SecurityGatewayIamBindingOutput) ToSecurityGatewayIamBindingOutput() SecurityGatewayIamBindingOutput {
	return o
}

func (o SecurityGatewayIamBindingOutput) ToSecurityGatewayIamBindingOutputWithContext(ctx context.Context) SecurityGatewayIamBindingOutput {
	return o
}

// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
// Structure is documented below.
func (o SecurityGatewayIamBindingOutput) Condition() SecurityGatewayIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *SecurityGatewayIamBinding) SecurityGatewayIamBindingConditionPtrOutput { return v.Condition }).(SecurityGatewayIamBindingConditionPtrOutput)
}

// (Computed) The etag of the IAM policy.
func (o SecurityGatewayIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. Must be omitted or set to `global`. Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
// location is specified, it is taken from the provider configuration.
func (o SecurityGatewayIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in `role`.
// Each entry can have one of the following values:
// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
func (o SecurityGatewayIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityGatewayIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o SecurityGatewayIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The role that should be applied. Only one
// `beyondcorp.SecurityGatewayIamBinding` can be used per role. Note that custom roles must be of the format
// `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o SecurityGatewayIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o SecurityGatewayIamBindingOutput) SecurityGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayIamBinding) pulumi.StringOutput { return v.SecurityGatewayId }).(pulumi.StringOutput)
}

type SecurityGatewayIamBindingArrayOutput struct{ *pulumi.OutputState }

func (SecurityGatewayIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayIamBinding)(nil)).Elem()
}

func (o SecurityGatewayIamBindingArrayOutput) ToSecurityGatewayIamBindingArrayOutput() SecurityGatewayIamBindingArrayOutput {
	return o
}

func (o SecurityGatewayIamBindingArrayOutput) ToSecurityGatewayIamBindingArrayOutputWithContext(ctx context.Context) SecurityGatewayIamBindingArrayOutput {
	return o
}

func (o SecurityGatewayIamBindingArrayOutput) Index(i pulumi.IntInput) SecurityGatewayIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGatewayIamBinding {
		return vs[0].([]*SecurityGatewayIamBinding)[vs[1].(int)]
	}).(SecurityGatewayIamBindingOutput)
}

type SecurityGatewayIamBindingMapOutput struct{ *pulumi.OutputState }

func (SecurityGatewayIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayIamBinding)(nil)).Elem()
}

func (o SecurityGatewayIamBindingMapOutput) ToSecurityGatewayIamBindingMapOutput() SecurityGatewayIamBindingMapOutput {
	return o
}

func (o SecurityGatewayIamBindingMapOutput) ToSecurityGatewayIamBindingMapOutputWithContext(ctx context.Context) SecurityGatewayIamBindingMapOutput {
	return o
}

func (o SecurityGatewayIamBindingMapOutput) MapIndex(k pulumi.StringInput) SecurityGatewayIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGatewayIamBinding {
		return vs[0].(map[string]*SecurityGatewayIamBinding)[vs[1].(string)]
	}).(SecurityGatewayIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayIamBindingInput)(nil)).Elem(), &SecurityGatewayIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayIamBindingArrayInput)(nil)).Elem(), SecurityGatewayIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayIamBindingMapInput)(nil)).Elem(), SecurityGatewayIamBindingMap{})
	pulumi.RegisterOutputType(SecurityGatewayIamBindingOutput{})
	pulumi.RegisterOutputType(SecurityGatewayIamBindingArrayOutput{})
	pulumi.RegisterOutputType(SecurityGatewayIamBindingMapOutput{})
}
