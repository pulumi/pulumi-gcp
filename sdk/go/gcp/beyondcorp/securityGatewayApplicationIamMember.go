// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beyondcorp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for BeyondCorp SecurityGatewayApplication. Each of these resources serves a different use case:
//
// * `beyondcorp.SecurityGatewayApplicationIamPolicy`: Authoritative. Sets the IAM policy for the securitygatewayapplication and replaces any existing policy already attached.
// * `beyondcorp.SecurityGatewayApplicationIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the securitygatewayapplication are preserved.
// * `beyondcorp.SecurityGatewayApplicationIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the securitygatewayapplication are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `beyondcorp.SecurityGatewayApplicationIamPolicy`: Retrieves the IAM policy for the securitygatewayapplication
//
// > **Note:** `beyondcorp.SecurityGatewayApplicationIamPolicy` **cannot** be used in conjunction with `beyondcorp.SecurityGatewayApplicationIamBinding` and `beyondcorp.SecurityGatewayApplicationIamMember` or they will fight over what your policy should be.
//
// > **Note:** `beyondcorp.SecurityGatewayApplicationIamBinding` resources **can be** used in conjunction with `beyondcorp.SecurityGatewayApplicationIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## beyondcorp.SecurityGatewayApplicationIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplicationIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayApplicationIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplicationIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayApplicationIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayApplicationIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayApplicationIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayApplicationIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &beyondcorp.SecurityGatewayApplicationIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayApplicationIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamMember(ctx, "member", &beyondcorp.SecurityGatewayApplicationIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamMember(ctx, "member", &beyondcorp.SecurityGatewayApplicationIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//				Condition: &beyondcorp.SecurityGatewayApplicationIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## This resource supports User Project Overrides.
//
// -
//
// # IAM policy for BeyondCorp SecurityGatewayApplication
//
// Three different resources help you manage your IAM policy for BeyondCorp SecurityGatewayApplication. Each of these resources serves a different use case:
//
// * `beyondcorp.SecurityGatewayApplicationIamPolicy`: Authoritative. Sets the IAM policy for the securitygatewayapplication and replaces any existing policy already attached.
// * `beyondcorp.SecurityGatewayApplicationIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the securitygatewayapplication are preserved.
// * `beyondcorp.SecurityGatewayApplicationIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the securitygatewayapplication are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `beyondcorp.SecurityGatewayApplicationIamPolicy`: Retrieves the IAM policy for the securitygatewayapplication
//
// > **Note:** `beyondcorp.SecurityGatewayApplicationIamPolicy` **cannot** be used in conjunction with `beyondcorp.SecurityGatewayApplicationIamBinding` and `beyondcorp.SecurityGatewayApplicationIamMember` or they will fight over what your policy should be.
//
// > **Note:** `beyondcorp.SecurityGatewayApplicationIamBinding` resources **can be** used in conjunction with `beyondcorp.SecurityGatewayApplicationIamMember` resources **only if** they do not grant privilege to the same role.
//
// > **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
//
// ## beyondcorp.SecurityGatewayApplicationIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplicationIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayApplicationIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/beyondcorp.securityGatewayUser",
//						Members: []string{
//							"user:jane@example.com",
//						},
//						Condition: {
//							Title:       "expires_after_2019_12_31",
//							Description: pulumi.StringRef("Expiring at midnight of 2019-12-31"),
//							Expression:  "request.time < timestamp(\"2020-01-01T00:00:00Z\")",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = beyondcorp.NewSecurityGatewayApplicationIamPolicy(ctx, "policy", &beyondcorp.SecurityGatewayApplicationIamPolicyArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				PolicyData:        pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayApplicationIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayApplicationIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamBinding(ctx, "binding", &beyondcorp.SecurityGatewayApplicationIamBindingArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//				Condition: &beyondcorp.SecurityGatewayApplicationIamBindingConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## beyondcorp.SecurityGatewayApplicationIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamMember(ctx, "member", &beyondcorp.SecurityGatewayApplicationIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// With IAM Conditions:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.NewSecurityGatewayApplicationIamMember(ctx, "member", &beyondcorp.SecurityGatewayApplicationIamMemberArgs{
//				Project:           pulumi.Any(example.Project),
//				SecurityGatewayId: pulumi.Any(example.SecurityGatewayId),
//				ApplicationId:     pulumi.Any(example.ApplicationId),
//				Role:              pulumi.String("roles/beyondcorp.securityGatewayUser"),
//				Member:            pulumi.String("user:jane@example.com"),
//				Condition: &beyondcorp.SecurityGatewayApplicationIamMemberConditionArgs{
//					Title:       pulumi.String("expires_after_2019_12_31"),
//					Description: pulumi.String("Expiring at midnight of 2019-12-31"),
//					Expression:  pulumi.String("request.time < timestamp(\"2020-01-01T00:00:00Z\")"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}}
//
// * {{project}}/{{security_gateway_id}}/{{application_id}}
//
// * {{security_gateway_id}}/{{application_id}}
//
// * {{application_id}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// BeyondCorp securitygatewayapplication IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayApplicationIamMember:SecurityGatewayApplicationIamMember editor "projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}} roles/beyondcorp.securityGatewayUser user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayApplicationIamMember:SecurityGatewayApplicationIamMember editor "projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}} roles/beyondcorp.securityGatewayUser"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:beyondcorp/securityGatewayApplicationIamMember:SecurityGatewayApplicationIamMember editor projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type SecurityGatewayApplicationIamMember struct {
	pulumi.CustomResourceState

	// Used to find the parent resource to bind the IAM policy to
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition SecurityGatewayApplicationIamMemberConditionPtrOutput `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	// * **Federated identities**: One or more federated identities in a workload or workforce identity pool, workload running on GKE, etc. Refer to the [Principal identifiers documentation](https://cloud.google.com/iam/docs/principal-identifiers#allow) for examples of targets and valid configuration. For example, "principal://iam.googleapis.com/locations/global/workforcePools/example-contractors/subject/joe@example.com"
	Member pulumi.StringOutput `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayApplicationIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringOutput `pulumi:"role"`
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringOutput `pulumi:"securityGatewayId"`
}

// NewSecurityGatewayApplicationIamMember registers a new resource with the given unique name, arguments, and options.
func NewSecurityGatewayApplicationIamMember(ctx *pulumi.Context,
	name string, args *SecurityGatewayApplicationIamMemberArgs, opts ...pulumi.ResourceOption) (*SecurityGatewayApplicationIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.SecurityGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGatewayApplicationIamMember
	err := ctx.RegisterResource("gcp:beyondcorp/securityGatewayApplicationIamMember:SecurityGatewayApplicationIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGatewayApplicationIamMember gets an existing SecurityGatewayApplicationIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGatewayApplicationIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGatewayApplicationIamMemberState, opts ...pulumi.ResourceOption) (*SecurityGatewayApplicationIamMember, error) {
	var resource SecurityGatewayApplicationIamMember
	err := ctx.ReadResource("gcp:beyondcorp/securityGatewayApplicationIamMember:SecurityGatewayApplicationIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGatewayApplicationIamMember resources.
type securityGatewayApplicationIamMemberState struct {
	// Used to find the parent resource to bind the IAM policy to
	ApplicationId *string `pulumi:"applicationId"`
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *SecurityGatewayApplicationIamMemberCondition `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	// * **Federated identities**: One or more federated identities in a workload or workforce identity pool, workload running on GKE, etc. Refer to the [Principal identifiers documentation](https://cloud.google.com/iam/docs/principal-identifiers#allow) for examples of targets and valid configuration. For example, "principal://iam.googleapis.com/locations/global/workforcePools/example-contractors/subject/joe@example.com"
	Member *string `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayApplicationIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role *string `pulumi:"role"`
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId *string `pulumi:"securityGatewayId"`
}

type SecurityGatewayApplicationIamMemberState struct {
	// Used to find the parent resource to bind the IAM policy to
	ApplicationId pulumi.StringPtrInput
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition SecurityGatewayApplicationIamMemberConditionPtrInput
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	// * **Federated identities**: One or more federated identities in a workload or workforce identity pool, workload running on GKE, etc. Refer to the [Principal identifiers documentation](https://cloud.google.com/iam/docs/principal-identifiers#allow) for examples of targets and valid configuration. For example, "principal://iam.googleapis.com/locations/global/workforcePools/example-contractors/subject/joe@example.com"
	Member pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayApplicationIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringPtrInput
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringPtrInput
}

func (SecurityGatewayApplicationIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayApplicationIamMemberState)(nil)).Elem()
}

type securityGatewayApplicationIamMemberArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ApplicationId string `pulumi:"applicationId"`
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *SecurityGatewayApplicationIamMemberCondition `pulumi:"condition"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	// * **Federated identities**: One or more federated identities in a workload or workforce identity pool, workload running on GKE, etc. Refer to the [Principal identifiers documentation](https://cloud.google.com/iam/docs/principal-identifiers#allow) for examples of targets and valid configuration. For example, "principal://iam.googleapis.com/locations/global/workforcePools/example-contractors/subject/joe@example.com"
	Member string `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayApplicationIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId string `pulumi:"securityGatewayId"`
}

// The set of arguments for constructing a SecurityGatewayApplicationIamMember resource.
type SecurityGatewayApplicationIamMemberArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	ApplicationId pulumi.StringInput
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition SecurityGatewayApplicationIamMemberConditionPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	// * **Federated identities**: One or more federated identities in a workload or workforce identity pool, workload running on GKE, etc. Refer to the [Principal identifiers documentation](https://cloud.google.com/iam/docs/principal-identifiers#allow) for examples of targets and valid configuration. For example, "principal://iam.googleapis.com/locations/global/workforcePools/example-contractors/subject/joe@example.com"
	Member pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `beyondcorp.SecurityGatewayApplicationIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput
	// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
	SecurityGatewayId pulumi.StringInput
}

func (SecurityGatewayApplicationIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGatewayApplicationIamMemberArgs)(nil)).Elem()
}

type SecurityGatewayApplicationIamMemberInput interface {
	pulumi.Input

	ToSecurityGatewayApplicationIamMemberOutput() SecurityGatewayApplicationIamMemberOutput
	ToSecurityGatewayApplicationIamMemberOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamMemberOutput
}

func (*SecurityGatewayApplicationIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayApplicationIamMember)(nil)).Elem()
}

func (i *SecurityGatewayApplicationIamMember) ToSecurityGatewayApplicationIamMemberOutput() SecurityGatewayApplicationIamMemberOutput {
	return i.ToSecurityGatewayApplicationIamMemberOutputWithContext(context.Background())
}

func (i *SecurityGatewayApplicationIamMember) ToSecurityGatewayApplicationIamMemberOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayApplicationIamMemberOutput)
}

// SecurityGatewayApplicationIamMemberArrayInput is an input type that accepts SecurityGatewayApplicationIamMemberArray and SecurityGatewayApplicationIamMemberArrayOutput values.
// You can construct a concrete instance of `SecurityGatewayApplicationIamMemberArrayInput` via:
//
//	SecurityGatewayApplicationIamMemberArray{ SecurityGatewayApplicationIamMemberArgs{...} }
type SecurityGatewayApplicationIamMemberArrayInput interface {
	pulumi.Input

	ToSecurityGatewayApplicationIamMemberArrayOutput() SecurityGatewayApplicationIamMemberArrayOutput
	ToSecurityGatewayApplicationIamMemberArrayOutputWithContext(context.Context) SecurityGatewayApplicationIamMemberArrayOutput
}

type SecurityGatewayApplicationIamMemberArray []SecurityGatewayApplicationIamMemberInput

func (SecurityGatewayApplicationIamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayApplicationIamMember)(nil)).Elem()
}

func (i SecurityGatewayApplicationIamMemberArray) ToSecurityGatewayApplicationIamMemberArrayOutput() SecurityGatewayApplicationIamMemberArrayOutput {
	return i.ToSecurityGatewayApplicationIamMemberArrayOutputWithContext(context.Background())
}

func (i SecurityGatewayApplicationIamMemberArray) ToSecurityGatewayApplicationIamMemberArrayOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayApplicationIamMemberArrayOutput)
}

// SecurityGatewayApplicationIamMemberMapInput is an input type that accepts SecurityGatewayApplicationIamMemberMap and SecurityGatewayApplicationIamMemberMapOutput values.
// You can construct a concrete instance of `SecurityGatewayApplicationIamMemberMapInput` via:
//
//	SecurityGatewayApplicationIamMemberMap{ "key": SecurityGatewayApplicationIamMemberArgs{...} }
type SecurityGatewayApplicationIamMemberMapInput interface {
	pulumi.Input

	ToSecurityGatewayApplicationIamMemberMapOutput() SecurityGatewayApplicationIamMemberMapOutput
	ToSecurityGatewayApplicationIamMemberMapOutputWithContext(context.Context) SecurityGatewayApplicationIamMemberMapOutput
}

type SecurityGatewayApplicationIamMemberMap map[string]SecurityGatewayApplicationIamMemberInput

func (SecurityGatewayApplicationIamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayApplicationIamMember)(nil)).Elem()
}

func (i SecurityGatewayApplicationIamMemberMap) ToSecurityGatewayApplicationIamMemberMapOutput() SecurityGatewayApplicationIamMemberMapOutput {
	return i.ToSecurityGatewayApplicationIamMemberMapOutputWithContext(context.Background())
}

func (i SecurityGatewayApplicationIamMemberMap) ToSecurityGatewayApplicationIamMemberMapOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGatewayApplicationIamMemberMapOutput)
}

type SecurityGatewayApplicationIamMemberOutput struct{ *pulumi.OutputState }

func (SecurityGatewayApplicationIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGatewayApplicationIamMember)(nil)).Elem()
}

func (o SecurityGatewayApplicationIamMemberOutput) ToSecurityGatewayApplicationIamMemberOutput() SecurityGatewayApplicationIamMemberOutput {
	return o
}

func (o SecurityGatewayApplicationIamMemberOutput) ToSecurityGatewayApplicationIamMemberOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamMemberOutput {
	return o
}

// Used to find the parent resource to bind the IAM policy to
func (o SecurityGatewayApplicationIamMemberOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamMember) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
// Structure is documented below.
func (o SecurityGatewayApplicationIamMemberOutput) Condition() SecurityGatewayApplicationIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamMember) SecurityGatewayApplicationIamMemberConditionPtrOutput {
		return v.Condition
	}).(SecurityGatewayApplicationIamMemberConditionPtrOutput)
}

// (Computed) The etag of the IAM policy.
func (o SecurityGatewayApplicationIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in `role`.
// Each entry can have one of the following values:
// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
// * **Federated identities**: One or more federated identities in a workload or workforce identity pool, workload running on GKE, etc. Refer to the [Principal identifiers documentation](https://cloud.google.com/iam/docs/principal-identifiers#allow) for examples of targets and valid configuration. For example, "principal://iam.googleapis.com/locations/global/workforcePools/example-contractors/subject/joe@example.com"
func (o SecurityGatewayApplicationIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o SecurityGatewayApplicationIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The role that should be applied. Only one
// `beyondcorp.SecurityGatewayApplicationIamBinding` can be used per role. Note that custom roles must be of the format
// `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o SecurityGatewayApplicationIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
func (o SecurityGatewayApplicationIamMemberOutput) SecurityGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGatewayApplicationIamMember) pulumi.StringOutput { return v.SecurityGatewayId }).(pulumi.StringOutput)
}

type SecurityGatewayApplicationIamMemberArrayOutput struct{ *pulumi.OutputState }

func (SecurityGatewayApplicationIamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGatewayApplicationIamMember)(nil)).Elem()
}

func (o SecurityGatewayApplicationIamMemberArrayOutput) ToSecurityGatewayApplicationIamMemberArrayOutput() SecurityGatewayApplicationIamMemberArrayOutput {
	return o
}

func (o SecurityGatewayApplicationIamMemberArrayOutput) ToSecurityGatewayApplicationIamMemberArrayOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamMemberArrayOutput {
	return o
}

func (o SecurityGatewayApplicationIamMemberArrayOutput) Index(i pulumi.IntInput) SecurityGatewayApplicationIamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGatewayApplicationIamMember {
		return vs[0].([]*SecurityGatewayApplicationIamMember)[vs[1].(int)]
	}).(SecurityGatewayApplicationIamMemberOutput)
}

type SecurityGatewayApplicationIamMemberMapOutput struct{ *pulumi.OutputState }

func (SecurityGatewayApplicationIamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGatewayApplicationIamMember)(nil)).Elem()
}

func (o SecurityGatewayApplicationIamMemberMapOutput) ToSecurityGatewayApplicationIamMemberMapOutput() SecurityGatewayApplicationIamMemberMapOutput {
	return o
}

func (o SecurityGatewayApplicationIamMemberMapOutput) ToSecurityGatewayApplicationIamMemberMapOutputWithContext(ctx context.Context) SecurityGatewayApplicationIamMemberMapOutput {
	return o
}

func (o SecurityGatewayApplicationIamMemberMapOutput) MapIndex(k pulumi.StringInput) SecurityGatewayApplicationIamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGatewayApplicationIamMember {
		return vs[0].(map[string]*SecurityGatewayApplicationIamMember)[vs[1].(string)]
	}).(SecurityGatewayApplicationIamMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayApplicationIamMemberInput)(nil)).Elem(), &SecurityGatewayApplicationIamMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayApplicationIamMemberArrayInput)(nil)).Elem(), SecurityGatewayApplicationIamMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGatewayApplicationIamMemberMapInput)(nil)).Elem(), SecurityGatewayApplicationIamMemberMap{})
	pulumi.RegisterOutputType(SecurityGatewayApplicationIamMemberOutput{})
	pulumi.RegisterOutputType(SecurityGatewayApplicationIamMemberArrayOutput{})
	pulumi.RegisterOutputType(SecurityGatewayApplicationIamMemberMapOutput{})
}
