// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beyondcorp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Google BeyondCorp App Gateway.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/beyondcorp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := beyondcorp.LookupAppGateway(ctx, &beyondcorp.LookupAppGatewayArgs{
//				Name: "my-beyondcorp-app-gateway",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAppGateway(ctx *pulumi.Context, args *LookupAppGatewayArgs, opts ...pulumi.InvokeOption) (*LookupAppGatewayResult, error) {
	var rv LookupAppGatewayResult
	err := ctx.Invoke("gcp:beyondcorp/getAppGateway:getAppGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppGateway.
type LookupAppGatewayArgs struct {
	// The name of the App Gateway.
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region in which the resource belongs. If it
	// is not provided, the provider region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getAppGateway.
type LookupAppGatewayResult struct {
	AllocatedConnections []GetAppGatewayAllocatedConnection `pulumi:"allocatedConnections"`
	DisplayName          string                             `pulumi:"displayName"`
	HostType             string                             `pulumi:"hostType"`
	// The provider-assigned unique ID for this managed resource.
	Id      string            `pulumi:"id"`
	Labels  map[string]string `pulumi:"labels"`
	Name    string            `pulumi:"name"`
	Project *string           `pulumi:"project"`
	Region  *string           `pulumi:"region"`
	State   string            `pulumi:"state"`
	Type    string            `pulumi:"type"`
	Uri     string            `pulumi:"uri"`
}

func LookupAppGatewayOutput(ctx *pulumi.Context, args LookupAppGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupAppGatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppGatewayResult, error) {
			args := v.(LookupAppGatewayArgs)
			r, err := LookupAppGateway(ctx, &args, opts...)
			var s LookupAppGatewayResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAppGatewayResultOutput)
}

// A collection of arguments for invoking getAppGateway.
type LookupAppGatewayOutputArgs struct {
	// The name of the App Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region in which the resource belongs. If it
	// is not provided, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupAppGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppGatewayArgs)(nil)).Elem()
}

// A collection of values returned by getAppGateway.
type LookupAppGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupAppGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppGatewayResult)(nil)).Elem()
}

func (o LookupAppGatewayResultOutput) ToLookupAppGatewayResultOutput() LookupAppGatewayResultOutput {
	return o
}

func (o LookupAppGatewayResultOutput) ToLookupAppGatewayResultOutputWithContext(ctx context.Context) LookupAppGatewayResultOutput {
	return o
}

func (o LookupAppGatewayResultOutput) AllocatedConnections() GetAppGatewayAllocatedConnectionArrayOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) []GetAppGatewayAllocatedConnection { return v.AllocatedConnections }).(GetAppGatewayAllocatedConnectionArrayOutput)
}

func (o LookupAppGatewayResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupAppGatewayResultOutput) HostType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) string { return v.HostType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAppGatewayResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAppGatewayResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupAppGatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAppGatewayResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupAppGatewayResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupAppGatewayResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupAppGatewayResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupAppGatewayResultOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppGatewayResult) string { return v.Uri }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppGatewayResultOutput{})
}
