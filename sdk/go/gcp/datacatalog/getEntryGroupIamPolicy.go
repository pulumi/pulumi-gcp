// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datacatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for entrygroup
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/datacatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datacatalog.LookupEntryGroupIamPolicy(ctx, &datacatalog.LookupEntryGroupIamPolicyArgs{
//				EntryGroup: google_data_catalog_entry_group.Basic_entry_group.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupEntryGroupIamPolicy(ctx *pulumi.Context, args *LookupEntryGroupIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupEntryGroupIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEntryGroupIamPolicyResult
	err := ctx.Invoke("gcp:datacatalog/getEntryGroupIamPolicy:getEntryGroupIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEntryGroupIamPolicy.
type LookupEntryGroupIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	EntryGroup string `pulumi:"entryGroup"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
}

// A collection of values returned by getEntryGroupIamPolicy.
type LookupEntryGroupIamPolicyResult struct {
	EntryGroup string `pulumi:"entryGroup"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `datacatalog.EntryGroupIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
}

func LookupEntryGroupIamPolicyOutput(ctx *pulumi.Context, args LookupEntryGroupIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupEntryGroupIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEntryGroupIamPolicyResult, error) {
			args := v.(LookupEntryGroupIamPolicyArgs)
			r, err := LookupEntryGroupIamPolicy(ctx, &args, opts...)
			var s LookupEntryGroupIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEntryGroupIamPolicyResultOutput)
}

// A collection of arguments for invoking getEntryGroupIamPolicy.
type LookupEntryGroupIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	EntryGroup pulumi.StringInput `pulumi:"entryGroup"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupEntryGroupIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntryGroupIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getEntryGroupIamPolicy.
type LookupEntryGroupIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupEntryGroupIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntryGroupIamPolicyResult)(nil)).Elem()
}

func (o LookupEntryGroupIamPolicyResultOutput) ToLookupEntryGroupIamPolicyResultOutput() LookupEntryGroupIamPolicyResultOutput {
	return o
}

func (o LookupEntryGroupIamPolicyResultOutput) ToLookupEntryGroupIamPolicyResultOutputWithContext(ctx context.Context) LookupEntryGroupIamPolicyResultOutput {
	return o
}

func (o LookupEntryGroupIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupEntryGroupIamPolicyResult] {
	return pulumix.Output[LookupEntryGroupIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupEntryGroupIamPolicyResultOutput) EntryGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupIamPolicyResult) string { return v.EntryGroup }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupEntryGroupIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupEntryGroupIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `datacatalog.EntryGroupIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupEntryGroupIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupEntryGroupIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupEntryGroupIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEntryGroupIamPolicyResultOutput{})
}
