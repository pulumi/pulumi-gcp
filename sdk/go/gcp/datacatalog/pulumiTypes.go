// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datacatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EntryBigqueryDateShardedSpec struct {
	Dataset     *string `pulumi:"dataset"`
	ShardCount  *int    `pulumi:"shardCount"`
	TablePrefix *string `pulumi:"tablePrefix"`
}

// EntryBigqueryDateShardedSpecInput is an input type that accepts EntryBigqueryDateShardedSpecArgs and EntryBigqueryDateShardedSpecOutput values.
// You can construct a concrete instance of `EntryBigqueryDateShardedSpecInput` via:
//
// 		 EntryBigqueryDateShardedSpecArgs{...}
//
type EntryBigqueryDateShardedSpecInput interface {
	pulumi.Input

	ToEntryBigqueryDateShardedSpecOutput() EntryBigqueryDateShardedSpecOutput
	ToEntryBigqueryDateShardedSpecOutputWithContext(context.Context) EntryBigqueryDateShardedSpecOutput
}

type EntryBigqueryDateShardedSpecArgs struct {
	Dataset     pulumi.StringPtrInput `pulumi:"dataset"`
	ShardCount  pulumi.IntPtrInput    `pulumi:"shardCount"`
	TablePrefix pulumi.StringPtrInput `pulumi:"tablePrefix"`
}

func (EntryBigqueryDateShardedSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryBigqueryDateShardedSpec)(nil)).Elem()
}

func (i EntryBigqueryDateShardedSpecArgs) ToEntryBigqueryDateShardedSpecOutput() EntryBigqueryDateShardedSpecOutput {
	return i.ToEntryBigqueryDateShardedSpecOutputWithContext(context.Background())
}

func (i EntryBigqueryDateShardedSpecArgs) ToEntryBigqueryDateShardedSpecOutputWithContext(ctx context.Context) EntryBigqueryDateShardedSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryDateShardedSpecOutput)
}

func (i EntryBigqueryDateShardedSpecArgs) ToEntryBigqueryDateShardedSpecPtrOutput() EntryBigqueryDateShardedSpecPtrOutput {
	return i.ToEntryBigqueryDateShardedSpecPtrOutputWithContext(context.Background())
}

func (i EntryBigqueryDateShardedSpecArgs) ToEntryBigqueryDateShardedSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryDateShardedSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryDateShardedSpecOutput).ToEntryBigqueryDateShardedSpecPtrOutputWithContext(ctx)
}

// EntryBigqueryDateShardedSpecPtrInput is an input type that accepts EntryBigqueryDateShardedSpecArgs, EntryBigqueryDateShardedSpecPtr and EntryBigqueryDateShardedSpecPtrOutput values.
// You can construct a concrete instance of `EntryBigqueryDateShardedSpecPtrInput` via:
//
// 		 EntryBigqueryDateShardedSpecArgs{...}
//
//  or:
//
// 		 nil
//
type EntryBigqueryDateShardedSpecPtrInput interface {
	pulumi.Input

	ToEntryBigqueryDateShardedSpecPtrOutput() EntryBigqueryDateShardedSpecPtrOutput
	ToEntryBigqueryDateShardedSpecPtrOutputWithContext(context.Context) EntryBigqueryDateShardedSpecPtrOutput
}

type entryBigqueryDateShardedSpecPtrType EntryBigqueryDateShardedSpecArgs

func EntryBigqueryDateShardedSpecPtr(v *EntryBigqueryDateShardedSpecArgs) EntryBigqueryDateShardedSpecPtrInput {
	return (*entryBigqueryDateShardedSpecPtrType)(v)
}

func (*entryBigqueryDateShardedSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryBigqueryDateShardedSpec)(nil)).Elem()
}

func (i *entryBigqueryDateShardedSpecPtrType) ToEntryBigqueryDateShardedSpecPtrOutput() EntryBigqueryDateShardedSpecPtrOutput {
	return i.ToEntryBigqueryDateShardedSpecPtrOutputWithContext(context.Background())
}

func (i *entryBigqueryDateShardedSpecPtrType) ToEntryBigqueryDateShardedSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryDateShardedSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryDateShardedSpecPtrOutput)
}

type EntryBigqueryDateShardedSpecOutput struct{ *pulumi.OutputState }

func (EntryBigqueryDateShardedSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryBigqueryDateShardedSpec)(nil)).Elem()
}

func (o EntryBigqueryDateShardedSpecOutput) ToEntryBigqueryDateShardedSpecOutput() EntryBigqueryDateShardedSpecOutput {
	return o
}

func (o EntryBigqueryDateShardedSpecOutput) ToEntryBigqueryDateShardedSpecOutputWithContext(ctx context.Context) EntryBigqueryDateShardedSpecOutput {
	return o
}

func (o EntryBigqueryDateShardedSpecOutput) ToEntryBigqueryDateShardedSpecPtrOutput() EntryBigqueryDateShardedSpecPtrOutput {
	return o.ToEntryBigqueryDateShardedSpecPtrOutputWithContext(context.Background())
}

func (o EntryBigqueryDateShardedSpecOutput) ToEntryBigqueryDateShardedSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryDateShardedSpecPtrOutput {
	return o.ApplyT(func(v EntryBigqueryDateShardedSpec) *EntryBigqueryDateShardedSpec {
		return &v
	}).(EntryBigqueryDateShardedSpecPtrOutput)
}
func (o EntryBigqueryDateShardedSpecOutput) Dataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntryBigqueryDateShardedSpec) *string { return v.Dataset }).(pulumi.StringPtrOutput)
}

func (o EntryBigqueryDateShardedSpecOutput) ShardCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EntryBigqueryDateShardedSpec) *int { return v.ShardCount }).(pulumi.IntPtrOutput)
}

func (o EntryBigqueryDateShardedSpecOutput) TablePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntryBigqueryDateShardedSpec) *string { return v.TablePrefix }).(pulumi.StringPtrOutput)
}

type EntryBigqueryDateShardedSpecPtrOutput struct{ *pulumi.OutputState }

func (EntryBigqueryDateShardedSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryBigqueryDateShardedSpec)(nil)).Elem()
}

func (o EntryBigqueryDateShardedSpecPtrOutput) ToEntryBigqueryDateShardedSpecPtrOutput() EntryBigqueryDateShardedSpecPtrOutput {
	return o
}

func (o EntryBigqueryDateShardedSpecPtrOutput) ToEntryBigqueryDateShardedSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryDateShardedSpecPtrOutput {
	return o
}

func (o EntryBigqueryDateShardedSpecPtrOutput) Elem() EntryBigqueryDateShardedSpecOutput {
	return o.ApplyT(func(v *EntryBigqueryDateShardedSpec) EntryBigqueryDateShardedSpec { return *v }).(EntryBigqueryDateShardedSpecOutput)
}

func (o EntryBigqueryDateShardedSpecPtrOutput) Dataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryBigqueryDateShardedSpec) *string {
		if v == nil {
			return nil
		}
		return v.Dataset
	}).(pulumi.StringPtrOutput)
}

func (o EntryBigqueryDateShardedSpecPtrOutput) ShardCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EntryBigqueryDateShardedSpec) *int {
		if v == nil {
			return nil
		}
		return v.ShardCount
	}).(pulumi.IntPtrOutput)
}

func (o EntryBigqueryDateShardedSpecPtrOutput) TablePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryBigqueryDateShardedSpec) *string {
		if v == nil {
			return nil
		}
		return v.TablePrefix
	}).(pulumi.StringPtrOutput)
}

type EntryBigqueryTableSpec struct {
	TableSourceType *string                          `pulumi:"tableSourceType"`
	TableSpec       *EntryBigqueryTableSpecTableSpec `pulumi:"tableSpec"`
	ViewSpec        *EntryBigqueryTableSpecViewSpec  `pulumi:"viewSpec"`
}

// EntryBigqueryTableSpecInput is an input type that accepts EntryBigqueryTableSpecArgs and EntryBigqueryTableSpecOutput values.
// You can construct a concrete instance of `EntryBigqueryTableSpecInput` via:
//
// 		 EntryBigqueryTableSpecArgs{...}
//
type EntryBigqueryTableSpecInput interface {
	pulumi.Input

	ToEntryBigqueryTableSpecOutput() EntryBigqueryTableSpecOutput
	ToEntryBigqueryTableSpecOutputWithContext(context.Context) EntryBigqueryTableSpecOutput
}

type EntryBigqueryTableSpecArgs struct {
	TableSourceType pulumi.StringPtrInput                   `pulumi:"tableSourceType"`
	TableSpec       EntryBigqueryTableSpecTableSpecPtrInput `pulumi:"tableSpec"`
	ViewSpec        EntryBigqueryTableSpecViewSpecPtrInput  `pulumi:"viewSpec"`
}

func (EntryBigqueryTableSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryBigqueryTableSpec)(nil)).Elem()
}

func (i EntryBigqueryTableSpecArgs) ToEntryBigqueryTableSpecOutput() EntryBigqueryTableSpecOutput {
	return i.ToEntryBigqueryTableSpecOutputWithContext(context.Background())
}

func (i EntryBigqueryTableSpecArgs) ToEntryBigqueryTableSpecOutputWithContext(ctx context.Context) EntryBigqueryTableSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryTableSpecOutput)
}

func (i EntryBigqueryTableSpecArgs) ToEntryBigqueryTableSpecPtrOutput() EntryBigqueryTableSpecPtrOutput {
	return i.ToEntryBigqueryTableSpecPtrOutputWithContext(context.Background())
}

func (i EntryBigqueryTableSpecArgs) ToEntryBigqueryTableSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryTableSpecOutput).ToEntryBigqueryTableSpecPtrOutputWithContext(ctx)
}

// EntryBigqueryTableSpecPtrInput is an input type that accepts EntryBigqueryTableSpecArgs, EntryBigqueryTableSpecPtr and EntryBigqueryTableSpecPtrOutput values.
// You can construct a concrete instance of `EntryBigqueryTableSpecPtrInput` via:
//
// 		 EntryBigqueryTableSpecArgs{...}
//
//  or:
//
// 		 nil
//
type EntryBigqueryTableSpecPtrInput interface {
	pulumi.Input

	ToEntryBigqueryTableSpecPtrOutput() EntryBigqueryTableSpecPtrOutput
	ToEntryBigqueryTableSpecPtrOutputWithContext(context.Context) EntryBigqueryTableSpecPtrOutput
}

type entryBigqueryTableSpecPtrType EntryBigqueryTableSpecArgs

func EntryBigqueryTableSpecPtr(v *EntryBigqueryTableSpecArgs) EntryBigqueryTableSpecPtrInput {
	return (*entryBigqueryTableSpecPtrType)(v)
}

func (*entryBigqueryTableSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryBigqueryTableSpec)(nil)).Elem()
}

func (i *entryBigqueryTableSpecPtrType) ToEntryBigqueryTableSpecPtrOutput() EntryBigqueryTableSpecPtrOutput {
	return i.ToEntryBigqueryTableSpecPtrOutputWithContext(context.Background())
}

func (i *entryBigqueryTableSpecPtrType) ToEntryBigqueryTableSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryTableSpecPtrOutput)
}

type EntryBigqueryTableSpecOutput struct{ *pulumi.OutputState }

func (EntryBigqueryTableSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryBigqueryTableSpec)(nil)).Elem()
}

func (o EntryBigqueryTableSpecOutput) ToEntryBigqueryTableSpecOutput() EntryBigqueryTableSpecOutput {
	return o
}

func (o EntryBigqueryTableSpecOutput) ToEntryBigqueryTableSpecOutputWithContext(ctx context.Context) EntryBigqueryTableSpecOutput {
	return o
}

func (o EntryBigqueryTableSpecOutput) ToEntryBigqueryTableSpecPtrOutput() EntryBigqueryTableSpecPtrOutput {
	return o.ToEntryBigqueryTableSpecPtrOutputWithContext(context.Background())
}

func (o EntryBigqueryTableSpecOutput) ToEntryBigqueryTableSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecPtrOutput {
	return o.ApplyT(func(v EntryBigqueryTableSpec) *EntryBigqueryTableSpec {
		return &v
	}).(EntryBigqueryTableSpecPtrOutput)
}
func (o EntryBigqueryTableSpecOutput) TableSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntryBigqueryTableSpec) *string { return v.TableSourceType }).(pulumi.StringPtrOutput)
}

func (o EntryBigqueryTableSpecOutput) TableSpec() EntryBigqueryTableSpecTableSpecPtrOutput {
	return o.ApplyT(func(v EntryBigqueryTableSpec) *EntryBigqueryTableSpecTableSpec { return v.TableSpec }).(EntryBigqueryTableSpecTableSpecPtrOutput)
}

func (o EntryBigqueryTableSpecOutput) ViewSpec() EntryBigqueryTableSpecViewSpecPtrOutput {
	return o.ApplyT(func(v EntryBigqueryTableSpec) *EntryBigqueryTableSpecViewSpec { return v.ViewSpec }).(EntryBigqueryTableSpecViewSpecPtrOutput)
}

type EntryBigqueryTableSpecPtrOutput struct{ *pulumi.OutputState }

func (EntryBigqueryTableSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryBigqueryTableSpec)(nil)).Elem()
}

func (o EntryBigqueryTableSpecPtrOutput) ToEntryBigqueryTableSpecPtrOutput() EntryBigqueryTableSpecPtrOutput {
	return o
}

func (o EntryBigqueryTableSpecPtrOutput) ToEntryBigqueryTableSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecPtrOutput {
	return o
}

func (o EntryBigqueryTableSpecPtrOutput) Elem() EntryBigqueryTableSpecOutput {
	return o.ApplyT(func(v *EntryBigqueryTableSpec) EntryBigqueryTableSpec { return *v }).(EntryBigqueryTableSpecOutput)
}

func (o EntryBigqueryTableSpecPtrOutput) TableSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryBigqueryTableSpec) *string {
		if v == nil {
			return nil
		}
		return v.TableSourceType
	}).(pulumi.StringPtrOutput)
}

func (o EntryBigqueryTableSpecPtrOutput) TableSpec() EntryBigqueryTableSpecTableSpecPtrOutput {
	return o.ApplyT(func(v *EntryBigqueryTableSpec) *EntryBigqueryTableSpecTableSpec {
		if v == nil {
			return nil
		}
		return v.TableSpec
	}).(EntryBigqueryTableSpecTableSpecPtrOutput)
}

func (o EntryBigqueryTableSpecPtrOutput) ViewSpec() EntryBigqueryTableSpecViewSpecPtrOutput {
	return o.ApplyT(func(v *EntryBigqueryTableSpec) *EntryBigqueryTableSpecViewSpec {
		if v == nil {
			return nil
		}
		return v.ViewSpec
	}).(EntryBigqueryTableSpecViewSpecPtrOutput)
}

type EntryBigqueryTableSpecTableSpec struct {
	GroupedEntry *string `pulumi:"groupedEntry"`
}

// EntryBigqueryTableSpecTableSpecInput is an input type that accepts EntryBigqueryTableSpecTableSpecArgs and EntryBigqueryTableSpecTableSpecOutput values.
// You can construct a concrete instance of `EntryBigqueryTableSpecTableSpecInput` via:
//
// 		 EntryBigqueryTableSpecTableSpecArgs{...}
//
type EntryBigqueryTableSpecTableSpecInput interface {
	pulumi.Input

	ToEntryBigqueryTableSpecTableSpecOutput() EntryBigqueryTableSpecTableSpecOutput
	ToEntryBigqueryTableSpecTableSpecOutputWithContext(context.Context) EntryBigqueryTableSpecTableSpecOutput
}

type EntryBigqueryTableSpecTableSpecArgs struct {
	GroupedEntry pulumi.StringPtrInput `pulumi:"groupedEntry"`
}

func (EntryBigqueryTableSpecTableSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryBigqueryTableSpecTableSpec)(nil)).Elem()
}

func (i EntryBigqueryTableSpecTableSpecArgs) ToEntryBigqueryTableSpecTableSpecOutput() EntryBigqueryTableSpecTableSpecOutput {
	return i.ToEntryBigqueryTableSpecTableSpecOutputWithContext(context.Background())
}

func (i EntryBigqueryTableSpecTableSpecArgs) ToEntryBigqueryTableSpecTableSpecOutputWithContext(ctx context.Context) EntryBigqueryTableSpecTableSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryTableSpecTableSpecOutput)
}

func (i EntryBigqueryTableSpecTableSpecArgs) ToEntryBigqueryTableSpecTableSpecPtrOutput() EntryBigqueryTableSpecTableSpecPtrOutput {
	return i.ToEntryBigqueryTableSpecTableSpecPtrOutputWithContext(context.Background())
}

func (i EntryBigqueryTableSpecTableSpecArgs) ToEntryBigqueryTableSpecTableSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecTableSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryTableSpecTableSpecOutput).ToEntryBigqueryTableSpecTableSpecPtrOutputWithContext(ctx)
}

// EntryBigqueryTableSpecTableSpecPtrInput is an input type that accepts EntryBigqueryTableSpecTableSpecArgs, EntryBigqueryTableSpecTableSpecPtr and EntryBigqueryTableSpecTableSpecPtrOutput values.
// You can construct a concrete instance of `EntryBigqueryTableSpecTableSpecPtrInput` via:
//
// 		 EntryBigqueryTableSpecTableSpecArgs{...}
//
//  or:
//
// 		 nil
//
type EntryBigqueryTableSpecTableSpecPtrInput interface {
	pulumi.Input

	ToEntryBigqueryTableSpecTableSpecPtrOutput() EntryBigqueryTableSpecTableSpecPtrOutput
	ToEntryBigqueryTableSpecTableSpecPtrOutputWithContext(context.Context) EntryBigqueryTableSpecTableSpecPtrOutput
}

type entryBigqueryTableSpecTableSpecPtrType EntryBigqueryTableSpecTableSpecArgs

func EntryBigqueryTableSpecTableSpecPtr(v *EntryBigqueryTableSpecTableSpecArgs) EntryBigqueryTableSpecTableSpecPtrInput {
	return (*entryBigqueryTableSpecTableSpecPtrType)(v)
}

func (*entryBigqueryTableSpecTableSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryBigqueryTableSpecTableSpec)(nil)).Elem()
}

func (i *entryBigqueryTableSpecTableSpecPtrType) ToEntryBigqueryTableSpecTableSpecPtrOutput() EntryBigqueryTableSpecTableSpecPtrOutput {
	return i.ToEntryBigqueryTableSpecTableSpecPtrOutputWithContext(context.Background())
}

func (i *entryBigqueryTableSpecTableSpecPtrType) ToEntryBigqueryTableSpecTableSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecTableSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryTableSpecTableSpecPtrOutput)
}

type EntryBigqueryTableSpecTableSpecOutput struct{ *pulumi.OutputState }

func (EntryBigqueryTableSpecTableSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryBigqueryTableSpecTableSpec)(nil)).Elem()
}

func (o EntryBigqueryTableSpecTableSpecOutput) ToEntryBigqueryTableSpecTableSpecOutput() EntryBigqueryTableSpecTableSpecOutput {
	return o
}

func (o EntryBigqueryTableSpecTableSpecOutput) ToEntryBigqueryTableSpecTableSpecOutputWithContext(ctx context.Context) EntryBigqueryTableSpecTableSpecOutput {
	return o
}

func (o EntryBigqueryTableSpecTableSpecOutput) ToEntryBigqueryTableSpecTableSpecPtrOutput() EntryBigqueryTableSpecTableSpecPtrOutput {
	return o.ToEntryBigqueryTableSpecTableSpecPtrOutputWithContext(context.Background())
}

func (o EntryBigqueryTableSpecTableSpecOutput) ToEntryBigqueryTableSpecTableSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecTableSpecPtrOutput {
	return o.ApplyT(func(v EntryBigqueryTableSpecTableSpec) *EntryBigqueryTableSpecTableSpec {
		return &v
	}).(EntryBigqueryTableSpecTableSpecPtrOutput)
}
func (o EntryBigqueryTableSpecTableSpecOutput) GroupedEntry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntryBigqueryTableSpecTableSpec) *string { return v.GroupedEntry }).(pulumi.StringPtrOutput)
}

type EntryBigqueryTableSpecTableSpecPtrOutput struct{ *pulumi.OutputState }

func (EntryBigqueryTableSpecTableSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryBigqueryTableSpecTableSpec)(nil)).Elem()
}

func (o EntryBigqueryTableSpecTableSpecPtrOutput) ToEntryBigqueryTableSpecTableSpecPtrOutput() EntryBigqueryTableSpecTableSpecPtrOutput {
	return o
}

func (o EntryBigqueryTableSpecTableSpecPtrOutput) ToEntryBigqueryTableSpecTableSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecTableSpecPtrOutput {
	return o
}

func (o EntryBigqueryTableSpecTableSpecPtrOutput) Elem() EntryBigqueryTableSpecTableSpecOutput {
	return o.ApplyT(func(v *EntryBigqueryTableSpecTableSpec) EntryBigqueryTableSpecTableSpec { return *v }).(EntryBigqueryTableSpecTableSpecOutput)
}

func (o EntryBigqueryTableSpecTableSpecPtrOutput) GroupedEntry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryBigqueryTableSpecTableSpec) *string {
		if v == nil {
			return nil
		}
		return v.GroupedEntry
	}).(pulumi.StringPtrOutput)
}

type EntryBigqueryTableSpecViewSpec struct {
	ViewQuery *string `pulumi:"viewQuery"`
}

// EntryBigqueryTableSpecViewSpecInput is an input type that accepts EntryBigqueryTableSpecViewSpecArgs and EntryBigqueryTableSpecViewSpecOutput values.
// You can construct a concrete instance of `EntryBigqueryTableSpecViewSpecInput` via:
//
// 		 EntryBigqueryTableSpecViewSpecArgs{...}
//
type EntryBigqueryTableSpecViewSpecInput interface {
	pulumi.Input

	ToEntryBigqueryTableSpecViewSpecOutput() EntryBigqueryTableSpecViewSpecOutput
	ToEntryBigqueryTableSpecViewSpecOutputWithContext(context.Context) EntryBigqueryTableSpecViewSpecOutput
}

type EntryBigqueryTableSpecViewSpecArgs struct {
	ViewQuery pulumi.StringPtrInput `pulumi:"viewQuery"`
}

func (EntryBigqueryTableSpecViewSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryBigqueryTableSpecViewSpec)(nil)).Elem()
}

func (i EntryBigqueryTableSpecViewSpecArgs) ToEntryBigqueryTableSpecViewSpecOutput() EntryBigqueryTableSpecViewSpecOutput {
	return i.ToEntryBigqueryTableSpecViewSpecOutputWithContext(context.Background())
}

func (i EntryBigqueryTableSpecViewSpecArgs) ToEntryBigqueryTableSpecViewSpecOutputWithContext(ctx context.Context) EntryBigqueryTableSpecViewSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryTableSpecViewSpecOutput)
}

func (i EntryBigqueryTableSpecViewSpecArgs) ToEntryBigqueryTableSpecViewSpecPtrOutput() EntryBigqueryTableSpecViewSpecPtrOutput {
	return i.ToEntryBigqueryTableSpecViewSpecPtrOutputWithContext(context.Background())
}

func (i EntryBigqueryTableSpecViewSpecArgs) ToEntryBigqueryTableSpecViewSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecViewSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryTableSpecViewSpecOutput).ToEntryBigqueryTableSpecViewSpecPtrOutputWithContext(ctx)
}

// EntryBigqueryTableSpecViewSpecPtrInput is an input type that accepts EntryBigqueryTableSpecViewSpecArgs, EntryBigqueryTableSpecViewSpecPtr and EntryBigqueryTableSpecViewSpecPtrOutput values.
// You can construct a concrete instance of `EntryBigqueryTableSpecViewSpecPtrInput` via:
//
// 		 EntryBigqueryTableSpecViewSpecArgs{...}
//
//  or:
//
// 		 nil
//
type EntryBigqueryTableSpecViewSpecPtrInput interface {
	pulumi.Input

	ToEntryBigqueryTableSpecViewSpecPtrOutput() EntryBigqueryTableSpecViewSpecPtrOutput
	ToEntryBigqueryTableSpecViewSpecPtrOutputWithContext(context.Context) EntryBigqueryTableSpecViewSpecPtrOutput
}

type entryBigqueryTableSpecViewSpecPtrType EntryBigqueryTableSpecViewSpecArgs

func EntryBigqueryTableSpecViewSpecPtr(v *EntryBigqueryTableSpecViewSpecArgs) EntryBigqueryTableSpecViewSpecPtrInput {
	return (*entryBigqueryTableSpecViewSpecPtrType)(v)
}

func (*entryBigqueryTableSpecViewSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryBigqueryTableSpecViewSpec)(nil)).Elem()
}

func (i *entryBigqueryTableSpecViewSpecPtrType) ToEntryBigqueryTableSpecViewSpecPtrOutput() EntryBigqueryTableSpecViewSpecPtrOutput {
	return i.ToEntryBigqueryTableSpecViewSpecPtrOutputWithContext(context.Background())
}

func (i *entryBigqueryTableSpecViewSpecPtrType) ToEntryBigqueryTableSpecViewSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecViewSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryBigqueryTableSpecViewSpecPtrOutput)
}

type EntryBigqueryTableSpecViewSpecOutput struct{ *pulumi.OutputState }

func (EntryBigqueryTableSpecViewSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryBigqueryTableSpecViewSpec)(nil)).Elem()
}

func (o EntryBigqueryTableSpecViewSpecOutput) ToEntryBigqueryTableSpecViewSpecOutput() EntryBigqueryTableSpecViewSpecOutput {
	return o
}

func (o EntryBigqueryTableSpecViewSpecOutput) ToEntryBigqueryTableSpecViewSpecOutputWithContext(ctx context.Context) EntryBigqueryTableSpecViewSpecOutput {
	return o
}

func (o EntryBigqueryTableSpecViewSpecOutput) ToEntryBigqueryTableSpecViewSpecPtrOutput() EntryBigqueryTableSpecViewSpecPtrOutput {
	return o.ToEntryBigqueryTableSpecViewSpecPtrOutputWithContext(context.Background())
}

func (o EntryBigqueryTableSpecViewSpecOutput) ToEntryBigqueryTableSpecViewSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecViewSpecPtrOutput {
	return o.ApplyT(func(v EntryBigqueryTableSpecViewSpec) *EntryBigqueryTableSpecViewSpec {
		return &v
	}).(EntryBigqueryTableSpecViewSpecPtrOutput)
}
func (o EntryBigqueryTableSpecViewSpecOutput) ViewQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntryBigqueryTableSpecViewSpec) *string { return v.ViewQuery }).(pulumi.StringPtrOutput)
}

type EntryBigqueryTableSpecViewSpecPtrOutput struct{ *pulumi.OutputState }

func (EntryBigqueryTableSpecViewSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryBigqueryTableSpecViewSpec)(nil)).Elem()
}

func (o EntryBigqueryTableSpecViewSpecPtrOutput) ToEntryBigqueryTableSpecViewSpecPtrOutput() EntryBigqueryTableSpecViewSpecPtrOutput {
	return o
}

func (o EntryBigqueryTableSpecViewSpecPtrOutput) ToEntryBigqueryTableSpecViewSpecPtrOutputWithContext(ctx context.Context) EntryBigqueryTableSpecViewSpecPtrOutput {
	return o
}

func (o EntryBigqueryTableSpecViewSpecPtrOutput) Elem() EntryBigqueryTableSpecViewSpecOutput {
	return o.ApplyT(func(v *EntryBigqueryTableSpecViewSpec) EntryBigqueryTableSpecViewSpec { return *v }).(EntryBigqueryTableSpecViewSpecOutput)
}

func (o EntryBigqueryTableSpecViewSpecPtrOutput) ViewQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryBigqueryTableSpecViewSpec) *string {
		if v == nil {
			return nil
		}
		return v.ViewQuery
	}).(pulumi.StringPtrOutput)
}

type EntryGcsFilesetSpec struct {
	// Patterns to identify a set of files in Google Cloud Storage.
	// See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
	// for more information. Note that bucket wildcards are currently not supported. Examples of valid filePatterns:
	// * gs://bucket_name/dir/*: matches all files within bucket_name/dir directory.
	// * gs://bucket_name/dir/**: matches all files in bucket_name/dir spanning all subdirectories.
	// * gs://bucket_name/file*: matches files prefixed by file in bucketName
	// * gs://bucket_name/??.txt: matches files with two characters followed by .txt in bucketName
	// * gs://bucket_name/[aeiou].txt: matches files that contain a single vowel character followed by .txt in bucketName
	// * gs://bucket_name/[a-m].txt: matches files that contain a, b, ... or m followed by .txt in bucketName
	// * gs://bucket_name/a/*/b: matches all files in bucketName that match a/*/b pattern, such as a/c/b, a/d/b
	// * gs://another_bucket/a.txt: matches gs://another_bucket/a.txt
	FilePatterns []string `pulumi:"filePatterns"`
	// -
	// Sample files contained in this fileset, not all files contained in this fileset are represented here.  Structure is documented below.
	SampleGcsFileSpecs []EntryGcsFilesetSpecSampleGcsFileSpec `pulumi:"sampleGcsFileSpecs"`
}

// EntryGcsFilesetSpecInput is an input type that accepts EntryGcsFilesetSpecArgs and EntryGcsFilesetSpecOutput values.
// You can construct a concrete instance of `EntryGcsFilesetSpecInput` via:
//
// 		 EntryGcsFilesetSpecArgs{...}
//
type EntryGcsFilesetSpecInput interface {
	pulumi.Input

	ToEntryGcsFilesetSpecOutput() EntryGcsFilesetSpecOutput
	ToEntryGcsFilesetSpecOutputWithContext(context.Context) EntryGcsFilesetSpecOutput
}

type EntryGcsFilesetSpecArgs struct {
	// Patterns to identify a set of files in Google Cloud Storage.
	// See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
	// for more information. Note that bucket wildcards are currently not supported. Examples of valid filePatterns:
	// * gs://bucket_name/dir/*: matches all files within bucket_name/dir directory.
	// * gs://bucket_name/dir/**: matches all files in bucket_name/dir spanning all subdirectories.
	// * gs://bucket_name/file*: matches files prefixed by file in bucketName
	// * gs://bucket_name/??.txt: matches files with two characters followed by .txt in bucketName
	// * gs://bucket_name/[aeiou].txt: matches files that contain a single vowel character followed by .txt in bucketName
	// * gs://bucket_name/[a-m].txt: matches files that contain a, b, ... or m followed by .txt in bucketName
	// * gs://bucket_name/a/*/b: matches all files in bucketName that match a/*/b pattern, such as a/c/b, a/d/b
	// * gs://another_bucket/a.txt: matches gs://another_bucket/a.txt
	FilePatterns pulumi.StringArrayInput `pulumi:"filePatterns"`
	// -
	// Sample files contained in this fileset, not all files contained in this fileset are represented here.  Structure is documented below.
	SampleGcsFileSpecs EntryGcsFilesetSpecSampleGcsFileSpecArrayInput `pulumi:"sampleGcsFileSpecs"`
}

func (EntryGcsFilesetSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGcsFilesetSpec)(nil)).Elem()
}

func (i EntryGcsFilesetSpecArgs) ToEntryGcsFilesetSpecOutput() EntryGcsFilesetSpecOutput {
	return i.ToEntryGcsFilesetSpecOutputWithContext(context.Background())
}

func (i EntryGcsFilesetSpecArgs) ToEntryGcsFilesetSpecOutputWithContext(ctx context.Context) EntryGcsFilesetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGcsFilesetSpecOutput)
}

func (i EntryGcsFilesetSpecArgs) ToEntryGcsFilesetSpecPtrOutput() EntryGcsFilesetSpecPtrOutput {
	return i.ToEntryGcsFilesetSpecPtrOutputWithContext(context.Background())
}

func (i EntryGcsFilesetSpecArgs) ToEntryGcsFilesetSpecPtrOutputWithContext(ctx context.Context) EntryGcsFilesetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGcsFilesetSpecOutput).ToEntryGcsFilesetSpecPtrOutputWithContext(ctx)
}

// EntryGcsFilesetSpecPtrInput is an input type that accepts EntryGcsFilesetSpecArgs, EntryGcsFilesetSpecPtr and EntryGcsFilesetSpecPtrOutput values.
// You can construct a concrete instance of `EntryGcsFilesetSpecPtrInput` via:
//
// 		 EntryGcsFilesetSpecArgs{...}
//
//  or:
//
// 		 nil
//
type EntryGcsFilesetSpecPtrInput interface {
	pulumi.Input

	ToEntryGcsFilesetSpecPtrOutput() EntryGcsFilesetSpecPtrOutput
	ToEntryGcsFilesetSpecPtrOutputWithContext(context.Context) EntryGcsFilesetSpecPtrOutput
}

type entryGcsFilesetSpecPtrType EntryGcsFilesetSpecArgs

func EntryGcsFilesetSpecPtr(v *EntryGcsFilesetSpecArgs) EntryGcsFilesetSpecPtrInput {
	return (*entryGcsFilesetSpecPtrType)(v)
}

func (*entryGcsFilesetSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryGcsFilesetSpec)(nil)).Elem()
}

func (i *entryGcsFilesetSpecPtrType) ToEntryGcsFilesetSpecPtrOutput() EntryGcsFilesetSpecPtrOutput {
	return i.ToEntryGcsFilesetSpecPtrOutputWithContext(context.Background())
}

func (i *entryGcsFilesetSpecPtrType) ToEntryGcsFilesetSpecPtrOutputWithContext(ctx context.Context) EntryGcsFilesetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGcsFilesetSpecPtrOutput)
}

type EntryGcsFilesetSpecOutput struct{ *pulumi.OutputState }

func (EntryGcsFilesetSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGcsFilesetSpec)(nil)).Elem()
}

func (o EntryGcsFilesetSpecOutput) ToEntryGcsFilesetSpecOutput() EntryGcsFilesetSpecOutput {
	return o
}

func (o EntryGcsFilesetSpecOutput) ToEntryGcsFilesetSpecOutputWithContext(ctx context.Context) EntryGcsFilesetSpecOutput {
	return o
}

func (o EntryGcsFilesetSpecOutput) ToEntryGcsFilesetSpecPtrOutput() EntryGcsFilesetSpecPtrOutput {
	return o.ToEntryGcsFilesetSpecPtrOutputWithContext(context.Background())
}

func (o EntryGcsFilesetSpecOutput) ToEntryGcsFilesetSpecPtrOutputWithContext(ctx context.Context) EntryGcsFilesetSpecPtrOutput {
	return o.ApplyT(func(v EntryGcsFilesetSpec) *EntryGcsFilesetSpec {
		return &v
	}).(EntryGcsFilesetSpecPtrOutput)
}

// Patterns to identify a set of files in Google Cloud Storage.
// See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
// for more information. Note that bucket wildcards are currently not supported. Examples of valid filePatterns:
// * gs://bucket_name/dir/*: matches all files within bucket_name/dir directory.
// * gs://bucket_name/dir/**: matches all files in bucket_name/dir spanning all subdirectories.
// * gs://bucket_name/file*: matches files prefixed by file in bucketName
// * gs://bucket_name/??.txt: matches files with two characters followed by .txt in bucketName
// * gs://bucket_name/[aeiou].txt: matches files that contain a single vowel character followed by .txt in bucketName
// * gs://bucket_name/[a-m].txt: matches files that contain a, b, ... or m followed by .txt in bucketName
// * gs://bucket_name/a/*/b: matches all files in bucketName that match a/*/b pattern, such as a/c/b, a/d/b
// * gs://another_bucket/a.txt: matches gs://another_bucket/a.txt
func (o EntryGcsFilesetSpecOutput) FilePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntryGcsFilesetSpec) []string { return v.FilePatterns }).(pulumi.StringArrayOutput)
}

// -
// Sample files contained in this fileset, not all files contained in this fileset are represented here.  Structure is documented below.
func (o EntryGcsFilesetSpecOutput) SampleGcsFileSpecs() EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput {
	return o.ApplyT(func(v EntryGcsFilesetSpec) []EntryGcsFilesetSpecSampleGcsFileSpec { return v.SampleGcsFileSpecs }).(EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput)
}

type EntryGcsFilesetSpecPtrOutput struct{ *pulumi.OutputState }

func (EntryGcsFilesetSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryGcsFilesetSpec)(nil)).Elem()
}

func (o EntryGcsFilesetSpecPtrOutput) ToEntryGcsFilesetSpecPtrOutput() EntryGcsFilesetSpecPtrOutput {
	return o
}

func (o EntryGcsFilesetSpecPtrOutput) ToEntryGcsFilesetSpecPtrOutputWithContext(ctx context.Context) EntryGcsFilesetSpecPtrOutput {
	return o
}

func (o EntryGcsFilesetSpecPtrOutput) Elem() EntryGcsFilesetSpecOutput {
	return o.ApplyT(func(v *EntryGcsFilesetSpec) EntryGcsFilesetSpec { return *v }).(EntryGcsFilesetSpecOutput)
}

// Patterns to identify a set of files in Google Cloud Storage.
// See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
// for more information. Note that bucket wildcards are currently not supported. Examples of valid filePatterns:
// * gs://bucket_name/dir/*: matches all files within bucket_name/dir directory.
// * gs://bucket_name/dir/**: matches all files in bucket_name/dir spanning all subdirectories.
// * gs://bucket_name/file*: matches files prefixed by file in bucketName
// * gs://bucket_name/??.txt: matches files with two characters followed by .txt in bucketName
// * gs://bucket_name/[aeiou].txt: matches files that contain a single vowel character followed by .txt in bucketName
// * gs://bucket_name/[a-m].txt: matches files that contain a, b, ... or m followed by .txt in bucketName
// * gs://bucket_name/a/*/b: matches all files in bucketName that match a/*/b pattern, such as a/c/b, a/d/b
// * gs://another_bucket/a.txt: matches gs://another_bucket/a.txt
func (o EntryGcsFilesetSpecPtrOutput) FilePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EntryGcsFilesetSpec) []string {
		if v == nil {
			return nil
		}
		return v.FilePatterns
	}).(pulumi.StringArrayOutput)
}

// -
// Sample files contained in this fileset, not all files contained in this fileset are represented here.  Structure is documented below.
func (o EntryGcsFilesetSpecPtrOutput) SampleGcsFileSpecs() EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput {
	return o.ApplyT(func(v *EntryGcsFilesetSpec) []EntryGcsFilesetSpecSampleGcsFileSpec {
		if v == nil {
			return nil
		}
		return v.SampleGcsFileSpecs
	}).(EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput)
}

type EntryGcsFilesetSpecSampleGcsFileSpec struct {
	// -
	// The full file path
	FilePath *string `pulumi:"filePath"`
	// -
	// The size of the file, in bytes.
	SizeBytes *int `pulumi:"sizeBytes"`
}

// EntryGcsFilesetSpecSampleGcsFileSpecInput is an input type that accepts EntryGcsFilesetSpecSampleGcsFileSpecArgs and EntryGcsFilesetSpecSampleGcsFileSpecOutput values.
// You can construct a concrete instance of `EntryGcsFilesetSpecSampleGcsFileSpecInput` via:
//
// 		 EntryGcsFilesetSpecSampleGcsFileSpecArgs{...}
//
type EntryGcsFilesetSpecSampleGcsFileSpecInput interface {
	pulumi.Input

	ToEntryGcsFilesetSpecSampleGcsFileSpecOutput() EntryGcsFilesetSpecSampleGcsFileSpecOutput
	ToEntryGcsFilesetSpecSampleGcsFileSpecOutputWithContext(context.Context) EntryGcsFilesetSpecSampleGcsFileSpecOutput
}

type EntryGcsFilesetSpecSampleGcsFileSpecArgs struct {
	// -
	// The full file path
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// -
	// The size of the file, in bytes.
	SizeBytes pulumi.IntPtrInput `pulumi:"sizeBytes"`
}

func (EntryGcsFilesetSpecSampleGcsFileSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGcsFilesetSpecSampleGcsFileSpec)(nil)).Elem()
}

func (i EntryGcsFilesetSpecSampleGcsFileSpecArgs) ToEntryGcsFilesetSpecSampleGcsFileSpecOutput() EntryGcsFilesetSpecSampleGcsFileSpecOutput {
	return i.ToEntryGcsFilesetSpecSampleGcsFileSpecOutputWithContext(context.Background())
}

func (i EntryGcsFilesetSpecSampleGcsFileSpecArgs) ToEntryGcsFilesetSpecSampleGcsFileSpecOutputWithContext(ctx context.Context) EntryGcsFilesetSpecSampleGcsFileSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGcsFilesetSpecSampleGcsFileSpecOutput)
}

// EntryGcsFilesetSpecSampleGcsFileSpecArrayInput is an input type that accepts EntryGcsFilesetSpecSampleGcsFileSpecArray and EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput values.
// You can construct a concrete instance of `EntryGcsFilesetSpecSampleGcsFileSpecArrayInput` via:
//
// 		 EntryGcsFilesetSpecSampleGcsFileSpecArray{ EntryGcsFilesetSpecSampleGcsFileSpecArgs{...} }
//
type EntryGcsFilesetSpecSampleGcsFileSpecArrayInput interface {
	pulumi.Input

	ToEntryGcsFilesetSpecSampleGcsFileSpecArrayOutput() EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput
	ToEntryGcsFilesetSpecSampleGcsFileSpecArrayOutputWithContext(context.Context) EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput
}

type EntryGcsFilesetSpecSampleGcsFileSpecArray []EntryGcsFilesetSpecSampleGcsFileSpecInput

func (EntryGcsFilesetSpecSampleGcsFileSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntryGcsFilesetSpecSampleGcsFileSpec)(nil)).Elem()
}

func (i EntryGcsFilesetSpecSampleGcsFileSpecArray) ToEntryGcsFilesetSpecSampleGcsFileSpecArrayOutput() EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput {
	return i.ToEntryGcsFilesetSpecSampleGcsFileSpecArrayOutputWithContext(context.Background())
}

func (i EntryGcsFilesetSpecSampleGcsFileSpecArray) ToEntryGcsFilesetSpecSampleGcsFileSpecArrayOutputWithContext(ctx context.Context) EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput)
}

type EntryGcsFilesetSpecSampleGcsFileSpecOutput struct{ *pulumi.OutputState }

func (EntryGcsFilesetSpecSampleGcsFileSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGcsFilesetSpecSampleGcsFileSpec)(nil)).Elem()
}

func (o EntryGcsFilesetSpecSampleGcsFileSpecOutput) ToEntryGcsFilesetSpecSampleGcsFileSpecOutput() EntryGcsFilesetSpecSampleGcsFileSpecOutput {
	return o
}

func (o EntryGcsFilesetSpecSampleGcsFileSpecOutput) ToEntryGcsFilesetSpecSampleGcsFileSpecOutputWithContext(ctx context.Context) EntryGcsFilesetSpecSampleGcsFileSpecOutput {
	return o
}

// -
// The full file path
func (o EntryGcsFilesetSpecSampleGcsFileSpecOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntryGcsFilesetSpecSampleGcsFileSpec) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// -
// The size of the file, in bytes.
func (o EntryGcsFilesetSpecSampleGcsFileSpecOutput) SizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EntryGcsFilesetSpecSampleGcsFileSpec) *int { return v.SizeBytes }).(pulumi.IntPtrOutput)
}

type EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput struct{ *pulumi.OutputState }

func (EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntryGcsFilesetSpecSampleGcsFileSpec)(nil)).Elem()
}

func (o EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput) ToEntryGcsFilesetSpecSampleGcsFileSpecArrayOutput() EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput {
	return o
}

func (o EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput) ToEntryGcsFilesetSpecSampleGcsFileSpecArrayOutputWithContext(ctx context.Context) EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput {
	return o
}

func (o EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput) Index(i pulumi.IntInput) EntryGcsFilesetSpecSampleGcsFileSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntryGcsFilesetSpecSampleGcsFileSpec {
		return vs[0].([]EntryGcsFilesetSpecSampleGcsFileSpec)[vs[1].(int)]
	}).(EntryGcsFilesetSpecSampleGcsFileSpecOutput)
}

type EntryGroupIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// EntryGroupIamBindingConditionInput is an input type that accepts EntryGroupIamBindingConditionArgs and EntryGroupIamBindingConditionOutput values.
// You can construct a concrete instance of `EntryGroupIamBindingConditionInput` via:
//
// 		 EntryGroupIamBindingConditionArgs{...}
//
type EntryGroupIamBindingConditionInput interface {
	pulumi.Input

	ToEntryGroupIamBindingConditionOutput() EntryGroupIamBindingConditionOutput
	ToEntryGroupIamBindingConditionOutputWithContext(context.Context) EntryGroupIamBindingConditionOutput
}

type EntryGroupIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (EntryGroupIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGroupIamBindingCondition)(nil)).Elem()
}

func (i EntryGroupIamBindingConditionArgs) ToEntryGroupIamBindingConditionOutput() EntryGroupIamBindingConditionOutput {
	return i.ToEntryGroupIamBindingConditionOutputWithContext(context.Background())
}

func (i EntryGroupIamBindingConditionArgs) ToEntryGroupIamBindingConditionOutputWithContext(ctx context.Context) EntryGroupIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGroupIamBindingConditionOutput)
}

func (i EntryGroupIamBindingConditionArgs) ToEntryGroupIamBindingConditionPtrOutput() EntryGroupIamBindingConditionPtrOutput {
	return i.ToEntryGroupIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i EntryGroupIamBindingConditionArgs) ToEntryGroupIamBindingConditionPtrOutputWithContext(ctx context.Context) EntryGroupIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGroupIamBindingConditionOutput).ToEntryGroupIamBindingConditionPtrOutputWithContext(ctx)
}

// EntryGroupIamBindingConditionPtrInput is an input type that accepts EntryGroupIamBindingConditionArgs, EntryGroupIamBindingConditionPtr and EntryGroupIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `EntryGroupIamBindingConditionPtrInput` via:
//
// 		 EntryGroupIamBindingConditionArgs{...}
//
//  or:
//
// 		 nil
//
type EntryGroupIamBindingConditionPtrInput interface {
	pulumi.Input

	ToEntryGroupIamBindingConditionPtrOutput() EntryGroupIamBindingConditionPtrOutput
	ToEntryGroupIamBindingConditionPtrOutputWithContext(context.Context) EntryGroupIamBindingConditionPtrOutput
}

type entryGroupIamBindingConditionPtrType EntryGroupIamBindingConditionArgs

func EntryGroupIamBindingConditionPtr(v *EntryGroupIamBindingConditionArgs) EntryGroupIamBindingConditionPtrInput {
	return (*entryGroupIamBindingConditionPtrType)(v)
}

func (*entryGroupIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryGroupIamBindingCondition)(nil)).Elem()
}

func (i *entryGroupIamBindingConditionPtrType) ToEntryGroupIamBindingConditionPtrOutput() EntryGroupIamBindingConditionPtrOutput {
	return i.ToEntryGroupIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *entryGroupIamBindingConditionPtrType) ToEntryGroupIamBindingConditionPtrOutputWithContext(ctx context.Context) EntryGroupIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGroupIamBindingConditionPtrOutput)
}

type EntryGroupIamBindingConditionOutput struct{ *pulumi.OutputState }

func (EntryGroupIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGroupIamBindingCondition)(nil)).Elem()
}

func (o EntryGroupIamBindingConditionOutput) ToEntryGroupIamBindingConditionOutput() EntryGroupIamBindingConditionOutput {
	return o
}

func (o EntryGroupIamBindingConditionOutput) ToEntryGroupIamBindingConditionOutputWithContext(ctx context.Context) EntryGroupIamBindingConditionOutput {
	return o
}

func (o EntryGroupIamBindingConditionOutput) ToEntryGroupIamBindingConditionPtrOutput() EntryGroupIamBindingConditionPtrOutput {
	return o.ToEntryGroupIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o EntryGroupIamBindingConditionOutput) ToEntryGroupIamBindingConditionPtrOutputWithContext(ctx context.Context) EntryGroupIamBindingConditionPtrOutput {
	return o.ApplyT(func(v EntryGroupIamBindingCondition) *EntryGroupIamBindingCondition {
		return &v
	}).(EntryGroupIamBindingConditionPtrOutput)
}
func (o EntryGroupIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntryGroupIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o EntryGroupIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v EntryGroupIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o EntryGroupIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v EntryGroupIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type EntryGroupIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (EntryGroupIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryGroupIamBindingCondition)(nil)).Elem()
}

func (o EntryGroupIamBindingConditionPtrOutput) ToEntryGroupIamBindingConditionPtrOutput() EntryGroupIamBindingConditionPtrOutput {
	return o
}

func (o EntryGroupIamBindingConditionPtrOutput) ToEntryGroupIamBindingConditionPtrOutputWithContext(ctx context.Context) EntryGroupIamBindingConditionPtrOutput {
	return o
}

func (o EntryGroupIamBindingConditionPtrOutput) Elem() EntryGroupIamBindingConditionOutput {
	return o.ApplyT(func(v *EntryGroupIamBindingCondition) EntryGroupIamBindingCondition { return *v }).(EntryGroupIamBindingConditionOutput)
}

func (o EntryGroupIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryGroupIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o EntryGroupIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryGroupIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o EntryGroupIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryGroupIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type EntryGroupIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// EntryGroupIamMemberConditionInput is an input type that accepts EntryGroupIamMemberConditionArgs and EntryGroupIamMemberConditionOutput values.
// You can construct a concrete instance of `EntryGroupIamMemberConditionInput` via:
//
// 		 EntryGroupIamMemberConditionArgs{...}
//
type EntryGroupIamMemberConditionInput interface {
	pulumi.Input

	ToEntryGroupIamMemberConditionOutput() EntryGroupIamMemberConditionOutput
	ToEntryGroupIamMemberConditionOutputWithContext(context.Context) EntryGroupIamMemberConditionOutput
}

type EntryGroupIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (EntryGroupIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGroupIamMemberCondition)(nil)).Elem()
}

func (i EntryGroupIamMemberConditionArgs) ToEntryGroupIamMemberConditionOutput() EntryGroupIamMemberConditionOutput {
	return i.ToEntryGroupIamMemberConditionOutputWithContext(context.Background())
}

func (i EntryGroupIamMemberConditionArgs) ToEntryGroupIamMemberConditionOutputWithContext(ctx context.Context) EntryGroupIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGroupIamMemberConditionOutput)
}

func (i EntryGroupIamMemberConditionArgs) ToEntryGroupIamMemberConditionPtrOutput() EntryGroupIamMemberConditionPtrOutput {
	return i.ToEntryGroupIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i EntryGroupIamMemberConditionArgs) ToEntryGroupIamMemberConditionPtrOutputWithContext(ctx context.Context) EntryGroupIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGroupIamMemberConditionOutput).ToEntryGroupIamMemberConditionPtrOutputWithContext(ctx)
}

// EntryGroupIamMemberConditionPtrInput is an input type that accepts EntryGroupIamMemberConditionArgs, EntryGroupIamMemberConditionPtr and EntryGroupIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `EntryGroupIamMemberConditionPtrInput` via:
//
// 		 EntryGroupIamMemberConditionArgs{...}
//
//  or:
//
// 		 nil
//
type EntryGroupIamMemberConditionPtrInput interface {
	pulumi.Input

	ToEntryGroupIamMemberConditionPtrOutput() EntryGroupIamMemberConditionPtrOutput
	ToEntryGroupIamMemberConditionPtrOutputWithContext(context.Context) EntryGroupIamMemberConditionPtrOutput
}

type entryGroupIamMemberConditionPtrType EntryGroupIamMemberConditionArgs

func EntryGroupIamMemberConditionPtr(v *EntryGroupIamMemberConditionArgs) EntryGroupIamMemberConditionPtrInput {
	return (*entryGroupIamMemberConditionPtrType)(v)
}

func (*entryGroupIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryGroupIamMemberCondition)(nil)).Elem()
}

func (i *entryGroupIamMemberConditionPtrType) ToEntryGroupIamMemberConditionPtrOutput() EntryGroupIamMemberConditionPtrOutput {
	return i.ToEntryGroupIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *entryGroupIamMemberConditionPtrType) ToEntryGroupIamMemberConditionPtrOutputWithContext(ctx context.Context) EntryGroupIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGroupIamMemberConditionPtrOutput)
}

type EntryGroupIamMemberConditionOutput struct{ *pulumi.OutputState }

func (EntryGroupIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGroupIamMemberCondition)(nil)).Elem()
}

func (o EntryGroupIamMemberConditionOutput) ToEntryGroupIamMemberConditionOutput() EntryGroupIamMemberConditionOutput {
	return o
}

func (o EntryGroupIamMemberConditionOutput) ToEntryGroupIamMemberConditionOutputWithContext(ctx context.Context) EntryGroupIamMemberConditionOutput {
	return o
}

func (o EntryGroupIamMemberConditionOutput) ToEntryGroupIamMemberConditionPtrOutput() EntryGroupIamMemberConditionPtrOutput {
	return o.ToEntryGroupIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o EntryGroupIamMemberConditionOutput) ToEntryGroupIamMemberConditionPtrOutputWithContext(ctx context.Context) EntryGroupIamMemberConditionPtrOutput {
	return o.ApplyT(func(v EntryGroupIamMemberCondition) *EntryGroupIamMemberCondition {
		return &v
	}).(EntryGroupIamMemberConditionPtrOutput)
}
func (o EntryGroupIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntryGroupIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o EntryGroupIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v EntryGroupIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o EntryGroupIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v EntryGroupIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type EntryGroupIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (EntryGroupIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryGroupIamMemberCondition)(nil)).Elem()
}

func (o EntryGroupIamMemberConditionPtrOutput) ToEntryGroupIamMemberConditionPtrOutput() EntryGroupIamMemberConditionPtrOutput {
	return o
}

func (o EntryGroupIamMemberConditionPtrOutput) ToEntryGroupIamMemberConditionPtrOutputWithContext(ctx context.Context) EntryGroupIamMemberConditionPtrOutput {
	return o
}

func (o EntryGroupIamMemberConditionPtrOutput) Elem() EntryGroupIamMemberConditionOutput {
	return o.ApplyT(func(v *EntryGroupIamMemberCondition) EntryGroupIamMemberCondition { return *v }).(EntryGroupIamMemberConditionOutput)
}

func (o EntryGroupIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryGroupIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o EntryGroupIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryGroupIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o EntryGroupIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntryGroupIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TagField struct {
	// Holds the value for a tag field with boolean type.
	BoolValue *bool `pulumi:"boolValue"`
	// -
	// The display name of this field
	DisplayName *string `pulumi:"displayName"`
	// Holds the value for a tag field with double type.
	DoubleValue *float64 `pulumi:"doubleValue"`
	// Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.  Structure is documented below.
	EnumValue *string `pulumi:"enumValue"`
	// The identifier for this object. Format specified above.
	FieldName string `pulumi:"fieldName"`
	// -
	// The order of this field with respect to other fields in this tag. For example, a higher value can indicate
	// a more important field. The value can be negative. Multiple fields can have the same order, and field orders
	// within a tag do not have to be sequential.
	Order *int `pulumi:"order"`
	// Holds the value for a tag field with string type.
	StringValue *string `pulumi:"stringValue"`
	// Holds the value for a tag field with timestamp type.
	TimestampValue *string `pulumi:"timestampValue"`
}

// TagFieldInput is an input type that accepts TagFieldArgs and TagFieldOutput values.
// You can construct a concrete instance of `TagFieldInput` via:
//
// 		 TagFieldArgs{...}
//
type TagFieldInput interface {
	pulumi.Input

	ToTagFieldOutput() TagFieldOutput
	ToTagFieldOutputWithContext(context.Context) TagFieldOutput
}

type TagFieldArgs struct {
	// Holds the value for a tag field with boolean type.
	BoolValue pulumi.BoolPtrInput `pulumi:"boolValue"`
	// -
	// The display name of this field
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Holds the value for a tag field with double type.
	DoubleValue pulumi.Float64PtrInput `pulumi:"doubleValue"`
	// Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.  Structure is documented below.
	EnumValue pulumi.StringPtrInput `pulumi:"enumValue"`
	// The identifier for this object. Format specified above.
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	// -
	// The order of this field with respect to other fields in this tag. For example, a higher value can indicate
	// a more important field. The value can be negative. Multiple fields can have the same order, and field orders
	// within a tag do not have to be sequential.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Holds the value for a tag field with string type.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
	// Holds the value for a tag field with timestamp type.
	TimestampValue pulumi.StringPtrInput `pulumi:"timestampValue"`
}

func (TagFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagField)(nil)).Elem()
}

func (i TagFieldArgs) ToTagFieldOutput() TagFieldOutput {
	return i.ToTagFieldOutputWithContext(context.Background())
}

func (i TagFieldArgs) ToTagFieldOutputWithContext(ctx context.Context) TagFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagFieldOutput)
}

// TagFieldArrayInput is an input type that accepts TagFieldArray and TagFieldArrayOutput values.
// You can construct a concrete instance of `TagFieldArrayInput` via:
//
// 		 TagFieldArray{ TagFieldArgs{...} }
//
type TagFieldArrayInput interface {
	pulumi.Input

	ToTagFieldArrayOutput() TagFieldArrayOutput
	ToTagFieldArrayOutputWithContext(context.Context) TagFieldArrayOutput
}

type TagFieldArray []TagFieldInput

func (TagFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagField)(nil)).Elem()
}

func (i TagFieldArray) ToTagFieldArrayOutput() TagFieldArrayOutput {
	return i.ToTagFieldArrayOutputWithContext(context.Background())
}

func (i TagFieldArray) ToTagFieldArrayOutputWithContext(ctx context.Context) TagFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagFieldArrayOutput)
}

type TagFieldOutput struct{ *pulumi.OutputState }

func (TagFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagField)(nil)).Elem()
}

func (o TagFieldOutput) ToTagFieldOutput() TagFieldOutput {
	return o
}

func (o TagFieldOutput) ToTagFieldOutputWithContext(ctx context.Context) TagFieldOutput {
	return o
}

// Holds the value for a tag field with boolean type.
func (o TagFieldOutput) BoolValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TagField) *bool { return v.BoolValue }).(pulumi.BoolPtrOutput)
}

// -
// The display name of this field
func (o TagFieldOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagField) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Holds the value for a tag field with double type.
func (o TagFieldOutput) DoubleValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TagField) *float64 { return v.DoubleValue }).(pulumi.Float64PtrOutput)
}

// Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.  Structure is documented below.
func (o TagFieldOutput) EnumValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagField) *string { return v.EnumValue }).(pulumi.StringPtrOutput)
}

// The identifier for this object. Format specified above.
func (o TagFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v TagField) string { return v.FieldName }).(pulumi.StringOutput)
}

// -
// The order of this field with respect to other fields in this tag. For example, a higher value can indicate
// a more important field. The value can be negative. Multiple fields can have the same order, and field orders
// within a tag do not have to be sequential.
func (o TagFieldOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TagField) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Holds the value for a tag field with string type.
func (o TagFieldOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagField) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

// Holds the value for a tag field with timestamp type.
func (o TagFieldOutput) TimestampValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagField) *string { return v.TimestampValue }).(pulumi.StringPtrOutput)
}

type TagFieldArrayOutput struct{ *pulumi.OutputState }

func (TagFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagField)(nil)).Elem()
}

func (o TagFieldArrayOutput) ToTagFieldArrayOutput() TagFieldArrayOutput {
	return o
}

func (o TagFieldArrayOutput) ToTagFieldArrayOutputWithContext(ctx context.Context) TagFieldArrayOutput {
	return o
}

func (o TagFieldArrayOutput) Index(i pulumi.IntInput) TagFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagField {
		return vs[0].([]TagField)[vs[1].(int)]
	}).(TagFieldOutput)
}

type TagTemplateField struct {
	// The display name for this template.
	DisplayName *string `pulumi:"displayName"`
	// The identifier for this object. Format specified above.
	FieldId string `pulumi:"fieldId"`
	// Whether this is a required field. Defaults to false.
	IsRequired *bool `pulumi:"isRequired"`
	// -
	// The resource name of the tag template field in URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}
	Name *string `pulumi:"name"`
	// The order of this field with respect to other fields in this tag template.
	// A higher value indicates a more important field. The value can be negative.
	// Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
	Order *int `pulumi:"order"`
	// The type of value this tag field can contain.  Structure is documented below.
	Type TagTemplateFieldType `pulumi:"type"`
}

// TagTemplateFieldInput is an input type that accepts TagTemplateFieldArgs and TagTemplateFieldOutput values.
// You can construct a concrete instance of `TagTemplateFieldInput` via:
//
// 		 TagTemplateFieldArgs{...}
//
type TagTemplateFieldInput interface {
	pulumi.Input

	ToTagTemplateFieldOutput() TagTemplateFieldOutput
	ToTagTemplateFieldOutputWithContext(context.Context) TagTemplateFieldOutput
}

type TagTemplateFieldArgs struct {
	// The display name for this template.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The identifier for this object. Format specified above.
	FieldId pulumi.StringInput `pulumi:"fieldId"`
	// Whether this is a required field. Defaults to false.
	IsRequired pulumi.BoolPtrInput `pulumi:"isRequired"`
	// -
	// The resource name of the tag template field in URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The order of this field with respect to other fields in this tag template.
	// A higher value indicates a more important field. The value can be negative.
	// Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// The type of value this tag field can contain.  Structure is documented below.
	Type TagTemplateFieldTypeInput `pulumi:"type"`
}

func (TagTemplateFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTemplateField)(nil)).Elem()
}

func (i TagTemplateFieldArgs) ToTagTemplateFieldOutput() TagTemplateFieldOutput {
	return i.ToTagTemplateFieldOutputWithContext(context.Background())
}

func (i TagTemplateFieldArgs) ToTagTemplateFieldOutputWithContext(ctx context.Context) TagTemplateFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTemplateFieldOutput)
}

// TagTemplateFieldArrayInput is an input type that accepts TagTemplateFieldArray and TagTemplateFieldArrayOutput values.
// You can construct a concrete instance of `TagTemplateFieldArrayInput` via:
//
// 		 TagTemplateFieldArray{ TagTemplateFieldArgs{...} }
//
type TagTemplateFieldArrayInput interface {
	pulumi.Input

	ToTagTemplateFieldArrayOutput() TagTemplateFieldArrayOutput
	ToTagTemplateFieldArrayOutputWithContext(context.Context) TagTemplateFieldArrayOutput
}

type TagTemplateFieldArray []TagTemplateFieldInput

func (TagTemplateFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagTemplateField)(nil)).Elem()
}

func (i TagTemplateFieldArray) ToTagTemplateFieldArrayOutput() TagTemplateFieldArrayOutput {
	return i.ToTagTemplateFieldArrayOutputWithContext(context.Background())
}

func (i TagTemplateFieldArray) ToTagTemplateFieldArrayOutputWithContext(ctx context.Context) TagTemplateFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTemplateFieldArrayOutput)
}

type TagTemplateFieldOutput struct{ *pulumi.OutputState }

func (TagTemplateFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTemplateField)(nil)).Elem()
}

func (o TagTemplateFieldOutput) ToTagTemplateFieldOutput() TagTemplateFieldOutput {
	return o
}

func (o TagTemplateFieldOutput) ToTagTemplateFieldOutputWithContext(ctx context.Context) TagTemplateFieldOutput {
	return o
}

// The display name for this template.
func (o TagTemplateFieldOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagTemplateField) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The identifier for this object. Format specified above.
func (o TagTemplateFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TagTemplateField) string { return v.FieldId }).(pulumi.StringOutput)
}

// Whether this is a required field. Defaults to false.
func (o TagTemplateFieldOutput) IsRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TagTemplateField) *bool { return v.IsRequired }).(pulumi.BoolPtrOutput)
}

// -
// The resource name of the tag template field in URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}
func (o TagTemplateFieldOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagTemplateField) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order of this field with respect to other fields in this tag template.
// A higher value indicates a more important field. The value can be negative.
// Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
func (o TagTemplateFieldOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TagTemplateField) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// The type of value this tag field can contain.  Structure is documented below.
func (o TagTemplateFieldOutput) Type() TagTemplateFieldTypeOutput {
	return o.ApplyT(func(v TagTemplateField) TagTemplateFieldType { return v.Type }).(TagTemplateFieldTypeOutput)
}

type TagTemplateFieldArrayOutput struct{ *pulumi.OutputState }

func (TagTemplateFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagTemplateField)(nil)).Elem()
}

func (o TagTemplateFieldArrayOutput) ToTagTemplateFieldArrayOutput() TagTemplateFieldArrayOutput {
	return o
}

func (o TagTemplateFieldArrayOutput) ToTagTemplateFieldArrayOutputWithContext(ctx context.Context) TagTemplateFieldArrayOutput {
	return o
}

func (o TagTemplateFieldArrayOutput) Index(i pulumi.IntInput) TagTemplateFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagTemplateField {
		return vs[0].([]TagTemplateField)[vs[1].(int)]
	}).(TagTemplateFieldOutput)
}

type TagTemplateFieldType struct {
	// Represents an enum type.
	// Exactly one of `primitiveType` or `enumType` must be set  Structure is documented below.
	EnumType *TagTemplateFieldTypeEnumType `pulumi:"enumType"`
	// Represents primitive types - string, bool etc.
	// Exactly one of `primitiveType` or `enumType` must be set
	PrimitiveType *string `pulumi:"primitiveType"`
}

// TagTemplateFieldTypeInput is an input type that accepts TagTemplateFieldTypeArgs and TagTemplateFieldTypeOutput values.
// You can construct a concrete instance of `TagTemplateFieldTypeInput` via:
//
// 		 TagTemplateFieldTypeArgs{...}
//
type TagTemplateFieldTypeInput interface {
	pulumi.Input

	ToTagTemplateFieldTypeOutput() TagTemplateFieldTypeOutput
	ToTagTemplateFieldTypeOutputWithContext(context.Context) TagTemplateFieldTypeOutput
}

type TagTemplateFieldTypeArgs struct {
	// Represents an enum type.
	// Exactly one of `primitiveType` or `enumType` must be set  Structure is documented below.
	EnumType TagTemplateFieldTypeEnumTypePtrInput `pulumi:"enumType"`
	// Represents primitive types - string, bool etc.
	// Exactly one of `primitiveType` or `enumType` must be set
	PrimitiveType pulumi.StringPtrInput `pulumi:"primitiveType"`
}

func (TagTemplateFieldTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTemplateFieldType)(nil)).Elem()
}

func (i TagTemplateFieldTypeArgs) ToTagTemplateFieldTypeOutput() TagTemplateFieldTypeOutput {
	return i.ToTagTemplateFieldTypeOutputWithContext(context.Background())
}

func (i TagTemplateFieldTypeArgs) ToTagTemplateFieldTypeOutputWithContext(ctx context.Context) TagTemplateFieldTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTemplateFieldTypeOutput)
}

type TagTemplateFieldTypeOutput struct{ *pulumi.OutputState }

func (TagTemplateFieldTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTemplateFieldType)(nil)).Elem()
}

func (o TagTemplateFieldTypeOutput) ToTagTemplateFieldTypeOutput() TagTemplateFieldTypeOutput {
	return o
}

func (o TagTemplateFieldTypeOutput) ToTagTemplateFieldTypeOutputWithContext(ctx context.Context) TagTemplateFieldTypeOutput {
	return o
}

// Represents an enum type.
// Exactly one of `primitiveType` or `enumType` must be set  Structure is documented below.
func (o TagTemplateFieldTypeOutput) EnumType() TagTemplateFieldTypeEnumTypePtrOutput {
	return o.ApplyT(func(v TagTemplateFieldType) *TagTemplateFieldTypeEnumType { return v.EnumType }).(TagTemplateFieldTypeEnumTypePtrOutput)
}

// Represents primitive types - string, bool etc.
// Exactly one of `primitiveType` or `enumType` must be set
func (o TagTemplateFieldTypeOutput) PrimitiveType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagTemplateFieldType) *string { return v.PrimitiveType }).(pulumi.StringPtrOutput)
}

type TagTemplateFieldTypeEnumType struct {
	// The set of allowed values for this enum. The display names of the
	// values must be case-insensitively unique within this set. Currently,
	// enum values can only be added to the list of allowed values. Deletion
	// and renaming of enum values are not supported.
	// Can have up to 500 allowed values.  Structure is documented below.
	AllowedValues []TagTemplateFieldTypeEnumTypeAllowedValue `pulumi:"allowedValues"`
}

// TagTemplateFieldTypeEnumTypeInput is an input type that accepts TagTemplateFieldTypeEnumTypeArgs and TagTemplateFieldTypeEnumTypeOutput values.
// You can construct a concrete instance of `TagTemplateFieldTypeEnumTypeInput` via:
//
// 		 TagTemplateFieldTypeEnumTypeArgs{...}
//
type TagTemplateFieldTypeEnumTypeInput interface {
	pulumi.Input

	ToTagTemplateFieldTypeEnumTypeOutput() TagTemplateFieldTypeEnumTypeOutput
	ToTagTemplateFieldTypeEnumTypeOutputWithContext(context.Context) TagTemplateFieldTypeEnumTypeOutput
}

type TagTemplateFieldTypeEnumTypeArgs struct {
	// The set of allowed values for this enum. The display names of the
	// values must be case-insensitively unique within this set. Currently,
	// enum values can only be added to the list of allowed values. Deletion
	// and renaming of enum values are not supported.
	// Can have up to 500 allowed values.  Structure is documented below.
	AllowedValues TagTemplateFieldTypeEnumTypeAllowedValueArrayInput `pulumi:"allowedValues"`
}

func (TagTemplateFieldTypeEnumTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTemplateFieldTypeEnumType)(nil)).Elem()
}

func (i TagTemplateFieldTypeEnumTypeArgs) ToTagTemplateFieldTypeEnumTypeOutput() TagTemplateFieldTypeEnumTypeOutput {
	return i.ToTagTemplateFieldTypeEnumTypeOutputWithContext(context.Background())
}

func (i TagTemplateFieldTypeEnumTypeArgs) ToTagTemplateFieldTypeEnumTypeOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTemplateFieldTypeEnumTypeOutput)
}

func (i TagTemplateFieldTypeEnumTypeArgs) ToTagTemplateFieldTypeEnumTypePtrOutput() TagTemplateFieldTypeEnumTypePtrOutput {
	return i.ToTagTemplateFieldTypeEnumTypePtrOutputWithContext(context.Background())
}

func (i TagTemplateFieldTypeEnumTypeArgs) ToTagTemplateFieldTypeEnumTypePtrOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTemplateFieldTypeEnumTypeOutput).ToTagTemplateFieldTypeEnumTypePtrOutputWithContext(ctx)
}

// TagTemplateFieldTypeEnumTypePtrInput is an input type that accepts TagTemplateFieldTypeEnumTypeArgs, TagTemplateFieldTypeEnumTypePtr and TagTemplateFieldTypeEnumTypePtrOutput values.
// You can construct a concrete instance of `TagTemplateFieldTypeEnumTypePtrInput` via:
//
// 		 TagTemplateFieldTypeEnumTypeArgs{...}
//
//  or:
//
// 		 nil
//
type TagTemplateFieldTypeEnumTypePtrInput interface {
	pulumi.Input

	ToTagTemplateFieldTypeEnumTypePtrOutput() TagTemplateFieldTypeEnumTypePtrOutput
	ToTagTemplateFieldTypeEnumTypePtrOutputWithContext(context.Context) TagTemplateFieldTypeEnumTypePtrOutput
}

type tagTemplateFieldTypeEnumTypePtrType TagTemplateFieldTypeEnumTypeArgs

func TagTemplateFieldTypeEnumTypePtr(v *TagTemplateFieldTypeEnumTypeArgs) TagTemplateFieldTypeEnumTypePtrInput {
	return (*tagTemplateFieldTypeEnumTypePtrType)(v)
}

func (*tagTemplateFieldTypeEnumTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagTemplateFieldTypeEnumType)(nil)).Elem()
}

func (i *tagTemplateFieldTypeEnumTypePtrType) ToTagTemplateFieldTypeEnumTypePtrOutput() TagTemplateFieldTypeEnumTypePtrOutput {
	return i.ToTagTemplateFieldTypeEnumTypePtrOutputWithContext(context.Background())
}

func (i *tagTemplateFieldTypeEnumTypePtrType) ToTagTemplateFieldTypeEnumTypePtrOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTemplateFieldTypeEnumTypePtrOutput)
}

type TagTemplateFieldTypeEnumTypeOutput struct{ *pulumi.OutputState }

func (TagTemplateFieldTypeEnumTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTemplateFieldTypeEnumType)(nil)).Elem()
}

func (o TagTemplateFieldTypeEnumTypeOutput) ToTagTemplateFieldTypeEnumTypeOutput() TagTemplateFieldTypeEnumTypeOutput {
	return o
}

func (o TagTemplateFieldTypeEnumTypeOutput) ToTagTemplateFieldTypeEnumTypeOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypeOutput {
	return o
}

func (o TagTemplateFieldTypeEnumTypeOutput) ToTagTemplateFieldTypeEnumTypePtrOutput() TagTemplateFieldTypeEnumTypePtrOutput {
	return o.ToTagTemplateFieldTypeEnumTypePtrOutputWithContext(context.Background())
}

func (o TagTemplateFieldTypeEnumTypeOutput) ToTagTemplateFieldTypeEnumTypePtrOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypePtrOutput {
	return o.ApplyT(func(v TagTemplateFieldTypeEnumType) *TagTemplateFieldTypeEnumType {
		return &v
	}).(TagTemplateFieldTypeEnumTypePtrOutput)
}

// The set of allowed values for this enum. The display names of the
// values must be case-insensitively unique within this set. Currently,
// enum values can only be added to the list of allowed values. Deletion
// and renaming of enum values are not supported.
// Can have up to 500 allowed values.  Structure is documented below.
func (o TagTemplateFieldTypeEnumTypeOutput) AllowedValues() TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput {
	return o.ApplyT(func(v TagTemplateFieldTypeEnumType) []TagTemplateFieldTypeEnumTypeAllowedValue {
		return v.AllowedValues
	}).(TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput)
}

type TagTemplateFieldTypeEnumTypePtrOutput struct{ *pulumi.OutputState }

func (TagTemplateFieldTypeEnumTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagTemplateFieldTypeEnumType)(nil)).Elem()
}

func (o TagTemplateFieldTypeEnumTypePtrOutput) ToTagTemplateFieldTypeEnumTypePtrOutput() TagTemplateFieldTypeEnumTypePtrOutput {
	return o
}

func (o TagTemplateFieldTypeEnumTypePtrOutput) ToTagTemplateFieldTypeEnumTypePtrOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypePtrOutput {
	return o
}

func (o TagTemplateFieldTypeEnumTypePtrOutput) Elem() TagTemplateFieldTypeEnumTypeOutput {
	return o.ApplyT(func(v *TagTemplateFieldTypeEnumType) TagTemplateFieldTypeEnumType { return *v }).(TagTemplateFieldTypeEnumTypeOutput)
}

// The set of allowed values for this enum. The display names of the
// values must be case-insensitively unique within this set. Currently,
// enum values can only be added to the list of allowed values. Deletion
// and renaming of enum values are not supported.
// Can have up to 500 allowed values.  Structure is documented below.
func (o TagTemplateFieldTypeEnumTypePtrOutput) AllowedValues() TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput {
	return o.ApplyT(func(v *TagTemplateFieldTypeEnumType) []TagTemplateFieldTypeEnumTypeAllowedValue {
		if v == nil {
			return nil
		}
		return v.AllowedValues
	}).(TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput)
}

type TagTemplateFieldTypeEnumTypeAllowedValue struct {
	// The display name for this template.
	DisplayName string `pulumi:"displayName"`
}

// TagTemplateFieldTypeEnumTypeAllowedValueInput is an input type that accepts TagTemplateFieldTypeEnumTypeAllowedValueArgs and TagTemplateFieldTypeEnumTypeAllowedValueOutput values.
// You can construct a concrete instance of `TagTemplateFieldTypeEnumTypeAllowedValueInput` via:
//
// 		 TagTemplateFieldTypeEnumTypeAllowedValueArgs{...}
//
type TagTemplateFieldTypeEnumTypeAllowedValueInput interface {
	pulumi.Input

	ToTagTemplateFieldTypeEnumTypeAllowedValueOutput() TagTemplateFieldTypeEnumTypeAllowedValueOutput
	ToTagTemplateFieldTypeEnumTypeAllowedValueOutputWithContext(context.Context) TagTemplateFieldTypeEnumTypeAllowedValueOutput
}

type TagTemplateFieldTypeEnumTypeAllowedValueArgs struct {
	// The display name for this template.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
}

func (TagTemplateFieldTypeEnumTypeAllowedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTemplateFieldTypeEnumTypeAllowedValue)(nil)).Elem()
}

func (i TagTemplateFieldTypeEnumTypeAllowedValueArgs) ToTagTemplateFieldTypeEnumTypeAllowedValueOutput() TagTemplateFieldTypeEnumTypeAllowedValueOutput {
	return i.ToTagTemplateFieldTypeEnumTypeAllowedValueOutputWithContext(context.Background())
}

func (i TagTemplateFieldTypeEnumTypeAllowedValueArgs) ToTagTemplateFieldTypeEnumTypeAllowedValueOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypeAllowedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTemplateFieldTypeEnumTypeAllowedValueOutput)
}

// TagTemplateFieldTypeEnumTypeAllowedValueArrayInput is an input type that accepts TagTemplateFieldTypeEnumTypeAllowedValueArray and TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput values.
// You can construct a concrete instance of `TagTemplateFieldTypeEnumTypeAllowedValueArrayInput` via:
//
// 		 TagTemplateFieldTypeEnumTypeAllowedValueArray{ TagTemplateFieldTypeEnumTypeAllowedValueArgs{...} }
//
type TagTemplateFieldTypeEnumTypeAllowedValueArrayInput interface {
	pulumi.Input

	ToTagTemplateFieldTypeEnumTypeAllowedValueArrayOutput() TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput
	ToTagTemplateFieldTypeEnumTypeAllowedValueArrayOutputWithContext(context.Context) TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput
}

type TagTemplateFieldTypeEnumTypeAllowedValueArray []TagTemplateFieldTypeEnumTypeAllowedValueInput

func (TagTemplateFieldTypeEnumTypeAllowedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagTemplateFieldTypeEnumTypeAllowedValue)(nil)).Elem()
}

func (i TagTemplateFieldTypeEnumTypeAllowedValueArray) ToTagTemplateFieldTypeEnumTypeAllowedValueArrayOutput() TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput {
	return i.ToTagTemplateFieldTypeEnumTypeAllowedValueArrayOutputWithContext(context.Background())
}

func (i TagTemplateFieldTypeEnumTypeAllowedValueArray) ToTagTemplateFieldTypeEnumTypeAllowedValueArrayOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput)
}

type TagTemplateFieldTypeEnumTypeAllowedValueOutput struct{ *pulumi.OutputState }

func (TagTemplateFieldTypeEnumTypeAllowedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagTemplateFieldTypeEnumTypeAllowedValue)(nil)).Elem()
}

func (o TagTemplateFieldTypeEnumTypeAllowedValueOutput) ToTagTemplateFieldTypeEnumTypeAllowedValueOutput() TagTemplateFieldTypeEnumTypeAllowedValueOutput {
	return o
}

func (o TagTemplateFieldTypeEnumTypeAllowedValueOutput) ToTagTemplateFieldTypeEnumTypeAllowedValueOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypeAllowedValueOutput {
	return o
}

// The display name for this template.
func (o TagTemplateFieldTypeEnumTypeAllowedValueOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v TagTemplateFieldTypeEnumTypeAllowedValue) string { return v.DisplayName }).(pulumi.StringOutput)
}

type TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput struct{ *pulumi.OutputState }

func (TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagTemplateFieldTypeEnumTypeAllowedValue)(nil)).Elem()
}

func (o TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput) ToTagTemplateFieldTypeEnumTypeAllowedValueArrayOutput() TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput {
	return o
}

func (o TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput) ToTagTemplateFieldTypeEnumTypeAllowedValueArrayOutputWithContext(ctx context.Context) TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput {
	return o
}

func (o TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput) Index(i pulumi.IntInput) TagTemplateFieldTypeEnumTypeAllowedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagTemplateFieldTypeEnumTypeAllowedValue {
		return vs[0].([]TagTemplateFieldTypeEnumTypeAllowedValue)[vs[1].(int)]
	}).(TagTemplateFieldTypeEnumTypeAllowedValueOutput)
}

func init() {
	pulumi.RegisterOutputType(EntryBigqueryDateShardedSpecOutput{})
	pulumi.RegisterOutputType(EntryBigqueryDateShardedSpecPtrOutput{})
	pulumi.RegisterOutputType(EntryBigqueryTableSpecOutput{})
	pulumi.RegisterOutputType(EntryBigqueryTableSpecPtrOutput{})
	pulumi.RegisterOutputType(EntryBigqueryTableSpecTableSpecOutput{})
	pulumi.RegisterOutputType(EntryBigqueryTableSpecTableSpecPtrOutput{})
	pulumi.RegisterOutputType(EntryBigqueryTableSpecViewSpecOutput{})
	pulumi.RegisterOutputType(EntryBigqueryTableSpecViewSpecPtrOutput{})
	pulumi.RegisterOutputType(EntryGcsFilesetSpecOutput{})
	pulumi.RegisterOutputType(EntryGcsFilesetSpecPtrOutput{})
	pulumi.RegisterOutputType(EntryGcsFilesetSpecSampleGcsFileSpecOutput{})
	pulumi.RegisterOutputType(EntryGcsFilesetSpecSampleGcsFileSpecArrayOutput{})
	pulumi.RegisterOutputType(EntryGroupIamBindingConditionOutput{})
	pulumi.RegisterOutputType(EntryGroupIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(EntryGroupIamMemberConditionOutput{})
	pulumi.RegisterOutputType(EntryGroupIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(TagFieldOutput{})
	pulumi.RegisterOutputType(TagFieldArrayOutput{})
	pulumi.RegisterOutputType(TagTemplateFieldOutput{})
	pulumi.RegisterOutputType(TagTemplateFieldArrayOutput{})
	pulumi.RegisterOutputType(TagTemplateFieldTypeOutput{})
	pulumi.RegisterOutputType(TagTemplateFieldTypeEnumTypeOutput{})
	pulumi.RegisterOutputType(TagTemplateFieldTypeEnumTypePtrOutput{})
	pulumi.RegisterOutputType(TagTemplateFieldTypeEnumTypeAllowedValueOutput{})
	pulumi.RegisterOutputType(TagTemplateFieldTypeEnumTypeAllowedValueArrayOutput{})
}
