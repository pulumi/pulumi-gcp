// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datacatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for policytag
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/datacatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datacatalog.LookupPolicyTagIamPolicy(ctx, &datacatalog.LookupPolicyTagIamPolicyArgs{
//				PolicyTag: google_data_catalog_policy_tag.Basic_policy_tag.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPolicyTagIamPolicy(ctx *pulumi.Context, args *LookupPolicyTagIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupPolicyTagIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPolicyTagIamPolicyResult
	err := ctx.Invoke("gcp:datacatalog/getPolicyTagIamPolicy:getPolicyTagIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicyTagIamPolicy.
type LookupPolicyTagIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	PolicyTag string `pulumi:"policyTag"`
}

// A collection of values returned by getPolicyTagIamPolicy.
type LookupPolicyTagIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `datacatalog.PolicyTagIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	PolicyTag  string `pulumi:"policyTag"`
}

func LookupPolicyTagIamPolicyOutput(ctx *pulumi.Context, args LookupPolicyTagIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupPolicyTagIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPolicyTagIamPolicyResult, error) {
			args := v.(LookupPolicyTagIamPolicyArgs)
			r, err := LookupPolicyTagIamPolicy(ctx, &args, opts...)
			var s LookupPolicyTagIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPolicyTagIamPolicyResultOutput)
}

// A collection of arguments for invoking getPolicyTagIamPolicy.
type LookupPolicyTagIamPolicyOutputArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	PolicyTag pulumi.StringInput `pulumi:"policyTag"`
}

func (LookupPolicyTagIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyTagIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getPolicyTagIamPolicy.
type LookupPolicyTagIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupPolicyTagIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyTagIamPolicyResult)(nil)).Elem()
}

func (o LookupPolicyTagIamPolicyResultOutput) ToLookupPolicyTagIamPolicyResultOutput() LookupPolicyTagIamPolicyResultOutput {
	return o
}

func (o LookupPolicyTagIamPolicyResultOutput) ToLookupPolicyTagIamPolicyResultOutputWithContext(ctx context.Context) LookupPolicyTagIamPolicyResultOutput {
	return o
}

func (o LookupPolicyTagIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupPolicyTagIamPolicyResult] {
	return pulumix.Output[LookupPolicyTagIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupPolicyTagIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyTagIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPolicyTagIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyTagIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `datacatalog.PolicyTagIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupPolicyTagIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyTagIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupPolicyTagIamPolicyResultOutput) PolicyTag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyTagIamPolicyResult) string { return v.PolicyTag }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicyTagIamPolicyResultOutput{})
}
