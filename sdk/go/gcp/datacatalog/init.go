// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datacatalog

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp:datacatalog/entry:Entry":
		r = &Entry{}
	case "gcp:datacatalog/entryGroup:EntryGroup":
		r = &EntryGroup{}
	case "gcp:datacatalog/entryGroupIamBinding:EntryGroupIamBinding":
		r = &EntryGroupIamBinding{}
	case "gcp:datacatalog/entryGroupIamMember:EntryGroupIamMember":
		r = &EntryGroupIamMember{}
	case "gcp:datacatalog/entryGroupIamPolicy:EntryGroupIamPolicy":
		r = &EntryGroupIamPolicy{}
	case "gcp:datacatalog/policyTag:PolicyTag":
		r = &PolicyTag{}
	case "gcp:datacatalog/policyTagIamBinding:PolicyTagIamBinding":
		r = &PolicyTagIamBinding{}
	case "gcp:datacatalog/policyTagIamMember:PolicyTagIamMember":
		r = &PolicyTagIamMember{}
	case "gcp:datacatalog/policyTagIamPolicy:PolicyTagIamPolicy":
		r = &PolicyTagIamPolicy{}
	case "gcp:datacatalog/tag:Tag":
		r = &Tag{}
	case "gcp:datacatalog/tagTemplate:TagTemplate":
		r = &TagTemplate{}
	case "gcp:datacatalog/tagTemplateIamBinding:TagTemplateIamBinding":
		r = &TagTemplateIamBinding{}
	case "gcp:datacatalog/tagTemplateIamMember:TagTemplateIamMember":
		r = &TagTemplateIamMember{}
	case "gcp:datacatalog/tagTemplateIamPolicy:TagTemplateIamPolicy":
		r = &TagTemplateIamPolicy{}
	case "gcp:datacatalog/taxonomy:Taxonomy":
		r = &Taxonomy{}
	case "gcp:datacatalog/taxonomyIamBinding:TaxonomyIamBinding":
		r = &TaxonomyIamBinding{}
	case "gcp:datacatalog/taxonomyIamMember:TaxonomyIamMember":
		r = &TaxonomyIamMember{}
	case "gcp:datacatalog/taxonomyIamPolicy:TaxonomyIamPolicy":
		r = &TaxonomyIamPolicy{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/entry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/entryGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/entryGroupIamBinding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/entryGroupIamMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/entryGroupIamPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/policyTag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/policyTagIamBinding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/policyTagIamMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/policyTagIamPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/tag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/tagTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/tagTemplateIamBinding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/tagTemplateIamMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/tagTemplateIamPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/taxonomy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/taxonomyIamBinding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/taxonomyIamMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"datacatalog/taxonomyIamPolicy",
		&module{version},
	)
}
