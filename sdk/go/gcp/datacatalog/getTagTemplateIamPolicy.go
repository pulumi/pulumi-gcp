// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datacatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for tagtemplate
func LookupTagTemplateIamPolicy(ctx *pulumi.Context, args *LookupTagTemplateIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupTagTemplateIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTagTemplateIamPolicyResult
	err := ctx.Invoke("gcp:datacatalog/getTagTemplateIamPolicy:getTagTemplateIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTagTemplateIamPolicy.
type LookupTagTemplateIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
	// Used to find the parent resource to bind the IAM policy to
	TagTemplate string `pulumi:"tagTemplate"`
}

// A collection of values returned by getTagTemplateIamPolicy.
type LookupTagTemplateIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `datacatalog.TagTemplateIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData  string `pulumi:"policyData"`
	Project     string `pulumi:"project"`
	Region      string `pulumi:"region"`
	TagTemplate string `pulumi:"tagTemplate"`
}

func LookupTagTemplateIamPolicyOutput(ctx *pulumi.Context, args LookupTagTemplateIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupTagTemplateIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTagTemplateIamPolicyResult, error) {
			args := v.(LookupTagTemplateIamPolicyArgs)
			r, err := LookupTagTemplateIamPolicy(ctx, &args, opts...)
			var s LookupTagTemplateIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTagTemplateIamPolicyResultOutput)
}

// A collection of arguments for invoking getTagTemplateIamPolicy.
type LookupTagTemplateIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
	// Used to find the parent resource to bind the IAM policy to
	TagTemplate pulumi.StringInput `pulumi:"tagTemplate"`
}

func (LookupTagTemplateIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagTemplateIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getTagTemplateIamPolicy.
type LookupTagTemplateIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupTagTemplateIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagTemplateIamPolicyResult)(nil)).Elem()
}

func (o LookupTagTemplateIamPolicyResultOutput) ToLookupTagTemplateIamPolicyResultOutput() LookupTagTemplateIamPolicyResultOutput {
	return o
}

func (o LookupTagTemplateIamPolicyResultOutput) ToLookupTagTemplateIamPolicyResultOutputWithContext(ctx context.Context) LookupTagTemplateIamPolicyResultOutput {
	return o
}

func (o LookupTagTemplateIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupTagTemplateIamPolicyResult] {
	return pulumix.Output[LookupTagTemplateIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// (Computed) The etag of the IAM policy.
func (o LookupTagTemplateIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagTemplateIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTagTemplateIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagTemplateIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `datacatalog.TagTemplateIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupTagTemplateIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagTemplateIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupTagTemplateIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagTemplateIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupTagTemplateIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagTemplateIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupTagTemplateIamPolicyResultOutput) TagTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagTemplateIamPolicyResult) string { return v.TagTemplate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagTemplateIamPolicyResultOutput{})
}
