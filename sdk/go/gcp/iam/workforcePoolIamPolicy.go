// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Three different resources help you manage your IAM policy for Cloud IAM WorkforcePool. Each of these resources serves a different use case:
//
// * `iam.WorkforcePoolIamPolicy`: Authoritative. Sets the IAM policy for the workforcepool and replaces any existing policy already attached.
// * `iam.WorkforcePoolIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the workforcepool are preserved.
// * `iam.WorkforcePoolIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the workforcepool are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iam.WorkforcePoolIamPolicy`: Retrieves the IAM policy for the workforcepool
//
// > **Note:** `iam.WorkforcePoolIamPolicy` **cannot** be used in conjunction with `iam.WorkforcePoolIamBinding` and `iam.WorkforcePoolIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iam.WorkforcePoolIamBinding` resources **can be** used in conjunction with `iam.WorkforcePoolIamMember` resources **only if** they do not grant privilege to the same role.
//
// ## iam.WorkforcePoolIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iam"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iam.workforcePoolAdmin",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewWorkforcePoolIamPolicy(ctx, "policy", &iam.WorkforcePoolIamPolicyArgs{
//				Location:        pulumi.Any(example.Location),
//				WorkforcePoolId: pulumi.Any(example.WorkforcePoolId),
//				PolicyData:      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## iam.WorkforcePoolIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.NewWorkforcePoolIamBinding(ctx, "binding", &iam.WorkforcePoolIamBindingArgs{
//				Location:        pulumi.Any(example.Location),
//				WorkforcePoolId: pulumi.Any(example.WorkforcePoolId),
//				Role:            pulumi.String("roles/iam.workforcePoolAdmin"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## iam.WorkforcePoolIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.NewWorkforcePoolIamMember(ctx, "member", &iam.WorkforcePoolIamMemberArgs{
//				Location:        pulumi.Any(example.Location),
//				WorkforcePoolId: pulumi.Any(example.WorkforcePoolId),
//				Role:            pulumi.String("roles/iam.workforcePoolAdmin"),
//				Member:          pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## > **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
// full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
// ---
//
// # IAM policy for Cloud IAM WorkforcePool
//
// Three different resources help you manage your IAM policy for Cloud IAM WorkforcePool. Each of these resources serves a different use case:
//
// * `iam.WorkforcePoolIamPolicy`: Authoritative. Sets the IAM policy for the workforcepool and replaces any existing policy already attached.
// * `iam.WorkforcePoolIamBinding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the workforcepool are preserved.
// * `iam.WorkforcePoolIamMember`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the workforcepool are preserved.
//
// # A data source can be used to retrieve policy data in advent you do not need creation
//
// * `iam.WorkforcePoolIamPolicy`: Retrieves the IAM policy for the workforcepool
//
// > **Note:** `iam.WorkforcePoolIamPolicy` **cannot** be used in conjunction with `iam.WorkforcePoolIamBinding` and `iam.WorkforcePoolIamMember` or they will fight over what your policy should be.
//
// > **Note:** `iam.WorkforcePoolIamBinding` resources **can be** used in conjunction with `iam.WorkforcePoolIamMember` resources **only if** they do not grant privilege to the same role.
//
// ## iam.WorkforcePoolIamPolicy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iam"
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			admin, err := organizations.LookupIAMPolicy(ctx, &organizations.LookupIAMPolicyArgs{
//				Bindings: []organizations.GetIAMPolicyBinding{
//					{
//						Role: "roles/iam.workforcePoolAdmin",
//						Members: []string{
//							"user:jane@example.com",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewWorkforcePoolIamPolicy(ctx, "policy", &iam.WorkforcePoolIamPolicyArgs{
//				Location:        pulumi.Any(example.Location),
//				WorkforcePoolId: pulumi.Any(example.WorkforcePoolId),
//				PolicyData:      pulumi.String(admin.PolicyData),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## iam.WorkforcePoolIamBinding
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.NewWorkforcePoolIamBinding(ctx, "binding", &iam.WorkforcePoolIamBindingArgs{
//				Location:        pulumi.Any(example.Location),
//				WorkforcePoolId: pulumi.Any(example.WorkforcePoolId),
//				Role:            pulumi.String("roles/iam.workforcePoolAdmin"),
//				Members: pulumi.StringArray{
//					pulumi.String("user:jane@example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## iam.WorkforcePoolIamMember
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.NewWorkforcePoolIamMember(ctx, "member", &iam.WorkforcePoolIamMemberArgs{
//				Location:        pulumi.Any(example.Location),
//				WorkforcePoolId: pulumi.Any(example.WorkforcePoolId),
//				Role:            pulumi.String("roles/iam.workforcePoolAdmin"),
//				Member:          pulumi.String("user:jane@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * locations/{{location}}/workforcePools/{{workforce_pool_id}}
//
// * {{location}}/{{workforce_pool_id}}
//
// * {{workforce_pool_id}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Cloud IAM workforcepool IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workforcePoolIamPolicy:WorkforcePoolIamPolicy editor "locations/{{location}}/workforcePools/{{workforce_pool_id}} roles/iam.workforcePoolViewer user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workforcePoolIamPolicy:WorkforcePoolIamPolicy editor "locations/{{location}}/workforcePools/{{workforce_pool_id}} roles/iam.workforcePoolViewer"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workforcePoolIamPolicy:WorkforcePoolIamPolicy editor locations/{{location}}/workforcePools/{{workforce_pool_id}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WorkforcePoolIamPolicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The location for the resource. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringOutput `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// Used to find the parent resource to bind the IAM policy to
	WorkforcePoolId pulumi.StringOutput `pulumi:"workforcePoolId"`
}

// NewWorkforcePoolIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewWorkforcePoolIamPolicy(ctx *pulumi.Context,
	name string, args *WorkforcePoolIamPolicyArgs, opts ...pulumi.ResourceOption) (*WorkforcePoolIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.WorkforcePoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkforcePoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkforcePoolIamPolicy
	err := ctx.RegisterResource("gcp:iam/workforcePoolIamPolicy:WorkforcePoolIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkforcePoolIamPolicy gets an existing WorkforcePoolIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkforcePoolIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkforcePoolIamPolicyState, opts ...pulumi.ResourceOption) (*WorkforcePoolIamPolicy, error) {
	var resource WorkforcePoolIamPolicy
	err := ctx.ReadResource("gcp:iam/workforcePoolIamPolicy:WorkforcePoolIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkforcePoolIamPolicy resources.
type workforcePoolIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The location for the resource. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// Used to find the parent resource to bind the IAM policy to
	WorkforcePoolId *string `pulumi:"workforcePoolId"`
}

type WorkforcePoolIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The location for the resource. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	WorkforcePoolId pulumi.StringPtrInput
}

func (WorkforcePoolIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*workforcePoolIamPolicyState)(nil)).Elem()
}

type workforcePoolIamPolicyArgs struct {
	// The location for the resource. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// Used to find the parent resource to bind the IAM policy to
	WorkforcePoolId string `pulumi:"workforcePoolId"`
}

// The set of arguments for constructing a WorkforcePoolIamPolicy resource.
type WorkforcePoolIamPolicyArgs struct {
	// The location for the resource. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// Used to find the parent resource to bind the IAM policy to
	WorkforcePoolId pulumi.StringInput
}

func (WorkforcePoolIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workforcePoolIamPolicyArgs)(nil)).Elem()
}

type WorkforcePoolIamPolicyInput interface {
	pulumi.Input

	ToWorkforcePoolIamPolicyOutput() WorkforcePoolIamPolicyOutput
	ToWorkforcePoolIamPolicyOutputWithContext(ctx context.Context) WorkforcePoolIamPolicyOutput
}

func (*WorkforcePoolIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkforcePoolIamPolicy)(nil)).Elem()
}

func (i *WorkforcePoolIamPolicy) ToWorkforcePoolIamPolicyOutput() WorkforcePoolIamPolicyOutput {
	return i.ToWorkforcePoolIamPolicyOutputWithContext(context.Background())
}

func (i *WorkforcePoolIamPolicy) ToWorkforcePoolIamPolicyOutputWithContext(ctx context.Context) WorkforcePoolIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforcePoolIamPolicyOutput)
}

// WorkforcePoolIamPolicyArrayInput is an input type that accepts WorkforcePoolIamPolicyArray and WorkforcePoolIamPolicyArrayOutput values.
// You can construct a concrete instance of `WorkforcePoolIamPolicyArrayInput` via:
//
//	WorkforcePoolIamPolicyArray{ WorkforcePoolIamPolicyArgs{...} }
type WorkforcePoolIamPolicyArrayInput interface {
	pulumi.Input

	ToWorkforcePoolIamPolicyArrayOutput() WorkforcePoolIamPolicyArrayOutput
	ToWorkforcePoolIamPolicyArrayOutputWithContext(context.Context) WorkforcePoolIamPolicyArrayOutput
}

type WorkforcePoolIamPolicyArray []WorkforcePoolIamPolicyInput

func (WorkforcePoolIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkforcePoolIamPolicy)(nil)).Elem()
}

func (i WorkforcePoolIamPolicyArray) ToWorkforcePoolIamPolicyArrayOutput() WorkforcePoolIamPolicyArrayOutput {
	return i.ToWorkforcePoolIamPolicyArrayOutputWithContext(context.Background())
}

func (i WorkforcePoolIamPolicyArray) ToWorkforcePoolIamPolicyArrayOutputWithContext(ctx context.Context) WorkforcePoolIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforcePoolIamPolicyArrayOutput)
}

// WorkforcePoolIamPolicyMapInput is an input type that accepts WorkforcePoolIamPolicyMap and WorkforcePoolIamPolicyMapOutput values.
// You can construct a concrete instance of `WorkforcePoolIamPolicyMapInput` via:
//
//	WorkforcePoolIamPolicyMap{ "key": WorkforcePoolIamPolicyArgs{...} }
type WorkforcePoolIamPolicyMapInput interface {
	pulumi.Input

	ToWorkforcePoolIamPolicyMapOutput() WorkforcePoolIamPolicyMapOutput
	ToWorkforcePoolIamPolicyMapOutputWithContext(context.Context) WorkforcePoolIamPolicyMapOutput
}

type WorkforcePoolIamPolicyMap map[string]WorkforcePoolIamPolicyInput

func (WorkforcePoolIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkforcePoolIamPolicy)(nil)).Elem()
}

func (i WorkforcePoolIamPolicyMap) ToWorkforcePoolIamPolicyMapOutput() WorkforcePoolIamPolicyMapOutput {
	return i.ToWorkforcePoolIamPolicyMapOutputWithContext(context.Background())
}

func (i WorkforcePoolIamPolicyMap) ToWorkforcePoolIamPolicyMapOutputWithContext(ctx context.Context) WorkforcePoolIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforcePoolIamPolicyMapOutput)
}

type WorkforcePoolIamPolicyOutput struct{ *pulumi.OutputState }

func (WorkforcePoolIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkforcePoolIamPolicy)(nil)).Elem()
}

func (o WorkforcePoolIamPolicyOutput) ToWorkforcePoolIamPolicyOutput() WorkforcePoolIamPolicyOutput {
	return o
}

func (o WorkforcePoolIamPolicyOutput) ToWorkforcePoolIamPolicyOutputWithContext(ctx context.Context) WorkforcePoolIamPolicyOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o WorkforcePoolIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The location for the resource. Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
// location is specified, it is taken from the provider configuration.
func (o WorkforcePoolIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o WorkforcePoolIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o WorkforcePoolIamPolicyOutput) WorkforcePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolIamPolicy) pulumi.StringOutput { return v.WorkforcePoolId }).(pulumi.StringOutput)
}

type WorkforcePoolIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (WorkforcePoolIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkforcePoolIamPolicy)(nil)).Elem()
}

func (o WorkforcePoolIamPolicyArrayOutput) ToWorkforcePoolIamPolicyArrayOutput() WorkforcePoolIamPolicyArrayOutput {
	return o
}

func (o WorkforcePoolIamPolicyArrayOutput) ToWorkforcePoolIamPolicyArrayOutputWithContext(ctx context.Context) WorkforcePoolIamPolicyArrayOutput {
	return o
}

func (o WorkforcePoolIamPolicyArrayOutput) Index(i pulumi.IntInput) WorkforcePoolIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkforcePoolIamPolicy {
		return vs[0].([]*WorkforcePoolIamPolicy)[vs[1].(int)]
	}).(WorkforcePoolIamPolicyOutput)
}

type WorkforcePoolIamPolicyMapOutput struct{ *pulumi.OutputState }

func (WorkforcePoolIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkforcePoolIamPolicy)(nil)).Elem()
}

func (o WorkforcePoolIamPolicyMapOutput) ToWorkforcePoolIamPolicyMapOutput() WorkforcePoolIamPolicyMapOutput {
	return o
}

func (o WorkforcePoolIamPolicyMapOutput) ToWorkforcePoolIamPolicyMapOutputWithContext(ctx context.Context) WorkforcePoolIamPolicyMapOutput {
	return o
}

func (o WorkforcePoolIamPolicyMapOutput) MapIndex(k pulumi.StringInput) WorkforcePoolIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkforcePoolIamPolicy {
		return vs[0].(map[string]*WorkforcePoolIamPolicy)[vs[1].(string)]
	}).(WorkforcePoolIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkforcePoolIamPolicyInput)(nil)).Elem(), &WorkforcePoolIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkforcePoolIamPolicyArrayInput)(nil)).Elem(), WorkforcePoolIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkforcePoolIamPolicyMapInput)(nil)).Elem(), WorkforcePoolIamPolicyMap{})
	pulumi.RegisterOutputType(WorkforcePoolIamPolicyOutput{})
	pulumi.RegisterOutputType(WorkforcePoolIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(WorkforcePoolIamPolicyMapOutput{})
}
