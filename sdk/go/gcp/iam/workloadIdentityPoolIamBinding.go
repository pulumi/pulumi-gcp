// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}
//
// * {{project}}/{{workload_identity_pool_id}}
//
// * {{workload_identity_pool_id}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Cloud IAM workloadidentitypool IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolIamBinding:WorkloadIdentityPoolIamBinding editor "projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}} roles/iam.workloadIdentityPoolViewer user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolIamBinding:WorkloadIdentityPoolIamBinding editor "projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}} roles/iam.workloadIdentityPoolViewer"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolIamBinding:WorkloadIdentityPoolIamBinding editor projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WorkloadIdentityPoolIamBinding struct {
	pulumi.CustomResourceState

	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WorkloadIdentityPoolIamBindingConditionPtrOutput `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringOutput `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringOutput `pulumi:"workloadIdentityPoolId"`
}

// NewWorkloadIdentityPoolIamBinding registers a new resource with the given unique name, arguments, and options.
func NewWorkloadIdentityPoolIamBinding(ctx *pulumi.Context,
	name string, args *WorkloadIdentityPoolIamBindingArgs, opts ...pulumi.ResourceOption) (*WorkloadIdentityPoolIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.WorkloadIdentityPoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadIdentityPoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkloadIdentityPoolIamBinding
	err := ctx.RegisterResource("gcp:iam/workloadIdentityPoolIamBinding:WorkloadIdentityPoolIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadIdentityPoolIamBinding gets an existing WorkloadIdentityPoolIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadIdentityPoolIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadIdentityPoolIamBindingState, opts ...pulumi.ResourceOption) (*WorkloadIdentityPoolIamBinding, error) {
	var resource WorkloadIdentityPoolIamBinding
	err := ctx.ReadResource("gcp:iam/workloadIdentityPoolIamBinding:WorkloadIdentityPoolIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadIdentityPoolIamBinding resources.
type workloadIdentityPoolIamBindingState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WorkloadIdentityPoolIamBindingCondition `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members []string `pulumi:"members"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role *string `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId *string `pulumi:"workloadIdentityPoolId"`
}

type WorkloadIdentityPoolIamBindingState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WorkloadIdentityPoolIamBindingConditionPtrInput
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members pulumi.StringArrayInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringPtrInput
}

func (WorkloadIdentityPoolIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolIamBindingState)(nil)).Elem()
}

type workloadIdentityPoolIamBindingArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WorkloadIdentityPoolIamBindingCondition `pulumi:"condition"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members []string `pulumi:"members"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId string `pulumi:"workloadIdentityPoolId"`
}

// The set of arguments for constructing a WorkloadIdentityPoolIamBinding resource.
type WorkloadIdentityPoolIamBindingArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WorkloadIdentityPoolIamBindingConditionPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Members pulumi.StringArrayInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringInput
}

func (WorkloadIdentityPoolIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolIamBindingArgs)(nil)).Elem()
}

type WorkloadIdentityPoolIamBindingInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolIamBindingOutput() WorkloadIdentityPoolIamBindingOutput
	ToWorkloadIdentityPoolIamBindingOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamBindingOutput
}

func (*WorkloadIdentityPoolIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPoolIamBinding)(nil)).Elem()
}

func (i *WorkloadIdentityPoolIamBinding) ToWorkloadIdentityPoolIamBindingOutput() WorkloadIdentityPoolIamBindingOutput {
	return i.ToWorkloadIdentityPoolIamBindingOutputWithContext(context.Background())
}

func (i *WorkloadIdentityPoolIamBinding) ToWorkloadIdentityPoolIamBindingOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolIamBindingOutput)
}

// WorkloadIdentityPoolIamBindingArrayInput is an input type that accepts WorkloadIdentityPoolIamBindingArray and WorkloadIdentityPoolIamBindingArrayOutput values.
// You can construct a concrete instance of `WorkloadIdentityPoolIamBindingArrayInput` via:
//
//	WorkloadIdentityPoolIamBindingArray{ WorkloadIdentityPoolIamBindingArgs{...} }
type WorkloadIdentityPoolIamBindingArrayInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolIamBindingArrayOutput() WorkloadIdentityPoolIamBindingArrayOutput
	ToWorkloadIdentityPoolIamBindingArrayOutputWithContext(context.Context) WorkloadIdentityPoolIamBindingArrayOutput
}

type WorkloadIdentityPoolIamBindingArray []WorkloadIdentityPoolIamBindingInput

func (WorkloadIdentityPoolIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadIdentityPoolIamBinding)(nil)).Elem()
}

func (i WorkloadIdentityPoolIamBindingArray) ToWorkloadIdentityPoolIamBindingArrayOutput() WorkloadIdentityPoolIamBindingArrayOutput {
	return i.ToWorkloadIdentityPoolIamBindingArrayOutputWithContext(context.Background())
}

func (i WorkloadIdentityPoolIamBindingArray) ToWorkloadIdentityPoolIamBindingArrayOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolIamBindingArrayOutput)
}

// WorkloadIdentityPoolIamBindingMapInput is an input type that accepts WorkloadIdentityPoolIamBindingMap and WorkloadIdentityPoolIamBindingMapOutput values.
// You can construct a concrete instance of `WorkloadIdentityPoolIamBindingMapInput` via:
//
//	WorkloadIdentityPoolIamBindingMap{ "key": WorkloadIdentityPoolIamBindingArgs{...} }
type WorkloadIdentityPoolIamBindingMapInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolIamBindingMapOutput() WorkloadIdentityPoolIamBindingMapOutput
	ToWorkloadIdentityPoolIamBindingMapOutputWithContext(context.Context) WorkloadIdentityPoolIamBindingMapOutput
}

type WorkloadIdentityPoolIamBindingMap map[string]WorkloadIdentityPoolIamBindingInput

func (WorkloadIdentityPoolIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadIdentityPoolIamBinding)(nil)).Elem()
}

func (i WorkloadIdentityPoolIamBindingMap) ToWorkloadIdentityPoolIamBindingMapOutput() WorkloadIdentityPoolIamBindingMapOutput {
	return i.ToWorkloadIdentityPoolIamBindingMapOutputWithContext(context.Background())
}

func (i WorkloadIdentityPoolIamBindingMap) ToWorkloadIdentityPoolIamBindingMapOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolIamBindingMapOutput)
}

type WorkloadIdentityPoolIamBindingOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPoolIamBinding)(nil)).Elem()
}

func (o WorkloadIdentityPoolIamBindingOutput) ToWorkloadIdentityPoolIamBindingOutput() WorkloadIdentityPoolIamBindingOutput {
	return o
}

func (o WorkloadIdentityPoolIamBindingOutput) ToWorkloadIdentityPoolIamBindingOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamBindingOutput {
	return o
}

// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
// Structure is documented below.
func (o WorkloadIdentityPoolIamBindingOutput) Condition() WorkloadIdentityPoolIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamBinding) WorkloadIdentityPoolIamBindingConditionPtrOutput {
		return v.Condition
	}).(WorkloadIdentityPoolIamBindingConditionPtrOutput)
}

// (Computed) The etag of the IAM policy.
func (o WorkloadIdentityPoolIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in `role`.
// Each entry can have one of the following values:
// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
func (o WorkloadIdentityPoolIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o WorkloadIdentityPoolIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The role that should be applied. Only one
// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
// `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o WorkloadIdentityPoolIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o WorkloadIdentityPoolIamBindingOutput) WorkloadIdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamBinding) pulumi.StringOutput { return v.WorkloadIdentityPoolId }).(pulumi.StringOutput)
}

type WorkloadIdentityPoolIamBindingArrayOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadIdentityPoolIamBinding)(nil)).Elem()
}

func (o WorkloadIdentityPoolIamBindingArrayOutput) ToWorkloadIdentityPoolIamBindingArrayOutput() WorkloadIdentityPoolIamBindingArrayOutput {
	return o
}

func (o WorkloadIdentityPoolIamBindingArrayOutput) ToWorkloadIdentityPoolIamBindingArrayOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamBindingArrayOutput {
	return o
}

func (o WorkloadIdentityPoolIamBindingArrayOutput) Index(i pulumi.IntInput) WorkloadIdentityPoolIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkloadIdentityPoolIamBinding {
		return vs[0].([]*WorkloadIdentityPoolIamBinding)[vs[1].(int)]
	}).(WorkloadIdentityPoolIamBindingOutput)
}

type WorkloadIdentityPoolIamBindingMapOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadIdentityPoolIamBinding)(nil)).Elem()
}

func (o WorkloadIdentityPoolIamBindingMapOutput) ToWorkloadIdentityPoolIamBindingMapOutput() WorkloadIdentityPoolIamBindingMapOutput {
	return o
}

func (o WorkloadIdentityPoolIamBindingMapOutput) ToWorkloadIdentityPoolIamBindingMapOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamBindingMapOutput {
	return o
}

func (o WorkloadIdentityPoolIamBindingMapOutput) MapIndex(k pulumi.StringInput) WorkloadIdentityPoolIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkloadIdentityPoolIamBinding {
		return vs[0].(map[string]*WorkloadIdentityPoolIamBinding)[vs[1].(string)]
	}).(WorkloadIdentityPoolIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolIamBindingInput)(nil)).Elem(), &WorkloadIdentityPoolIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolIamBindingArrayInput)(nil)).Elem(), WorkloadIdentityPoolIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolIamBindingMapInput)(nil)).Elem(), WorkloadIdentityPoolIamBindingMap{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolIamBindingOutput{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolIamBindingArrayOutput{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolIamBindingMapOutput{})
}
