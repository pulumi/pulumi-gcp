// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}
//
// * {{project}}/{{workload_identity_pool_id}}
//
// * {{workload_identity_pool_id}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Cloud IAM workloadidentitypool IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolIamPolicy:WorkloadIdentityPoolIamPolicy editor "projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}} roles/iam.workloadIdentityPoolViewer user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolIamPolicy:WorkloadIdentityPoolIamPolicy editor "projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}} roles/iam.workloadIdentityPoolViewer"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolIamPolicy:WorkloadIdentityPoolIamPolicy editor projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WorkloadIdentityPoolIamPolicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringOutput `pulumi:"workloadIdentityPoolId"`
}

// NewWorkloadIdentityPoolIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewWorkloadIdentityPoolIamPolicy(ctx *pulumi.Context,
	name string, args *WorkloadIdentityPoolIamPolicyArgs, opts ...pulumi.ResourceOption) (*WorkloadIdentityPoolIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.WorkloadIdentityPoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadIdentityPoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkloadIdentityPoolIamPolicy
	err := ctx.RegisterResource("gcp:iam/workloadIdentityPoolIamPolicy:WorkloadIdentityPoolIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadIdentityPoolIamPolicy gets an existing WorkloadIdentityPoolIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadIdentityPoolIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadIdentityPoolIamPolicyState, opts ...pulumi.ResourceOption) (*WorkloadIdentityPoolIamPolicy, error) {
	var resource WorkloadIdentityPoolIamPolicy
	err := ctx.ReadResource("gcp:iam/workloadIdentityPoolIamPolicy:WorkloadIdentityPoolIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadIdentityPoolIamPolicy resources.
type workloadIdentityPoolIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId *string `pulumi:"workloadIdentityPoolId"`
}

type WorkloadIdentityPoolIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringPtrInput
}

func (WorkloadIdentityPoolIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolIamPolicyState)(nil)).Elem()
}

type workloadIdentityPoolIamPolicyArgs struct {
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId string `pulumi:"workloadIdentityPoolId"`
}

// The set of arguments for constructing a WorkloadIdentityPoolIamPolicy resource.
type WorkloadIdentityPoolIamPolicyArgs struct {
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringInput
}

func (WorkloadIdentityPoolIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolIamPolicyArgs)(nil)).Elem()
}

type WorkloadIdentityPoolIamPolicyInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolIamPolicyOutput() WorkloadIdentityPoolIamPolicyOutput
	ToWorkloadIdentityPoolIamPolicyOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamPolicyOutput
}

func (*WorkloadIdentityPoolIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPoolIamPolicy)(nil)).Elem()
}

func (i *WorkloadIdentityPoolIamPolicy) ToWorkloadIdentityPoolIamPolicyOutput() WorkloadIdentityPoolIamPolicyOutput {
	return i.ToWorkloadIdentityPoolIamPolicyOutputWithContext(context.Background())
}

func (i *WorkloadIdentityPoolIamPolicy) ToWorkloadIdentityPoolIamPolicyOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolIamPolicyOutput)
}

// WorkloadIdentityPoolIamPolicyArrayInput is an input type that accepts WorkloadIdentityPoolIamPolicyArray and WorkloadIdentityPoolIamPolicyArrayOutput values.
// You can construct a concrete instance of `WorkloadIdentityPoolIamPolicyArrayInput` via:
//
//	WorkloadIdentityPoolIamPolicyArray{ WorkloadIdentityPoolIamPolicyArgs{...} }
type WorkloadIdentityPoolIamPolicyArrayInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolIamPolicyArrayOutput() WorkloadIdentityPoolIamPolicyArrayOutput
	ToWorkloadIdentityPoolIamPolicyArrayOutputWithContext(context.Context) WorkloadIdentityPoolIamPolicyArrayOutput
}

type WorkloadIdentityPoolIamPolicyArray []WorkloadIdentityPoolIamPolicyInput

func (WorkloadIdentityPoolIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadIdentityPoolIamPolicy)(nil)).Elem()
}

func (i WorkloadIdentityPoolIamPolicyArray) ToWorkloadIdentityPoolIamPolicyArrayOutput() WorkloadIdentityPoolIamPolicyArrayOutput {
	return i.ToWorkloadIdentityPoolIamPolicyArrayOutputWithContext(context.Background())
}

func (i WorkloadIdentityPoolIamPolicyArray) ToWorkloadIdentityPoolIamPolicyArrayOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolIamPolicyArrayOutput)
}

// WorkloadIdentityPoolIamPolicyMapInput is an input type that accepts WorkloadIdentityPoolIamPolicyMap and WorkloadIdentityPoolIamPolicyMapOutput values.
// You can construct a concrete instance of `WorkloadIdentityPoolIamPolicyMapInput` via:
//
//	WorkloadIdentityPoolIamPolicyMap{ "key": WorkloadIdentityPoolIamPolicyArgs{...} }
type WorkloadIdentityPoolIamPolicyMapInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolIamPolicyMapOutput() WorkloadIdentityPoolIamPolicyMapOutput
	ToWorkloadIdentityPoolIamPolicyMapOutputWithContext(context.Context) WorkloadIdentityPoolIamPolicyMapOutput
}

type WorkloadIdentityPoolIamPolicyMap map[string]WorkloadIdentityPoolIamPolicyInput

func (WorkloadIdentityPoolIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadIdentityPoolIamPolicy)(nil)).Elem()
}

func (i WorkloadIdentityPoolIamPolicyMap) ToWorkloadIdentityPoolIamPolicyMapOutput() WorkloadIdentityPoolIamPolicyMapOutput {
	return i.ToWorkloadIdentityPoolIamPolicyMapOutputWithContext(context.Background())
}

func (i WorkloadIdentityPoolIamPolicyMap) ToWorkloadIdentityPoolIamPolicyMapOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolIamPolicyMapOutput)
}

type WorkloadIdentityPoolIamPolicyOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPoolIamPolicy)(nil)).Elem()
}

func (o WorkloadIdentityPoolIamPolicyOutput) ToWorkloadIdentityPoolIamPolicyOutput() WorkloadIdentityPoolIamPolicyOutput {
	return o
}

func (o WorkloadIdentityPoolIamPolicyOutput) ToWorkloadIdentityPoolIamPolicyOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamPolicyOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o WorkloadIdentityPoolIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o WorkloadIdentityPoolIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o WorkloadIdentityPoolIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o WorkloadIdentityPoolIamPolicyOutput) WorkloadIdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamPolicy) pulumi.StringOutput { return v.WorkloadIdentityPoolId }).(pulumi.StringOutput)
}

type WorkloadIdentityPoolIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadIdentityPoolIamPolicy)(nil)).Elem()
}

func (o WorkloadIdentityPoolIamPolicyArrayOutput) ToWorkloadIdentityPoolIamPolicyArrayOutput() WorkloadIdentityPoolIamPolicyArrayOutput {
	return o
}

func (o WorkloadIdentityPoolIamPolicyArrayOutput) ToWorkloadIdentityPoolIamPolicyArrayOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamPolicyArrayOutput {
	return o
}

func (o WorkloadIdentityPoolIamPolicyArrayOutput) Index(i pulumi.IntInput) WorkloadIdentityPoolIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkloadIdentityPoolIamPolicy {
		return vs[0].([]*WorkloadIdentityPoolIamPolicy)[vs[1].(int)]
	}).(WorkloadIdentityPoolIamPolicyOutput)
}

type WorkloadIdentityPoolIamPolicyMapOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadIdentityPoolIamPolicy)(nil)).Elem()
}

func (o WorkloadIdentityPoolIamPolicyMapOutput) ToWorkloadIdentityPoolIamPolicyMapOutput() WorkloadIdentityPoolIamPolicyMapOutput {
	return o
}

func (o WorkloadIdentityPoolIamPolicyMapOutput) ToWorkloadIdentityPoolIamPolicyMapOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamPolicyMapOutput {
	return o
}

func (o WorkloadIdentityPoolIamPolicyMapOutput) MapIndex(k pulumi.StringInput) WorkloadIdentityPoolIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkloadIdentityPoolIamPolicy {
		return vs[0].(map[string]*WorkloadIdentityPoolIamPolicy)[vs[1].(string)]
	}).(WorkloadIdentityPoolIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolIamPolicyInput)(nil)).Elem(), &WorkloadIdentityPoolIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolIamPolicyArrayInput)(nil)).Elem(), WorkloadIdentityPoolIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolIamPolicyMapInput)(nil)).Elem(), WorkloadIdentityPoolIamPolicyMap{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolIamPolicyOutput{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolIamPolicyMapOutput{})
}
