// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}
//
// * {{project}}/{{workload_identity_pool_id}}
//
// * {{workload_identity_pool_id}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Cloud IAM workloadidentitypool IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolIamMember:WorkloadIdentityPoolIamMember editor "projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}} roles/iam.workloadIdentityPoolViewer user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolIamMember:WorkloadIdentityPoolIamMember editor "projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}} roles/iam.workloadIdentityPoolViewer"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolIamMember:WorkloadIdentityPoolIamMember editor projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type WorkloadIdentityPoolIamMember struct {
	pulumi.CustomResourceState

	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WorkloadIdentityPoolIamMemberConditionPtrOutput `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member pulumi.StringOutput `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringOutput `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringOutput `pulumi:"workloadIdentityPoolId"`
}

// NewWorkloadIdentityPoolIamMember registers a new resource with the given unique name, arguments, and options.
func NewWorkloadIdentityPoolIamMember(ctx *pulumi.Context,
	name string, args *WorkloadIdentityPoolIamMemberArgs, opts ...pulumi.ResourceOption) (*WorkloadIdentityPoolIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.WorkloadIdentityPoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadIdentityPoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkloadIdentityPoolIamMember
	err := ctx.RegisterResource("gcp:iam/workloadIdentityPoolIamMember:WorkloadIdentityPoolIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadIdentityPoolIamMember gets an existing WorkloadIdentityPoolIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadIdentityPoolIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadIdentityPoolIamMemberState, opts ...pulumi.ResourceOption) (*WorkloadIdentityPoolIamMember, error) {
	var resource WorkloadIdentityPoolIamMember
	err := ctx.ReadResource("gcp:iam/workloadIdentityPoolIamMember:WorkloadIdentityPoolIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadIdentityPoolIamMember resources.
type workloadIdentityPoolIamMemberState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WorkloadIdentityPoolIamMemberCondition `pulumi:"condition"`
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member *string `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role *string `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId *string `pulumi:"workloadIdentityPoolId"`
}

type WorkloadIdentityPoolIamMemberState struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WorkloadIdentityPoolIamMemberConditionPtrInput
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringPtrInput
}

func (WorkloadIdentityPoolIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolIamMemberState)(nil)).Elem()
}

type workloadIdentityPoolIamMemberArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition *WorkloadIdentityPoolIamMemberCondition `pulumi:"condition"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member string `pulumi:"member"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId string `pulumi:"workloadIdentityPoolId"`
}

// The set of arguments for constructing a WorkloadIdentityPoolIamMember resource.
type WorkloadIdentityPoolIamMemberArgs struct {
	// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
	// Structure is documented below.
	Condition WorkloadIdentityPoolIamMemberConditionPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
	// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
	// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
	Member pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The role that should be applied. Only one
	// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
	// `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringInput
}

func (WorkloadIdentityPoolIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolIamMemberArgs)(nil)).Elem()
}

type WorkloadIdentityPoolIamMemberInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolIamMemberOutput() WorkloadIdentityPoolIamMemberOutput
	ToWorkloadIdentityPoolIamMemberOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamMemberOutput
}

func (*WorkloadIdentityPoolIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPoolIamMember)(nil)).Elem()
}

func (i *WorkloadIdentityPoolIamMember) ToWorkloadIdentityPoolIamMemberOutput() WorkloadIdentityPoolIamMemberOutput {
	return i.ToWorkloadIdentityPoolIamMemberOutputWithContext(context.Background())
}

func (i *WorkloadIdentityPoolIamMember) ToWorkloadIdentityPoolIamMemberOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolIamMemberOutput)
}

// WorkloadIdentityPoolIamMemberArrayInput is an input type that accepts WorkloadIdentityPoolIamMemberArray and WorkloadIdentityPoolIamMemberArrayOutput values.
// You can construct a concrete instance of `WorkloadIdentityPoolIamMemberArrayInput` via:
//
//	WorkloadIdentityPoolIamMemberArray{ WorkloadIdentityPoolIamMemberArgs{...} }
type WorkloadIdentityPoolIamMemberArrayInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolIamMemberArrayOutput() WorkloadIdentityPoolIamMemberArrayOutput
	ToWorkloadIdentityPoolIamMemberArrayOutputWithContext(context.Context) WorkloadIdentityPoolIamMemberArrayOutput
}

type WorkloadIdentityPoolIamMemberArray []WorkloadIdentityPoolIamMemberInput

func (WorkloadIdentityPoolIamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadIdentityPoolIamMember)(nil)).Elem()
}

func (i WorkloadIdentityPoolIamMemberArray) ToWorkloadIdentityPoolIamMemberArrayOutput() WorkloadIdentityPoolIamMemberArrayOutput {
	return i.ToWorkloadIdentityPoolIamMemberArrayOutputWithContext(context.Background())
}

func (i WorkloadIdentityPoolIamMemberArray) ToWorkloadIdentityPoolIamMemberArrayOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolIamMemberArrayOutput)
}

// WorkloadIdentityPoolIamMemberMapInput is an input type that accepts WorkloadIdentityPoolIamMemberMap and WorkloadIdentityPoolIamMemberMapOutput values.
// You can construct a concrete instance of `WorkloadIdentityPoolIamMemberMapInput` via:
//
//	WorkloadIdentityPoolIamMemberMap{ "key": WorkloadIdentityPoolIamMemberArgs{...} }
type WorkloadIdentityPoolIamMemberMapInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolIamMemberMapOutput() WorkloadIdentityPoolIamMemberMapOutput
	ToWorkloadIdentityPoolIamMemberMapOutputWithContext(context.Context) WorkloadIdentityPoolIamMemberMapOutput
}

type WorkloadIdentityPoolIamMemberMap map[string]WorkloadIdentityPoolIamMemberInput

func (WorkloadIdentityPoolIamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadIdentityPoolIamMember)(nil)).Elem()
}

func (i WorkloadIdentityPoolIamMemberMap) ToWorkloadIdentityPoolIamMemberMapOutput() WorkloadIdentityPoolIamMemberMapOutput {
	return i.ToWorkloadIdentityPoolIamMemberMapOutputWithContext(context.Background())
}

func (i WorkloadIdentityPoolIamMemberMap) ToWorkloadIdentityPoolIamMemberMapOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolIamMemberMapOutput)
}

type WorkloadIdentityPoolIamMemberOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPoolIamMember)(nil)).Elem()
}

func (o WorkloadIdentityPoolIamMemberOutput) ToWorkloadIdentityPoolIamMemberOutput() WorkloadIdentityPoolIamMemberOutput {
	return o
}

func (o WorkloadIdentityPoolIamMemberOutput) ToWorkloadIdentityPoolIamMemberOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamMemberOutput {
	return o
}

// An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
// Structure is documented below.
func (o WorkloadIdentityPoolIamMemberOutput) Condition() WorkloadIdentityPoolIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamMember) WorkloadIdentityPoolIamMemberConditionPtrOutput {
		return v.Condition
	}).(WorkloadIdentityPoolIamMemberConditionPtrOutput)
}

// (Computed) The etag of the IAM policy.
func (o WorkloadIdentityPoolIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in `role`.
// Each entry can have one of the following values:
// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
// * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
// * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
// * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"
func (o WorkloadIdentityPoolIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o WorkloadIdentityPoolIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The role that should be applied. Only one
// `iam.WorkloadIdentityPoolIamBinding` can be used per role. Note that custom roles must be of the format
// `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o WorkloadIdentityPoolIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o WorkloadIdentityPoolIamMemberOutput) WorkloadIdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolIamMember) pulumi.StringOutput { return v.WorkloadIdentityPoolId }).(pulumi.StringOutput)
}

type WorkloadIdentityPoolIamMemberArrayOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolIamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadIdentityPoolIamMember)(nil)).Elem()
}

func (o WorkloadIdentityPoolIamMemberArrayOutput) ToWorkloadIdentityPoolIamMemberArrayOutput() WorkloadIdentityPoolIamMemberArrayOutput {
	return o
}

func (o WorkloadIdentityPoolIamMemberArrayOutput) ToWorkloadIdentityPoolIamMemberArrayOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamMemberArrayOutput {
	return o
}

func (o WorkloadIdentityPoolIamMemberArrayOutput) Index(i pulumi.IntInput) WorkloadIdentityPoolIamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkloadIdentityPoolIamMember {
		return vs[0].([]*WorkloadIdentityPoolIamMember)[vs[1].(int)]
	}).(WorkloadIdentityPoolIamMemberOutput)
}

type WorkloadIdentityPoolIamMemberMapOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolIamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadIdentityPoolIamMember)(nil)).Elem()
}

func (o WorkloadIdentityPoolIamMemberMapOutput) ToWorkloadIdentityPoolIamMemberMapOutput() WorkloadIdentityPoolIamMemberMapOutput {
	return o
}

func (o WorkloadIdentityPoolIamMemberMapOutput) ToWorkloadIdentityPoolIamMemberMapOutputWithContext(ctx context.Context) WorkloadIdentityPoolIamMemberMapOutput {
	return o
}

func (o WorkloadIdentityPoolIamMemberMapOutput) MapIndex(k pulumi.StringInput) WorkloadIdentityPoolIamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkloadIdentityPoolIamMember {
		return vs[0].(map[string]*WorkloadIdentityPoolIamMember)[vs[1].(string)]
	}).(WorkloadIdentityPoolIamMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolIamMemberInput)(nil)).Elem(), &WorkloadIdentityPoolIamMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolIamMemberArrayInput)(nil)).Elem(), WorkloadIdentityPoolIamMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolIamMemberMapInput)(nil)).Elem(), WorkloadIdentityPoolIamMemberMap{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolIamMemberOutput{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolIamMemberArrayOutput{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolIamMemberMapOutput{})
}
