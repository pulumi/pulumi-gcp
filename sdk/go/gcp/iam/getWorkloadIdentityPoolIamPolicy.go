// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.LookupWorkloadIdentityPoolIamPolicy(ctx, &iam.LookupWorkloadIdentityPoolIamPolicyArgs{
//				Project:                pulumi.StringRef(example.Project),
//				WorkloadIdentityPoolId: example.WorkloadIdentityPoolId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkloadIdentityPoolIamPolicy(ctx *pulumi.Context, args *LookupWorkloadIdentityPoolIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupWorkloadIdentityPoolIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkloadIdentityPoolIamPolicyResult
	err := ctx.Invoke("gcp:iam/getWorkloadIdentityPoolIamPolicy:getWorkloadIdentityPoolIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkloadIdentityPoolIamPolicy.
type LookupWorkloadIdentityPoolIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId string `pulumi:"workloadIdentityPoolId"`
}

// A collection of values returned by getWorkloadIdentityPoolIamPolicy.
type LookupWorkloadIdentityPoolIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `iam.WorkloadIdentityPoolIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData             string `pulumi:"policyData"`
	Project                string `pulumi:"project"`
	WorkloadIdentityPoolId string `pulumi:"workloadIdentityPoolId"`
}

func LookupWorkloadIdentityPoolIamPolicyOutput(ctx *pulumi.Context, args LookupWorkloadIdentityPoolIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupWorkloadIdentityPoolIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkloadIdentityPoolIamPolicyResultOutput, error) {
			args := v.(LookupWorkloadIdentityPoolIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:iam/getWorkloadIdentityPoolIamPolicy:getWorkloadIdentityPoolIamPolicy", args, LookupWorkloadIdentityPoolIamPolicyResultOutput{}, options).(LookupWorkloadIdentityPoolIamPolicyResultOutput), nil
		}).(LookupWorkloadIdentityPoolIamPolicyResultOutput)
}

// A collection of arguments for invoking getWorkloadIdentityPoolIamPolicy.
type LookupWorkloadIdentityPoolIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	WorkloadIdentityPoolId pulumi.StringInput `pulumi:"workloadIdentityPoolId"`
}

func (LookupWorkloadIdentityPoolIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkloadIdentityPoolIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getWorkloadIdentityPoolIamPolicy.
type LookupWorkloadIdentityPoolIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupWorkloadIdentityPoolIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkloadIdentityPoolIamPolicyResult)(nil)).Elem()
}

func (o LookupWorkloadIdentityPoolIamPolicyResultOutput) ToLookupWorkloadIdentityPoolIamPolicyResultOutput() LookupWorkloadIdentityPoolIamPolicyResultOutput {
	return o
}

func (o LookupWorkloadIdentityPoolIamPolicyResultOutput) ToLookupWorkloadIdentityPoolIamPolicyResultOutputWithContext(ctx context.Context) LookupWorkloadIdentityPoolIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupWorkloadIdentityPoolIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadIdentityPoolIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWorkloadIdentityPoolIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadIdentityPoolIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `iam.WorkloadIdentityPoolIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupWorkloadIdentityPoolIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadIdentityPoolIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupWorkloadIdentityPoolIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadIdentityPoolIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupWorkloadIdentityPoolIamPolicyResultOutput) WorkloadIdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadIdentityPoolIamPolicyResult) string { return v.WorkloadIdentityPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkloadIdentityPoolIamPolicyResultOutput{})
}
