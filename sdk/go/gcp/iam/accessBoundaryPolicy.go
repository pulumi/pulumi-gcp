// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a collection of access boundary policies to apply to a given resource.
// **NOTE**: This is a private feature and users should contact GCP support
// if they would like to test it.
//
// ## Example Usage
//
// ### Iam Access Boundary Policy Basic
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/accesscontextmanager"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iam"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			project, err := organizations.NewProject(ctx, "project", &organizations.ProjectArgs{
//				ProjectId:      pulumi.String("my-project"),
//				Name:           pulumi.String("my-project"),
//				OrgId:          pulumi.String("123456789"),
//				BillingAccount: pulumi.String("000000-0000000-0000000-000000"),
//				DeletionPolicy: pulumi.String("DELETE"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = accesscontextmanager.NewAccessPolicy(ctx, "access-policy", &accesscontextmanager.AccessPolicyArgs{
//				Parent: project.OrgId.ApplyT(func(orgId *string) (string, error) {
//					return fmt.Sprintf("organizations/%v", orgId), nil
//				}).(pulumi.StringOutput),
//				Title: pulumi.String("my policy"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = accesscontextmanager.NewAccessLevel(ctx, "test-access", &accesscontextmanager.AccessLevelArgs{
//				Parent: access_policy.Name.ApplyT(func(name string) (string, error) {
//					return fmt.Sprintf("accessPolicies/%v", name), nil
//				}).(pulumi.StringOutput),
//				Name: access_policy.Name.ApplyT(func(name string) (string, error) {
//					return fmt.Sprintf("accessPolicies/%v/accessLevels/chromeos_no_lock", name), nil
//				}).(pulumi.StringOutput),
//				Title: pulumi.String("chromeos_no_lock"),
//				Basic: &accesscontextmanager.AccessLevelBasicArgs{
//					Conditions: accesscontextmanager.AccessLevelBasicConditionArray{
//						&accesscontextmanager.AccessLevelBasicConditionArgs{
//							DevicePolicy: &accesscontextmanager.AccessLevelBasicConditionDevicePolicyArgs{
//								RequireScreenLock: pulumi.Bool(true),
//								OsConstraints: accesscontextmanager.AccessLevelBasicConditionDevicePolicyOsConstraintArray{
//									&accesscontextmanager.AccessLevelBasicConditionDevicePolicyOsConstraintArgs{
//										OsType: pulumi.String("DESKTOP_CHROME_OS"),
//									},
//								},
//							},
//							Regions: pulumi.StringArray{
//								pulumi.String("CH"),
//								pulumi.String("IT"),
//								pulumi.String("US"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewAccessBoundaryPolicy(ctx, "example", &iam.AccessBoundaryPolicyArgs{
//				Parent: pulumi.String(std.UrlencodeOutput(ctx, std.UrlencodeOutputArgs{
//					Input: project.ProjectId.ApplyT(func(projectId string) (string, error) {
//						return fmt.Sprintf("cloudresourcemanager.googleapis.com/projects/%v", projectId), nil
//					}).(pulumi.StringOutput),
//				}, nil).ApplyT(func(invoke std.UrlencodeResult) (*string, error) {
//					return invoke.Result, nil
//				}).(pulumi.StringPtrOutput)),
//				Name:        pulumi.String("my-ab-policy"),
//				DisplayName: pulumi.String("My AB policy"),
//				Rules: iam.AccessBoundaryPolicyRuleArray{
//					&iam.AccessBoundaryPolicyRuleArgs{
//						Description: pulumi.String("AB rule"),
//						AccessBoundaryRule: &iam.AccessBoundaryPolicyRuleAccessBoundaryRuleArgs{
//							AvailableResource: pulumi.String("*"),
//							AvailablePermissions: pulumi.StringArray{
//								pulumi.String("*"),
//							},
//							AvailabilityCondition: &iam.AccessBoundaryPolicyRuleAccessBoundaryRuleAvailabilityConditionArgs{
//								Title: pulumi.String("Access level expr"),
//								Expression: pulumi.All(project.OrgId, test_access.Name).ApplyT(func(_args []interface{}) (string, error) {
//									orgId := _args[0].(*string)
//									name := _args[1].(string)
//									return fmt.Sprintf("request.matchAccessLevels('%v', ['%v'])", orgId, name), nil
//								}).(pulumi.StringOutput),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AccessBoundaryPolicy can be imported using any of these accepted formats:
//
// * `{{parent}}/{{name}}`
//
// When using the `pulumi import` command, AccessBoundaryPolicy can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:iam/accessBoundaryPolicy:AccessBoundaryPolicy default {{parent}}/{{name}}
// ```
type AccessBoundaryPolicy struct {
	pulumi.CustomResourceState

	// The display name of the rule.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The hash of the resource. Used internally during updates.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// The attachment point is identified by its URL-encoded full resource name.
	Parent pulumi.StringOutput `pulumi:"parent"`
	// Rules to be applied.
	// Structure is documented below.
	Rules AccessBoundaryPolicyRuleArrayOutput `pulumi:"rules"`
}

// NewAccessBoundaryPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccessBoundaryPolicy(ctx *pulumi.Context,
	name string, args *AccessBoundaryPolicyArgs, opts ...pulumi.ResourceOption) (*AccessBoundaryPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessBoundaryPolicy
	err := ctx.RegisterResource("gcp:iam/accessBoundaryPolicy:AccessBoundaryPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessBoundaryPolicy gets an existing AccessBoundaryPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessBoundaryPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessBoundaryPolicyState, opts ...pulumi.ResourceOption) (*AccessBoundaryPolicy, error) {
	var resource AccessBoundaryPolicy
	err := ctx.ReadResource("gcp:iam/accessBoundaryPolicy:AccessBoundaryPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessBoundaryPolicy resources.
type accessBoundaryPolicyState struct {
	// The display name of the rule.
	DisplayName *string `pulumi:"displayName"`
	// The hash of the resource. Used internally during updates.
	Etag *string `pulumi:"etag"`
	// The name of the policy.
	Name *string `pulumi:"name"`
	// The attachment point is identified by its URL-encoded full resource name.
	Parent *string `pulumi:"parent"`
	// Rules to be applied.
	// Structure is documented below.
	Rules []AccessBoundaryPolicyRule `pulumi:"rules"`
}

type AccessBoundaryPolicyState struct {
	// The display name of the rule.
	DisplayName pulumi.StringPtrInput
	// The hash of the resource. Used internally during updates.
	Etag pulumi.StringPtrInput
	// The name of the policy.
	Name pulumi.StringPtrInput
	// The attachment point is identified by its URL-encoded full resource name.
	Parent pulumi.StringPtrInput
	// Rules to be applied.
	// Structure is documented below.
	Rules AccessBoundaryPolicyRuleArrayInput
}

func (AccessBoundaryPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessBoundaryPolicyState)(nil)).Elem()
}

type accessBoundaryPolicyArgs struct {
	// The display name of the rule.
	DisplayName *string `pulumi:"displayName"`
	// The name of the policy.
	Name *string `pulumi:"name"`
	// The attachment point is identified by its URL-encoded full resource name.
	Parent string `pulumi:"parent"`
	// Rules to be applied.
	// Structure is documented below.
	Rules []AccessBoundaryPolicyRule `pulumi:"rules"`
}

// The set of arguments for constructing a AccessBoundaryPolicy resource.
type AccessBoundaryPolicyArgs struct {
	// The display name of the rule.
	DisplayName pulumi.StringPtrInput
	// The name of the policy.
	Name pulumi.StringPtrInput
	// The attachment point is identified by its URL-encoded full resource name.
	Parent pulumi.StringInput
	// Rules to be applied.
	// Structure is documented below.
	Rules AccessBoundaryPolicyRuleArrayInput
}

func (AccessBoundaryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessBoundaryPolicyArgs)(nil)).Elem()
}

type AccessBoundaryPolicyInput interface {
	pulumi.Input

	ToAccessBoundaryPolicyOutput() AccessBoundaryPolicyOutput
	ToAccessBoundaryPolicyOutputWithContext(ctx context.Context) AccessBoundaryPolicyOutput
}

func (*AccessBoundaryPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessBoundaryPolicy)(nil)).Elem()
}

func (i *AccessBoundaryPolicy) ToAccessBoundaryPolicyOutput() AccessBoundaryPolicyOutput {
	return i.ToAccessBoundaryPolicyOutputWithContext(context.Background())
}

func (i *AccessBoundaryPolicy) ToAccessBoundaryPolicyOutputWithContext(ctx context.Context) AccessBoundaryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessBoundaryPolicyOutput)
}

// AccessBoundaryPolicyArrayInput is an input type that accepts AccessBoundaryPolicyArray and AccessBoundaryPolicyArrayOutput values.
// You can construct a concrete instance of `AccessBoundaryPolicyArrayInput` via:
//
//	AccessBoundaryPolicyArray{ AccessBoundaryPolicyArgs{...} }
type AccessBoundaryPolicyArrayInput interface {
	pulumi.Input

	ToAccessBoundaryPolicyArrayOutput() AccessBoundaryPolicyArrayOutput
	ToAccessBoundaryPolicyArrayOutputWithContext(context.Context) AccessBoundaryPolicyArrayOutput
}

type AccessBoundaryPolicyArray []AccessBoundaryPolicyInput

func (AccessBoundaryPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessBoundaryPolicy)(nil)).Elem()
}

func (i AccessBoundaryPolicyArray) ToAccessBoundaryPolicyArrayOutput() AccessBoundaryPolicyArrayOutput {
	return i.ToAccessBoundaryPolicyArrayOutputWithContext(context.Background())
}

func (i AccessBoundaryPolicyArray) ToAccessBoundaryPolicyArrayOutputWithContext(ctx context.Context) AccessBoundaryPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessBoundaryPolicyArrayOutput)
}

// AccessBoundaryPolicyMapInput is an input type that accepts AccessBoundaryPolicyMap and AccessBoundaryPolicyMapOutput values.
// You can construct a concrete instance of `AccessBoundaryPolicyMapInput` via:
//
//	AccessBoundaryPolicyMap{ "key": AccessBoundaryPolicyArgs{...} }
type AccessBoundaryPolicyMapInput interface {
	pulumi.Input

	ToAccessBoundaryPolicyMapOutput() AccessBoundaryPolicyMapOutput
	ToAccessBoundaryPolicyMapOutputWithContext(context.Context) AccessBoundaryPolicyMapOutput
}

type AccessBoundaryPolicyMap map[string]AccessBoundaryPolicyInput

func (AccessBoundaryPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessBoundaryPolicy)(nil)).Elem()
}

func (i AccessBoundaryPolicyMap) ToAccessBoundaryPolicyMapOutput() AccessBoundaryPolicyMapOutput {
	return i.ToAccessBoundaryPolicyMapOutputWithContext(context.Background())
}

func (i AccessBoundaryPolicyMap) ToAccessBoundaryPolicyMapOutputWithContext(ctx context.Context) AccessBoundaryPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessBoundaryPolicyMapOutput)
}

type AccessBoundaryPolicyOutput struct{ *pulumi.OutputState }

func (AccessBoundaryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessBoundaryPolicy)(nil)).Elem()
}

func (o AccessBoundaryPolicyOutput) ToAccessBoundaryPolicyOutput() AccessBoundaryPolicyOutput {
	return o
}

func (o AccessBoundaryPolicyOutput) ToAccessBoundaryPolicyOutputWithContext(ctx context.Context) AccessBoundaryPolicyOutput {
	return o
}

// The display name of the rule.
func (o AccessBoundaryPolicyOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessBoundaryPolicy) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The hash of the resource. Used internally during updates.
func (o AccessBoundaryPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessBoundaryPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The name of the policy.
func (o AccessBoundaryPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessBoundaryPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The attachment point is identified by its URL-encoded full resource name.
func (o AccessBoundaryPolicyOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessBoundaryPolicy) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// Rules to be applied.
// Structure is documented below.
func (o AccessBoundaryPolicyOutput) Rules() AccessBoundaryPolicyRuleArrayOutput {
	return o.ApplyT(func(v *AccessBoundaryPolicy) AccessBoundaryPolicyRuleArrayOutput { return v.Rules }).(AccessBoundaryPolicyRuleArrayOutput)
}

type AccessBoundaryPolicyArrayOutput struct{ *pulumi.OutputState }

func (AccessBoundaryPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessBoundaryPolicy)(nil)).Elem()
}

func (o AccessBoundaryPolicyArrayOutput) ToAccessBoundaryPolicyArrayOutput() AccessBoundaryPolicyArrayOutput {
	return o
}

func (o AccessBoundaryPolicyArrayOutput) ToAccessBoundaryPolicyArrayOutputWithContext(ctx context.Context) AccessBoundaryPolicyArrayOutput {
	return o
}

func (o AccessBoundaryPolicyArrayOutput) Index(i pulumi.IntInput) AccessBoundaryPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessBoundaryPolicy {
		return vs[0].([]*AccessBoundaryPolicy)[vs[1].(int)]
	}).(AccessBoundaryPolicyOutput)
}

type AccessBoundaryPolicyMapOutput struct{ *pulumi.OutputState }

func (AccessBoundaryPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessBoundaryPolicy)(nil)).Elem()
}

func (o AccessBoundaryPolicyMapOutput) ToAccessBoundaryPolicyMapOutput() AccessBoundaryPolicyMapOutput {
	return o
}

func (o AccessBoundaryPolicyMapOutput) ToAccessBoundaryPolicyMapOutputWithContext(ctx context.Context) AccessBoundaryPolicyMapOutput {
	return o
}

func (o AccessBoundaryPolicyMapOutput) MapIndex(k pulumi.StringInput) AccessBoundaryPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessBoundaryPolicy {
		return vs[0].(map[string]*AccessBoundaryPolicy)[vs[1].(string)]
	}).(AccessBoundaryPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessBoundaryPolicyInput)(nil)).Elem(), &AccessBoundaryPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessBoundaryPolicyArrayInput)(nil)).Elem(), AccessBoundaryPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessBoundaryPolicyMapInput)(nil)).Elem(), AccessBoundaryPolicyMap{})
	pulumi.RegisterOutputType(AccessBoundaryPolicyOutput{})
	pulumi.RegisterOutputType(AccessBoundaryPolicyArrayOutput{})
	pulumi.RegisterOutputType(AccessBoundaryPolicyMapOutput{})
}
