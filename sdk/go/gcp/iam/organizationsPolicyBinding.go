// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Iam Organizations Policy Binding
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/iam"
//	"github.com/pulumi/pulumi-time/sdk/go/time"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			pabPolicy, err := iam.NewPrincipalAccessBoundaryPolicy(ctx, "pab_policy", &iam.PrincipalAccessBoundaryPolicyArgs{
//				Organization:                    pulumi.String("123456789"),
//				Location:                        pulumi.String("global"),
//				DisplayName:                     pulumi.String("binding for all principals in the Organization"),
//				PrincipalAccessBoundaryPolicyId: pulumi.String("my-pab-policy"),
//			})
//			if err != nil {
//				return err
//			}
//			wait60Seconds, err := time.NewSleep(ctx, "wait_60_seconds", &time.SleepArgs{
//				CreateDuration: "60s",
//			}, pulumi.DependsOn([]pulumi.Resource{
//				pabPolicy,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewOrganizationsPolicyBinding(ctx, "binding-for-all-org-principals", &iam.OrganizationsPolicyBindingArgs{
//				Organization:    pulumi.String("123456789"),
//				Location:        pulumi.String("global"),
//				DisplayName:     pulumi.String("binding for all principals in the Organization"),
//				PolicyKind:      pulumi.String("PRINCIPAL_ACCESS_BOUNDARY"),
//				PolicyBindingId: pulumi.String("binding-for-all-org-principals"),
//				Policy: pabPolicy.PrincipalAccessBoundaryPolicyId.ApplyT(func(principalAccessBoundaryPolicyId string) (string, error) {
//					return fmt.Sprintf("organizations/123456789/locations/global/principalAccessBoundaryPolicies/%v", principalAccessBoundaryPolicyId), nil
//				}).(pulumi.StringOutput),
//				Target: &iam.OrganizationsPolicyBindingTargetArgs{
//					PrincipalSet: pulumi.String("//cloudresourcemanager.googleapis.com/organizations/123456789"),
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				wait60Seconds,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OrganizationsPolicyBinding can be imported using any of these accepted formats:
//
// * `organizations/{{organization}}/locations/{{location}}/policyBindings/{{policy_binding_id}}`
//
// * `{{organization}}/{{location}}/{{policy_binding_id}}`
//
// When using the `pulumi import` command, OrganizationsPolicyBinding can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:iam/organizationsPolicyBinding:OrganizationsPolicyBinding default organizations/{{organization}}/locations/{{location}}/policyBindings/{{policy_binding_id}}
// ```
//
// ```sh
// $ pulumi import gcp:iam/organizationsPolicyBinding:OrganizationsPolicyBinding default {{organization}}/{{location}}/{{policy_binding_id}}
// ```
type OrganizationsPolicyBinding struct {
	pulumi.CustomResourceState

	// Optional. User defined annotations. See https://google.aip.dev/148#annotations for more details such as format and size
	// limitations **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The
	// syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary
	// size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() <
	// 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\"
	// expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description:
	// \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type
	// != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string
	// with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and
	// functions that may be referenced within an expression are determined by the service that evaluates it. See the service
	// documentation for additional information.
	Condition OrganizationsPolicyBindingConditionPtrOutput `pulumi:"condition"`
	// Output only. The time when the policy binding was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. The description of the policy binding. Must be less than or equal to 63 characters.
	DisplayName          pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	// Optional. The etag for the policy binding. If this is provided on update, it must match the server's etag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The location of the Policy Binding
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the policy binding in the format `{binding_parent/locations/{location}/policyBindings/{policy_binding_id}`
	Name pulumi.StringOutput `pulumi:"name"`
	// The parent organization of the Policy Binding.
	Organization pulumi.StringOutput `pulumi:"organization"`
	// Required. Immutable. The resource name of the policy to be bound. The binding parent and policy must belong to the same Organization (or Project).
	Policy pulumi.StringOutput `pulumi:"policy"`
	// The Policy Binding ID.
	PolicyBindingId pulumi.StringOutput `pulumi:"policyBindingId"`
	// Immutable. The kind of the policy to attach in this binding. This field must be one of the following: - Left empty (will
	// be automatically set to the policy kind) - The input policy kind Possible values: POLICY_KIND_UNSPECIFIED
	// PRINCIPAL_ACCESS_BOUNDARY ACCESS
	PolicyKind pulumi.StringPtrOutput `pulumi:"policyKind"`
	// Output only. The globally unique ID of the policy to be bound.
	PolicyUid pulumi.StringOutput `pulumi:"policyUid"`
	// Target is the full resource name of the resource to which the policy will be bound. Immutable once set.
	// Structure is documented below.
	Target OrganizationsPolicyBindingTargetOutput `pulumi:"target"`
	// Output only. The globally unique ID of the policy binding. Assigned when the policy binding is created.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. The time when the policy binding was most recently updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewOrganizationsPolicyBinding registers a new resource with the given unique name, arguments, and options.
func NewOrganizationsPolicyBinding(ctx *pulumi.Context,
	name string, args *OrganizationsPolicyBindingArgs, opts ...pulumi.ResourceOption) (*OrganizationsPolicyBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	if args.PolicyBindingId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyBindingId'")
	}
	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationsPolicyBinding
	err := ctx.RegisterResource("gcp:iam/organizationsPolicyBinding:OrganizationsPolicyBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationsPolicyBinding gets an existing OrganizationsPolicyBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationsPolicyBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationsPolicyBindingState, opts ...pulumi.ResourceOption) (*OrganizationsPolicyBinding, error) {
	var resource OrganizationsPolicyBinding
	err := ctx.ReadResource("gcp:iam/organizationsPolicyBinding:OrganizationsPolicyBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationsPolicyBinding resources.
type organizationsPolicyBindingState struct {
	// Optional. User defined annotations. See https://google.aip.dev/148#annotations for more details such as format and size
	// limitations **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The
	// syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary
	// size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() <
	// 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\"
	// expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description:
	// \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type
	// != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string
	// with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and
	// functions that may be referenced within an expression are determined by the service that evaluates it. See the service
	// documentation for additional information.
	Condition *OrganizationsPolicyBindingCondition `pulumi:"condition"`
	// Output only. The time when the policy binding was created.
	CreateTime *string `pulumi:"createTime"`
	// Optional. The description of the policy binding. Must be less than or equal to 63 characters.
	DisplayName          *string           `pulumi:"displayName"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	// Optional. The etag for the policy binding. If this is provided on update, it must match the server's etag.
	Etag *string `pulumi:"etag"`
	// The location of the Policy Binding
	Location *string `pulumi:"location"`
	// The name of the policy binding in the format `{binding_parent/locations/{location}/policyBindings/{policy_binding_id}`
	Name *string `pulumi:"name"`
	// The parent organization of the Policy Binding.
	Organization *string `pulumi:"organization"`
	// Required. Immutable. The resource name of the policy to be bound. The binding parent and policy must belong to the same Organization (or Project).
	Policy *string `pulumi:"policy"`
	// The Policy Binding ID.
	PolicyBindingId *string `pulumi:"policyBindingId"`
	// Immutable. The kind of the policy to attach in this binding. This field must be one of the following: - Left empty (will
	// be automatically set to the policy kind) - The input policy kind Possible values: POLICY_KIND_UNSPECIFIED
	// PRINCIPAL_ACCESS_BOUNDARY ACCESS
	PolicyKind *string `pulumi:"policyKind"`
	// Output only. The globally unique ID of the policy to be bound.
	PolicyUid *string `pulumi:"policyUid"`
	// Target is the full resource name of the resource to which the policy will be bound. Immutable once set.
	// Structure is documented below.
	Target *OrganizationsPolicyBindingTarget `pulumi:"target"`
	// Output only. The globally unique ID of the policy binding. Assigned when the policy binding is created.
	Uid *string `pulumi:"uid"`
	// Output only. The time when the policy binding was most recently updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type OrganizationsPolicyBindingState struct {
	// Optional. User defined annotations. See https://google.aip.dev/148#annotations for more details such as format and size
	// limitations **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The
	// syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary
	// size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() <
	// 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\"
	// expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description:
	// \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type
	// != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string
	// with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and
	// functions that may be referenced within an expression are determined by the service that evaluates it. See the service
	// documentation for additional information.
	Condition OrganizationsPolicyBindingConditionPtrInput
	// Output only. The time when the policy binding was created.
	CreateTime pulumi.StringPtrInput
	// Optional. The description of the policy binding. Must be less than or equal to 63 characters.
	DisplayName          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	// Optional. The etag for the policy binding. If this is provided on update, it must match the server's etag.
	Etag pulumi.StringPtrInput
	// The location of the Policy Binding
	Location pulumi.StringPtrInput
	// The name of the policy binding in the format `{binding_parent/locations/{location}/policyBindings/{policy_binding_id}`
	Name pulumi.StringPtrInput
	// The parent organization of the Policy Binding.
	Organization pulumi.StringPtrInput
	// Required. Immutable. The resource name of the policy to be bound. The binding parent and policy must belong to the same Organization (or Project).
	Policy pulumi.StringPtrInput
	// The Policy Binding ID.
	PolicyBindingId pulumi.StringPtrInput
	// Immutable. The kind of the policy to attach in this binding. This field must be one of the following: - Left empty (will
	// be automatically set to the policy kind) - The input policy kind Possible values: POLICY_KIND_UNSPECIFIED
	// PRINCIPAL_ACCESS_BOUNDARY ACCESS
	PolicyKind pulumi.StringPtrInput
	// Output only. The globally unique ID of the policy to be bound.
	PolicyUid pulumi.StringPtrInput
	// Target is the full resource name of the resource to which the policy will be bound. Immutable once set.
	// Structure is documented below.
	Target OrganizationsPolicyBindingTargetPtrInput
	// Output only. The globally unique ID of the policy binding. Assigned when the policy binding is created.
	Uid pulumi.StringPtrInput
	// Output only. The time when the policy binding was most recently updated.
	UpdateTime pulumi.StringPtrInput
}

func (OrganizationsPolicyBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationsPolicyBindingState)(nil)).Elem()
}

type organizationsPolicyBindingArgs struct {
	// Optional. User defined annotations. See https://google.aip.dev/148#annotations for more details such as format and size
	// limitations **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The
	// syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary
	// size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() <
	// 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\"
	// expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description:
	// \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type
	// != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string
	// with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and
	// functions that may be referenced within an expression are determined by the service that evaluates it. See the service
	// documentation for additional information.
	Condition *OrganizationsPolicyBindingCondition `pulumi:"condition"`
	// Optional. The description of the policy binding. Must be less than or equal to 63 characters.
	DisplayName *string `pulumi:"displayName"`
	// The location of the Policy Binding
	Location string `pulumi:"location"`
	// The parent organization of the Policy Binding.
	Organization string `pulumi:"organization"`
	// Required. Immutable. The resource name of the policy to be bound. The binding parent and policy must belong to the same Organization (or Project).
	Policy string `pulumi:"policy"`
	// The Policy Binding ID.
	PolicyBindingId string `pulumi:"policyBindingId"`
	// Immutable. The kind of the policy to attach in this binding. This field must be one of the following: - Left empty (will
	// be automatically set to the policy kind) - The input policy kind Possible values: POLICY_KIND_UNSPECIFIED
	// PRINCIPAL_ACCESS_BOUNDARY ACCESS
	PolicyKind *string `pulumi:"policyKind"`
	// Target is the full resource name of the resource to which the policy will be bound. Immutable once set.
	// Structure is documented below.
	Target OrganizationsPolicyBindingTarget `pulumi:"target"`
}

// The set of arguments for constructing a OrganizationsPolicyBinding resource.
type OrganizationsPolicyBindingArgs struct {
	// Optional. User defined annotations. See https://google.aip.dev/148#annotations for more details such as format and size
	// limitations **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The
	// syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary
	// size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() <
	// 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\"
	// expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description:
	// \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type
	// != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string
	// with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and
	// functions that may be referenced within an expression are determined by the service that evaluates it. See the service
	// documentation for additional information.
	Condition OrganizationsPolicyBindingConditionPtrInput
	// Optional. The description of the policy binding. Must be less than or equal to 63 characters.
	DisplayName pulumi.StringPtrInput
	// The location of the Policy Binding
	Location pulumi.StringInput
	// The parent organization of the Policy Binding.
	Organization pulumi.StringInput
	// Required. Immutable. The resource name of the policy to be bound. The binding parent and policy must belong to the same Organization (or Project).
	Policy pulumi.StringInput
	// The Policy Binding ID.
	PolicyBindingId pulumi.StringInput
	// Immutable. The kind of the policy to attach in this binding. This field must be one of the following: - Left empty (will
	// be automatically set to the policy kind) - The input policy kind Possible values: POLICY_KIND_UNSPECIFIED
	// PRINCIPAL_ACCESS_BOUNDARY ACCESS
	PolicyKind pulumi.StringPtrInput
	// Target is the full resource name of the resource to which the policy will be bound. Immutable once set.
	// Structure is documented below.
	Target OrganizationsPolicyBindingTargetInput
}

func (OrganizationsPolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationsPolicyBindingArgs)(nil)).Elem()
}

type OrganizationsPolicyBindingInput interface {
	pulumi.Input

	ToOrganizationsPolicyBindingOutput() OrganizationsPolicyBindingOutput
	ToOrganizationsPolicyBindingOutputWithContext(ctx context.Context) OrganizationsPolicyBindingOutput
}

func (*OrganizationsPolicyBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationsPolicyBinding)(nil)).Elem()
}

func (i *OrganizationsPolicyBinding) ToOrganizationsPolicyBindingOutput() OrganizationsPolicyBindingOutput {
	return i.ToOrganizationsPolicyBindingOutputWithContext(context.Background())
}

func (i *OrganizationsPolicyBinding) ToOrganizationsPolicyBindingOutputWithContext(ctx context.Context) OrganizationsPolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsPolicyBindingOutput)
}

// OrganizationsPolicyBindingArrayInput is an input type that accepts OrganizationsPolicyBindingArray and OrganizationsPolicyBindingArrayOutput values.
// You can construct a concrete instance of `OrganizationsPolicyBindingArrayInput` via:
//
//	OrganizationsPolicyBindingArray{ OrganizationsPolicyBindingArgs{...} }
type OrganizationsPolicyBindingArrayInput interface {
	pulumi.Input

	ToOrganizationsPolicyBindingArrayOutput() OrganizationsPolicyBindingArrayOutput
	ToOrganizationsPolicyBindingArrayOutputWithContext(context.Context) OrganizationsPolicyBindingArrayOutput
}

type OrganizationsPolicyBindingArray []OrganizationsPolicyBindingInput

func (OrganizationsPolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationsPolicyBinding)(nil)).Elem()
}

func (i OrganizationsPolicyBindingArray) ToOrganizationsPolicyBindingArrayOutput() OrganizationsPolicyBindingArrayOutput {
	return i.ToOrganizationsPolicyBindingArrayOutputWithContext(context.Background())
}

func (i OrganizationsPolicyBindingArray) ToOrganizationsPolicyBindingArrayOutputWithContext(ctx context.Context) OrganizationsPolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsPolicyBindingArrayOutput)
}

// OrganizationsPolicyBindingMapInput is an input type that accepts OrganizationsPolicyBindingMap and OrganizationsPolicyBindingMapOutput values.
// You can construct a concrete instance of `OrganizationsPolicyBindingMapInput` via:
//
//	OrganizationsPolicyBindingMap{ "key": OrganizationsPolicyBindingArgs{...} }
type OrganizationsPolicyBindingMapInput interface {
	pulumi.Input

	ToOrganizationsPolicyBindingMapOutput() OrganizationsPolicyBindingMapOutput
	ToOrganizationsPolicyBindingMapOutputWithContext(context.Context) OrganizationsPolicyBindingMapOutput
}

type OrganizationsPolicyBindingMap map[string]OrganizationsPolicyBindingInput

func (OrganizationsPolicyBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationsPolicyBinding)(nil)).Elem()
}

func (i OrganizationsPolicyBindingMap) ToOrganizationsPolicyBindingMapOutput() OrganizationsPolicyBindingMapOutput {
	return i.ToOrganizationsPolicyBindingMapOutputWithContext(context.Background())
}

func (i OrganizationsPolicyBindingMap) ToOrganizationsPolicyBindingMapOutputWithContext(ctx context.Context) OrganizationsPolicyBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsPolicyBindingMapOutput)
}

type OrganizationsPolicyBindingOutput struct{ *pulumi.OutputState }

func (OrganizationsPolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationsPolicyBinding)(nil)).Elem()
}

func (o OrganizationsPolicyBindingOutput) ToOrganizationsPolicyBindingOutput() OrganizationsPolicyBindingOutput {
	return o
}

func (o OrganizationsPolicyBindingOutput) ToOrganizationsPolicyBindingOutputWithContext(ctx context.Context) OrganizationsPolicyBindingOutput {
	return o
}

// Optional. User defined annotations. See https://google.aip.dev/148#annotations for more details such as format and size
// limitations **Note**: This field is non-authoritative, and will only manage the annotations present in your
// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
func (o OrganizationsPolicyBindingOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The
// syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary
// size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() <
// 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\"
// expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description:
// \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type
// != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string
// with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and
// functions that may be referenced within an expression are determined by the service that evaluates it. See the service
// documentation for additional information.
func (o OrganizationsPolicyBindingOutput) Condition() OrganizationsPolicyBindingConditionPtrOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) OrganizationsPolicyBindingConditionPtrOutput { return v.Condition }).(OrganizationsPolicyBindingConditionPtrOutput)
}

// Output only. The time when the policy binding was created.
func (o OrganizationsPolicyBindingOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. The description of the policy binding. Must be less than or equal to 63 characters.
func (o OrganizationsPolicyBindingOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o OrganizationsPolicyBindingOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

// Optional. The etag for the policy binding. If this is provided on update, it must match the server's etag.
func (o OrganizationsPolicyBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The location of the Policy Binding
func (o OrganizationsPolicyBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the policy binding in the format `{binding_parent/locations/{location}/policyBindings/{policy_binding_id}`
func (o OrganizationsPolicyBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parent organization of the Policy Binding.
func (o OrganizationsPolicyBindingOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

// Required. Immutable. The resource name of the policy to be bound. The binding parent and policy must belong to the same Organization (or Project).
func (o OrganizationsPolicyBindingOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

// The Policy Binding ID.
func (o OrganizationsPolicyBindingOutput) PolicyBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.PolicyBindingId }).(pulumi.StringOutput)
}

// Immutable. The kind of the policy to attach in this binding. This field must be one of the following: - Left empty (will
// be automatically set to the policy kind) - The input policy kind Possible values: POLICY_KIND_UNSPECIFIED
// PRINCIPAL_ACCESS_BOUNDARY ACCESS
func (o OrganizationsPolicyBindingOutput) PolicyKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringPtrOutput { return v.PolicyKind }).(pulumi.StringPtrOutput)
}

// Output only. The globally unique ID of the policy to be bound.
func (o OrganizationsPolicyBindingOutput) PolicyUid() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.PolicyUid }).(pulumi.StringOutput)
}

// Target is the full resource name of the resource to which the policy will be bound. Immutable once set.
// Structure is documented below.
func (o OrganizationsPolicyBindingOutput) Target() OrganizationsPolicyBindingTargetOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) OrganizationsPolicyBindingTargetOutput { return v.Target }).(OrganizationsPolicyBindingTargetOutput)
}

// Output only. The globally unique ID of the policy binding. Assigned when the policy binding is created.
func (o OrganizationsPolicyBindingOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. The time when the policy binding was most recently updated.
func (o OrganizationsPolicyBindingOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationsPolicyBinding) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type OrganizationsPolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (OrganizationsPolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationsPolicyBinding)(nil)).Elem()
}

func (o OrganizationsPolicyBindingArrayOutput) ToOrganizationsPolicyBindingArrayOutput() OrganizationsPolicyBindingArrayOutput {
	return o
}

func (o OrganizationsPolicyBindingArrayOutput) ToOrganizationsPolicyBindingArrayOutputWithContext(ctx context.Context) OrganizationsPolicyBindingArrayOutput {
	return o
}

func (o OrganizationsPolicyBindingArrayOutput) Index(i pulumi.IntInput) OrganizationsPolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationsPolicyBinding {
		return vs[0].([]*OrganizationsPolicyBinding)[vs[1].(int)]
	}).(OrganizationsPolicyBindingOutput)
}

type OrganizationsPolicyBindingMapOutput struct{ *pulumi.OutputState }

func (OrganizationsPolicyBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationsPolicyBinding)(nil)).Elem()
}

func (o OrganizationsPolicyBindingMapOutput) ToOrganizationsPolicyBindingMapOutput() OrganizationsPolicyBindingMapOutput {
	return o
}

func (o OrganizationsPolicyBindingMapOutput) ToOrganizationsPolicyBindingMapOutputWithContext(ctx context.Context) OrganizationsPolicyBindingMapOutput {
	return o
}

func (o OrganizationsPolicyBindingMapOutput) MapIndex(k pulumi.StringInput) OrganizationsPolicyBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationsPolicyBinding {
		return vs[0].(map[string]*OrganizationsPolicyBinding)[vs[1].(string)]
	}).(OrganizationsPolicyBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationsPolicyBindingInput)(nil)).Elem(), &OrganizationsPolicyBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationsPolicyBindingArrayInput)(nil)).Elem(), OrganizationsPolicyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationsPolicyBindingMapInput)(nil)).Elem(), OrganizationsPolicyBindingMap{})
	pulumi.RegisterOutputType(OrganizationsPolicyBindingOutput{})
	pulumi.RegisterOutputType(OrganizationsPolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(OrganizationsPolicyBindingMapOutput{})
}
