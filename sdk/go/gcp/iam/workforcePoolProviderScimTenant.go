// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a SCIM tenant configuration for a Workforce Pool Provider.
// The SCIM tenant configuration allows for the synchronization of user/group identities from external identity provider into Google Cloud using the System for Cross-domain Identity Management (SCIM) protocol.
//
// To get more information about WorkforcePoolProviderScimTenant, see:
//
// * [API documentation](https://cloud.google.com/sdk/gcloud/reference/iam/workforce-pools/providers/scim-tenants)
// * How-to Guides
//   - [QUICKSTART_TITLE](https://cloud.google.com/iam/docs/workforce-sign-in-microsoft-entra-id-scalable-groups?group_type=extended#extended-attributes)
//
// ## Example Usage
//
// ### Iam Workforce Pool Provider Scim Tenant Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			pool, err := iam.NewWorkforcePool(ctx, "pool", &iam.WorkforcePoolArgs{
//				WorkforcePoolId: pulumi.String("example-pool"),
//				Parent:          pulumi.String("organizations/123456789"),
//				Location:        pulumi.String("global"),
//			})
//			if err != nil {
//				return err
//			}
//			provider, err := iam.NewWorkforcePoolProvider(ctx, "provider", &iam.WorkforcePoolProviderArgs{
//				Location:        pulumi.String("global"),
//				WorkforcePoolId: pool.WorkforcePoolId,
//				ProviderId:      pulumi.String("example-prvdr"),
//				AttributeMapping: pulumi.StringMap{
//					"google.subject": pulumi.String("assertion.sub"),
//				},
//				Oidc: &iam.WorkforcePoolProviderOidcArgs{
//					IssuerUri: pulumi.String("https://accounts.thirdparty.com"),
//					ClientId:  pulumi.String("client-id"),
//					ClientSecret: &iam.WorkforcePoolProviderOidcClientSecretArgs{
//						Value: &iam.WorkforcePoolProviderOidcClientSecretValueArgs{
//							PlainText: pulumi.String("client-secret"),
//						},
//					},
//					WebSsoConfig: &iam.WorkforcePoolProviderOidcWebSsoConfigArgs{
//						ResponseType:            pulumi.String("CODE"),
//						AssertionClaimsBehavior: pulumi.String("MERGE_USER_INFO_OVER_ID_TOKEN_CLAIMS"),
//						AdditionalScopes: pulumi.StringArray{
//							pulumi.String("groups"),
//							pulumi.String("roles"),
//						},
//					},
//				},
//				DisplayName:        pulumi.String("Display name"),
//				Description:        pulumi.String("A sample OIDC workforce pool provider."),
//				Disabled:           pulumi.Bool(false),
//				AttributeCondition: pulumi.String("true"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewWorkforcePoolProviderScimTenant(ctx, "example", &iam.WorkforcePoolProviderScimTenantArgs{
//				Location:        pulumi.String("global"),
//				WorkforcePoolId: pool.WorkforcePoolId,
//				ProviderId:      provider.ProviderId,
//				ScimTenantId:    pulumi.String("example-scim-tenant"),
//				DisplayName:     pulumi.String("Example SCIM Tenant"),
//				Description:     pulumi.String("A basic SCIM tenant for IAM Workforce Pool Provider"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WorkforcePoolProviderScimTenant can be imported using any of these accepted formats:
//
// * `locations/{{location}}/workforcePools/{{workforce_pool_id}}/providers/{{provider_id}}/scimTenants/{{scim_tenant_id}}`
//
// * `{{location}}/{{workforce_pool_id}}/{{provider_id}}/{{scim_tenant_id}}`
//
// When using the `pulumi import` command, WorkforcePoolProviderScimTenant can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:iam/workforcePoolProviderScimTenant:WorkforcePoolProviderScimTenant default locations/{{location}}/workforcePools/{{workforce_pool_id}}/providers/{{provider_id}}/scimTenants/{{scim_tenant_id}}
// ```
//
// ```sh
// $ pulumi import gcp:iam/workforcePoolProviderScimTenant:WorkforcePoolProviderScimTenant default {{location}}/{{workforce_pool_id}}/{{provider_id}}/{{scim_tenant_id}}
// ```
type WorkforcePoolProviderScimTenant struct {
	pulumi.CustomResourceState

	// Represents the base URI as defined in [RFC 7644, Section
	// 1.3](https://datatracker.ietf.org/doc/html/rfc7644#section-1.3). Clients
	// must use this as the root address for managing resources under the tenant.
	// Format:
	// https://iamscim.googleapis.com/{version}/{tenant_id}/
	BaseUri pulumi.StringOutput `pulumi:"baseUri"`
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A user-specified display name for the scim tenant. Cannot exceed 32 characters.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The location for the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The resource name of the scim tenant.
	// Format: `locations/{location}/workforcePools/{workforce_pool}/providers/{workforce_pool_provider}/scimTenants/{scim_tenant_id}
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the provider.
	ProviderId pulumi.StringOutput `pulumi:"providerId"`
	// The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
	ScimTenantId pulumi.StringOutput `pulumi:"scimTenantId"`
	// The current state of the scim tenant.
	// * STATE_UNSPECIFIED: State unspecified.
	// * ACTIVE: The scim tenant is active and may be used to validate authentication credentials.
	// * DELETED: The scim tenant is soft-deleted. Soft-deleted scim tenants are permanently
	//   deleted after approximately 30 days.
	State pulumi.StringOutput `pulumi:"state"`
	// The ID of the workforce pool.
	WorkforcePoolId pulumi.StringOutput `pulumi:"workforcePoolId"`
}

// NewWorkforcePoolProviderScimTenant registers a new resource with the given unique name, arguments, and options.
func NewWorkforcePoolProviderScimTenant(ctx *pulumi.Context,
	name string, args *WorkforcePoolProviderScimTenantArgs, opts ...pulumi.ResourceOption) (*WorkforcePoolProviderScimTenant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.ProviderId == nil {
		return nil, errors.New("invalid value for required argument 'ProviderId'")
	}
	if args.ScimTenantId == nil {
		return nil, errors.New("invalid value for required argument 'ScimTenantId'")
	}
	if args.WorkforcePoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkforcePoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkforcePoolProviderScimTenant
	err := ctx.RegisterResource("gcp:iam/workforcePoolProviderScimTenant:WorkforcePoolProviderScimTenant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkforcePoolProviderScimTenant gets an existing WorkforcePoolProviderScimTenant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkforcePoolProviderScimTenant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkforcePoolProviderScimTenantState, opts ...pulumi.ResourceOption) (*WorkforcePoolProviderScimTenant, error) {
	var resource WorkforcePoolProviderScimTenant
	err := ctx.ReadResource("gcp:iam/workforcePoolProviderScimTenant:WorkforcePoolProviderScimTenant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkforcePoolProviderScimTenant resources.
type workforcePoolProviderScimTenantState struct {
	// Represents the base URI as defined in [RFC 7644, Section
	// 1.3](https://datatracker.ietf.org/doc/html/rfc7644#section-1.3). Clients
	// must use this as the root address for managing resources under the tenant.
	// Format:
	// https://iamscim.googleapis.com/{version}/{tenant_id}/
	BaseUri *string `pulumi:"baseUri"`
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description *string `pulumi:"description"`
	// A user-specified display name for the scim tenant. Cannot exceed 32 characters.
	DisplayName *string `pulumi:"displayName"`
	// The location for the resource.
	Location *string `pulumi:"location"`
	// Identifier. The resource name of the scim tenant.
	// Format: `locations/{location}/workforcePools/{workforce_pool}/providers/{workforce_pool_provider}/scimTenants/{scim_tenant_id}
	Name *string `pulumi:"name"`
	// The ID of the provider.
	ProviderId *string `pulumi:"providerId"`
	// The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
	ScimTenantId *string `pulumi:"scimTenantId"`
	// The current state of the scim tenant.
	// * STATE_UNSPECIFIED: State unspecified.
	// * ACTIVE: The scim tenant is active and may be used to validate authentication credentials.
	// * DELETED: The scim tenant is soft-deleted. Soft-deleted scim tenants are permanently
	//   deleted after approximately 30 days.
	State *string `pulumi:"state"`
	// The ID of the workforce pool.
	WorkforcePoolId *string `pulumi:"workforcePoolId"`
}

type WorkforcePoolProviderScimTenantState struct {
	// Represents the base URI as defined in [RFC 7644, Section
	// 1.3](https://datatracker.ietf.org/doc/html/rfc7644#section-1.3). Clients
	// must use this as the root address for managing resources under the tenant.
	// Format:
	// https://iamscim.googleapis.com/{version}/{tenant_id}/
	BaseUri pulumi.StringPtrInput
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description pulumi.StringPtrInput
	// A user-specified display name for the scim tenant. Cannot exceed 32 characters.
	DisplayName pulumi.StringPtrInput
	// The location for the resource.
	Location pulumi.StringPtrInput
	// Identifier. The resource name of the scim tenant.
	// Format: `locations/{location}/workforcePools/{workforce_pool}/providers/{workforce_pool_provider}/scimTenants/{scim_tenant_id}
	Name pulumi.StringPtrInput
	// The ID of the provider.
	ProviderId pulumi.StringPtrInput
	// The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
	ScimTenantId pulumi.StringPtrInput
	// The current state of the scim tenant.
	// * STATE_UNSPECIFIED: State unspecified.
	// * ACTIVE: The scim tenant is active and may be used to validate authentication credentials.
	// * DELETED: The scim tenant is soft-deleted. Soft-deleted scim tenants are permanently
	//   deleted after approximately 30 days.
	State pulumi.StringPtrInput
	// The ID of the workforce pool.
	WorkforcePoolId pulumi.StringPtrInput
}

func (WorkforcePoolProviderScimTenantState) ElementType() reflect.Type {
	return reflect.TypeOf((*workforcePoolProviderScimTenantState)(nil)).Elem()
}

type workforcePoolProviderScimTenantArgs struct {
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description *string `pulumi:"description"`
	// A user-specified display name for the scim tenant. Cannot exceed 32 characters.
	DisplayName *string `pulumi:"displayName"`
	// The location for the resource.
	Location string `pulumi:"location"`
	// The ID of the provider.
	ProviderId string `pulumi:"providerId"`
	// The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
	ScimTenantId string `pulumi:"scimTenantId"`
	// The ID of the workforce pool.
	WorkforcePoolId string `pulumi:"workforcePoolId"`
}

// The set of arguments for constructing a WorkforcePoolProviderScimTenant resource.
type WorkforcePoolProviderScimTenantArgs struct {
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description pulumi.StringPtrInput
	// A user-specified display name for the scim tenant. Cannot exceed 32 characters.
	DisplayName pulumi.StringPtrInput
	// The location for the resource.
	Location pulumi.StringInput
	// The ID of the provider.
	ProviderId pulumi.StringInput
	// The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
	ScimTenantId pulumi.StringInput
	// The ID of the workforce pool.
	WorkforcePoolId pulumi.StringInput
}

func (WorkforcePoolProviderScimTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workforcePoolProviderScimTenantArgs)(nil)).Elem()
}

type WorkforcePoolProviderScimTenantInput interface {
	pulumi.Input

	ToWorkforcePoolProviderScimTenantOutput() WorkforcePoolProviderScimTenantOutput
	ToWorkforcePoolProviderScimTenantOutputWithContext(ctx context.Context) WorkforcePoolProviderScimTenantOutput
}

func (*WorkforcePoolProviderScimTenant) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkforcePoolProviderScimTenant)(nil)).Elem()
}

func (i *WorkforcePoolProviderScimTenant) ToWorkforcePoolProviderScimTenantOutput() WorkforcePoolProviderScimTenantOutput {
	return i.ToWorkforcePoolProviderScimTenantOutputWithContext(context.Background())
}

func (i *WorkforcePoolProviderScimTenant) ToWorkforcePoolProviderScimTenantOutputWithContext(ctx context.Context) WorkforcePoolProviderScimTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforcePoolProviderScimTenantOutput)
}

// WorkforcePoolProviderScimTenantArrayInput is an input type that accepts WorkforcePoolProviderScimTenantArray and WorkforcePoolProviderScimTenantArrayOutput values.
// You can construct a concrete instance of `WorkforcePoolProviderScimTenantArrayInput` via:
//
//	WorkforcePoolProviderScimTenantArray{ WorkforcePoolProviderScimTenantArgs{...} }
type WorkforcePoolProviderScimTenantArrayInput interface {
	pulumi.Input

	ToWorkforcePoolProviderScimTenantArrayOutput() WorkforcePoolProviderScimTenantArrayOutput
	ToWorkforcePoolProviderScimTenantArrayOutputWithContext(context.Context) WorkforcePoolProviderScimTenantArrayOutput
}

type WorkforcePoolProviderScimTenantArray []WorkforcePoolProviderScimTenantInput

func (WorkforcePoolProviderScimTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkforcePoolProviderScimTenant)(nil)).Elem()
}

func (i WorkforcePoolProviderScimTenantArray) ToWorkforcePoolProviderScimTenantArrayOutput() WorkforcePoolProviderScimTenantArrayOutput {
	return i.ToWorkforcePoolProviderScimTenantArrayOutputWithContext(context.Background())
}

func (i WorkforcePoolProviderScimTenantArray) ToWorkforcePoolProviderScimTenantArrayOutputWithContext(ctx context.Context) WorkforcePoolProviderScimTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforcePoolProviderScimTenantArrayOutput)
}

// WorkforcePoolProviderScimTenantMapInput is an input type that accepts WorkforcePoolProviderScimTenantMap and WorkforcePoolProviderScimTenantMapOutput values.
// You can construct a concrete instance of `WorkforcePoolProviderScimTenantMapInput` via:
//
//	WorkforcePoolProviderScimTenantMap{ "key": WorkforcePoolProviderScimTenantArgs{...} }
type WorkforcePoolProviderScimTenantMapInput interface {
	pulumi.Input

	ToWorkforcePoolProviderScimTenantMapOutput() WorkforcePoolProviderScimTenantMapOutput
	ToWorkforcePoolProviderScimTenantMapOutputWithContext(context.Context) WorkforcePoolProviderScimTenantMapOutput
}

type WorkforcePoolProviderScimTenantMap map[string]WorkforcePoolProviderScimTenantInput

func (WorkforcePoolProviderScimTenantMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkforcePoolProviderScimTenant)(nil)).Elem()
}

func (i WorkforcePoolProviderScimTenantMap) ToWorkforcePoolProviderScimTenantMapOutput() WorkforcePoolProviderScimTenantMapOutput {
	return i.ToWorkforcePoolProviderScimTenantMapOutputWithContext(context.Background())
}

func (i WorkforcePoolProviderScimTenantMap) ToWorkforcePoolProviderScimTenantMapOutputWithContext(ctx context.Context) WorkforcePoolProviderScimTenantMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforcePoolProviderScimTenantMapOutput)
}

type WorkforcePoolProviderScimTenantOutput struct{ *pulumi.OutputState }

func (WorkforcePoolProviderScimTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkforcePoolProviderScimTenant)(nil)).Elem()
}

func (o WorkforcePoolProviderScimTenantOutput) ToWorkforcePoolProviderScimTenantOutput() WorkforcePoolProviderScimTenantOutput {
	return o
}

func (o WorkforcePoolProviderScimTenantOutput) ToWorkforcePoolProviderScimTenantOutputWithContext(ctx context.Context) WorkforcePoolProviderScimTenantOutput {
	return o
}

// Represents the base URI as defined in [RFC 7644, Section
// 1.3](https://datatracker.ietf.org/doc/html/rfc7644#section-1.3). Clients
// must use this as the root address for managing resources under the tenant.
// Format:
// https://iamscim.googleapis.com/{version}/{tenant_id}/
func (o WorkforcePoolProviderScimTenantOutput) BaseUri() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolProviderScimTenant) pulumi.StringOutput { return v.BaseUri }).(pulumi.StringOutput)
}

// A user-specified description of the provider. Cannot exceed 256 characters.
func (o WorkforcePoolProviderScimTenantOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkforcePoolProviderScimTenant) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A user-specified display name for the scim tenant. Cannot exceed 32 characters.
func (o WorkforcePoolProviderScimTenantOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkforcePoolProviderScimTenant) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The location for the resource.
func (o WorkforcePoolProviderScimTenantOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolProviderScimTenant) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The resource name of the scim tenant.
// Format: `locations/{location}/workforcePools/{workforce_pool}/providers/{workforce_pool_provider}/scimTenants/{scim_tenant_id}
func (o WorkforcePoolProviderScimTenantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolProviderScimTenant) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the provider.
func (o WorkforcePoolProviderScimTenantOutput) ProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolProviderScimTenant) pulumi.StringOutput { return v.ProviderId }).(pulumi.StringOutput)
}

// The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
func (o WorkforcePoolProviderScimTenantOutput) ScimTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolProviderScimTenant) pulumi.StringOutput { return v.ScimTenantId }).(pulumi.StringOutput)
}

// The current state of the scim tenant.
//   - STATE_UNSPECIFIED: State unspecified.
//   - ACTIVE: The scim tenant is active and may be used to validate authentication credentials.
//   - DELETED: The scim tenant is soft-deleted. Soft-deleted scim tenants are permanently
//     deleted after approximately 30 days.
func (o WorkforcePoolProviderScimTenantOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolProviderScimTenant) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The ID of the workforce pool.
func (o WorkforcePoolProviderScimTenantOutput) WorkforcePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolProviderScimTenant) pulumi.StringOutput { return v.WorkforcePoolId }).(pulumi.StringOutput)
}

type WorkforcePoolProviderScimTenantArrayOutput struct{ *pulumi.OutputState }

func (WorkforcePoolProviderScimTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkforcePoolProviderScimTenant)(nil)).Elem()
}

func (o WorkforcePoolProviderScimTenantArrayOutput) ToWorkforcePoolProviderScimTenantArrayOutput() WorkforcePoolProviderScimTenantArrayOutput {
	return o
}

func (o WorkforcePoolProviderScimTenantArrayOutput) ToWorkforcePoolProviderScimTenantArrayOutputWithContext(ctx context.Context) WorkforcePoolProviderScimTenantArrayOutput {
	return o
}

func (o WorkforcePoolProviderScimTenantArrayOutput) Index(i pulumi.IntInput) WorkforcePoolProviderScimTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkforcePoolProviderScimTenant {
		return vs[0].([]*WorkforcePoolProviderScimTenant)[vs[1].(int)]
	}).(WorkforcePoolProviderScimTenantOutput)
}

type WorkforcePoolProviderScimTenantMapOutput struct{ *pulumi.OutputState }

func (WorkforcePoolProviderScimTenantMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkforcePoolProviderScimTenant)(nil)).Elem()
}

func (o WorkforcePoolProviderScimTenantMapOutput) ToWorkforcePoolProviderScimTenantMapOutput() WorkforcePoolProviderScimTenantMapOutput {
	return o
}

func (o WorkforcePoolProviderScimTenantMapOutput) ToWorkforcePoolProviderScimTenantMapOutputWithContext(ctx context.Context) WorkforcePoolProviderScimTenantMapOutput {
	return o
}

func (o WorkforcePoolProviderScimTenantMapOutput) MapIndex(k pulumi.StringInput) WorkforcePoolProviderScimTenantOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkforcePoolProviderScimTenant {
		return vs[0].(map[string]*WorkforcePoolProviderScimTenant)[vs[1].(string)]
	}).(WorkforcePoolProviderScimTenantOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkforcePoolProviderScimTenantInput)(nil)).Elem(), &WorkforcePoolProviderScimTenant{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkforcePoolProviderScimTenantArrayInput)(nil)).Elem(), WorkforcePoolProviderScimTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkforcePoolProviderScimTenantMapInput)(nil)).Elem(), WorkforcePoolProviderScimTenantMap{})
	pulumi.RegisterOutputType(WorkforcePoolProviderScimTenantOutput{})
	pulumi.RegisterOutputType(WorkforcePoolProviderScimTenantArrayOutput{})
	pulumi.RegisterOutputType(WorkforcePoolProviderScimTenantMapOutput{})
}
