// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a managed identity for a workload identity pool namespace.
//
// To get more information about WorkloadIdentityPoolManagedIdentity, see:
//
// * [API documentation](https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.namespaces.managedIdentities)
// * How-to Guides
//   - [Configure managed workload identity authentication for Compute Engine](https://cloud.google.com/iam/docs/create-managed-workload-identities)
//   - [Configure managed workload identity authentication for GKE](https://cloud.google.com/iam/docs/create-managed-workload-identities-gke)
//
// ## Example Usage
//
// ### Iam Workload Identity Pool Managed Identity Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			pool, err := iam.NewWorkloadIdentityPool(ctx, "pool", &iam.WorkloadIdentityPoolArgs{
//				WorkloadIdentityPoolId: pulumi.String("example-pool"),
//				Mode:                   pulumi.String("TRUST_DOMAIN"),
//			})
//			if err != nil {
//				return err
//			}
//			ns, err := iam.NewWorkloadIdentityPoolNamespace(ctx, "ns", &iam.WorkloadIdentityPoolNamespaceArgs{
//				WorkloadIdentityPoolId:          pool.WorkloadIdentityPoolId,
//				WorkloadIdentityPoolNamespaceId: pulumi.String("example-namespace"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewWorkloadIdentityPoolManagedIdentity(ctx, "example", &iam.WorkloadIdentityPoolManagedIdentityArgs{
//				WorkloadIdentityPoolId:                pool.WorkloadIdentityPoolId,
//				WorkloadIdentityPoolNamespaceId:       ns.WorkloadIdentityPoolNamespaceId,
//				WorkloadIdentityPoolManagedIdentityId: pulumi.String("example-managed-identity"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Iam Workload Identity Pool Managed Identity Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			pool, err := iam.NewWorkloadIdentityPool(ctx, "pool", &iam.WorkloadIdentityPoolArgs{
//				WorkloadIdentityPoolId: pulumi.String("example-pool"),
//				Mode:                   pulumi.String("TRUST_DOMAIN"),
//			})
//			if err != nil {
//				return err
//			}
//			ns, err := iam.NewWorkloadIdentityPoolNamespace(ctx, "ns", &iam.WorkloadIdentityPoolNamespaceArgs{
//				WorkloadIdentityPoolId:          pool.WorkloadIdentityPoolId,
//				WorkloadIdentityPoolNamespaceId: pulumi.String("example-namespace"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewWorkloadIdentityPoolManagedIdentity(ctx, "example", &iam.WorkloadIdentityPoolManagedIdentityArgs{
//				WorkloadIdentityPoolId:                pool.WorkloadIdentityPoolId,
//				WorkloadIdentityPoolNamespaceId:       ns.WorkloadIdentityPoolNamespaceId,
//				WorkloadIdentityPoolManagedIdentityId: pulumi.String("example-managed-identity"),
//				Description:                           pulumi.String("Example Managed Identity in a Workload Identity Pool Namespace"),
//				Disabled:                              pulumi.Bool(true),
//				AttestationRules: iam.WorkloadIdentityPoolManagedIdentityAttestationRuleArray{
//					&iam.WorkloadIdentityPoolManagedIdentityAttestationRuleArgs{
//						GoogleCloudResource: pulumi.String("//compute.googleapis.com/projects/1111111111111/uid/zones/us-central1-a/instances/12345678"),
//					},
//					&iam.WorkloadIdentityPoolManagedIdentityAttestationRuleArgs{
//						GoogleCloudResource: pulumi.String("//run.googleapis.com/projects/1111111111111/name/locations/us-east1/services/my-service"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WorkloadIdentityPoolManagedIdentity can be imported using any of these accepted formats:
//
// * `projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/namespaces/{{workload_identity_pool_namespace_id}}/managedIdentities/{{workload_identity_pool_managed_identity_id}}`
//
// * `{{project}}/{{workload_identity_pool_id}}/{{workload_identity_pool_namespace_id}}/{{workload_identity_pool_managed_identity_id}}`
//
// * `{{workload_identity_pool_id}}/{{workload_identity_pool_namespace_id}}/{{workload_identity_pool_managed_identity_id}}`
//
// When using the `pulumi import` command, WorkloadIdentityPoolManagedIdentity can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolManagedIdentity:WorkloadIdentityPoolManagedIdentity default projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/namespaces/{{workload_identity_pool_namespace_id}}/managedIdentities/{{workload_identity_pool_managed_identity_id}}
// ```
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolManagedIdentity:WorkloadIdentityPoolManagedIdentity default {{project}}/{{workload_identity_pool_id}}/{{workload_identity_pool_namespace_id}}/{{workload_identity_pool_managed_identity_id}}
// ```
//
// ```sh
// $ pulumi import gcp:iam/workloadIdentityPoolManagedIdentity:WorkloadIdentityPoolManagedIdentity default {{workload_identity_pool_id}}/{{workload_identity_pool_namespace_id}}/{{workload_identity_pool_managed_identity_id}}
// ```
type WorkloadIdentityPoolManagedIdentity struct {
	pulumi.CustomResourceState

	// Defines which workloads can receive an identity within a pool. When an AttestationRule is
	// defined under a managed identity, matching workloads may receive that identity. A maximum of
	// 50 AttestationRules can be set.
	// Structure is documented below.
	AttestationRules WorkloadIdentityPoolManagedIdentityAttestationRuleArrayOutput `pulumi:"attestationRules"`
	// A description of the managed identity. Cannot exceed 256 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether the managed identity is disabled. If disabled, credentials may no longer be issued for
	// the identity, however existing credentials will still be accepted until they expire.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// The resource name of the managed identity as
	// `projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/namespaces/{workload_identity_pool_namespace_id}/managedIdentities/{workload_identity_pool_managed_identity_id}`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The current state of the managed identity.
	// * `ACTIVE`: The managed identity is active.
	// * `DELETED`: The managed identity is soft-deleted. Soft-deleted managed identities are
	//   permanently deleted after approximately 30 days. You can restore a soft-deleted managed
	//   identity using UndeleteWorkloadIdentityPoolManagedIdentity. You cannot reuse the ID of a
	//   soft-deleted managed identity until it is permanently deleted.
	State pulumi.StringOutput `pulumi:"state"`
	// The ID to use for the pool, which becomes the final component of the resource name. This
	// value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
	// `gcp-` is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId pulumi.StringOutput `pulumi:"workloadIdentityPoolId"`
	// The ID to use for the managed identity. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolManagedIdentityId pulumi.StringOutput `pulumi:"workloadIdentityPoolManagedIdentityId"`
	// The ID to use for the namespace. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolNamespaceId pulumi.StringOutput `pulumi:"workloadIdentityPoolNamespaceId"`
}

// NewWorkloadIdentityPoolManagedIdentity registers a new resource with the given unique name, arguments, and options.
func NewWorkloadIdentityPoolManagedIdentity(ctx *pulumi.Context,
	name string, args *WorkloadIdentityPoolManagedIdentityArgs, opts ...pulumi.ResourceOption) (*WorkloadIdentityPoolManagedIdentity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WorkloadIdentityPoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadIdentityPoolId'")
	}
	if args.WorkloadIdentityPoolManagedIdentityId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadIdentityPoolManagedIdentityId'")
	}
	if args.WorkloadIdentityPoolNamespaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadIdentityPoolNamespaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkloadIdentityPoolManagedIdentity
	err := ctx.RegisterResource("gcp:iam/workloadIdentityPoolManagedIdentity:WorkloadIdentityPoolManagedIdentity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadIdentityPoolManagedIdentity gets an existing WorkloadIdentityPoolManagedIdentity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadIdentityPoolManagedIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadIdentityPoolManagedIdentityState, opts ...pulumi.ResourceOption) (*WorkloadIdentityPoolManagedIdentity, error) {
	var resource WorkloadIdentityPoolManagedIdentity
	err := ctx.ReadResource("gcp:iam/workloadIdentityPoolManagedIdentity:WorkloadIdentityPoolManagedIdentity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadIdentityPoolManagedIdentity resources.
type workloadIdentityPoolManagedIdentityState struct {
	// Defines which workloads can receive an identity within a pool. When an AttestationRule is
	// defined under a managed identity, matching workloads may receive that identity. A maximum of
	// 50 AttestationRules can be set.
	// Structure is documented below.
	AttestationRules []WorkloadIdentityPoolManagedIdentityAttestationRule `pulumi:"attestationRules"`
	// A description of the managed identity. Cannot exceed 256 characters.
	Description *string `pulumi:"description"`
	// Whether the managed identity is disabled. If disabled, credentials may no longer be issued for
	// the identity, however existing credentials will still be accepted until they expire.
	Disabled *bool `pulumi:"disabled"`
	// The resource name of the managed identity as
	// `projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/namespaces/{workload_identity_pool_namespace_id}/managedIdentities/{workload_identity_pool_managed_identity_id}`.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The current state of the managed identity.
	// * `ACTIVE`: The managed identity is active.
	// * `DELETED`: The managed identity is soft-deleted. Soft-deleted managed identities are
	//   permanently deleted after approximately 30 days. You can restore a soft-deleted managed
	//   identity using UndeleteWorkloadIdentityPoolManagedIdentity. You cannot reuse the ID of a
	//   soft-deleted managed identity until it is permanently deleted.
	State *string `pulumi:"state"`
	// The ID to use for the pool, which becomes the final component of the resource name. This
	// value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
	// `gcp-` is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId *string `pulumi:"workloadIdentityPoolId"`
	// The ID to use for the managed identity. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolManagedIdentityId *string `pulumi:"workloadIdentityPoolManagedIdentityId"`
	// The ID to use for the namespace. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolNamespaceId *string `pulumi:"workloadIdentityPoolNamespaceId"`
}

type WorkloadIdentityPoolManagedIdentityState struct {
	// Defines which workloads can receive an identity within a pool. When an AttestationRule is
	// defined under a managed identity, matching workloads may receive that identity. A maximum of
	// 50 AttestationRules can be set.
	// Structure is documented below.
	AttestationRules WorkloadIdentityPoolManagedIdentityAttestationRuleArrayInput
	// A description of the managed identity. Cannot exceed 256 characters.
	Description pulumi.StringPtrInput
	// Whether the managed identity is disabled. If disabled, credentials may no longer be issued for
	// the identity, however existing credentials will still be accepted until they expire.
	Disabled pulumi.BoolPtrInput
	// The resource name of the managed identity as
	// `projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/namespaces/{workload_identity_pool_namespace_id}/managedIdentities/{workload_identity_pool_managed_identity_id}`.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The current state of the managed identity.
	// * `ACTIVE`: The managed identity is active.
	// * `DELETED`: The managed identity is soft-deleted. Soft-deleted managed identities are
	//   permanently deleted after approximately 30 days. You can restore a soft-deleted managed
	//   identity using UndeleteWorkloadIdentityPoolManagedIdentity. You cannot reuse the ID of a
	//   soft-deleted managed identity until it is permanently deleted.
	State pulumi.StringPtrInput
	// The ID to use for the pool, which becomes the final component of the resource name. This
	// value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
	// `gcp-` is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId pulumi.StringPtrInput
	// The ID to use for the managed identity. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolManagedIdentityId pulumi.StringPtrInput
	// The ID to use for the namespace. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolNamespaceId pulumi.StringPtrInput
}

func (WorkloadIdentityPoolManagedIdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolManagedIdentityState)(nil)).Elem()
}

type workloadIdentityPoolManagedIdentityArgs struct {
	// Defines which workloads can receive an identity within a pool. When an AttestationRule is
	// defined under a managed identity, matching workloads may receive that identity. A maximum of
	// 50 AttestationRules can be set.
	// Structure is documented below.
	AttestationRules []WorkloadIdentityPoolManagedIdentityAttestationRule `pulumi:"attestationRules"`
	// A description of the managed identity. Cannot exceed 256 characters.
	Description *string `pulumi:"description"`
	// Whether the managed identity is disabled. If disabled, credentials may no longer be issued for
	// the identity, however existing credentials will still be accepted until they expire.
	Disabled *bool `pulumi:"disabled"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The ID to use for the pool, which becomes the final component of the resource name. This
	// value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
	// `gcp-` is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId string `pulumi:"workloadIdentityPoolId"`
	// The ID to use for the managed identity. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolManagedIdentityId string `pulumi:"workloadIdentityPoolManagedIdentityId"`
	// The ID to use for the namespace. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolNamespaceId string `pulumi:"workloadIdentityPoolNamespaceId"`
}

// The set of arguments for constructing a WorkloadIdentityPoolManagedIdentity resource.
type WorkloadIdentityPoolManagedIdentityArgs struct {
	// Defines which workloads can receive an identity within a pool. When an AttestationRule is
	// defined under a managed identity, matching workloads may receive that identity. A maximum of
	// 50 AttestationRules can be set.
	// Structure is documented below.
	AttestationRules WorkloadIdentityPoolManagedIdentityAttestationRuleArrayInput
	// A description of the managed identity. Cannot exceed 256 characters.
	Description pulumi.StringPtrInput
	// Whether the managed identity is disabled. If disabled, credentials may no longer be issued for
	// the identity, however existing credentials will still be accepted until they expire.
	Disabled pulumi.BoolPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The ID to use for the pool, which becomes the final component of the resource name. This
	// value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
	// `gcp-` is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId pulumi.StringInput
	// The ID to use for the managed identity. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolManagedIdentityId pulumi.StringInput
	// The ID to use for the namespace. This value must:
	// * contain at most 63 characters
	// * contain only lowercase alphanumeric characters or `-`
	// * start with an alphanumeric character
	// * end with an alphanumeric character
	//
	// The prefix `gcp-` will be reserved for future uses.
	WorkloadIdentityPoolNamespaceId pulumi.StringInput
}

func (WorkloadIdentityPoolManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolManagedIdentityArgs)(nil)).Elem()
}

type WorkloadIdentityPoolManagedIdentityInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolManagedIdentityOutput() WorkloadIdentityPoolManagedIdentityOutput
	ToWorkloadIdentityPoolManagedIdentityOutputWithContext(ctx context.Context) WorkloadIdentityPoolManagedIdentityOutput
}

func (*WorkloadIdentityPoolManagedIdentity) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPoolManagedIdentity)(nil)).Elem()
}

func (i *WorkloadIdentityPoolManagedIdentity) ToWorkloadIdentityPoolManagedIdentityOutput() WorkloadIdentityPoolManagedIdentityOutput {
	return i.ToWorkloadIdentityPoolManagedIdentityOutputWithContext(context.Background())
}

func (i *WorkloadIdentityPoolManagedIdentity) ToWorkloadIdentityPoolManagedIdentityOutputWithContext(ctx context.Context) WorkloadIdentityPoolManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolManagedIdentityOutput)
}

// WorkloadIdentityPoolManagedIdentityArrayInput is an input type that accepts WorkloadIdentityPoolManagedIdentityArray and WorkloadIdentityPoolManagedIdentityArrayOutput values.
// You can construct a concrete instance of `WorkloadIdentityPoolManagedIdentityArrayInput` via:
//
//	WorkloadIdentityPoolManagedIdentityArray{ WorkloadIdentityPoolManagedIdentityArgs{...} }
type WorkloadIdentityPoolManagedIdentityArrayInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolManagedIdentityArrayOutput() WorkloadIdentityPoolManagedIdentityArrayOutput
	ToWorkloadIdentityPoolManagedIdentityArrayOutputWithContext(context.Context) WorkloadIdentityPoolManagedIdentityArrayOutput
}

type WorkloadIdentityPoolManagedIdentityArray []WorkloadIdentityPoolManagedIdentityInput

func (WorkloadIdentityPoolManagedIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadIdentityPoolManagedIdentity)(nil)).Elem()
}

func (i WorkloadIdentityPoolManagedIdentityArray) ToWorkloadIdentityPoolManagedIdentityArrayOutput() WorkloadIdentityPoolManagedIdentityArrayOutput {
	return i.ToWorkloadIdentityPoolManagedIdentityArrayOutputWithContext(context.Background())
}

func (i WorkloadIdentityPoolManagedIdentityArray) ToWorkloadIdentityPoolManagedIdentityArrayOutputWithContext(ctx context.Context) WorkloadIdentityPoolManagedIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolManagedIdentityArrayOutput)
}

// WorkloadIdentityPoolManagedIdentityMapInput is an input type that accepts WorkloadIdentityPoolManagedIdentityMap and WorkloadIdentityPoolManagedIdentityMapOutput values.
// You can construct a concrete instance of `WorkloadIdentityPoolManagedIdentityMapInput` via:
//
//	WorkloadIdentityPoolManagedIdentityMap{ "key": WorkloadIdentityPoolManagedIdentityArgs{...} }
type WorkloadIdentityPoolManagedIdentityMapInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolManagedIdentityMapOutput() WorkloadIdentityPoolManagedIdentityMapOutput
	ToWorkloadIdentityPoolManagedIdentityMapOutputWithContext(context.Context) WorkloadIdentityPoolManagedIdentityMapOutput
}

type WorkloadIdentityPoolManagedIdentityMap map[string]WorkloadIdentityPoolManagedIdentityInput

func (WorkloadIdentityPoolManagedIdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadIdentityPoolManagedIdentity)(nil)).Elem()
}

func (i WorkloadIdentityPoolManagedIdentityMap) ToWorkloadIdentityPoolManagedIdentityMapOutput() WorkloadIdentityPoolManagedIdentityMapOutput {
	return i.ToWorkloadIdentityPoolManagedIdentityMapOutputWithContext(context.Background())
}

func (i WorkloadIdentityPoolManagedIdentityMap) ToWorkloadIdentityPoolManagedIdentityMapOutputWithContext(ctx context.Context) WorkloadIdentityPoolManagedIdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolManagedIdentityMapOutput)
}

type WorkloadIdentityPoolManagedIdentityOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPoolManagedIdentity)(nil)).Elem()
}

func (o WorkloadIdentityPoolManagedIdentityOutput) ToWorkloadIdentityPoolManagedIdentityOutput() WorkloadIdentityPoolManagedIdentityOutput {
	return o
}

func (o WorkloadIdentityPoolManagedIdentityOutput) ToWorkloadIdentityPoolManagedIdentityOutputWithContext(ctx context.Context) WorkloadIdentityPoolManagedIdentityOutput {
	return o
}

// Defines which workloads can receive an identity within a pool. When an AttestationRule is
// defined under a managed identity, matching workloads may receive that identity. A maximum of
// 50 AttestationRules can be set.
// Structure is documented below.
func (o WorkloadIdentityPoolManagedIdentityOutput) AttestationRules() WorkloadIdentityPoolManagedIdentityAttestationRuleArrayOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolManagedIdentity) WorkloadIdentityPoolManagedIdentityAttestationRuleArrayOutput {
		return v.AttestationRules
	}).(WorkloadIdentityPoolManagedIdentityAttestationRuleArrayOutput)
}

// A description of the managed identity. Cannot exceed 256 characters.
func (o WorkloadIdentityPoolManagedIdentityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolManagedIdentity) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether the managed identity is disabled. If disabled, credentials may no longer be issued for
// the identity, however existing credentials will still be accepted until they expire.
func (o WorkloadIdentityPoolManagedIdentityOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolManagedIdentity) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The resource name of the managed identity as
// `projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/namespaces/{workload_identity_pool_namespace_id}/managedIdentities/{workload_identity_pool_managed_identity_id}`.
func (o WorkloadIdentityPoolManagedIdentityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolManagedIdentity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o WorkloadIdentityPoolManagedIdentityOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolManagedIdentity) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The current state of the managed identity.
//   - `ACTIVE`: The managed identity is active.
//   - `DELETED`: The managed identity is soft-deleted. Soft-deleted managed identities are
//     permanently deleted after approximately 30 days. You can restore a soft-deleted managed
//     identity using UndeleteWorkloadIdentityPoolManagedIdentity. You cannot reuse the ID of a
//     soft-deleted managed identity until it is permanently deleted.
func (o WorkloadIdentityPoolManagedIdentityOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolManagedIdentity) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The ID to use for the pool, which becomes the final component of the resource name. This
// value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
// `gcp-` is reserved for use by Google, and may not be specified.
func (o WorkloadIdentityPoolManagedIdentityOutput) WorkloadIdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolManagedIdentity) pulumi.StringOutput { return v.WorkloadIdentityPoolId }).(pulumi.StringOutput)
}

// The ID to use for the managed identity. This value must:
// * contain at most 63 characters
// * contain only lowercase alphanumeric characters or `-`
// * start with an alphanumeric character
// * end with an alphanumeric character
//
// The prefix `gcp-` will be reserved for future uses.
func (o WorkloadIdentityPoolManagedIdentityOutput) WorkloadIdentityPoolManagedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolManagedIdentity) pulumi.StringOutput {
		return v.WorkloadIdentityPoolManagedIdentityId
	}).(pulumi.StringOutput)
}

// The ID to use for the namespace. This value must:
// * contain at most 63 characters
// * contain only lowercase alphanumeric characters or `-`
// * start with an alphanumeric character
// * end with an alphanumeric character
//
// The prefix `gcp-` will be reserved for future uses.
func (o WorkloadIdentityPoolManagedIdentityOutput) WorkloadIdentityPoolNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPoolManagedIdentity) pulumi.StringOutput {
		return v.WorkloadIdentityPoolNamespaceId
	}).(pulumi.StringOutput)
}

type WorkloadIdentityPoolManagedIdentityArrayOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolManagedIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkloadIdentityPoolManagedIdentity)(nil)).Elem()
}

func (o WorkloadIdentityPoolManagedIdentityArrayOutput) ToWorkloadIdentityPoolManagedIdentityArrayOutput() WorkloadIdentityPoolManagedIdentityArrayOutput {
	return o
}

func (o WorkloadIdentityPoolManagedIdentityArrayOutput) ToWorkloadIdentityPoolManagedIdentityArrayOutputWithContext(ctx context.Context) WorkloadIdentityPoolManagedIdentityArrayOutput {
	return o
}

func (o WorkloadIdentityPoolManagedIdentityArrayOutput) Index(i pulumi.IntInput) WorkloadIdentityPoolManagedIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkloadIdentityPoolManagedIdentity {
		return vs[0].([]*WorkloadIdentityPoolManagedIdentity)[vs[1].(int)]
	}).(WorkloadIdentityPoolManagedIdentityOutput)
}

type WorkloadIdentityPoolManagedIdentityMapOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolManagedIdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkloadIdentityPoolManagedIdentity)(nil)).Elem()
}

func (o WorkloadIdentityPoolManagedIdentityMapOutput) ToWorkloadIdentityPoolManagedIdentityMapOutput() WorkloadIdentityPoolManagedIdentityMapOutput {
	return o
}

func (o WorkloadIdentityPoolManagedIdentityMapOutput) ToWorkloadIdentityPoolManagedIdentityMapOutputWithContext(ctx context.Context) WorkloadIdentityPoolManagedIdentityMapOutput {
	return o
}

func (o WorkloadIdentityPoolManagedIdentityMapOutput) MapIndex(k pulumi.StringInput) WorkloadIdentityPoolManagedIdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkloadIdentityPoolManagedIdentity {
		return vs[0].(map[string]*WorkloadIdentityPoolManagedIdentity)[vs[1].(string)]
	}).(WorkloadIdentityPoolManagedIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolManagedIdentityInput)(nil)).Elem(), &WorkloadIdentityPoolManagedIdentity{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolManagedIdentityArrayInput)(nil)).Elem(), WorkloadIdentityPoolManagedIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolManagedIdentityMapInput)(nil)).Elem(), WorkloadIdentityPoolManagedIdentityMap{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolManagedIdentityOutput{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolManagedIdentityArrayOutput{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolManagedIdentityMapOutput{})
}
