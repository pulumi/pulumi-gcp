// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudquota

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### Cloudquotas Quota Adjuster Settings Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/cloudquota"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudquota.NewSQuotaAdjusterSettings(ctx, "adjuster_settings", &cloudquota.SQuotaAdjusterSettingsArgs{
//				Parent:     pulumi.String("projects/104740170505"),
//				Enablement: pulumi.String("ENABLED"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// QuotaAdjusterSettings can be imported using any of these accepted formats:
//
// * `{{parent}}/locations/global/quotaAdjusterSettings`
//
// When using the `pulumi import` command, QuotaAdjusterSettings can be imported using one of the formats above. For example:
//
// ```sh
// $ pulumi import gcp:cloudquota/sQuotaAdjusterSettings:SQuotaAdjusterSettings default {{parent}}/locations/global/quotaAdjusterSettings
// ```
type SQuotaAdjusterSettings struct {
	pulumi.CustomResourceState

	// The resource container that determines if the quota adjuster is set for this project.
	// Expect this field to be empty currently.
	EffectiveContainer pulumi.StringOutput `pulumi:"effectiveContainer"`
	// Based on the effective container`s setting above, determines Whether this resource container has the quota adjuster enabled.
	// Expect this field to be empty currently.
	EffectiveEnablement pulumi.StringOutput `pulumi:"effectiveEnablement"`
	// Required. The configured value of the enablement at the given resource.
	// Possible values are: `ENABLED`, `DISABLED`.
	Enablement pulumi.StringOutput `pulumi:"enablement"`
	// The parent of the quota preference. Allowed parent format is "projects/[project-id / number]".
	//
	// ***
	Parent pulumi.StringOutput `pulumi:"parent"`
}

// NewSQuotaAdjusterSettings registers a new resource with the given unique name, arguments, and options.
func NewSQuotaAdjusterSettings(ctx *pulumi.Context,
	name string, args *SQuotaAdjusterSettingsArgs, opts ...pulumi.ResourceOption) (*SQuotaAdjusterSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enablement == nil {
		return nil, errors.New("invalid value for required argument 'Enablement'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SQuotaAdjusterSettings
	err := ctx.RegisterResource("gcp:cloudquota/sQuotaAdjusterSettings:SQuotaAdjusterSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSQuotaAdjusterSettings gets an existing SQuotaAdjusterSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSQuotaAdjusterSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SQuotaAdjusterSettingsState, opts ...pulumi.ResourceOption) (*SQuotaAdjusterSettings, error) {
	var resource SQuotaAdjusterSettings
	err := ctx.ReadResource("gcp:cloudquota/sQuotaAdjusterSettings:SQuotaAdjusterSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SQuotaAdjusterSettings resources.
type squotaAdjusterSettingsState struct {
	// The resource container that determines if the quota adjuster is set for this project.
	// Expect this field to be empty currently.
	EffectiveContainer *string `pulumi:"effectiveContainer"`
	// Based on the effective container`s setting above, determines Whether this resource container has the quota adjuster enabled.
	// Expect this field to be empty currently.
	EffectiveEnablement *string `pulumi:"effectiveEnablement"`
	// Required. The configured value of the enablement at the given resource.
	// Possible values are: `ENABLED`, `DISABLED`.
	Enablement *string `pulumi:"enablement"`
	// The parent of the quota preference. Allowed parent format is "projects/[project-id / number]".
	//
	// ***
	Parent *string `pulumi:"parent"`
}

type SQuotaAdjusterSettingsState struct {
	// The resource container that determines if the quota adjuster is set for this project.
	// Expect this field to be empty currently.
	EffectiveContainer pulumi.StringPtrInput
	// Based on the effective container`s setting above, determines Whether this resource container has the quota adjuster enabled.
	// Expect this field to be empty currently.
	EffectiveEnablement pulumi.StringPtrInput
	// Required. The configured value of the enablement at the given resource.
	// Possible values are: `ENABLED`, `DISABLED`.
	Enablement pulumi.StringPtrInput
	// The parent of the quota preference. Allowed parent format is "projects/[project-id / number]".
	//
	// ***
	Parent pulumi.StringPtrInput
}

func (SQuotaAdjusterSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*squotaAdjusterSettingsState)(nil)).Elem()
}

type squotaAdjusterSettingsArgs struct {
	// Required. The configured value of the enablement at the given resource.
	// Possible values are: `ENABLED`, `DISABLED`.
	Enablement string `pulumi:"enablement"`
	// The parent of the quota preference. Allowed parent format is "projects/[project-id / number]".
	//
	// ***
	Parent *string `pulumi:"parent"`
}

// The set of arguments for constructing a SQuotaAdjusterSettings resource.
type SQuotaAdjusterSettingsArgs struct {
	// Required. The configured value of the enablement at the given resource.
	// Possible values are: `ENABLED`, `DISABLED`.
	Enablement pulumi.StringInput
	// The parent of the quota preference. Allowed parent format is "projects/[project-id / number]".
	//
	// ***
	Parent pulumi.StringPtrInput
}

func (SQuotaAdjusterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*squotaAdjusterSettingsArgs)(nil)).Elem()
}

type SQuotaAdjusterSettingsInput interface {
	pulumi.Input

	ToSQuotaAdjusterSettingsOutput() SQuotaAdjusterSettingsOutput
	ToSQuotaAdjusterSettingsOutputWithContext(ctx context.Context) SQuotaAdjusterSettingsOutput
}

func (*SQuotaAdjusterSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**SQuotaAdjusterSettings)(nil)).Elem()
}

func (i *SQuotaAdjusterSettings) ToSQuotaAdjusterSettingsOutput() SQuotaAdjusterSettingsOutput {
	return i.ToSQuotaAdjusterSettingsOutputWithContext(context.Background())
}

func (i *SQuotaAdjusterSettings) ToSQuotaAdjusterSettingsOutputWithContext(ctx context.Context) SQuotaAdjusterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQuotaAdjusterSettingsOutput)
}

// SQuotaAdjusterSettingsArrayInput is an input type that accepts SQuotaAdjusterSettingsArray and SQuotaAdjusterSettingsArrayOutput values.
// You can construct a concrete instance of `SQuotaAdjusterSettingsArrayInput` via:
//
//	SQuotaAdjusterSettingsArray{ SQuotaAdjusterSettingsArgs{...} }
type SQuotaAdjusterSettingsArrayInput interface {
	pulumi.Input

	ToSQuotaAdjusterSettingsArrayOutput() SQuotaAdjusterSettingsArrayOutput
	ToSQuotaAdjusterSettingsArrayOutputWithContext(context.Context) SQuotaAdjusterSettingsArrayOutput
}

type SQuotaAdjusterSettingsArray []SQuotaAdjusterSettingsInput

func (SQuotaAdjusterSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SQuotaAdjusterSettings)(nil)).Elem()
}

func (i SQuotaAdjusterSettingsArray) ToSQuotaAdjusterSettingsArrayOutput() SQuotaAdjusterSettingsArrayOutput {
	return i.ToSQuotaAdjusterSettingsArrayOutputWithContext(context.Background())
}

func (i SQuotaAdjusterSettingsArray) ToSQuotaAdjusterSettingsArrayOutputWithContext(ctx context.Context) SQuotaAdjusterSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQuotaAdjusterSettingsArrayOutput)
}

// SQuotaAdjusterSettingsMapInput is an input type that accepts SQuotaAdjusterSettingsMap and SQuotaAdjusterSettingsMapOutput values.
// You can construct a concrete instance of `SQuotaAdjusterSettingsMapInput` via:
//
//	SQuotaAdjusterSettingsMap{ "key": SQuotaAdjusterSettingsArgs{...} }
type SQuotaAdjusterSettingsMapInput interface {
	pulumi.Input

	ToSQuotaAdjusterSettingsMapOutput() SQuotaAdjusterSettingsMapOutput
	ToSQuotaAdjusterSettingsMapOutputWithContext(context.Context) SQuotaAdjusterSettingsMapOutput
}

type SQuotaAdjusterSettingsMap map[string]SQuotaAdjusterSettingsInput

func (SQuotaAdjusterSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SQuotaAdjusterSettings)(nil)).Elem()
}

func (i SQuotaAdjusterSettingsMap) ToSQuotaAdjusterSettingsMapOutput() SQuotaAdjusterSettingsMapOutput {
	return i.ToSQuotaAdjusterSettingsMapOutputWithContext(context.Background())
}

func (i SQuotaAdjusterSettingsMap) ToSQuotaAdjusterSettingsMapOutputWithContext(ctx context.Context) SQuotaAdjusterSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQuotaAdjusterSettingsMapOutput)
}

type SQuotaAdjusterSettingsOutput struct{ *pulumi.OutputState }

func (SQuotaAdjusterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SQuotaAdjusterSettings)(nil)).Elem()
}

func (o SQuotaAdjusterSettingsOutput) ToSQuotaAdjusterSettingsOutput() SQuotaAdjusterSettingsOutput {
	return o
}

func (o SQuotaAdjusterSettingsOutput) ToSQuotaAdjusterSettingsOutputWithContext(ctx context.Context) SQuotaAdjusterSettingsOutput {
	return o
}

// The resource container that determines if the quota adjuster is set for this project.
// Expect this field to be empty currently.
func (o SQuotaAdjusterSettingsOutput) EffectiveContainer() pulumi.StringOutput {
	return o.ApplyT(func(v *SQuotaAdjusterSettings) pulumi.StringOutput { return v.EffectiveContainer }).(pulumi.StringOutput)
}

// Based on the effective container`s setting above, determines Whether this resource container has the quota adjuster enabled.
// Expect this field to be empty currently.
func (o SQuotaAdjusterSettingsOutput) EffectiveEnablement() pulumi.StringOutput {
	return o.ApplyT(func(v *SQuotaAdjusterSettings) pulumi.StringOutput { return v.EffectiveEnablement }).(pulumi.StringOutput)
}

// Required. The configured value of the enablement at the given resource.
// Possible values are: `ENABLED`, `DISABLED`.
func (o SQuotaAdjusterSettingsOutput) Enablement() pulumi.StringOutput {
	return o.ApplyT(func(v *SQuotaAdjusterSettings) pulumi.StringOutput { return v.Enablement }).(pulumi.StringOutput)
}

// The parent of the quota preference. Allowed parent format is "projects/[project-id / number]".
//
// ***
func (o SQuotaAdjusterSettingsOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *SQuotaAdjusterSettings) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

type SQuotaAdjusterSettingsArrayOutput struct{ *pulumi.OutputState }

func (SQuotaAdjusterSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SQuotaAdjusterSettings)(nil)).Elem()
}

func (o SQuotaAdjusterSettingsArrayOutput) ToSQuotaAdjusterSettingsArrayOutput() SQuotaAdjusterSettingsArrayOutput {
	return o
}

func (o SQuotaAdjusterSettingsArrayOutput) ToSQuotaAdjusterSettingsArrayOutputWithContext(ctx context.Context) SQuotaAdjusterSettingsArrayOutput {
	return o
}

func (o SQuotaAdjusterSettingsArrayOutput) Index(i pulumi.IntInput) SQuotaAdjusterSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SQuotaAdjusterSettings {
		return vs[0].([]*SQuotaAdjusterSettings)[vs[1].(int)]
	}).(SQuotaAdjusterSettingsOutput)
}

type SQuotaAdjusterSettingsMapOutput struct{ *pulumi.OutputState }

func (SQuotaAdjusterSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SQuotaAdjusterSettings)(nil)).Elem()
}

func (o SQuotaAdjusterSettingsMapOutput) ToSQuotaAdjusterSettingsMapOutput() SQuotaAdjusterSettingsMapOutput {
	return o
}

func (o SQuotaAdjusterSettingsMapOutput) ToSQuotaAdjusterSettingsMapOutputWithContext(ctx context.Context) SQuotaAdjusterSettingsMapOutput {
	return o
}

func (o SQuotaAdjusterSettingsMapOutput) MapIndex(k pulumi.StringInput) SQuotaAdjusterSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SQuotaAdjusterSettings {
		return vs[0].(map[string]*SQuotaAdjusterSettings)[vs[1].(string)]
	}).(SQuotaAdjusterSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SQuotaAdjusterSettingsInput)(nil)).Elem(), &SQuotaAdjusterSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*SQuotaAdjusterSettingsArrayInput)(nil)).Elem(), SQuotaAdjusterSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SQuotaAdjusterSettingsMapInput)(nil)).Elem(), SQuotaAdjusterSettingsMap{})
	pulumi.RegisterOutputType(SQuotaAdjusterSettingsOutput{})
	pulumi.RegisterOutputType(SQuotaAdjusterSettingsArrayOutput{})
	pulumi.RegisterOutputType(SQuotaAdjusterSettingsMapOutput{})
}
