// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudquota

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a particular quota for a given project, folder or organization.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/cloudquota"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudquota.GetSQuotaInfo(ctx, &cloudquota.GetSQuotaInfoArgs{
//				Parent:  "projects/my-project",
//				Service: "compute.googleapis.com",
//				QuotaId: "CPUS-per-project-region",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSQuotaInfo(ctx *pulumi.Context, args *GetSQuotaInfoArgs, opts ...pulumi.InvokeOption) (*GetSQuotaInfoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSQuotaInfoResult
	err := ctx.Invoke("gcp:cloudquota/getSQuotaInfo:getSQuotaInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSQuotaInfo.
type GetSQuotaInfoArgs struct {
	// The parent of the quota info. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number].
	Parent string `pulumi:"parent"`
	// The id of the quota, which is unique within the service.
	QuotaId string `pulumi:"quotaId"`
	// The name of the service in which the quota is defined.
	Service string `pulumi:"service"`
}

// A collection of values returned by getSQuotaInfo.
type GetSQuotaInfoResult struct {
	// (Output) The container type of the QuotaInfo.
	ContainerType string `pulumi:"containerType"`
	// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
	Dimensions []string `pulumi:"dimensions"`
	// (Output) The collection of dimensions info ordered by their dimensions from more specific ones to less specific ones.
	DimensionsInfos []GetSQuotaInfoDimensionsInfo `pulumi:"dimensionsInfos"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Output) Whether the quota is a concurrent quota. Concurrent quotas are enforced on the total number of concurrent operations in flight at any given time.
	IsConcurrent bool `pulumi:"isConcurrent"`
	// (Output) Whether the quota value is fixed or adjustable.
	IsFixed bool `pulumi:"isFixed"`
	// (Output) Whether this is a precise quota. A precise quota is tracked with absolute precision. In contrast, an imprecise quota is not tracked with precision.
	IsPrecise bool `pulumi:"isPrecise"`
	// (Output) The metric of the quota. It specifies the resources consumption the quota is defined for, for example: `compute.googleapis.com/cpus`.
	Metric string `pulumi:"metric"`
	// (Output) The display name of the quota metric.
	MetricDisplayName string `pulumi:"metricDisplayName"`
	// (Output) The unit in which the metric value is reported, e.g., `MByte`.
	MetricUnit string `pulumi:"metricUnit"`
	// (Output) Resource name of this QuotaInfo, for example: `projects/123/locations/global/services/compute.googleapis.com/quotaInfos/CpusPerProjectPerRegion`.
	Name   string `pulumi:"name"`
	Parent string `pulumi:"parent"`
	// (Output) The display name of the quota.
	QuotaDisplayName string `pulumi:"quotaDisplayName"`
	QuotaId          string `pulumi:"quotaId"`
	// (Output) Whether it is eligible to request a higher quota value for this quota.
	QuotaIncreaseEligibilities []GetSQuotaInfoQuotaIncreaseEligibility `pulumi:"quotaIncreaseEligibilities"`
	// (Output) The reset time interval for the quota. Refresh interval applies to rate quota only. Example: "minute" for per minute, "day" for per day, or "10 seconds" for every 10 seconds.
	RefreshInterval string `pulumi:"refreshInterval"`
	Service         string `pulumi:"service"`
	// (Output) URI to the page where users can request more quota for the cloud service, for example: `https://console.cloud.google.com/iam-admin/quotas`.
	ServiceRequestQuotaUri string `pulumi:"serviceRequestQuotaUri"`
}

func GetSQuotaInfoOutput(ctx *pulumi.Context, args GetSQuotaInfoOutputArgs, opts ...pulumi.InvokeOption) GetSQuotaInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSQuotaInfoResult, error) {
			args := v.(GetSQuotaInfoArgs)
			r, err := GetSQuotaInfo(ctx, &args, opts...)
			var s GetSQuotaInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSQuotaInfoResultOutput)
}

// A collection of arguments for invoking getSQuotaInfo.
type GetSQuotaInfoOutputArgs struct {
	// The parent of the quota info. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number].
	Parent pulumi.StringInput `pulumi:"parent"`
	// The id of the quota, which is unique within the service.
	QuotaId pulumi.StringInput `pulumi:"quotaId"`
	// The name of the service in which the quota is defined.
	Service pulumi.StringInput `pulumi:"service"`
}

func (GetSQuotaInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfoArgs)(nil)).Elem()
}

// A collection of values returned by getSQuotaInfo.
type GetSQuotaInfoResultOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfoResult)(nil)).Elem()
}

func (o GetSQuotaInfoResultOutput) ToGetSQuotaInfoResultOutput() GetSQuotaInfoResultOutput {
	return o
}

func (o GetSQuotaInfoResultOutput) ToGetSQuotaInfoResultOutputWithContext(ctx context.Context) GetSQuotaInfoResultOutput {
	return o
}

// (Output) The container type of the QuotaInfo.
func (o GetSQuotaInfoResultOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.ContainerType }).(pulumi.StringOutput)
}

// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
func (o GetSQuotaInfoResultOutput) Dimensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) []string { return v.Dimensions }).(pulumi.StringArrayOutput)
}

// (Output) The collection of dimensions info ordered by their dimensions from more specific ones to less specific ones.
func (o GetSQuotaInfoResultOutput) DimensionsInfos() GetSQuotaInfoDimensionsInfoArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) []GetSQuotaInfoDimensionsInfo { return v.DimensionsInfos }).(GetSQuotaInfoDimensionsInfoArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSQuotaInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Output) Whether the quota is a concurrent quota. Concurrent quotas are enforced on the total number of concurrent operations in flight at any given time.
func (o GetSQuotaInfoResultOutput) IsConcurrent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) bool { return v.IsConcurrent }).(pulumi.BoolOutput)
}

// (Output) Whether the quota value is fixed or adjustable.
func (o GetSQuotaInfoResultOutput) IsFixed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) bool { return v.IsFixed }).(pulumi.BoolOutput)
}

// (Output) Whether this is a precise quota. A precise quota is tracked with absolute precision. In contrast, an imprecise quota is not tracked with precision.
func (o GetSQuotaInfoResultOutput) IsPrecise() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) bool { return v.IsPrecise }).(pulumi.BoolOutput)
}

// (Output) The metric of the quota. It specifies the resources consumption the quota is defined for, for example: `compute.googleapis.com/cpus`.
func (o GetSQuotaInfoResultOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.Metric }).(pulumi.StringOutput)
}

// (Output) The display name of the quota metric.
func (o GetSQuotaInfoResultOutput) MetricDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.MetricDisplayName }).(pulumi.StringOutput)
}

// (Output) The unit in which the metric value is reported, e.g., `MByte`.
func (o GetSQuotaInfoResultOutput) MetricUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.MetricUnit }).(pulumi.StringOutput)
}

// (Output) Resource name of this QuotaInfo, for example: `projects/123/locations/global/services/compute.googleapis.com/quotaInfos/CpusPerProjectPerRegion`.
func (o GetSQuotaInfoResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSQuotaInfoResultOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.Parent }).(pulumi.StringOutput)
}

// (Output) The display name of the quota.
func (o GetSQuotaInfoResultOutput) QuotaDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.QuotaDisplayName }).(pulumi.StringOutput)
}

func (o GetSQuotaInfoResultOutput) QuotaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.QuotaId }).(pulumi.StringOutput)
}

// (Output) Whether it is eligible to request a higher quota value for this quota.
func (o GetSQuotaInfoResultOutput) QuotaIncreaseEligibilities() GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) []GetSQuotaInfoQuotaIncreaseEligibility {
		return v.QuotaIncreaseEligibilities
	}).(GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput)
}

// (Output) The reset time interval for the quota. Refresh interval applies to rate quota only. Example: "minute" for per minute, "day" for per day, or "10 seconds" for every 10 seconds.
func (o GetSQuotaInfoResultOutput) RefreshInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.RefreshInterval }).(pulumi.StringOutput)
}

func (o GetSQuotaInfoResultOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.Service }).(pulumi.StringOutput)
}

// (Output) URI to the page where users can request more quota for the cloud service, for example: `https://console.cloud.google.com/iam-admin/quotas`.
func (o GetSQuotaInfoResultOutput) ServiceRequestQuotaUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoResult) string { return v.ServiceRequestQuotaUri }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSQuotaInfoResultOutput{})
}
