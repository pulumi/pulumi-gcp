// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudquota

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type SQuotaPreferenceQuotaConfig struct {
	// The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
	// An object containing a list of "key: value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Annotations map[string]string `pulumi:"annotations"`
	// (Output)
	// Granted quota value.
	GrantedValue *string `pulumi:"grantedValue"`
	// The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is "unlimited".
	PreferredValue string `pulumi:"preferredValue"`
	// (Output)
	// The origin of the quota preference request.
	//
	// ***
	RequestOrigin *string `pulumi:"requestOrigin"`
	// (Output)
	// Optional details about the state of this quota preference.
	StateDetail *string `pulumi:"stateDetail"`
	// (Output)
	// The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
	TraceId *string `pulumi:"traceId"`
}

// SQuotaPreferenceQuotaConfigInput is an input type that accepts SQuotaPreferenceQuotaConfigArgs and SQuotaPreferenceQuotaConfigOutput values.
// You can construct a concrete instance of `SQuotaPreferenceQuotaConfigInput` via:
//
//	SQuotaPreferenceQuotaConfigArgs{...}
type SQuotaPreferenceQuotaConfigInput interface {
	pulumi.Input

	ToSQuotaPreferenceQuotaConfigOutput() SQuotaPreferenceQuotaConfigOutput
	ToSQuotaPreferenceQuotaConfigOutputWithContext(context.Context) SQuotaPreferenceQuotaConfigOutput
}

type SQuotaPreferenceQuotaConfigArgs struct {
	// The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
	// An object containing a list of "key: value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// (Output)
	// Granted quota value.
	GrantedValue pulumi.StringPtrInput `pulumi:"grantedValue"`
	// The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is "unlimited".
	PreferredValue pulumi.StringInput `pulumi:"preferredValue"`
	// (Output)
	// The origin of the quota preference request.
	//
	// ***
	RequestOrigin pulumi.StringPtrInput `pulumi:"requestOrigin"`
	// (Output)
	// Optional details about the state of this quota preference.
	StateDetail pulumi.StringPtrInput `pulumi:"stateDetail"`
	// (Output)
	// The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
	TraceId pulumi.StringPtrInput `pulumi:"traceId"`
}

func (SQuotaPreferenceQuotaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SQuotaPreferenceQuotaConfig)(nil)).Elem()
}

func (i SQuotaPreferenceQuotaConfigArgs) ToSQuotaPreferenceQuotaConfigOutput() SQuotaPreferenceQuotaConfigOutput {
	return i.ToSQuotaPreferenceQuotaConfigOutputWithContext(context.Background())
}

func (i SQuotaPreferenceQuotaConfigArgs) ToSQuotaPreferenceQuotaConfigOutputWithContext(ctx context.Context) SQuotaPreferenceQuotaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQuotaPreferenceQuotaConfigOutput)
}

func (i SQuotaPreferenceQuotaConfigArgs) ToSQuotaPreferenceQuotaConfigPtrOutput() SQuotaPreferenceQuotaConfigPtrOutput {
	return i.ToSQuotaPreferenceQuotaConfigPtrOutputWithContext(context.Background())
}

func (i SQuotaPreferenceQuotaConfigArgs) ToSQuotaPreferenceQuotaConfigPtrOutputWithContext(ctx context.Context) SQuotaPreferenceQuotaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQuotaPreferenceQuotaConfigOutput).ToSQuotaPreferenceQuotaConfigPtrOutputWithContext(ctx)
}

// SQuotaPreferenceQuotaConfigPtrInput is an input type that accepts SQuotaPreferenceQuotaConfigArgs, SQuotaPreferenceQuotaConfigPtr and SQuotaPreferenceQuotaConfigPtrOutput values.
// You can construct a concrete instance of `SQuotaPreferenceQuotaConfigPtrInput` via:
//
//	        SQuotaPreferenceQuotaConfigArgs{...}
//
//	or:
//
//	        nil
type SQuotaPreferenceQuotaConfigPtrInput interface {
	pulumi.Input

	ToSQuotaPreferenceQuotaConfigPtrOutput() SQuotaPreferenceQuotaConfigPtrOutput
	ToSQuotaPreferenceQuotaConfigPtrOutputWithContext(context.Context) SQuotaPreferenceQuotaConfigPtrOutput
}

type squotaPreferenceQuotaConfigPtrType SQuotaPreferenceQuotaConfigArgs

func SQuotaPreferenceQuotaConfigPtr(v *SQuotaPreferenceQuotaConfigArgs) SQuotaPreferenceQuotaConfigPtrInput {
	return (*squotaPreferenceQuotaConfigPtrType)(v)
}

func (*squotaPreferenceQuotaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SQuotaPreferenceQuotaConfig)(nil)).Elem()
}

func (i *squotaPreferenceQuotaConfigPtrType) ToSQuotaPreferenceQuotaConfigPtrOutput() SQuotaPreferenceQuotaConfigPtrOutput {
	return i.ToSQuotaPreferenceQuotaConfigPtrOutputWithContext(context.Background())
}

func (i *squotaPreferenceQuotaConfigPtrType) ToSQuotaPreferenceQuotaConfigPtrOutputWithContext(ctx context.Context) SQuotaPreferenceQuotaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQuotaPreferenceQuotaConfigPtrOutput)
}

type SQuotaPreferenceQuotaConfigOutput struct{ *pulumi.OutputState }

func (SQuotaPreferenceQuotaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SQuotaPreferenceQuotaConfig)(nil)).Elem()
}

func (o SQuotaPreferenceQuotaConfigOutput) ToSQuotaPreferenceQuotaConfigOutput() SQuotaPreferenceQuotaConfigOutput {
	return o
}

func (o SQuotaPreferenceQuotaConfigOutput) ToSQuotaPreferenceQuotaConfigOutputWithContext(ctx context.Context) SQuotaPreferenceQuotaConfigOutput {
	return o
}

func (o SQuotaPreferenceQuotaConfigOutput) ToSQuotaPreferenceQuotaConfigPtrOutput() SQuotaPreferenceQuotaConfigPtrOutput {
	return o.ToSQuotaPreferenceQuotaConfigPtrOutputWithContext(context.Background())
}

func (o SQuotaPreferenceQuotaConfigOutput) ToSQuotaPreferenceQuotaConfigPtrOutputWithContext(ctx context.Context) SQuotaPreferenceQuotaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SQuotaPreferenceQuotaConfig) *SQuotaPreferenceQuotaConfig {
		return &v
	}).(SQuotaPreferenceQuotaConfigPtrOutput)
}

// The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
// An object containing a list of "key: value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
func (o SQuotaPreferenceQuotaConfigOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v SQuotaPreferenceQuotaConfig) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// (Output)
// Granted quota value.
func (o SQuotaPreferenceQuotaConfigOutput) GrantedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SQuotaPreferenceQuotaConfig) *string { return v.GrantedValue }).(pulumi.StringPtrOutput)
}

// The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is "unlimited".
func (o SQuotaPreferenceQuotaConfigOutput) PreferredValue() pulumi.StringOutput {
	return o.ApplyT(func(v SQuotaPreferenceQuotaConfig) string { return v.PreferredValue }).(pulumi.StringOutput)
}

// (Output)
// The origin of the quota preference request.
//
// ***
func (o SQuotaPreferenceQuotaConfigOutput) RequestOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SQuotaPreferenceQuotaConfig) *string { return v.RequestOrigin }).(pulumi.StringPtrOutput)
}

// (Output)
// Optional details about the state of this quota preference.
func (o SQuotaPreferenceQuotaConfigOutput) StateDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SQuotaPreferenceQuotaConfig) *string { return v.StateDetail }).(pulumi.StringPtrOutput)
}

// (Output)
// The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
func (o SQuotaPreferenceQuotaConfigOutput) TraceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SQuotaPreferenceQuotaConfig) *string { return v.TraceId }).(pulumi.StringPtrOutput)
}

type SQuotaPreferenceQuotaConfigPtrOutput struct{ *pulumi.OutputState }

func (SQuotaPreferenceQuotaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SQuotaPreferenceQuotaConfig)(nil)).Elem()
}

func (o SQuotaPreferenceQuotaConfigPtrOutput) ToSQuotaPreferenceQuotaConfigPtrOutput() SQuotaPreferenceQuotaConfigPtrOutput {
	return o
}

func (o SQuotaPreferenceQuotaConfigPtrOutput) ToSQuotaPreferenceQuotaConfigPtrOutputWithContext(ctx context.Context) SQuotaPreferenceQuotaConfigPtrOutput {
	return o
}

func (o SQuotaPreferenceQuotaConfigPtrOutput) Elem() SQuotaPreferenceQuotaConfigOutput {
	return o.ApplyT(func(v *SQuotaPreferenceQuotaConfig) SQuotaPreferenceQuotaConfig {
		if v != nil {
			return *v
		}
		var ret SQuotaPreferenceQuotaConfig
		return ret
	}).(SQuotaPreferenceQuotaConfigOutput)
}

// The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
// An object containing a list of "key: value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
func (o SQuotaPreferenceQuotaConfigPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SQuotaPreferenceQuotaConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

// (Output)
// Granted quota value.
func (o SQuotaPreferenceQuotaConfigPtrOutput) GrantedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SQuotaPreferenceQuotaConfig) *string {
		if v == nil {
			return nil
		}
		return v.GrantedValue
	}).(pulumi.StringPtrOutput)
}

// The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is "unlimited".
func (o SQuotaPreferenceQuotaConfigPtrOutput) PreferredValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SQuotaPreferenceQuotaConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredValue
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The origin of the quota preference request.
//
// ***
func (o SQuotaPreferenceQuotaConfigPtrOutput) RequestOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SQuotaPreferenceQuotaConfig) *string {
		if v == nil {
			return nil
		}
		return v.RequestOrigin
	}).(pulumi.StringPtrOutput)
}

// (Output)
// Optional details about the state of this quota preference.
func (o SQuotaPreferenceQuotaConfigPtrOutput) StateDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SQuotaPreferenceQuotaConfig) *string {
		if v == nil {
			return nil
		}
		return v.StateDetail
	}).(pulumi.StringPtrOutput)
}

// (Output)
// The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
func (o SQuotaPreferenceQuotaConfigPtrOutput) TraceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SQuotaPreferenceQuotaConfig) *string {
		if v == nil {
			return nil
		}
		return v.TraceId
	}).(pulumi.StringPtrOutput)
}

type GetSQuotaInfoDimensionsInfo struct {
	// The applicable regions or zones of this dimensions info. The field will be set to `['global']` for quotas that are not per region or per zone. Otherwise, it will be set to the list of locations this dimension info is applicable to.
	ApplicableLocations []string `pulumi:"applicableLocations"`
	// The quota details for a map of dimensions.
	Details []GetSQuotaInfoDimensionsInfoDetail `pulumi:"details"`
	// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
	Dimensions map[string]interface{} `pulumi:"dimensions"`
}

// GetSQuotaInfoDimensionsInfoInput is an input type that accepts GetSQuotaInfoDimensionsInfoArgs and GetSQuotaInfoDimensionsInfoOutput values.
// You can construct a concrete instance of `GetSQuotaInfoDimensionsInfoInput` via:
//
//	GetSQuotaInfoDimensionsInfoArgs{...}
type GetSQuotaInfoDimensionsInfoInput interface {
	pulumi.Input

	ToGetSQuotaInfoDimensionsInfoOutput() GetSQuotaInfoDimensionsInfoOutput
	ToGetSQuotaInfoDimensionsInfoOutputWithContext(context.Context) GetSQuotaInfoDimensionsInfoOutput
}

type GetSQuotaInfoDimensionsInfoArgs struct {
	// The applicable regions or zones of this dimensions info. The field will be set to `['global']` for quotas that are not per region or per zone. Otherwise, it will be set to the list of locations this dimension info is applicable to.
	ApplicableLocations pulumi.StringArrayInput `pulumi:"applicableLocations"`
	// The quota details for a map of dimensions.
	Details GetSQuotaInfoDimensionsInfoDetailArrayInput `pulumi:"details"`
	// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
	Dimensions pulumi.MapInput `pulumi:"dimensions"`
}

func (GetSQuotaInfoDimensionsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfoDimensionsInfo)(nil)).Elem()
}

func (i GetSQuotaInfoDimensionsInfoArgs) ToGetSQuotaInfoDimensionsInfoOutput() GetSQuotaInfoDimensionsInfoOutput {
	return i.ToGetSQuotaInfoDimensionsInfoOutputWithContext(context.Background())
}

func (i GetSQuotaInfoDimensionsInfoArgs) ToGetSQuotaInfoDimensionsInfoOutputWithContext(ctx context.Context) GetSQuotaInfoDimensionsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfoDimensionsInfoOutput)
}

// GetSQuotaInfoDimensionsInfoArrayInput is an input type that accepts GetSQuotaInfoDimensionsInfoArray and GetSQuotaInfoDimensionsInfoArrayOutput values.
// You can construct a concrete instance of `GetSQuotaInfoDimensionsInfoArrayInput` via:
//
//	GetSQuotaInfoDimensionsInfoArray{ GetSQuotaInfoDimensionsInfoArgs{...} }
type GetSQuotaInfoDimensionsInfoArrayInput interface {
	pulumi.Input

	ToGetSQuotaInfoDimensionsInfoArrayOutput() GetSQuotaInfoDimensionsInfoArrayOutput
	ToGetSQuotaInfoDimensionsInfoArrayOutputWithContext(context.Context) GetSQuotaInfoDimensionsInfoArrayOutput
}

type GetSQuotaInfoDimensionsInfoArray []GetSQuotaInfoDimensionsInfoInput

func (GetSQuotaInfoDimensionsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfoDimensionsInfo)(nil)).Elem()
}

func (i GetSQuotaInfoDimensionsInfoArray) ToGetSQuotaInfoDimensionsInfoArrayOutput() GetSQuotaInfoDimensionsInfoArrayOutput {
	return i.ToGetSQuotaInfoDimensionsInfoArrayOutputWithContext(context.Background())
}

func (i GetSQuotaInfoDimensionsInfoArray) ToGetSQuotaInfoDimensionsInfoArrayOutputWithContext(ctx context.Context) GetSQuotaInfoDimensionsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfoDimensionsInfoArrayOutput)
}

type GetSQuotaInfoDimensionsInfoOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfoDimensionsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfoDimensionsInfo)(nil)).Elem()
}

func (o GetSQuotaInfoDimensionsInfoOutput) ToGetSQuotaInfoDimensionsInfoOutput() GetSQuotaInfoDimensionsInfoOutput {
	return o
}

func (o GetSQuotaInfoDimensionsInfoOutput) ToGetSQuotaInfoDimensionsInfoOutputWithContext(ctx context.Context) GetSQuotaInfoDimensionsInfoOutput {
	return o
}

// The applicable regions or zones of this dimensions info. The field will be set to `['global']` for quotas that are not per region or per zone. Otherwise, it will be set to the list of locations this dimension info is applicable to.
func (o GetSQuotaInfoDimensionsInfoOutput) ApplicableLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfoDimensionsInfo) []string { return v.ApplicableLocations }).(pulumi.StringArrayOutput)
}

// The quota details for a map of dimensions.
func (o GetSQuotaInfoDimensionsInfoOutput) Details() GetSQuotaInfoDimensionsInfoDetailArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfoDimensionsInfo) []GetSQuotaInfoDimensionsInfoDetail { return v.Details }).(GetSQuotaInfoDimensionsInfoDetailArrayOutput)
}

// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
func (o GetSQuotaInfoDimensionsInfoOutput) Dimensions() pulumi.MapOutput {
	return o.ApplyT(func(v GetSQuotaInfoDimensionsInfo) map[string]interface{} { return v.Dimensions }).(pulumi.MapOutput)
}

type GetSQuotaInfoDimensionsInfoArrayOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfoDimensionsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfoDimensionsInfo)(nil)).Elem()
}

func (o GetSQuotaInfoDimensionsInfoArrayOutput) ToGetSQuotaInfoDimensionsInfoArrayOutput() GetSQuotaInfoDimensionsInfoArrayOutput {
	return o
}

func (o GetSQuotaInfoDimensionsInfoArrayOutput) ToGetSQuotaInfoDimensionsInfoArrayOutputWithContext(ctx context.Context) GetSQuotaInfoDimensionsInfoArrayOutput {
	return o
}

func (o GetSQuotaInfoDimensionsInfoArrayOutput) Index(i pulumi.IntInput) GetSQuotaInfoDimensionsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSQuotaInfoDimensionsInfo {
		return vs[0].([]GetSQuotaInfoDimensionsInfo)[vs[1].(int)]
	}).(GetSQuotaInfoDimensionsInfoOutput)
}

type GetSQuotaInfoDimensionsInfoDetail struct {
	// The value currently in effect and being enforced.
	Value string `pulumi:"value"`
}

// GetSQuotaInfoDimensionsInfoDetailInput is an input type that accepts GetSQuotaInfoDimensionsInfoDetailArgs and GetSQuotaInfoDimensionsInfoDetailOutput values.
// You can construct a concrete instance of `GetSQuotaInfoDimensionsInfoDetailInput` via:
//
//	GetSQuotaInfoDimensionsInfoDetailArgs{...}
type GetSQuotaInfoDimensionsInfoDetailInput interface {
	pulumi.Input

	ToGetSQuotaInfoDimensionsInfoDetailOutput() GetSQuotaInfoDimensionsInfoDetailOutput
	ToGetSQuotaInfoDimensionsInfoDetailOutputWithContext(context.Context) GetSQuotaInfoDimensionsInfoDetailOutput
}

type GetSQuotaInfoDimensionsInfoDetailArgs struct {
	// The value currently in effect and being enforced.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSQuotaInfoDimensionsInfoDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfoDimensionsInfoDetail)(nil)).Elem()
}

func (i GetSQuotaInfoDimensionsInfoDetailArgs) ToGetSQuotaInfoDimensionsInfoDetailOutput() GetSQuotaInfoDimensionsInfoDetailOutput {
	return i.ToGetSQuotaInfoDimensionsInfoDetailOutputWithContext(context.Background())
}

func (i GetSQuotaInfoDimensionsInfoDetailArgs) ToGetSQuotaInfoDimensionsInfoDetailOutputWithContext(ctx context.Context) GetSQuotaInfoDimensionsInfoDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfoDimensionsInfoDetailOutput)
}

// GetSQuotaInfoDimensionsInfoDetailArrayInput is an input type that accepts GetSQuotaInfoDimensionsInfoDetailArray and GetSQuotaInfoDimensionsInfoDetailArrayOutput values.
// You can construct a concrete instance of `GetSQuotaInfoDimensionsInfoDetailArrayInput` via:
//
//	GetSQuotaInfoDimensionsInfoDetailArray{ GetSQuotaInfoDimensionsInfoDetailArgs{...} }
type GetSQuotaInfoDimensionsInfoDetailArrayInput interface {
	pulumi.Input

	ToGetSQuotaInfoDimensionsInfoDetailArrayOutput() GetSQuotaInfoDimensionsInfoDetailArrayOutput
	ToGetSQuotaInfoDimensionsInfoDetailArrayOutputWithContext(context.Context) GetSQuotaInfoDimensionsInfoDetailArrayOutput
}

type GetSQuotaInfoDimensionsInfoDetailArray []GetSQuotaInfoDimensionsInfoDetailInput

func (GetSQuotaInfoDimensionsInfoDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfoDimensionsInfoDetail)(nil)).Elem()
}

func (i GetSQuotaInfoDimensionsInfoDetailArray) ToGetSQuotaInfoDimensionsInfoDetailArrayOutput() GetSQuotaInfoDimensionsInfoDetailArrayOutput {
	return i.ToGetSQuotaInfoDimensionsInfoDetailArrayOutputWithContext(context.Background())
}

func (i GetSQuotaInfoDimensionsInfoDetailArray) ToGetSQuotaInfoDimensionsInfoDetailArrayOutputWithContext(ctx context.Context) GetSQuotaInfoDimensionsInfoDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfoDimensionsInfoDetailArrayOutput)
}

type GetSQuotaInfoDimensionsInfoDetailOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfoDimensionsInfoDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfoDimensionsInfoDetail)(nil)).Elem()
}

func (o GetSQuotaInfoDimensionsInfoDetailOutput) ToGetSQuotaInfoDimensionsInfoDetailOutput() GetSQuotaInfoDimensionsInfoDetailOutput {
	return o
}

func (o GetSQuotaInfoDimensionsInfoDetailOutput) ToGetSQuotaInfoDimensionsInfoDetailOutputWithContext(ctx context.Context) GetSQuotaInfoDimensionsInfoDetailOutput {
	return o
}

// The value currently in effect and being enforced.
func (o GetSQuotaInfoDimensionsInfoDetailOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoDimensionsInfoDetail) string { return v.Value }).(pulumi.StringOutput)
}

type GetSQuotaInfoDimensionsInfoDetailArrayOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfoDimensionsInfoDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfoDimensionsInfoDetail)(nil)).Elem()
}

func (o GetSQuotaInfoDimensionsInfoDetailArrayOutput) ToGetSQuotaInfoDimensionsInfoDetailArrayOutput() GetSQuotaInfoDimensionsInfoDetailArrayOutput {
	return o
}

func (o GetSQuotaInfoDimensionsInfoDetailArrayOutput) ToGetSQuotaInfoDimensionsInfoDetailArrayOutputWithContext(ctx context.Context) GetSQuotaInfoDimensionsInfoDetailArrayOutput {
	return o
}

func (o GetSQuotaInfoDimensionsInfoDetailArrayOutput) Index(i pulumi.IntInput) GetSQuotaInfoDimensionsInfoDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSQuotaInfoDimensionsInfoDetail {
		return vs[0].([]GetSQuotaInfoDimensionsInfoDetail)[vs[1].(int)]
	}).(GetSQuotaInfoDimensionsInfoDetailOutput)
}

type GetSQuotaInfoQuotaIncreaseEligibility struct {
	// The enumeration of reasons when it is ineligible to request increase adjustment.
	IneligibilityReason string `pulumi:"ineligibilityReason"`
	// Whether a higher quota value can be requested for the quota.
	IsEligible bool `pulumi:"isEligible"`
}

// GetSQuotaInfoQuotaIncreaseEligibilityInput is an input type that accepts GetSQuotaInfoQuotaIncreaseEligibilityArgs and GetSQuotaInfoQuotaIncreaseEligibilityOutput values.
// You can construct a concrete instance of `GetSQuotaInfoQuotaIncreaseEligibilityInput` via:
//
//	GetSQuotaInfoQuotaIncreaseEligibilityArgs{...}
type GetSQuotaInfoQuotaIncreaseEligibilityInput interface {
	pulumi.Input

	ToGetSQuotaInfoQuotaIncreaseEligibilityOutput() GetSQuotaInfoQuotaIncreaseEligibilityOutput
	ToGetSQuotaInfoQuotaIncreaseEligibilityOutputWithContext(context.Context) GetSQuotaInfoQuotaIncreaseEligibilityOutput
}

type GetSQuotaInfoQuotaIncreaseEligibilityArgs struct {
	// The enumeration of reasons when it is ineligible to request increase adjustment.
	IneligibilityReason pulumi.StringInput `pulumi:"ineligibilityReason"`
	// Whether a higher quota value can be requested for the quota.
	IsEligible pulumi.BoolInput `pulumi:"isEligible"`
}

func (GetSQuotaInfoQuotaIncreaseEligibilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfoQuotaIncreaseEligibility)(nil)).Elem()
}

func (i GetSQuotaInfoQuotaIncreaseEligibilityArgs) ToGetSQuotaInfoQuotaIncreaseEligibilityOutput() GetSQuotaInfoQuotaIncreaseEligibilityOutput {
	return i.ToGetSQuotaInfoQuotaIncreaseEligibilityOutputWithContext(context.Background())
}

func (i GetSQuotaInfoQuotaIncreaseEligibilityArgs) ToGetSQuotaInfoQuotaIncreaseEligibilityOutputWithContext(ctx context.Context) GetSQuotaInfoQuotaIncreaseEligibilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfoQuotaIncreaseEligibilityOutput)
}

// GetSQuotaInfoQuotaIncreaseEligibilityArrayInput is an input type that accepts GetSQuotaInfoQuotaIncreaseEligibilityArray and GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput values.
// You can construct a concrete instance of `GetSQuotaInfoQuotaIncreaseEligibilityArrayInput` via:
//
//	GetSQuotaInfoQuotaIncreaseEligibilityArray{ GetSQuotaInfoQuotaIncreaseEligibilityArgs{...} }
type GetSQuotaInfoQuotaIncreaseEligibilityArrayInput interface {
	pulumi.Input

	ToGetSQuotaInfoQuotaIncreaseEligibilityArrayOutput() GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput
	ToGetSQuotaInfoQuotaIncreaseEligibilityArrayOutputWithContext(context.Context) GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput
}

type GetSQuotaInfoQuotaIncreaseEligibilityArray []GetSQuotaInfoQuotaIncreaseEligibilityInput

func (GetSQuotaInfoQuotaIncreaseEligibilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfoQuotaIncreaseEligibility)(nil)).Elem()
}

func (i GetSQuotaInfoQuotaIncreaseEligibilityArray) ToGetSQuotaInfoQuotaIncreaseEligibilityArrayOutput() GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return i.ToGetSQuotaInfoQuotaIncreaseEligibilityArrayOutputWithContext(context.Background())
}

func (i GetSQuotaInfoQuotaIncreaseEligibilityArray) ToGetSQuotaInfoQuotaIncreaseEligibilityArrayOutputWithContext(ctx context.Context) GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput)
}

type GetSQuotaInfoQuotaIncreaseEligibilityOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfoQuotaIncreaseEligibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfoQuotaIncreaseEligibility)(nil)).Elem()
}

func (o GetSQuotaInfoQuotaIncreaseEligibilityOutput) ToGetSQuotaInfoQuotaIncreaseEligibilityOutput() GetSQuotaInfoQuotaIncreaseEligibilityOutput {
	return o
}

func (o GetSQuotaInfoQuotaIncreaseEligibilityOutput) ToGetSQuotaInfoQuotaIncreaseEligibilityOutputWithContext(ctx context.Context) GetSQuotaInfoQuotaIncreaseEligibilityOutput {
	return o
}

// The enumeration of reasons when it is ineligible to request increase adjustment.
func (o GetSQuotaInfoQuotaIncreaseEligibilityOutput) IneligibilityReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfoQuotaIncreaseEligibility) string { return v.IneligibilityReason }).(pulumi.StringOutput)
}

// Whether a higher quota value can be requested for the quota.
func (o GetSQuotaInfoQuotaIncreaseEligibilityOutput) IsEligible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSQuotaInfoQuotaIncreaseEligibility) bool { return v.IsEligible }).(pulumi.BoolOutput)
}

type GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfoQuotaIncreaseEligibility)(nil)).Elem()
}

func (o GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput) ToGetSQuotaInfoQuotaIncreaseEligibilityArrayOutput() GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return o
}

func (o GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput) ToGetSQuotaInfoQuotaIncreaseEligibilityArrayOutputWithContext(ctx context.Context) GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return o
}

func (o GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput) Index(i pulumi.IntInput) GetSQuotaInfoQuotaIncreaseEligibilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSQuotaInfoQuotaIncreaseEligibility {
		return vs[0].([]GetSQuotaInfoQuotaIncreaseEligibility)[vs[1].(int)]
	}).(GetSQuotaInfoQuotaIncreaseEligibilityOutput)
}

type GetSQuotaInfosQuotaInfo struct {
	// (Output) The container type of the QuotaInfo.
	ContainerType string `pulumi:"containerType"`
	// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
	Dimensions []string `pulumi:"dimensions"`
	// (Output) The collection of dimensions info ordered by their dimensions from more specific ones to less specific ones.
	DimensionsInfos []GetSQuotaInfosQuotaInfoDimensionsInfo `pulumi:"dimensionsInfos"`
	// (Output) Whether the quota is a concurrent quota. Concurrent quotas are enforced on the total number of concurrent operations in flight at any given time.
	IsConcurrent bool `pulumi:"isConcurrent"`
	// (Output) Whether the quota value is fixed or adjustable.
	IsFixed bool `pulumi:"isFixed"`
	// (Output) Whether this is a precise quota. A precise quota is tracked with absolute precision. In contrast, an imprecise quota is not tracked with precision.
	IsPrecise bool `pulumi:"isPrecise"`
	// (Output) The metric of the quota. It specifies the resources consumption the quota is defined for, for example: `compute.googleapis.com/cpus`.
	Metric string `pulumi:"metric"`
	// (Output) The display name of the quota metric.
	MetricDisplayName string `pulumi:"metricDisplayName"`
	// (Output) The unit in which the metric value is reported, e.g., `MByte`.
	MetricUnit string `pulumi:"metricUnit"`
	// (Output) Resource name of this QuotaInfo, for example: `projects/123/locations/global/services/compute.googleapis.com/quotaInfos/CpusPerProjectPerRegion`.
	Name string `pulumi:"name"`
	// (Output) The display name of the quota.
	QuotaDisplayName string `pulumi:"quotaDisplayName"`
	QuotaId          string `pulumi:"quotaId"`
	// (Output) Whether it is eligible to request a higher quota value for this quota.
	QuotaIncreaseEligibilities []GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility `pulumi:"quotaIncreaseEligibilities"`
	// (Output) The reset time interval for the quota. Refresh interval applies to rate quota only. Example: "minute" for per minute, "day" for per day, or "10 seconds" for every 10 seconds.
	RefreshInterval string `pulumi:"refreshInterval"`
	// The name of the service in which the quotas are defined.
	Service string `pulumi:"service"`
	// (Output) URI to the page where users can request more quota for the cloud service, for example: `https://console.cloud.google.com/iam-admin/quotas`.
	ServiceRequestQuotaUri string `pulumi:"serviceRequestQuotaUri"`
}

// GetSQuotaInfosQuotaInfoInput is an input type that accepts GetSQuotaInfosQuotaInfoArgs and GetSQuotaInfosQuotaInfoOutput values.
// You can construct a concrete instance of `GetSQuotaInfosQuotaInfoInput` via:
//
//	GetSQuotaInfosQuotaInfoArgs{...}
type GetSQuotaInfosQuotaInfoInput interface {
	pulumi.Input

	ToGetSQuotaInfosQuotaInfoOutput() GetSQuotaInfosQuotaInfoOutput
	ToGetSQuotaInfosQuotaInfoOutputWithContext(context.Context) GetSQuotaInfosQuotaInfoOutput
}

type GetSQuotaInfosQuotaInfoArgs struct {
	// (Output) The container type of the QuotaInfo.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
	Dimensions pulumi.StringArrayInput `pulumi:"dimensions"`
	// (Output) The collection of dimensions info ordered by their dimensions from more specific ones to less specific ones.
	DimensionsInfos GetSQuotaInfosQuotaInfoDimensionsInfoArrayInput `pulumi:"dimensionsInfos"`
	// (Output) Whether the quota is a concurrent quota. Concurrent quotas are enforced on the total number of concurrent operations in flight at any given time.
	IsConcurrent pulumi.BoolInput `pulumi:"isConcurrent"`
	// (Output) Whether the quota value is fixed or adjustable.
	IsFixed pulumi.BoolInput `pulumi:"isFixed"`
	// (Output) Whether this is a precise quota. A precise quota is tracked with absolute precision. In contrast, an imprecise quota is not tracked with precision.
	IsPrecise pulumi.BoolInput `pulumi:"isPrecise"`
	// (Output) The metric of the quota. It specifies the resources consumption the quota is defined for, for example: `compute.googleapis.com/cpus`.
	Metric pulumi.StringInput `pulumi:"metric"`
	// (Output) The display name of the quota metric.
	MetricDisplayName pulumi.StringInput `pulumi:"metricDisplayName"`
	// (Output) The unit in which the metric value is reported, e.g., `MByte`.
	MetricUnit pulumi.StringInput `pulumi:"metricUnit"`
	// (Output) Resource name of this QuotaInfo, for example: `projects/123/locations/global/services/compute.googleapis.com/quotaInfos/CpusPerProjectPerRegion`.
	Name pulumi.StringInput `pulumi:"name"`
	// (Output) The display name of the quota.
	QuotaDisplayName pulumi.StringInput `pulumi:"quotaDisplayName"`
	QuotaId          pulumi.StringInput `pulumi:"quotaId"`
	// (Output) Whether it is eligible to request a higher quota value for this quota.
	QuotaIncreaseEligibilities GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayInput `pulumi:"quotaIncreaseEligibilities"`
	// (Output) The reset time interval for the quota. Refresh interval applies to rate quota only. Example: "minute" for per minute, "day" for per day, or "10 seconds" for every 10 seconds.
	RefreshInterval pulumi.StringInput `pulumi:"refreshInterval"`
	// The name of the service in which the quotas are defined.
	Service pulumi.StringInput `pulumi:"service"`
	// (Output) URI to the page where users can request more quota for the cloud service, for example: `https://console.cloud.google.com/iam-admin/quotas`.
	ServiceRequestQuotaUri pulumi.StringInput `pulumi:"serviceRequestQuotaUri"`
}

func (GetSQuotaInfosQuotaInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfosQuotaInfo)(nil)).Elem()
}

func (i GetSQuotaInfosQuotaInfoArgs) ToGetSQuotaInfosQuotaInfoOutput() GetSQuotaInfosQuotaInfoOutput {
	return i.ToGetSQuotaInfosQuotaInfoOutputWithContext(context.Background())
}

func (i GetSQuotaInfosQuotaInfoArgs) ToGetSQuotaInfosQuotaInfoOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfosQuotaInfoOutput)
}

// GetSQuotaInfosQuotaInfoArrayInput is an input type that accepts GetSQuotaInfosQuotaInfoArray and GetSQuotaInfosQuotaInfoArrayOutput values.
// You can construct a concrete instance of `GetSQuotaInfosQuotaInfoArrayInput` via:
//
//	GetSQuotaInfosQuotaInfoArray{ GetSQuotaInfosQuotaInfoArgs{...} }
type GetSQuotaInfosQuotaInfoArrayInput interface {
	pulumi.Input

	ToGetSQuotaInfosQuotaInfoArrayOutput() GetSQuotaInfosQuotaInfoArrayOutput
	ToGetSQuotaInfosQuotaInfoArrayOutputWithContext(context.Context) GetSQuotaInfosQuotaInfoArrayOutput
}

type GetSQuotaInfosQuotaInfoArray []GetSQuotaInfosQuotaInfoInput

func (GetSQuotaInfosQuotaInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfosQuotaInfo)(nil)).Elem()
}

func (i GetSQuotaInfosQuotaInfoArray) ToGetSQuotaInfosQuotaInfoArrayOutput() GetSQuotaInfosQuotaInfoArrayOutput {
	return i.ToGetSQuotaInfosQuotaInfoArrayOutputWithContext(context.Background())
}

func (i GetSQuotaInfosQuotaInfoArray) ToGetSQuotaInfosQuotaInfoArrayOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfosQuotaInfoArrayOutput)
}

type GetSQuotaInfosQuotaInfoOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfosQuotaInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfosQuotaInfo)(nil)).Elem()
}

func (o GetSQuotaInfosQuotaInfoOutput) ToGetSQuotaInfosQuotaInfoOutput() GetSQuotaInfosQuotaInfoOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoOutput) ToGetSQuotaInfosQuotaInfoOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoOutput {
	return o
}

// (Output) The container type of the QuotaInfo.
func (o GetSQuotaInfosQuotaInfoOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.ContainerType }).(pulumi.StringOutput)
}

// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
func (o GetSQuotaInfosQuotaInfoOutput) Dimensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) []string { return v.Dimensions }).(pulumi.StringArrayOutput)
}

// (Output) The collection of dimensions info ordered by their dimensions from more specific ones to less specific ones.
func (o GetSQuotaInfosQuotaInfoOutput) DimensionsInfos() GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) []GetSQuotaInfosQuotaInfoDimensionsInfo { return v.DimensionsInfos }).(GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput)
}

// (Output) Whether the quota is a concurrent quota. Concurrent quotas are enforced on the total number of concurrent operations in flight at any given time.
func (o GetSQuotaInfosQuotaInfoOutput) IsConcurrent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) bool { return v.IsConcurrent }).(pulumi.BoolOutput)
}

// (Output) Whether the quota value is fixed or adjustable.
func (o GetSQuotaInfosQuotaInfoOutput) IsFixed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) bool { return v.IsFixed }).(pulumi.BoolOutput)
}

// (Output) Whether this is a precise quota. A precise quota is tracked with absolute precision. In contrast, an imprecise quota is not tracked with precision.
func (o GetSQuotaInfosQuotaInfoOutput) IsPrecise() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) bool { return v.IsPrecise }).(pulumi.BoolOutput)
}

// (Output) The metric of the quota. It specifies the resources consumption the quota is defined for, for example: `compute.googleapis.com/cpus`.
func (o GetSQuotaInfosQuotaInfoOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.Metric }).(pulumi.StringOutput)
}

// (Output) The display name of the quota metric.
func (o GetSQuotaInfosQuotaInfoOutput) MetricDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.MetricDisplayName }).(pulumi.StringOutput)
}

// (Output) The unit in which the metric value is reported, e.g., `MByte`.
func (o GetSQuotaInfosQuotaInfoOutput) MetricUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.MetricUnit }).(pulumi.StringOutput)
}

// (Output) Resource name of this QuotaInfo, for example: `projects/123/locations/global/services/compute.googleapis.com/quotaInfos/CpusPerProjectPerRegion`.
func (o GetSQuotaInfosQuotaInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.Name }).(pulumi.StringOutput)
}

// (Output) The display name of the quota.
func (o GetSQuotaInfosQuotaInfoOutput) QuotaDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.QuotaDisplayName }).(pulumi.StringOutput)
}

func (o GetSQuotaInfosQuotaInfoOutput) QuotaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.QuotaId }).(pulumi.StringOutput)
}

// (Output) Whether it is eligible to request a higher quota value for this quota.
func (o GetSQuotaInfosQuotaInfoOutput) QuotaIncreaseEligibilities() GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) []GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility {
		return v.QuotaIncreaseEligibilities
	}).(GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput)
}

// (Output) The reset time interval for the quota. Refresh interval applies to rate quota only. Example: "minute" for per minute, "day" for per day, or "10 seconds" for every 10 seconds.
func (o GetSQuotaInfosQuotaInfoOutput) RefreshInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.RefreshInterval }).(pulumi.StringOutput)
}

// The name of the service in which the quotas are defined.
func (o GetSQuotaInfosQuotaInfoOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.Service }).(pulumi.StringOutput)
}

// (Output) URI to the page where users can request more quota for the cloud service, for example: `https://console.cloud.google.com/iam-admin/quotas`.
func (o GetSQuotaInfosQuotaInfoOutput) ServiceRequestQuotaUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfo) string { return v.ServiceRequestQuotaUri }).(pulumi.StringOutput)
}

type GetSQuotaInfosQuotaInfoArrayOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfosQuotaInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfosQuotaInfo)(nil)).Elem()
}

func (o GetSQuotaInfosQuotaInfoArrayOutput) ToGetSQuotaInfosQuotaInfoArrayOutput() GetSQuotaInfosQuotaInfoArrayOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoArrayOutput) ToGetSQuotaInfosQuotaInfoArrayOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoArrayOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoArrayOutput) Index(i pulumi.IntInput) GetSQuotaInfosQuotaInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSQuotaInfosQuotaInfo {
		return vs[0].([]GetSQuotaInfosQuotaInfo)[vs[1].(int)]
	}).(GetSQuotaInfosQuotaInfoOutput)
}

type GetSQuotaInfosQuotaInfoDimensionsInfo struct {
	// The applicable regions or zones of this dimensions info. The field will be set to `['global']` for quotas that are not per region or per zone. Otherwise, it will be set to the list of locations this dimension info is applicable to.
	ApplicableLocations []string `pulumi:"applicableLocations"`
	// The quota details for a map of dimensions.
	Details []GetSQuotaInfosQuotaInfoDimensionsInfoDetail `pulumi:"details"`
	// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
	Dimensions map[string]interface{} `pulumi:"dimensions"`
}

// GetSQuotaInfosQuotaInfoDimensionsInfoInput is an input type that accepts GetSQuotaInfosQuotaInfoDimensionsInfoArgs and GetSQuotaInfosQuotaInfoDimensionsInfoOutput values.
// You can construct a concrete instance of `GetSQuotaInfosQuotaInfoDimensionsInfoInput` via:
//
//	GetSQuotaInfosQuotaInfoDimensionsInfoArgs{...}
type GetSQuotaInfosQuotaInfoDimensionsInfoInput interface {
	pulumi.Input

	ToGetSQuotaInfosQuotaInfoDimensionsInfoOutput() GetSQuotaInfosQuotaInfoDimensionsInfoOutput
	ToGetSQuotaInfosQuotaInfoDimensionsInfoOutputWithContext(context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoOutput
}

type GetSQuotaInfosQuotaInfoDimensionsInfoArgs struct {
	// The applicable regions or zones of this dimensions info. The field will be set to `['global']` for quotas that are not per region or per zone. Otherwise, it will be set to the list of locations this dimension info is applicable to.
	ApplicableLocations pulumi.StringArrayInput `pulumi:"applicableLocations"`
	// The quota details for a map of dimensions.
	Details GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayInput `pulumi:"details"`
	// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
	Dimensions pulumi.MapInput `pulumi:"dimensions"`
}

func (GetSQuotaInfosQuotaInfoDimensionsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfosQuotaInfoDimensionsInfo)(nil)).Elem()
}

func (i GetSQuotaInfosQuotaInfoDimensionsInfoArgs) ToGetSQuotaInfosQuotaInfoDimensionsInfoOutput() GetSQuotaInfosQuotaInfoDimensionsInfoOutput {
	return i.ToGetSQuotaInfosQuotaInfoDimensionsInfoOutputWithContext(context.Background())
}

func (i GetSQuotaInfosQuotaInfoDimensionsInfoArgs) ToGetSQuotaInfosQuotaInfoDimensionsInfoOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfosQuotaInfoDimensionsInfoOutput)
}

// GetSQuotaInfosQuotaInfoDimensionsInfoArrayInput is an input type that accepts GetSQuotaInfosQuotaInfoDimensionsInfoArray and GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput values.
// You can construct a concrete instance of `GetSQuotaInfosQuotaInfoDimensionsInfoArrayInput` via:
//
//	GetSQuotaInfosQuotaInfoDimensionsInfoArray{ GetSQuotaInfosQuotaInfoDimensionsInfoArgs{...} }
type GetSQuotaInfosQuotaInfoDimensionsInfoArrayInput interface {
	pulumi.Input

	ToGetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput() GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput
	ToGetSQuotaInfosQuotaInfoDimensionsInfoArrayOutputWithContext(context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput
}

type GetSQuotaInfosQuotaInfoDimensionsInfoArray []GetSQuotaInfosQuotaInfoDimensionsInfoInput

func (GetSQuotaInfosQuotaInfoDimensionsInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfosQuotaInfoDimensionsInfo)(nil)).Elem()
}

func (i GetSQuotaInfosQuotaInfoDimensionsInfoArray) ToGetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput() GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput {
	return i.ToGetSQuotaInfosQuotaInfoDimensionsInfoArrayOutputWithContext(context.Background())
}

func (i GetSQuotaInfosQuotaInfoDimensionsInfoArray) ToGetSQuotaInfosQuotaInfoDimensionsInfoArrayOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput)
}

type GetSQuotaInfosQuotaInfoDimensionsInfoOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfosQuotaInfoDimensionsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfosQuotaInfoDimensionsInfo)(nil)).Elem()
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoOutput) ToGetSQuotaInfosQuotaInfoDimensionsInfoOutput() GetSQuotaInfosQuotaInfoDimensionsInfoOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoOutput) ToGetSQuotaInfosQuotaInfoDimensionsInfoOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoOutput {
	return o
}

// The applicable regions or zones of this dimensions info. The field will be set to `['global']` for quotas that are not per region or per zone. Otherwise, it will be set to the list of locations this dimension info is applicable to.
func (o GetSQuotaInfosQuotaInfoDimensionsInfoOutput) ApplicableLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfoDimensionsInfo) []string { return v.ApplicableLocations }).(pulumi.StringArrayOutput)
}

// The quota details for a map of dimensions.
func (o GetSQuotaInfosQuotaInfoDimensionsInfoOutput) Details() GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfoDimensionsInfo) []GetSQuotaInfosQuotaInfoDimensionsInfoDetail {
		return v.Details
	}).(GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput)
}

// The map of dimensions for this dimensions info. The key of a map entry is "region", "zone" or the name of a service specific dimension, and the value of a map entry is the value of the dimension. If a dimension does not appear in the map of dimensions, the dimensions info applies to all the dimension values except for those that have another DimenisonInfo instance configured for the specific value. Example: {"provider" : "Foo Inc"} where "provider" is a service specific dimension of a quota.
func (o GetSQuotaInfosQuotaInfoDimensionsInfoOutput) Dimensions() pulumi.MapOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfoDimensionsInfo) map[string]interface{} { return v.Dimensions }).(pulumi.MapOutput)
}

type GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfosQuotaInfoDimensionsInfo)(nil)).Elem()
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput) ToGetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput() GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput) ToGetSQuotaInfosQuotaInfoDimensionsInfoArrayOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput) Index(i pulumi.IntInput) GetSQuotaInfosQuotaInfoDimensionsInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSQuotaInfosQuotaInfoDimensionsInfo {
		return vs[0].([]GetSQuotaInfosQuotaInfoDimensionsInfo)[vs[1].(int)]
	}).(GetSQuotaInfosQuotaInfoDimensionsInfoOutput)
}

type GetSQuotaInfosQuotaInfoDimensionsInfoDetail struct {
	// The value currently in effect and being enforced.
	Value string `pulumi:"value"`
}

// GetSQuotaInfosQuotaInfoDimensionsInfoDetailInput is an input type that accepts GetSQuotaInfosQuotaInfoDimensionsInfoDetailArgs and GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput values.
// You can construct a concrete instance of `GetSQuotaInfosQuotaInfoDimensionsInfoDetailInput` via:
//
//	GetSQuotaInfosQuotaInfoDimensionsInfoDetailArgs{...}
type GetSQuotaInfosQuotaInfoDimensionsInfoDetailInput interface {
	pulumi.Input

	ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput() GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput
	ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailOutputWithContext(context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput
}

type GetSQuotaInfosQuotaInfoDimensionsInfoDetailArgs struct {
	// The value currently in effect and being enforced.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSQuotaInfosQuotaInfoDimensionsInfoDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfosQuotaInfoDimensionsInfoDetail)(nil)).Elem()
}

func (i GetSQuotaInfosQuotaInfoDimensionsInfoDetailArgs) ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput() GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput {
	return i.ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailOutputWithContext(context.Background())
}

func (i GetSQuotaInfosQuotaInfoDimensionsInfoDetailArgs) ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput)
}

// GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayInput is an input type that accepts GetSQuotaInfosQuotaInfoDimensionsInfoDetailArray and GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput values.
// You can construct a concrete instance of `GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayInput` via:
//
//	GetSQuotaInfosQuotaInfoDimensionsInfoDetailArray{ GetSQuotaInfosQuotaInfoDimensionsInfoDetailArgs{...} }
type GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayInput interface {
	pulumi.Input

	ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput() GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput
	ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutputWithContext(context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput
}

type GetSQuotaInfosQuotaInfoDimensionsInfoDetailArray []GetSQuotaInfosQuotaInfoDimensionsInfoDetailInput

func (GetSQuotaInfosQuotaInfoDimensionsInfoDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfosQuotaInfoDimensionsInfoDetail)(nil)).Elem()
}

func (i GetSQuotaInfosQuotaInfoDimensionsInfoDetailArray) ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput() GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput {
	return i.ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutputWithContext(context.Background())
}

func (i GetSQuotaInfosQuotaInfoDimensionsInfoDetailArray) ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput)
}

type GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfosQuotaInfoDimensionsInfoDetail)(nil)).Elem()
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput) ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput() GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput) ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput {
	return o
}

// The value currently in effect and being enforced.
func (o GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfoDimensionsInfoDetail) string { return v.Value }).(pulumi.StringOutput)
}

type GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfosQuotaInfoDimensionsInfoDetail)(nil)).Elem()
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput) ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput() GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput) ToGetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput) Index(i pulumi.IntInput) GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSQuotaInfosQuotaInfoDimensionsInfoDetail {
		return vs[0].([]GetSQuotaInfosQuotaInfoDimensionsInfoDetail)[vs[1].(int)]
	}).(GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput)
}

type GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility struct {
	// The enumeration of reasons when it is ineligible to request increase adjustment.
	IneligibilityReason string `pulumi:"ineligibilityReason"`
	// Whether a higher quota value can be requested for the quota.
	IsEligible bool `pulumi:"isEligible"`
}

// GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityInput is an input type that accepts GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArgs and GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput values.
// You can construct a concrete instance of `GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityInput` via:
//
//	GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArgs{...}
type GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityInput interface {
	pulumi.Input

	ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput() GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput
	ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutputWithContext(context.Context) GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput
}

type GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArgs struct {
	// The enumeration of reasons when it is ineligible to request increase adjustment.
	IneligibilityReason pulumi.StringInput `pulumi:"ineligibilityReason"`
	// Whether a higher quota value can be requested for the quota.
	IsEligible pulumi.BoolInput `pulumi:"isEligible"`
}

func (GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility)(nil)).Elem()
}

func (i GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArgs) ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput() GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput {
	return i.ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutputWithContext(context.Background())
}

func (i GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArgs) ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput)
}

// GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayInput is an input type that accepts GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArray and GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput values.
// You can construct a concrete instance of `GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayInput` via:
//
//	GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArray{ GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArgs{...} }
type GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayInput interface {
	pulumi.Input

	ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput() GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput
	ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutputWithContext(context.Context) GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput
}

type GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArray []GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityInput

func (GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility)(nil)).Elem()
}

func (i GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArray) ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput() GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return i.ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutputWithContext(context.Background())
}

func (i GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArray) ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput)
}

type GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility)(nil)).Elem()
}

func (o GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput) ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput() GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput) ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput {
	return o
}

// The enumeration of reasons when it is ineligible to request increase adjustment.
func (o GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput) IneligibilityReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility) string { return v.IneligibilityReason }).(pulumi.StringOutput)
}

// Whether a higher quota value can be requested for the quota.
func (o GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput) IsEligible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility) bool { return v.IsEligible }).(pulumi.BoolOutput)
}

type GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput struct{ *pulumi.OutputState }

func (GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility)(nil)).Elem()
}

func (o GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput) ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput() GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput) ToGetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutputWithContext(ctx context.Context) GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput {
	return o
}

func (o GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput) Index(i pulumi.IntInput) GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility {
		return vs[0].([]GetSQuotaInfosQuotaInfoQuotaIncreaseEligibility)[vs[1].(int)]
	}).(GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SQuotaPreferenceQuotaConfigInput)(nil)).Elem(), SQuotaPreferenceQuotaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SQuotaPreferenceQuotaConfigPtrInput)(nil)).Elem(), SQuotaPreferenceQuotaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfoDimensionsInfoInput)(nil)).Elem(), GetSQuotaInfoDimensionsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfoDimensionsInfoArrayInput)(nil)).Elem(), GetSQuotaInfoDimensionsInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfoDimensionsInfoDetailInput)(nil)).Elem(), GetSQuotaInfoDimensionsInfoDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfoDimensionsInfoDetailArrayInput)(nil)).Elem(), GetSQuotaInfoDimensionsInfoDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfoQuotaIncreaseEligibilityInput)(nil)).Elem(), GetSQuotaInfoQuotaIncreaseEligibilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfoQuotaIncreaseEligibilityArrayInput)(nil)).Elem(), GetSQuotaInfoQuotaIncreaseEligibilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfosQuotaInfoInput)(nil)).Elem(), GetSQuotaInfosQuotaInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfosQuotaInfoArrayInput)(nil)).Elem(), GetSQuotaInfosQuotaInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfosQuotaInfoDimensionsInfoInput)(nil)).Elem(), GetSQuotaInfosQuotaInfoDimensionsInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfosQuotaInfoDimensionsInfoArrayInput)(nil)).Elem(), GetSQuotaInfosQuotaInfoDimensionsInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfosQuotaInfoDimensionsInfoDetailInput)(nil)).Elem(), GetSQuotaInfosQuotaInfoDimensionsInfoDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayInput)(nil)).Elem(), GetSQuotaInfosQuotaInfoDimensionsInfoDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityInput)(nil)).Elem(), GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayInput)(nil)).Elem(), GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArray{})
	pulumi.RegisterOutputType(SQuotaPreferenceQuotaConfigOutput{})
	pulumi.RegisterOutputType(SQuotaPreferenceQuotaConfigPtrOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfoDimensionsInfoOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfoDimensionsInfoArrayOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfoDimensionsInfoDetailOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfoDimensionsInfoDetailArrayOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfoQuotaIncreaseEligibilityOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfoQuotaIncreaseEligibilityArrayOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfosQuotaInfoOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfosQuotaInfoArrayOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfosQuotaInfoDimensionsInfoOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfosQuotaInfoDimensionsInfoArrayOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfosQuotaInfoDimensionsInfoDetailOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfosQuotaInfoDimensionsInfoDetailArrayOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityOutput{})
	pulumi.RegisterOutputType(GetSQuotaInfosQuotaInfoQuotaIncreaseEligibilityArrayOutput{})
}
