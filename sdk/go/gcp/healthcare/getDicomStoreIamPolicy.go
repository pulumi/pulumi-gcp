// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthcare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the current IAM policy data for a Google Cloud Healthcare DICOM store.
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/healthcare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := healthcare.LookupDicomStoreIamPolicy(ctx, &healthcare.LookupDicomStoreIamPolicyArgs{
//				DicomStoreId: google_healthcare_dicom_store.Dicom_store.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDicomStoreIamPolicy(ctx *pulumi.Context, args *LookupDicomStoreIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupDicomStoreIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDicomStoreIamPolicyResult
	err := ctx.Invoke("gcp:healthcare/getDicomStoreIamPolicy:getDicomStoreIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDicomStoreIamPolicy.
type LookupDicomStoreIamPolicyArgs struct {
	// The DICOM store ID, in the form
	// `{project_id}/{location_name}/{dataset_name}/{dicom_store_name}` or
	// `{location_name}/{dataset_name}/{dicom_store_name}`. In the second form, the provider's
	// project setting will be used as a fallback.
	DicomStoreId string `pulumi:"dicomStoreId"`
}

// A collection of values returned by getDicomStoreIamPolicy.
type LookupDicomStoreIamPolicyResult struct {
	DicomStoreId string `pulumi:"dicomStoreId"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Computed) The policy data
	PolicyData string `pulumi:"policyData"`
}

func LookupDicomStoreIamPolicyOutput(ctx *pulumi.Context, args LookupDicomStoreIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupDicomStoreIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDicomStoreIamPolicyResult, error) {
			args := v.(LookupDicomStoreIamPolicyArgs)
			r, err := LookupDicomStoreIamPolicy(ctx, &args, opts...)
			var s LookupDicomStoreIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDicomStoreIamPolicyResultOutput)
}

// A collection of arguments for invoking getDicomStoreIamPolicy.
type LookupDicomStoreIamPolicyOutputArgs struct {
	// The DICOM store ID, in the form
	// `{project_id}/{location_name}/{dataset_name}/{dicom_store_name}` or
	// `{location_name}/{dataset_name}/{dicom_store_name}`. In the second form, the provider's
	// project setting will be used as a fallback.
	DicomStoreId pulumi.StringInput `pulumi:"dicomStoreId"`
}

func (LookupDicomStoreIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDicomStoreIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDicomStoreIamPolicy.
type LookupDicomStoreIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupDicomStoreIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDicomStoreIamPolicyResult)(nil)).Elem()
}

func (o LookupDicomStoreIamPolicyResultOutput) ToLookupDicomStoreIamPolicyResultOutput() LookupDicomStoreIamPolicyResultOutput {
	return o
}

func (o LookupDicomStoreIamPolicyResultOutput) ToLookupDicomStoreIamPolicyResultOutputWithContext(ctx context.Context) LookupDicomStoreIamPolicyResultOutput {
	return o
}

func (o LookupDicomStoreIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDicomStoreIamPolicyResult] {
	return pulumix.Output[LookupDicomStoreIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupDicomStoreIamPolicyResultOutput) DicomStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDicomStoreIamPolicyResult) string { return v.DicomStoreId }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupDicomStoreIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDicomStoreIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDicomStoreIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDicomStoreIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Computed) The policy data
func (o LookupDicomStoreIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDicomStoreIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDicomStoreIamPolicyResultOutput{})
}
