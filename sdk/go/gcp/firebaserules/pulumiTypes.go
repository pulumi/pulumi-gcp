// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package firebaserules

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RulesetMetadata struct {
	Services []string `pulumi:"services"`
}

// RulesetMetadataInput is an input type that accepts RulesetMetadataArgs and RulesetMetadataOutput values.
// You can construct a concrete instance of `RulesetMetadataInput` via:
//
//          RulesetMetadataArgs{...}
type RulesetMetadataInput interface {
	pulumi.Input

	ToRulesetMetadataOutput() RulesetMetadataOutput
	ToRulesetMetadataOutputWithContext(context.Context) RulesetMetadataOutput
}

type RulesetMetadataArgs struct {
	Services pulumi.StringArrayInput `pulumi:"services"`
}

func (RulesetMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetMetadata)(nil)).Elem()
}

func (i RulesetMetadataArgs) ToRulesetMetadataOutput() RulesetMetadataOutput {
	return i.ToRulesetMetadataOutputWithContext(context.Background())
}

func (i RulesetMetadataArgs) ToRulesetMetadataOutputWithContext(ctx context.Context) RulesetMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetMetadataOutput)
}

// RulesetMetadataArrayInput is an input type that accepts RulesetMetadataArray and RulesetMetadataArrayOutput values.
// You can construct a concrete instance of `RulesetMetadataArrayInput` via:
//
//          RulesetMetadataArray{ RulesetMetadataArgs{...} }
type RulesetMetadataArrayInput interface {
	pulumi.Input

	ToRulesetMetadataArrayOutput() RulesetMetadataArrayOutput
	ToRulesetMetadataArrayOutputWithContext(context.Context) RulesetMetadataArrayOutput
}

type RulesetMetadataArray []RulesetMetadataInput

func (RulesetMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetMetadata)(nil)).Elem()
}

func (i RulesetMetadataArray) ToRulesetMetadataArrayOutput() RulesetMetadataArrayOutput {
	return i.ToRulesetMetadataArrayOutputWithContext(context.Background())
}

func (i RulesetMetadataArray) ToRulesetMetadataArrayOutputWithContext(ctx context.Context) RulesetMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetMetadataArrayOutput)
}

type RulesetMetadataOutput struct{ *pulumi.OutputState }

func (RulesetMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetMetadata)(nil)).Elem()
}

func (o RulesetMetadataOutput) ToRulesetMetadataOutput() RulesetMetadataOutput {
	return o
}

func (o RulesetMetadataOutput) ToRulesetMetadataOutputWithContext(ctx context.Context) RulesetMetadataOutput {
	return o
}

func (o RulesetMetadataOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesetMetadata) []string { return v.Services }).(pulumi.StringArrayOutput)
}

type RulesetMetadataArrayOutput struct{ *pulumi.OutputState }

func (RulesetMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetMetadata)(nil)).Elem()
}

func (o RulesetMetadataArrayOutput) ToRulesetMetadataArrayOutput() RulesetMetadataArrayOutput {
	return o
}

func (o RulesetMetadataArrayOutput) ToRulesetMetadataArrayOutputWithContext(ctx context.Context) RulesetMetadataArrayOutput {
	return o
}

func (o RulesetMetadataArrayOutput) Index(i pulumi.IntInput) RulesetMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesetMetadata {
		return vs[0].([]RulesetMetadata)[vs[1].(int)]
	}).(RulesetMetadataOutput)
}

type RulesetSource struct {
	// `File` set constituting the `Source` bundle.
	Files []RulesetSourceFile `pulumi:"files"`
	// `Language` of the `Source` bundle. If unspecified, the language will default to `FIREBASE_RULES`. Possible values: LANGUAGE_UNSPECIFIED, FIREBASE_RULES, EVENT_FLOW_TRIGGERS
	Language *string `pulumi:"language"`
}

// RulesetSourceInput is an input type that accepts RulesetSourceArgs and RulesetSourceOutput values.
// You can construct a concrete instance of `RulesetSourceInput` via:
//
//          RulesetSourceArgs{...}
type RulesetSourceInput interface {
	pulumi.Input

	ToRulesetSourceOutput() RulesetSourceOutput
	ToRulesetSourceOutputWithContext(context.Context) RulesetSourceOutput
}

type RulesetSourceArgs struct {
	// `File` set constituting the `Source` bundle.
	Files RulesetSourceFileArrayInput `pulumi:"files"`
	// `Language` of the `Source` bundle. If unspecified, the language will default to `FIREBASE_RULES`. Possible values: LANGUAGE_UNSPECIFIED, FIREBASE_RULES, EVENT_FLOW_TRIGGERS
	Language pulumi.StringPtrInput `pulumi:"language"`
}

func (RulesetSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetSource)(nil)).Elem()
}

func (i RulesetSourceArgs) ToRulesetSourceOutput() RulesetSourceOutput {
	return i.ToRulesetSourceOutputWithContext(context.Background())
}

func (i RulesetSourceArgs) ToRulesetSourceOutputWithContext(ctx context.Context) RulesetSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetSourceOutput)
}

func (i RulesetSourceArgs) ToRulesetSourcePtrOutput() RulesetSourcePtrOutput {
	return i.ToRulesetSourcePtrOutputWithContext(context.Background())
}

func (i RulesetSourceArgs) ToRulesetSourcePtrOutputWithContext(ctx context.Context) RulesetSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetSourceOutput).ToRulesetSourcePtrOutputWithContext(ctx)
}

// RulesetSourcePtrInput is an input type that accepts RulesetSourceArgs, RulesetSourcePtr and RulesetSourcePtrOutput values.
// You can construct a concrete instance of `RulesetSourcePtrInput` via:
//
//          RulesetSourceArgs{...}
//
//  or:
//
//          nil
type RulesetSourcePtrInput interface {
	pulumi.Input

	ToRulesetSourcePtrOutput() RulesetSourcePtrOutput
	ToRulesetSourcePtrOutputWithContext(context.Context) RulesetSourcePtrOutput
}

type rulesetSourcePtrType RulesetSourceArgs

func RulesetSourcePtr(v *RulesetSourceArgs) RulesetSourcePtrInput {
	return (*rulesetSourcePtrType)(v)
}

func (*rulesetSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetSource)(nil)).Elem()
}

func (i *rulesetSourcePtrType) ToRulesetSourcePtrOutput() RulesetSourcePtrOutput {
	return i.ToRulesetSourcePtrOutputWithContext(context.Background())
}

func (i *rulesetSourcePtrType) ToRulesetSourcePtrOutputWithContext(ctx context.Context) RulesetSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetSourcePtrOutput)
}

type RulesetSourceOutput struct{ *pulumi.OutputState }

func (RulesetSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetSource)(nil)).Elem()
}

func (o RulesetSourceOutput) ToRulesetSourceOutput() RulesetSourceOutput {
	return o
}

func (o RulesetSourceOutput) ToRulesetSourceOutputWithContext(ctx context.Context) RulesetSourceOutput {
	return o
}

func (o RulesetSourceOutput) ToRulesetSourcePtrOutput() RulesetSourcePtrOutput {
	return o.ToRulesetSourcePtrOutputWithContext(context.Background())
}

func (o RulesetSourceOutput) ToRulesetSourcePtrOutputWithContext(ctx context.Context) RulesetSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulesetSource) *RulesetSource {
		return &v
	}).(RulesetSourcePtrOutput)
}

// `File` set constituting the `Source` bundle.
func (o RulesetSourceOutput) Files() RulesetSourceFileArrayOutput {
	return o.ApplyT(func(v RulesetSource) []RulesetSourceFile { return v.Files }).(RulesetSourceFileArrayOutput)
}

// `Language` of the `Source` bundle. If unspecified, the language will default to `FIREBASE_RULES`. Possible values: LANGUAGE_UNSPECIFIED, FIREBASE_RULES, EVENT_FLOW_TRIGGERS
func (o RulesetSourceOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetSource) *string { return v.Language }).(pulumi.StringPtrOutput)
}

type RulesetSourcePtrOutput struct{ *pulumi.OutputState }

func (RulesetSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulesetSource)(nil)).Elem()
}

func (o RulesetSourcePtrOutput) ToRulesetSourcePtrOutput() RulesetSourcePtrOutput {
	return o
}

func (o RulesetSourcePtrOutput) ToRulesetSourcePtrOutputWithContext(ctx context.Context) RulesetSourcePtrOutput {
	return o
}

func (o RulesetSourcePtrOutput) Elem() RulesetSourceOutput {
	return o.ApplyT(func(v *RulesetSource) RulesetSource {
		if v != nil {
			return *v
		}
		var ret RulesetSource
		return ret
	}).(RulesetSourceOutput)
}

// `File` set constituting the `Source` bundle.
func (o RulesetSourcePtrOutput) Files() RulesetSourceFileArrayOutput {
	return o.ApplyT(func(v *RulesetSource) []RulesetSourceFile {
		if v == nil {
			return nil
		}
		return v.Files
	}).(RulesetSourceFileArrayOutput)
}

// `Language` of the `Source` bundle. If unspecified, the language will default to `FIREBASE_RULES`. Possible values: LANGUAGE_UNSPECIFIED, FIREBASE_RULES, EVENT_FLOW_TRIGGERS
func (o RulesetSourcePtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RulesetSource) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

type RulesetSourceFile struct {
	// Textual Content.
	Content string `pulumi:"content"`
	// Fingerprint (e.g. github sha) associated with the `File`.
	Fingerprint *string `pulumi:"fingerprint"`
	// File name.
	Name string `pulumi:"name"`
}

// RulesetSourceFileInput is an input type that accepts RulesetSourceFileArgs and RulesetSourceFileOutput values.
// You can construct a concrete instance of `RulesetSourceFileInput` via:
//
//          RulesetSourceFileArgs{...}
type RulesetSourceFileInput interface {
	pulumi.Input

	ToRulesetSourceFileOutput() RulesetSourceFileOutput
	ToRulesetSourceFileOutputWithContext(context.Context) RulesetSourceFileOutput
}

type RulesetSourceFileArgs struct {
	// Textual Content.
	Content pulumi.StringInput `pulumi:"content"`
	// Fingerprint (e.g. github sha) associated with the `File`.
	Fingerprint pulumi.StringPtrInput `pulumi:"fingerprint"`
	// File name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RulesetSourceFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetSourceFile)(nil)).Elem()
}

func (i RulesetSourceFileArgs) ToRulesetSourceFileOutput() RulesetSourceFileOutput {
	return i.ToRulesetSourceFileOutputWithContext(context.Background())
}

func (i RulesetSourceFileArgs) ToRulesetSourceFileOutputWithContext(ctx context.Context) RulesetSourceFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetSourceFileOutput)
}

// RulesetSourceFileArrayInput is an input type that accepts RulesetSourceFileArray and RulesetSourceFileArrayOutput values.
// You can construct a concrete instance of `RulesetSourceFileArrayInput` via:
//
//          RulesetSourceFileArray{ RulesetSourceFileArgs{...} }
type RulesetSourceFileArrayInput interface {
	pulumi.Input

	ToRulesetSourceFileArrayOutput() RulesetSourceFileArrayOutput
	ToRulesetSourceFileArrayOutputWithContext(context.Context) RulesetSourceFileArrayOutput
}

type RulesetSourceFileArray []RulesetSourceFileInput

func (RulesetSourceFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetSourceFile)(nil)).Elem()
}

func (i RulesetSourceFileArray) ToRulesetSourceFileArrayOutput() RulesetSourceFileArrayOutput {
	return i.ToRulesetSourceFileArrayOutputWithContext(context.Background())
}

func (i RulesetSourceFileArray) ToRulesetSourceFileArrayOutputWithContext(ctx context.Context) RulesetSourceFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesetSourceFileArrayOutput)
}

type RulesetSourceFileOutput struct{ *pulumi.OutputState }

func (RulesetSourceFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesetSourceFile)(nil)).Elem()
}

func (o RulesetSourceFileOutput) ToRulesetSourceFileOutput() RulesetSourceFileOutput {
	return o
}

func (o RulesetSourceFileOutput) ToRulesetSourceFileOutputWithContext(ctx context.Context) RulesetSourceFileOutput {
	return o
}

// Textual Content.
func (o RulesetSourceFileOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v RulesetSourceFile) string { return v.Content }).(pulumi.StringOutput)
}

// Fingerprint (e.g. github sha) associated with the `File`.
func (o RulesetSourceFileOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesetSourceFile) *string { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

// File name.
func (o RulesetSourceFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RulesetSourceFile) string { return v.Name }).(pulumi.StringOutput)
}

type RulesetSourceFileArrayOutput struct{ *pulumi.OutputState }

func (RulesetSourceFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesetSourceFile)(nil)).Elem()
}

func (o RulesetSourceFileArrayOutput) ToRulesetSourceFileArrayOutput() RulesetSourceFileArrayOutput {
	return o
}

func (o RulesetSourceFileArrayOutput) ToRulesetSourceFileArrayOutputWithContext(ctx context.Context) RulesetSourceFileArrayOutput {
	return o
}

func (o RulesetSourceFileArrayOutput) Index(i pulumi.IntInput) RulesetSourceFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesetSourceFile {
		return vs[0].([]RulesetSourceFile)[vs[1].(int)]
	}).(RulesetSourceFileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetMetadataInput)(nil)).Elem(), RulesetMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetMetadataArrayInput)(nil)).Elem(), RulesetMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetSourceInput)(nil)).Elem(), RulesetSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetSourcePtrInput)(nil)).Elem(), RulesetSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetSourceFileInput)(nil)).Elem(), RulesetSourceFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesetSourceFileArrayInput)(nil)).Elem(), RulesetSourceFileArray{})
	pulumi.RegisterOutputType(RulesetMetadataOutput{})
	pulumi.RegisterOutputType(RulesetMetadataArrayOutput{})
	pulumi.RegisterOutputType(RulesetSourceOutput{})
	pulumi.RegisterOutputType(RulesetSourcePtrOutput{})
	pulumi.RegisterOutputType(RulesetSourceFileOutput{})
	pulumi.RegisterOutputType(RulesetSourceFileArrayOutput{})
}
