// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privilegedaccessmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EntitlementAdditionalNotificationTargets struct {
	// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
	AdminEmailRecipients []string `pulumi:"adminEmailRecipients"`
	// Optional. Additional email address to be notified about an eligible entitlement.
	RequesterEmailRecipients []string `pulumi:"requesterEmailRecipients"`
}

// EntitlementAdditionalNotificationTargetsInput is an input type that accepts EntitlementAdditionalNotificationTargetsArgs and EntitlementAdditionalNotificationTargetsOutput values.
// You can construct a concrete instance of `EntitlementAdditionalNotificationTargetsInput` via:
//
//	EntitlementAdditionalNotificationTargetsArgs{...}
type EntitlementAdditionalNotificationTargetsInput interface {
	pulumi.Input

	ToEntitlementAdditionalNotificationTargetsOutput() EntitlementAdditionalNotificationTargetsOutput
	ToEntitlementAdditionalNotificationTargetsOutputWithContext(context.Context) EntitlementAdditionalNotificationTargetsOutput
}

type EntitlementAdditionalNotificationTargetsArgs struct {
	// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
	AdminEmailRecipients pulumi.StringArrayInput `pulumi:"adminEmailRecipients"`
	// Optional. Additional email address to be notified about an eligible entitlement.
	RequesterEmailRecipients pulumi.StringArrayInput `pulumi:"requesterEmailRecipients"`
}

func (EntitlementAdditionalNotificationTargetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementAdditionalNotificationTargets)(nil)).Elem()
}

func (i EntitlementAdditionalNotificationTargetsArgs) ToEntitlementAdditionalNotificationTargetsOutput() EntitlementAdditionalNotificationTargetsOutput {
	return i.ToEntitlementAdditionalNotificationTargetsOutputWithContext(context.Background())
}

func (i EntitlementAdditionalNotificationTargetsArgs) ToEntitlementAdditionalNotificationTargetsOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementAdditionalNotificationTargetsOutput)
}

func (i EntitlementAdditionalNotificationTargetsArgs) ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput {
	return i.ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(context.Background())
}

func (i EntitlementAdditionalNotificationTargetsArgs) ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementAdditionalNotificationTargetsOutput).ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx)
}

// EntitlementAdditionalNotificationTargetsPtrInput is an input type that accepts EntitlementAdditionalNotificationTargetsArgs, EntitlementAdditionalNotificationTargetsPtr and EntitlementAdditionalNotificationTargetsPtrOutput values.
// You can construct a concrete instance of `EntitlementAdditionalNotificationTargetsPtrInput` via:
//
//	        EntitlementAdditionalNotificationTargetsArgs{...}
//
//	or:
//
//	        nil
type EntitlementAdditionalNotificationTargetsPtrInput interface {
	pulumi.Input

	ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput
	ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(context.Context) EntitlementAdditionalNotificationTargetsPtrOutput
}

type entitlementAdditionalNotificationTargetsPtrType EntitlementAdditionalNotificationTargetsArgs

func EntitlementAdditionalNotificationTargetsPtr(v *EntitlementAdditionalNotificationTargetsArgs) EntitlementAdditionalNotificationTargetsPtrInput {
	return (*entitlementAdditionalNotificationTargetsPtrType)(v)
}

func (*entitlementAdditionalNotificationTargetsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementAdditionalNotificationTargets)(nil)).Elem()
}

func (i *entitlementAdditionalNotificationTargetsPtrType) ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput {
	return i.ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(context.Background())
}

func (i *entitlementAdditionalNotificationTargetsPtrType) ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementAdditionalNotificationTargetsPtrOutput)
}

type EntitlementAdditionalNotificationTargetsOutput struct{ *pulumi.OutputState }

func (EntitlementAdditionalNotificationTargetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementAdditionalNotificationTargets)(nil)).Elem()
}

func (o EntitlementAdditionalNotificationTargetsOutput) ToEntitlementAdditionalNotificationTargetsOutput() EntitlementAdditionalNotificationTargetsOutput {
	return o
}

func (o EntitlementAdditionalNotificationTargetsOutput) ToEntitlementAdditionalNotificationTargetsOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsOutput {
	return o
}

func (o EntitlementAdditionalNotificationTargetsOutput) ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput {
	return o.ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(context.Background())
}

func (o EntitlementAdditionalNotificationTargetsOutput) ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementAdditionalNotificationTargets) *EntitlementAdditionalNotificationTargets {
		return &v
	}).(EntitlementAdditionalNotificationTargetsPtrOutput)
}

// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
func (o EntitlementAdditionalNotificationTargetsOutput) AdminEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementAdditionalNotificationTargets) []string { return v.AdminEmailRecipients }).(pulumi.StringArrayOutput)
}

// Optional. Additional email address to be notified about an eligible entitlement.
func (o EntitlementAdditionalNotificationTargetsOutput) RequesterEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementAdditionalNotificationTargets) []string { return v.RequesterEmailRecipients }).(pulumi.StringArrayOutput)
}

type EntitlementAdditionalNotificationTargetsPtrOutput struct{ *pulumi.OutputState }

func (EntitlementAdditionalNotificationTargetsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementAdditionalNotificationTargets)(nil)).Elem()
}

func (o EntitlementAdditionalNotificationTargetsPtrOutput) ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput {
	return o
}

func (o EntitlementAdditionalNotificationTargetsPtrOutput) ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsPtrOutput {
	return o
}

func (o EntitlementAdditionalNotificationTargetsPtrOutput) Elem() EntitlementAdditionalNotificationTargetsOutput {
	return o.ApplyT(func(v *EntitlementAdditionalNotificationTargets) EntitlementAdditionalNotificationTargets {
		if v != nil {
			return *v
		}
		var ret EntitlementAdditionalNotificationTargets
		return ret
	}).(EntitlementAdditionalNotificationTargetsOutput)
}

// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
func (o EntitlementAdditionalNotificationTargetsPtrOutput) AdminEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EntitlementAdditionalNotificationTargets) []string {
		if v == nil {
			return nil
		}
		return v.AdminEmailRecipients
	}).(pulumi.StringArrayOutput)
}

// Optional. Additional email address to be notified about an eligible entitlement.
func (o EntitlementAdditionalNotificationTargetsPtrOutput) RequesterEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EntitlementAdditionalNotificationTargets) []string {
		if v == nil {
			return nil
		}
		return v.RequesterEmailRecipients
	}).(pulumi.StringArrayOutput)
}

type EntitlementApprovalWorkflow struct {
	// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
	// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
	// This can be used to create approval workflows such as
	// * Require an approval from any user in a group G.
	// * Require an approval from any k number of users from a Group G.
	// * Require an approval from any user in a group G and then from a user U. etc.
	//   A single user might be part of `approvers` ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
	//   Structure is documented below.
	ManualApprovals EntitlementApprovalWorkflowManualApprovals `pulumi:"manualApprovals"`
}

// EntitlementApprovalWorkflowInput is an input type that accepts EntitlementApprovalWorkflowArgs and EntitlementApprovalWorkflowOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowInput` via:
//
//	EntitlementApprovalWorkflowArgs{...}
type EntitlementApprovalWorkflowInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowOutput() EntitlementApprovalWorkflowOutput
	ToEntitlementApprovalWorkflowOutputWithContext(context.Context) EntitlementApprovalWorkflowOutput
}

type EntitlementApprovalWorkflowArgs struct {
	// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
	// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
	// This can be used to create approval workflows such as
	// * Require an approval from any user in a group G.
	// * Require an approval from any k number of users from a Group G.
	// * Require an approval from any user in a group G and then from a user U. etc.
	//   A single user might be part of `approvers` ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
	//   Structure is documented below.
	ManualApprovals EntitlementApprovalWorkflowManualApprovalsInput `pulumi:"manualApprovals"`
}

func (EntitlementApprovalWorkflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflow)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowArgs) ToEntitlementApprovalWorkflowOutput() EntitlementApprovalWorkflowOutput {
	return i.ToEntitlementApprovalWorkflowOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowArgs) ToEntitlementApprovalWorkflowOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowOutput)
}

func (i EntitlementApprovalWorkflowArgs) ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput {
	return i.ToEntitlementApprovalWorkflowPtrOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowArgs) ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowOutput).ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx)
}

// EntitlementApprovalWorkflowPtrInput is an input type that accepts EntitlementApprovalWorkflowArgs, EntitlementApprovalWorkflowPtr and EntitlementApprovalWorkflowPtrOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowPtrInput` via:
//
//	        EntitlementApprovalWorkflowArgs{...}
//
//	or:
//
//	        nil
type EntitlementApprovalWorkflowPtrInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput
	ToEntitlementApprovalWorkflowPtrOutputWithContext(context.Context) EntitlementApprovalWorkflowPtrOutput
}

type entitlementApprovalWorkflowPtrType EntitlementApprovalWorkflowArgs

func EntitlementApprovalWorkflowPtr(v *EntitlementApprovalWorkflowArgs) EntitlementApprovalWorkflowPtrInput {
	return (*entitlementApprovalWorkflowPtrType)(v)
}

func (*entitlementApprovalWorkflowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementApprovalWorkflow)(nil)).Elem()
}

func (i *entitlementApprovalWorkflowPtrType) ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput {
	return i.ToEntitlementApprovalWorkflowPtrOutputWithContext(context.Background())
}

func (i *entitlementApprovalWorkflowPtrType) ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowPtrOutput)
}

type EntitlementApprovalWorkflowOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflow)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowOutput) ToEntitlementApprovalWorkflowOutput() EntitlementApprovalWorkflowOutput {
	return o
}

func (o EntitlementApprovalWorkflowOutput) ToEntitlementApprovalWorkflowOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowOutput {
	return o
}

func (o EntitlementApprovalWorkflowOutput) ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput {
	return o.ToEntitlementApprovalWorkflowPtrOutputWithContext(context.Background())
}

func (o EntitlementApprovalWorkflowOutput) ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementApprovalWorkflow) *EntitlementApprovalWorkflow {
		return &v
	}).(EntitlementApprovalWorkflowPtrOutput)
}

// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
// This can be used to create approval workflows such as
//   - Require an approval from any user in a group G.
//   - Require an approval from any k number of users from a Group G.
//   - Require an approval from any user in a group G and then from a user U. etc.
//     A single user might be part of `approvers` ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
//     Structure is documented below.
func (o EntitlementApprovalWorkflowOutput) ManualApprovals() EntitlementApprovalWorkflowManualApprovalsOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflow) EntitlementApprovalWorkflowManualApprovals {
		return v.ManualApprovals
	}).(EntitlementApprovalWorkflowManualApprovalsOutput)
}

type EntitlementApprovalWorkflowPtrOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementApprovalWorkflow)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowPtrOutput) ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput {
	return o
}

func (o EntitlementApprovalWorkflowPtrOutput) ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowPtrOutput {
	return o
}

func (o EntitlementApprovalWorkflowPtrOutput) Elem() EntitlementApprovalWorkflowOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflow) EntitlementApprovalWorkflow {
		if v != nil {
			return *v
		}
		var ret EntitlementApprovalWorkflow
		return ret
	}).(EntitlementApprovalWorkflowOutput)
}

// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
// This can be used to create approval workflows such as
//   - Require an approval from any user in a group G.
//   - Require an approval from any k number of users from a Group G.
//   - Require an approval from any user in a group G and then from a user U. etc.
//     A single user might be part of `approvers` ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
//     Structure is documented below.
func (o EntitlementApprovalWorkflowPtrOutput) ManualApprovals() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflow) *EntitlementApprovalWorkflowManualApprovals {
		if v == nil {
			return nil
		}
		return &v.ManualApprovals
	}).(EntitlementApprovalWorkflowManualApprovalsPtrOutput)
}

type EntitlementApprovalWorkflowManualApprovals struct {
	// Optional. Do the approvers need to provide a justification for their actions?
	RequireApproverJustification *bool `pulumi:"requireApproverJustification"`
	// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.
	// Structure is documented below.
	Steps []EntitlementApprovalWorkflowManualApprovalsStep `pulumi:"steps"`
}

// EntitlementApprovalWorkflowManualApprovalsInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsArgs and EntitlementApprovalWorkflowManualApprovalsOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsInput` via:
//
//	EntitlementApprovalWorkflowManualApprovalsArgs{...}
type EntitlementApprovalWorkflowManualApprovalsInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsOutput() EntitlementApprovalWorkflowManualApprovalsOutput
	ToEntitlementApprovalWorkflowManualApprovalsOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsOutput
}

type EntitlementApprovalWorkflowManualApprovalsArgs struct {
	// Optional. Do the approvers need to provide a justification for their actions?
	RequireApproverJustification pulumi.BoolPtrInput `pulumi:"requireApproverJustification"`
	// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.
	// Structure is documented below.
	Steps EntitlementApprovalWorkflowManualApprovalsStepArrayInput `pulumi:"steps"`
}

func (EntitlementApprovalWorkflowManualApprovalsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovals)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowManualApprovalsArgs) ToEntitlementApprovalWorkflowManualApprovalsOutput() EntitlementApprovalWorkflowManualApprovalsOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsArgs) ToEntitlementApprovalWorkflowManualApprovalsOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsOutput)
}

func (i EntitlementApprovalWorkflowManualApprovalsArgs) ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsArgs) ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsOutput).ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx)
}

// EntitlementApprovalWorkflowManualApprovalsPtrInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsArgs, EntitlementApprovalWorkflowManualApprovalsPtr and EntitlementApprovalWorkflowManualApprovalsPtrOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsPtrInput` via:
//
//	        EntitlementApprovalWorkflowManualApprovalsArgs{...}
//
//	or:
//
//	        nil
type EntitlementApprovalWorkflowManualApprovalsPtrInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput
	ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput
}

type entitlementApprovalWorkflowManualApprovalsPtrType EntitlementApprovalWorkflowManualApprovalsArgs

func EntitlementApprovalWorkflowManualApprovalsPtr(v *EntitlementApprovalWorkflowManualApprovalsArgs) EntitlementApprovalWorkflowManualApprovalsPtrInput {
	return (*entitlementApprovalWorkflowManualApprovalsPtrType)(v)
}

func (*entitlementApprovalWorkflowManualApprovalsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementApprovalWorkflowManualApprovals)(nil)).Elem()
}

func (i *entitlementApprovalWorkflowManualApprovalsPtrType) ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(context.Background())
}

func (i *entitlementApprovalWorkflowManualApprovalsPtrType) ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsPtrOutput)
}

type EntitlementApprovalWorkflowManualApprovalsOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovals)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsOutput) ToEntitlementApprovalWorkflowManualApprovalsOutput() EntitlementApprovalWorkflowManualApprovalsOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsOutput) ToEntitlementApprovalWorkflowManualApprovalsOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsOutput) ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o.ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(context.Background())
}

func (o EntitlementApprovalWorkflowManualApprovalsOutput) ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementApprovalWorkflowManualApprovals) *EntitlementApprovalWorkflowManualApprovals {
		return &v
	}).(EntitlementApprovalWorkflowManualApprovalsPtrOutput)
}

// Optional. Do the approvers need to provide a justification for their actions?
func (o EntitlementApprovalWorkflowManualApprovalsOutput) RequireApproverJustification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovals) *bool { return v.RequireApproverJustification }).(pulumi.BoolPtrOutput)
}

// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.
// Structure is documented below.
func (o EntitlementApprovalWorkflowManualApprovalsOutput) Steps() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovals) []EntitlementApprovalWorkflowManualApprovalsStep {
		return v.Steps
	}).(EntitlementApprovalWorkflowManualApprovalsStepArrayOutput)
}

type EntitlementApprovalWorkflowManualApprovalsPtrOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementApprovalWorkflowManualApprovals)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) Elem() EntitlementApprovalWorkflowManualApprovalsOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflowManualApprovals) EntitlementApprovalWorkflowManualApprovals {
		if v != nil {
			return *v
		}
		var ret EntitlementApprovalWorkflowManualApprovals
		return ret
	}).(EntitlementApprovalWorkflowManualApprovalsOutput)
}

// Optional. Do the approvers need to provide a justification for their actions?
func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) RequireApproverJustification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflowManualApprovals) *bool {
		if v == nil {
			return nil
		}
		return v.RequireApproverJustification
	}).(pulumi.BoolPtrOutput)
}

// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.
// Structure is documented below.
func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) Steps() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflowManualApprovals) []EntitlementApprovalWorkflowManualApprovalsStep {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(EntitlementApprovalWorkflowManualApprovalsStepArrayOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStep struct {
	// How many users from the above list need to approve.
	// If there are not enough distinct users in the list above then the workflow
	// will indefinitely block. Should always be greater than 0. Currently 1 is the only
	// supported value.
	ApprovalsNeeded *int `pulumi:"approvalsNeeded"`
	// Optional. Additional email addresses to be notified when a grant is pending approval.
	ApproverEmailRecipients []string `pulumi:"approverEmailRecipients"`
	// The potential set of approvers in this step. This list should contain at only one entry.
	// Structure is documented below.
	Approvers EntitlementApprovalWorkflowManualApprovalsStepApprovers `pulumi:"approvers"`
	// (Output, Beta)
	// Output Only. The ID of the approval step.
	Id *string `pulumi:"id"`
}

// EntitlementApprovalWorkflowManualApprovalsStepInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsStepArgs and EntitlementApprovalWorkflowManualApprovalsStepOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsStepInput` via:
//
//	EntitlementApprovalWorkflowManualApprovalsStepArgs{...}
type EntitlementApprovalWorkflowManualApprovalsStepInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsStepOutput() EntitlementApprovalWorkflowManualApprovalsStepOutput
	ToEntitlementApprovalWorkflowManualApprovalsStepOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsStepOutput
}

type EntitlementApprovalWorkflowManualApprovalsStepArgs struct {
	// How many users from the above list need to approve.
	// If there are not enough distinct users in the list above then the workflow
	// will indefinitely block. Should always be greater than 0. Currently 1 is the only
	// supported value.
	ApprovalsNeeded pulumi.IntPtrInput `pulumi:"approvalsNeeded"`
	// Optional. Additional email addresses to be notified when a grant is pending approval.
	ApproverEmailRecipients pulumi.StringArrayInput `pulumi:"approverEmailRecipients"`
	// The potential set of approvers in this step. This list should contain at only one entry.
	// Structure is documented below.
	Approvers EntitlementApprovalWorkflowManualApprovalsStepApproversInput `pulumi:"approvers"`
	// (Output, Beta)
	// Output Only. The ID of the approval step.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EntitlementApprovalWorkflowManualApprovalsStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStep)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowManualApprovalsStepArgs) ToEntitlementApprovalWorkflowManualApprovalsStepOutput() EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsStepOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsStepArgs) ToEntitlementApprovalWorkflowManualApprovalsStepOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsStepOutput)
}

// EntitlementApprovalWorkflowManualApprovalsStepArrayInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsStepArray and EntitlementApprovalWorkflowManualApprovalsStepArrayOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsStepArrayInput` via:
//
//	EntitlementApprovalWorkflowManualApprovalsStepArray{ EntitlementApprovalWorkflowManualApprovalsStepArgs{...} }
type EntitlementApprovalWorkflowManualApprovalsStepArrayInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutput() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput
	ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsStepArrayOutput
}

type EntitlementApprovalWorkflowManualApprovalsStepArray []EntitlementApprovalWorkflowManualApprovalsStepInput

func (EntitlementApprovalWorkflowManualApprovalsStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementApprovalWorkflowManualApprovalsStep)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowManualApprovalsStepArray) ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutput() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsStepArray) ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsStepArrayOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStepOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStep)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) ToEntitlementApprovalWorkflowManualApprovalsStepOutput() EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) ToEntitlementApprovalWorkflowManualApprovalsStepOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return o
}

// How many users from the above list need to approve.
// If there are not enough distinct users in the list above then the workflow
// will indefinitely block. Should always be greater than 0. Currently 1 is the only
// supported value.
func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) ApprovalsNeeded() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovalsStep) *int { return v.ApprovalsNeeded }).(pulumi.IntPtrOutput)
}

// Optional. Additional email addresses to be notified when a grant is pending approval.
func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) ApproverEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovalsStep) []string { return v.ApproverEmailRecipients }).(pulumi.StringArrayOutput)
}

// The potential set of approvers in this step. This list should contain at only one entry.
// Structure is documented below.
func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) Approvers() EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovalsStep) EntitlementApprovalWorkflowManualApprovalsStepApprovers {
		return v.Approvers
	}).(EntitlementApprovalWorkflowManualApprovalsStepApproversOutput)
}

// (Output, Beta)
// Output Only. The ID of the approval step.
func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovalsStep) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStepArrayOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementApprovalWorkflowManualApprovalsStep)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsStepArrayOutput) ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutput() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsStepArrayOutput) ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsStepArrayOutput) Index(i pulumi.IntInput) EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntitlementApprovalWorkflowManualApprovalsStep {
		return vs[0].([]EntitlementApprovalWorkflowManualApprovalsStep)[vs[1].(int)]
	}).(EntitlementApprovalWorkflowManualApprovalsStepOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStepApprovers struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
	Principals []string `pulumi:"principals"`
}

// EntitlementApprovalWorkflowManualApprovalsStepApproversInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsStepApproversArgs and EntitlementApprovalWorkflowManualApprovalsStepApproversOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsStepApproversInput` via:
//
//	EntitlementApprovalWorkflowManualApprovalsStepApproversArgs{...}
type EntitlementApprovalWorkflowManualApprovalsStepApproversInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutput() EntitlementApprovalWorkflowManualApprovalsStepApproversOutput
	ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsStepApproversOutput
}

type EntitlementApprovalWorkflowManualApprovalsStepApproversArgs struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
	Principals pulumi.StringArrayInput `pulumi:"principals"`
}

func (EntitlementApprovalWorkflowManualApprovalsStepApproversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepApprovers)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowManualApprovalsStepApproversArgs) ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutput() EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsStepApproversArgs) ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsStepApproversOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStepApproversOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsStepApproversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepApprovers)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsStepApproversOutput) ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutput() EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsStepApproversOutput) ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return o
}

// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
func (o EntitlementApprovalWorkflowManualApprovalsStepApproversOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovalsStepApprovers) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

type EntitlementEligibleUser struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
	Principals []string `pulumi:"principals"`
}

// EntitlementEligibleUserInput is an input type that accepts EntitlementEligibleUserArgs and EntitlementEligibleUserOutput values.
// You can construct a concrete instance of `EntitlementEligibleUserInput` via:
//
//	EntitlementEligibleUserArgs{...}
type EntitlementEligibleUserInput interface {
	pulumi.Input

	ToEntitlementEligibleUserOutput() EntitlementEligibleUserOutput
	ToEntitlementEligibleUserOutputWithContext(context.Context) EntitlementEligibleUserOutput
}

type EntitlementEligibleUserArgs struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
	Principals pulumi.StringArrayInput `pulumi:"principals"`
}

func (EntitlementEligibleUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementEligibleUser)(nil)).Elem()
}

func (i EntitlementEligibleUserArgs) ToEntitlementEligibleUserOutput() EntitlementEligibleUserOutput {
	return i.ToEntitlementEligibleUserOutputWithContext(context.Background())
}

func (i EntitlementEligibleUserArgs) ToEntitlementEligibleUserOutputWithContext(ctx context.Context) EntitlementEligibleUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementEligibleUserOutput)
}

// EntitlementEligibleUserArrayInput is an input type that accepts EntitlementEligibleUserArray and EntitlementEligibleUserArrayOutput values.
// You can construct a concrete instance of `EntitlementEligibleUserArrayInput` via:
//
//	EntitlementEligibleUserArray{ EntitlementEligibleUserArgs{...} }
type EntitlementEligibleUserArrayInput interface {
	pulumi.Input

	ToEntitlementEligibleUserArrayOutput() EntitlementEligibleUserArrayOutput
	ToEntitlementEligibleUserArrayOutputWithContext(context.Context) EntitlementEligibleUserArrayOutput
}

type EntitlementEligibleUserArray []EntitlementEligibleUserInput

func (EntitlementEligibleUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementEligibleUser)(nil)).Elem()
}

func (i EntitlementEligibleUserArray) ToEntitlementEligibleUserArrayOutput() EntitlementEligibleUserArrayOutput {
	return i.ToEntitlementEligibleUserArrayOutputWithContext(context.Background())
}

func (i EntitlementEligibleUserArray) ToEntitlementEligibleUserArrayOutputWithContext(ctx context.Context) EntitlementEligibleUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementEligibleUserArrayOutput)
}

type EntitlementEligibleUserOutput struct{ *pulumi.OutputState }

func (EntitlementEligibleUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementEligibleUser)(nil)).Elem()
}

func (o EntitlementEligibleUserOutput) ToEntitlementEligibleUserOutput() EntitlementEligibleUserOutput {
	return o
}

func (o EntitlementEligibleUserOutput) ToEntitlementEligibleUserOutputWithContext(ctx context.Context) EntitlementEligibleUserOutput {
	return o
}

// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
func (o EntitlementEligibleUserOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementEligibleUser) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

type EntitlementEligibleUserArrayOutput struct{ *pulumi.OutputState }

func (EntitlementEligibleUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementEligibleUser)(nil)).Elem()
}

func (o EntitlementEligibleUserArrayOutput) ToEntitlementEligibleUserArrayOutput() EntitlementEligibleUserArrayOutput {
	return o
}

func (o EntitlementEligibleUserArrayOutput) ToEntitlementEligibleUserArrayOutputWithContext(ctx context.Context) EntitlementEligibleUserArrayOutput {
	return o
}

func (o EntitlementEligibleUserArrayOutput) Index(i pulumi.IntInput) EntitlementEligibleUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntitlementEligibleUser {
		return vs[0].([]EntitlementEligibleUser)[vs[1].(int)]
	}).(EntitlementEligibleUserOutput)
}

type EntitlementPrivilegedAccess struct {
	// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
	// Structure is documented below.
	GcpIamAccess EntitlementPrivilegedAccessGcpIamAccess `pulumi:"gcpIamAccess"`
}

// EntitlementPrivilegedAccessInput is an input type that accepts EntitlementPrivilegedAccessArgs and EntitlementPrivilegedAccessOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessInput` via:
//
//	EntitlementPrivilegedAccessArgs{...}
type EntitlementPrivilegedAccessInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessOutput() EntitlementPrivilegedAccessOutput
	ToEntitlementPrivilegedAccessOutputWithContext(context.Context) EntitlementPrivilegedAccessOutput
}

type EntitlementPrivilegedAccessArgs struct {
	// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
	// Structure is documented below.
	GcpIamAccess EntitlementPrivilegedAccessGcpIamAccessInput `pulumi:"gcpIamAccess"`
}

func (EntitlementPrivilegedAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccess)(nil)).Elem()
}

func (i EntitlementPrivilegedAccessArgs) ToEntitlementPrivilegedAccessOutput() EntitlementPrivilegedAccessOutput {
	return i.ToEntitlementPrivilegedAccessOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessArgs) ToEntitlementPrivilegedAccessOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessOutput)
}

func (i EntitlementPrivilegedAccessArgs) ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput {
	return i.ToEntitlementPrivilegedAccessPtrOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessArgs) ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessOutput).ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx)
}

// EntitlementPrivilegedAccessPtrInput is an input type that accepts EntitlementPrivilegedAccessArgs, EntitlementPrivilegedAccessPtr and EntitlementPrivilegedAccessPtrOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessPtrInput` via:
//
//	        EntitlementPrivilegedAccessArgs{...}
//
//	or:
//
//	        nil
type EntitlementPrivilegedAccessPtrInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput
	ToEntitlementPrivilegedAccessPtrOutputWithContext(context.Context) EntitlementPrivilegedAccessPtrOutput
}

type entitlementPrivilegedAccessPtrType EntitlementPrivilegedAccessArgs

func EntitlementPrivilegedAccessPtr(v *EntitlementPrivilegedAccessArgs) EntitlementPrivilegedAccessPtrInput {
	return (*entitlementPrivilegedAccessPtrType)(v)
}

func (*entitlementPrivilegedAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementPrivilegedAccess)(nil)).Elem()
}

func (i *entitlementPrivilegedAccessPtrType) ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput {
	return i.ToEntitlementPrivilegedAccessPtrOutputWithContext(context.Background())
}

func (i *entitlementPrivilegedAccessPtrType) ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessPtrOutput)
}

type EntitlementPrivilegedAccessOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccess)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessOutput) ToEntitlementPrivilegedAccessOutput() EntitlementPrivilegedAccessOutput {
	return o
}

func (o EntitlementPrivilegedAccessOutput) ToEntitlementPrivilegedAccessOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessOutput {
	return o
}

func (o EntitlementPrivilegedAccessOutput) ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput {
	return o.ToEntitlementPrivilegedAccessPtrOutputWithContext(context.Background())
}

func (o EntitlementPrivilegedAccessOutput) ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementPrivilegedAccess) *EntitlementPrivilegedAccess {
		return &v
	}).(EntitlementPrivilegedAccessPtrOutput)
}

// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
// Structure is documented below.
func (o EntitlementPrivilegedAccessOutput) GcpIamAccess() EntitlementPrivilegedAccessGcpIamAccessOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccess) EntitlementPrivilegedAccessGcpIamAccess { return v.GcpIamAccess }).(EntitlementPrivilegedAccessGcpIamAccessOutput)
}

type EntitlementPrivilegedAccessPtrOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementPrivilegedAccess)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessPtrOutput) ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput {
	return o
}

func (o EntitlementPrivilegedAccessPtrOutput) ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessPtrOutput {
	return o
}

func (o EntitlementPrivilegedAccessPtrOutput) Elem() EntitlementPrivilegedAccessOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccess) EntitlementPrivilegedAccess {
		if v != nil {
			return *v
		}
		var ret EntitlementPrivilegedAccess
		return ret
	}).(EntitlementPrivilegedAccessOutput)
}

// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
// Structure is documented below.
func (o EntitlementPrivilegedAccessPtrOutput) GcpIamAccess() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccess) *EntitlementPrivilegedAccessGcpIamAccess {
		if v == nil {
			return nil
		}
		return &v.GcpIamAccess
	}).(EntitlementPrivilegedAccessGcpIamAccessPtrOutput)
}

type EntitlementPrivilegedAccessGcpIamAccess struct {
	// Name of the resource.
	Resource string `pulumi:"resource"`
	// The type of this resource.
	ResourceType string `pulumi:"resourceType"`
	// Role bindings to be created on successful grant.
	// Structure is documented below.
	RoleBindings []EntitlementPrivilegedAccessGcpIamAccessRoleBinding `pulumi:"roleBindings"`
}

// EntitlementPrivilegedAccessGcpIamAccessInput is an input type that accepts EntitlementPrivilegedAccessGcpIamAccessArgs and EntitlementPrivilegedAccessGcpIamAccessOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessGcpIamAccessInput` via:
//
//	EntitlementPrivilegedAccessGcpIamAccessArgs{...}
type EntitlementPrivilegedAccessGcpIamAccessInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessGcpIamAccessOutput() EntitlementPrivilegedAccessGcpIamAccessOutput
	ToEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(context.Context) EntitlementPrivilegedAccessGcpIamAccessOutput
}

type EntitlementPrivilegedAccessGcpIamAccessArgs struct {
	// Name of the resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// The type of this resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Role bindings to be created on successful grant.
	// Structure is documented below.
	RoleBindings EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput `pulumi:"roleBindings"`
}

func (EntitlementPrivilegedAccessGcpIamAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (i EntitlementPrivilegedAccessGcpIamAccessArgs) ToEntitlementPrivilegedAccessGcpIamAccessOutput() EntitlementPrivilegedAccessGcpIamAccessOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessGcpIamAccessArgs) ToEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessOutput)
}

func (i EntitlementPrivilegedAccessGcpIamAccessArgs) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessGcpIamAccessArgs) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessOutput).ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx)
}

// EntitlementPrivilegedAccessGcpIamAccessPtrInput is an input type that accepts EntitlementPrivilegedAccessGcpIamAccessArgs, EntitlementPrivilegedAccessGcpIamAccessPtr and EntitlementPrivilegedAccessGcpIamAccessPtrOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessGcpIamAccessPtrInput` via:
//
//	        EntitlementPrivilegedAccessGcpIamAccessArgs{...}
//
//	or:
//
//	        nil
type EntitlementPrivilegedAccessGcpIamAccessPtrInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput
	ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput
}

type entitlementPrivilegedAccessGcpIamAccessPtrType EntitlementPrivilegedAccessGcpIamAccessArgs

func EntitlementPrivilegedAccessGcpIamAccessPtr(v *EntitlementPrivilegedAccessGcpIamAccessArgs) EntitlementPrivilegedAccessGcpIamAccessPtrInput {
	return (*entitlementPrivilegedAccessGcpIamAccessPtrType)(v)
}

func (*entitlementPrivilegedAccessGcpIamAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (i *entitlementPrivilegedAccessGcpIamAccessPtrType) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(context.Background())
}

func (i *entitlementPrivilegedAccessGcpIamAccessPtrType) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessPtrOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessGcpIamAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ToEntitlementPrivilegedAccessGcpIamAccessOutput() EntitlementPrivilegedAccessGcpIamAccessOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ToEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o.ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(context.Background())
}

func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementPrivilegedAccessGcpIamAccess) *EntitlementPrivilegedAccessGcpIamAccess {
		return &v
	}).(EntitlementPrivilegedAccessGcpIamAccessPtrOutput)
}

// Name of the resource.
func (o EntitlementPrivilegedAccessGcpIamAccessOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccess) string { return v.Resource }).(pulumi.StringOutput)
}

// The type of this resource.
func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccess) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Role bindings to be created on successful grant.
// Structure is documented below.
func (o EntitlementPrivilegedAccessGcpIamAccessOutput) RoleBindings() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccess) []EntitlementPrivilegedAccessGcpIamAccessRoleBinding {
		return v.RoleBindings
	}).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessPtrOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessGcpIamAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) Elem() EntitlementPrivilegedAccessGcpIamAccessOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccessGcpIamAccess) EntitlementPrivilegedAccessGcpIamAccess {
		if v != nil {
			return *v
		}
		var ret EntitlementPrivilegedAccessGcpIamAccess
		return ret
	}).(EntitlementPrivilegedAccessGcpIamAccessOutput)
}

// Name of the resource.
func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccessGcpIamAccess) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// The type of this resource.
func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccessGcpIamAccess) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// Role bindings to be created on successful grant.
// Structure is documented below.
func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) RoleBindings() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccessGcpIamAccess) []EntitlementPrivilegedAccessGcpIamAccessRoleBinding {
		if v == nil {
			return nil
		}
		return v.RoleBindings
	}).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBinding struct {
	// The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
	// https://cloud.google.com/iam/docs/conditions-overview#attributes.
	ConditionExpression *string `pulumi:"conditionExpression"`
	// (Output, Beta)
	// Output Only. The ID corresponding to this role binding in the policy binding. This will be unique within an entitlement across time. Gets re-generated each time the entitlement is updated.
	Id *string `pulumi:"id"`
	// IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
	Role string `pulumi:"role"`
}

// EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput is an input type that accepts EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs and EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput` via:
//
//	EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs{...}
type EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput
	ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs struct {
	// The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
	// https://cloud.google.com/iam/docs/conditions-overview#attributes.
	ConditionExpression pulumi.StringPtrInput `pulumi:"conditionExpression"`
	// (Output, Beta)
	// Output Only. The ID corresponding to this role binding in the policy binding. This will be unique within an entitlement across time. Gets re-generated each time the entitlement is updated.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
	Role pulumi.StringInput `pulumi:"role"`
}

func (EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (i EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput)
}

// EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput is an input type that accepts EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray and EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput` via:
//
//	EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray{ EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs{...} }
type EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput
	ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray []EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput

func (EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (i EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return o
}

// The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
// https://cloud.google.com/iam/docs/conditions-overview#attributes.
func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ConditionExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccessRoleBinding) *string { return v.ConditionExpression }).(pulumi.StringPtrOutput)
}

// (Output, Beta)
// Output Only. The ID corresponding to this role binding in the policy binding. This will be unique within an entitlement across time. Gets re-generated each time the entitlement is updated.
func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccessRoleBinding) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccessRoleBinding) string { return v.Role }).(pulumi.StringOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) Index(i pulumi.IntInput) EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntitlementPrivilegedAccessGcpIamAccessRoleBinding {
		return vs[0].([]EntitlementPrivilegedAccessGcpIamAccessRoleBinding)[vs[1].(int)]
	}).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput)
}

type EntitlementRequesterJustificationConfig struct {
	// The justification is not mandatory but can be provided in any of the supported formats.
	NotMandatory *EntitlementRequesterJustificationConfigNotMandatory `pulumi:"notMandatory"`
	// The requester has to provide a justification in the form of free flowing text.
	Unstructured *EntitlementRequesterJustificationConfigUnstructured `pulumi:"unstructured"`
}

// EntitlementRequesterJustificationConfigInput is an input type that accepts EntitlementRequesterJustificationConfigArgs and EntitlementRequesterJustificationConfigOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigInput` via:
//
//	EntitlementRequesterJustificationConfigArgs{...}
type EntitlementRequesterJustificationConfigInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigOutput() EntitlementRequesterJustificationConfigOutput
	ToEntitlementRequesterJustificationConfigOutputWithContext(context.Context) EntitlementRequesterJustificationConfigOutput
}

type EntitlementRequesterJustificationConfigArgs struct {
	// The justification is not mandatory but can be provided in any of the supported formats.
	NotMandatory EntitlementRequesterJustificationConfigNotMandatoryPtrInput `pulumi:"notMandatory"`
	// The requester has to provide a justification in the form of free flowing text.
	Unstructured EntitlementRequesterJustificationConfigUnstructuredPtrInput `pulumi:"unstructured"`
}

func (EntitlementRequesterJustificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (i EntitlementRequesterJustificationConfigArgs) ToEntitlementRequesterJustificationConfigOutput() EntitlementRequesterJustificationConfigOutput {
	return i.ToEntitlementRequesterJustificationConfigOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigArgs) ToEntitlementRequesterJustificationConfigOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigOutput)
}

func (i EntitlementRequesterJustificationConfigArgs) ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigPtrOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigArgs) ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigOutput).ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx)
}

// EntitlementRequesterJustificationConfigPtrInput is an input type that accepts EntitlementRequesterJustificationConfigArgs, EntitlementRequesterJustificationConfigPtr and EntitlementRequesterJustificationConfigPtrOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigPtrInput` via:
//
//	        EntitlementRequesterJustificationConfigArgs{...}
//
//	or:
//
//	        nil
type EntitlementRequesterJustificationConfigPtrInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput
	ToEntitlementRequesterJustificationConfigPtrOutputWithContext(context.Context) EntitlementRequesterJustificationConfigPtrOutput
}

type entitlementRequesterJustificationConfigPtrType EntitlementRequesterJustificationConfigArgs

func EntitlementRequesterJustificationConfigPtr(v *EntitlementRequesterJustificationConfigArgs) EntitlementRequesterJustificationConfigPtrInput {
	return (*entitlementRequesterJustificationConfigPtrType)(v)
}

func (*entitlementRequesterJustificationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (i *entitlementRequesterJustificationConfigPtrType) ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigPtrOutputWithContext(context.Background())
}

func (i *entitlementRequesterJustificationConfigPtrType) ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigPtrOutput)
}

type EntitlementRequesterJustificationConfigOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigOutput) ToEntitlementRequesterJustificationConfigOutput() EntitlementRequesterJustificationConfigOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigOutput) ToEntitlementRequesterJustificationConfigOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigOutput) ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput {
	return o.ToEntitlementRequesterJustificationConfigPtrOutputWithContext(context.Background())
}

func (o EntitlementRequesterJustificationConfigOutput) ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfig {
		return &v
	}).(EntitlementRequesterJustificationConfigPtrOutput)
}

// The justification is not mandatory but can be provided in any of the supported formats.
func (o EntitlementRequesterJustificationConfigOutput) NotMandatory() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o.ApplyT(func(v EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfigNotMandatory {
		return v.NotMandatory
	}).(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput)
}

// The requester has to provide a justification in the form of free flowing text.
func (o EntitlementRequesterJustificationConfigOutput) Unstructured() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o.ApplyT(func(v EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfigUnstructured {
		return v.Unstructured
	}).(EntitlementRequesterJustificationConfigUnstructuredPtrOutput)
}

type EntitlementRequesterJustificationConfigPtrOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigPtrOutput) ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigPtrOutput) ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigPtrOutput) Elem() EntitlementRequesterJustificationConfigOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfig) EntitlementRequesterJustificationConfig {
		if v != nil {
			return *v
		}
		var ret EntitlementRequesterJustificationConfig
		return ret
	}).(EntitlementRequesterJustificationConfigOutput)
}

// The justification is not mandatory but can be provided in any of the supported formats.
func (o EntitlementRequesterJustificationConfigPtrOutput) NotMandatory() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfigNotMandatory {
		if v == nil {
			return nil
		}
		return v.NotMandatory
	}).(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput)
}

// The requester has to provide a justification in the form of free flowing text.
func (o EntitlementRequesterJustificationConfigPtrOutput) Unstructured() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfigUnstructured {
		if v == nil {
			return nil
		}
		return v.Unstructured
	}).(EntitlementRequesterJustificationConfigUnstructuredPtrOutput)
}

type EntitlementRequesterJustificationConfigNotMandatory struct {
}

// EntitlementRequesterJustificationConfigNotMandatoryInput is an input type that accepts EntitlementRequesterJustificationConfigNotMandatoryArgs and EntitlementRequesterJustificationConfigNotMandatoryOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigNotMandatoryInput` via:
//
//	EntitlementRequesterJustificationConfigNotMandatoryArgs{...}
type EntitlementRequesterJustificationConfigNotMandatoryInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigNotMandatoryOutput() EntitlementRequesterJustificationConfigNotMandatoryOutput
	ToEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(context.Context) EntitlementRequesterJustificationConfigNotMandatoryOutput
}

type EntitlementRequesterJustificationConfigNotMandatoryArgs struct {
}

func (EntitlementRequesterJustificationConfigNotMandatoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (i EntitlementRequesterJustificationConfigNotMandatoryArgs) ToEntitlementRequesterJustificationConfigNotMandatoryOutput() EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return i.ToEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigNotMandatoryArgs) ToEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigNotMandatoryOutput)
}

func (i EntitlementRequesterJustificationConfigNotMandatoryArgs) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigNotMandatoryArgs) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigNotMandatoryOutput).ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx)
}

// EntitlementRequesterJustificationConfigNotMandatoryPtrInput is an input type that accepts EntitlementRequesterJustificationConfigNotMandatoryArgs, EntitlementRequesterJustificationConfigNotMandatoryPtr and EntitlementRequesterJustificationConfigNotMandatoryPtrOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigNotMandatoryPtrInput` via:
//
//	        EntitlementRequesterJustificationConfigNotMandatoryArgs{...}
//
//	or:
//
//	        nil
type EntitlementRequesterJustificationConfigNotMandatoryPtrInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput
	ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput
}

type entitlementRequesterJustificationConfigNotMandatoryPtrType EntitlementRequesterJustificationConfigNotMandatoryArgs

func EntitlementRequesterJustificationConfigNotMandatoryPtr(v *EntitlementRequesterJustificationConfigNotMandatoryArgs) EntitlementRequesterJustificationConfigNotMandatoryPtrInput {
	return (*entitlementRequesterJustificationConfigNotMandatoryPtrType)(v)
}

func (*entitlementRequesterJustificationConfigNotMandatoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (i *entitlementRequesterJustificationConfigNotMandatoryPtrType) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(context.Background())
}

func (i *entitlementRequesterJustificationConfigNotMandatoryPtrType) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput)
}

type EntitlementRequesterJustificationConfigNotMandatoryOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigNotMandatoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigNotMandatoryOutput) ToEntitlementRequesterJustificationConfigNotMandatoryOutput() EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigNotMandatoryOutput) ToEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigNotMandatoryOutput) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o.ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(context.Background())
}

func (o EntitlementRequesterJustificationConfigNotMandatoryOutput) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementRequesterJustificationConfigNotMandatory) *EntitlementRequesterJustificationConfigNotMandatory {
		return &v
	}).(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput)
}

type EntitlementRequesterJustificationConfigNotMandatoryPtrOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigNotMandatoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigNotMandatoryPtrOutput) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigNotMandatoryPtrOutput) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigNotMandatoryPtrOutput) Elem() EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfigNotMandatory) EntitlementRequesterJustificationConfigNotMandatory {
		if v != nil {
			return *v
		}
		var ret EntitlementRequesterJustificationConfigNotMandatory
		return ret
	}).(EntitlementRequesterJustificationConfigNotMandatoryOutput)
}

type EntitlementRequesterJustificationConfigUnstructured struct {
}

// EntitlementRequesterJustificationConfigUnstructuredInput is an input type that accepts EntitlementRequesterJustificationConfigUnstructuredArgs and EntitlementRequesterJustificationConfigUnstructuredOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigUnstructuredInput` via:
//
//	EntitlementRequesterJustificationConfigUnstructuredArgs{...}
type EntitlementRequesterJustificationConfigUnstructuredInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigUnstructuredOutput() EntitlementRequesterJustificationConfigUnstructuredOutput
	ToEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(context.Context) EntitlementRequesterJustificationConfigUnstructuredOutput
}

type EntitlementRequesterJustificationConfigUnstructuredArgs struct {
}

func (EntitlementRequesterJustificationConfigUnstructuredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (i EntitlementRequesterJustificationConfigUnstructuredArgs) ToEntitlementRequesterJustificationConfigUnstructuredOutput() EntitlementRequesterJustificationConfigUnstructuredOutput {
	return i.ToEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigUnstructuredArgs) ToEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigUnstructuredOutput)
}

func (i EntitlementRequesterJustificationConfigUnstructuredArgs) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigUnstructuredArgs) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigUnstructuredOutput).ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx)
}

// EntitlementRequesterJustificationConfigUnstructuredPtrInput is an input type that accepts EntitlementRequesterJustificationConfigUnstructuredArgs, EntitlementRequesterJustificationConfigUnstructuredPtr and EntitlementRequesterJustificationConfigUnstructuredPtrOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigUnstructuredPtrInput` via:
//
//	        EntitlementRequesterJustificationConfigUnstructuredArgs{...}
//
//	or:
//
//	        nil
type EntitlementRequesterJustificationConfigUnstructuredPtrInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput
	ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput
}

type entitlementRequesterJustificationConfigUnstructuredPtrType EntitlementRequesterJustificationConfigUnstructuredArgs

func EntitlementRequesterJustificationConfigUnstructuredPtr(v *EntitlementRequesterJustificationConfigUnstructuredArgs) EntitlementRequesterJustificationConfigUnstructuredPtrInput {
	return (*entitlementRequesterJustificationConfigUnstructuredPtrType)(v)
}

func (*entitlementRequesterJustificationConfigUnstructuredPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (i *entitlementRequesterJustificationConfigUnstructuredPtrType) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(context.Background())
}

func (i *entitlementRequesterJustificationConfigUnstructuredPtrType) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigUnstructuredPtrOutput)
}

type EntitlementRequesterJustificationConfigUnstructuredOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigUnstructuredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigUnstructuredOutput) ToEntitlementRequesterJustificationConfigUnstructuredOutput() EntitlementRequesterJustificationConfigUnstructuredOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigUnstructuredOutput) ToEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigUnstructuredOutput) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o.ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(context.Background())
}

func (o EntitlementRequesterJustificationConfigUnstructuredOutput) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementRequesterJustificationConfigUnstructured) *EntitlementRequesterJustificationConfigUnstructured {
		return &v
	}).(EntitlementRequesterJustificationConfigUnstructuredPtrOutput)
}

type EntitlementRequesterJustificationConfigUnstructuredPtrOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigUnstructuredPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigUnstructuredPtrOutput) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigUnstructuredPtrOutput) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigUnstructuredPtrOutput) Elem() EntitlementRequesterJustificationConfigUnstructuredOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfigUnstructured) EntitlementRequesterJustificationConfigUnstructured {
		if v != nil {
			return *v
		}
		var ret EntitlementRequesterJustificationConfigUnstructured
		return ret
	}).(EntitlementRequesterJustificationConfigUnstructuredOutput)
}

type GetEntitlementAdditionalNotificationTarget struct {
	// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
	AdminEmailRecipients []string `pulumi:"adminEmailRecipients"`
	// Optional. Additional email address to be notified about an eligible entitlement.
	RequesterEmailRecipients []string `pulumi:"requesterEmailRecipients"`
}

// GetEntitlementAdditionalNotificationTargetInput is an input type that accepts GetEntitlementAdditionalNotificationTargetArgs and GetEntitlementAdditionalNotificationTargetOutput values.
// You can construct a concrete instance of `GetEntitlementAdditionalNotificationTargetInput` via:
//
//	GetEntitlementAdditionalNotificationTargetArgs{...}
type GetEntitlementAdditionalNotificationTargetInput interface {
	pulumi.Input

	ToGetEntitlementAdditionalNotificationTargetOutput() GetEntitlementAdditionalNotificationTargetOutput
	ToGetEntitlementAdditionalNotificationTargetOutputWithContext(context.Context) GetEntitlementAdditionalNotificationTargetOutput
}

type GetEntitlementAdditionalNotificationTargetArgs struct {
	// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
	AdminEmailRecipients pulumi.StringArrayInput `pulumi:"adminEmailRecipients"`
	// Optional. Additional email address to be notified about an eligible entitlement.
	RequesterEmailRecipients pulumi.StringArrayInput `pulumi:"requesterEmailRecipients"`
}

func (GetEntitlementAdditionalNotificationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementAdditionalNotificationTarget)(nil)).Elem()
}

func (i GetEntitlementAdditionalNotificationTargetArgs) ToGetEntitlementAdditionalNotificationTargetOutput() GetEntitlementAdditionalNotificationTargetOutput {
	return i.ToGetEntitlementAdditionalNotificationTargetOutputWithContext(context.Background())
}

func (i GetEntitlementAdditionalNotificationTargetArgs) ToGetEntitlementAdditionalNotificationTargetOutputWithContext(ctx context.Context) GetEntitlementAdditionalNotificationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementAdditionalNotificationTargetOutput)
}

// GetEntitlementAdditionalNotificationTargetArrayInput is an input type that accepts GetEntitlementAdditionalNotificationTargetArray and GetEntitlementAdditionalNotificationTargetArrayOutput values.
// You can construct a concrete instance of `GetEntitlementAdditionalNotificationTargetArrayInput` via:
//
//	GetEntitlementAdditionalNotificationTargetArray{ GetEntitlementAdditionalNotificationTargetArgs{...} }
type GetEntitlementAdditionalNotificationTargetArrayInput interface {
	pulumi.Input

	ToGetEntitlementAdditionalNotificationTargetArrayOutput() GetEntitlementAdditionalNotificationTargetArrayOutput
	ToGetEntitlementAdditionalNotificationTargetArrayOutputWithContext(context.Context) GetEntitlementAdditionalNotificationTargetArrayOutput
}

type GetEntitlementAdditionalNotificationTargetArray []GetEntitlementAdditionalNotificationTargetInput

func (GetEntitlementAdditionalNotificationTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementAdditionalNotificationTarget)(nil)).Elem()
}

func (i GetEntitlementAdditionalNotificationTargetArray) ToGetEntitlementAdditionalNotificationTargetArrayOutput() GetEntitlementAdditionalNotificationTargetArrayOutput {
	return i.ToGetEntitlementAdditionalNotificationTargetArrayOutputWithContext(context.Background())
}

func (i GetEntitlementAdditionalNotificationTargetArray) ToGetEntitlementAdditionalNotificationTargetArrayOutputWithContext(ctx context.Context) GetEntitlementAdditionalNotificationTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementAdditionalNotificationTargetArrayOutput)
}

type GetEntitlementAdditionalNotificationTargetOutput struct{ *pulumi.OutputState }

func (GetEntitlementAdditionalNotificationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementAdditionalNotificationTarget)(nil)).Elem()
}

func (o GetEntitlementAdditionalNotificationTargetOutput) ToGetEntitlementAdditionalNotificationTargetOutput() GetEntitlementAdditionalNotificationTargetOutput {
	return o
}

func (o GetEntitlementAdditionalNotificationTargetOutput) ToGetEntitlementAdditionalNotificationTargetOutputWithContext(ctx context.Context) GetEntitlementAdditionalNotificationTargetOutput {
	return o
}

// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
func (o GetEntitlementAdditionalNotificationTargetOutput) AdminEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEntitlementAdditionalNotificationTarget) []string { return v.AdminEmailRecipients }).(pulumi.StringArrayOutput)
}

// Optional. Additional email address to be notified about an eligible entitlement.
func (o GetEntitlementAdditionalNotificationTargetOutput) RequesterEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEntitlementAdditionalNotificationTarget) []string { return v.RequesterEmailRecipients }).(pulumi.StringArrayOutput)
}

type GetEntitlementAdditionalNotificationTargetArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementAdditionalNotificationTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementAdditionalNotificationTarget)(nil)).Elem()
}

func (o GetEntitlementAdditionalNotificationTargetArrayOutput) ToGetEntitlementAdditionalNotificationTargetArrayOutput() GetEntitlementAdditionalNotificationTargetArrayOutput {
	return o
}

func (o GetEntitlementAdditionalNotificationTargetArrayOutput) ToGetEntitlementAdditionalNotificationTargetArrayOutputWithContext(ctx context.Context) GetEntitlementAdditionalNotificationTargetArrayOutput {
	return o
}

func (o GetEntitlementAdditionalNotificationTargetArrayOutput) Index(i pulumi.IntInput) GetEntitlementAdditionalNotificationTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementAdditionalNotificationTarget {
		return vs[0].([]GetEntitlementAdditionalNotificationTarget)[vs[1].(int)]
	}).(GetEntitlementAdditionalNotificationTargetOutput)
}

type GetEntitlementApprovalWorkflow struct {
	// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
	// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
	// This can be used to create approval workflows such as
	// * Require an approval from any user in a group G.
	// * Require an approval from any k number of users from a Group G.
	// * Require an approval from any user in a group G and then from a user U. etc.
	//   A single user might be part of 'approvers' ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
	ManualApprovals []GetEntitlementApprovalWorkflowManualApproval `pulumi:"manualApprovals"`
}

// GetEntitlementApprovalWorkflowInput is an input type that accepts GetEntitlementApprovalWorkflowArgs and GetEntitlementApprovalWorkflowOutput values.
// You can construct a concrete instance of `GetEntitlementApprovalWorkflowInput` via:
//
//	GetEntitlementApprovalWorkflowArgs{...}
type GetEntitlementApprovalWorkflowInput interface {
	pulumi.Input

	ToGetEntitlementApprovalWorkflowOutput() GetEntitlementApprovalWorkflowOutput
	ToGetEntitlementApprovalWorkflowOutputWithContext(context.Context) GetEntitlementApprovalWorkflowOutput
}

type GetEntitlementApprovalWorkflowArgs struct {
	// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
	// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
	// This can be used to create approval workflows such as
	// * Require an approval from any user in a group G.
	// * Require an approval from any k number of users from a Group G.
	// * Require an approval from any user in a group G and then from a user U. etc.
	//   A single user might be part of 'approvers' ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
	ManualApprovals GetEntitlementApprovalWorkflowManualApprovalArrayInput `pulumi:"manualApprovals"`
}

func (GetEntitlementApprovalWorkflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementApprovalWorkflow)(nil)).Elem()
}

func (i GetEntitlementApprovalWorkflowArgs) ToGetEntitlementApprovalWorkflowOutput() GetEntitlementApprovalWorkflowOutput {
	return i.ToGetEntitlementApprovalWorkflowOutputWithContext(context.Background())
}

func (i GetEntitlementApprovalWorkflowArgs) ToGetEntitlementApprovalWorkflowOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementApprovalWorkflowOutput)
}

// GetEntitlementApprovalWorkflowArrayInput is an input type that accepts GetEntitlementApprovalWorkflowArray and GetEntitlementApprovalWorkflowArrayOutput values.
// You can construct a concrete instance of `GetEntitlementApprovalWorkflowArrayInput` via:
//
//	GetEntitlementApprovalWorkflowArray{ GetEntitlementApprovalWorkflowArgs{...} }
type GetEntitlementApprovalWorkflowArrayInput interface {
	pulumi.Input

	ToGetEntitlementApprovalWorkflowArrayOutput() GetEntitlementApprovalWorkflowArrayOutput
	ToGetEntitlementApprovalWorkflowArrayOutputWithContext(context.Context) GetEntitlementApprovalWorkflowArrayOutput
}

type GetEntitlementApprovalWorkflowArray []GetEntitlementApprovalWorkflowInput

func (GetEntitlementApprovalWorkflowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementApprovalWorkflow)(nil)).Elem()
}

func (i GetEntitlementApprovalWorkflowArray) ToGetEntitlementApprovalWorkflowArrayOutput() GetEntitlementApprovalWorkflowArrayOutput {
	return i.ToGetEntitlementApprovalWorkflowArrayOutputWithContext(context.Background())
}

func (i GetEntitlementApprovalWorkflowArray) ToGetEntitlementApprovalWorkflowArrayOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementApprovalWorkflowArrayOutput)
}

type GetEntitlementApprovalWorkflowOutput struct{ *pulumi.OutputState }

func (GetEntitlementApprovalWorkflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementApprovalWorkflow)(nil)).Elem()
}

func (o GetEntitlementApprovalWorkflowOutput) ToGetEntitlementApprovalWorkflowOutput() GetEntitlementApprovalWorkflowOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowOutput) ToGetEntitlementApprovalWorkflowOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowOutput {
	return o
}

// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
// This can be used to create approval workflows such as
//   - Require an approval from any user in a group G.
//   - Require an approval from any k number of users from a Group G.
//   - Require an approval from any user in a group G and then from a user U. etc.
//     A single user might be part of 'approvers' ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
func (o GetEntitlementApprovalWorkflowOutput) ManualApprovals() GetEntitlementApprovalWorkflowManualApprovalArrayOutput {
	return o.ApplyT(func(v GetEntitlementApprovalWorkflow) []GetEntitlementApprovalWorkflowManualApproval {
		return v.ManualApprovals
	}).(GetEntitlementApprovalWorkflowManualApprovalArrayOutput)
}

type GetEntitlementApprovalWorkflowArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementApprovalWorkflowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementApprovalWorkflow)(nil)).Elem()
}

func (o GetEntitlementApprovalWorkflowArrayOutput) ToGetEntitlementApprovalWorkflowArrayOutput() GetEntitlementApprovalWorkflowArrayOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowArrayOutput) ToGetEntitlementApprovalWorkflowArrayOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowArrayOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowArrayOutput) Index(i pulumi.IntInput) GetEntitlementApprovalWorkflowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementApprovalWorkflow {
		return vs[0].([]GetEntitlementApprovalWorkflow)[vs[1].(int)]
	}).(GetEntitlementApprovalWorkflowOutput)
}

type GetEntitlementApprovalWorkflowManualApproval struct {
	// Optional. Do the approvers need to provide a justification for their actions?
	RequireApproverJustification bool `pulumi:"requireApproverJustification"`
	// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.
	Steps []GetEntitlementApprovalWorkflowManualApprovalStep `pulumi:"steps"`
}

// GetEntitlementApprovalWorkflowManualApprovalInput is an input type that accepts GetEntitlementApprovalWorkflowManualApprovalArgs and GetEntitlementApprovalWorkflowManualApprovalOutput values.
// You can construct a concrete instance of `GetEntitlementApprovalWorkflowManualApprovalInput` via:
//
//	GetEntitlementApprovalWorkflowManualApprovalArgs{...}
type GetEntitlementApprovalWorkflowManualApprovalInput interface {
	pulumi.Input

	ToGetEntitlementApprovalWorkflowManualApprovalOutput() GetEntitlementApprovalWorkflowManualApprovalOutput
	ToGetEntitlementApprovalWorkflowManualApprovalOutputWithContext(context.Context) GetEntitlementApprovalWorkflowManualApprovalOutput
}

type GetEntitlementApprovalWorkflowManualApprovalArgs struct {
	// Optional. Do the approvers need to provide a justification for their actions?
	RequireApproverJustification pulumi.BoolInput `pulumi:"requireApproverJustification"`
	// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.
	Steps GetEntitlementApprovalWorkflowManualApprovalStepArrayInput `pulumi:"steps"`
}

func (GetEntitlementApprovalWorkflowManualApprovalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApproval)(nil)).Elem()
}

func (i GetEntitlementApprovalWorkflowManualApprovalArgs) ToGetEntitlementApprovalWorkflowManualApprovalOutput() GetEntitlementApprovalWorkflowManualApprovalOutput {
	return i.ToGetEntitlementApprovalWorkflowManualApprovalOutputWithContext(context.Background())
}

func (i GetEntitlementApprovalWorkflowManualApprovalArgs) ToGetEntitlementApprovalWorkflowManualApprovalOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementApprovalWorkflowManualApprovalOutput)
}

// GetEntitlementApprovalWorkflowManualApprovalArrayInput is an input type that accepts GetEntitlementApprovalWorkflowManualApprovalArray and GetEntitlementApprovalWorkflowManualApprovalArrayOutput values.
// You can construct a concrete instance of `GetEntitlementApprovalWorkflowManualApprovalArrayInput` via:
//
//	GetEntitlementApprovalWorkflowManualApprovalArray{ GetEntitlementApprovalWorkflowManualApprovalArgs{...} }
type GetEntitlementApprovalWorkflowManualApprovalArrayInput interface {
	pulumi.Input

	ToGetEntitlementApprovalWorkflowManualApprovalArrayOutput() GetEntitlementApprovalWorkflowManualApprovalArrayOutput
	ToGetEntitlementApprovalWorkflowManualApprovalArrayOutputWithContext(context.Context) GetEntitlementApprovalWorkflowManualApprovalArrayOutput
}

type GetEntitlementApprovalWorkflowManualApprovalArray []GetEntitlementApprovalWorkflowManualApprovalInput

func (GetEntitlementApprovalWorkflowManualApprovalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementApprovalWorkflowManualApproval)(nil)).Elem()
}

func (i GetEntitlementApprovalWorkflowManualApprovalArray) ToGetEntitlementApprovalWorkflowManualApprovalArrayOutput() GetEntitlementApprovalWorkflowManualApprovalArrayOutput {
	return i.ToGetEntitlementApprovalWorkflowManualApprovalArrayOutputWithContext(context.Background())
}

func (i GetEntitlementApprovalWorkflowManualApprovalArray) ToGetEntitlementApprovalWorkflowManualApprovalArrayOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementApprovalWorkflowManualApprovalArrayOutput)
}

type GetEntitlementApprovalWorkflowManualApprovalOutput struct{ *pulumi.OutputState }

func (GetEntitlementApprovalWorkflowManualApprovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApproval)(nil)).Elem()
}

func (o GetEntitlementApprovalWorkflowManualApprovalOutput) ToGetEntitlementApprovalWorkflowManualApprovalOutput() GetEntitlementApprovalWorkflowManualApprovalOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowManualApprovalOutput) ToGetEntitlementApprovalWorkflowManualApprovalOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalOutput {
	return o
}

// Optional. Do the approvers need to provide a justification for their actions?
func (o GetEntitlementApprovalWorkflowManualApprovalOutput) RequireApproverJustification() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEntitlementApprovalWorkflowManualApproval) bool { return v.RequireApproverJustification }).(pulumi.BoolOutput)
}

// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.
func (o GetEntitlementApprovalWorkflowManualApprovalOutput) Steps() GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput {
	return o.ApplyT(func(v GetEntitlementApprovalWorkflowManualApproval) []GetEntitlementApprovalWorkflowManualApprovalStep {
		return v.Steps
	}).(GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput)
}

type GetEntitlementApprovalWorkflowManualApprovalArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementApprovalWorkflowManualApprovalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementApprovalWorkflowManualApproval)(nil)).Elem()
}

func (o GetEntitlementApprovalWorkflowManualApprovalArrayOutput) ToGetEntitlementApprovalWorkflowManualApprovalArrayOutput() GetEntitlementApprovalWorkflowManualApprovalArrayOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowManualApprovalArrayOutput) ToGetEntitlementApprovalWorkflowManualApprovalArrayOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalArrayOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowManualApprovalArrayOutput) Index(i pulumi.IntInput) GetEntitlementApprovalWorkflowManualApprovalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementApprovalWorkflowManualApproval {
		return vs[0].([]GetEntitlementApprovalWorkflowManualApproval)[vs[1].(int)]
	}).(GetEntitlementApprovalWorkflowManualApprovalOutput)
}

type GetEntitlementApprovalWorkflowManualApprovalStep struct {
	// How many users from the above list need to approve.
	// If there are not enough distinct users in the list above then the workflow
	// will indefinitely block. Should always be greater than 0. Currently 1 is the only
	// supported value.
	ApprovalsNeeded int `pulumi:"approvalsNeeded"`
	// Optional. Additional email addresses to be notified when a grant is pending approval.
	ApproverEmailRecipients []string `pulumi:"approverEmailRecipients"`
	// The potential set of approvers in this step. This list should contain at only one entry.
	Approvers []GetEntitlementApprovalWorkflowManualApprovalStepApprover `pulumi:"approvers"`
	// Output Only. The ID of the approval step.
	Id string `pulumi:"id"`
}

// GetEntitlementApprovalWorkflowManualApprovalStepInput is an input type that accepts GetEntitlementApprovalWorkflowManualApprovalStepArgs and GetEntitlementApprovalWorkflowManualApprovalStepOutput values.
// You can construct a concrete instance of `GetEntitlementApprovalWorkflowManualApprovalStepInput` via:
//
//	GetEntitlementApprovalWorkflowManualApprovalStepArgs{...}
type GetEntitlementApprovalWorkflowManualApprovalStepInput interface {
	pulumi.Input

	ToGetEntitlementApprovalWorkflowManualApprovalStepOutput() GetEntitlementApprovalWorkflowManualApprovalStepOutput
	ToGetEntitlementApprovalWorkflowManualApprovalStepOutputWithContext(context.Context) GetEntitlementApprovalWorkflowManualApprovalStepOutput
}

type GetEntitlementApprovalWorkflowManualApprovalStepArgs struct {
	// How many users from the above list need to approve.
	// If there are not enough distinct users in the list above then the workflow
	// will indefinitely block. Should always be greater than 0. Currently 1 is the only
	// supported value.
	ApprovalsNeeded pulumi.IntInput `pulumi:"approvalsNeeded"`
	// Optional. Additional email addresses to be notified when a grant is pending approval.
	ApproverEmailRecipients pulumi.StringArrayInput `pulumi:"approverEmailRecipients"`
	// The potential set of approvers in this step. This list should contain at only one entry.
	Approvers GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayInput `pulumi:"approvers"`
	// Output Only. The ID of the approval step.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetEntitlementApprovalWorkflowManualApprovalStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalStep)(nil)).Elem()
}

func (i GetEntitlementApprovalWorkflowManualApprovalStepArgs) ToGetEntitlementApprovalWorkflowManualApprovalStepOutput() GetEntitlementApprovalWorkflowManualApprovalStepOutput {
	return i.ToGetEntitlementApprovalWorkflowManualApprovalStepOutputWithContext(context.Background())
}

func (i GetEntitlementApprovalWorkflowManualApprovalStepArgs) ToGetEntitlementApprovalWorkflowManualApprovalStepOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementApprovalWorkflowManualApprovalStepOutput)
}

// GetEntitlementApprovalWorkflowManualApprovalStepArrayInput is an input type that accepts GetEntitlementApprovalWorkflowManualApprovalStepArray and GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput values.
// You can construct a concrete instance of `GetEntitlementApprovalWorkflowManualApprovalStepArrayInput` via:
//
//	GetEntitlementApprovalWorkflowManualApprovalStepArray{ GetEntitlementApprovalWorkflowManualApprovalStepArgs{...} }
type GetEntitlementApprovalWorkflowManualApprovalStepArrayInput interface {
	pulumi.Input

	ToGetEntitlementApprovalWorkflowManualApprovalStepArrayOutput() GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput
	ToGetEntitlementApprovalWorkflowManualApprovalStepArrayOutputWithContext(context.Context) GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput
}

type GetEntitlementApprovalWorkflowManualApprovalStepArray []GetEntitlementApprovalWorkflowManualApprovalStepInput

func (GetEntitlementApprovalWorkflowManualApprovalStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementApprovalWorkflowManualApprovalStep)(nil)).Elem()
}

func (i GetEntitlementApprovalWorkflowManualApprovalStepArray) ToGetEntitlementApprovalWorkflowManualApprovalStepArrayOutput() GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput {
	return i.ToGetEntitlementApprovalWorkflowManualApprovalStepArrayOutputWithContext(context.Background())
}

func (i GetEntitlementApprovalWorkflowManualApprovalStepArray) ToGetEntitlementApprovalWorkflowManualApprovalStepArrayOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput)
}

type GetEntitlementApprovalWorkflowManualApprovalStepOutput struct{ *pulumi.OutputState }

func (GetEntitlementApprovalWorkflowManualApprovalStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalStep)(nil)).Elem()
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepOutput) ToGetEntitlementApprovalWorkflowManualApprovalStepOutput() GetEntitlementApprovalWorkflowManualApprovalStepOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepOutput) ToGetEntitlementApprovalWorkflowManualApprovalStepOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalStepOutput {
	return o
}

// How many users from the above list need to approve.
// If there are not enough distinct users in the list above then the workflow
// will indefinitely block. Should always be greater than 0. Currently 1 is the only
// supported value.
func (o GetEntitlementApprovalWorkflowManualApprovalStepOutput) ApprovalsNeeded() pulumi.IntOutput {
	return o.ApplyT(func(v GetEntitlementApprovalWorkflowManualApprovalStep) int { return v.ApprovalsNeeded }).(pulumi.IntOutput)
}

// Optional. Additional email addresses to be notified when a grant is pending approval.
func (o GetEntitlementApprovalWorkflowManualApprovalStepOutput) ApproverEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEntitlementApprovalWorkflowManualApprovalStep) []string { return v.ApproverEmailRecipients }).(pulumi.StringArrayOutput)
}

// The potential set of approvers in this step. This list should contain at only one entry.
func (o GetEntitlementApprovalWorkflowManualApprovalStepOutput) Approvers() GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput {
	return o.ApplyT(func(v GetEntitlementApprovalWorkflowManualApprovalStep) []GetEntitlementApprovalWorkflowManualApprovalStepApprover {
		return v.Approvers
	}).(GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput)
}

// Output Only. The ID of the approval step.
func (o GetEntitlementApprovalWorkflowManualApprovalStepOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitlementApprovalWorkflowManualApprovalStep) string { return v.Id }).(pulumi.StringOutput)
}

type GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementApprovalWorkflowManualApprovalStep)(nil)).Elem()
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput) ToGetEntitlementApprovalWorkflowManualApprovalStepArrayOutput() GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput) ToGetEntitlementApprovalWorkflowManualApprovalStepArrayOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput) Index(i pulumi.IntInput) GetEntitlementApprovalWorkflowManualApprovalStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementApprovalWorkflowManualApprovalStep {
		return vs[0].([]GetEntitlementApprovalWorkflowManualApprovalStep)[vs[1].(int)]
	}).(GetEntitlementApprovalWorkflowManualApprovalStepOutput)
}

type GetEntitlementApprovalWorkflowManualApprovalStepApprover struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
	Principals []string `pulumi:"principals"`
}

// GetEntitlementApprovalWorkflowManualApprovalStepApproverInput is an input type that accepts GetEntitlementApprovalWorkflowManualApprovalStepApproverArgs and GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput values.
// You can construct a concrete instance of `GetEntitlementApprovalWorkflowManualApprovalStepApproverInput` via:
//
//	GetEntitlementApprovalWorkflowManualApprovalStepApproverArgs{...}
type GetEntitlementApprovalWorkflowManualApprovalStepApproverInput interface {
	pulumi.Input

	ToGetEntitlementApprovalWorkflowManualApprovalStepApproverOutput() GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput
	ToGetEntitlementApprovalWorkflowManualApprovalStepApproverOutputWithContext(context.Context) GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput
}

type GetEntitlementApprovalWorkflowManualApprovalStepApproverArgs struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
	Principals pulumi.StringArrayInput `pulumi:"principals"`
}

func (GetEntitlementApprovalWorkflowManualApprovalStepApproverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalStepApprover)(nil)).Elem()
}

func (i GetEntitlementApprovalWorkflowManualApprovalStepApproverArgs) ToGetEntitlementApprovalWorkflowManualApprovalStepApproverOutput() GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput {
	return i.ToGetEntitlementApprovalWorkflowManualApprovalStepApproverOutputWithContext(context.Background())
}

func (i GetEntitlementApprovalWorkflowManualApprovalStepApproverArgs) ToGetEntitlementApprovalWorkflowManualApprovalStepApproverOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput)
}

// GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayInput is an input type that accepts GetEntitlementApprovalWorkflowManualApprovalStepApproverArray and GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput values.
// You can construct a concrete instance of `GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayInput` via:
//
//	GetEntitlementApprovalWorkflowManualApprovalStepApproverArray{ GetEntitlementApprovalWorkflowManualApprovalStepApproverArgs{...} }
type GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayInput interface {
	pulumi.Input

	ToGetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput() GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput
	ToGetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutputWithContext(context.Context) GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput
}

type GetEntitlementApprovalWorkflowManualApprovalStepApproverArray []GetEntitlementApprovalWorkflowManualApprovalStepApproverInput

func (GetEntitlementApprovalWorkflowManualApprovalStepApproverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementApprovalWorkflowManualApprovalStepApprover)(nil)).Elem()
}

func (i GetEntitlementApprovalWorkflowManualApprovalStepApproverArray) ToGetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput() GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput {
	return i.ToGetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutputWithContext(context.Background())
}

func (i GetEntitlementApprovalWorkflowManualApprovalStepApproverArray) ToGetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput)
}

type GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput struct{ *pulumi.OutputState }

func (GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalStepApprover)(nil)).Elem()
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput) ToGetEntitlementApprovalWorkflowManualApprovalStepApproverOutput() GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput) ToGetEntitlementApprovalWorkflowManualApprovalStepApproverOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput {
	return o
}

// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
func (o GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEntitlementApprovalWorkflowManualApprovalStepApprover) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

type GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementApprovalWorkflowManualApprovalStepApprover)(nil)).Elem()
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput) ToGetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput() GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput) ToGetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutputWithContext(ctx context.Context) GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput {
	return o
}

func (o GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput) Index(i pulumi.IntInput) GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementApprovalWorkflowManualApprovalStepApprover {
		return vs[0].([]GetEntitlementApprovalWorkflowManualApprovalStepApprover)[vs[1].(int)]
	}).(GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput)
}

type GetEntitlementEligibleUser struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
	Principals []string `pulumi:"principals"`
}

// GetEntitlementEligibleUserInput is an input type that accepts GetEntitlementEligibleUserArgs and GetEntitlementEligibleUserOutput values.
// You can construct a concrete instance of `GetEntitlementEligibleUserInput` via:
//
//	GetEntitlementEligibleUserArgs{...}
type GetEntitlementEligibleUserInput interface {
	pulumi.Input

	ToGetEntitlementEligibleUserOutput() GetEntitlementEligibleUserOutput
	ToGetEntitlementEligibleUserOutputWithContext(context.Context) GetEntitlementEligibleUserOutput
}

type GetEntitlementEligibleUserArgs struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
	Principals pulumi.StringArrayInput `pulumi:"principals"`
}

func (GetEntitlementEligibleUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementEligibleUser)(nil)).Elem()
}

func (i GetEntitlementEligibleUserArgs) ToGetEntitlementEligibleUserOutput() GetEntitlementEligibleUserOutput {
	return i.ToGetEntitlementEligibleUserOutputWithContext(context.Background())
}

func (i GetEntitlementEligibleUserArgs) ToGetEntitlementEligibleUserOutputWithContext(ctx context.Context) GetEntitlementEligibleUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementEligibleUserOutput)
}

// GetEntitlementEligibleUserArrayInput is an input type that accepts GetEntitlementEligibleUserArray and GetEntitlementEligibleUserArrayOutput values.
// You can construct a concrete instance of `GetEntitlementEligibleUserArrayInput` via:
//
//	GetEntitlementEligibleUserArray{ GetEntitlementEligibleUserArgs{...} }
type GetEntitlementEligibleUserArrayInput interface {
	pulumi.Input

	ToGetEntitlementEligibleUserArrayOutput() GetEntitlementEligibleUserArrayOutput
	ToGetEntitlementEligibleUserArrayOutputWithContext(context.Context) GetEntitlementEligibleUserArrayOutput
}

type GetEntitlementEligibleUserArray []GetEntitlementEligibleUserInput

func (GetEntitlementEligibleUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementEligibleUser)(nil)).Elem()
}

func (i GetEntitlementEligibleUserArray) ToGetEntitlementEligibleUserArrayOutput() GetEntitlementEligibleUserArrayOutput {
	return i.ToGetEntitlementEligibleUserArrayOutputWithContext(context.Background())
}

func (i GetEntitlementEligibleUserArray) ToGetEntitlementEligibleUserArrayOutputWithContext(ctx context.Context) GetEntitlementEligibleUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementEligibleUserArrayOutput)
}

type GetEntitlementEligibleUserOutput struct{ *pulumi.OutputState }

func (GetEntitlementEligibleUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementEligibleUser)(nil)).Elem()
}

func (o GetEntitlementEligibleUserOutput) ToGetEntitlementEligibleUserOutput() GetEntitlementEligibleUserOutput {
	return o
}

func (o GetEntitlementEligibleUserOutput) ToGetEntitlementEligibleUserOutputWithContext(ctx context.Context) GetEntitlementEligibleUserOutput {
	return o
}

// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
func (o GetEntitlementEligibleUserOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEntitlementEligibleUser) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

type GetEntitlementEligibleUserArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementEligibleUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementEligibleUser)(nil)).Elem()
}

func (o GetEntitlementEligibleUserArrayOutput) ToGetEntitlementEligibleUserArrayOutput() GetEntitlementEligibleUserArrayOutput {
	return o
}

func (o GetEntitlementEligibleUserArrayOutput) ToGetEntitlementEligibleUserArrayOutputWithContext(ctx context.Context) GetEntitlementEligibleUserArrayOutput {
	return o
}

func (o GetEntitlementEligibleUserArrayOutput) Index(i pulumi.IntInput) GetEntitlementEligibleUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementEligibleUser {
		return vs[0].([]GetEntitlementEligibleUser)[vs[1].(int)]
	}).(GetEntitlementEligibleUserOutput)
}

type GetEntitlementPrivilegedAccess struct {
	// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
	GcpIamAccesses []GetEntitlementPrivilegedAccessGcpIamAccess `pulumi:"gcpIamAccesses"`
}

// GetEntitlementPrivilegedAccessInput is an input type that accepts GetEntitlementPrivilegedAccessArgs and GetEntitlementPrivilegedAccessOutput values.
// You can construct a concrete instance of `GetEntitlementPrivilegedAccessInput` via:
//
//	GetEntitlementPrivilegedAccessArgs{...}
type GetEntitlementPrivilegedAccessInput interface {
	pulumi.Input

	ToGetEntitlementPrivilegedAccessOutput() GetEntitlementPrivilegedAccessOutput
	ToGetEntitlementPrivilegedAccessOutputWithContext(context.Context) GetEntitlementPrivilegedAccessOutput
}

type GetEntitlementPrivilegedAccessArgs struct {
	// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
	GcpIamAccesses GetEntitlementPrivilegedAccessGcpIamAccessArrayInput `pulumi:"gcpIamAccesses"`
}

func (GetEntitlementPrivilegedAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementPrivilegedAccess)(nil)).Elem()
}

func (i GetEntitlementPrivilegedAccessArgs) ToGetEntitlementPrivilegedAccessOutput() GetEntitlementPrivilegedAccessOutput {
	return i.ToGetEntitlementPrivilegedAccessOutputWithContext(context.Background())
}

func (i GetEntitlementPrivilegedAccessArgs) ToGetEntitlementPrivilegedAccessOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementPrivilegedAccessOutput)
}

// GetEntitlementPrivilegedAccessArrayInput is an input type that accepts GetEntitlementPrivilegedAccessArray and GetEntitlementPrivilegedAccessArrayOutput values.
// You can construct a concrete instance of `GetEntitlementPrivilegedAccessArrayInput` via:
//
//	GetEntitlementPrivilegedAccessArray{ GetEntitlementPrivilegedAccessArgs{...} }
type GetEntitlementPrivilegedAccessArrayInput interface {
	pulumi.Input

	ToGetEntitlementPrivilegedAccessArrayOutput() GetEntitlementPrivilegedAccessArrayOutput
	ToGetEntitlementPrivilegedAccessArrayOutputWithContext(context.Context) GetEntitlementPrivilegedAccessArrayOutput
}

type GetEntitlementPrivilegedAccessArray []GetEntitlementPrivilegedAccessInput

func (GetEntitlementPrivilegedAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementPrivilegedAccess)(nil)).Elem()
}

func (i GetEntitlementPrivilegedAccessArray) ToGetEntitlementPrivilegedAccessArrayOutput() GetEntitlementPrivilegedAccessArrayOutput {
	return i.ToGetEntitlementPrivilegedAccessArrayOutputWithContext(context.Background())
}

func (i GetEntitlementPrivilegedAccessArray) ToGetEntitlementPrivilegedAccessArrayOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementPrivilegedAccessArrayOutput)
}

type GetEntitlementPrivilegedAccessOutput struct{ *pulumi.OutputState }

func (GetEntitlementPrivilegedAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementPrivilegedAccess)(nil)).Elem()
}

func (o GetEntitlementPrivilegedAccessOutput) ToGetEntitlementPrivilegedAccessOutput() GetEntitlementPrivilegedAccessOutput {
	return o
}

func (o GetEntitlementPrivilegedAccessOutput) ToGetEntitlementPrivilegedAccessOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessOutput {
	return o
}

// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
func (o GetEntitlementPrivilegedAccessOutput) GcpIamAccesses() GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput {
	return o.ApplyT(func(v GetEntitlementPrivilegedAccess) []GetEntitlementPrivilegedAccessGcpIamAccess {
		return v.GcpIamAccesses
	}).(GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput)
}

type GetEntitlementPrivilegedAccessArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementPrivilegedAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementPrivilegedAccess)(nil)).Elem()
}

func (o GetEntitlementPrivilegedAccessArrayOutput) ToGetEntitlementPrivilegedAccessArrayOutput() GetEntitlementPrivilegedAccessArrayOutput {
	return o
}

func (o GetEntitlementPrivilegedAccessArrayOutput) ToGetEntitlementPrivilegedAccessArrayOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessArrayOutput {
	return o
}

func (o GetEntitlementPrivilegedAccessArrayOutput) Index(i pulumi.IntInput) GetEntitlementPrivilegedAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementPrivilegedAccess {
		return vs[0].([]GetEntitlementPrivilegedAccess)[vs[1].(int)]
	}).(GetEntitlementPrivilegedAccessOutput)
}

type GetEntitlementPrivilegedAccessGcpIamAccess struct {
	// Name of the resource.
	Resource string `pulumi:"resource"`
	// The type of this resource.
	ResourceType string `pulumi:"resourceType"`
	// Role bindings to be created on successful grant.
	RoleBindings []GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding `pulumi:"roleBindings"`
}

// GetEntitlementPrivilegedAccessGcpIamAccessInput is an input type that accepts GetEntitlementPrivilegedAccessGcpIamAccessArgs and GetEntitlementPrivilegedAccessGcpIamAccessOutput values.
// You can construct a concrete instance of `GetEntitlementPrivilegedAccessGcpIamAccessInput` via:
//
//	GetEntitlementPrivilegedAccessGcpIamAccessArgs{...}
type GetEntitlementPrivilegedAccessGcpIamAccessInput interface {
	pulumi.Input

	ToGetEntitlementPrivilegedAccessGcpIamAccessOutput() GetEntitlementPrivilegedAccessGcpIamAccessOutput
	ToGetEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(context.Context) GetEntitlementPrivilegedAccessGcpIamAccessOutput
}

type GetEntitlementPrivilegedAccessGcpIamAccessArgs struct {
	// Name of the resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// The type of this resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Role bindings to be created on successful grant.
	RoleBindings GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput `pulumi:"roleBindings"`
}

func (GetEntitlementPrivilegedAccessGcpIamAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (i GetEntitlementPrivilegedAccessGcpIamAccessArgs) ToGetEntitlementPrivilegedAccessGcpIamAccessOutput() GetEntitlementPrivilegedAccessGcpIamAccessOutput {
	return i.ToGetEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(context.Background())
}

func (i GetEntitlementPrivilegedAccessGcpIamAccessArgs) ToGetEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessGcpIamAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementPrivilegedAccessGcpIamAccessOutput)
}

// GetEntitlementPrivilegedAccessGcpIamAccessArrayInput is an input type that accepts GetEntitlementPrivilegedAccessGcpIamAccessArray and GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput values.
// You can construct a concrete instance of `GetEntitlementPrivilegedAccessGcpIamAccessArrayInput` via:
//
//	GetEntitlementPrivilegedAccessGcpIamAccessArray{ GetEntitlementPrivilegedAccessGcpIamAccessArgs{...} }
type GetEntitlementPrivilegedAccessGcpIamAccessArrayInput interface {
	pulumi.Input

	ToGetEntitlementPrivilegedAccessGcpIamAccessArrayOutput() GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput
	ToGetEntitlementPrivilegedAccessGcpIamAccessArrayOutputWithContext(context.Context) GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput
}

type GetEntitlementPrivilegedAccessGcpIamAccessArray []GetEntitlementPrivilegedAccessGcpIamAccessInput

func (GetEntitlementPrivilegedAccessGcpIamAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (i GetEntitlementPrivilegedAccessGcpIamAccessArray) ToGetEntitlementPrivilegedAccessGcpIamAccessArrayOutput() GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput {
	return i.ToGetEntitlementPrivilegedAccessGcpIamAccessArrayOutputWithContext(context.Background())
}

func (i GetEntitlementPrivilegedAccessGcpIamAccessArray) ToGetEntitlementPrivilegedAccessGcpIamAccessArrayOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput)
}

type GetEntitlementPrivilegedAccessGcpIamAccessOutput struct{ *pulumi.OutputState }

func (GetEntitlementPrivilegedAccessGcpIamAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessOutput) ToGetEntitlementPrivilegedAccessGcpIamAccessOutput() GetEntitlementPrivilegedAccessGcpIamAccessOutput {
	return o
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessOutput) ToGetEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessGcpIamAccessOutput {
	return o
}

// Name of the resource.
func (o GetEntitlementPrivilegedAccessGcpIamAccessOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitlementPrivilegedAccessGcpIamAccess) string { return v.Resource }).(pulumi.StringOutput)
}

// The type of this resource.
func (o GetEntitlementPrivilegedAccessGcpIamAccessOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitlementPrivilegedAccessGcpIamAccess) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Role bindings to be created on successful grant.
func (o GetEntitlementPrivilegedAccessGcpIamAccessOutput) RoleBindings() GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o.ApplyT(func(v GetEntitlementPrivilegedAccessGcpIamAccess) []GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding {
		return v.RoleBindings
	}).(GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput)
}

type GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput) ToGetEntitlementPrivilegedAccessGcpIamAccessArrayOutput() GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput {
	return o
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput) ToGetEntitlementPrivilegedAccessGcpIamAccessArrayOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput {
	return o
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput) Index(i pulumi.IntInput) GetEntitlementPrivilegedAccessGcpIamAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementPrivilegedAccessGcpIamAccess {
		return vs[0].([]GetEntitlementPrivilegedAccessGcpIamAccess)[vs[1].(int)]
	}).(GetEntitlementPrivilegedAccessGcpIamAccessOutput)
}

type GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding struct {
	// The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
	// https://cloud.google.com/iam/docs/conditions-overview#attributes.
	ConditionExpression string `pulumi:"conditionExpression"`
	// Output Only. The ID corresponding to this role binding in the policy binding. This will be unique within an entitlement across time. Gets re-generated each time the entitlement is updated.
	Id string `pulumi:"id"`
	// IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
	Role string `pulumi:"role"`
}

// GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingInput is an input type that accepts GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs and GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput values.
// You can construct a concrete instance of `GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingInput` via:
//
//	GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs{...}
type GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingInput interface {
	pulumi.Input

	ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput() GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput
	ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(context.Context) GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput
}

type GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs struct {
	// The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
	// https://cloud.google.com/iam/docs/conditions-overview#attributes.
	ConditionExpression pulumi.StringInput `pulumi:"conditionExpression"`
	// Output Only. The ID corresponding to this role binding in the policy binding. This will be unique within an entitlement across time. Gets re-generated each time the entitlement is updated.
	Id pulumi.StringInput `pulumi:"id"`
	// IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (i GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs) ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput() GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return i.ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(context.Background())
}

func (i GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs) ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput)
}

// GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput is an input type that accepts GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArray and GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput values.
// You can construct a concrete instance of `GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput` via:
//
//	GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArray{ GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs{...} }
type GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput interface {
	pulumi.Input

	ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput() GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput
	ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(context.Context) GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput
}

type GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArray []GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingInput

func (GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (i GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArray) ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput() GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return i.ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(context.Background())
}

func (i GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArray) ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput)
}

type GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput struct{ *pulumi.OutputState }

func (GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput() GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return o
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return o
}

// The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
// https://cloud.google.com/iam/docs/conditions-overview#attributes.
func (o GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ConditionExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding) string { return v.ConditionExpression }).(pulumi.StringOutput)
}

// Output Only. The ID corresponding to this role binding in the policy binding. This will be unique within an entitlement across time. Gets re-generated each time the entitlement is updated.
func (o GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding) string { return v.Id }).(pulumi.StringOutput)
}

// IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
func (o GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding) string { return v.Role }).(pulumi.StringOutput)
}

type GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput() GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) ToGetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(ctx context.Context) GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o
}

func (o GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) Index(i pulumi.IntInput) GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding {
		return vs[0].([]GetEntitlementPrivilegedAccessGcpIamAccessRoleBinding)[vs[1].(int)]
	}).(GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput)
}

type GetEntitlementRequesterJustificationConfig struct {
	// The justification is not mandatory but can be provided in any of the supported formats.
	NotMandatories []GetEntitlementRequesterJustificationConfigNotMandatory `pulumi:"notMandatories"`
	// The requester has to provide a justification in the form of free flowing text.
	Unstructureds []GetEntitlementRequesterJustificationConfigUnstructured `pulumi:"unstructureds"`
}

// GetEntitlementRequesterJustificationConfigInput is an input type that accepts GetEntitlementRequesterJustificationConfigArgs and GetEntitlementRequesterJustificationConfigOutput values.
// You can construct a concrete instance of `GetEntitlementRequesterJustificationConfigInput` via:
//
//	GetEntitlementRequesterJustificationConfigArgs{...}
type GetEntitlementRequesterJustificationConfigInput interface {
	pulumi.Input

	ToGetEntitlementRequesterJustificationConfigOutput() GetEntitlementRequesterJustificationConfigOutput
	ToGetEntitlementRequesterJustificationConfigOutputWithContext(context.Context) GetEntitlementRequesterJustificationConfigOutput
}

type GetEntitlementRequesterJustificationConfigArgs struct {
	// The justification is not mandatory but can be provided in any of the supported formats.
	NotMandatories GetEntitlementRequesterJustificationConfigNotMandatoryArrayInput `pulumi:"notMandatories"`
	// The requester has to provide a justification in the form of free flowing text.
	Unstructureds GetEntitlementRequesterJustificationConfigUnstructuredArrayInput `pulumi:"unstructureds"`
}

func (GetEntitlementRequesterJustificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (i GetEntitlementRequesterJustificationConfigArgs) ToGetEntitlementRequesterJustificationConfigOutput() GetEntitlementRequesterJustificationConfigOutput {
	return i.ToGetEntitlementRequesterJustificationConfigOutputWithContext(context.Background())
}

func (i GetEntitlementRequesterJustificationConfigArgs) ToGetEntitlementRequesterJustificationConfigOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementRequesterJustificationConfigOutput)
}

// GetEntitlementRequesterJustificationConfigArrayInput is an input type that accepts GetEntitlementRequesterJustificationConfigArray and GetEntitlementRequesterJustificationConfigArrayOutput values.
// You can construct a concrete instance of `GetEntitlementRequesterJustificationConfigArrayInput` via:
//
//	GetEntitlementRequesterJustificationConfigArray{ GetEntitlementRequesterJustificationConfigArgs{...} }
type GetEntitlementRequesterJustificationConfigArrayInput interface {
	pulumi.Input

	ToGetEntitlementRequesterJustificationConfigArrayOutput() GetEntitlementRequesterJustificationConfigArrayOutput
	ToGetEntitlementRequesterJustificationConfigArrayOutputWithContext(context.Context) GetEntitlementRequesterJustificationConfigArrayOutput
}

type GetEntitlementRequesterJustificationConfigArray []GetEntitlementRequesterJustificationConfigInput

func (GetEntitlementRequesterJustificationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (i GetEntitlementRequesterJustificationConfigArray) ToGetEntitlementRequesterJustificationConfigArrayOutput() GetEntitlementRequesterJustificationConfigArrayOutput {
	return i.ToGetEntitlementRequesterJustificationConfigArrayOutputWithContext(context.Background())
}

func (i GetEntitlementRequesterJustificationConfigArray) ToGetEntitlementRequesterJustificationConfigArrayOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementRequesterJustificationConfigArrayOutput)
}

type GetEntitlementRequesterJustificationConfigOutput struct{ *pulumi.OutputState }

func (GetEntitlementRequesterJustificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (o GetEntitlementRequesterJustificationConfigOutput) ToGetEntitlementRequesterJustificationConfigOutput() GetEntitlementRequesterJustificationConfigOutput {
	return o
}

func (o GetEntitlementRequesterJustificationConfigOutput) ToGetEntitlementRequesterJustificationConfigOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigOutput {
	return o
}

// The justification is not mandatory but can be provided in any of the supported formats.
func (o GetEntitlementRequesterJustificationConfigOutput) NotMandatories() GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput {
	return o.ApplyT(func(v GetEntitlementRequesterJustificationConfig) []GetEntitlementRequesterJustificationConfigNotMandatory {
		return v.NotMandatories
	}).(GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput)
}

// The requester has to provide a justification in the form of free flowing text.
func (o GetEntitlementRequesterJustificationConfigOutput) Unstructureds() GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput {
	return o.ApplyT(func(v GetEntitlementRequesterJustificationConfig) []GetEntitlementRequesterJustificationConfigUnstructured {
		return v.Unstructureds
	}).(GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput)
}

type GetEntitlementRequesterJustificationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementRequesterJustificationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (o GetEntitlementRequesterJustificationConfigArrayOutput) ToGetEntitlementRequesterJustificationConfigArrayOutput() GetEntitlementRequesterJustificationConfigArrayOutput {
	return o
}

func (o GetEntitlementRequesterJustificationConfigArrayOutput) ToGetEntitlementRequesterJustificationConfigArrayOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigArrayOutput {
	return o
}

func (o GetEntitlementRequesterJustificationConfigArrayOutput) Index(i pulumi.IntInput) GetEntitlementRequesterJustificationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementRequesterJustificationConfig {
		return vs[0].([]GetEntitlementRequesterJustificationConfig)[vs[1].(int)]
	}).(GetEntitlementRequesterJustificationConfigOutput)
}

type GetEntitlementRequesterJustificationConfigNotMandatory struct {
}

// GetEntitlementRequesterJustificationConfigNotMandatoryInput is an input type that accepts GetEntitlementRequesterJustificationConfigNotMandatoryArgs and GetEntitlementRequesterJustificationConfigNotMandatoryOutput values.
// You can construct a concrete instance of `GetEntitlementRequesterJustificationConfigNotMandatoryInput` via:
//
//	GetEntitlementRequesterJustificationConfigNotMandatoryArgs{...}
type GetEntitlementRequesterJustificationConfigNotMandatoryInput interface {
	pulumi.Input

	ToGetEntitlementRequesterJustificationConfigNotMandatoryOutput() GetEntitlementRequesterJustificationConfigNotMandatoryOutput
	ToGetEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(context.Context) GetEntitlementRequesterJustificationConfigNotMandatoryOutput
}

type GetEntitlementRequesterJustificationConfigNotMandatoryArgs struct {
}

func (GetEntitlementRequesterJustificationConfigNotMandatoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (i GetEntitlementRequesterJustificationConfigNotMandatoryArgs) ToGetEntitlementRequesterJustificationConfigNotMandatoryOutput() GetEntitlementRequesterJustificationConfigNotMandatoryOutput {
	return i.ToGetEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(context.Background())
}

func (i GetEntitlementRequesterJustificationConfigNotMandatoryArgs) ToGetEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigNotMandatoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementRequesterJustificationConfigNotMandatoryOutput)
}

// GetEntitlementRequesterJustificationConfigNotMandatoryArrayInput is an input type that accepts GetEntitlementRequesterJustificationConfigNotMandatoryArray and GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput values.
// You can construct a concrete instance of `GetEntitlementRequesterJustificationConfigNotMandatoryArrayInput` via:
//
//	GetEntitlementRequesterJustificationConfigNotMandatoryArray{ GetEntitlementRequesterJustificationConfigNotMandatoryArgs{...} }
type GetEntitlementRequesterJustificationConfigNotMandatoryArrayInput interface {
	pulumi.Input

	ToGetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput() GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput
	ToGetEntitlementRequesterJustificationConfigNotMandatoryArrayOutputWithContext(context.Context) GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput
}

type GetEntitlementRequesterJustificationConfigNotMandatoryArray []GetEntitlementRequesterJustificationConfigNotMandatoryInput

func (GetEntitlementRequesterJustificationConfigNotMandatoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (i GetEntitlementRequesterJustificationConfigNotMandatoryArray) ToGetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput() GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput {
	return i.ToGetEntitlementRequesterJustificationConfigNotMandatoryArrayOutputWithContext(context.Background())
}

func (i GetEntitlementRequesterJustificationConfigNotMandatoryArray) ToGetEntitlementRequesterJustificationConfigNotMandatoryArrayOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput)
}

type GetEntitlementRequesterJustificationConfigNotMandatoryOutput struct{ *pulumi.OutputState }

func (GetEntitlementRequesterJustificationConfigNotMandatoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (o GetEntitlementRequesterJustificationConfigNotMandatoryOutput) ToGetEntitlementRequesterJustificationConfigNotMandatoryOutput() GetEntitlementRequesterJustificationConfigNotMandatoryOutput {
	return o
}

func (o GetEntitlementRequesterJustificationConfigNotMandatoryOutput) ToGetEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigNotMandatoryOutput {
	return o
}

type GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (o GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput) ToGetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput() GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput {
	return o
}

func (o GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput) ToGetEntitlementRequesterJustificationConfigNotMandatoryArrayOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput {
	return o
}

func (o GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput) Index(i pulumi.IntInput) GetEntitlementRequesterJustificationConfigNotMandatoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementRequesterJustificationConfigNotMandatory {
		return vs[0].([]GetEntitlementRequesterJustificationConfigNotMandatory)[vs[1].(int)]
	}).(GetEntitlementRequesterJustificationConfigNotMandatoryOutput)
}

type GetEntitlementRequesterJustificationConfigUnstructured struct {
}

// GetEntitlementRequesterJustificationConfigUnstructuredInput is an input type that accepts GetEntitlementRequesterJustificationConfigUnstructuredArgs and GetEntitlementRequesterJustificationConfigUnstructuredOutput values.
// You can construct a concrete instance of `GetEntitlementRequesterJustificationConfigUnstructuredInput` via:
//
//	GetEntitlementRequesterJustificationConfigUnstructuredArgs{...}
type GetEntitlementRequesterJustificationConfigUnstructuredInput interface {
	pulumi.Input

	ToGetEntitlementRequesterJustificationConfigUnstructuredOutput() GetEntitlementRequesterJustificationConfigUnstructuredOutput
	ToGetEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(context.Context) GetEntitlementRequesterJustificationConfigUnstructuredOutput
}

type GetEntitlementRequesterJustificationConfigUnstructuredArgs struct {
}

func (GetEntitlementRequesterJustificationConfigUnstructuredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (i GetEntitlementRequesterJustificationConfigUnstructuredArgs) ToGetEntitlementRequesterJustificationConfigUnstructuredOutput() GetEntitlementRequesterJustificationConfigUnstructuredOutput {
	return i.ToGetEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(context.Background())
}

func (i GetEntitlementRequesterJustificationConfigUnstructuredArgs) ToGetEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigUnstructuredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementRequesterJustificationConfigUnstructuredOutput)
}

// GetEntitlementRequesterJustificationConfigUnstructuredArrayInput is an input type that accepts GetEntitlementRequesterJustificationConfigUnstructuredArray and GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput values.
// You can construct a concrete instance of `GetEntitlementRequesterJustificationConfigUnstructuredArrayInput` via:
//
//	GetEntitlementRequesterJustificationConfigUnstructuredArray{ GetEntitlementRequesterJustificationConfigUnstructuredArgs{...} }
type GetEntitlementRequesterJustificationConfigUnstructuredArrayInput interface {
	pulumi.Input

	ToGetEntitlementRequesterJustificationConfigUnstructuredArrayOutput() GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput
	ToGetEntitlementRequesterJustificationConfigUnstructuredArrayOutputWithContext(context.Context) GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput
}

type GetEntitlementRequesterJustificationConfigUnstructuredArray []GetEntitlementRequesterJustificationConfigUnstructuredInput

func (GetEntitlementRequesterJustificationConfigUnstructuredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (i GetEntitlementRequesterJustificationConfigUnstructuredArray) ToGetEntitlementRequesterJustificationConfigUnstructuredArrayOutput() GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput {
	return i.ToGetEntitlementRequesterJustificationConfigUnstructuredArrayOutputWithContext(context.Background())
}

func (i GetEntitlementRequesterJustificationConfigUnstructuredArray) ToGetEntitlementRequesterJustificationConfigUnstructuredArrayOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput)
}

type GetEntitlementRequesterJustificationConfigUnstructuredOutput struct{ *pulumi.OutputState }

func (GetEntitlementRequesterJustificationConfigUnstructuredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (o GetEntitlementRequesterJustificationConfigUnstructuredOutput) ToGetEntitlementRequesterJustificationConfigUnstructuredOutput() GetEntitlementRequesterJustificationConfigUnstructuredOutput {
	return o
}

func (o GetEntitlementRequesterJustificationConfigUnstructuredOutput) ToGetEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigUnstructuredOutput {
	return o
}

type GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput struct{ *pulumi.OutputState }

func (GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (o GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput) ToGetEntitlementRequesterJustificationConfigUnstructuredArrayOutput() GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput {
	return o
}

func (o GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput) ToGetEntitlementRequesterJustificationConfigUnstructuredArrayOutputWithContext(ctx context.Context) GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput {
	return o
}

func (o GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput) Index(i pulumi.IntInput) GetEntitlementRequesterJustificationConfigUnstructuredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitlementRequesterJustificationConfigUnstructured {
		return vs[0].([]GetEntitlementRequesterJustificationConfigUnstructured)[vs[1].(int)]
	}).(GetEntitlementRequesterJustificationConfigUnstructuredOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementAdditionalNotificationTargetsInput)(nil)).Elem(), EntitlementAdditionalNotificationTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementAdditionalNotificationTargetsPtrInput)(nil)).Elem(), EntitlementAdditionalNotificationTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowInput)(nil)).Elem(), EntitlementApprovalWorkflowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowPtrInput)(nil)).Elem(), EntitlementApprovalWorkflowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsPtrInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepArrayInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepApproversInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsStepApproversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementEligibleUserInput)(nil)).Elem(), EntitlementEligibleUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementEligibleUserArrayInput)(nil)).Elem(), EntitlementEligibleUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessInput)(nil)).Elem(), EntitlementPrivilegedAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessPtrInput)(nil)).Elem(), EntitlementPrivilegedAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessInput)(nil)).Elem(), EntitlementPrivilegedAccessGcpIamAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessPtrInput)(nil)).Elem(), EntitlementPrivilegedAccessGcpIamAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput)(nil)).Elem(), EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput)(nil)).Elem(), EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigInput)(nil)).Elem(), EntitlementRequesterJustificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigPtrInput)(nil)).Elem(), EntitlementRequesterJustificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigNotMandatoryInput)(nil)).Elem(), EntitlementRequesterJustificationConfigNotMandatoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigNotMandatoryPtrInput)(nil)).Elem(), EntitlementRequesterJustificationConfigNotMandatoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigUnstructuredInput)(nil)).Elem(), EntitlementRequesterJustificationConfigUnstructuredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigUnstructuredPtrInput)(nil)).Elem(), EntitlementRequesterJustificationConfigUnstructuredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementAdditionalNotificationTargetInput)(nil)).Elem(), GetEntitlementAdditionalNotificationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementAdditionalNotificationTargetArrayInput)(nil)).Elem(), GetEntitlementAdditionalNotificationTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementApprovalWorkflowInput)(nil)).Elem(), GetEntitlementApprovalWorkflowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementApprovalWorkflowArrayInput)(nil)).Elem(), GetEntitlementApprovalWorkflowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalInput)(nil)).Elem(), GetEntitlementApprovalWorkflowManualApprovalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalArrayInput)(nil)).Elem(), GetEntitlementApprovalWorkflowManualApprovalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalStepInput)(nil)).Elem(), GetEntitlementApprovalWorkflowManualApprovalStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalStepArrayInput)(nil)).Elem(), GetEntitlementApprovalWorkflowManualApprovalStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalStepApproverInput)(nil)).Elem(), GetEntitlementApprovalWorkflowManualApprovalStepApproverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayInput)(nil)).Elem(), GetEntitlementApprovalWorkflowManualApprovalStepApproverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementEligibleUserInput)(nil)).Elem(), GetEntitlementEligibleUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementEligibleUserArrayInput)(nil)).Elem(), GetEntitlementEligibleUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementPrivilegedAccessInput)(nil)).Elem(), GetEntitlementPrivilegedAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementPrivilegedAccessArrayInput)(nil)).Elem(), GetEntitlementPrivilegedAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementPrivilegedAccessGcpIamAccessInput)(nil)).Elem(), GetEntitlementPrivilegedAccessGcpIamAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementPrivilegedAccessGcpIamAccessArrayInput)(nil)).Elem(), GetEntitlementPrivilegedAccessGcpIamAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingInput)(nil)).Elem(), GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput)(nil)).Elem(), GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementRequesterJustificationConfigInput)(nil)).Elem(), GetEntitlementRequesterJustificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementRequesterJustificationConfigArrayInput)(nil)).Elem(), GetEntitlementRequesterJustificationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementRequesterJustificationConfigNotMandatoryInput)(nil)).Elem(), GetEntitlementRequesterJustificationConfigNotMandatoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementRequesterJustificationConfigNotMandatoryArrayInput)(nil)).Elem(), GetEntitlementRequesterJustificationConfigNotMandatoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementRequesterJustificationConfigUnstructuredInput)(nil)).Elem(), GetEntitlementRequesterJustificationConfigUnstructuredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitlementRequesterJustificationConfigUnstructuredArrayInput)(nil)).Elem(), GetEntitlementRequesterJustificationConfigUnstructuredArray{})
	pulumi.RegisterOutputType(EntitlementAdditionalNotificationTargetsOutput{})
	pulumi.RegisterOutputType(EntitlementAdditionalNotificationTargetsPtrOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowPtrOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsPtrOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsStepOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsStepArrayOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsStepApproversOutput{})
	pulumi.RegisterOutputType(EntitlementEligibleUserOutput{})
	pulumi.RegisterOutputType(EntitlementEligibleUserArrayOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessPtrOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessGcpIamAccessOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessGcpIamAccessPtrOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigPtrOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigNotMandatoryOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigUnstructuredOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigUnstructuredPtrOutput{})
	pulumi.RegisterOutputType(GetEntitlementAdditionalNotificationTargetOutput{})
	pulumi.RegisterOutputType(GetEntitlementAdditionalNotificationTargetArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementApprovalWorkflowOutput{})
	pulumi.RegisterOutputType(GetEntitlementApprovalWorkflowArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementApprovalWorkflowManualApprovalOutput{})
	pulumi.RegisterOutputType(GetEntitlementApprovalWorkflowManualApprovalArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementApprovalWorkflowManualApprovalStepOutput{})
	pulumi.RegisterOutputType(GetEntitlementApprovalWorkflowManualApprovalStepArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementApprovalWorkflowManualApprovalStepApproverOutput{})
	pulumi.RegisterOutputType(GetEntitlementApprovalWorkflowManualApprovalStepApproverArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementEligibleUserOutput{})
	pulumi.RegisterOutputType(GetEntitlementEligibleUserArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementPrivilegedAccessOutput{})
	pulumi.RegisterOutputType(GetEntitlementPrivilegedAccessArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementPrivilegedAccessGcpIamAccessOutput{})
	pulumi.RegisterOutputType(GetEntitlementPrivilegedAccessGcpIamAccessArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput{})
	pulumi.RegisterOutputType(GetEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementRequesterJustificationConfigOutput{})
	pulumi.RegisterOutputType(GetEntitlementRequesterJustificationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementRequesterJustificationConfigNotMandatoryOutput{})
	pulumi.RegisterOutputType(GetEntitlementRequesterJustificationConfigNotMandatoryArrayOutput{})
	pulumi.RegisterOutputType(GetEntitlementRequesterJustificationConfigUnstructuredOutput{})
	pulumi.RegisterOutputType(GetEntitlementRequesterJustificationConfigUnstructuredArrayOutput{})
}
