// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privilegedaccessmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EntitlementAdditionalNotificationTargets struct {
	// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
	AdminEmailRecipients []string `pulumi:"adminEmailRecipients"`
	// Optional. Additional email address to be notified about an eligible entitlement.
	RequesterEmailRecipients []string `pulumi:"requesterEmailRecipients"`
}

// EntitlementAdditionalNotificationTargetsInput is an input type that accepts EntitlementAdditionalNotificationTargetsArgs and EntitlementAdditionalNotificationTargetsOutput values.
// You can construct a concrete instance of `EntitlementAdditionalNotificationTargetsInput` via:
//
//	EntitlementAdditionalNotificationTargetsArgs{...}
type EntitlementAdditionalNotificationTargetsInput interface {
	pulumi.Input

	ToEntitlementAdditionalNotificationTargetsOutput() EntitlementAdditionalNotificationTargetsOutput
	ToEntitlementAdditionalNotificationTargetsOutputWithContext(context.Context) EntitlementAdditionalNotificationTargetsOutput
}

type EntitlementAdditionalNotificationTargetsArgs struct {
	// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
	AdminEmailRecipients pulumi.StringArrayInput `pulumi:"adminEmailRecipients"`
	// Optional. Additional email address to be notified about an eligible entitlement.
	RequesterEmailRecipients pulumi.StringArrayInput `pulumi:"requesterEmailRecipients"`
}

func (EntitlementAdditionalNotificationTargetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementAdditionalNotificationTargets)(nil)).Elem()
}

func (i EntitlementAdditionalNotificationTargetsArgs) ToEntitlementAdditionalNotificationTargetsOutput() EntitlementAdditionalNotificationTargetsOutput {
	return i.ToEntitlementAdditionalNotificationTargetsOutputWithContext(context.Background())
}

func (i EntitlementAdditionalNotificationTargetsArgs) ToEntitlementAdditionalNotificationTargetsOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementAdditionalNotificationTargetsOutput)
}

func (i EntitlementAdditionalNotificationTargetsArgs) ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput {
	return i.ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(context.Background())
}

func (i EntitlementAdditionalNotificationTargetsArgs) ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementAdditionalNotificationTargetsOutput).ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx)
}

// EntitlementAdditionalNotificationTargetsPtrInput is an input type that accepts EntitlementAdditionalNotificationTargetsArgs, EntitlementAdditionalNotificationTargetsPtr and EntitlementAdditionalNotificationTargetsPtrOutput values.
// You can construct a concrete instance of `EntitlementAdditionalNotificationTargetsPtrInput` via:
//
//	        EntitlementAdditionalNotificationTargetsArgs{...}
//
//	or:
//
//	        nil
type EntitlementAdditionalNotificationTargetsPtrInput interface {
	pulumi.Input

	ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput
	ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(context.Context) EntitlementAdditionalNotificationTargetsPtrOutput
}

type entitlementAdditionalNotificationTargetsPtrType EntitlementAdditionalNotificationTargetsArgs

func EntitlementAdditionalNotificationTargetsPtr(v *EntitlementAdditionalNotificationTargetsArgs) EntitlementAdditionalNotificationTargetsPtrInput {
	return (*entitlementAdditionalNotificationTargetsPtrType)(v)
}

func (*entitlementAdditionalNotificationTargetsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementAdditionalNotificationTargets)(nil)).Elem()
}

func (i *entitlementAdditionalNotificationTargetsPtrType) ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput {
	return i.ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(context.Background())
}

func (i *entitlementAdditionalNotificationTargetsPtrType) ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementAdditionalNotificationTargetsPtrOutput)
}

type EntitlementAdditionalNotificationTargetsOutput struct{ *pulumi.OutputState }

func (EntitlementAdditionalNotificationTargetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementAdditionalNotificationTargets)(nil)).Elem()
}

func (o EntitlementAdditionalNotificationTargetsOutput) ToEntitlementAdditionalNotificationTargetsOutput() EntitlementAdditionalNotificationTargetsOutput {
	return o
}

func (o EntitlementAdditionalNotificationTargetsOutput) ToEntitlementAdditionalNotificationTargetsOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsOutput {
	return o
}

func (o EntitlementAdditionalNotificationTargetsOutput) ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput {
	return o.ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(context.Background())
}

func (o EntitlementAdditionalNotificationTargetsOutput) ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementAdditionalNotificationTargets) *EntitlementAdditionalNotificationTargets {
		return &v
	}).(EntitlementAdditionalNotificationTargetsPtrOutput)
}

// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
func (o EntitlementAdditionalNotificationTargetsOutput) AdminEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementAdditionalNotificationTargets) []string { return v.AdminEmailRecipients }).(pulumi.StringArrayOutput)
}

// Optional. Additional email address to be notified about an eligible entitlement.
func (o EntitlementAdditionalNotificationTargetsOutput) RequesterEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementAdditionalNotificationTargets) []string { return v.RequesterEmailRecipients }).(pulumi.StringArrayOutput)
}

type EntitlementAdditionalNotificationTargetsPtrOutput struct{ *pulumi.OutputState }

func (EntitlementAdditionalNotificationTargetsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementAdditionalNotificationTargets)(nil)).Elem()
}

func (o EntitlementAdditionalNotificationTargetsPtrOutput) ToEntitlementAdditionalNotificationTargetsPtrOutput() EntitlementAdditionalNotificationTargetsPtrOutput {
	return o
}

func (o EntitlementAdditionalNotificationTargetsPtrOutput) ToEntitlementAdditionalNotificationTargetsPtrOutputWithContext(ctx context.Context) EntitlementAdditionalNotificationTargetsPtrOutput {
	return o
}

func (o EntitlementAdditionalNotificationTargetsPtrOutput) Elem() EntitlementAdditionalNotificationTargetsOutput {
	return o.ApplyT(func(v *EntitlementAdditionalNotificationTargets) EntitlementAdditionalNotificationTargets {
		if v != nil {
			return *v
		}
		var ret EntitlementAdditionalNotificationTargets
		return ret
	}).(EntitlementAdditionalNotificationTargetsOutput)
}

// Optional. Additional email addresses to be notified when a principal(requester) is granted access.
func (o EntitlementAdditionalNotificationTargetsPtrOutput) AdminEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EntitlementAdditionalNotificationTargets) []string {
		if v == nil {
			return nil
		}
		return v.AdminEmailRecipients
	}).(pulumi.StringArrayOutput)
}

// Optional. Additional email address to be notified about an eligible entitlement.
func (o EntitlementAdditionalNotificationTargetsPtrOutput) RequesterEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EntitlementAdditionalNotificationTargets) []string {
		if v == nil {
			return nil
		}
		return v.RequesterEmailRecipients
	}).(pulumi.StringArrayOutput)
}

type EntitlementApprovalWorkflow struct {
	// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
	// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
	// This can be used to create approval workflows such as
	// * Require an approval from any user in a group G.
	// * Require an approval from any k number of users from a Group G.
	// * Require an approval from any user in a group G and then from a user U. etc.
	//   A single user might be part of `approvers` ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
	//   Structure is documented below.
	ManualApprovals EntitlementApprovalWorkflowManualApprovals `pulumi:"manualApprovals"`
}

// EntitlementApprovalWorkflowInput is an input type that accepts EntitlementApprovalWorkflowArgs and EntitlementApprovalWorkflowOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowInput` via:
//
//	EntitlementApprovalWorkflowArgs{...}
type EntitlementApprovalWorkflowInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowOutput() EntitlementApprovalWorkflowOutput
	ToEntitlementApprovalWorkflowOutputWithContext(context.Context) EntitlementApprovalWorkflowOutput
}

type EntitlementApprovalWorkflowArgs struct {
	// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
	// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
	// This can be used to create approval workflows such as
	// * Require an approval from any user in a group G.
	// * Require an approval from any k number of users from a Group G.
	// * Require an approval from any user in a group G and then from a user U. etc.
	//   A single user might be part of `approvers` ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
	//   Structure is documented below.
	ManualApprovals EntitlementApprovalWorkflowManualApprovalsInput `pulumi:"manualApprovals"`
}

func (EntitlementApprovalWorkflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflow)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowArgs) ToEntitlementApprovalWorkflowOutput() EntitlementApprovalWorkflowOutput {
	return i.ToEntitlementApprovalWorkflowOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowArgs) ToEntitlementApprovalWorkflowOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowOutput)
}

func (i EntitlementApprovalWorkflowArgs) ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput {
	return i.ToEntitlementApprovalWorkflowPtrOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowArgs) ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowOutput).ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx)
}

// EntitlementApprovalWorkflowPtrInput is an input type that accepts EntitlementApprovalWorkflowArgs, EntitlementApprovalWorkflowPtr and EntitlementApprovalWorkflowPtrOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowPtrInput` via:
//
//	        EntitlementApprovalWorkflowArgs{...}
//
//	or:
//
//	        nil
type EntitlementApprovalWorkflowPtrInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput
	ToEntitlementApprovalWorkflowPtrOutputWithContext(context.Context) EntitlementApprovalWorkflowPtrOutput
}

type entitlementApprovalWorkflowPtrType EntitlementApprovalWorkflowArgs

func EntitlementApprovalWorkflowPtr(v *EntitlementApprovalWorkflowArgs) EntitlementApprovalWorkflowPtrInput {
	return (*entitlementApprovalWorkflowPtrType)(v)
}

func (*entitlementApprovalWorkflowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementApprovalWorkflow)(nil)).Elem()
}

func (i *entitlementApprovalWorkflowPtrType) ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput {
	return i.ToEntitlementApprovalWorkflowPtrOutputWithContext(context.Background())
}

func (i *entitlementApprovalWorkflowPtrType) ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowPtrOutput)
}

type EntitlementApprovalWorkflowOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflow)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowOutput) ToEntitlementApprovalWorkflowOutput() EntitlementApprovalWorkflowOutput {
	return o
}

func (o EntitlementApprovalWorkflowOutput) ToEntitlementApprovalWorkflowOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowOutput {
	return o
}

func (o EntitlementApprovalWorkflowOutput) ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput {
	return o.ToEntitlementApprovalWorkflowPtrOutputWithContext(context.Background())
}

func (o EntitlementApprovalWorkflowOutput) ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementApprovalWorkflow) *EntitlementApprovalWorkflow {
		return &v
	}).(EntitlementApprovalWorkflowPtrOutput)
}

// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
// This can be used to create approval workflows such as
//   - Require an approval from any user in a group G.
//   - Require an approval from any k number of users from a Group G.
//   - Require an approval from any user in a group G and then from a user U. etc.
//     A single user might be part of `approvers` ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
//     Structure is documented below.
func (o EntitlementApprovalWorkflowOutput) ManualApprovals() EntitlementApprovalWorkflowManualApprovalsOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflow) EntitlementApprovalWorkflowManualApprovals {
		return v.ManualApprovals
	}).(EntitlementApprovalWorkflowManualApprovalsOutput)
}

type EntitlementApprovalWorkflowPtrOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementApprovalWorkflow)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowPtrOutput) ToEntitlementApprovalWorkflowPtrOutput() EntitlementApprovalWorkflowPtrOutput {
	return o
}

func (o EntitlementApprovalWorkflowPtrOutput) ToEntitlementApprovalWorkflowPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowPtrOutput {
	return o
}

func (o EntitlementApprovalWorkflowPtrOutput) Elem() EntitlementApprovalWorkflowOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflow) EntitlementApprovalWorkflow {
		if v != nil {
			return *v
		}
		var ret EntitlementApprovalWorkflow
		return ret
	}).(EntitlementApprovalWorkflowOutput)
}

// A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
// The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
// This can be used to create approval workflows such as
//   - Require an approval from any user in a group G.
//   - Require an approval from any k number of users from a Group G.
//   - Require an approval from any user in a group G and then from a user U. etc.
//     A single user might be part of `approvers` ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
//     Structure is documented below.
func (o EntitlementApprovalWorkflowPtrOutput) ManualApprovals() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflow) *EntitlementApprovalWorkflowManualApprovals {
		if v == nil {
			return nil
		}
		return &v.ManualApprovals
	}).(EntitlementApprovalWorkflowManualApprovalsPtrOutput)
}

type EntitlementApprovalWorkflowManualApprovals struct {
	// Optional. Do the approvers need to provide a justification for their actions?
	RequireApproverJustification *bool `pulumi:"requireApproverJustification"`
	// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
	// Structure is documented below.
	Steps []EntitlementApprovalWorkflowManualApprovalsStep `pulumi:"steps"`
}

// EntitlementApprovalWorkflowManualApprovalsInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsArgs and EntitlementApprovalWorkflowManualApprovalsOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsInput` via:
//
//	EntitlementApprovalWorkflowManualApprovalsArgs{...}
type EntitlementApprovalWorkflowManualApprovalsInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsOutput() EntitlementApprovalWorkflowManualApprovalsOutput
	ToEntitlementApprovalWorkflowManualApprovalsOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsOutput
}

type EntitlementApprovalWorkflowManualApprovalsArgs struct {
	// Optional. Do the approvers need to provide a justification for their actions?
	RequireApproverJustification pulumi.BoolPtrInput `pulumi:"requireApproverJustification"`
	// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
	// Structure is documented below.
	Steps EntitlementApprovalWorkflowManualApprovalsStepArrayInput `pulumi:"steps"`
}

func (EntitlementApprovalWorkflowManualApprovalsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovals)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowManualApprovalsArgs) ToEntitlementApprovalWorkflowManualApprovalsOutput() EntitlementApprovalWorkflowManualApprovalsOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsArgs) ToEntitlementApprovalWorkflowManualApprovalsOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsOutput)
}

func (i EntitlementApprovalWorkflowManualApprovalsArgs) ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsArgs) ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsOutput).ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx)
}

// EntitlementApprovalWorkflowManualApprovalsPtrInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsArgs, EntitlementApprovalWorkflowManualApprovalsPtr and EntitlementApprovalWorkflowManualApprovalsPtrOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsPtrInput` via:
//
//	        EntitlementApprovalWorkflowManualApprovalsArgs{...}
//
//	or:
//
//	        nil
type EntitlementApprovalWorkflowManualApprovalsPtrInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput
	ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput
}

type entitlementApprovalWorkflowManualApprovalsPtrType EntitlementApprovalWorkflowManualApprovalsArgs

func EntitlementApprovalWorkflowManualApprovalsPtr(v *EntitlementApprovalWorkflowManualApprovalsArgs) EntitlementApprovalWorkflowManualApprovalsPtrInput {
	return (*entitlementApprovalWorkflowManualApprovalsPtrType)(v)
}

func (*entitlementApprovalWorkflowManualApprovalsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementApprovalWorkflowManualApprovals)(nil)).Elem()
}

func (i *entitlementApprovalWorkflowManualApprovalsPtrType) ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(context.Background())
}

func (i *entitlementApprovalWorkflowManualApprovalsPtrType) ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsPtrOutput)
}

type EntitlementApprovalWorkflowManualApprovalsOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovals)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsOutput) ToEntitlementApprovalWorkflowManualApprovalsOutput() EntitlementApprovalWorkflowManualApprovalsOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsOutput) ToEntitlementApprovalWorkflowManualApprovalsOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsOutput) ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o.ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(context.Background())
}

func (o EntitlementApprovalWorkflowManualApprovalsOutput) ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementApprovalWorkflowManualApprovals) *EntitlementApprovalWorkflowManualApprovals {
		return &v
	}).(EntitlementApprovalWorkflowManualApprovalsPtrOutput)
}

// Optional. Do the approvers need to provide a justification for their actions?
func (o EntitlementApprovalWorkflowManualApprovalsOutput) RequireApproverJustification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovals) *bool { return v.RequireApproverJustification }).(pulumi.BoolPtrOutput)
}

// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
// Structure is documented below.
func (o EntitlementApprovalWorkflowManualApprovalsOutput) Steps() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovals) []EntitlementApprovalWorkflowManualApprovalsStep {
		return v.Steps
	}).(EntitlementApprovalWorkflowManualApprovalsStepArrayOutput)
}

type EntitlementApprovalWorkflowManualApprovalsPtrOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementApprovalWorkflowManualApprovals)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) ToEntitlementApprovalWorkflowManualApprovalsPtrOutput() EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) ToEntitlementApprovalWorkflowManualApprovalsPtrOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsPtrOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) Elem() EntitlementApprovalWorkflowManualApprovalsOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflowManualApprovals) EntitlementApprovalWorkflowManualApprovals {
		if v != nil {
			return *v
		}
		var ret EntitlementApprovalWorkflowManualApprovals
		return ret
	}).(EntitlementApprovalWorkflowManualApprovalsOutput)
}

// Optional. Do the approvers need to provide a justification for their actions?
func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) RequireApproverJustification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflowManualApprovals) *bool {
		if v == nil {
			return nil
		}
		return v.RequireApproverJustification
	}).(pulumi.BoolPtrOutput)
}

// List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
// Structure is documented below.
func (o EntitlementApprovalWorkflowManualApprovalsPtrOutput) Steps() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return o.ApplyT(func(v *EntitlementApprovalWorkflowManualApprovals) []EntitlementApprovalWorkflowManualApprovalsStep {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(EntitlementApprovalWorkflowManualApprovalsStepArrayOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStep struct {
	// How many users from the above list need to approve.
	// If there are not enough distinct users in the list above then the workflow
	// will indefinitely block. Should always be greater than 0. Currently 1 is the only
	// supported value.
	ApprovalsNeeded *int `pulumi:"approvalsNeeded"`
	// Optional. Additional email addresses to be notified when a grant is pending approval.
	ApproverEmailRecipients []string `pulumi:"approverEmailRecipients"`
	// The potential set of approvers in this step. This list should contain at only one entry.
	// Structure is documented below.
	Approvers EntitlementApprovalWorkflowManualApprovalsStepApprovers `pulumi:"approvers"`
}

// EntitlementApprovalWorkflowManualApprovalsStepInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsStepArgs and EntitlementApprovalWorkflowManualApprovalsStepOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsStepInput` via:
//
//	EntitlementApprovalWorkflowManualApprovalsStepArgs{...}
type EntitlementApprovalWorkflowManualApprovalsStepInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsStepOutput() EntitlementApprovalWorkflowManualApprovalsStepOutput
	ToEntitlementApprovalWorkflowManualApprovalsStepOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsStepOutput
}

type EntitlementApprovalWorkflowManualApprovalsStepArgs struct {
	// How many users from the above list need to approve.
	// If there are not enough distinct users in the list above then the workflow
	// will indefinitely block. Should always be greater than 0. Currently 1 is the only
	// supported value.
	ApprovalsNeeded pulumi.IntPtrInput `pulumi:"approvalsNeeded"`
	// Optional. Additional email addresses to be notified when a grant is pending approval.
	ApproverEmailRecipients pulumi.StringArrayInput `pulumi:"approverEmailRecipients"`
	// The potential set of approvers in this step. This list should contain at only one entry.
	// Structure is documented below.
	Approvers EntitlementApprovalWorkflowManualApprovalsStepApproversInput `pulumi:"approvers"`
}

func (EntitlementApprovalWorkflowManualApprovalsStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStep)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowManualApprovalsStepArgs) ToEntitlementApprovalWorkflowManualApprovalsStepOutput() EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsStepOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsStepArgs) ToEntitlementApprovalWorkflowManualApprovalsStepOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsStepOutput)
}

// EntitlementApprovalWorkflowManualApprovalsStepArrayInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsStepArray and EntitlementApprovalWorkflowManualApprovalsStepArrayOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsStepArrayInput` via:
//
//	EntitlementApprovalWorkflowManualApprovalsStepArray{ EntitlementApprovalWorkflowManualApprovalsStepArgs{...} }
type EntitlementApprovalWorkflowManualApprovalsStepArrayInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutput() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput
	ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsStepArrayOutput
}

type EntitlementApprovalWorkflowManualApprovalsStepArray []EntitlementApprovalWorkflowManualApprovalsStepInput

func (EntitlementApprovalWorkflowManualApprovalsStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementApprovalWorkflowManualApprovalsStep)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowManualApprovalsStepArray) ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutput() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsStepArray) ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsStepArrayOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStepOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStep)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) ToEntitlementApprovalWorkflowManualApprovalsStepOutput() EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) ToEntitlementApprovalWorkflowManualApprovalsStepOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return o
}

// How many users from the above list need to approve.
// If there are not enough distinct users in the list above then the workflow
// will indefinitely block. Should always be greater than 0. Currently 1 is the only
// supported value.
func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) ApprovalsNeeded() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovalsStep) *int { return v.ApprovalsNeeded }).(pulumi.IntPtrOutput)
}

// Optional. Additional email addresses to be notified when a grant is pending approval.
func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) ApproverEmailRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovalsStep) []string { return v.ApproverEmailRecipients }).(pulumi.StringArrayOutput)
}

// The potential set of approvers in this step. This list should contain at only one entry.
// Structure is documented below.
func (o EntitlementApprovalWorkflowManualApprovalsStepOutput) Approvers() EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovalsStep) EntitlementApprovalWorkflowManualApprovalsStepApprovers {
		return v.Approvers
	}).(EntitlementApprovalWorkflowManualApprovalsStepApproversOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStepArrayOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementApprovalWorkflowManualApprovalsStep)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsStepArrayOutput) ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutput() EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsStepArrayOutput) ToEntitlementApprovalWorkflowManualApprovalsStepArrayOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepArrayOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsStepArrayOutput) Index(i pulumi.IntInput) EntitlementApprovalWorkflowManualApprovalsStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntitlementApprovalWorkflowManualApprovalsStep {
		return vs[0].([]EntitlementApprovalWorkflowManualApprovalsStep)[vs[1].(int)]
	}).(EntitlementApprovalWorkflowManualApprovalsStepOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStepApprovers struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
	Principals []string `pulumi:"principals"`
}

// EntitlementApprovalWorkflowManualApprovalsStepApproversInput is an input type that accepts EntitlementApprovalWorkflowManualApprovalsStepApproversArgs and EntitlementApprovalWorkflowManualApprovalsStepApproversOutput values.
// You can construct a concrete instance of `EntitlementApprovalWorkflowManualApprovalsStepApproversInput` via:
//
//	EntitlementApprovalWorkflowManualApprovalsStepApproversArgs{...}
type EntitlementApprovalWorkflowManualApprovalsStepApproversInput interface {
	pulumi.Input

	ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutput() EntitlementApprovalWorkflowManualApprovalsStepApproversOutput
	ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutputWithContext(context.Context) EntitlementApprovalWorkflowManualApprovalsStepApproversOutput
}

type EntitlementApprovalWorkflowManualApprovalsStepApproversArgs struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
	Principals pulumi.StringArrayInput `pulumi:"principals"`
}

func (EntitlementApprovalWorkflowManualApprovalsStepApproversArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepApprovers)(nil)).Elem()
}

func (i EntitlementApprovalWorkflowManualApprovalsStepApproversArgs) ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutput() EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return i.ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutputWithContext(context.Background())
}

func (i EntitlementApprovalWorkflowManualApprovalsStepApproversArgs) ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementApprovalWorkflowManualApprovalsStepApproversOutput)
}

type EntitlementApprovalWorkflowManualApprovalsStepApproversOutput struct{ *pulumi.OutputState }

func (EntitlementApprovalWorkflowManualApprovalsStepApproversOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepApprovers)(nil)).Elem()
}

func (o EntitlementApprovalWorkflowManualApprovalsStepApproversOutput) ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutput() EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return o
}

func (o EntitlementApprovalWorkflowManualApprovalsStepApproversOutput) ToEntitlementApprovalWorkflowManualApprovalsStepApproversOutputWithContext(ctx context.Context) EntitlementApprovalWorkflowManualApprovalsStepApproversOutput {
	return o
}

// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
func (o EntitlementApprovalWorkflowManualApprovalsStepApproversOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementApprovalWorkflowManualApprovalsStepApprovers) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

type EntitlementEligibleUser struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
	Principals []string `pulumi:"principals"`
}

// EntitlementEligibleUserInput is an input type that accepts EntitlementEligibleUserArgs and EntitlementEligibleUserOutput values.
// You can construct a concrete instance of `EntitlementEligibleUserInput` via:
//
//	EntitlementEligibleUserArgs{...}
type EntitlementEligibleUserInput interface {
	pulumi.Input

	ToEntitlementEligibleUserOutput() EntitlementEligibleUserOutput
	ToEntitlementEligibleUserOutputWithContext(context.Context) EntitlementEligibleUserOutput
}

type EntitlementEligibleUserArgs struct {
	// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
	Principals pulumi.StringArrayInput `pulumi:"principals"`
}

func (EntitlementEligibleUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementEligibleUser)(nil)).Elem()
}

func (i EntitlementEligibleUserArgs) ToEntitlementEligibleUserOutput() EntitlementEligibleUserOutput {
	return i.ToEntitlementEligibleUserOutputWithContext(context.Background())
}

func (i EntitlementEligibleUserArgs) ToEntitlementEligibleUserOutputWithContext(ctx context.Context) EntitlementEligibleUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementEligibleUserOutput)
}

// EntitlementEligibleUserArrayInput is an input type that accepts EntitlementEligibleUserArray and EntitlementEligibleUserArrayOutput values.
// You can construct a concrete instance of `EntitlementEligibleUserArrayInput` via:
//
//	EntitlementEligibleUserArray{ EntitlementEligibleUserArgs{...} }
type EntitlementEligibleUserArrayInput interface {
	pulumi.Input

	ToEntitlementEligibleUserArrayOutput() EntitlementEligibleUserArrayOutput
	ToEntitlementEligibleUserArrayOutputWithContext(context.Context) EntitlementEligibleUserArrayOutput
}

type EntitlementEligibleUserArray []EntitlementEligibleUserInput

func (EntitlementEligibleUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementEligibleUser)(nil)).Elem()
}

func (i EntitlementEligibleUserArray) ToEntitlementEligibleUserArrayOutput() EntitlementEligibleUserArrayOutput {
	return i.ToEntitlementEligibleUserArrayOutputWithContext(context.Background())
}

func (i EntitlementEligibleUserArray) ToEntitlementEligibleUserArrayOutputWithContext(ctx context.Context) EntitlementEligibleUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementEligibleUserArrayOutput)
}

type EntitlementEligibleUserOutput struct{ *pulumi.OutputState }

func (EntitlementEligibleUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementEligibleUser)(nil)).Elem()
}

func (o EntitlementEligibleUserOutput) ToEntitlementEligibleUserOutput() EntitlementEligibleUserOutput {
	return o
}

func (o EntitlementEligibleUserOutput) ToEntitlementEligibleUserOutputWithContext(ctx context.Context) EntitlementEligibleUserOutput {
	return o
}

// Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
func (o EntitlementEligibleUserOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntitlementEligibleUser) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

type EntitlementEligibleUserArrayOutput struct{ *pulumi.OutputState }

func (EntitlementEligibleUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementEligibleUser)(nil)).Elem()
}

func (o EntitlementEligibleUserArrayOutput) ToEntitlementEligibleUserArrayOutput() EntitlementEligibleUserArrayOutput {
	return o
}

func (o EntitlementEligibleUserArrayOutput) ToEntitlementEligibleUserArrayOutputWithContext(ctx context.Context) EntitlementEligibleUserArrayOutput {
	return o
}

func (o EntitlementEligibleUserArrayOutput) Index(i pulumi.IntInput) EntitlementEligibleUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntitlementEligibleUser {
		return vs[0].([]EntitlementEligibleUser)[vs[1].(int)]
	}).(EntitlementEligibleUserOutput)
}

type EntitlementPrivilegedAccess struct {
	// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
	// Structure is documented below.
	GcpIamAccess EntitlementPrivilegedAccessGcpIamAccess `pulumi:"gcpIamAccess"`
}

// EntitlementPrivilegedAccessInput is an input type that accepts EntitlementPrivilegedAccessArgs and EntitlementPrivilegedAccessOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessInput` via:
//
//	EntitlementPrivilegedAccessArgs{...}
type EntitlementPrivilegedAccessInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessOutput() EntitlementPrivilegedAccessOutput
	ToEntitlementPrivilegedAccessOutputWithContext(context.Context) EntitlementPrivilegedAccessOutput
}

type EntitlementPrivilegedAccessArgs struct {
	// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
	// Structure is documented below.
	GcpIamAccess EntitlementPrivilegedAccessGcpIamAccessInput `pulumi:"gcpIamAccess"`
}

func (EntitlementPrivilegedAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccess)(nil)).Elem()
}

func (i EntitlementPrivilegedAccessArgs) ToEntitlementPrivilegedAccessOutput() EntitlementPrivilegedAccessOutput {
	return i.ToEntitlementPrivilegedAccessOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessArgs) ToEntitlementPrivilegedAccessOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessOutput)
}

func (i EntitlementPrivilegedAccessArgs) ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput {
	return i.ToEntitlementPrivilegedAccessPtrOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessArgs) ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessOutput).ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx)
}

// EntitlementPrivilegedAccessPtrInput is an input type that accepts EntitlementPrivilegedAccessArgs, EntitlementPrivilegedAccessPtr and EntitlementPrivilegedAccessPtrOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessPtrInput` via:
//
//	        EntitlementPrivilegedAccessArgs{...}
//
//	or:
//
//	        nil
type EntitlementPrivilegedAccessPtrInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput
	ToEntitlementPrivilegedAccessPtrOutputWithContext(context.Context) EntitlementPrivilegedAccessPtrOutput
}

type entitlementPrivilegedAccessPtrType EntitlementPrivilegedAccessArgs

func EntitlementPrivilegedAccessPtr(v *EntitlementPrivilegedAccessArgs) EntitlementPrivilegedAccessPtrInput {
	return (*entitlementPrivilegedAccessPtrType)(v)
}

func (*entitlementPrivilegedAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementPrivilegedAccess)(nil)).Elem()
}

func (i *entitlementPrivilegedAccessPtrType) ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput {
	return i.ToEntitlementPrivilegedAccessPtrOutputWithContext(context.Background())
}

func (i *entitlementPrivilegedAccessPtrType) ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessPtrOutput)
}

type EntitlementPrivilegedAccessOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccess)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessOutput) ToEntitlementPrivilegedAccessOutput() EntitlementPrivilegedAccessOutput {
	return o
}

func (o EntitlementPrivilegedAccessOutput) ToEntitlementPrivilegedAccessOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessOutput {
	return o
}

func (o EntitlementPrivilegedAccessOutput) ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput {
	return o.ToEntitlementPrivilegedAccessPtrOutputWithContext(context.Background())
}

func (o EntitlementPrivilegedAccessOutput) ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementPrivilegedAccess) *EntitlementPrivilegedAccess {
		return &v
	}).(EntitlementPrivilegedAccessPtrOutput)
}

// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
// Structure is documented below.
func (o EntitlementPrivilegedAccessOutput) GcpIamAccess() EntitlementPrivilegedAccessGcpIamAccessOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccess) EntitlementPrivilegedAccessGcpIamAccess { return v.GcpIamAccess }).(EntitlementPrivilegedAccessGcpIamAccessOutput)
}

type EntitlementPrivilegedAccessPtrOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementPrivilegedAccess)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessPtrOutput) ToEntitlementPrivilegedAccessPtrOutput() EntitlementPrivilegedAccessPtrOutput {
	return o
}

func (o EntitlementPrivilegedAccessPtrOutput) ToEntitlementPrivilegedAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessPtrOutput {
	return o
}

func (o EntitlementPrivilegedAccessPtrOutput) Elem() EntitlementPrivilegedAccessOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccess) EntitlementPrivilegedAccess {
		if v != nil {
			return *v
		}
		var ret EntitlementPrivilegedAccess
		return ret
	}).(EntitlementPrivilegedAccessOutput)
}

// GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
// Structure is documented below.
func (o EntitlementPrivilegedAccessPtrOutput) GcpIamAccess() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccess) *EntitlementPrivilegedAccessGcpIamAccess {
		if v == nil {
			return nil
		}
		return &v.GcpIamAccess
	}).(EntitlementPrivilegedAccessGcpIamAccessPtrOutput)
}

type EntitlementPrivilegedAccessGcpIamAccess struct {
	// Name of the resource.
	Resource string `pulumi:"resource"`
	// The type of this resource.
	ResourceType string `pulumi:"resourceType"`
	// Role bindings to be created on successful grant.
	// Structure is documented below.
	RoleBindings []EntitlementPrivilegedAccessGcpIamAccessRoleBinding `pulumi:"roleBindings"`
}

// EntitlementPrivilegedAccessGcpIamAccessInput is an input type that accepts EntitlementPrivilegedAccessGcpIamAccessArgs and EntitlementPrivilegedAccessGcpIamAccessOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessGcpIamAccessInput` via:
//
//	EntitlementPrivilegedAccessGcpIamAccessArgs{...}
type EntitlementPrivilegedAccessGcpIamAccessInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessGcpIamAccessOutput() EntitlementPrivilegedAccessGcpIamAccessOutput
	ToEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(context.Context) EntitlementPrivilegedAccessGcpIamAccessOutput
}

type EntitlementPrivilegedAccessGcpIamAccessArgs struct {
	// Name of the resource.
	Resource pulumi.StringInput `pulumi:"resource"`
	// The type of this resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Role bindings to be created on successful grant.
	// Structure is documented below.
	RoleBindings EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput `pulumi:"roleBindings"`
}

func (EntitlementPrivilegedAccessGcpIamAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (i EntitlementPrivilegedAccessGcpIamAccessArgs) ToEntitlementPrivilegedAccessGcpIamAccessOutput() EntitlementPrivilegedAccessGcpIamAccessOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessGcpIamAccessArgs) ToEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessOutput)
}

func (i EntitlementPrivilegedAccessGcpIamAccessArgs) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessGcpIamAccessArgs) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessOutput).ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx)
}

// EntitlementPrivilegedAccessGcpIamAccessPtrInput is an input type that accepts EntitlementPrivilegedAccessGcpIamAccessArgs, EntitlementPrivilegedAccessGcpIamAccessPtr and EntitlementPrivilegedAccessGcpIamAccessPtrOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessGcpIamAccessPtrInput` via:
//
//	        EntitlementPrivilegedAccessGcpIamAccessArgs{...}
//
//	or:
//
//	        nil
type EntitlementPrivilegedAccessGcpIamAccessPtrInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput
	ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput
}

type entitlementPrivilegedAccessGcpIamAccessPtrType EntitlementPrivilegedAccessGcpIamAccessArgs

func EntitlementPrivilegedAccessGcpIamAccessPtr(v *EntitlementPrivilegedAccessGcpIamAccessArgs) EntitlementPrivilegedAccessGcpIamAccessPtrInput {
	return (*entitlementPrivilegedAccessGcpIamAccessPtrType)(v)
}

func (*entitlementPrivilegedAccessGcpIamAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (i *entitlementPrivilegedAccessGcpIamAccessPtrType) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(context.Background())
}

func (i *entitlementPrivilegedAccessGcpIamAccessPtrType) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessPtrOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessGcpIamAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ToEntitlementPrivilegedAccessGcpIamAccessOutput() EntitlementPrivilegedAccessGcpIamAccessOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ToEntitlementPrivilegedAccessGcpIamAccessOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o.ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(context.Background())
}

func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementPrivilegedAccessGcpIamAccess) *EntitlementPrivilegedAccessGcpIamAccess {
		return &v
	}).(EntitlementPrivilegedAccessGcpIamAccessPtrOutput)
}

// Name of the resource.
func (o EntitlementPrivilegedAccessGcpIamAccessOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccess) string { return v.Resource }).(pulumi.StringOutput)
}

// The type of this resource.
func (o EntitlementPrivilegedAccessGcpIamAccessOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccess) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Role bindings to be created on successful grant.
// Structure is documented below.
func (o EntitlementPrivilegedAccessGcpIamAccessOutput) RoleBindings() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccess) []EntitlementPrivilegedAccessGcpIamAccessRoleBinding {
		return v.RoleBindings
	}).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessPtrOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessGcpIamAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementPrivilegedAccessGcpIamAccess)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutput() EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) ToEntitlementPrivilegedAccessGcpIamAccessPtrOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessPtrOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) Elem() EntitlementPrivilegedAccessGcpIamAccessOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccessGcpIamAccess) EntitlementPrivilegedAccessGcpIamAccess {
		if v != nil {
			return *v
		}
		var ret EntitlementPrivilegedAccessGcpIamAccess
		return ret
	}).(EntitlementPrivilegedAccessGcpIamAccessOutput)
}

// Name of the resource.
func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccessGcpIamAccess) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// The type of this resource.
func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccessGcpIamAccess) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// Role bindings to be created on successful grant.
// Structure is documented below.
func (o EntitlementPrivilegedAccessGcpIamAccessPtrOutput) RoleBindings() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o.ApplyT(func(v *EntitlementPrivilegedAccessGcpIamAccess) []EntitlementPrivilegedAccessGcpIamAccessRoleBinding {
		if v == nil {
			return nil
		}
		return v.RoleBindings
	}).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBinding struct {
	// The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
	// https://cloud.google.com/iam/docs/conditions-overview#attributes.
	ConditionExpression *string `pulumi:"conditionExpression"`
	// IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
	Role string `pulumi:"role"`
}

// EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput is an input type that accepts EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs and EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput` via:
//
//	EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs{...}
type EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput
	ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs struct {
	// The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
	// https://cloud.google.com/iam/docs/conditions-overview#attributes.
	ConditionExpression pulumi.StringPtrInput `pulumi:"conditionExpression"`
	// IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
	Role pulumi.StringInput `pulumi:"role"`
}

func (EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (i EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput)
}

// EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput is an input type that accepts EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray and EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput values.
// You can construct a concrete instance of `EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput` via:
//
//	EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray{ EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs{...} }
type EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput interface {
	pulumi.Input

	ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput
	ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray []EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput

func (EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (i EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return i.ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(context.Background())
}

func (i EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return o
}

// The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
// https://cloud.google.com/iam/docs/conditions-overview#attributes.
func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) ConditionExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccessRoleBinding) *string { return v.ConditionExpression }).(pulumi.StringPtrOutput)
}

// IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v EntitlementPrivilegedAccessGcpIamAccessRoleBinding) string { return v.Role }).(pulumi.StringOutput)
}

type EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput struct{ *pulumi.OutputState }

func (EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntitlementPrivilegedAccessGcpIamAccessRoleBinding)(nil)).Elem()
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput() EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) ToEntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutputWithContext(ctx context.Context) EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput {
	return o
}

func (o EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput) Index(i pulumi.IntInput) EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntitlementPrivilegedAccessGcpIamAccessRoleBinding {
		return vs[0].([]EntitlementPrivilegedAccessGcpIamAccessRoleBinding)[vs[1].(int)]
	}).(EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput)
}

type EntitlementRequesterJustificationConfig struct {
	// The justification is not mandatory but can be provided in any of the supported formats.
	NotMandatory *EntitlementRequesterJustificationConfigNotMandatory `pulumi:"notMandatory"`
	// The requester has to provide a justification in the form of free flowing text.
	//
	// ***
	Unstructured *EntitlementRequesterJustificationConfigUnstructured `pulumi:"unstructured"`
}

// EntitlementRequesterJustificationConfigInput is an input type that accepts EntitlementRequesterJustificationConfigArgs and EntitlementRequesterJustificationConfigOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigInput` via:
//
//	EntitlementRequesterJustificationConfigArgs{...}
type EntitlementRequesterJustificationConfigInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigOutput() EntitlementRequesterJustificationConfigOutput
	ToEntitlementRequesterJustificationConfigOutputWithContext(context.Context) EntitlementRequesterJustificationConfigOutput
}

type EntitlementRequesterJustificationConfigArgs struct {
	// The justification is not mandatory but can be provided in any of the supported formats.
	NotMandatory EntitlementRequesterJustificationConfigNotMandatoryPtrInput `pulumi:"notMandatory"`
	// The requester has to provide a justification in the form of free flowing text.
	//
	// ***
	Unstructured EntitlementRequesterJustificationConfigUnstructuredPtrInput `pulumi:"unstructured"`
}

func (EntitlementRequesterJustificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (i EntitlementRequesterJustificationConfigArgs) ToEntitlementRequesterJustificationConfigOutput() EntitlementRequesterJustificationConfigOutput {
	return i.ToEntitlementRequesterJustificationConfigOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigArgs) ToEntitlementRequesterJustificationConfigOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigOutput)
}

func (i EntitlementRequesterJustificationConfigArgs) ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigPtrOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigArgs) ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigOutput).ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx)
}

// EntitlementRequesterJustificationConfigPtrInput is an input type that accepts EntitlementRequesterJustificationConfigArgs, EntitlementRequesterJustificationConfigPtr and EntitlementRequesterJustificationConfigPtrOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigPtrInput` via:
//
//	        EntitlementRequesterJustificationConfigArgs{...}
//
//	or:
//
//	        nil
type EntitlementRequesterJustificationConfigPtrInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput
	ToEntitlementRequesterJustificationConfigPtrOutputWithContext(context.Context) EntitlementRequesterJustificationConfigPtrOutput
}

type entitlementRequesterJustificationConfigPtrType EntitlementRequesterJustificationConfigArgs

func EntitlementRequesterJustificationConfigPtr(v *EntitlementRequesterJustificationConfigArgs) EntitlementRequesterJustificationConfigPtrInput {
	return (*entitlementRequesterJustificationConfigPtrType)(v)
}

func (*entitlementRequesterJustificationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (i *entitlementRequesterJustificationConfigPtrType) ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigPtrOutputWithContext(context.Background())
}

func (i *entitlementRequesterJustificationConfigPtrType) ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigPtrOutput)
}

type EntitlementRequesterJustificationConfigOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigOutput) ToEntitlementRequesterJustificationConfigOutput() EntitlementRequesterJustificationConfigOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigOutput) ToEntitlementRequesterJustificationConfigOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigOutput) ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput {
	return o.ToEntitlementRequesterJustificationConfigPtrOutputWithContext(context.Background())
}

func (o EntitlementRequesterJustificationConfigOutput) ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfig {
		return &v
	}).(EntitlementRequesterJustificationConfigPtrOutput)
}

// The justification is not mandatory but can be provided in any of the supported formats.
func (o EntitlementRequesterJustificationConfigOutput) NotMandatory() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o.ApplyT(func(v EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfigNotMandatory {
		return v.NotMandatory
	}).(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput)
}

// The requester has to provide a justification in the form of free flowing text.
//
// ***
func (o EntitlementRequesterJustificationConfigOutput) Unstructured() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o.ApplyT(func(v EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfigUnstructured {
		return v.Unstructured
	}).(EntitlementRequesterJustificationConfigUnstructuredPtrOutput)
}

type EntitlementRequesterJustificationConfigPtrOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfig)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigPtrOutput) ToEntitlementRequesterJustificationConfigPtrOutput() EntitlementRequesterJustificationConfigPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigPtrOutput) ToEntitlementRequesterJustificationConfigPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigPtrOutput) Elem() EntitlementRequesterJustificationConfigOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfig) EntitlementRequesterJustificationConfig {
		if v != nil {
			return *v
		}
		var ret EntitlementRequesterJustificationConfig
		return ret
	}).(EntitlementRequesterJustificationConfigOutput)
}

// The justification is not mandatory but can be provided in any of the supported formats.
func (o EntitlementRequesterJustificationConfigPtrOutput) NotMandatory() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfigNotMandatory {
		if v == nil {
			return nil
		}
		return v.NotMandatory
	}).(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput)
}

// The requester has to provide a justification in the form of free flowing text.
//
// ***
func (o EntitlementRequesterJustificationConfigPtrOutput) Unstructured() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfig) *EntitlementRequesterJustificationConfigUnstructured {
		if v == nil {
			return nil
		}
		return v.Unstructured
	}).(EntitlementRequesterJustificationConfigUnstructuredPtrOutput)
}

type EntitlementRequesterJustificationConfigNotMandatory struct {
}

// EntitlementRequesterJustificationConfigNotMandatoryInput is an input type that accepts EntitlementRequesterJustificationConfigNotMandatoryArgs and EntitlementRequesterJustificationConfigNotMandatoryOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigNotMandatoryInput` via:
//
//	EntitlementRequesterJustificationConfigNotMandatoryArgs{...}
type EntitlementRequesterJustificationConfigNotMandatoryInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigNotMandatoryOutput() EntitlementRequesterJustificationConfigNotMandatoryOutput
	ToEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(context.Context) EntitlementRequesterJustificationConfigNotMandatoryOutput
}

type EntitlementRequesterJustificationConfigNotMandatoryArgs struct {
}

func (EntitlementRequesterJustificationConfigNotMandatoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (i EntitlementRequesterJustificationConfigNotMandatoryArgs) ToEntitlementRequesterJustificationConfigNotMandatoryOutput() EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return i.ToEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigNotMandatoryArgs) ToEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigNotMandatoryOutput)
}

func (i EntitlementRequesterJustificationConfigNotMandatoryArgs) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigNotMandatoryArgs) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigNotMandatoryOutput).ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx)
}

// EntitlementRequesterJustificationConfigNotMandatoryPtrInput is an input type that accepts EntitlementRequesterJustificationConfigNotMandatoryArgs, EntitlementRequesterJustificationConfigNotMandatoryPtr and EntitlementRequesterJustificationConfigNotMandatoryPtrOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigNotMandatoryPtrInput` via:
//
//	        EntitlementRequesterJustificationConfigNotMandatoryArgs{...}
//
//	or:
//
//	        nil
type EntitlementRequesterJustificationConfigNotMandatoryPtrInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput
	ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput
}

type entitlementRequesterJustificationConfigNotMandatoryPtrType EntitlementRequesterJustificationConfigNotMandatoryArgs

func EntitlementRequesterJustificationConfigNotMandatoryPtr(v *EntitlementRequesterJustificationConfigNotMandatoryArgs) EntitlementRequesterJustificationConfigNotMandatoryPtrInput {
	return (*entitlementRequesterJustificationConfigNotMandatoryPtrType)(v)
}

func (*entitlementRequesterJustificationConfigNotMandatoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (i *entitlementRequesterJustificationConfigNotMandatoryPtrType) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(context.Background())
}

func (i *entitlementRequesterJustificationConfigNotMandatoryPtrType) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput)
}

type EntitlementRequesterJustificationConfigNotMandatoryOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigNotMandatoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigNotMandatoryOutput) ToEntitlementRequesterJustificationConfigNotMandatoryOutput() EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigNotMandatoryOutput) ToEntitlementRequesterJustificationConfigNotMandatoryOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigNotMandatoryOutput) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o.ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(context.Background())
}

func (o EntitlementRequesterJustificationConfigNotMandatoryOutput) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementRequesterJustificationConfigNotMandatory) *EntitlementRequesterJustificationConfigNotMandatory {
		return &v
	}).(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput)
}

type EntitlementRequesterJustificationConfigNotMandatoryPtrOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigNotMandatoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfigNotMandatory)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigNotMandatoryPtrOutput) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutput() EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigNotMandatoryPtrOutput) ToEntitlementRequesterJustificationConfigNotMandatoryPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigNotMandatoryPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigNotMandatoryPtrOutput) Elem() EntitlementRequesterJustificationConfigNotMandatoryOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfigNotMandatory) EntitlementRequesterJustificationConfigNotMandatory {
		if v != nil {
			return *v
		}
		var ret EntitlementRequesterJustificationConfigNotMandatory
		return ret
	}).(EntitlementRequesterJustificationConfigNotMandatoryOutput)
}

type EntitlementRequesterJustificationConfigUnstructured struct {
}

// EntitlementRequesterJustificationConfigUnstructuredInput is an input type that accepts EntitlementRequesterJustificationConfigUnstructuredArgs and EntitlementRequesterJustificationConfigUnstructuredOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigUnstructuredInput` via:
//
//	EntitlementRequesterJustificationConfigUnstructuredArgs{...}
type EntitlementRequesterJustificationConfigUnstructuredInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigUnstructuredOutput() EntitlementRequesterJustificationConfigUnstructuredOutput
	ToEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(context.Context) EntitlementRequesterJustificationConfigUnstructuredOutput
}

type EntitlementRequesterJustificationConfigUnstructuredArgs struct {
}

func (EntitlementRequesterJustificationConfigUnstructuredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (i EntitlementRequesterJustificationConfigUnstructuredArgs) ToEntitlementRequesterJustificationConfigUnstructuredOutput() EntitlementRequesterJustificationConfigUnstructuredOutput {
	return i.ToEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigUnstructuredArgs) ToEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigUnstructuredOutput)
}

func (i EntitlementRequesterJustificationConfigUnstructuredArgs) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(context.Background())
}

func (i EntitlementRequesterJustificationConfigUnstructuredArgs) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigUnstructuredOutput).ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx)
}

// EntitlementRequesterJustificationConfigUnstructuredPtrInput is an input type that accepts EntitlementRequesterJustificationConfigUnstructuredArgs, EntitlementRequesterJustificationConfigUnstructuredPtr and EntitlementRequesterJustificationConfigUnstructuredPtrOutput values.
// You can construct a concrete instance of `EntitlementRequesterJustificationConfigUnstructuredPtrInput` via:
//
//	        EntitlementRequesterJustificationConfigUnstructuredArgs{...}
//
//	or:
//
//	        nil
type EntitlementRequesterJustificationConfigUnstructuredPtrInput interface {
	pulumi.Input

	ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput
	ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput
}

type entitlementRequesterJustificationConfigUnstructuredPtrType EntitlementRequesterJustificationConfigUnstructuredArgs

func EntitlementRequesterJustificationConfigUnstructuredPtr(v *EntitlementRequesterJustificationConfigUnstructuredArgs) EntitlementRequesterJustificationConfigUnstructuredPtrInput {
	return (*entitlementRequesterJustificationConfigUnstructuredPtrType)(v)
}

func (*entitlementRequesterJustificationConfigUnstructuredPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (i *entitlementRequesterJustificationConfigUnstructuredPtrType) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return i.ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(context.Background())
}

func (i *entitlementRequesterJustificationConfigUnstructuredPtrType) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntitlementRequesterJustificationConfigUnstructuredPtrOutput)
}

type EntitlementRequesterJustificationConfigUnstructuredOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigUnstructuredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigUnstructuredOutput) ToEntitlementRequesterJustificationConfigUnstructuredOutput() EntitlementRequesterJustificationConfigUnstructuredOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigUnstructuredOutput) ToEntitlementRequesterJustificationConfigUnstructuredOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigUnstructuredOutput) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o.ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(context.Background())
}

func (o EntitlementRequesterJustificationConfigUnstructuredOutput) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntitlementRequesterJustificationConfigUnstructured) *EntitlementRequesterJustificationConfigUnstructured {
		return &v
	}).(EntitlementRequesterJustificationConfigUnstructuredPtrOutput)
}

type EntitlementRequesterJustificationConfigUnstructuredPtrOutput struct{ *pulumi.OutputState }

func (EntitlementRequesterJustificationConfigUnstructuredPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntitlementRequesterJustificationConfigUnstructured)(nil)).Elem()
}

func (o EntitlementRequesterJustificationConfigUnstructuredPtrOutput) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutput() EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigUnstructuredPtrOutput) ToEntitlementRequesterJustificationConfigUnstructuredPtrOutputWithContext(ctx context.Context) EntitlementRequesterJustificationConfigUnstructuredPtrOutput {
	return o
}

func (o EntitlementRequesterJustificationConfigUnstructuredPtrOutput) Elem() EntitlementRequesterJustificationConfigUnstructuredOutput {
	return o.ApplyT(func(v *EntitlementRequesterJustificationConfigUnstructured) EntitlementRequesterJustificationConfigUnstructured {
		if v != nil {
			return *v
		}
		var ret EntitlementRequesterJustificationConfigUnstructured
		return ret
	}).(EntitlementRequesterJustificationConfigUnstructuredOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementAdditionalNotificationTargetsInput)(nil)).Elem(), EntitlementAdditionalNotificationTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementAdditionalNotificationTargetsPtrInput)(nil)).Elem(), EntitlementAdditionalNotificationTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowInput)(nil)).Elem(), EntitlementApprovalWorkflowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowPtrInput)(nil)).Elem(), EntitlementApprovalWorkflowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsPtrInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepArrayInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementApprovalWorkflowManualApprovalsStepApproversInput)(nil)).Elem(), EntitlementApprovalWorkflowManualApprovalsStepApproversArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementEligibleUserInput)(nil)).Elem(), EntitlementEligibleUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementEligibleUserArrayInput)(nil)).Elem(), EntitlementEligibleUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessInput)(nil)).Elem(), EntitlementPrivilegedAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessPtrInput)(nil)).Elem(), EntitlementPrivilegedAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessInput)(nil)).Elem(), EntitlementPrivilegedAccessGcpIamAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessPtrInput)(nil)).Elem(), EntitlementPrivilegedAccessGcpIamAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessRoleBindingInput)(nil)).Elem(), EntitlementPrivilegedAccessGcpIamAccessRoleBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayInput)(nil)).Elem(), EntitlementPrivilegedAccessGcpIamAccessRoleBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigInput)(nil)).Elem(), EntitlementRequesterJustificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigPtrInput)(nil)).Elem(), EntitlementRequesterJustificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigNotMandatoryInput)(nil)).Elem(), EntitlementRequesterJustificationConfigNotMandatoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigNotMandatoryPtrInput)(nil)).Elem(), EntitlementRequesterJustificationConfigNotMandatoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigUnstructuredInput)(nil)).Elem(), EntitlementRequesterJustificationConfigUnstructuredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntitlementRequesterJustificationConfigUnstructuredPtrInput)(nil)).Elem(), EntitlementRequesterJustificationConfigUnstructuredArgs{})
	pulumi.RegisterOutputType(EntitlementAdditionalNotificationTargetsOutput{})
	pulumi.RegisterOutputType(EntitlementAdditionalNotificationTargetsPtrOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowPtrOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsPtrOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsStepOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsStepArrayOutput{})
	pulumi.RegisterOutputType(EntitlementApprovalWorkflowManualApprovalsStepApproversOutput{})
	pulumi.RegisterOutputType(EntitlementEligibleUserOutput{})
	pulumi.RegisterOutputType(EntitlementEligibleUserArrayOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessPtrOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessGcpIamAccessOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessGcpIamAccessPtrOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessGcpIamAccessRoleBindingOutput{})
	pulumi.RegisterOutputType(EntitlementPrivilegedAccessGcpIamAccessRoleBindingArrayOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigPtrOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigNotMandatoryOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigNotMandatoryPtrOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigUnstructuredOutput{})
	pulumi.RegisterOutputType(EntitlementRequesterJustificationConfigUnstructuredPtrOutput{})
}
