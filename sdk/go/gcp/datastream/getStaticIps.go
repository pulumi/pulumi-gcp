// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datastream

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the list of IP addresses that Datastream connects from. For more information see
// the [official documentation](https://cloud.google.com/datastream/docs/ip-allowlists-and-regions).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/datastream"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			datastreamIps, err := datastream.GetStaticIps(ctx, &datastream.GetStaticIpsArgs{
//				Location: "us-west1",
//				Project:  pulumi.StringRef("my-project"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("ipList", datastreamIps.StaticIps)
//			return nil
//		})
//	}
//
// ```
func GetStaticIps(ctx *pulumi.Context, args *GetStaticIpsArgs, opts ...pulumi.InvokeOption) (*GetStaticIpsResult, error) {
	var rv GetStaticIpsResult
	err := ctx.Invoke("gcp:datastream/getStaticIps:getStaticIps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStaticIps.
type GetStaticIpsArgs struct {
	// The location to list Datastream IPs for. For example: `us-east1`.
	Location string `pulumi:"location"`
	// Project from which to list static IP addresses. Defaults to project declared in the provider.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getStaticIps.
type GetStaticIpsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string  `pulumi:"id"`
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// A list of static IP addresses that Datastream will connect from.
	StaticIps []string `pulumi:"staticIps"`
}

func GetStaticIpsOutput(ctx *pulumi.Context, args GetStaticIpsOutputArgs, opts ...pulumi.InvokeOption) GetStaticIpsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetStaticIpsResult, error) {
			args := v.(GetStaticIpsArgs)
			r, err := GetStaticIps(ctx, &args, opts...)
			var s GetStaticIpsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetStaticIpsResultOutput)
}

// A collection of arguments for invoking getStaticIps.
type GetStaticIpsOutputArgs struct {
	// The location to list Datastream IPs for. For example: `us-east1`.
	Location pulumi.StringInput `pulumi:"location"`
	// Project from which to list static IP addresses. Defaults to project declared in the provider.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetStaticIpsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStaticIpsArgs)(nil)).Elem()
}

// A collection of values returned by getStaticIps.
type GetStaticIpsResultOutput struct{ *pulumi.OutputState }

func (GetStaticIpsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStaticIpsResult)(nil)).Elem()
}

func (o GetStaticIpsResultOutput) ToGetStaticIpsResultOutput() GetStaticIpsResultOutput {
	return o
}

func (o GetStaticIpsResultOutput) ToGetStaticIpsResultOutputWithContext(ctx context.Context) GetStaticIpsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetStaticIpsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStaticIpsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetStaticIpsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetStaticIpsResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetStaticIpsResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStaticIpsResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// A list of static IP addresses that Datastream will connect from.
func (o GetStaticIpsResultOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStaticIpsResult) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStaticIpsResultOutput{})
}
