// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package essentialcontacts

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A location is used to initialize a project.
//
// To get more information about Location, see:
//
// * [API documentation](https://cloud.google.com/document-warehouse/docs/reference/rest/v1/projects.locations)
// * How-to Guides
//   - [Official Documentation](https://cloud.google.com/document-warehouse/docs/overview)
//
// ## Example Usage
// ### Document Ai Warehouse Location
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/essentialcontacts"
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			project, err := organizations.LookupProject(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = essentialcontacts.NewDocumentAiWarehouseLocation(ctx, "example", &essentialcontacts.DocumentAiWarehouseLocationArgs{
//				Location:                   pulumi.String("us"),
//				ProjectNumber:              *pulumi.String(project.Number),
//				AccessControlMode:          pulumi.String("ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI"),
//				DatabaseType:               pulumi.String("DB_INFRA_SPANNER"),
//				KmsKey:                     pulumi.String("dummy_key"),
//				DocumentCreatorDefaultRole: pulumi.String("DOCUMENT_ADMIN"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// This resource does not support import.
type DocumentAiWarehouseLocation struct {
	pulumi.CustomResourceState

	// The access control mode for accessing the customer data.
	// Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
	AccessControlMode pulumi.StringOutput `pulumi:"accessControlMode"`
	// The type of database used to store customer data.
	// Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
	DatabaseType pulumi.StringOutput `pulumi:"databaseType"`
	// The default role for the person who create a document.
	// Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
	DocumentCreatorDefaultRole pulumi.StringPtrOutput `pulumi:"documentCreatorDefaultRole"`
	// The KMS key used for CMEK encryption. It is required that
	// the kms key is in the same region as the endpoint. The
	// same key will be used for all provisioned resources, if
	// encryption is available. If the kmsKey is left empty, no
	// encryption will be enforced.
	KmsKey pulumi.StringPtrOutput `pulumi:"kmsKey"`
	// The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
	//
	// ***
	Location pulumi.StringOutput `pulumi:"location"`
	// The unique identifier of the project.
	ProjectNumber pulumi.StringOutput `pulumi:"projectNumber"`
}

// NewDocumentAiWarehouseLocation registers a new resource with the given unique name, arguments, and options.
func NewDocumentAiWarehouseLocation(ctx *pulumi.Context,
	name string, args *DocumentAiWarehouseLocationArgs, opts ...pulumi.ResourceOption) (*DocumentAiWarehouseLocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessControlMode == nil {
		return nil, errors.New("invalid value for required argument 'AccessControlMode'")
	}
	if args.DatabaseType == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseType'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.ProjectNumber == nil {
		return nil, errors.New("invalid value for required argument 'ProjectNumber'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DocumentAiWarehouseLocation
	err := ctx.RegisterResource("gcp:essentialcontacts/documentAiWarehouseLocation:DocumentAiWarehouseLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDocumentAiWarehouseLocation gets an existing DocumentAiWarehouseLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDocumentAiWarehouseLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DocumentAiWarehouseLocationState, opts ...pulumi.ResourceOption) (*DocumentAiWarehouseLocation, error) {
	var resource DocumentAiWarehouseLocation
	err := ctx.ReadResource("gcp:essentialcontacts/documentAiWarehouseLocation:DocumentAiWarehouseLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DocumentAiWarehouseLocation resources.
type documentAiWarehouseLocationState struct {
	// The access control mode for accessing the customer data.
	// Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
	AccessControlMode *string `pulumi:"accessControlMode"`
	// The type of database used to store customer data.
	// Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
	DatabaseType *string `pulumi:"databaseType"`
	// The default role for the person who create a document.
	// Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
	DocumentCreatorDefaultRole *string `pulumi:"documentCreatorDefaultRole"`
	// The KMS key used for CMEK encryption. It is required that
	// the kms key is in the same region as the endpoint. The
	// same key will be used for all provisioned resources, if
	// encryption is available. If the kmsKey is left empty, no
	// encryption will be enforced.
	KmsKey *string `pulumi:"kmsKey"`
	// The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
	//
	// ***
	Location *string `pulumi:"location"`
	// The unique identifier of the project.
	ProjectNumber *string `pulumi:"projectNumber"`
}

type DocumentAiWarehouseLocationState struct {
	// The access control mode for accessing the customer data.
	// Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
	AccessControlMode pulumi.StringPtrInput
	// The type of database used to store customer data.
	// Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
	DatabaseType pulumi.StringPtrInput
	// The default role for the person who create a document.
	// Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
	DocumentCreatorDefaultRole pulumi.StringPtrInput
	// The KMS key used for CMEK encryption. It is required that
	// the kms key is in the same region as the endpoint. The
	// same key will be used for all provisioned resources, if
	// encryption is available. If the kmsKey is left empty, no
	// encryption will be enforced.
	KmsKey pulumi.StringPtrInput
	// The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
	//
	// ***
	Location pulumi.StringPtrInput
	// The unique identifier of the project.
	ProjectNumber pulumi.StringPtrInput
}

func (DocumentAiWarehouseLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*documentAiWarehouseLocationState)(nil)).Elem()
}

type documentAiWarehouseLocationArgs struct {
	// The access control mode for accessing the customer data.
	// Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
	AccessControlMode string `pulumi:"accessControlMode"`
	// The type of database used to store customer data.
	// Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
	DatabaseType string `pulumi:"databaseType"`
	// The default role for the person who create a document.
	// Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
	DocumentCreatorDefaultRole *string `pulumi:"documentCreatorDefaultRole"`
	// The KMS key used for CMEK encryption. It is required that
	// the kms key is in the same region as the endpoint. The
	// same key will be used for all provisioned resources, if
	// encryption is available. If the kmsKey is left empty, no
	// encryption will be enforced.
	KmsKey *string `pulumi:"kmsKey"`
	// The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
	//
	// ***
	Location string `pulumi:"location"`
	// The unique identifier of the project.
	ProjectNumber string `pulumi:"projectNumber"`
}

// The set of arguments for constructing a DocumentAiWarehouseLocation resource.
type DocumentAiWarehouseLocationArgs struct {
	// The access control mode for accessing the customer data.
	// Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
	AccessControlMode pulumi.StringInput
	// The type of database used to store customer data.
	// Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
	DatabaseType pulumi.StringInput
	// The default role for the person who create a document.
	// Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
	DocumentCreatorDefaultRole pulumi.StringPtrInput
	// The KMS key used for CMEK encryption. It is required that
	// the kms key is in the same region as the endpoint. The
	// same key will be used for all provisioned resources, if
	// encryption is available. If the kmsKey is left empty, no
	// encryption will be enforced.
	KmsKey pulumi.StringPtrInput
	// The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
	//
	// ***
	Location pulumi.StringInput
	// The unique identifier of the project.
	ProjectNumber pulumi.StringInput
}

func (DocumentAiWarehouseLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*documentAiWarehouseLocationArgs)(nil)).Elem()
}

type DocumentAiWarehouseLocationInput interface {
	pulumi.Input

	ToDocumentAiWarehouseLocationOutput() DocumentAiWarehouseLocationOutput
	ToDocumentAiWarehouseLocationOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationOutput
}

func (*DocumentAiWarehouseLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentAiWarehouseLocation)(nil)).Elem()
}

func (i *DocumentAiWarehouseLocation) ToDocumentAiWarehouseLocationOutput() DocumentAiWarehouseLocationOutput {
	return i.ToDocumentAiWarehouseLocationOutputWithContext(context.Background())
}

func (i *DocumentAiWarehouseLocation) ToDocumentAiWarehouseLocationOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentAiWarehouseLocationOutput)
}

// DocumentAiWarehouseLocationArrayInput is an input type that accepts DocumentAiWarehouseLocationArray and DocumentAiWarehouseLocationArrayOutput values.
// You can construct a concrete instance of `DocumentAiWarehouseLocationArrayInput` via:
//
//	DocumentAiWarehouseLocationArray{ DocumentAiWarehouseLocationArgs{...} }
type DocumentAiWarehouseLocationArrayInput interface {
	pulumi.Input

	ToDocumentAiWarehouseLocationArrayOutput() DocumentAiWarehouseLocationArrayOutput
	ToDocumentAiWarehouseLocationArrayOutputWithContext(context.Context) DocumentAiWarehouseLocationArrayOutput
}

type DocumentAiWarehouseLocationArray []DocumentAiWarehouseLocationInput

func (DocumentAiWarehouseLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DocumentAiWarehouseLocation)(nil)).Elem()
}

func (i DocumentAiWarehouseLocationArray) ToDocumentAiWarehouseLocationArrayOutput() DocumentAiWarehouseLocationArrayOutput {
	return i.ToDocumentAiWarehouseLocationArrayOutputWithContext(context.Background())
}

func (i DocumentAiWarehouseLocationArray) ToDocumentAiWarehouseLocationArrayOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentAiWarehouseLocationArrayOutput)
}

// DocumentAiWarehouseLocationMapInput is an input type that accepts DocumentAiWarehouseLocationMap and DocumentAiWarehouseLocationMapOutput values.
// You can construct a concrete instance of `DocumentAiWarehouseLocationMapInput` via:
//
//	DocumentAiWarehouseLocationMap{ "key": DocumentAiWarehouseLocationArgs{...} }
type DocumentAiWarehouseLocationMapInput interface {
	pulumi.Input

	ToDocumentAiWarehouseLocationMapOutput() DocumentAiWarehouseLocationMapOutput
	ToDocumentAiWarehouseLocationMapOutputWithContext(context.Context) DocumentAiWarehouseLocationMapOutput
}

type DocumentAiWarehouseLocationMap map[string]DocumentAiWarehouseLocationInput

func (DocumentAiWarehouseLocationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DocumentAiWarehouseLocation)(nil)).Elem()
}

func (i DocumentAiWarehouseLocationMap) ToDocumentAiWarehouseLocationMapOutput() DocumentAiWarehouseLocationMapOutput {
	return i.ToDocumentAiWarehouseLocationMapOutputWithContext(context.Background())
}

func (i DocumentAiWarehouseLocationMap) ToDocumentAiWarehouseLocationMapOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentAiWarehouseLocationMapOutput)
}

type DocumentAiWarehouseLocationOutput struct{ *pulumi.OutputState }

func (DocumentAiWarehouseLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentAiWarehouseLocation)(nil)).Elem()
}

func (o DocumentAiWarehouseLocationOutput) ToDocumentAiWarehouseLocationOutput() DocumentAiWarehouseLocationOutput {
	return o
}

func (o DocumentAiWarehouseLocationOutput) ToDocumentAiWarehouseLocationOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationOutput {
	return o
}

// The access control mode for accessing the customer data.
// Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
func (o DocumentAiWarehouseLocationOutput) AccessControlMode() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringOutput { return v.AccessControlMode }).(pulumi.StringOutput)
}

// The type of database used to store customer data.
// Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
func (o DocumentAiWarehouseLocationOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringOutput { return v.DatabaseType }).(pulumi.StringOutput)
}

// The default role for the person who create a document.
// Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
func (o DocumentAiWarehouseLocationOutput) DocumentCreatorDefaultRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringPtrOutput { return v.DocumentCreatorDefaultRole }).(pulumi.StringPtrOutput)
}

// The KMS key used for CMEK encryption. It is required that
// the kms key is in the same region as the endpoint. The
// same key will be used for all provisioned resources, if
// encryption is available. If the kmsKey is left empty, no
// encryption will be enforced.
func (o DocumentAiWarehouseLocationOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringPtrOutput { return v.KmsKey }).(pulumi.StringPtrOutput)
}

// The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
//
// ***
func (o DocumentAiWarehouseLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The unique identifier of the project.
func (o DocumentAiWarehouseLocationOutput) ProjectNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringOutput { return v.ProjectNumber }).(pulumi.StringOutput)
}

type DocumentAiWarehouseLocationArrayOutput struct{ *pulumi.OutputState }

func (DocumentAiWarehouseLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DocumentAiWarehouseLocation)(nil)).Elem()
}

func (o DocumentAiWarehouseLocationArrayOutput) ToDocumentAiWarehouseLocationArrayOutput() DocumentAiWarehouseLocationArrayOutput {
	return o
}

func (o DocumentAiWarehouseLocationArrayOutput) ToDocumentAiWarehouseLocationArrayOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationArrayOutput {
	return o
}

func (o DocumentAiWarehouseLocationArrayOutput) Index(i pulumi.IntInput) DocumentAiWarehouseLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DocumentAiWarehouseLocation {
		return vs[0].([]*DocumentAiWarehouseLocation)[vs[1].(int)]
	}).(DocumentAiWarehouseLocationOutput)
}

type DocumentAiWarehouseLocationMapOutput struct{ *pulumi.OutputState }

func (DocumentAiWarehouseLocationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DocumentAiWarehouseLocation)(nil)).Elem()
}

func (o DocumentAiWarehouseLocationMapOutput) ToDocumentAiWarehouseLocationMapOutput() DocumentAiWarehouseLocationMapOutput {
	return o
}

func (o DocumentAiWarehouseLocationMapOutput) ToDocumentAiWarehouseLocationMapOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationMapOutput {
	return o
}

func (o DocumentAiWarehouseLocationMapOutput) MapIndex(k pulumi.StringInput) DocumentAiWarehouseLocationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DocumentAiWarehouseLocation {
		return vs[0].(map[string]*DocumentAiWarehouseLocation)[vs[1].(string)]
	}).(DocumentAiWarehouseLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentAiWarehouseLocationInput)(nil)).Elem(), &DocumentAiWarehouseLocation{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentAiWarehouseLocationArrayInput)(nil)).Elem(), DocumentAiWarehouseLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentAiWarehouseLocationMapInput)(nil)).Elem(), DocumentAiWarehouseLocationMap{})
	pulumi.RegisterOutputType(DocumentAiWarehouseLocationOutput{})
	pulumi.RegisterOutputType(DocumentAiWarehouseLocationArrayOutput{})
	pulumi.RegisterOutputType(DocumentAiWarehouseLocationMapOutput{})
}
