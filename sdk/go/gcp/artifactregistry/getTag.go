// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifactregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source fetches information of a tag from a provided Artifact Registry repository.
func GetTag(ctx *pulumi.Context, args *GetTagArgs, opts ...pulumi.InvokeOption) (*GetTagResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTagResult
	err := ctx.Invoke("gcp:artifactregistry/getTag:getTag", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTag.
type GetTagArgs struct {
	// The location of the artifact registry.
	Location string `pulumi:"location"`
	// The name of the package.
	PackageName string `pulumi:"packageName"`
	// The project ID in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The last part of the repository name to fetch from.
	RepositoryId string `pulumi:"repositoryId"`
	// The name of the tag.
	TagName string `pulumi:"tagName"`
}

// A collection of values returned by getTag.
type GetTagResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	// The name of the tag, for example: `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1`. If the package part contains slashes, the slashes are escaped.
	Name         string  `pulumi:"name"`
	PackageName  string  `pulumi:"packageName"`
	Project      *string `pulumi:"project"`
	RepositoryId string  `pulumi:"repositoryId"`
	TagName      string  `pulumi:"tagName"`
	// The version of the tag.
	Version string `pulumi:"version"`
}

func GetTagOutput(ctx *pulumi.Context, args GetTagOutputArgs, opts ...pulumi.InvokeOption) GetTagResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTagResultOutput, error) {
			args := v.(GetTagArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:artifactregistry/getTag:getTag", args, GetTagResultOutput{}, options).(GetTagResultOutput), nil
		}).(GetTagResultOutput)
}

// A collection of arguments for invoking getTag.
type GetTagOutputArgs struct {
	// The location of the artifact registry.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the package.
	PackageName pulumi.StringInput `pulumi:"packageName"`
	// The project ID in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The last part of the repository name to fetch from.
	RepositoryId pulumi.StringInput `pulumi:"repositoryId"`
	// The name of the tag.
	TagName pulumi.StringInput `pulumi:"tagName"`
}

func (GetTagOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagArgs)(nil)).Elem()
}

// A collection of values returned by getTag.
type GetTagResultOutput struct{ *pulumi.OutputState }

func (GetTagResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagResult)(nil)).Elem()
}

func (o GetTagResultOutput) ToGetTagResultOutput() GetTagResultOutput {
	return o
}

func (o GetTagResultOutput) ToGetTagResultOutputWithContext(ctx context.Context) GetTagResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTagResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTagResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the tag, for example: `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1`. If the package part contains slashes, the slashes are escaped.
func (o GetTagResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTagResultOutput) PackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagResult) string { return v.PackageName }).(pulumi.StringOutput)
}

func (o GetTagResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTagResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o GetTagResultOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagResult) string { return v.RepositoryId }).(pulumi.StringOutput)
}

func (o GetTagResultOutput) TagName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagResult) string { return v.TagName }).(pulumi.StringOutput)
}

// The version of the tag.
func (o GetTagResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTagResultOutput{})
}
