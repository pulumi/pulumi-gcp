// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vertex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A collection of DataItems and Annotations on them.
//
// To get more information about Dataset, see:
//
// * [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.datasets)
// * How-to Guides
//     * [Official Documentation](https://cloud.google.com/vertex-ai/docs)
//
// ## Example Usage
// ### Vertex Ai Dataset
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/vertex"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := vertex.NewAiDataset(ctx, "dataset", &vertex.AiDatasetArgs{
// 			DisplayName:       pulumi.String("terraform"),
// 			MetadataSchemaUri: pulumi.String("gs://google-cloud-aiplatform/schema/dataset/metadata/image_1.0.0.yaml"),
// 			Region:            pulumi.String("us-central1"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// This resource does not support import.
type AiDataset struct {
	pulumi.CustomResourceState

	// The timestamp of when the dataset was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
	// Structure is documented below.
	EncryptionSpec AiDatasetEncryptionSpecPtrOutput `pulumi:"encryptionSpec"`
	// A set of key/value label pairs to assign to this Workflow.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri pulumi.StringOutput `pulumi:"metadataSchemaUri"`
	// The resource name of the Dataset. This value is set by Google.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The region of the dataset. eg us-central1
	Region pulumi.StringOutput `pulumi:"region"`
	// The timestamp of when the dataset was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAiDataset registers a new resource with the given unique name, arguments, and options.
func NewAiDataset(ctx *pulumi.Context,
	name string, args *AiDatasetArgs, opts ...pulumi.ResourceOption) (*AiDataset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.MetadataSchemaUri == nil {
		return nil, errors.New("invalid value for required argument 'MetadataSchemaUri'")
	}
	var resource AiDataset
	err := ctx.RegisterResource("gcp:vertex/aiDataset:AiDataset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAiDataset gets an existing AiDataset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAiDataset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AiDatasetState, opts ...pulumi.ResourceOption) (*AiDataset, error) {
	var resource AiDataset
	err := ctx.ReadResource("gcp:vertex/aiDataset:AiDataset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AiDataset resources.
type aiDatasetState struct {
	// The timestamp of when the dataset was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
	DisplayName *string `pulumi:"displayName"`
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
	// Structure is documented below.
	EncryptionSpec *AiDatasetEncryptionSpec `pulumi:"encryptionSpec"`
	// A set of key/value label pairs to assign to this Workflow.
	Labels map[string]string `pulumi:"labels"`
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri *string `pulumi:"metadataSchemaUri"`
	// The resource name of the Dataset. This value is set by Google.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region of the dataset. eg us-central1
	Region *string `pulumi:"region"`
	// The timestamp of when the dataset was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	UpdateTime *string `pulumi:"updateTime"`
}

type AiDatasetState struct {
	// The timestamp of when the dataset was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime pulumi.StringPtrInput
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
	DisplayName pulumi.StringPtrInput
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
	// Structure is documented below.
	EncryptionSpec AiDatasetEncryptionSpecPtrInput
	// A set of key/value label pairs to assign to this Workflow.
	Labels pulumi.StringMapInput
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri pulumi.StringPtrInput
	// The resource name of the Dataset. This value is set by Google.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The region of the dataset. eg us-central1
	Region pulumi.StringPtrInput
	// The timestamp of when the dataset was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	UpdateTime pulumi.StringPtrInput
}

func (AiDatasetState) ElementType() reflect.Type {
	return reflect.TypeOf((*aiDatasetState)(nil)).Elem()
}

type aiDatasetArgs struct {
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
	DisplayName string `pulumi:"displayName"`
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
	// Structure is documented below.
	EncryptionSpec *AiDatasetEncryptionSpec `pulumi:"encryptionSpec"`
	// A set of key/value label pairs to assign to this Workflow.
	Labels map[string]string `pulumi:"labels"`
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri string `pulumi:"metadataSchemaUri"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region of the dataset. eg us-central1
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a AiDataset resource.
type AiDatasetArgs struct {
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
	DisplayName pulumi.StringInput
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
	// Structure is documented below.
	EncryptionSpec AiDatasetEncryptionSpecPtrInput
	// A set of key/value label pairs to assign to this Workflow.
	Labels pulumi.StringMapInput
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The region of the dataset. eg us-central1
	Region pulumi.StringPtrInput
}

func (AiDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aiDatasetArgs)(nil)).Elem()
}

type AiDatasetInput interface {
	pulumi.Input

	ToAiDatasetOutput() AiDatasetOutput
	ToAiDatasetOutputWithContext(ctx context.Context) AiDatasetOutput
}

func (*AiDataset) ElementType() reflect.Type {
	return reflect.TypeOf((*AiDataset)(nil))
}

func (i *AiDataset) ToAiDatasetOutput() AiDatasetOutput {
	return i.ToAiDatasetOutputWithContext(context.Background())
}

func (i *AiDataset) ToAiDatasetOutputWithContext(ctx context.Context) AiDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiDatasetOutput)
}

func (i *AiDataset) ToAiDatasetPtrOutput() AiDatasetPtrOutput {
	return i.ToAiDatasetPtrOutputWithContext(context.Background())
}

func (i *AiDataset) ToAiDatasetPtrOutputWithContext(ctx context.Context) AiDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiDatasetPtrOutput)
}

type AiDatasetPtrInput interface {
	pulumi.Input

	ToAiDatasetPtrOutput() AiDatasetPtrOutput
	ToAiDatasetPtrOutputWithContext(ctx context.Context) AiDatasetPtrOutput
}

type aiDatasetPtrType AiDatasetArgs

func (*aiDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AiDataset)(nil))
}

func (i *aiDatasetPtrType) ToAiDatasetPtrOutput() AiDatasetPtrOutput {
	return i.ToAiDatasetPtrOutputWithContext(context.Background())
}

func (i *aiDatasetPtrType) ToAiDatasetPtrOutputWithContext(ctx context.Context) AiDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiDatasetPtrOutput)
}

// AiDatasetArrayInput is an input type that accepts AiDatasetArray and AiDatasetArrayOutput values.
// You can construct a concrete instance of `AiDatasetArrayInput` via:
//
//          AiDatasetArray{ AiDatasetArgs{...} }
type AiDatasetArrayInput interface {
	pulumi.Input

	ToAiDatasetArrayOutput() AiDatasetArrayOutput
	ToAiDatasetArrayOutputWithContext(context.Context) AiDatasetArrayOutput
}

type AiDatasetArray []AiDatasetInput

func (AiDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AiDataset)(nil)).Elem()
}

func (i AiDatasetArray) ToAiDatasetArrayOutput() AiDatasetArrayOutput {
	return i.ToAiDatasetArrayOutputWithContext(context.Background())
}

func (i AiDatasetArray) ToAiDatasetArrayOutputWithContext(ctx context.Context) AiDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiDatasetArrayOutput)
}

// AiDatasetMapInput is an input type that accepts AiDatasetMap and AiDatasetMapOutput values.
// You can construct a concrete instance of `AiDatasetMapInput` via:
//
//          AiDatasetMap{ "key": AiDatasetArgs{...} }
type AiDatasetMapInput interface {
	pulumi.Input

	ToAiDatasetMapOutput() AiDatasetMapOutput
	ToAiDatasetMapOutputWithContext(context.Context) AiDatasetMapOutput
}

type AiDatasetMap map[string]AiDatasetInput

func (AiDatasetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AiDataset)(nil)).Elem()
}

func (i AiDatasetMap) ToAiDatasetMapOutput() AiDatasetMapOutput {
	return i.ToAiDatasetMapOutputWithContext(context.Background())
}

func (i AiDatasetMap) ToAiDatasetMapOutputWithContext(ctx context.Context) AiDatasetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiDatasetMapOutput)
}

type AiDatasetOutput struct{ *pulumi.OutputState }

func (AiDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AiDataset)(nil))
}

func (o AiDatasetOutput) ToAiDatasetOutput() AiDatasetOutput {
	return o
}

func (o AiDatasetOutput) ToAiDatasetOutputWithContext(ctx context.Context) AiDatasetOutput {
	return o
}

func (o AiDatasetOutput) ToAiDatasetPtrOutput() AiDatasetPtrOutput {
	return o.ToAiDatasetPtrOutputWithContext(context.Background())
}

func (o AiDatasetOutput) ToAiDatasetPtrOutputWithContext(ctx context.Context) AiDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AiDataset) *AiDataset {
		return &v
	}).(AiDatasetPtrOutput)
}

type AiDatasetPtrOutput struct{ *pulumi.OutputState }

func (AiDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AiDataset)(nil))
}

func (o AiDatasetPtrOutput) ToAiDatasetPtrOutput() AiDatasetPtrOutput {
	return o
}

func (o AiDatasetPtrOutput) ToAiDatasetPtrOutputWithContext(ctx context.Context) AiDatasetPtrOutput {
	return o
}

func (o AiDatasetPtrOutput) Elem() AiDatasetOutput {
	return o.ApplyT(func(v *AiDataset) AiDataset {
		if v != nil {
			return *v
		}
		var ret AiDataset
		return ret
	}).(AiDatasetOutput)
}

type AiDatasetArrayOutput struct{ *pulumi.OutputState }

func (AiDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AiDataset)(nil))
}

func (o AiDatasetArrayOutput) ToAiDatasetArrayOutput() AiDatasetArrayOutput {
	return o
}

func (o AiDatasetArrayOutput) ToAiDatasetArrayOutputWithContext(ctx context.Context) AiDatasetArrayOutput {
	return o
}

func (o AiDatasetArrayOutput) Index(i pulumi.IntInput) AiDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AiDataset {
		return vs[0].([]AiDataset)[vs[1].(int)]
	}).(AiDatasetOutput)
}

type AiDatasetMapOutput struct{ *pulumi.OutputState }

func (AiDatasetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AiDataset)(nil))
}

func (o AiDatasetMapOutput) ToAiDatasetMapOutput() AiDatasetMapOutput {
	return o
}

func (o AiDatasetMapOutput) ToAiDatasetMapOutputWithContext(ctx context.Context) AiDatasetMapOutput {
	return o
}

func (o AiDatasetMapOutput) MapIndex(k pulumi.StringInput) AiDatasetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AiDataset {
		return vs[0].(map[string]AiDataset)[vs[1].(string)]
	}).(AiDatasetOutput)
}

func init() {
	pulumi.RegisterOutputType(AiDatasetOutput{})
	pulumi.RegisterOutputType(AiDatasetPtrOutput{})
	pulumi.RegisterOutputType(AiDatasetArrayOutput{})
	pulumi.RegisterOutputType(AiDatasetMapOutput{})
}
