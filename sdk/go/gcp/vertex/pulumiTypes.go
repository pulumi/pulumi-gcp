// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vertex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AiDatasetEncryptionSpec struct {
	// Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
	// Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
	KmsKeyName *string `pulumi:"kmsKeyName"`
}

// AiDatasetEncryptionSpecInput is an input type that accepts AiDatasetEncryptionSpecArgs and AiDatasetEncryptionSpecOutput values.
// You can construct a concrete instance of `AiDatasetEncryptionSpecInput` via:
//
//          AiDatasetEncryptionSpecArgs{...}
type AiDatasetEncryptionSpecInput interface {
	pulumi.Input

	ToAiDatasetEncryptionSpecOutput() AiDatasetEncryptionSpecOutput
	ToAiDatasetEncryptionSpecOutputWithContext(context.Context) AiDatasetEncryptionSpecOutput
}

type AiDatasetEncryptionSpecArgs struct {
	// Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
	// Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
}

func (AiDatasetEncryptionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AiDatasetEncryptionSpec)(nil)).Elem()
}

func (i AiDatasetEncryptionSpecArgs) ToAiDatasetEncryptionSpecOutput() AiDatasetEncryptionSpecOutput {
	return i.ToAiDatasetEncryptionSpecOutputWithContext(context.Background())
}

func (i AiDatasetEncryptionSpecArgs) ToAiDatasetEncryptionSpecOutputWithContext(ctx context.Context) AiDatasetEncryptionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiDatasetEncryptionSpecOutput)
}

func (i AiDatasetEncryptionSpecArgs) ToAiDatasetEncryptionSpecPtrOutput() AiDatasetEncryptionSpecPtrOutput {
	return i.ToAiDatasetEncryptionSpecPtrOutputWithContext(context.Background())
}

func (i AiDatasetEncryptionSpecArgs) ToAiDatasetEncryptionSpecPtrOutputWithContext(ctx context.Context) AiDatasetEncryptionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiDatasetEncryptionSpecOutput).ToAiDatasetEncryptionSpecPtrOutputWithContext(ctx)
}

// AiDatasetEncryptionSpecPtrInput is an input type that accepts AiDatasetEncryptionSpecArgs, AiDatasetEncryptionSpecPtr and AiDatasetEncryptionSpecPtrOutput values.
// You can construct a concrete instance of `AiDatasetEncryptionSpecPtrInput` via:
//
//          AiDatasetEncryptionSpecArgs{...}
//
//  or:
//
//          nil
type AiDatasetEncryptionSpecPtrInput interface {
	pulumi.Input

	ToAiDatasetEncryptionSpecPtrOutput() AiDatasetEncryptionSpecPtrOutput
	ToAiDatasetEncryptionSpecPtrOutputWithContext(context.Context) AiDatasetEncryptionSpecPtrOutput
}

type aiDatasetEncryptionSpecPtrType AiDatasetEncryptionSpecArgs

func AiDatasetEncryptionSpecPtr(v *AiDatasetEncryptionSpecArgs) AiDatasetEncryptionSpecPtrInput {
	return (*aiDatasetEncryptionSpecPtrType)(v)
}

func (*aiDatasetEncryptionSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AiDatasetEncryptionSpec)(nil)).Elem()
}

func (i *aiDatasetEncryptionSpecPtrType) ToAiDatasetEncryptionSpecPtrOutput() AiDatasetEncryptionSpecPtrOutput {
	return i.ToAiDatasetEncryptionSpecPtrOutputWithContext(context.Background())
}

func (i *aiDatasetEncryptionSpecPtrType) ToAiDatasetEncryptionSpecPtrOutputWithContext(ctx context.Context) AiDatasetEncryptionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiDatasetEncryptionSpecPtrOutput)
}

type AiDatasetEncryptionSpecOutput struct{ *pulumi.OutputState }

func (AiDatasetEncryptionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AiDatasetEncryptionSpec)(nil)).Elem()
}

func (o AiDatasetEncryptionSpecOutput) ToAiDatasetEncryptionSpecOutput() AiDatasetEncryptionSpecOutput {
	return o
}

func (o AiDatasetEncryptionSpecOutput) ToAiDatasetEncryptionSpecOutputWithContext(ctx context.Context) AiDatasetEncryptionSpecOutput {
	return o
}

func (o AiDatasetEncryptionSpecOutput) ToAiDatasetEncryptionSpecPtrOutput() AiDatasetEncryptionSpecPtrOutput {
	return o.ToAiDatasetEncryptionSpecPtrOutputWithContext(context.Background())
}

func (o AiDatasetEncryptionSpecOutput) ToAiDatasetEncryptionSpecPtrOutputWithContext(ctx context.Context) AiDatasetEncryptionSpecPtrOutput {
	return o.ApplyT(func(v AiDatasetEncryptionSpec) *AiDatasetEncryptionSpec {
		return &v
	}).(AiDatasetEncryptionSpecPtrOutput)
}

// Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
// Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
func (o AiDatasetEncryptionSpecOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AiDatasetEncryptionSpec) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

type AiDatasetEncryptionSpecPtrOutput struct{ *pulumi.OutputState }

func (AiDatasetEncryptionSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AiDatasetEncryptionSpec)(nil)).Elem()
}

func (o AiDatasetEncryptionSpecPtrOutput) ToAiDatasetEncryptionSpecPtrOutput() AiDatasetEncryptionSpecPtrOutput {
	return o
}

func (o AiDatasetEncryptionSpecPtrOutput) ToAiDatasetEncryptionSpecPtrOutputWithContext(ctx context.Context) AiDatasetEncryptionSpecPtrOutput {
	return o
}

func (o AiDatasetEncryptionSpecPtrOutput) Elem() AiDatasetEncryptionSpecOutput {
	return o.ApplyT(func(v *AiDatasetEncryptionSpec) AiDatasetEncryptionSpec { return *v }).(AiDatasetEncryptionSpecOutput)
}

// Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
// Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
func (o AiDatasetEncryptionSpecPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AiDatasetEncryptionSpec) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AiDatasetEncryptionSpecOutput{})
	pulumi.RegisterOutputType(AiDatasetEncryptionSpecPtrOutput{})
}
