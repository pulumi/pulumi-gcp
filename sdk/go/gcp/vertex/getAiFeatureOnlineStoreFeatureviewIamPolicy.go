// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vertex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/vertex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vertex.LookupAiFeatureOnlineStoreFeatureviewIamPolicy(ctx, &vertex.LookupAiFeatureOnlineStoreFeatureviewIamPolicyArgs{
//				Region:             pulumi.StringRef(featureview.Region),
//				FeatureOnlineStore: featureview.FeatureOnlineStore,
//				FeatureView:        featureview.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAiFeatureOnlineStoreFeatureviewIamPolicy(ctx *pulumi.Context, args *LookupAiFeatureOnlineStoreFeatureviewIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult
	err := ctx.Invoke("gcp:vertex/getAiFeatureOnlineStoreFeatureviewIamPolicy:getAiFeatureOnlineStoreFeatureviewIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAiFeatureOnlineStoreFeatureviewIamPolicy.
type LookupAiFeatureOnlineStoreFeatureviewIamPolicyArgs struct {
	// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore string `pulumi:"featureOnlineStore"`
	// Used to find the parent resource to bind the IAM policy to
	FeatureView string `pulumi:"featureView"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getAiFeatureOnlineStoreFeatureviewIamPolicy.
type LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag               string `pulumi:"etag"`
	FeatureOnlineStore string `pulumi:"featureOnlineStore"`
	FeatureView        string `pulumi:"featureView"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `vertex.AiFeatureOnlineStoreFeatureviewIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
}

func LookupAiFeatureOnlineStoreFeatureviewIamPolicyOutput(ctx *pulumi.Context, args LookupAiFeatureOnlineStoreFeatureviewIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput, error) {
			args := v.(LookupAiFeatureOnlineStoreFeatureviewIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:vertex/getAiFeatureOnlineStoreFeatureviewIamPolicy:getAiFeatureOnlineStoreFeatureviewIamPolicy", args, LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput{}, options).(LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput), nil
		}).(LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput)
}

// A collection of arguments for invoking getAiFeatureOnlineStoreFeatureviewIamPolicy.
type LookupAiFeatureOnlineStoreFeatureviewIamPolicyOutputArgs struct {
	// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore pulumi.StringInput `pulumi:"featureOnlineStore"`
	// Used to find the parent resource to bind the IAM policy to
	FeatureView pulumi.StringInput `pulumi:"featureView"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupAiFeatureOnlineStoreFeatureviewIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAiFeatureOnlineStoreFeatureviewIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getAiFeatureOnlineStoreFeatureviewIamPolicy.
type LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult)(nil)).Elem()
}

func (o LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) ToLookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput() LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput {
	return o
}

func (o LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) ToLookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutputWithContext(ctx context.Context) LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) FeatureOnlineStore() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult) string { return v.FeatureOnlineStore }).(pulumi.StringOutput)
}

func (o LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) FeatureView() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult) string { return v.FeatureView }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `vertex.AiFeatureOnlineStoreFeatureviewIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAiFeatureOnlineStoreFeatureviewIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAiFeatureOnlineStoreFeatureviewIamPolicyResultOutput{})
}
