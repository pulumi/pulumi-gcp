// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vertex

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v9/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * {{feature_online_store}}/featureViews/{{name}}
//
// * {{feature_online_store}}/{{name}}
//
// * {{name}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Vertex AI featureonlinestorefeatureview IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:vertex/aiFeatureOnlineStoreFeatureviewIamPolicy:AiFeatureOnlineStoreFeatureviewIamPolicy editor "{{feature_online_store}}/featureViews/{{feature_online_store_featureview}} roles/viewer user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:vertex/aiFeatureOnlineStoreFeatureviewIamPolicy:AiFeatureOnlineStoreFeatureviewIamPolicy editor "{{feature_online_store}}/featureViews/{{feature_online_store_featureview}} roles/viewer"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:vertex/aiFeatureOnlineStoreFeatureviewIamPolicy:AiFeatureOnlineStoreFeatureviewIamPolicy editor {{feature_online_store}}/featureViews/{{feature_online_store_featureview}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type AiFeatureOnlineStoreFeatureviewIamPolicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore pulumi.StringOutput `pulumi:"featureOnlineStore"`
	// Used to find the parent resource to bind the IAM policy to
	FeatureView pulumi.StringOutput `pulumi:"featureView"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewAiFeatureOnlineStoreFeatureviewIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewAiFeatureOnlineStoreFeatureviewIamPolicy(ctx *pulumi.Context,
	name string, args *AiFeatureOnlineStoreFeatureviewIamPolicyArgs, opts ...pulumi.ResourceOption) (*AiFeatureOnlineStoreFeatureviewIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureOnlineStore == nil {
		return nil, errors.New("invalid value for required argument 'FeatureOnlineStore'")
	}
	if args.FeatureView == nil {
		return nil, errors.New("invalid value for required argument 'FeatureView'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AiFeatureOnlineStoreFeatureviewIamPolicy
	err := ctx.RegisterResource("gcp:vertex/aiFeatureOnlineStoreFeatureviewIamPolicy:AiFeatureOnlineStoreFeatureviewIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAiFeatureOnlineStoreFeatureviewIamPolicy gets an existing AiFeatureOnlineStoreFeatureviewIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAiFeatureOnlineStoreFeatureviewIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AiFeatureOnlineStoreFeatureviewIamPolicyState, opts ...pulumi.ResourceOption) (*AiFeatureOnlineStoreFeatureviewIamPolicy, error) {
	var resource AiFeatureOnlineStoreFeatureviewIamPolicy
	err := ctx.ReadResource("gcp:vertex/aiFeatureOnlineStoreFeatureviewIamPolicy:AiFeatureOnlineStoreFeatureviewIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AiFeatureOnlineStoreFeatureviewIamPolicy resources.
type aiFeatureOnlineStoreFeatureviewIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore *string `pulumi:"featureOnlineStore"`
	// Used to find the parent resource to bind the IAM policy to
	FeatureView *string `pulumi:"featureView"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

type AiFeatureOnlineStoreFeatureviewIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	FeatureView pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput
}

func (AiFeatureOnlineStoreFeatureviewIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*aiFeatureOnlineStoreFeatureviewIamPolicyState)(nil)).Elem()
}

type aiFeatureOnlineStoreFeatureviewIamPolicyArgs struct {
	// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore string `pulumi:"featureOnlineStore"`
	// Used to find the parent resource to bind the IAM policy to
	FeatureView string `pulumi:"featureView"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a AiFeatureOnlineStoreFeatureviewIamPolicy resource.
type AiFeatureOnlineStoreFeatureviewIamPolicyArgs struct {
	// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore pulumi.StringInput
	// Used to find the parent resource to bind the IAM policy to
	FeatureView pulumi.StringInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput
}

func (AiFeatureOnlineStoreFeatureviewIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aiFeatureOnlineStoreFeatureviewIamPolicyArgs)(nil)).Elem()
}

type AiFeatureOnlineStoreFeatureviewIamPolicyInput interface {
	pulumi.Input

	ToAiFeatureOnlineStoreFeatureviewIamPolicyOutput() AiFeatureOnlineStoreFeatureviewIamPolicyOutput
	ToAiFeatureOnlineStoreFeatureviewIamPolicyOutputWithContext(ctx context.Context) AiFeatureOnlineStoreFeatureviewIamPolicyOutput
}

func (*AiFeatureOnlineStoreFeatureviewIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AiFeatureOnlineStoreFeatureviewIamPolicy)(nil)).Elem()
}

func (i *AiFeatureOnlineStoreFeatureviewIamPolicy) ToAiFeatureOnlineStoreFeatureviewIamPolicyOutput() AiFeatureOnlineStoreFeatureviewIamPolicyOutput {
	return i.ToAiFeatureOnlineStoreFeatureviewIamPolicyOutputWithContext(context.Background())
}

func (i *AiFeatureOnlineStoreFeatureviewIamPolicy) ToAiFeatureOnlineStoreFeatureviewIamPolicyOutputWithContext(ctx context.Context) AiFeatureOnlineStoreFeatureviewIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiFeatureOnlineStoreFeatureviewIamPolicyOutput)
}

// AiFeatureOnlineStoreFeatureviewIamPolicyArrayInput is an input type that accepts AiFeatureOnlineStoreFeatureviewIamPolicyArray and AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput values.
// You can construct a concrete instance of `AiFeatureOnlineStoreFeatureviewIamPolicyArrayInput` via:
//
//	AiFeatureOnlineStoreFeatureviewIamPolicyArray{ AiFeatureOnlineStoreFeatureviewIamPolicyArgs{...} }
type AiFeatureOnlineStoreFeatureviewIamPolicyArrayInput interface {
	pulumi.Input

	ToAiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput() AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput
	ToAiFeatureOnlineStoreFeatureviewIamPolicyArrayOutputWithContext(context.Context) AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput
}

type AiFeatureOnlineStoreFeatureviewIamPolicyArray []AiFeatureOnlineStoreFeatureviewIamPolicyInput

func (AiFeatureOnlineStoreFeatureviewIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AiFeatureOnlineStoreFeatureviewIamPolicy)(nil)).Elem()
}

func (i AiFeatureOnlineStoreFeatureviewIamPolicyArray) ToAiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput() AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput {
	return i.ToAiFeatureOnlineStoreFeatureviewIamPolicyArrayOutputWithContext(context.Background())
}

func (i AiFeatureOnlineStoreFeatureviewIamPolicyArray) ToAiFeatureOnlineStoreFeatureviewIamPolicyArrayOutputWithContext(ctx context.Context) AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput)
}

// AiFeatureOnlineStoreFeatureviewIamPolicyMapInput is an input type that accepts AiFeatureOnlineStoreFeatureviewIamPolicyMap and AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput values.
// You can construct a concrete instance of `AiFeatureOnlineStoreFeatureviewIamPolicyMapInput` via:
//
//	AiFeatureOnlineStoreFeatureviewIamPolicyMap{ "key": AiFeatureOnlineStoreFeatureviewIamPolicyArgs{...} }
type AiFeatureOnlineStoreFeatureviewIamPolicyMapInput interface {
	pulumi.Input

	ToAiFeatureOnlineStoreFeatureviewIamPolicyMapOutput() AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput
	ToAiFeatureOnlineStoreFeatureviewIamPolicyMapOutputWithContext(context.Context) AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput
}

type AiFeatureOnlineStoreFeatureviewIamPolicyMap map[string]AiFeatureOnlineStoreFeatureviewIamPolicyInput

func (AiFeatureOnlineStoreFeatureviewIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AiFeatureOnlineStoreFeatureviewIamPolicy)(nil)).Elem()
}

func (i AiFeatureOnlineStoreFeatureviewIamPolicyMap) ToAiFeatureOnlineStoreFeatureviewIamPolicyMapOutput() AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput {
	return i.ToAiFeatureOnlineStoreFeatureviewIamPolicyMapOutputWithContext(context.Background())
}

func (i AiFeatureOnlineStoreFeatureviewIamPolicyMap) ToAiFeatureOnlineStoreFeatureviewIamPolicyMapOutputWithContext(ctx context.Context) AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput)
}

type AiFeatureOnlineStoreFeatureviewIamPolicyOutput struct{ *pulumi.OutputState }

func (AiFeatureOnlineStoreFeatureviewIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AiFeatureOnlineStoreFeatureviewIamPolicy)(nil)).Elem()
}

func (o AiFeatureOnlineStoreFeatureviewIamPolicyOutput) ToAiFeatureOnlineStoreFeatureviewIamPolicyOutput() AiFeatureOnlineStoreFeatureviewIamPolicyOutput {
	return o
}

func (o AiFeatureOnlineStoreFeatureviewIamPolicyOutput) ToAiFeatureOnlineStoreFeatureviewIamPolicyOutputWithContext(ctx context.Context) AiFeatureOnlineStoreFeatureviewIamPolicyOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o AiFeatureOnlineStoreFeatureviewIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreFeatureviewIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
func (o AiFeatureOnlineStoreFeatureviewIamPolicyOutput) FeatureOnlineStore() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreFeatureviewIamPolicy) pulumi.StringOutput { return v.FeatureOnlineStore }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o AiFeatureOnlineStoreFeatureviewIamPolicyOutput) FeatureView() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreFeatureviewIamPolicy) pulumi.StringOutput { return v.FeatureView }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o AiFeatureOnlineStoreFeatureviewIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreFeatureviewIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o AiFeatureOnlineStoreFeatureviewIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreFeatureviewIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
// region is specified, it is taken from the provider configuration.
func (o AiFeatureOnlineStoreFeatureviewIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreFeatureviewIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AiFeatureOnlineStoreFeatureviewIamPolicy)(nil)).Elem()
}

func (o AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput) ToAiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput() AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput {
	return o
}

func (o AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput) ToAiFeatureOnlineStoreFeatureviewIamPolicyArrayOutputWithContext(ctx context.Context) AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput {
	return o
}

func (o AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput) Index(i pulumi.IntInput) AiFeatureOnlineStoreFeatureviewIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AiFeatureOnlineStoreFeatureviewIamPolicy {
		return vs[0].([]*AiFeatureOnlineStoreFeatureviewIamPolicy)[vs[1].(int)]
	}).(AiFeatureOnlineStoreFeatureviewIamPolicyOutput)
}

type AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput struct{ *pulumi.OutputState }

func (AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AiFeatureOnlineStoreFeatureviewIamPolicy)(nil)).Elem()
}

func (o AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput) ToAiFeatureOnlineStoreFeatureviewIamPolicyMapOutput() AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput {
	return o
}

func (o AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput) ToAiFeatureOnlineStoreFeatureviewIamPolicyMapOutputWithContext(ctx context.Context) AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput {
	return o
}

func (o AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput) MapIndex(k pulumi.StringInput) AiFeatureOnlineStoreFeatureviewIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AiFeatureOnlineStoreFeatureviewIamPolicy {
		return vs[0].(map[string]*AiFeatureOnlineStoreFeatureviewIamPolicy)[vs[1].(string)]
	}).(AiFeatureOnlineStoreFeatureviewIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AiFeatureOnlineStoreFeatureviewIamPolicyInput)(nil)).Elem(), &AiFeatureOnlineStoreFeatureviewIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AiFeatureOnlineStoreFeatureviewIamPolicyArrayInput)(nil)).Elem(), AiFeatureOnlineStoreFeatureviewIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AiFeatureOnlineStoreFeatureviewIamPolicyMapInput)(nil)).Elem(), AiFeatureOnlineStoreFeatureviewIamPolicyMap{})
	pulumi.RegisterOutputType(AiFeatureOnlineStoreFeatureviewIamPolicyOutput{})
	pulumi.RegisterOutputType(AiFeatureOnlineStoreFeatureviewIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(AiFeatureOnlineStoreFeatureviewIamPolicyMapOutput{})
}
