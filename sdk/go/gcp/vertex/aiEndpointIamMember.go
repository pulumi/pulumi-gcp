// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vertex

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AiEndpointIamMember struct {
	pulumi.CustomResourceState

	Condition AiEndpointIamMemberConditionPtrOutput `pulumi:"condition"`
	Endpoint  pulumi.StringOutput                   `pulumi:"endpoint"`
	Etag      pulumi.StringOutput                   `pulumi:"etag"`
	Location  pulumi.StringOutput                   `pulumi:"location"`
	Member    pulumi.StringOutput                   `pulumi:"member"`
	Project   pulumi.StringOutput                   `pulumi:"project"`
	Role      pulumi.StringOutput                   `pulumi:"role"`
}

// NewAiEndpointIamMember registers a new resource with the given unique name, arguments, and options.
func NewAiEndpointIamMember(ctx *pulumi.Context,
	name string, args *AiEndpointIamMemberArgs, opts ...pulumi.ResourceOption) (*AiEndpointIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AiEndpointIamMember
	err := ctx.RegisterResource("gcp:vertex/aiEndpointIamMember:AiEndpointIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAiEndpointIamMember gets an existing AiEndpointIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAiEndpointIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AiEndpointIamMemberState, opts ...pulumi.ResourceOption) (*AiEndpointIamMember, error) {
	var resource AiEndpointIamMember
	err := ctx.ReadResource("gcp:vertex/aiEndpointIamMember:AiEndpointIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AiEndpointIamMember resources.
type aiEndpointIamMemberState struct {
	Condition *AiEndpointIamMemberCondition `pulumi:"condition"`
	Endpoint  *string                       `pulumi:"endpoint"`
	Etag      *string                       `pulumi:"etag"`
	Location  *string                       `pulumi:"location"`
	Member    *string                       `pulumi:"member"`
	Project   *string                       `pulumi:"project"`
	Role      *string                       `pulumi:"role"`
}

type AiEndpointIamMemberState struct {
	Condition AiEndpointIamMemberConditionPtrInput
	Endpoint  pulumi.StringPtrInput
	Etag      pulumi.StringPtrInput
	Location  pulumi.StringPtrInput
	Member    pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringPtrInput
}

func (AiEndpointIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*aiEndpointIamMemberState)(nil)).Elem()
}

type aiEndpointIamMemberArgs struct {
	Condition *AiEndpointIamMemberCondition `pulumi:"condition"`
	Endpoint  string                        `pulumi:"endpoint"`
	Location  *string                       `pulumi:"location"`
	Member    string                        `pulumi:"member"`
	Project   *string                       `pulumi:"project"`
	Role      string                        `pulumi:"role"`
}

// The set of arguments for constructing a AiEndpointIamMember resource.
type AiEndpointIamMemberArgs struct {
	Condition AiEndpointIamMemberConditionPtrInput
	Endpoint  pulumi.StringInput
	Location  pulumi.StringPtrInput
	Member    pulumi.StringInput
	Project   pulumi.StringPtrInput
	Role      pulumi.StringInput
}

func (AiEndpointIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aiEndpointIamMemberArgs)(nil)).Elem()
}

type AiEndpointIamMemberInput interface {
	pulumi.Input

	ToAiEndpointIamMemberOutput() AiEndpointIamMemberOutput
	ToAiEndpointIamMemberOutputWithContext(ctx context.Context) AiEndpointIamMemberOutput
}

func (*AiEndpointIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**AiEndpointIamMember)(nil)).Elem()
}

func (i *AiEndpointIamMember) ToAiEndpointIamMemberOutput() AiEndpointIamMemberOutput {
	return i.ToAiEndpointIamMemberOutputWithContext(context.Background())
}

func (i *AiEndpointIamMember) ToAiEndpointIamMemberOutputWithContext(ctx context.Context) AiEndpointIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiEndpointIamMemberOutput)
}

// AiEndpointIamMemberArrayInput is an input type that accepts AiEndpointIamMemberArray and AiEndpointIamMemberArrayOutput values.
// You can construct a concrete instance of `AiEndpointIamMemberArrayInput` via:
//
//	AiEndpointIamMemberArray{ AiEndpointIamMemberArgs{...} }
type AiEndpointIamMemberArrayInput interface {
	pulumi.Input

	ToAiEndpointIamMemberArrayOutput() AiEndpointIamMemberArrayOutput
	ToAiEndpointIamMemberArrayOutputWithContext(context.Context) AiEndpointIamMemberArrayOutput
}

type AiEndpointIamMemberArray []AiEndpointIamMemberInput

func (AiEndpointIamMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AiEndpointIamMember)(nil)).Elem()
}

func (i AiEndpointIamMemberArray) ToAiEndpointIamMemberArrayOutput() AiEndpointIamMemberArrayOutput {
	return i.ToAiEndpointIamMemberArrayOutputWithContext(context.Background())
}

func (i AiEndpointIamMemberArray) ToAiEndpointIamMemberArrayOutputWithContext(ctx context.Context) AiEndpointIamMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiEndpointIamMemberArrayOutput)
}

// AiEndpointIamMemberMapInput is an input type that accepts AiEndpointIamMemberMap and AiEndpointIamMemberMapOutput values.
// You can construct a concrete instance of `AiEndpointIamMemberMapInput` via:
//
//	AiEndpointIamMemberMap{ "key": AiEndpointIamMemberArgs{...} }
type AiEndpointIamMemberMapInput interface {
	pulumi.Input

	ToAiEndpointIamMemberMapOutput() AiEndpointIamMemberMapOutput
	ToAiEndpointIamMemberMapOutputWithContext(context.Context) AiEndpointIamMemberMapOutput
}

type AiEndpointIamMemberMap map[string]AiEndpointIamMemberInput

func (AiEndpointIamMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AiEndpointIamMember)(nil)).Elem()
}

func (i AiEndpointIamMemberMap) ToAiEndpointIamMemberMapOutput() AiEndpointIamMemberMapOutput {
	return i.ToAiEndpointIamMemberMapOutputWithContext(context.Background())
}

func (i AiEndpointIamMemberMap) ToAiEndpointIamMemberMapOutputWithContext(ctx context.Context) AiEndpointIamMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiEndpointIamMemberMapOutput)
}

type AiEndpointIamMemberOutput struct{ *pulumi.OutputState }

func (AiEndpointIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AiEndpointIamMember)(nil)).Elem()
}

func (o AiEndpointIamMemberOutput) ToAiEndpointIamMemberOutput() AiEndpointIamMemberOutput {
	return o
}

func (o AiEndpointIamMemberOutput) ToAiEndpointIamMemberOutputWithContext(ctx context.Context) AiEndpointIamMemberOutput {
	return o
}

func (o AiEndpointIamMemberOutput) Condition() AiEndpointIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *AiEndpointIamMember) AiEndpointIamMemberConditionPtrOutput { return v.Condition }).(AiEndpointIamMemberConditionPtrOutput)
}

func (o AiEndpointIamMemberOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *AiEndpointIamMember) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o AiEndpointIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AiEndpointIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o AiEndpointIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AiEndpointIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o AiEndpointIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *AiEndpointIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o AiEndpointIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AiEndpointIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o AiEndpointIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AiEndpointIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type AiEndpointIamMemberArrayOutput struct{ *pulumi.OutputState }

func (AiEndpointIamMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AiEndpointIamMember)(nil)).Elem()
}

func (o AiEndpointIamMemberArrayOutput) ToAiEndpointIamMemberArrayOutput() AiEndpointIamMemberArrayOutput {
	return o
}

func (o AiEndpointIamMemberArrayOutput) ToAiEndpointIamMemberArrayOutputWithContext(ctx context.Context) AiEndpointIamMemberArrayOutput {
	return o
}

func (o AiEndpointIamMemberArrayOutput) Index(i pulumi.IntInput) AiEndpointIamMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AiEndpointIamMember {
		return vs[0].([]*AiEndpointIamMember)[vs[1].(int)]
	}).(AiEndpointIamMemberOutput)
}

type AiEndpointIamMemberMapOutput struct{ *pulumi.OutputState }

func (AiEndpointIamMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AiEndpointIamMember)(nil)).Elem()
}

func (o AiEndpointIamMemberMapOutput) ToAiEndpointIamMemberMapOutput() AiEndpointIamMemberMapOutput {
	return o
}

func (o AiEndpointIamMemberMapOutput) ToAiEndpointIamMemberMapOutputWithContext(ctx context.Context) AiEndpointIamMemberMapOutput {
	return o
}

func (o AiEndpointIamMemberMapOutput) MapIndex(k pulumi.StringInput) AiEndpointIamMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AiEndpointIamMember {
		return vs[0].(map[string]*AiEndpointIamMember)[vs[1].(string)]
	}).(AiEndpointIamMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AiEndpointIamMemberInput)(nil)).Elem(), &AiEndpointIamMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*AiEndpointIamMemberArrayInput)(nil)).Elem(), AiEndpointIamMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AiEndpointIamMemberMapInput)(nil)).Elem(), AiEndpointIamMemberMap{})
	pulumi.RegisterOutputType(AiEndpointIamMemberOutput{})
	pulumi.RegisterOutputType(AiEndpointIamMemberArrayOutput{})
	pulumi.RegisterOutputType(AiEndpointIamMemberMapOutput{})
}
