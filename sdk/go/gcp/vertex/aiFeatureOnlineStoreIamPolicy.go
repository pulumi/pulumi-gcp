// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vertex

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * projects/{{project}}/locations/{{region}}/featureOnlineStores/{{name}}
//
// * {{project}}/{{region}}/{{name}}
//
// * {{region}}/{{name}}
//
// * {{name}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Vertex AI featureonlinestore IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:vertex/aiFeatureOnlineStoreIamPolicy:AiFeatureOnlineStoreIamPolicy editor "projects/{{project}}/locations/{{region}}/featureOnlineStores/{{feature_online_store}} roles/viewer user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:vertex/aiFeatureOnlineStoreIamPolicy:AiFeatureOnlineStoreIamPolicy editor "projects/{{project}}/locations/{{region}}/featureOnlineStores/{{feature_online_store}} roles/viewer"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:vertex/aiFeatureOnlineStoreIamPolicy:AiFeatureOnlineStoreIamPolicy editor projects/{{project}}/locations/{{region}}/featureOnlineStores/{{feature_online_store}}
// ```
//
// -> **Custom Roles** If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type AiFeatureOnlineStoreIamPolicy struct {
	pulumi.CustomResourceState

	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore pulumi.StringOutput `pulumi:"featureOnlineStore"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The region of feature online store. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewAiFeatureOnlineStoreIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewAiFeatureOnlineStoreIamPolicy(ctx *pulumi.Context,
	name string, args *AiFeatureOnlineStoreIamPolicyArgs, opts ...pulumi.ResourceOption) (*AiFeatureOnlineStoreIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureOnlineStore == nil {
		return nil, errors.New("invalid value for required argument 'FeatureOnlineStore'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AiFeatureOnlineStoreIamPolicy
	err := ctx.RegisterResource("gcp:vertex/aiFeatureOnlineStoreIamPolicy:AiFeatureOnlineStoreIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAiFeatureOnlineStoreIamPolicy gets an existing AiFeatureOnlineStoreIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAiFeatureOnlineStoreIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AiFeatureOnlineStoreIamPolicyState, opts ...pulumi.ResourceOption) (*AiFeatureOnlineStoreIamPolicy, error) {
	var resource AiFeatureOnlineStoreIamPolicy
	err := ctx.ReadResource("gcp:vertex/aiFeatureOnlineStoreIamPolicy:AiFeatureOnlineStoreIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AiFeatureOnlineStoreIamPolicy resources.
type aiFeatureOnlineStoreIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore *string `pulumi:"featureOnlineStore"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The region of feature online store. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

type AiFeatureOnlineStoreIamPolicyState struct {
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The region of feature online store. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput
}

func (AiFeatureOnlineStoreIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*aiFeatureOnlineStoreIamPolicyState)(nil)).Elem()
}

type aiFeatureOnlineStoreIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore string `pulumi:"featureOnlineStore"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// The region of feature online store. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a AiFeatureOnlineStoreIamPolicy resource.
type AiFeatureOnlineStoreIamPolicyArgs struct {
	// Used to find the parent resource to bind the IAM policy to
	FeatureOnlineStore pulumi.StringInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput
	// The region of feature online store. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
	// region is specified, it is taken from the provider configuration.
	Region pulumi.StringPtrInput
}

func (AiFeatureOnlineStoreIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aiFeatureOnlineStoreIamPolicyArgs)(nil)).Elem()
}

type AiFeatureOnlineStoreIamPolicyInput interface {
	pulumi.Input

	ToAiFeatureOnlineStoreIamPolicyOutput() AiFeatureOnlineStoreIamPolicyOutput
	ToAiFeatureOnlineStoreIamPolicyOutputWithContext(ctx context.Context) AiFeatureOnlineStoreIamPolicyOutput
}

func (*AiFeatureOnlineStoreIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AiFeatureOnlineStoreIamPolicy)(nil)).Elem()
}

func (i *AiFeatureOnlineStoreIamPolicy) ToAiFeatureOnlineStoreIamPolicyOutput() AiFeatureOnlineStoreIamPolicyOutput {
	return i.ToAiFeatureOnlineStoreIamPolicyOutputWithContext(context.Background())
}

func (i *AiFeatureOnlineStoreIamPolicy) ToAiFeatureOnlineStoreIamPolicyOutputWithContext(ctx context.Context) AiFeatureOnlineStoreIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiFeatureOnlineStoreIamPolicyOutput)
}

// AiFeatureOnlineStoreIamPolicyArrayInput is an input type that accepts AiFeatureOnlineStoreIamPolicyArray and AiFeatureOnlineStoreIamPolicyArrayOutput values.
// You can construct a concrete instance of `AiFeatureOnlineStoreIamPolicyArrayInput` via:
//
//	AiFeatureOnlineStoreIamPolicyArray{ AiFeatureOnlineStoreIamPolicyArgs{...} }
type AiFeatureOnlineStoreIamPolicyArrayInput interface {
	pulumi.Input

	ToAiFeatureOnlineStoreIamPolicyArrayOutput() AiFeatureOnlineStoreIamPolicyArrayOutput
	ToAiFeatureOnlineStoreIamPolicyArrayOutputWithContext(context.Context) AiFeatureOnlineStoreIamPolicyArrayOutput
}

type AiFeatureOnlineStoreIamPolicyArray []AiFeatureOnlineStoreIamPolicyInput

func (AiFeatureOnlineStoreIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AiFeatureOnlineStoreIamPolicy)(nil)).Elem()
}

func (i AiFeatureOnlineStoreIamPolicyArray) ToAiFeatureOnlineStoreIamPolicyArrayOutput() AiFeatureOnlineStoreIamPolicyArrayOutput {
	return i.ToAiFeatureOnlineStoreIamPolicyArrayOutputWithContext(context.Background())
}

func (i AiFeatureOnlineStoreIamPolicyArray) ToAiFeatureOnlineStoreIamPolicyArrayOutputWithContext(ctx context.Context) AiFeatureOnlineStoreIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiFeatureOnlineStoreIamPolicyArrayOutput)
}

// AiFeatureOnlineStoreIamPolicyMapInput is an input type that accepts AiFeatureOnlineStoreIamPolicyMap and AiFeatureOnlineStoreIamPolicyMapOutput values.
// You can construct a concrete instance of `AiFeatureOnlineStoreIamPolicyMapInput` via:
//
//	AiFeatureOnlineStoreIamPolicyMap{ "key": AiFeatureOnlineStoreIamPolicyArgs{...} }
type AiFeatureOnlineStoreIamPolicyMapInput interface {
	pulumi.Input

	ToAiFeatureOnlineStoreIamPolicyMapOutput() AiFeatureOnlineStoreIamPolicyMapOutput
	ToAiFeatureOnlineStoreIamPolicyMapOutputWithContext(context.Context) AiFeatureOnlineStoreIamPolicyMapOutput
}

type AiFeatureOnlineStoreIamPolicyMap map[string]AiFeatureOnlineStoreIamPolicyInput

func (AiFeatureOnlineStoreIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AiFeatureOnlineStoreIamPolicy)(nil)).Elem()
}

func (i AiFeatureOnlineStoreIamPolicyMap) ToAiFeatureOnlineStoreIamPolicyMapOutput() AiFeatureOnlineStoreIamPolicyMapOutput {
	return i.ToAiFeatureOnlineStoreIamPolicyMapOutputWithContext(context.Background())
}

func (i AiFeatureOnlineStoreIamPolicyMap) ToAiFeatureOnlineStoreIamPolicyMapOutputWithContext(ctx context.Context) AiFeatureOnlineStoreIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiFeatureOnlineStoreIamPolicyMapOutput)
}

type AiFeatureOnlineStoreIamPolicyOutput struct{ *pulumi.OutputState }

func (AiFeatureOnlineStoreIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AiFeatureOnlineStoreIamPolicy)(nil)).Elem()
}

func (o AiFeatureOnlineStoreIamPolicyOutput) ToAiFeatureOnlineStoreIamPolicyOutput() AiFeatureOnlineStoreIamPolicyOutput {
	return o
}

func (o AiFeatureOnlineStoreIamPolicyOutput) ToAiFeatureOnlineStoreIamPolicyOutputWithContext(ctx context.Context) AiFeatureOnlineStoreIamPolicyOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o AiFeatureOnlineStoreIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o AiFeatureOnlineStoreIamPolicyOutput) FeatureOnlineStore() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreIamPolicy) pulumi.StringOutput { return v.FeatureOnlineStore }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o AiFeatureOnlineStoreIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
func (o AiFeatureOnlineStoreIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of feature online store. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
// region is specified, it is taken from the provider configuration.
func (o AiFeatureOnlineStoreIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AiFeatureOnlineStoreIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type AiFeatureOnlineStoreIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (AiFeatureOnlineStoreIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AiFeatureOnlineStoreIamPolicy)(nil)).Elem()
}

func (o AiFeatureOnlineStoreIamPolicyArrayOutput) ToAiFeatureOnlineStoreIamPolicyArrayOutput() AiFeatureOnlineStoreIamPolicyArrayOutput {
	return o
}

func (o AiFeatureOnlineStoreIamPolicyArrayOutput) ToAiFeatureOnlineStoreIamPolicyArrayOutputWithContext(ctx context.Context) AiFeatureOnlineStoreIamPolicyArrayOutput {
	return o
}

func (o AiFeatureOnlineStoreIamPolicyArrayOutput) Index(i pulumi.IntInput) AiFeatureOnlineStoreIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AiFeatureOnlineStoreIamPolicy {
		return vs[0].([]*AiFeatureOnlineStoreIamPolicy)[vs[1].(int)]
	}).(AiFeatureOnlineStoreIamPolicyOutput)
}

type AiFeatureOnlineStoreIamPolicyMapOutput struct{ *pulumi.OutputState }

func (AiFeatureOnlineStoreIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AiFeatureOnlineStoreIamPolicy)(nil)).Elem()
}

func (o AiFeatureOnlineStoreIamPolicyMapOutput) ToAiFeatureOnlineStoreIamPolicyMapOutput() AiFeatureOnlineStoreIamPolicyMapOutput {
	return o
}

func (o AiFeatureOnlineStoreIamPolicyMapOutput) ToAiFeatureOnlineStoreIamPolicyMapOutputWithContext(ctx context.Context) AiFeatureOnlineStoreIamPolicyMapOutput {
	return o
}

func (o AiFeatureOnlineStoreIamPolicyMapOutput) MapIndex(k pulumi.StringInput) AiFeatureOnlineStoreIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AiFeatureOnlineStoreIamPolicy {
		return vs[0].(map[string]*AiFeatureOnlineStoreIamPolicy)[vs[1].(string)]
	}).(AiFeatureOnlineStoreIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AiFeatureOnlineStoreIamPolicyInput)(nil)).Elem(), &AiFeatureOnlineStoreIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AiFeatureOnlineStoreIamPolicyArrayInput)(nil)).Elem(), AiFeatureOnlineStoreIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AiFeatureOnlineStoreIamPolicyMapInput)(nil)).Elem(), AiFeatureOnlineStoreIamPolicyMap{})
	pulumi.RegisterOutputType(AiFeatureOnlineStoreIamPolicyOutput{})
	pulumi.RegisterOutputType(AiFeatureOnlineStoreIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(AiFeatureOnlineStoreIamPolicyMapOutput{})
}
