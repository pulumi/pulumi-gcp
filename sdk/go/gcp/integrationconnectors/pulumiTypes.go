// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package integrationconnectors

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConnectionAuthConfig struct {
	// List containing additional auth configs.
	// Structure is documented below.
	AdditionalVariables []ConnectionAuthConfigAdditionalVariable `pulumi:"additionalVariables"`
	// The type of authentication configured.
	AuthKey *string `pulumi:"authKey"`
	// authType of the Connection
	// Possible values are: `USER_PASSWORD`.
	AuthType string `pulumi:"authType"`
	// Parameters to support Oauth 2.0 Auth Code Grant Authentication.
	// Structure is documented below.
	Oauth2AuthCodeFlow *ConnectionAuthConfigOauth2AuthCodeFlow `pulumi:"oauth2AuthCodeFlow"`
	// OAuth3 Client Credentials for Authentication.
	// Structure is documented below.
	Oauth2ClientCredentials *ConnectionAuthConfigOauth2ClientCredentials `pulumi:"oauth2ClientCredentials"`
	// OAuth2 JWT Bearer for Authentication.
	// Structure is documented below.
	Oauth2JwtBearer *ConnectionAuthConfigOauth2JwtBearer `pulumi:"oauth2JwtBearer"`
	// SSH Public Key for Authentication.
	// Structure is documented below.
	SshPublicKey *ConnectionAuthConfigSshPublicKey `pulumi:"sshPublicKey"`
	// User password for Authentication.
	// Structure is documented below.
	UserPassword *ConnectionAuthConfigUserPassword `pulumi:"userPassword"`
}

// ConnectionAuthConfigInput is an input type that accepts ConnectionAuthConfigArgs and ConnectionAuthConfigOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigInput` via:
//
//	ConnectionAuthConfigArgs{...}
type ConnectionAuthConfigInput interface {
	pulumi.Input

	ToConnectionAuthConfigOutput() ConnectionAuthConfigOutput
	ToConnectionAuthConfigOutputWithContext(context.Context) ConnectionAuthConfigOutput
}

type ConnectionAuthConfigArgs struct {
	// List containing additional auth configs.
	// Structure is documented below.
	AdditionalVariables ConnectionAuthConfigAdditionalVariableArrayInput `pulumi:"additionalVariables"`
	// The type of authentication configured.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// authType of the Connection
	// Possible values are: `USER_PASSWORD`.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Parameters to support Oauth 2.0 Auth Code Grant Authentication.
	// Structure is documented below.
	Oauth2AuthCodeFlow ConnectionAuthConfigOauth2AuthCodeFlowPtrInput `pulumi:"oauth2AuthCodeFlow"`
	// OAuth3 Client Credentials for Authentication.
	// Structure is documented below.
	Oauth2ClientCredentials ConnectionAuthConfigOauth2ClientCredentialsPtrInput `pulumi:"oauth2ClientCredentials"`
	// OAuth2 JWT Bearer for Authentication.
	// Structure is documented below.
	Oauth2JwtBearer ConnectionAuthConfigOauth2JwtBearerPtrInput `pulumi:"oauth2JwtBearer"`
	// SSH Public Key for Authentication.
	// Structure is documented below.
	SshPublicKey ConnectionAuthConfigSshPublicKeyPtrInput `pulumi:"sshPublicKey"`
	// User password for Authentication.
	// Structure is documented below.
	UserPassword ConnectionAuthConfigUserPasswordPtrInput `pulumi:"userPassword"`
}

func (ConnectionAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfig)(nil)).Elem()
}

func (i ConnectionAuthConfigArgs) ToConnectionAuthConfigOutput() ConnectionAuthConfigOutput {
	return i.ToConnectionAuthConfigOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigArgs) ToConnectionAuthConfigOutputWithContext(ctx context.Context) ConnectionAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOutput)
}

func (i ConnectionAuthConfigArgs) ToConnectionAuthConfigPtrOutput() ConnectionAuthConfigPtrOutput {
	return i.ToConnectionAuthConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigArgs) ToConnectionAuthConfigPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOutput).ToConnectionAuthConfigPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigPtrInput is an input type that accepts ConnectionAuthConfigArgs, ConnectionAuthConfigPtr and ConnectionAuthConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigPtrInput` via:
//
//	        ConnectionAuthConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigPtrOutput() ConnectionAuthConfigPtrOutput
	ToConnectionAuthConfigPtrOutputWithContext(context.Context) ConnectionAuthConfigPtrOutput
}

type connectionAuthConfigPtrType ConnectionAuthConfigArgs

func ConnectionAuthConfigPtr(v *ConnectionAuthConfigArgs) ConnectionAuthConfigPtrInput {
	return (*connectionAuthConfigPtrType)(v)
}

func (*connectionAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfig)(nil)).Elem()
}

func (i *connectionAuthConfigPtrType) ToConnectionAuthConfigPtrOutput() ConnectionAuthConfigPtrOutput {
	return i.ToConnectionAuthConfigPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigPtrType) ToConnectionAuthConfigPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigPtrOutput)
}

type ConnectionAuthConfigOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfig)(nil)).Elem()
}

func (o ConnectionAuthConfigOutput) ToConnectionAuthConfigOutput() ConnectionAuthConfigOutput {
	return o
}

func (o ConnectionAuthConfigOutput) ToConnectionAuthConfigOutputWithContext(ctx context.Context) ConnectionAuthConfigOutput {
	return o
}

func (o ConnectionAuthConfigOutput) ToConnectionAuthConfigPtrOutput() ConnectionAuthConfigPtrOutput {
	return o.ToConnectionAuthConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigOutput) ToConnectionAuthConfigPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfig) *ConnectionAuthConfig {
		return &v
	}).(ConnectionAuthConfigPtrOutput)
}

// List containing additional auth configs.
// Structure is documented below.
func (o ConnectionAuthConfigOutput) AdditionalVariables() ConnectionAuthConfigAdditionalVariableArrayOutput {
	return o.ApplyT(func(v ConnectionAuthConfig) []ConnectionAuthConfigAdditionalVariable { return v.AdditionalVariables }).(ConnectionAuthConfigAdditionalVariableArrayOutput)
}

// The type of authentication configured.
func (o ConnectionAuthConfigOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfig) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// authType of the Connection
// Possible values are: `USER_PASSWORD`.
func (o ConnectionAuthConfigOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfig) string { return v.AuthType }).(pulumi.StringOutput)
}

// Parameters to support Oauth 2.0 Auth Code Grant Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigOutput) Oauth2AuthCodeFlow() ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfig) *ConnectionAuthConfigOauth2AuthCodeFlow { return v.Oauth2AuthCodeFlow }).(ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput)
}

// OAuth3 Client Credentials for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigOutput) Oauth2ClientCredentials() ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfig) *ConnectionAuthConfigOauth2ClientCredentials {
		return v.Oauth2ClientCredentials
	}).(ConnectionAuthConfigOauth2ClientCredentialsPtrOutput)
}

// OAuth2 JWT Bearer for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigOutput) Oauth2JwtBearer() ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfig) *ConnectionAuthConfigOauth2JwtBearer { return v.Oauth2JwtBearer }).(ConnectionAuthConfigOauth2JwtBearerPtrOutput)
}

// SSH Public Key for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigOutput) SshPublicKey() ConnectionAuthConfigSshPublicKeyPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfig) *ConnectionAuthConfigSshPublicKey { return v.SshPublicKey }).(ConnectionAuthConfigSshPublicKeyPtrOutput)
}

// User password for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigOutput) UserPassword() ConnectionAuthConfigUserPasswordPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfig) *ConnectionAuthConfigUserPassword { return v.UserPassword }).(ConnectionAuthConfigUserPasswordPtrOutput)
}

type ConnectionAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfig)(nil)).Elem()
}

func (o ConnectionAuthConfigPtrOutput) ToConnectionAuthConfigPtrOutput() ConnectionAuthConfigPtrOutput {
	return o
}

func (o ConnectionAuthConfigPtrOutput) ToConnectionAuthConfigPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigPtrOutput {
	return o
}

func (o ConnectionAuthConfigPtrOutput) Elem() ConnectionAuthConfigOutput {
	return o.ApplyT(func(v *ConnectionAuthConfig) ConnectionAuthConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfig
		return ret
	}).(ConnectionAuthConfigOutput)
}

// List containing additional auth configs.
// Structure is documented below.
func (o ConnectionAuthConfigPtrOutput) AdditionalVariables() ConnectionAuthConfigAdditionalVariableArrayOutput {
	return o.ApplyT(func(v *ConnectionAuthConfig) []ConnectionAuthConfigAdditionalVariable {
		if v == nil {
			return nil
		}
		return v.AdditionalVariables
	}).(ConnectionAuthConfigAdditionalVariableArrayOutput)
}

// The type of authentication configured.
func (o ConnectionAuthConfigPtrOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthKey
	}).(pulumi.StringPtrOutput)
}

// authType of the Connection
// Possible values are: `USER_PASSWORD`.
func (o ConnectionAuthConfigPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Parameters to support Oauth 2.0 Auth Code Grant Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigPtrOutput) Oauth2AuthCodeFlow() ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfig) *ConnectionAuthConfigOauth2AuthCodeFlow {
		if v == nil {
			return nil
		}
		return v.Oauth2AuthCodeFlow
	}).(ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput)
}

// OAuth3 Client Credentials for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigPtrOutput) Oauth2ClientCredentials() ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfig) *ConnectionAuthConfigOauth2ClientCredentials {
		if v == nil {
			return nil
		}
		return v.Oauth2ClientCredentials
	}).(ConnectionAuthConfigOauth2ClientCredentialsPtrOutput)
}

// OAuth2 JWT Bearer for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigPtrOutput) Oauth2JwtBearer() ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfig) *ConnectionAuthConfigOauth2JwtBearer {
		if v == nil {
			return nil
		}
		return v.Oauth2JwtBearer
	}).(ConnectionAuthConfigOauth2JwtBearerPtrOutput)
}

// SSH Public Key for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigPtrOutput) SshPublicKey() ConnectionAuthConfigSshPublicKeyPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfig) *ConnectionAuthConfigSshPublicKey {
		if v == nil {
			return nil
		}
		return v.SshPublicKey
	}).(ConnectionAuthConfigSshPublicKeyPtrOutput)
}

// User password for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigPtrOutput) UserPassword() ConnectionAuthConfigUserPasswordPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfig) *ConnectionAuthConfigUserPassword {
		if v == nil {
			return nil
		}
		return v.UserPassword
	}).(ConnectionAuthConfigUserPasswordPtrOutput)
}

type ConnectionAuthConfigAdditionalVariable struct {
	// Boolean Value of configVariable.
	BooleanValue *bool `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue *ConnectionAuthConfigAdditionalVariableEncryptionKeyValue `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable.
	IntegerValue *int `pulumi:"integerValue"`
	// Key for the configVariable
	Key string `pulumi:"key"`
	// Secret value of configVariable
	// Structure is documented below.
	SecretValue *ConnectionAuthConfigAdditionalVariableSecretValue `pulumi:"secretValue"`
	// String Value of configVariabley.
	StringValue *string `pulumi:"stringValue"`
}

// ConnectionAuthConfigAdditionalVariableInput is an input type that accepts ConnectionAuthConfigAdditionalVariableArgs and ConnectionAuthConfigAdditionalVariableOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigAdditionalVariableInput` via:
//
//	ConnectionAuthConfigAdditionalVariableArgs{...}
type ConnectionAuthConfigAdditionalVariableInput interface {
	pulumi.Input

	ToConnectionAuthConfigAdditionalVariableOutput() ConnectionAuthConfigAdditionalVariableOutput
	ToConnectionAuthConfigAdditionalVariableOutputWithContext(context.Context) ConnectionAuthConfigAdditionalVariableOutput
}

type ConnectionAuthConfigAdditionalVariableArgs struct {
	// Boolean Value of configVariable.
	BooleanValue pulumi.BoolPtrInput `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrInput `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable.
	IntegerValue pulumi.IntPtrInput `pulumi:"integerValue"`
	// Key for the configVariable
	Key pulumi.StringInput `pulumi:"key"`
	// Secret value of configVariable
	// Structure is documented below.
	SecretValue ConnectionAuthConfigAdditionalVariableSecretValuePtrInput `pulumi:"secretValue"`
	// String Value of configVariabley.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (ConnectionAuthConfigAdditionalVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigAdditionalVariable)(nil)).Elem()
}

func (i ConnectionAuthConfigAdditionalVariableArgs) ToConnectionAuthConfigAdditionalVariableOutput() ConnectionAuthConfigAdditionalVariableOutput {
	return i.ToConnectionAuthConfigAdditionalVariableOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigAdditionalVariableArgs) ToConnectionAuthConfigAdditionalVariableOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigAdditionalVariableOutput)
}

// ConnectionAuthConfigAdditionalVariableArrayInput is an input type that accepts ConnectionAuthConfigAdditionalVariableArray and ConnectionAuthConfigAdditionalVariableArrayOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigAdditionalVariableArrayInput` via:
//
//	ConnectionAuthConfigAdditionalVariableArray{ ConnectionAuthConfigAdditionalVariableArgs{...} }
type ConnectionAuthConfigAdditionalVariableArrayInput interface {
	pulumi.Input

	ToConnectionAuthConfigAdditionalVariableArrayOutput() ConnectionAuthConfigAdditionalVariableArrayOutput
	ToConnectionAuthConfigAdditionalVariableArrayOutputWithContext(context.Context) ConnectionAuthConfigAdditionalVariableArrayOutput
}

type ConnectionAuthConfigAdditionalVariableArray []ConnectionAuthConfigAdditionalVariableInput

func (ConnectionAuthConfigAdditionalVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionAuthConfigAdditionalVariable)(nil)).Elem()
}

func (i ConnectionAuthConfigAdditionalVariableArray) ToConnectionAuthConfigAdditionalVariableArrayOutput() ConnectionAuthConfigAdditionalVariableArrayOutput {
	return i.ToConnectionAuthConfigAdditionalVariableArrayOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigAdditionalVariableArray) ToConnectionAuthConfigAdditionalVariableArrayOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigAdditionalVariableArrayOutput)
}

type ConnectionAuthConfigAdditionalVariableOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigAdditionalVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigAdditionalVariable)(nil)).Elem()
}

func (o ConnectionAuthConfigAdditionalVariableOutput) ToConnectionAuthConfigAdditionalVariableOutput() ConnectionAuthConfigAdditionalVariableOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableOutput) ToConnectionAuthConfigAdditionalVariableOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableOutput {
	return o
}

// Boolean Value of configVariable.
func (o ConnectionAuthConfigAdditionalVariableOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigAdditionalVariable) *bool { return v.BooleanValue }).(pulumi.BoolPtrOutput)
}

// Encription key value of configVariable.
// Structure is documented below.
func (o ConnectionAuthConfigAdditionalVariableOutput) EncryptionKeyValue() ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigAdditionalVariable) *ConnectionAuthConfigAdditionalVariableEncryptionKeyValue {
		return v.EncryptionKeyValue
	}).(ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

// Integer Value of configVariable.
func (o ConnectionAuthConfigAdditionalVariableOutput) IntegerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigAdditionalVariable) *int { return v.IntegerValue }).(pulumi.IntPtrOutput)
}

// Key for the configVariable
func (o ConnectionAuthConfigAdditionalVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigAdditionalVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Secret value of configVariable
// Structure is documented below.
func (o ConnectionAuthConfigAdditionalVariableOutput) SecretValue() ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigAdditionalVariable) *ConnectionAuthConfigAdditionalVariableSecretValue {
		return v.SecretValue
	}).(ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput)
}

// String Value of configVariabley.
func (o ConnectionAuthConfigAdditionalVariableOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigAdditionalVariable) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigAdditionalVariableArrayOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigAdditionalVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionAuthConfigAdditionalVariable)(nil)).Elem()
}

func (o ConnectionAuthConfigAdditionalVariableArrayOutput) ToConnectionAuthConfigAdditionalVariableArrayOutput() ConnectionAuthConfigAdditionalVariableArrayOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableArrayOutput) ToConnectionAuthConfigAdditionalVariableArrayOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableArrayOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableArrayOutput) Index(i pulumi.IntInput) ConnectionAuthConfigAdditionalVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionAuthConfigAdditionalVariable {
		return vs[0].([]ConnectionAuthConfigAdditionalVariable)[vs[1].(int)]
	}).(ConnectionAuthConfigAdditionalVariableOutput)
}

type ConnectionAuthConfigAdditionalVariableEncryptionKeyValue struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type string `pulumi:"type"`
}

// ConnectionAuthConfigAdditionalVariableEncryptionKeyValueInput is an input type that accepts ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs and ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigAdditionalVariableEncryptionKeyValueInput` via:
//
//	ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs{...}
type ConnectionAuthConfigAdditionalVariableEncryptionKeyValueInput interface {
	pulumi.Input

	ToConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput
	ToConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutputWithContext(context.Context) ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput
}

type ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (i ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return i.ToConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput)
}

func (i ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput).ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx)
}

// ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrInput is an input type that accepts ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs, ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtr and ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrInput` via:
//
//	        ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput
	ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Context) ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput
}

type connectionAuthConfigAdditionalVariableEncryptionKeyValuePtrType ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs

func ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtr(v *ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs) ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrInput {
	return (*connectionAuthConfigAdditionalVariableEncryptionKeyValuePtrType)(v)
}

func (*connectionAuthConfigAdditionalVariableEncryptionKeyValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (i *connectionAuthConfigAdditionalVariableEncryptionKeyValuePtrType) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigAdditionalVariableEncryptionKeyValuePtrType) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

type ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigAdditionalVariableEncryptionKeyValue) *ConnectionAuthConfigAdditionalVariableEncryptionKeyValue {
		return &v
	}).(ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigAdditionalVariableEncryptionKeyValue) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigAdditionalVariableEncryptionKeyValue) string { return v.Type }).(pulumi.StringOutput)
}

type ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) ToConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) Elem() ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigAdditionalVariableEncryptionKeyValue) ConnectionAuthConfigAdditionalVariableEncryptionKeyValue {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigAdditionalVariableEncryptionKeyValue
		return ret
	}).(ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigAdditionalVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigAdditionalVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigAdditionalVariableSecretValue struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionAuthConfigAdditionalVariableSecretValueInput is an input type that accepts ConnectionAuthConfigAdditionalVariableSecretValueArgs and ConnectionAuthConfigAdditionalVariableSecretValueOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigAdditionalVariableSecretValueInput` via:
//
//	ConnectionAuthConfigAdditionalVariableSecretValueArgs{...}
type ConnectionAuthConfigAdditionalVariableSecretValueInput interface {
	pulumi.Input

	ToConnectionAuthConfigAdditionalVariableSecretValueOutput() ConnectionAuthConfigAdditionalVariableSecretValueOutput
	ToConnectionAuthConfigAdditionalVariableSecretValueOutputWithContext(context.Context) ConnectionAuthConfigAdditionalVariableSecretValueOutput
}

type ConnectionAuthConfigAdditionalVariableSecretValueArgs struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionAuthConfigAdditionalVariableSecretValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (i ConnectionAuthConfigAdditionalVariableSecretValueArgs) ToConnectionAuthConfigAdditionalVariableSecretValueOutput() ConnectionAuthConfigAdditionalVariableSecretValueOutput {
	return i.ToConnectionAuthConfigAdditionalVariableSecretValueOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigAdditionalVariableSecretValueArgs) ToConnectionAuthConfigAdditionalVariableSecretValueOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableSecretValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigAdditionalVariableSecretValueOutput)
}

func (i ConnectionAuthConfigAdditionalVariableSecretValueArgs) ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput {
	return i.ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigAdditionalVariableSecretValueArgs) ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigAdditionalVariableSecretValueOutput).ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx)
}

// ConnectionAuthConfigAdditionalVariableSecretValuePtrInput is an input type that accepts ConnectionAuthConfigAdditionalVariableSecretValueArgs, ConnectionAuthConfigAdditionalVariableSecretValuePtr and ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigAdditionalVariableSecretValuePtrInput` via:
//
//	        ConnectionAuthConfigAdditionalVariableSecretValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigAdditionalVariableSecretValuePtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput
	ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Context) ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput
}

type connectionAuthConfigAdditionalVariableSecretValuePtrType ConnectionAuthConfigAdditionalVariableSecretValueArgs

func ConnectionAuthConfigAdditionalVariableSecretValuePtr(v *ConnectionAuthConfigAdditionalVariableSecretValueArgs) ConnectionAuthConfigAdditionalVariableSecretValuePtrInput {
	return (*connectionAuthConfigAdditionalVariableSecretValuePtrType)(v)
}

func (*connectionAuthConfigAdditionalVariableSecretValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (i *connectionAuthConfigAdditionalVariableSecretValuePtrType) ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput {
	return i.ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigAdditionalVariableSecretValuePtrType) ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput)
}

type ConnectionAuthConfigAdditionalVariableSecretValueOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigAdditionalVariableSecretValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (o ConnectionAuthConfigAdditionalVariableSecretValueOutput) ToConnectionAuthConfigAdditionalVariableSecretValueOutput() ConnectionAuthConfigAdditionalVariableSecretValueOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableSecretValueOutput) ToConnectionAuthConfigAdditionalVariableSecretValueOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableSecretValueOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableSecretValueOutput) ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o.ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigAdditionalVariableSecretValueOutput) ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigAdditionalVariableSecretValue) *ConnectionAuthConfigAdditionalVariableSecretValue {
		return &v
	}).(ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionAuthConfigAdditionalVariableSecretValueOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigAdditionalVariableSecretValue) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (o ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput) ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput) ToConnectionAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput) Elem() ConnectionAuthConfigAdditionalVariableSecretValueOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigAdditionalVariableSecretValue) ConnectionAuthConfigAdditionalVariableSecretValue {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigAdditionalVariableSecretValue
		return ret
	}).(ConnectionAuthConfigAdditionalVariableSecretValueOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigAdditionalVariableSecretValue) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigOauth2AuthCodeFlow struct {
	// Auth URL for Authorization Code Flow.
	AuthUri *string `pulumi:"authUri"`
	// Client ID for user-provided OAuth app.
	ClientId *string `pulumi:"clientId"`
	// Client secret for user-provided OAuth app.
	ClientSecret *ConnectionAuthConfigOauth2AuthCodeFlowClientSecret `pulumi:"clientSecret"`
	// Whether to enable PKCE when the user performs the auth code flow.
	EnablePkce *bool `pulumi:"enablePkce"`
	// Scopes the connection will request when the user performs the auth code flow.
	Scopes []string `pulumi:"scopes"`
}

// ConnectionAuthConfigOauth2AuthCodeFlowInput is an input type that accepts ConnectionAuthConfigOauth2AuthCodeFlowArgs and ConnectionAuthConfigOauth2AuthCodeFlowOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2AuthCodeFlowInput` via:
//
//	ConnectionAuthConfigOauth2AuthCodeFlowArgs{...}
type ConnectionAuthConfigOauth2AuthCodeFlowInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2AuthCodeFlowOutput() ConnectionAuthConfigOauth2AuthCodeFlowOutput
	ToConnectionAuthConfigOauth2AuthCodeFlowOutputWithContext(context.Context) ConnectionAuthConfigOauth2AuthCodeFlowOutput
}

type ConnectionAuthConfigOauth2AuthCodeFlowArgs struct {
	// Auth URL for Authorization Code Flow.
	AuthUri pulumi.StringPtrInput `pulumi:"authUri"`
	// Client ID for user-provided OAuth app.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret for user-provided OAuth app.
	ClientSecret ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrInput `pulumi:"clientSecret"`
	// Whether to enable PKCE when the user performs the auth code flow.
	EnablePkce pulumi.BoolPtrInput `pulumi:"enablePkce"`
	// Scopes the connection will request when the user performs the auth code flow.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (ConnectionAuthConfigOauth2AuthCodeFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2AuthCodeFlow)(nil)).Elem()
}

func (i ConnectionAuthConfigOauth2AuthCodeFlowArgs) ToConnectionAuthConfigOauth2AuthCodeFlowOutput() ConnectionAuthConfigOauth2AuthCodeFlowOutput {
	return i.ToConnectionAuthConfigOauth2AuthCodeFlowOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2AuthCodeFlowArgs) ToConnectionAuthConfigOauth2AuthCodeFlowOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2AuthCodeFlowOutput)
}

func (i ConnectionAuthConfigOauth2AuthCodeFlowArgs) ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return i.ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2AuthCodeFlowArgs) ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2AuthCodeFlowOutput).ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigOauth2AuthCodeFlowPtrInput is an input type that accepts ConnectionAuthConfigOauth2AuthCodeFlowArgs, ConnectionAuthConfigOauth2AuthCodeFlowPtr and ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2AuthCodeFlowPtrInput` via:
//
//	        ConnectionAuthConfigOauth2AuthCodeFlowArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigOauth2AuthCodeFlowPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput
	ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutputWithContext(context.Context) ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput
}

type connectionAuthConfigOauth2AuthCodeFlowPtrType ConnectionAuthConfigOauth2AuthCodeFlowArgs

func ConnectionAuthConfigOauth2AuthCodeFlowPtr(v *ConnectionAuthConfigOauth2AuthCodeFlowArgs) ConnectionAuthConfigOauth2AuthCodeFlowPtrInput {
	return (*connectionAuthConfigOauth2AuthCodeFlowPtrType)(v)
}

func (*connectionAuthConfigOauth2AuthCodeFlowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2AuthCodeFlow)(nil)).Elem()
}

func (i *connectionAuthConfigOauth2AuthCodeFlowPtrType) ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return i.ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigOauth2AuthCodeFlowPtrType) ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput)
}

type ConnectionAuthConfigOauth2AuthCodeFlowOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2AuthCodeFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2AuthCodeFlow)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowOutput) ToConnectionAuthConfigOauth2AuthCodeFlowOutput() ConnectionAuthConfigOauth2AuthCodeFlowOutput {
	return o
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowOutput) ToConnectionAuthConfigOauth2AuthCodeFlowOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowOutput {
	return o
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowOutput) ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return o.ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowOutput) ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigOauth2AuthCodeFlow) *ConnectionAuthConfigOauth2AuthCodeFlow {
		return &v
	}).(ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput)
}

// Auth URL for Authorization Code Flow.
func (o ConnectionAuthConfigOauth2AuthCodeFlowOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2AuthCodeFlow) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

// Client ID for user-provided OAuth app.
func (o ConnectionAuthConfigOauth2AuthCodeFlowOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2AuthCodeFlow) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret for user-provided OAuth app.
func (o ConnectionAuthConfigOauth2AuthCodeFlowOutput) ClientSecret() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2AuthCodeFlow) *ConnectionAuthConfigOauth2AuthCodeFlowClientSecret {
		return v.ClientSecret
	}).(ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput)
}

// Whether to enable PKCE when the user performs the auth code flow.
func (o ConnectionAuthConfigOauth2AuthCodeFlowOutput) EnablePkce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2AuthCodeFlow) *bool { return v.EnablePkce }).(pulumi.BoolPtrOutput)
}

// Scopes the connection will request when the user performs the auth code flow.
func (o ConnectionAuthConfigOauth2AuthCodeFlowOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2AuthCodeFlow) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2AuthCodeFlow)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput) ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput) ToConnectionAuthConfigOauth2AuthCodeFlowPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput) Elem() ConnectionAuthConfigOauth2AuthCodeFlowOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2AuthCodeFlow) ConnectionAuthConfigOauth2AuthCodeFlow {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigOauth2AuthCodeFlow
		return ret
	}).(ConnectionAuthConfigOauth2AuthCodeFlowOutput)
}

// Auth URL for Authorization Code Flow.
func (o ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2AuthCodeFlow) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

// Client ID for user-provided OAuth app.
func (o ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2AuthCodeFlow) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret for user-provided OAuth app.
func (o ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput) ClientSecret() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2AuthCodeFlow) *ConnectionAuthConfigOauth2AuthCodeFlowClientSecret {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput)
}

// Whether to enable PKCE when the user performs the auth code flow.
func (o ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput) EnablePkce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2AuthCodeFlow) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePkce
	}).(pulumi.BoolPtrOutput)
}

// Scopes the connection will request when the user performs the auth code flow.
func (o ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2AuthCodeFlow) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

type ConnectionAuthConfigOauth2AuthCodeFlowClientSecret struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionAuthConfigOauth2AuthCodeFlowClientSecretInput is an input type that accepts ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs and ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2AuthCodeFlowClientSecretInput` via:
//
//	ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs{...}
type ConnectionAuthConfigOauth2AuthCodeFlowClientSecretInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput
	ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutputWithContext(context.Context) ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput
}

type ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2AuthCodeFlowClientSecret)(nil)).Elem()
}

func (i ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput {
	return i.ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput)
}

func (i ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return i.ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput).ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrInput is an input type that accepts ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs, ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtr and ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrInput` via:
//
//	        ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput
	ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutputWithContext(context.Context) ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput
}

type connectionAuthConfigOauth2AuthCodeFlowClientSecretPtrType ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs

func ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtr(v *ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs) ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrInput {
	return (*connectionAuthConfigOauth2AuthCodeFlowClientSecretPtrType)(v)
}

func (*connectionAuthConfigOauth2AuthCodeFlowClientSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2AuthCodeFlowClientSecret)(nil)).Elem()
}

func (i *connectionAuthConfigOauth2AuthCodeFlowClientSecretPtrType) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return i.ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigOauth2AuthCodeFlowClientSecretPtrType) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput)
}

type ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2AuthCodeFlowClientSecret)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput {
	return o
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput {
	return o
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return o.ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigOauth2AuthCodeFlowClientSecret) *ConnectionAuthConfigOauth2AuthCodeFlowClientSecret {
		return &v
	}).(ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2AuthCodeFlowClientSecret) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2AuthCodeFlowClientSecret)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput) ToConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput) Elem() ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2AuthCodeFlowClientSecret) ConnectionAuthConfigOauth2AuthCodeFlowClientSecret {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigOauth2AuthCodeFlowClientSecret
		return ret
	}).(ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2AuthCodeFlowClientSecret) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigOauth2ClientCredentials struct {
	// Secret version of Password for Authentication.
	ClientId string `pulumi:"clientId"`
	// Secret version reference containing the client secret.
	ClientSecret *ConnectionAuthConfigOauth2ClientCredentialsClientSecret `pulumi:"clientSecret"`
}

// ConnectionAuthConfigOauth2ClientCredentialsInput is an input type that accepts ConnectionAuthConfigOauth2ClientCredentialsArgs and ConnectionAuthConfigOauth2ClientCredentialsOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2ClientCredentialsInput` via:
//
//	ConnectionAuthConfigOauth2ClientCredentialsArgs{...}
type ConnectionAuthConfigOauth2ClientCredentialsInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2ClientCredentialsOutput() ConnectionAuthConfigOauth2ClientCredentialsOutput
	ToConnectionAuthConfigOauth2ClientCredentialsOutputWithContext(context.Context) ConnectionAuthConfigOauth2ClientCredentialsOutput
}

type ConnectionAuthConfigOauth2ClientCredentialsArgs struct {
	// Secret version of Password for Authentication.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Secret version reference containing the client secret.
	ClientSecret ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrInput `pulumi:"clientSecret"`
}

func (ConnectionAuthConfigOauth2ClientCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2ClientCredentials)(nil)).Elem()
}

func (i ConnectionAuthConfigOauth2ClientCredentialsArgs) ToConnectionAuthConfigOauth2ClientCredentialsOutput() ConnectionAuthConfigOauth2ClientCredentialsOutput {
	return i.ToConnectionAuthConfigOauth2ClientCredentialsOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2ClientCredentialsArgs) ToConnectionAuthConfigOauth2ClientCredentialsOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2ClientCredentialsOutput)
}

func (i ConnectionAuthConfigOauth2ClientCredentialsArgs) ToConnectionAuthConfigOauth2ClientCredentialsPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return i.ToConnectionAuthConfigOauth2ClientCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2ClientCredentialsArgs) ToConnectionAuthConfigOauth2ClientCredentialsPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2ClientCredentialsOutput).ToConnectionAuthConfigOauth2ClientCredentialsPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigOauth2ClientCredentialsPtrInput is an input type that accepts ConnectionAuthConfigOauth2ClientCredentialsArgs, ConnectionAuthConfigOauth2ClientCredentialsPtr and ConnectionAuthConfigOauth2ClientCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2ClientCredentialsPtrInput` via:
//
//	        ConnectionAuthConfigOauth2ClientCredentialsArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigOauth2ClientCredentialsPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2ClientCredentialsPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsPtrOutput
	ToConnectionAuthConfigOauth2ClientCredentialsPtrOutputWithContext(context.Context) ConnectionAuthConfigOauth2ClientCredentialsPtrOutput
}

type connectionAuthConfigOauth2ClientCredentialsPtrType ConnectionAuthConfigOauth2ClientCredentialsArgs

func ConnectionAuthConfigOauth2ClientCredentialsPtr(v *ConnectionAuthConfigOauth2ClientCredentialsArgs) ConnectionAuthConfigOauth2ClientCredentialsPtrInput {
	return (*connectionAuthConfigOauth2ClientCredentialsPtrType)(v)
}

func (*connectionAuthConfigOauth2ClientCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2ClientCredentials)(nil)).Elem()
}

func (i *connectionAuthConfigOauth2ClientCredentialsPtrType) ToConnectionAuthConfigOauth2ClientCredentialsPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return i.ToConnectionAuthConfigOauth2ClientCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigOauth2ClientCredentialsPtrType) ToConnectionAuthConfigOauth2ClientCredentialsPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2ClientCredentialsPtrOutput)
}

type ConnectionAuthConfigOauth2ClientCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2ClientCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2ClientCredentials)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2ClientCredentialsOutput) ToConnectionAuthConfigOauth2ClientCredentialsOutput() ConnectionAuthConfigOauth2ClientCredentialsOutput {
	return o
}

func (o ConnectionAuthConfigOauth2ClientCredentialsOutput) ToConnectionAuthConfigOauth2ClientCredentialsOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsOutput {
	return o
}

func (o ConnectionAuthConfigOauth2ClientCredentialsOutput) ToConnectionAuthConfigOauth2ClientCredentialsPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return o.ToConnectionAuthConfigOauth2ClientCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigOauth2ClientCredentialsOutput) ToConnectionAuthConfigOauth2ClientCredentialsPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigOauth2ClientCredentials) *ConnectionAuthConfigOauth2ClientCredentials {
		return &v
	}).(ConnectionAuthConfigOauth2ClientCredentialsPtrOutput)
}

// Secret version of Password for Authentication.
func (o ConnectionAuthConfigOauth2ClientCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2ClientCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// Secret version reference containing the client secret.
func (o ConnectionAuthConfigOauth2ClientCredentialsOutput) ClientSecret() ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2ClientCredentials) *ConnectionAuthConfigOauth2ClientCredentialsClientSecret {
		return v.ClientSecret
	}).(ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput)
}

type ConnectionAuthConfigOauth2ClientCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2ClientCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2ClientCredentials)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2ClientCredentialsPtrOutput) ToConnectionAuthConfigOauth2ClientCredentialsPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2ClientCredentialsPtrOutput) ToConnectionAuthConfigOauth2ClientCredentialsPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2ClientCredentialsPtrOutput) Elem() ConnectionAuthConfigOauth2ClientCredentialsOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2ClientCredentials) ConnectionAuthConfigOauth2ClientCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigOauth2ClientCredentials
		return ret
	}).(ConnectionAuthConfigOauth2ClientCredentialsOutput)
}

// Secret version of Password for Authentication.
func (o ConnectionAuthConfigOauth2ClientCredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2ClientCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Secret version reference containing the client secret.
func (o ConnectionAuthConfigOauth2ClientCredentialsPtrOutput) ClientSecret() ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2ClientCredentials) *ConnectionAuthConfigOauth2ClientCredentialsClientSecret {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput)
}

type ConnectionAuthConfigOauth2ClientCredentialsClientSecret struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionAuthConfigOauth2ClientCredentialsClientSecretInput is an input type that accepts ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs and ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2ClientCredentialsClientSecretInput` via:
//
//	ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs{...}
type ConnectionAuthConfigOauth2ClientCredentialsClientSecretInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput() ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput
	ToConnectionAuthConfigOauth2ClientCredentialsClientSecretOutputWithContext(context.Context) ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput
}

type ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2ClientCredentialsClientSecret)(nil)).Elem()
}

func (i ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput() ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput {
	return i.ToConnectionAuthConfigOauth2ClientCredentialsClientSecretOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput)
}

func (i ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return i.ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput).ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrInput is an input type that accepts ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs, ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtr and ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrInput` via:
//
//	        ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput
	ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutputWithContext(context.Context) ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput
}

type connectionAuthConfigOauth2ClientCredentialsClientSecretPtrType ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs

func ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtr(v *ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs) ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrInput {
	return (*connectionAuthConfigOauth2ClientCredentialsClientSecretPtrType)(v)
}

func (*connectionAuthConfigOauth2ClientCredentialsClientSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2ClientCredentialsClientSecret)(nil)).Elem()
}

func (i *connectionAuthConfigOauth2ClientCredentialsClientSecretPtrType) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return i.ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigOauth2ClientCredentialsClientSecretPtrType) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput)
}

type ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2ClientCredentialsClientSecret)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput() ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput {
	return o
}

func (o ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput {
	return o
}

func (o ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return o.ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigOauth2ClientCredentialsClientSecret) *ConnectionAuthConfigOauth2ClientCredentialsClientSecret {
		return &v
	}).(ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2ClientCredentialsClientSecret) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2ClientCredentialsClientSecret)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput() ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput) ToConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput) Elem() ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2ClientCredentialsClientSecret) ConnectionAuthConfigOauth2ClientCredentialsClientSecret {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigOauth2ClientCredentialsClientSecret
		return ret
	}).(ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2ClientCredentialsClientSecret) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigOauth2JwtBearer struct {
	// Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate.
	// This private key will be used to sign JWTs used for the jwt-bearer authorization grant.
	// Specified in the form as: projects/*/secrets/*/versions/*.
	ClientKey *ConnectionAuthConfigOauth2JwtBearerClientKey `pulumi:"clientKey"`
	// JwtClaims providers fields to generate the token.
	JwtClaims *ConnectionAuthConfigOauth2JwtBearerJwtClaims `pulumi:"jwtClaims"`
}

// ConnectionAuthConfigOauth2JwtBearerInput is an input type that accepts ConnectionAuthConfigOauth2JwtBearerArgs and ConnectionAuthConfigOauth2JwtBearerOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2JwtBearerInput` via:
//
//	ConnectionAuthConfigOauth2JwtBearerArgs{...}
type ConnectionAuthConfigOauth2JwtBearerInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2JwtBearerOutput() ConnectionAuthConfigOauth2JwtBearerOutput
	ToConnectionAuthConfigOauth2JwtBearerOutputWithContext(context.Context) ConnectionAuthConfigOauth2JwtBearerOutput
}

type ConnectionAuthConfigOauth2JwtBearerArgs struct {
	// Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate.
	// This private key will be used to sign JWTs used for the jwt-bearer authorization grant.
	// Specified in the form as: projects/*/secrets/*/versions/*.
	ClientKey ConnectionAuthConfigOauth2JwtBearerClientKeyPtrInput `pulumi:"clientKey"`
	// JwtClaims providers fields to generate the token.
	JwtClaims ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrInput `pulumi:"jwtClaims"`
}

func (ConnectionAuthConfigOauth2JwtBearerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearer)(nil)).Elem()
}

func (i ConnectionAuthConfigOauth2JwtBearerArgs) ToConnectionAuthConfigOauth2JwtBearerOutput() ConnectionAuthConfigOauth2JwtBearerOutput {
	return i.ToConnectionAuthConfigOauth2JwtBearerOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2JwtBearerArgs) ToConnectionAuthConfigOauth2JwtBearerOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2JwtBearerOutput)
}

func (i ConnectionAuthConfigOauth2JwtBearerArgs) ToConnectionAuthConfigOauth2JwtBearerPtrOutput() ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return i.ToConnectionAuthConfigOauth2JwtBearerPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2JwtBearerArgs) ToConnectionAuthConfigOauth2JwtBearerPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2JwtBearerOutput).ToConnectionAuthConfigOauth2JwtBearerPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigOauth2JwtBearerPtrInput is an input type that accepts ConnectionAuthConfigOauth2JwtBearerArgs, ConnectionAuthConfigOauth2JwtBearerPtr and ConnectionAuthConfigOauth2JwtBearerPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2JwtBearerPtrInput` via:
//
//	        ConnectionAuthConfigOauth2JwtBearerArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigOauth2JwtBearerPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2JwtBearerPtrOutput() ConnectionAuthConfigOauth2JwtBearerPtrOutput
	ToConnectionAuthConfigOauth2JwtBearerPtrOutputWithContext(context.Context) ConnectionAuthConfigOauth2JwtBearerPtrOutput
}

type connectionAuthConfigOauth2JwtBearerPtrType ConnectionAuthConfigOauth2JwtBearerArgs

func ConnectionAuthConfigOauth2JwtBearerPtr(v *ConnectionAuthConfigOauth2JwtBearerArgs) ConnectionAuthConfigOauth2JwtBearerPtrInput {
	return (*connectionAuthConfigOauth2JwtBearerPtrType)(v)
}

func (*connectionAuthConfigOauth2JwtBearerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2JwtBearer)(nil)).Elem()
}

func (i *connectionAuthConfigOauth2JwtBearerPtrType) ToConnectionAuthConfigOauth2JwtBearerPtrOutput() ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return i.ToConnectionAuthConfigOauth2JwtBearerPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigOauth2JwtBearerPtrType) ToConnectionAuthConfigOauth2JwtBearerPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2JwtBearerPtrOutput)
}

type ConnectionAuthConfigOauth2JwtBearerOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2JwtBearerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearer)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2JwtBearerOutput) ToConnectionAuthConfigOauth2JwtBearerOutput() ConnectionAuthConfigOauth2JwtBearerOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerOutput) ToConnectionAuthConfigOauth2JwtBearerOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerOutput) ToConnectionAuthConfigOauth2JwtBearerPtrOutput() ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return o.ToConnectionAuthConfigOauth2JwtBearerPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigOauth2JwtBearerOutput) ToConnectionAuthConfigOauth2JwtBearerPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigOauth2JwtBearer) *ConnectionAuthConfigOauth2JwtBearer {
		return &v
	}).(ConnectionAuthConfigOauth2JwtBearerPtrOutput)
}

// Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate.
// This private key will be used to sign JWTs used for the jwt-bearer authorization grant.
// Specified in the form as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigOauth2JwtBearerOutput) ClientKey() ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2JwtBearer) *ConnectionAuthConfigOauth2JwtBearerClientKey {
		return v.ClientKey
	}).(ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput)
}

// JwtClaims providers fields to generate the token.
func (o ConnectionAuthConfigOauth2JwtBearerOutput) JwtClaims() ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2JwtBearer) *ConnectionAuthConfigOauth2JwtBearerJwtClaims {
		return v.JwtClaims
	}).(ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput)
}

type ConnectionAuthConfigOauth2JwtBearerPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2JwtBearerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2JwtBearer)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2JwtBearerPtrOutput) ToConnectionAuthConfigOauth2JwtBearerPtrOutput() ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerPtrOutput) ToConnectionAuthConfigOauth2JwtBearerPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerPtrOutput) Elem() ConnectionAuthConfigOauth2JwtBearerOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2JwtBearer) ConnectionAuthConfigOauth2JwtBearer {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigOauth2JwtBearer
		return ret
	}).(ConnectionAuthConfigOauth2JwtBearerOutput)
}

// Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate.
// This private key will be used to sign JWTs used for the jwt-bearer authorization grant.
// Specified in the form as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigOauth2JwtBearerPtrOutput) ClientKey() ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2JwtBearer) *ConnectionAuthConfigOauth2JwtBearerClientKey {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput)
}

// JwtClaims providers fields to generate the token.
func (o ConnectionAuthConfigOauth2JwtBearerPtrOutput) JwtClaims() ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2JwtBearer) *ConnectionAuthConfigOauth2JwtBearerJwtClaims {
		if v == nil {
			return nil
		}
		return v.JwtClaims
	}).(ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput)
}

type ConnectionAuthConfigOauth2JwtBearerClientKey struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionAuthConfigOauth2JwtBearerClientKeyInput is an input type that accepts ConnectionAuthConfigOauth2JwtBearerClientKeyArgs and ConnectionAuthConfigOauth2JwtBearerClientKeyOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2JwtBearerClientKeyInput` via:
//
//	ConnectionAuthConfigOauth2JwtBearerClientKeyArgs{...}
type ConnectionAuthConfigOauth2JwtBearerClientKeyInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2JwtBearerClientKeyOutput() ConnectionAuthConfigOauth2JwtBearerClientKeyOutput
	ToConnectionAuthConfigOauth2JwtBearerClientKeyOutputWithContext(context.Context) ConnectionAuthConfigOauth2JwtBearerClientKeyOutput
}

type ConnectionAuthConfigOauth2JwtBearerClientKeyArgs struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionAuthConfigOauth2JwtBearerClientKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerClientKey)(nil)).Elem()
}

func (i ConnectionAuthConfigOauth2JwtBearerClientKeyArgs) ToConnectionAuthConfigOauth2JwtBearerClientKeyOutput() ConnectionAuthConfigOauth2JwtBearerClientKeyOutput {
	return i.ToConnectionAuthConfigOauth2JwtBearerClientKeyOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2JwtBearerClientKeyArgs) ToConnectionAuthConfigOauth2JwtBearerClientKeyOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerClientKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2JwtBearerClientKeyOutput)
}

func (i ConnectionAuthConfigOauth2JwtBearerClientKeyArgs) ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput() ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return i.ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2JwtBearerClientKeyArgs) ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2JwtBearerClientKeyOutput).ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigOauth2JwtBearerClientKeyPtrInput is an input type that accepts ConnectionAuthConfigOauth2JwtBearerClientKeyArgs, ConnectionAuthConfigOauth2JwtBearerClientKeyPtr and ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2JwtBearerClientKeyPtrInput` via:
//
//	        ConnectionAuthConfigOauth2JwtBearerClientKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigOauth2JwtBearerClientKeyPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput() ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput
	ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutputWithContext(context.Context) ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput
}

type connectionAuthConfigOauth2JwtBearerClientKeyPtrType ConnectionAuthConfigOauth2JwtBearerClientKeyArgs

func ConnectionAuthConfigOauth2JwtBearerClientKeyPtr(v *ConnectionAuthConfigOauth2JwtBearerClientKeyArgs) ConnectionAuthConfigOauth2JwtBearerClientKeyPtrInput {
	return (*connectionAuthConfigOauth2JwtBearerClientKeyPtrType)(v)
}

func (*connectionAuthConfigOauth2JwtBearerClientKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2JwtBearerClientKey)(nil)).Elem()
}

func (i *connectionAuthConfigOauth2JwtBearerClientKeyPtrType) ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput() ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return i.ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigOauth2JwtBearerClientKeyPtrType) ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput)
}

type ConnectionAuthConfigOauth2JwtBearerClientKeyOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2JwtBearerClientKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerClientKey)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2JwtBearerClientKeyOutput) ToConnectionAuthConfigOauth2JwtBearerClientKeyOutput() ConnectionAuthConfigOauth2JwtBearerClientKeyOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerClientKeyOutput) ToConnectionAuthConfigOauth2JwtBearerClientKeyOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerClientKeyOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerClientKeyOutput) ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput() ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return o.ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigOauth2JwtBearerClientKeyOutput) ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigOauth2JwtBearerClientKey) *ConnectionAuthConfigOauth2JwtBearerClientKey {
		return &v
	}).(ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigOauth2JwtBearerClientKeyOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2JwtBearerClientKey) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2JwtBearerClientKey)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput) ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput() ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput) ToConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput) Elem() ConnectionAuthConfigOauth2JwtBearerClientKeyOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2JwtBearerClientKey) ConnectionAuthConfigOauth2JwtBearerClientKey {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigOauth2JwtBearerClientKey
		return ret
	}).(ConnectionAuthConfigOauth2JwtBearerClientKeyOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2JwtBearerClientKey) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigOauth2JwtBearerJwtClaims struct {
	// Value for the "aud" claim.
	//
	// <a name="nestedOauth2ClientCredentials"></a>The `oauth2ClientCredentials` block supports:
	Audience *string `pulumi:"audience"`
	// Value for the "iss" claim.
	Issuer *string `pulumi:"issuer"`
	// Value for the "sub" claim.
	Subject *string `pulumi:"subject"`
}

// ConnectionAuthConfigOauth2JwtBearerJwtClaimsInput is an input type that accepts ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs and ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2JwtBearerJwtClaimsInput` via:
//
//	ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs{...}
type ConnectionAuthConfigOauth2JwtBearerJwtClaimsInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput() ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput
	ToConnectionAuthConfigOauth2JwtBearerJwtClaimsOutputWithContext(context.Context) ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput
}

type ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs struct {
	// Value for the "aud" claim.
	//
	// <a name="nestedOauth2ClientCredentials"></a>The `oauth2ClientCredentials` block supports:
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Value for the "iss" claim.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Value for the "sub" claim.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
}

func (ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerJwtClaims)(nil)).Elem()
}

func (i ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput() ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput {
	return i.ToConnectionAuthConfigOauth2JwtBearerJwtClaimsOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput)
}

func (i ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput() ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return i.ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput).ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrInput is an input type that accepts ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs, ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtr and ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrInput` via:
//
//	        ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput() ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput
	ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutputWithContext(context.Context) ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput
}

type connectionAuthConfigOauth2JwtBearerJwtClaimsPtrType ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs

func ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtr(v *ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs) ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrInput {
	return (*connectionAuthConfigOauth2JwtBearerJwtClaimsPtrType)(v)
}

func (*connectionAuthConfigOauth2JwtBearerJwtClaimsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2JwtBearerJwtClaims)(nil)).Elem()
}

func (i *connectionAuthConfigOauth2JwtBearerJwtClaimsPtrType) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput() ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return i.ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigOauth2JwtBearerJwtClaimsPtrType) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput)
}

type ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerJwtClaims)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput() ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput() ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return o.ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigOauth2JwtBearerJwtClaims) *ConnectionAuthConfigOauth2JwtBearerJwtClaims {
		return &v
	}).(ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput)
}

// Value for the "aud" claim.
//
// <a name="nestedOauth2ClientCredentials"></a>The `oauth2ClientCredentials` block supports:
func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2JwtBearerJwtClaims) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Value for the "iss" claim.
func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2JwtBearerJwtClaims) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Value for the "sub" claim.
func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigOauth2JwtBearerJwtClaims) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigOauth2JwtBearerJwtClaims)(nil)).Elem()
}

func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput() ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput) ToConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput {
	return o
}

func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput) Elem() ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2JwtBearerJwtClaims) ConnectionAuthConfigOauth2JwtBearerJwtClaims {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigOauth2JwtBearerJwtClaims
		return ret
	}).(ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput)
}

// Value for the "aud" claim.
//
// <a name="nestedOauth2ClientCredentials"></a>The `oauth2ClientCredentials` block supports:
func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2JwtBearerJwtClaims) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Value for the "iss" claim.
func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2JwtBearerJwtClaims) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Value for the "sub" claim.
func (o ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigOauth2JwtBearerJwtClaims) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigSshPublicKey struct {
	// Format of SSH Client cert.
	CertType *string `pulumi:"certType"`
	// SSH Client Cert. It should contain both public and private key.
	// Structure is documented below.
	SshClientCert *ConnectionAuthConfigSshPublicKeySshClientCert `pulumi:"sshClientCert"`
	// Password (passphrase) for ssh client certificate if it has one.
	// Structure is documented below.
	SshClientCertPass *ConnectionAuthConfigSshPublicKeySshClientCertPass `pulumi:"sshClientCertPass"`
	// The user account used to authenticate.
	Username string `pulumi:"username"`
}

// ConnectionAuthConfigSshPublicKeyInput is an input type that accepts ConnectionAuthConfigSshPublicKeyArgs and ConnectionAuthConfigSshPublicKeyOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigSshPublicKeyInput` via:
//
//	ConnectionAuthConfigSshPublicKeyArgs{...}
type ConnectionAuthConfigSshPublicKeyInput interface {
	pulumi.Input

	ToConnectionAuthConfigSshPublicKeyOutput() ConnectionAuthConfigSshPublicKeyOutput
	ToConnectionAuthConfigSshPublicKeyOutputWithContext(context.Context) ConnectionAuthConfigSshPublicKeyOutput
}

type ConnectionAuthConfigSshPublicKeyArgs struct {
	// Format of SSH Client cert.
	CertType pulumi.StringPtrInput `pulumi:"certType"`
	// SSH Client Cert. It should contain both public and private key.
	// Structure is documented below.
	SshClientCert ConnectionAuthConfigSshPublicKeySshClientCertPtrInput `pulumi:"sshClientCert"`
	// Password (passphrase) for ssh client certificate if it has one.
	// Structure is documented below.
	SshClientCertPass ConnectionAuthConfigSshPublicKeySshClientCertPassPtrInput `pulumi:"sshClientCertPass"`
	// The user account used to authenticate.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectionAuthConfigSshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigSshPublicKey)(nil)).Elem()
}

func (i ConnectionAuthConfigSshPublicKeyArgs) ToConnectionAuthConfigSshPublicKeyOutput() ConnectionAuthConfigSshPublicKeyOutput {
	return i.ToConnectionAuthConfigSshPublicKeyOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigSshPublicKeyArgs) ToConnectionAuthConfigSshPublicKeyOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigSshPublicKeyOutput)
}

func (i ConnectionAuthConfigSshPublicKeyArgs) ToConnectionAuthConfigSshPublicKeyPtrOutput() ConnectionAuthConfigSshPublicKeyPtrOutput {
	return i.ToConnectionAuthConfigSshPublicKeyPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigSshPublicKeyArgs) ToConnectionAuthConfigSshPublicKeyPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigSshPublicKeyOutput).ToConnectionAuthConfigSshPublicKeyPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigSshPublicKeyPtrInput is an input type that accepts ConnectionAuthConfigSshPublicKeyArgs, ConnectionAuthConfigSshPublicKeyPtr and ConnectionAuthConfigSshPublicKeyPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigSshPublicKeyPtrInput` via:
//
//	        ConnectionAuthConfigSshPublicKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigSshPublicKeyPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigSshPublicKeyPtrOutput() ConnectionAuthConfigSshPublicKeyPtrOutput
	ToConnectionAuthConfigSshPublicKeyPtrOutputWithContext(context.Context) ConnectionAuthConfigSshPublicKeyPtrOutput
}

type connectionAuthConfigSshPublicKeyPtrType ConnectionAuthConfigSshPublicKeyArgs

func ConnectionAuthConfigSshPublicKeyPtr(v *ConnectionAuthConfigSshPublicKeyArgs) ConnectionAuthConfigSshPublicKeyPtrInput {
	return (*connectionAuthConfigSshPublicKeyPtrType)(v)
}

func (*connectionAuthConfigSshPublicKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigSshPublicKey)(nil)).Elem()
}

func (i *connectionAuthConfigSshPublicKeyPtrType) ToConnectionAuthConfigSshPublicKeyPtrOutput() ConnectionAuthConfigSshPublicKeyPtrOutput {
	return i.ToConnectionAuthConfigSshPublicKeyPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigSshPublicKeyPtrType) ToConnectionAuthConfigSshPublicKeyPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigSshPublicKeyPtrOutput)
}

type ConnectionAuthConfigSshPublicKeyOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigSshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigSshPublicKey)(nil)).Elem()
}

func (o ConnectionAuthConfigSshPublicKeyOutput) ToConnectionAuthConfigSshPublicKeyOutput() ConnectionAuthConfigSshPublicKeyOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeyOutput) ToConnectionAuthConfigSshPublicKeyOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeyOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeyOutput) ToConnectionAuthConfigSshPublicKeyPtrOutput() ConnectionAuthConfigSshPublicKeyPtrOutput {
	return o.ToConnectionAuthConfigSshPublicKeyPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigSshPublicKeyOutput) ToConnectionAuthConfigSshPublicKeyPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigSshPublicKey) *ConnectionAuthConfigSshPublicKey {
		return &v
	}).(ConnectionAuthConfigSshPublicKeyPtrOutput)
}

// Format of SSH Client cert.
func (o ConnectionAuthConfigSshPublicKeyOutput) CertType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigSshPublicKey) *string { return v.CertType }).(pulumi.StringPtrOutput)
}

// SSH Client Cert. It should contain both public and private key.
// Structure is documented below.
func (o ConnectionAuthConfigSshPublicKeyOutput) SshClientCert() ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigSshPublicKey) *ConnectionAuthConfigSshPublicKeySshClientCert {
		return v.SshClientCert
	}).(ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput)
}

// Password (passphrase) for ssh client certificate if it has one.
// Structure is documented below.
func (o ConnectionAuthConfigSshPublicKeyOutput) SshClientCertPass() ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigSshPublicKey) *ConnectionAuthConfigSshPublicKeySshClientCertPass {
		return v.SshClientCertPass
	}).(ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput)
}

// The user account used to authenticate.
func (o ConnectionAuthConfigSshPublicKeyOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigSshPublicKey) string { return v.Username }).(pulumi.StringOutput)
}

type ConnectionAuthConfigSshPublicKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigSshPublicKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigSshPublicKey)(nil)).Elem()
}

func (o ConnectionAuthConfigSshPublicKeyPtrOutput) ToConnectionAuthConfigSshPublicKeyPtrOutput() ConnectionAuthConfigSshPublicKeyPtrOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeyPtrOutput) ToConnectionAuthConfigSshPublicKeyPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeyPtrOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeyPtrOutput) Elem() ConnectionAuthConfigSshPublicKeyOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigSshPublicKey) ConnectionAuthConfigSshPublicKey {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigSshPublicKey
		return ret
	}).(ConnectionAuthConfigSshPublicKeyOutput)
}

// Format of SSH Client cert.
func (o ConnectionAuthConfigSshPublicKeyPtrOutput) CertType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigSshPublicKey) *string {
		if v == nil {
			return nil
		}
		return v.CertType
	}).(pulumi.StringPtrOutput)
}

// SSH Client Cert. It should contain both public and private key.
// Structure is documented below.
func (o ConnectionAuthConfigSshPublicKeyPtrOutput) SshClientCert() ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigSshPublicKey) *ConnectionAuthConfigSshPublicKeySshClientCert {
		if v == nil {
			return nil
		}
		return v.SshClientCert
	}).(ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput)
}

// Password (passphrase) for ssh client certificate if it has one.
// Structure is documented below.
func (o ConnectionAuthConfigSshPublicKeyPtrOutput) SshClientCertPass() ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigSshPublicKey) *ConnectionAuthConfigSshPublicKeySshClientCertPass {
		if v == nil {
			return nil
		}
		return v.SshClientCertPass
	}).(ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput)
}

// The user account used to authenticate.
func (o ConnectionAuthConfigSshPublicKeyPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigSshPublicKey) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigSshPublicKeySshClientCert struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionAuthConfigSshPublicKeySshClientCertInput is an input type that accepts ConnectionAuthConfigSshPublicKeySshClientCertArgs and ConnectionAuthConfigSshPublicKeySshClientCertOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigSshPublicKeySshClientCertInput` via:
//
//	ConnectionAuthConfigSshPublicKeySshClientCertArgs{...}
type ConnectionAuthConfigSshPublicKeySshClientCertInput interface {
	pulumi.Input

	ToConnectionAuthConfigSshPublicKeySshClientCertOutput() ConnectionAuthConfigSshPublicKeySshClientCertOutput
	ToConnectionAuthConfigSshPublicKeySshClientCertOutputWithContext(context.Context) ConnectionAuthConfigSshPublicKeySshClientCertOutput
}

type ConnectionAuthConfigSshPublicKeySshClientCertArgs struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionAuthConfigSshPublicKeySshClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigSshPublicKeySshClientCert)(nil)).Elem()
}

func (i ConnectionAuthConfigSshPublicKeySshClientCertArgs) ToConnectionAuthConfigSshPublicKeySshClientCertOutput() ConnectionAuthConfigSshPublicKeySshClientCertOutput {
	return i.ToConnectionAuthConfigSshPublicKeySshClientCertOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigSshPublicKeySshClientCertArgs) ToConnectionAuthConfigSshPublicKeySshClientCertOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigSshPublicKeySshClientCertOutput)
}

func (i ConnectionAuthConfigSshPublicKeySshClientCertArgs) ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return i.ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigSshPublicKeySshClientCertArgs) ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigSshPublicKeySshClientCertOutput).ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigSshPublicKeySshClientCertPtrInput is an input type that accepts ConnectionAuthConfigSshPublicKeySshClientCertArgs, ConnectionAuthConfigSshPublicKeySshClientCertPtr and ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigSshPublicKeySshClientCertPtrInput` via:
//
//	        ConnectionAuthConfigSshPublicKeySshClientCertArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigSshPublicKeySshClientCertPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput
	ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutputWithContext(context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput
}

type connectionAuthConfigSshPublicKeySshClientCertPtrType ConnectionAuthConfigSshPublicKeySshClientCertArgs

func ConnectionAuthConfigSshPublicKeySshClientCertPtr(v *ConnectionAuthConfigSshPublicKeySshClientCertArgs) ConnectionAuthConfigSshPublicKeySshClientCertPtrInput {
	return (*connectionAuthConfigSshPublicKeySshClientCertPtrType)(v)
}

func (*connectionAuthConfigSshPublicKeySshClientCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigSshPublicKeySshClientCert)(nil)).Elem()
}

func (i *connectionAuthConfigSshPublicKeySshClientCertPtrType) ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return i.ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigSshPublicKeySshClientCertPtrType) ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput)
}

type ConnectionAuthConfigSshPublicKeySshClientCertOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigSshPublicKeySshClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigSshPublicKeySshClientCert)(nil)).Elem()
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertOutput) ToConnectionAuthConfigSshPublicKeySshClientCertOutput() ConnectionAuthConfigSshPublicKeySshClientCertOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertOutput) ToConnectionAuthConfigSshPublicKeySshClientCertOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return o.ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigSshPublicKeySshClientCert) *ConnectionAuthConfigSshPublicKeySshClientCert {
		return &v
	}).(ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigSshPublicKeySshClientCertOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigSshPublicKeySshClientCert) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigSshPublicKeySshClientCert)(nil)).Elem()
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput) Elem() ConnectionAuthConfigSshPublicKeySshClientCertOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigSshPublicKeySshClientCert) ConnectionAuthConfigSshPublicKeySshClientCert {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigSshPublicKeySshClientCert
		return ret
	}).(ConnectionAuthConfigSshPublicKeySshClientCertOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigSshPublicKeySshClientCert) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigSshPublicKeySshClientCertPass struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	//
	// <a name="nestedOauth2AuthCodeFlow"></a>The `oauth2AuthCodeFlow` block supports:
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionAuthConfigSshPublicKeySshClientCertPassInput is an input type that accepts ConnectionAuthConfigSshPublicKeySshClientCertPassArgs and ConnectionAuthConfigSshPublicKeySshClientCertPassOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigSshPublicKeySshClientCertPassInput` via:
//
//	ConnectionAuthConfigSshPublicKeySshClientCertPassArgs{...}
type ConnectionAuthConfigSshPublicKeySshClientCertPassInput interface {
	pulumi.Input

	ToConnectionAuthConfigSshPublicKeySshClientCertPassOutput() ConnectionAuthConfigSshPublicKeySshClientCertPassOutput
	ToConnectionAuthConfigSshPublicKeySshClientCertPassOutputWithContext(context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPassOutput
}

type ConnectionAuthConfigSshPublicKeySshClientCertPassArgs struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	//
	// <a name="nestedOauth2AuthCodeFlow"></a>The `oauth2AuthCodeFlow` block supports:
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionAuthConfigSshPublicKeySshClientCertPassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigSshPublicKeySshClientCertPass)(nil)).Elem()
}

func (i ConnectionAuthConfigSshPublicKeySshClientCertPassArgs) ToConnectionAuthConfigSshPublicKeySshClientCertPassOutput() ConnectionAuthConfigSshPublicKeySshClientCertPassOutput {
	return i.ToConnectionAuthConfigSshPublicKeySshClientCertPassOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigSshPublicKeySshClientCertPassArgs) ToConnectionAuthConfigSshPublicKeySshClientCertPassOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigSshPublicKeySshClientCertPassOutput)
}

func (i ConnectionAuthConfigSshPublicKeySshClientCertPassArgs) ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return i.ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigSshPublicKeySshClientCertPassArgs) ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigSshPublicKeySshClientCertPassOutput).ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigSshPublicKeySshClientCertPassPtrInput is an input type that accepts ConnectionAuthConfigSshPublicKeySshClientCertPassArgs, ConnectionAuthConfigSshPublicKeySshClientCertPassPtr and ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigSshPublicKeySshClientCertPassPtrInput` via:
//
//	        ConnectionAuthConfigSshPublicKeySshClientCertPassArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigSshPublicKeySshClientCertPassPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput
	ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutputWithContext(context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput
}

type connectionAuthConfigSshPublicKeySshClientCertPassPtrType ConnectionAuthConfigSshPublicKeySshClientCertPassArgs

func ConnectionAuthConfigSshPublicKeySshClientCertPassPtr(v *ConnectionAuthConfigSshPublicKeySshClientCertPassArgs) ConnectionAuthConfigSshPublicKeySshClientCertPassPtrInput {
	return (*connectionAuthConfigSshPublicKeySshClientCertPassPtrType)(v)
}

func (*connectionAuthConfigSshPublicKeySshClientCertPassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigSshPublicKeySshClientCertPass)(nil)).Elem()
}

func (i *connectionAuthConfigSshPublicKeySshClientCertPassPtrType) ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return i.ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigSshPublicKeySshClientCertPassPtrType) ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput)
}

type ConnectionAuthConfigSshPublicKeySshClientCertPassOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigSshPublicKeySshClientCertPassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigSshPublicKeySshClientCertPass)(nil)).Elem()
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPassOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPassOutput() ConnectionAuthConfigSshPublicKeySshClientCertPassOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPassOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPassOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPassOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPassOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return o.ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPassOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigSshPublicKeySshClientCertPass) *ConnectionAuthConfigSshPublicKeySshClientCertPass {
		return &v
	}).(ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
//
// <a name="nestedOauth2AuthCodeFlow"></a>The `oauth2AuthCodeFlow` block supports:
func (o ConnectionAuthConfigSshPublicKeySshClientCertPassOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigSshPublicKeySshClientCertPass) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigSshPublicKeySshClientCertPass)(nil)).Elem()
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput() ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput) ToConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput {
	return o
}

func (o ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput) Elem() ConnectionAuthConfigSshPublicKeySshClientCertPassOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigSshPublicKeySshClientCertPass) ConnectionAuthConfigSshPublicKeySshClientCertPass {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigSshPublicKeySshClientCertPass
		return ret
	}).(ConnectionAuthConfigSshPublicKeySshClientCertPassOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
//
// <a name="nestedOauth2AuthCodeFlow"></a>The `oauth2AuthCodeFlow` block supports:
func (o ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigSshPublicKeySshClientCertPass) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigUserPassword struct {
	// Password for Authentication.
	// Structure is documented below.
	Password *ConnectionAuthConfigUserPasswordPassword `pulumi:"password"`
	// Username for Authentication.
	Username string `pulumi:"username"`
}

// ConnectionAuthConfigUserPasswordInput is an input type that accepts ConnectionAuthConfigUserPasswordArgs and ConnectionAuthConfigUserPasswordOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigUserPasswordInput` via:
//
//	ConnectionAuthConfigUserPasswordArgs{...}
type ConnectionAuthConfigUserPasswordInput interface {
	pulumi.Input

	ToConnectionAuthConfigUserPasswordOutput() ConnectionAuthConfigUserPasswordOutput
	ToConnectionAuthConfigUserPasswordOutputWithContext(context.Context) ConnectionAuthConfigUserPasswordOutput
}

type ConnectionAuthConfigUserPasswordArgs struct {
	// Password for Authentication.
	// Structure is documented below.
	Password ConnectionAuthConfigUserPasswordPasswordPtrInput `pulumi:"password"`
	// Username for Authentication.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectionAuthConfigUserPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigUserPassword)(nil)).Elem()
}

func (i ConnectionAuthConfigUserPasswordArgs) ToConnectionAuthConfigUserPasswordOutput() ConnectionAuthConfigUserPasswordOutput {
	return i.ToConnectionAuthConfigUserPasswordOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigUserPasswordArgs) ToConnectionAuthConfigUserPasswordOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigUserPasswordOutput)
}

func (i ConnectionAuthConfigUserPasswordArgs) ToConnectionAuthConfigUserPasswordPtrOutput() ConnectionAuthConfigUserPasswordPtrOutput {
	return i.ToConnectionAuthConfigUserPasswordPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigUserPasswordArgs) ToConnectionAuthConfigUserPasswordPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigUserPasswordOutput).ToConnectionAuthConfigUserPasswordPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigUserPasswordPtrInput is an input type that accepts ConnectionAuthConfigUserPasswordArgs, ConnectionAuthConfigUserPasswordPtr and ConnectionAuthConfigUserPasswordPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigUserPasswordPtrInput` via:
//
//	        ConnectionAuthConfigUserPasswordArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigUserPasswordPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigUserPasswordPtrOutput() ConnectionAuthConfigUserPasswordPtrOutput
	ToConnectionAuthConfigUserPasswordPtrOutputWithContext(context.Context) ConnectionAuthConfigUserPasswordPtrOutput
}

type connectionAuthConfigUserPasswordPtrType ConnectionAuthConfigUserPasswordArgs

func ConnectionAuthConfigUserPasswordPtr(v *ConnectionAuthConfigUserPasswordArgs) ConnectionAuthConfigUserPasswordPtrInput {
	return (*connectionAuthConfigUserPasswordPtrType)(v)
}

func (*connectionAuthConfigUserPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigUserPassword)(nil)).Elem()
}

func (i *connectionAuthConfigUserPasswordPtrType) ToConnectionAuthConfigUserPasswordPtrOutput() ConnectionAuthConfigUserPasswordPtrOutput {
	return i.ToConnectionAuthConfigUserPasswordPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigUserPasswordPtrType) ToConnectionAuthConfigUserPasswordPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigUserPasswordPtrOutput)
}

type ConnectionAuthConfigUserPasswordOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigUserPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigUserPassword)(nil)).Elem()
}

func (o ConnectionAuthConfigUserPasswordOutput) ToConnectionAuthConfigUserPasswordOutput() ConnectionAuthConfigUserPasswordOutput {
	return o
}

func (o ConnectionAuthConfigUserPasswordOutput) ToConnectionAuthConfigUserPasswordOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordOutput {
	return o
}

func (o ConnectionAuthConfigUserPasswordOutput) ToConnectionAuthConfigUserPasswordPtrOutput() ConnectionAuthConfigUserPasswordPtrOutput {
	return o.ToConnectionAuthConfigUserPasswordPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigUserPasswordOutput) ToConnectionAuthConfigUserPasswordPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigUserPassword) *ConnectionAuthConfigUserPassword {
		return &v
	}).(ConnectionAuthConfigUserPasswordPtrOutput)
}

// Password for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigUserPasswordOutput) Password() ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return o.ApplyT(func(v ConnectionAuthConfigUserPassword) *ConnectionAuthConfigUserPasswordPassword { return v.Password }).(ConnectionAuthConfigUserPasswordPasswordPtrOutput)
}

// Username for Authentication.
func (o ConnectionAuthConfigUserPasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigUserPassword) string { return v.Username }).(pulumi.StringOutput)
}

type ConnectionAuthConfigUserPasswordPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigUserPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigUserPassword)(nil)).Elem()
}

func (o ConnectionAuthConfigUserPasswordPtrOutput) ToConnectionAuthConfigUserPasswordPtrOutput() ConnectionAuthConfigUserPasswordPtrOutput {
	return o
}

func (o ConnectionAuthConfigUserPasswordPtrOutput) ToConnectionAuthConfigUserPasswordPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPtrOutput {
	return o
}

func (o ConnectionAuthConfigUserPasswordPtrOutput) Elem() ConnectionAuthConfigUserPasswordOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigUserPassword) ConnectionAuthConfigUserPassword {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigUserPassword
		return ret
	}).(ConnectionAuthConfigUserPasswordOutput)
}

// Password for Authentication.
// Structure is documented below.
func (o ConnectionAuthConfigUserPasswordPtrOutput) Password() ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigUserPassword) *ConnectionAuthConfigUserPasswordPassword {
		if v == nil {
			return nil
		}
		return v.Password
	}).(ConnectionAuthConfigUserPasswordPasswordPtrOutput)
}

// Username for Authentication.
func (o ConnectionAuthConfigUserPasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigUserPassword) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthConfigUserPasswordPassword struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionAuthConfigUserPasswordPasswordInput is an input type that accepts ConnectionAuthConfigUserPasswordPasswordArgs and ConnectionAuthConfigUserPasswordPasswordOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigUserPasswordPasswordInput` via:
//
//	ConnectionAuthConfigUserPasswordPasswordArgs{...}
type ConnectionAuthConfigUserPasswordPasswordInput interface {
	pulumi.Input

	ToConnectionAuthConfigUserPasswordPasswordOutput() ConnectionAuthConfigUserPasswordPasswordOutput
	ToConnectionAuthConfigUserPasswordPasswordOutputWithContext(context.Context) ConnectionAuthConfigUserPasswordPasswordOutput
}

type ConnectionAuthConfigUserPasswordPasswordArgs struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionAuthConfigUserPasswordPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigUserPasswordPassword)(nil)).Elem()
}

func (i ConnectionAuthConfigUserPasswordPasswordArgs) ToConnectionAuthConfigUserPasswordPasswordOutput() ConnectionAuthConfigUserPasswordPasswordOutput {
	return i.ToConnectionAuthConfigUserPasswordPasswordOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigUserPasswordPasswordArgs) ToConnectionAuthConfigUserPasswordPasswordOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigUserPasswordPasswordOutput)
}

func (i ConnectionAuthConfigUserPasswordPasswordArgs) ToConnectionAuthConfigUserPasswordPasswordPtrOutput() ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return i.ToConnectionAuthConfigUserPasswordPasswordPtrOutputWithContext(context.Background())
}

func (i ConnectionAuthConfigUserPasswordPasswordArgs) ToConnectionAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigUserPasswordPasswordOutput).ToConnectionAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx)
}

// ConnectionAuthConfigUserPasswordPasswordPtrInput is an input type that accepts ConnectionAuthConfigUserPasswordPasswordArgs, ConnectionAuthConfigUserPasswordPasswordPtr and ConnectionAuthConfigUserPasswordPasswordPtrOutput values.
// You can construct a concrete instance of `ConnectionAuthConfigUserPasswordPasswordPtrInput` via:
//
//	        ConnectionAuthConfigUserPasswordPasswordArgs{...}
//
//	or:
//
//	        nil
type ConnectionAuthConfigUserPasswordPasswordPtrInput interface {
	pulumi.Input

	ToConnectionAuthConfigUserPasswordPasswordPtrOutput() ConnectionAuthConfigUserPasswordPasswordPtrOutput
	ToConnectionAuthConfigUserPasswordPasswordPtrOutputWithContext(context.Context) ConnectionAuthConfigUserPasswordPasswordPtrOutput
}

type connectionAuthConfigUserPasswordPasswordPtrType ConnectionAuthConfigUserPasswordPasswordArgs

func ConnectionAuthConfigUserPasswordPasswordPtr(v *ConnectionAuthConfigUserPasswordPasswordArgs) ConnectionAuthConfigUserPasswordPasswordPtrInput {
	return (*connectionAuthConfigUserPasswordPasswordPtrType)(v)
}

func (*connectionAuthConfigUserPasswordPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigUserPasswordPassword)(nil)).Elem()
}

func (i *connectionAuthConfigUserPasswordPasswordPtrType) ToConnectionAuthConfigUserPasswordPasswordPtrOutput() ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return i.ToConnectionAuthConfigUserPasswordPasswordPtrOutputWithContext(context.Background())
}

func (i *connectionAuthConfigUserPasswordPasswordPtrType) ToConnectionAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAuthConfigUserPasswordPasswordPtrOutput)
}

type ConnectionAuthConfigUserPasswordPasswordOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigUserPasswordPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthConfigUserPasswordPassword)(nil)).Elem()
}

func (o ConnectionAuthConfigUserPasswordPasswordOutput) ToConnectionAuthConfigUserPasswordPasswordOutput() ConnectionAuthConfigUserPasswordPasswordOutput {
	return o
}

func (o ConnectionAuthConfigUserPasswordPasswordOutput) ToConnectionAuthConfigUserPasswordPasswordOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPasswordOutput {
	return o
}

func (o ConnectionAuthConfigUserPasswordPasswordOutput) ToConnectionAuthConfigUserPasswordPasswordPtrOutput() ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return o.ToConnectionAuthConfigUserPasswordPasswordPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthConfigUserPasswordPasswordOutput) ToConnectionAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthConfigUserPasswordPassword) *ConnectionAuthConfigUserPasswordPassword {
		return &v
	}).(ConnectionAuthConfigUserPasswordPasswordPtrOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigUserPasswordPasswordOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAuthConfigUserPasswordPassword) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionAuthConfigUserPasswordPasswordPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthConfigUserPasswordPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthConfigUserPasswordPassword)(nil)).Elem()
}

func (o ConnectionAuthConfigUserPasswordPasswordPtrOutput) ToConnectionAuthConfigUserPasswordPasswordPtrOutput() ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return o
}

func (o ConnectionAuthConfigUserPasswordPasswordPtrOutput) ToConnectionAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx context.Context) ConnectionAuthConfigUserPasswordPasswordPtrOutput {
	return o
}

func (o ConnectionAuthConfigUserPasswordPasswordPtrOutput) Elem() ConnectionAuthConfigUserPasswordPasswordOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigUserPasswordPassword) ConnectionAuthConfigUserPasswordPassword {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthConfigUserPasswordPassword
		return ret
	}).(ConnectionAuthConfigUserPasswordPasswordOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionAuthConfigUserPasswordPasswordPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAuthConfigUserPasswordPassword) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionConfigVariable struct {
	// Boolean Value of configVariable
	BooleanValue *bool `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue *ConnectionConfigVariableEncryptionKeyValue `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable
	IntegerValue *int `pulumi:"integerValue"`
	// Key for the configVariable
	Key string `pulumi:"key"`
	// Secret value of configVariable.
	// Structure is documented below.
	SecretValue *ConnectionConfigVariableSecretValue `pulumi:"secretValue"`
	// String Value of configVariabley
	StringValue *string `pulumi:"stringValue"`
}

// ConnectionConfigVariableInput is an input type that accepts ConnectionConfigVariableArgs and ConnectionConfigVariableOutput values.
// You can construct a concrete instance of `ConnectionConfigVariableInput` via:
//
//	ConnectionConfigVariableArgs{...}
type ConnectionConfigVariableInput interface {
	pulumi.Input

	ToConnectionConfigVariableOutput() ConnectionConfigVariableOutput
	ToConnectionConfigVariableOutputWithContext(context.Context) ConnectionConfigVariableOutput
}

type ConnectionConfigVariableArgs struct {
	// Boolean Value of configVariable
	BooleanValue pulumi.BoolPtrInput `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue ConnectionConfigVariableEncryptionKeyValuePtrInput `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable
	IntegerValue pulumi.IntPtrInput `pulumi:"integerValue"`
	// Key for the configVariable
	Key pulumi.StringInput `pulumi:"key"`
	// Secret value of configVariable.
	// Structure is documented below.
	SecretValue ConnectionConfigVariableSecretValuePtrInput `pulumi:"secretValue"`
	// String Value of configVariabley
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (ConnectionConfigVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionConfigVariable)(nil)).Elem()
}

func (i ConnectionConfigVariableArgs) ToConnectionConfigVariableOutput() ConnectionConfigVariableOutput {
	return i.ToConnectionConfigVariableOutputWithContext(context.Background())
}

func (i ConnectionConfigVariableArgs) ToConnectionConfigVariableOutputWithContext(ctx context.Context) ConnectionConfigVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigVariableOutput)
}

// ConnectionConfigVariableArrayInput is an input type that accepts ConnectionConfigVariableArray and ConnectionConfigVariableArrayOutput values.
// You can construct a concrete instance of `ConnectionConfigVariableArrayInput` via:
//
//	ConnectionConfigVariableArray{ ConnectionConfigVariableArgs{...} }
type ConnectionConfigVariableArrayInput interface {
	pulumi.Input

	ToConnectionConfigVariableArrayOutput() ConnectionConfigVariableArrayOutput
	ToConnectionConfigVariableArrayOutputWithContext(context.Context) ConnectionConfigVariableArrayOutput
}

type ConnectionConfigVariableArray []ConnectionConfigVariableInput

func (ConnectionConfigVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionConfigVariable)(nil)).Elem()
}

func (i ConnectionConfigVariableArray) ToConnectionConfigVariableArrayOutput() ConnectionConfigVariableArrayOutput {
	return i.ToConnectionConfigVariableArrayOutputWithContext(context.Background())
}

func (i ConnectionConfigVariableArray) ToConnectionConfigVariableArrayOutputWithContext(ctx context.Context) ConnectionConfigVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigVariableArrayOutput)
}

type ConnectionConfigVariableOutput struct{ *pulumi.OutputState }

func (ConnectionConfigVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionConfigVariable)(nil)).Elem()
}

func (o ConnectionConfigVariableOutput) ToConnectionConfigVariableOutput() ConnectionConfigVariableOutput {
	return o
}

func (o ConnectionConfigVariableOutput) ToConnectionConfigVariableOutputWithContext(ctx context.Context) ConnectionConfigVariableOutput {
	return o
}

// Boolean Value of configVariable
func (o ConnectionConfigVariableOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionConfigVariable) *bool { return v.BooleanValue }).(pulumi.BoolPtrOutput)
}

// Encription key value of configVariable.
// Structure is documented below.
func (o ConnectionConfigVariableOutput) EncryptionKeyValue() ConnectionConfigVariableEncryptionKeyValuePtrOutput {
	return o.ApplyT(func(v ConnectionConfigVariable) *ConnectionConfigVariableEncryptionKeyValue {
		return v.EncryptionKeyValue
	}).(ConnectionConfigVariableEncryptionKeyValuePtrOutput)
}

// Integer Value of configVariable
func (o ConnectionConfigVariableOutput) IntegerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionConfigVariable) *int { return v.IntegerValue }).(pulumi.IntPtrOutput)
}

// Key for the configVariable
func (o ConnectionConfigVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionConfigVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Secret value of configVariable.
// Structure is documented below.
func (o ConnectionConfigVariableOutput) SecretValue() ConnectionConfigVariableSecretValuePtrOutput {
	return o.ApplyT(func(v ConnectionConfigVariable) *ConnectionConfigVariableSecretValue { return v.SecretValue }).(ConnectionConfigVariableSecretValuePtrOutput)
}

// String Value of configVariabley
func (o ConnectionConfigVariableOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionConfigVariable) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type ConnectionConfigVariableArrayOutput struct{ *pulumi.OutputState }

func (ConnectionConfigVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionConfigVariable)(nil)).Elem()
}

func (o ConnectionConfigVariableArrayOutput) ToConnectionConfigVariableArrayOutput() ConnectionConfigVariableArrayOutput {
	return o
}

func (o ConnectionConfigVariableArrayOutput) ToConnectionConfigVariableArrayOutputWithContext(ctx context.Context) ConnectionConfigVariableArrayOutput {
	return o
}

func (o ConnectionConfigVariableArrayOutput) Index(i pulumi.IntInput) ConnectionConfigVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionConfigVariable {
		return vs[0].([]ConnectionConfigVariable)[vs[1].(int)]
	}).(ConnectionConfigVariableOutput)
}

type ConnectionConfigVariableEncryptionKeyValue struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type string `pulumi:"type"`
}

// ConnectionConfigVariableEncryptionKeyValueInput is an input type that accepts ConnectionConfigVariableEncryptionKeyValueArgs and ConnectionConfigVariableEncryptionKeyValueOutput values.
// You can construct a concrete instance of `ConnectionConfigVariableEncryptionKeyValueInput` via:
//
//	ConnectionConfigVariableEncryptionKeyValueArgs{...}
type ConnectionConfigVariableEncryptionKeyValueInput interface {
	pulumi.Input

	ToConnectionConfigVariableEncryptionKeyValueOutput() ConnectionConfigVariableEncryptionKeyValueOutput
	ToConnectionConfigVariableEncryptionKeyValueOutputWithContext(context.Context) ConnectionConfigVariableEncryptionKeyValueOutput
}

type ConnectionConfigVariableEncryptionKeyValueArgs struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnectionConfigVariableEncryptionKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionConfigVariableEncryptionKeyValue)(nil)).Elem()
}

func (i ConnectionConfigVariableEncryptionKeyValueArgs) ToConnectionConfigVariableEncryptionKeyValueOutput() ConnectionConfigVariableEncryptionKeyValueOutput {
	return i.ToConnectionConfigVariableEncryptionKeyValueOutputWithContext(context.Background())
}

func (i ConnectionConfigVariableEncryptionKeyValueArgs) ToConnectionConfigVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionConfigVariableEncryptionKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigVariableEncryptionKeyValueOutput)
}

func (i ConnectionConfigVariableEncryptionKeyValueArgs) ToConnectionConfigVariableEncryptionKeyValuePtrOutput() ConnectionConfigVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionConfigVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i ConnectionConfigVariableEncryptionKeyValueArgs) ToConnectionConfigVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionConfigVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigVariableEncryptionKeyValueOutput).ToConnectionConfigVariableEncryptionKeyValuePtrOutputWithContext(ctx)
}

// ConnectionConfigVariableEncryptionKeyValuePtrInput is an input type that accepts ConnectionConfigVariableEncryptionKeyValueArgs, ConnectionConfigVariableEncryptionKeyValuePtr and ConnectionConfigVariableEncryptionKeyValuePtrOutput values.
// You can construct a concrete instance of `ConnectionConfigVariableEncryptionKeyValuePtrInput` via:
//
//	        ConnectionConfigVariableEncryptionKeyValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionConfigVariableEncryptionKeyValuePtrInput interface {
	pulumi.Input

	ToConnectionConfigVariableEncryptionKeyValuePtrOutput() ConnectionConfigVariableEncryptionKeyValuePtrOutput
	ToConnectionConfigVariableEncryptionKeyValuePtrOutputWithContext(context.Context) ConnectionConfigVariableEncryptionKeyValuePtrOutput
}

type connectionConfigVariableEncryptionKeyValuePtrType ConnectionConfigVariableEncryptionKeyValueArgs

func ConnectionConfigVariableEncryptionKeyValuePtr(v *ConnectionConfigVariableEncryptionKeyValueArgs) ConnectionConfigVariableEncryptionKeyValuePtrInput {
	return (*connectionConfigVariableEncryptionKeyValuePtrType)(v)
}

func (*connectionConfigVariableEncryptionKeyValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionConfigVariableEncryptionKeyValue)(nil)).Elem()
}

func (i *connectionConfigVariableEncryptionKeyValuePtrType) ToConnectionConfigVariableEncryptionKeyValuePtrOutput() ConnectionConfigVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionConfigVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i *connectionConfigVariableEncryptionKeyValuePtrType) ToConnectionConfigVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionConfigVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigVariableEncryptionKeyValuePtrOutput)
}

type ConnectionConfigVariableEncryptionKeyValueOutput struct{ *pulumi.OutputState }

func (ConnectionConfigVariableEncryptionKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionConfigVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionConfigVariableEncryptionKeyValueOutput) ToConnectionConfigVariableEncryptionKeyValueOutput() ConnectionConfigVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionConfigVariableEncryptionKeyValueOutput) ToConnectionConfigVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionConfigVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionConfigVariableEncryptionKeyValueOutput) ToConnectionConfigVariableEncryptionKeyValuePtrOutput() ConnectionConfigVariableEncryptionKeyValuePtrOutput {
	return o.ToConnectionConfigVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (o ConnectionConfigVariableEncryptionKeyValueOutput) ToConnectionConfigVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionConfigVariableEncryptionKeyValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionConfigVariableEncryptionKeyValue) *ConnectionConfigVariableEncryptionKeyValue {
		return &v
	}).(ConnectionConfigVariableEncryptionKeyValuePtrOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionConfigVariableEncryptionKeyValueOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionConfigVariableEncryptionKeyValue) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionConfigVariableEncryptionKeyValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionConfigVariableEncryptionKeyValue) string { return v.Type }).(pulumi.StringOutput)
}

type ConnectionConfigVariableEncryptionKeyValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionConfigVariableEncryptionKeyValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionConfigVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionConfigVariableEncryptionKeyValuePtrOutput) ToConnectionConfigVariableEncryptionKeyValuePtrOutput() ConnectionConfigVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionConfigVariableEncryptionKeyValuePtrOutput) ToConnectionConfigVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionConfigVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionConfigVariableEncryptionKeyValuePtrOutput) Elem() ConnectionConfigVariableEncryptionKeyValueOutput {
	return o.ApplyT(func(v *ConnectionConfigVariableEncryptionKeyValue) ConnectionConfigVariableEncryptionKeyValue {
		if v != nil {
			return *v
		}
		var ret ConnectionConfigVariableEncryptionKeyValue
		return ret
	}).(ConnectionConfigVariableEncryptionKeyValueOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionConfigVariableEncryptionKeyValuePtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionConfigVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionConfigVariableEncryptionKeyValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionConfigVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectionConfigVariableSecretValue struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionConfigVariableSecretValueInput is an input type that accepts ConnectionConfigVariableSecretValueArgs and ConnectionConfigVariableSecretValueOutput values.
// You can construct a concrete instance of `ConnectionConfigVariableSecretValueInput` via:
//
//	ConnectionConfigVariableSecretValueArgs{...}
type ConnectionConfigVariableSecretValueInput interface {
	pulumi.Input

	ToConnectionConfigVariableSecretValueOutput() ConnectionConfigVariableSecretValueOutput
	ToConnectionConfigVariableSecretValueOutputWithContext(context.Context) ConnectionConfigVariableSecretValueOutput
}

type ConnectionConfigVariableSecretValueArgs struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionConfigVariableSecretValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionConfigVariableSecretValue)(nil)).Elem()
}

func (i ConnectionConfigVariableSecretValueArgs) ToConnectionConfigVariableSecretValueOutput() ConnectionConfigVariableSecretValueOutput {
	return i.ToConnectionConfigVariableSecretValueOutputWithContext(context.Background())
}

func (i ConnectionConfigVariableSecretValueArgs) ToConnectionConfigVariableSecretValueOutputWithContext(ctx context.Context) ConnectionConfigVariableSecretValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigVariableSecretValueOutput)
}

func (i ConnectionConfigVariableSecretValueArgs) ToConnectionConfigVariableSecretValuePtrOutput() ConnectionConfigVariableSecretValuePtrOutput {
	return i.ToConnectionConfigVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i ConnectionConfigVariableSecretValueArgs) ToConnectionConfigVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionConfigVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigVariableSecretValueOutput).ToConnectionConfigVariableSecretValuePtrOutputWithContext(ctx)
}

// ConnectionConfigVariableSecretValuePtrInput is an input type that accepts ConnectionConfigVariableSecretValueArgs, ConnectionConfigVariableSecretValuePtr and ConnectionConfigVariableSecretValuePtrOutput values.
// You can construct a concrete instance of `ConnectionConfigVariableSecretValuePtrInput` via:
//
//	        ConnectionConfigVariableSecretValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionConfigVariableSecretValuePtrInput interface {
	pulumi.Input

	ToConnectionConfigVariableSecretValuePtrOutput() ConnectionConfigVariableSecretValuePtrOutput
	ToConnectionConfigVariableSecretValuePtrOutputWithContext(context.Context) ConnectionConfigVariableSecretValuePtrOutput
}

type connectionConfigVariableSecretValuePtrType ConnectionConfigVariableSecretValueArgs

func ConnectionConfigVariableSecretValuePtr(v *ConnectionConfigVariableSecretValueArgs) ConnectionConfigVariableSecretValuePtrInput {
	return (*connectionConfigVariableSecretValuePtrType)(v)
}

func (*connectionConfigVariableSecretValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionConfigVariableSecretValue)(nil)).Elem()
}

func (i *connectionConfigVariableSecretValuePtrType) ToConnectionConfigVariableSecretValuePtrOutput() ConnectionConfigVariableSecretValuePtrOutput {
	return i.ToConnectionConfigVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i *connectionConfigVariableSecretValuePtrType) ToConnectionConfigVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionConfigVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConfigVariableSecretValuePtrOutput)
}

type ConnectionConfigVariableSecretValueOutput struct{ *pulumi.OutputState }

func (ConnectionConfigVariableSecretValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionConfigVariableSecretValue)(nil)).Elem()
}

func (o ConnectionConfigVariableSecretValueOutput) ToConnectionConfigVariableSecretValueOutput() ConnectionConfigVariableSecretValueOutput {
	return o
}

func (o ConnectionConfigVariableSecretValueOutput) ToConnectionConfigVariableSecretValueOutputWithContext(ctx context.Context) ConnectionConfigVariableSecretValueOutput {
	return o
}

func (o ConnectionConfigVariableSecretValueOutput) ToConnectionConfigVariableSecretValuePtrOutput() ConnectionConfigVariableSecretValuePtrOutput {
	return o.ToConnectionConfigVariableSecretValuePtrOutputWithContext(context.Background())
}

func (o ConnectionConfigVariableSecretValueOutput) ToConnectionConfigVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionConfigVariableSecretValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionConfigVariableSecretValue) *ConnectionConfigVariableSecretValue {
		return &v
	}).(ConnectionConfigVariableSecretValuePtrOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionConfigVariableSecretValueOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionConfigVariableSecretValue) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionConfigVariableSecretValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionConfigVariableSecretValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionConfigVariableSecretValue)(nil)).Elem()
}

func (o ConnectionConfigVariableSecretValuePtrOutput) ToConnectionConfigVariableSecretValuePtrOutput() ConnectionConfigVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionConfigVariableSecretValuePtrOutput) ToConnectionConfigVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionConfigVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionConfigVariableSecretValuePtrOutput) Elem() ConnectionConfigVariableSecretValueOutput {
	return o.ApplyT(func(v *ConnectionConfigVariableSecretValue) ConnectionConfigVariableSecretValue {
		if v != nil {
			return *v
		}
		var ret ConnectionConfigVariableSecretValue
		return ret
	}).(ConnectionConfigVariableSecretValueOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionConfigVariableSecretValuePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionConfigVariableSecretValue) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionConnectorVersionInfraConfig struct {
	// (Output)
	// Max QPS supported by the connector version before throttling of requests.
	RatelimitThreshold *string `pulumi:"ratelimitThreshold"`
}

// ConnectionConnectorVersionInfraConfigInput is an input type that accepts ConnectionConnectorVersionInfraConfigArgs and ConnectionConnectorVersionInfraConfigOutput values.
// You can construct a concrete instance of `ConnectionConnectorVersionInfraConfigInput` via:
//
//	ConnectionConnectorVersionInfraConfigArgs{...}
type ConnectionConnectorVersionInfraConfigInput interface {
	pulumi.Input

	ToConnectionConnectorVersionInfraConfigOutput() ConnectionConnectorVersionInfraConfigOutput
	ToConnectionConnectorVersionInfraConfigOutputWithContext(context.Context) ConnectionConnectorVersionInfraConfigOutput
}

type ConnectionConnectorVersionInfraConfigArgs struct {
	// (Output)
	// Max QPS supported by the connector version before throttling of requests.
	RatelimitThreshold pulumi.StringPtrInput `pulumi:"ratelimitThreshold"`
}

func (ConnectionConnectorVersionInfraConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionConnectorVersionInfraConfig)(nil)).Elem()
}

func (i ConnectionConnectorVersionInfraConfigArgs) ToConnectionConnectorVersionInfraConfigOutput() ConnectionConnectorVersionInfraConfigOutput {
	return i.ToConnectionConnectorVersionInfraConfigOutputWithContext(context.Background())
}

func (i ConnectionConnectorVersionInfraConfigArgs) ToConnectionConnectorVersionInfraConfigOutputWithContext(ctx context.Context) ConnectionConnectorVersionInfraConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConnectorVersionInfraConfigOutput)
}

// ConnectionConnectorVersionInfraConfigArrayInput is an input type that accepts ConnectionConnectorVersionInfraConfigArray and ConnectionConnectorVersionInfraConfigArrayOutput values.
// You can construct a concrete instance of `ConnectionConnectorVersionInfraConfigArrayInput` via:
//
//	ConnectionConnectorVersionInfraConfigArray{ ConnectionConnectorVersionInfraConfigArgs{...} }
type ConnectionConnectorVersionInfraConfigArrayInput interface {
	pulumi.Input

	ToConnectionConnectorVersionInfraConfigArrayOutput() ConnectionConnectorVersionInfraConfigArrayOutput
	ToConnectionConnectorVersionInfraConfigArrayOutputWithContext(context.Context) ConnectionConnectorVersionInfraConfigArrayOutput
}

type ConnectionConnectorVersionInfraConfigArray []ConnectionConnectorVersionInfraConfigInput

func (ConnectionConnectorVersionInfraConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionConnectorVersionInfraConfig)(nil)).Elem()
}

func (i ConnectionConnectorVersionInfraConfigArray) ToConnectionConnectorVersionInfraConfigArrayOutput() ConnectionConnectorVersionInfraConfigArrayOutput {
	return i.ToConnectionConnectorVersionInfraConfigArrayOutputWithContext(context.Background())
}

func (i ConnectionConnectorVersionInfraConfigArray) ToConnectionConnectorVersionInfraConfigArrayOutputWithContext(ctx context.Context) ConnectionConnectorVersionInfraConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionConnectorVersionInfraConfigArrayOutput)
}

type ConnectionConnectorVersionInfraConfigOutput struct{ *pulumi.OutputState }

func (ConnectionConnectorVersionInfraConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionConnectorVersionInfraConfig)(nil)).Elem()
}

func (o ConnectionConnectorVersionInfraConfigOutput) ToConnectionConnectorVersionInfraConfigOutput() ConnectionConnectorVersionInfraConfigOutput {
	return o
}

func (o ConnectionConnectorVersionInfraConfigOutput) ToConnectionConnectorVersionInfraConfigOutputWithContext(ctx context.Context) ConnectionConnectorVersionInfraConfigOutput {
	return o
}

// (Output)
// Max QPS supported by the connector version before throttling of requests.
func (o ConnectionConnectorVersionInfraConfigOutput) RatelimitThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionConnectorVersionInfraConfig) *string { return v.RatelimitThreshold }).(pulumi.StringPtrOutput)
}

type ConnectionConnectorVersionInfraConfigArrayOutput struct{ *pulumi.OutputState }

func (ConnectionConnectorVersionInfraConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionConnectorVersionInfraConfig)(nil)).Elem()
}

func (o ConnectionConnectorVersionInfraConfigArrayOutput) ToConnectionConnectorVersionInfraConfigArrayOutput() ConnectionConnectorVersionInfraConfigArrayOutput {
	return o
}

func (o ConnectionConnectorVersionInfraConfigArrayOutput) ToConnectionConnectorVersionInfraConfigArrayOutputWithContext(ctx context.Context) ConnectionConnectorVersionInfraConfigArrayOutput {
	return o
}

func (o ConnectionConnectorVersionInfraConfigArrayOutput) Index(i pulumi.IntInput) ConnectionConnectorVersionInfraConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionConnectorVersionInfraConfig {
		return vs[0].([]ConnectionConnectorVersionInfraConfig)[vs[1].(int)]
	}).(ConnectionConnectorVersionInfraConfigOutput)
}

type ConnectionDestinationConfig struct {
	// The destinations for the key.
	// Structure is documented below.
	Destinations []ConnectionDestinationConfigDestination `pulumi:"destinations"`
	// The key is the destination identifier that is supported by the Connector.
	Key string `pulumi:"key"`
}

// ConnectionDestinationConfigInput is an input type that accepts ConnectionDestinationConfigArgs and ConnectionDestinationConfigOutput values.
// You can construct a concrete instance of `ConnectionDestinationConfigInput` via:
//
//	ConnectionDestinationConfigArgs{...}
type ConnectionDestinationConfigInput interface {
	pulumi.Input

	ToConnectionDestinationConfigOutput() ConnectionDestinationConfigOutput
	ToConnectionDestinationConfigOutputWithContext(context.Context) ConnectionDestinationConfigOutput
}

type ConnectionDestinationConfigArgs struct {
	// The destinations for the key.
	// Structure is documented below.
	Destinations ConnectionDestinationConfigDestinationArrayInput `pulumi:"destinations"`
	// The key is the destination identifier that is supported by the Connector.
	Key pulumi.StringInput `pulumi:"key"`
}

func (ConnectionDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionDestinationConfig)(nil)).Elem()
}

func (i ConnectionDestinationConfigArgs) ToConnectionDestinationConfigOutput() ConnectionDestinationConfigOutput {
	return i.ToConnectionDestinationConfigOutputWithContext(context.Background())
}

func (i ConnectionDestinationConfigArgs) ToConnectionDestinationConfigOutputWithContext(ctx context.Context) ConnectionDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionDestinationConfigOutput)
}

// ConnectionDestinationConfigArrayInput is an input type that accepts ConnectionDestinationConfigArray and ConnectionDestinationConfigArrayOutput values.
// You can construct a concrete instance of `ConnectionDestinationConfigArrayInput` via:
//
//	ConnectionDestinationConfigArray{ ConnectionDestinationConfigArgs{...} }
type ConnectionDestinationConfigArrayInput interface {
	pulumi.Input

	ToConnectionDestinationConfigArrayOutput() ConnectionDestinationConfigArrayOutput
	ToConnectionDestinationConfigArrayOutputWithContext(context.Context) ConnectionDestinationConfigArrayOutput
}

type ConnectionDestinationConfigArray []ConnectionDestinationConfigInput

func (ConnectionDestinationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionDestinationConfig)(nil)).Elem()
}

func (i ConnectionDestinationConfigArray) ToConnectionDestinationConfigArrayOutput() ConnectionDestinationConfigArrayOutput {
	return i.ToConnectionDestinationConfigArrayOutputWithContext(context.Background())
}

func (i ConnectionDestinationConfigArray) ToConnectionDestinationConfigArrayOutputWithContext(ctx context.Context) ConnectionDestinationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionDestinationConfigArrayOutput)
}

type ConnectionDestinationConfigOutput struct{ *pulumi.OutputState }

func (ConnectionDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionDestinationConfig)(nil)).Elem()
}

func (o ConnectionDestinationConfigOutput) ToConnectionDestinationConfigOutput() ConnectionDestinationConfigOutput {
	return o
}

func (o ConnectionDestinationConfigOutput) ToConnectionDestinationConfigOutputWithContext(ctx context.Context) ConnectionDestinationConfigOutput {
	return o
}

// The destinations for the key.
// Structure is documented below.
func (o ConnectionDestinationConfigOutput) Destinations() ConnectionDestinationConfigDestinationArrayOutput {
	return o.ApplyT(func(v ConnectionDestinationConfig) []ConnectionDestinationConfigDestination { return v.Destinations }).(ConnectionDestinationConfigDestinationArrayOutput)
}

// The key is the destination identifier that is supported by the Connector.
func (o ConnectionDestinationConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionDestinationConfig) string { return v.Key }).(pulumi.StringOutput)
}

type ConnectionDestinationConfigArrayOutput struct{ *pulumi.OutputState }

func (ConnectionDestinationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionDestinationConfig)(nil)).Elem()
}

func (o ConnectionDestinationConfigArrayOutput) ToConnectionDestinationConfigArrayOutput() ConnectionDestinationConfigArrayOutput {
	return o
}

func (o ConnectionDestinationConfigArrayOutput) ToConnectionDestinationConfigArrayOutputWithContext(ctx context.Context) ConnectionDestinationConfigArrayOutput {
	return o
}

func (o ConnectionDestinationConfigArrayOutput) Index(i pulumi.IntInput) ConnectionDestinationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionDestinationConfig {
		return vs[0].([]ConnectionDestinationConfig)[vs[1].(int)]
	}).(ConnectionDestinationConfigOutput)
}

type ConnectionDestinationConfigDestination struct {
	// Host
	Host *string `pulumi:"host"`
	// port number
	Port *int `pulumi:"port"`
	// Service Attachment
	ServiceAttachment *string `pulumi:"serviceAttachment"`
}

// ConnectionDestinationConfigDestinationInput is an input type that accepts ConnectionDestinationConfigDestinationArgs and ConnectionDestinationConfigDestinationOutput values.
// You can construct a concrete instance of `ConnectionDestinationConfigDestinationInput` via:
//
//	ConnectionDestinationConfigDestinationArgs{...}
type ConnectionDestinationConfigDestinationInput interface {
	pulumi.Input

	ToConnectionDestinationConfigDestinationOutput() ConnectionDestinationConfigDestinationOutput
	ToConnectionDestinationConfigDestinationOutputWithContext(context.Context) ConnectionDestinationConfigDestinationOutput
}

type ConnectionDestinationConfigDestinationArgs struct {
	// Host
	Host pulumi.StringPtrInput `pulumi:"host"`
	// port number
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Service Attachment
	ServiceAttachment pulumi.StringPtrInput `pulumi:"serviceAttachment"`
}

func (ConnectionDestinationConfigDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionDestinationConfigDestination)(nil)).Elem()
}

func (i ConnectionDestinationConfigDestinationArgs) ToConnectionDestinationConfigDestinationOutput() ConnectionDestinationConfigDestinationOutput {
	return i.ToConnectionDestinationConfigDestinationOutputWithContext(context.Background())
}

func (i ConnectionDestinationConfigDestinationArgs) ToConnectionDestinationConfigDestinationOutputWithContext(ctx context.Context) ConnectionDestinationConfigDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionDestinationConfigDestinationOutput)
}

// ConnectionDestinationConfigDestinationArrayInput is an input type that accepts ConnectionDestinationConfigDestinationArray and ConnectionDestinationConfigDestinationArrayOutput values.
// You can construct a concrete instance of `ConnectionDestinationConfigDestinationArrayInput` via:
//
//	ConnectionDestinationConfigDestinationArray{ ConnectionDestinationConfigDestinationArgs{...} }
type ConnectionDestinationConfigDestinationArrayInput interface {
	pulumi.Input

	ToConnectionDestinationConfigDestinationArrayOutput() ConnectionDestinationConfigDestinationArrayOutput
	ToConnectionDestinationConfigDestinationArrayOutputWithContext(context.Context) ConnectionDestinationConfigDestinationArrayOutput
}

type ConnectionDestinationConfigDestinationArray []ConnectionDestinationConfigDestinationInput

func (ConnectionDestinationConfigDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionDestinationConfigDestination)(nil)).Elem()
}

func (i ConnectionDestinationConfigDestinationArray) ToConnectionDestinationConfigDestinationArrayOutput() ConnectionDestinationConfigDestinationArrayOutput {
	return i.ToConnectionDestinationConfigDestinationArrayOutputWithContext(context.Background())
}

func (i ConnectionDestinationConfigDestinationArray) ToConnectionDestinationConfigDestinationArrayOutputWithContext(ctx context.Context) ConnectionDestinationConfigDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionDestinationConfigDestinationArrayOutput)
}

type ConnectionDestinationConfigDestinationOutput struct{ *pulumi.OutputState }

func (ConnectionDestinationConfigDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionDestinationConfigDestination)(nil)).Elem()
}

func (o ConnectionDestinationConfigDestinationOutput) ToConnectionDestinationConfigDestinationOutput() ConnectionDestinationConfigDestinationOutput {
	return o
}

func (o ConnectionDestinationConfigDestinationOutput) ToConnectionDestinationConfigDestinationOutputWithContext(ctx context.Context) ConnectionDestinationConfigDestinationOutput {
	return o
}

// Host
func (o ConnectionDestinationConfigDestinationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionDestinationConfigDestination) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// port number
func (o ConnectionDestinationConfigDestinationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionDestinationConfigDestination) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Service Attachment
func (o ConnectionDestinationConfigDestinationOutput) ServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionDestinationConfigDestination) *string { return v.ServiceAttachment }).(pulumi.StringPtrOutput)
}

type ConnectionDestinationConfigDestinationArrayOutput struct{ *pulumi.OutputState }

func (ConnectionDestinationConfigDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionDestinationConfigDestination)(nil)).Elem()
}

func (o ConnectionDestinationConfigDestinationArrayOutput) ToConnectionDestinationConfigDestinationArrayOutput() ConnectionDestinationConfigDestinationArrayOutput {
	return o
}

func (o ConnectionDestinationConfigDestinationArrayOutput) ToConnectionDestinationConfigDestinationArrayOutputWithContext(ctx context.Context) ConnectionDestinationConfigDestinationArrayOutput {
	return o
}

func (o ConnectionDestinationConfigDestinationArrayOutput) Index(i pulumi.IntInput) ConnectionDestinationConfigDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionDestinationConfigDestination {
		return vs[0].([]ConnectionDestinationConfigDestination)[vs[1].(int)]
	}).(ConnectionDestinationConfigDestinationOutput)
}

type ConnectionEventingConfig struct {
	// List containing additional auth configs.
	// Structure is documented below.
	AdditionalVariables []ConnectionEventingConfigAdditionalVariable `pulumi:"additionalVariables"`
	// authConfig for Eventing Configuration.
	// Structure is documented below.
	AuthConfig *ConnectionEventingConfigAuthConfig `pulumi:"authConfig"`
	// Enrichment Enabled.
	EnrichmentEnabled *bool `pulumi:"enrichmentEnabled"`
	// registrationDestinationConfig
	// Structure is documented below.
	RegistrationDestinationConfig ConnectionEventingConfigRegistrationDestinationConfig `pulumi:"registrationDestinationConfig"`
}

// ConnectionEventingConfigInput is an input type that accepts ConnectionEventingConfigArgs and ConnectionEventingConfigOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigInput` via:
//
//	ConnectionEventingConfigArgs{...}
type ConnectionEventingConfigInput interface {
	pulumi.Input

	ToConnectionEventingConfigOutput() ConnectionEventingConfigOutput
	ToConnectionEventingConfigOutputWithContext(context.Context) ConnectionEventingConfigOutput
}

type ConnectionEventingConfigArgs struct {
	// List containing additional auth configs.
	// Structure is documented below.
	AdditionalVariables ConnectionEventingConfigAdditionalVariableArrayInput `pulumi:"additionalVariables"`
	// authConfig for Eventing Configuration.
	// Structure is documented below.
	AuthConfig ConnectionEventingConfigAuthConfigPtrInput `pulumi:"authConfig"`
	// Enrichment Enabled.
	EnrichmentEnabled pulumi.BoolPtrInput `pulumi:"enrichmentEnabled"`
	// registrationDestinationConfig
	// Structure is documented below.
	RegistrationDestinationConfig ConnectionEventingConfigRegistrationDestinationConfigInput `pulumi:"registrationDestinationConfig"`
}

func (ConnectionEventingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfig)(nil)).Elem()
}

func (i ConnectionEventingConfigArgs) ToConnectionEventingConfigOutput() ConnectionEventingConfigOutput {
	return i.ToConnectionEventingConfigOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigArgs) ToConnectionEventingConfigOutputWithContext(ctx context.Context) ConnectionEventingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigOutput)
}

func (i ConnectionEventingConfigArgs) ToConnectionEventingConfigPtrOutput() ConnectionEventingConfigPtrOutput {
	return i.ToConnectionEventingConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigArgs) ToConnectionEventingConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigOutput).ToConnectionEventingConfigPtrOutputWithContext(ctx)
}

// ConnectionEventingConfigPtrInput is an input type that accepts ConnectionEventingConfigArgs, ConnectionEventingConfigPtr and ConnectionEventingConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigPtrInput` via:
//
//	        ConnectionEventingConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionEventingConfigPtrInput interface {
	pulumi.Input

	ToConnectionEventingConfigPtrOutput() ConnectionEventingConfigPtrOutput
	ToConnectionEventingConfigPtrOutputWithContext(context.Context) ConnectionEventingConfigPtrOutput
}

type connectionEventingConfigPtrType ConnectionEventingConfigArgs

func ConnectionEventingConfigPtr(v *ConnectionEventingConfigArgs) ConnectionEventingConfigPtrInput {
	return (*connectionEventingConfigPtrType)(v)
}

func (*connectionEventingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfig)(nil)).Elem()
}

func (i *connectionEventingConfigPtrType) ToConnectionEventingConfigPtrOutput() ConnectionEventingConfigPtrOutput {
	return i.ToConnectionEventingConfigPtrOutputWithContext(context.Background())
}

func (i *connectionEventingConfigPtrType) ToConnectionEventingConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigPtrOutput)
}

type ConnectionEventingConfigOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfig)(nil)).Elem()
}

func (o ConnectionEventingConfigOutput) ToConnectionEventingConfigOutput() ConnectionEventingConfigOutput {
	return o
}

func (o ConnectionEventingConfigOutput) ToConnectionEventingConfigOutputWithContext(ctx context.Context) ConnectionEventingConfigOutput {
	return o
}

func (o ConnectionEventingConfigOutput) ToConnectionEventingConfigPtrOutput() ConnectionEventingConfigPtrOutput {
	return o.ToConnectionEventingConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionEventingConfigOutput) ToConnectionEventingConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingConfig) *ConnectionEventingConfig {
		return &v
	}).(ConnectionEventingConfigPtrOutput)
}

// List containing additional auth configs.
// Structure is documented below.
func (o ConnectionEventingConfigOutput) AdditionalVariables() ConnectionEventingConfigAdditionalVariableArrayOutput {
	return o.ApplyT(func(v ConnectionEventingConfig) []ConnectionEventingConfigAdditionalVariable {
		return v.AdditionalVariables
	}).(ConnectionEventingConfigAdditionalVariableArrayOutput)
}

// authConfig for Eventing Configuration.
// Structure is documented below.
func (o ConnectionEventingConfigOutput) AuthConfig() ConnectionEventingConfigAuthConfigPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfig) *ConnectionEventingConfigAuthConfig { return v.AuthConfig }).(ConnectionEventingConfigAuthConfigPtrOutput)
}

// Enrichment Enabled.
func (o ConnectionEventingConfigOutput) EnrichmentEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfig) *bool { return v.EnrichmentEnabled }).(pulumi.BoolPtrOutput)
}

// registrationDestinationConfig
// Structure is documented below.
func (o ConnectionEventingConfigOutput) RegistrationDestinationConfig() ConnectionEventingConfigRegistrationDestinationConfigOutput {
	return o.ApplyT(func(v ConnectionEventingConfig) ConnectionEventingConfigRegistrationDestinationConfig {
		return v.RegistrationDestinationConfig
	}).(ConnectionEventingConfigRegistrationDestinationConfigOutput)
}

type ConnectionEventingConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfig)(nil)).Elem()
}

func (o ConnectionEventingConfigPtrOutput) ToConnectionEventingConfigPtrOutput() ConnectionEventingConfigPtrOutput {
	return o
}

func (o ConnectionEventingConfigPtrOutput) ToConnectionEventingConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigPtrOutput {
	return o
}

func (o ConnectionEventingConfigPtrOutput) Elem() ConnectionEventingConfigOutput {
	return o.ApplyT(func(v *ConnectionEventingConfig) ConnectionEventingConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingConfig
		return ret
	}).(ConnectionEventingConfigOutput)
}

// List containing additional auth configs.
// Structure is documented below.
func (o ConnectionEventingConfigPtrOutput) AdditionalVariables() ConnectionEventingConfigAdditionalVariableArrayOutput {
	return o.ApplyT(func(v *ConnectionEventingConfig) []ConnectionEventingConfigAdditionalVariable {
		if v == nil {
			return nil
		}
		return v.AdditionalVariables
	}).(ConnectionEventingConfigAdditionalVariableArrayOutput)
}

// authConfig for Eventing Configuration.
// Structure is documented below.
func (o ConnectionEventingConfigPtrOutput) AuthConfig() ConnectionEventingConfigAuthConfigPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfig) *ConnectionEventingConfigAuthConfig {
		if v == nil {
			return nil
		}
		return v.AuthConfig
	}).(ConnectionEventingConfigAuthConfigPtrOutput)
}

// Enrichment Enabled.
func (o ConnectionEventingConfigPtrOutput) EnrichmentEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnrichmentEnabled
	}).(pulumi.BoolPtrOutput)
}

// registrationDestinationConfig
// Structure is documented below.
func (o ConnectionEventingConfigPtrOutput) RegistrationDestinationConfig() ConnectionEventingConfigRegistrationDestinationConfigPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfig) *ConnectionEventingConfigRegistrationDestinationConfig {
		if v == nil {
			return nil
		}
		return &v.RegistrationDestinationConfig
	}).(ConnectionEventingConfigRegistrationDestinationConfigPtrOutput)
}

type ConnectionEventingConfigAdditionalVariable struct {
	// Boolean Value of configVariable.
	BooleanValue *bool `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue *ConnectionEventingConfigAdditionalVariableEncryptionKeyValue `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable.
	IntegerValue *int `pulumi:"integerValue"`
	// Key for the configVariable
	Key string `pulumi:"key"`
	// Secret value of configVariable
	// Structure is documented below.
	SecretValue *ConnectionEventingConfigAdditionalVariableSecretValue `pulumi:"secretValue"`
	// String Value of configVariabley.
	StringValue *string `pulumi:"stringValue"`
}

// ConnectionEventingConfigAdditionalVariableInput is an input type that accepts ConnectionEventingConfigAdditionalVariableArgs and ConnectionEventingConfigAdditionalVariableOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAdditionalVariableInput` via:
//
//	ConnectionEventingConfigAdditionalVariableArgs{...}
type ConnectionEventingConfigAdditionalVariableInput interface {
	pulumi.Input

	ToConnectionEventingConfigAdditionalVariableOutput() ConnectionEventingConfigAdditionalVariableOutput
	ToConnectionEventingConfigAdditionalVariableOutputWithContext(context.Context) ConnectionEventingConfigAdditionalVariableOutput
}

type ConnectionEventingConfigAdditionalVariableArgs struct {
	// Boolean Value of configVariable.
	BooleanValue pulumi.BoolPtrInput `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrInput `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable.
	IntegerValue pulumi.IntPtrInput `pulumi:"integerValue"`
	// Key for the configVariable
	Key pulumi.StringInput `pulumi:"key"`
	// Secret value of configVariable
	// Structure is documented below.
	SecretValue ConnectionEventingConfigAdditionalVariableSecretValuePtrInput `pulumi:"secretValue"`
	// String Value of configVariabley.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (ConnectionEventingConfigAdditionalVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAdditionalVariable)(nil)).Elem()
}

func (i ConnectionEventingConfigAdditionalVariableArgs) ToConnectionEventingConfigAdditionalVariableOutput() ConnectionEventingConfigAdditionalVariableOutput {
	return i.ToConnectionEventingConfigAdditionalVariableOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAdditionalVariableArgs) ToConnectionEventingConfigAdditionalVariableOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAdditionalVariableOutput)
}

// ConnectionEventingConfigAdditionalVariableArrayInput is an input type that accepts ConnectionEventingConfigAdditionalVariableArray and ConnectionEventingConfigAdditionalVariableArrayOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAdditionalVariableArrayInput` via:
//
//	ConnectionEventingConfigAdditionalVariableArray{ ConnectionEventingConfigAdditionalVariableArgs{...} }
type ConnectionEventingConfigAdditionalVariableArrayInput interface {
	pulumi.Input

	ToConnectionEventingConfigAdditionalVariableArrayOutput() ConnectionEventingConfigAdditionalVariableArrayOutput
	ToConnectionEventingConfigAdditionalVariableArrayOutputWithContext(context.Context) ConnectionEventingConfigAdditionalVariableArrayOutput
}

type ConnectionEventingConfigAdditionalVariableArray []ConnectionEventingConfigAdditionalVariableInput

func (ConnectionEventingConfigAdditionalVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingConfigAdditionalVariable)(nil)).Elem()
}

func (i ConnectionEventingConfigAdditionalVariableArray) ToConnectionEventingConfigAdditionalVariableArrayOutput() ConnectionEventingConfigAdditionalVariableArrayOutput {
	return i.ToConnectionEventingConfigAdditionalVariableArrayOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAdditionalVariableArray) ToConnectionEventingConfigAdditionalVariableArrayOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAdditionalVariableArrayOutput)
}

type ConnectionEventingConfigAdditionalVariableOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAdditionalVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAdditionalVariable)(nil)).Elem()
}

func (o ConnectionEventingConfigAdditionalVariableOutput) ToConnectionEventingConfigAdditionalVariableOutput() ConnectionEventingConfigAdditionalVariableOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableOutput) ToConnectionEventingConfigAdditionalVariableOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableOutput {
	return o
}

// Boolean Value of configVariable.
func (o ConnectionEventingConfigAdditionalVariableOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAdditionalVariable) *bool { return v.BooleanValue }).(pulumi.BoolPtrOutput)
}

// Encription key value of configVariable.
// Structure is documented below.
func (o ConnectionEventingConfigAdditionalVariableOutput) EncryptionKeyValue() ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAdditionalVariable) *ConnectionEventingConfigAdditionalVariableEncryptionKeyValue {
		return v.EncryptionKeyValue
	}).(ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

// Integer Value of configVariable.
func (o ConnectionEventingConfigAdditionalVariableOutput) IntegerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAdditionalVariable) *int { return v.IntegerValue }).(pulumi.IntPtrOutput)
}

// Key for the configVariable
func (o ConnectionEventingConfigAdditionalVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAdditionalVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Secret value of configVariable
// Structure is documented below.
func (o ConnectionEventingConfigAdditionalVariableOutput) SecretValue() ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAdditionalVariable) *ConnectionEventingConfigAdditionalVariableSecretValue {
		return v.SecretValue
	}).(ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput)
}

// String Value of configVariabley.
func (o ConnectionEventingConfigAdditionalVariableOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAdditionalVariable) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAdditionalVariableArrayOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAdditionalVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingConfigAdditionalVariable)(nil)).Elem()
}

func (o ConnectionEventingConfigAdditionalVariableArrayOutput) ToConnectionEventingConfigAdditionalVariableArrayOutput() ConnectionEventingConfigAdditionalVariableArrayOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableArrayOutput) ToConnectionEventingConfigAdditionalVariableArrayOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableArrayOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableArrayOutput) Index(i pulumi.IntInput) ConnectionEventingConfigAdditionalVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionEventingConfigAdditionalVariable {
		return vs[0].([]ConnectionEventingConfigAdditionalVariable)[vs[1].(int)]
	}).(ConnectionEventingConfigAdditionalVariableOutput)
}

type ConnectionEventingConfigAdditionalVariableEncryptionKeyValue struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type *string `pulumi:"type"`
}

// ConnectionEventingConfigAdditionalVariableEncryptionKeyValueInput is an input type that accepts ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs and ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAdditionalVariableEncryptionKeyValueInput` via:
//
//	ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs{...}
type ConnectionEventingConfigAdditionalVariableEncryptionKeyValueInput interface {
	pulumi.Input

	ToConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput
	ToConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutputWithContext(context.Context) ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput
}

type ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (i ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput {
	return i.ToConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput)
}

func (i ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput).ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx)
}

// ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrInput is an input type that accepts ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs, ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtr and ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrInput` via:
//
//	        ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrInput interface {
	pulumi.Input

	ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput
	ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Context) ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput
}

type connectionEventingConfigAdditionalVariableEncryptionKeyValuePtrType ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs

func ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtr(v *ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs) ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrInput {
	return (*connectionEventingConfigAdditionalVariableEncryptionKeyValuePtrType)(v)
}

func (*connectionEventingConfigAdditionalVariableEncryptionKeyValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (i *connectionEventingConfigAdditionalVariableEncryptionKeyValuePtrType) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i *connectionEventingConfigAdditionalVariableEncryptionKeyValuePtrType) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

type ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingConfigAdditionalVariableEncryptionKeyValue) *ConnectionEventingConfigAdditionalVariableEncryptionKeyValue {
		return &v
	}).(ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAdditionalVariableEncryptionKeyValue) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAdditionalVariableEncryptionKeyValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput) ToConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput) Elem() ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAdditionalVariableEncryptionKeyValue) ConnectionEventingConfigAdditionalVariableEncryptionKeyValue {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingConfigAdditionalVariableEncryptionKeyValue
		return ret
	}).(ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAdditionalVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAdditionalVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAdditionalVariableSecretValue struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionEventingConfigAdditionalVariableSecretValueInput is an input type that accepts ConnectionEventingConfigAdditionalVariableSecretValueArgs and ConnectionEventingConfigAdditionalVariableSecretValueOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAdditionalVariableSecretValueInput` via:
//
//	ConnectionEventingConfigAdditionalVariableSecretValueArgs{...}
type ConnectionEventingConfigAdditionalVariableSecretValueInput interface {
	pulumi.Input

	ToConnectionEventingConfigAdditionalVariableSecretValueOutput() ConnectionEventingConfigAdditionalVariableSecretValueOutput
	ToConnectionEventingConfigAdditionalVariableSecretValueOutputWithContext(context.Context) ConnectionEventingConfigAdditionalVariableSecretValueOutput
}

type ConnectionEventingConfigAdditionalVariableSecretValueArgs struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionEventingConfigAdditionalVariableSecretValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (i ConnectionEventingConfigAdditionalVariableSecretValueArgs) ToConnectionEventingConfigAdditionalVariableSecretValueOutput() ConnectionEventingConfigAdditionalVariableSecretValueOutput {
	return i.ToConnectionEventingConfigAdditionalVariableSecretValueOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAdditionalVariableSecretValueArgs) ToConnectionEventingConfigAdditionalVariableSecretValueOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableSecretValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAdditionalVariableSecretValueOutput)
}

func (i ConnectionEventingConfigAdditionalVariableSecretValueArgs) ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput {
	return i.ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAdditionalVariableSecretValueArgs) ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAdditionalVariableSecretValueOutput).ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx)
}

// ConnectionEventingConfigAdditionalVariableSecretValuePtrInput is an input type that accepts ConnectionEventingConfigAdditionalVariableSecretValueArgs, ConnectionEventingConfigAdditionalVariableSecretValuePtr and ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAdditionalVariableSecretValuePtrInput` via:
//
//	        ConnectionEventingConfigAdditionalVariableSecretValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionEventingConfigAdditionalVariableSecretValuePtrInput interface {
	pulumi.Input

	ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput
	ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Context) ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput
}

type connectionEventingConfigAdditionalVariableSecretValuePtrType ConnectionEventingConfigAdditionalVariableSecretValueArgs

func ConnectionEventingConfigAdditionalVariableSecretValuePtr(v *ConnectionEventingConfigAdditionalVariableSecretValueArgs) ConnectionEventingConfigAdditionalVariableSecretValuePtrInput {
	return (*connectionEventingConfigAdditionalVariableSecretValuePtrType)(v)
}

func (*connectionEventingConfigAdditionalVariableSecretValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (i *connectionEventingConfigAdditionalVariableSecretValuePtrType) ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput {
	return i.ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i *connectionEventingConfigAdditionalVariableSecretValuePtrType) ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput)
}

type ConnectionEventingConfigAdditionalVariableSecretValueOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAdditionalVariableSecretValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (o ConnectionEventingConfigAdditionalVariableSecretValueOutput) ToConnectionEventingConfigAdditionalVariableSecretValueOutput() ConnectionEventingConfigAdditionalVariableSecretValueOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableSecretValueOutput) ToConnectionEventingConfigAdditionalVariableSecretValueOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableSecretValueOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableSecretValueOutput) ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput {
	return o.ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (o ConnectionEventingConfigAdditionalVariableSecretValueOutput) ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingConfigAdditionalVariableSecretValue) *ConnectionEventingConfigAdditionalVariableSecretValue {
		return &v
	}).(ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionEventingConfigAdditionalVariableSecretValueOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAdditionalVariableSecretValue) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (o ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput) ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput) ToConnectionEventingConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput) Elem() ConnectionEventingConfigAdditionalVariableSecretValueOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAdditionalVariableSecretValue) ConnectionEventingConfigAdditionalVariableSecretValue {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingConfigAdditionalVariableSecretValue
		return ret
	}).(ConnectionEventingConfigAdditionalVariableSecretValueOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAdditionalVariableSecretValue) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAuthConfig struct {
	// List containing additional auth configs.
	// Structure is documented below.
	AdditionalVariables []ConnectionEventingConfigAuthConfigAdditionalVariable `pulumi:"additionalVariables"`
	// The type of authentication configured.
	AuthKey *string `pulumi:"authKey"`
	// authType of the Connection
	// Possible values are: `USER_PASSWORD`.
	AuthType string `pulumi:"authType"`
	// User password for Authentication.
	// Structure is documented below.
	UserPassword ConnectionEventingConfigAuthConfigUserPassword `pulumi:"userPassword"`
}

// ConnectionEventingConfigAuthConfigInput is an input type that accepts ConnectionEventingConfigAuthConfigArgs and ConnectionEventingConfigAuthConfigOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigInput` via:
//
//	ConnectionEventingConfigAuthConfigArgs{...}
type ConnectionEventingConfigAuthConfigInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigOutput() ConnectionEventingConfigAuthConfigOutput
	ToConnectionEventingConfigAuthConfigOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigOutput
}

type ConnectionEventingConfigAuthConfigArgs struct {
	// List containing additional auth configs.
	// Structure is documented below.
	AdditionalVariables ConnectionEventingConfigAuthConfigAdditionalVariableArrayInput `pulumi:"additionalVariables"`
	// The type of authentication configured.
	AuthKey pulumi.StringPtrInput `pulumi:"authKey"`
	// authType of the Connection
	// Possible values are: `USER_PASSWORD`.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// User password for Authentication.
	// Structure is documented below.
	UserPassword ConnectionEventingConfigAuthConfigUserPasswordInput `pulumi:"userPassword"`
}

func (ConnectionEventingConfigAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfig)(nil)).Elem()
}

func (i ConnectionEventingConfigAuthConfigArgs) ToConnectionEventingConfigAuthConfigOutput() ConnectionEventingConfigAuthConfigOutput {
	return i.ToConnectionEventingConfigAuthConfigOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigArgs) ToConnectionEventingConfigAuthConfigOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigOutput)
}

func (i ConnectionEventingConfigAuthConfigArgs) ToConnectionEventingConfigAuthConfigPtrOutput() ConnectionEventingConfigAuthConfigPtrOutput {
	return i.ToConnectionEventingConfigAuthConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigArgs) ToConnectionEventingConfigAuthConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigOutput).ToConnectionEventingConfigAuthConfigPtrOutputWithContext(ctx)
}

// ConnectionEventingConfigAuthConfigPtrInput is an input type that accepts ConnectionEventingConfigAuthConfigArgs, ConnectionEventingConfigAuthConfigPtr and ConnectionEventingConfigAuthConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigPtrInput` via:
//
//	        ConnectionEventingConfigAuthConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionEventingConfigAuthConfigPtrInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigPtrOutput() ConnectionEventingConfigAuthConfigPtrOutput
	ToConnectionEventingConfigAuthConfigPtrOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigPtrOutput
}

type connectionEventingConfigAuthConfigPtrType ConnectionEventingConfigAuthConfigArgs

func ConnectionEventingConfigAuthConfigPtr(v *ConnectionEventingConfigAuthConfigArgs) ConnectionEventingConfigAuthConfigPtrInput {
	return (*connectionEventingConfigAuthConfigPtrType)(v)
}

func (*connectionEventingConfigAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfig)(nil)).Elem()
}

func (i *connectionEventingConfigAuthConfigPtrType) ToConnectionEventingConfigAuthConfigPtrOutput() ConnectionEventingConfigAuthConfigPtrOutput {
	return i.ToConnectionEventingConfigAuthConfigPtrOutputWithContext(context.Background())
}

func (i *connectionEventingConfigAuthConfigPtrType) ToConnectionEventingConfigAuthConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigPtrOutput)
}

type ConnectionEventingConfigAuthConfigOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfig)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigOutput) ToConnectionEventingConfigAuthConfigOutput() ConnectionEventingConfigAuthConfigOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigOutput) ToConnectionEventingConfigAuthConfigOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigOutput) ToConnectionEventingConfigAuthConfigPtrOutput() ConnectionEventingConfigAuthConfigPtrOutput {
	return o.ToConnectionEventingConfigAuthConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionEventingConfigAuthConfigOutput) ToConnectionEventingConfigAuthConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingConfigAuthConfig) *ConnectionEventingConfigAuthConfig {
		return &v
	}).(ConnectionEventingConfigAuthConfigPtrOutput)
}

// List containing additional auth configs.
// Structure is documented below.
func (o ConnectionEventingConfigAuthConfigOutput) AdditionalVariables() ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfig) []ConnectionEventingConfigAuthConfigAdditionalVariable {
		return v.AdditionalVariables
	}).(ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput)
}

// The type of authentication configured.
func (o ConnectionEventingConfigAuthConfigOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfig) *string { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// authType of the Connection
// Possible values are: `USER_PASSWORD`.
func (o ConnectionEventingConfigAuthConfigOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfig) string { return v.AuthType }).(pulumi.StringOutput)
}

// User password for Authentication.
// Structure is documented below.
func (o ConnectionEventingConfigAuthConfigOutput) UserPassword() ConnectionEventingConfigAuthConfigUserPasswordOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfig) ConnectionEventingConfigAuthConfigUserPassword {
		return v.UserPassword
	}).(ConnectionEventingConfigAuthConfigUserPasswordOutput)
}

type ConnectionEventingConfigAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfig)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigPtrOutput) ToConnectionEventingConfigAuthConfigPtrOutput() ConnectionEventingConfigAuthConfigPtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigPtrOutput) ToConnectionEventingConfigAuthConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigPtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigPtrOutput) Elem() ConnectionEventingConfigAuthConfigOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfig) ConnectionEventingConfigAuthConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingConfigAuthConfig
		return ret
	}).(ConnectionEventingConfigAuthConfigOutput)
}

// List containing additional auth configs.
// Structure is documented below.
func (o ConnectionEventingConfigAuthConfigPtrOutput) AdditionalVariables() ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfig) []ConnectionEventingConfigAuthConfigAdditionalVariable {
		if v == nil {
			return nil
		}
		return v.AdditionalVariables
	}).(ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput)
}

// The type of authentication configured.
func (o ConnectionEventingConfigAuthConfigPtrOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthKey
	}).(pulumi.StringPtrOutput)
}

// authType of the Connection
// Possible values are: `USER_PASSWORD`.
func (o ConnectionEventingConfigAuthConfigPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// User password for Authentication.
// Structure is documented below.
func (o ConnectionEventingConfigAuthConfigPtrOutput) UserPassword() ConnectionEventingConfigAuthConfigUserPasswordPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfig) *ConnectionEventingConfigAuthConfigUserPassword {
		if v == nil {
			return nil
		}
		return &v.UserPassword
	}).(ConnectionEventingConfigAuthConfigUserPasswordPtrOutput)
}

type ConnectionEventingConfigAuthConfigAdditionalVariable struct {
	// Boolean Value of configVariable.
	BooleanValue *bool `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue *ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable.
	IntegerValue *int `pulumi:"integerValue"`
	// Key for the configVariable
	Key string `pulumi:"key"`
	// Secret value of configVariable
	// Structure is documented below.
	SecretValue *ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue `pulumi:"secretValue"`
	// String Value of configVariabley.
	StringValue *string `pulumi:"stringValue"`
}

// ConnectionEventingConfigAuthConfigAdditionalVariableInput is an input type that accepts ConnectionEventingConfigAuthConfigAdditionalVariableArgs and ConnectionEventingConfigAuthConfigAdditionalVariableOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigAdditionalVariableInput` via:
//
//	ConnectionEventingConfigAuthConfigAdditionalVariableArgs{...}
type ConnectionEventingConfigAuthConfigAdditionalVariableInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigAdditionalVariableOutput() ConnectionEventingConfigAuthConfigAdditionalVariableOutput
	ToConnectionEventingConfigAuthConfigAdditionalVariableOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableOutput
}

type ConnectionEventingConfigAuthConfigAdditionalVariableArgs struct {
	// Boolean Value of configVariable.
	BooleanValue pulumi.BoolPtrInput `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrInput `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable.
	IntegerValue pulumi.IntPtrInput `pulumi:"integerValue"`
	// Key for the configVariable
	Key pulumi.StringInput `pulumi:"key"`
	// Secret value of configVariable
	// Structure is documented below.
	SecretValue ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrInput `pulumi:"secretValue"`
	// String Value of configVariabley.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (ConnectionEventingConfigAuthConfigAdditionalVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariable)(nil)).Elem()
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableOutput() ConnectionEventingConfigAuthConfigAdditionalVariableOutput {
	return i.ToConnectionEventingConfigAuthConfigAdditionalVariableOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigAdditionalVariableOutput)
}

// ConnectionEventingConfigAuthConfigAdditionalVariableArrayInput is an input type that accepts ConnectionEventingConfigAuthConfigAdditionalVariableArray and ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigAdditionalVariableArrayInput` via:
//
//	ConnectionEventingConfigAuthConfigAdditionalVariableArray{ ConnectionEventingConfigAuthConfigAdditionalVariableArgs{...} }
type ConnectionEventingConfigAuthConfigAdditionalVariableArrayInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput() ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput
	ToConnectionEventingConfigAuthConfigAdditionalVariableArrayOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput
}

type ConnectionEventingConfigAuthConfigAdditionalVariableArray []ConnectionEventingConfigAuthConfigAdditionalVariableInput

func (ConnectionEventingConfigAuthConfigAdditionalVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingConfigAuthConfigAdditionalVariable)(nil)).Elem()
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableArray) ToConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput() ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput {
	return i.ToConnectionEventingConfigAuthConfigAdditionalVariableArrayOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableArray) ToConnectionEventingConfigAuthConfigAdditionalVariableArrayOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput)
}

type ConnectionEventingConfigAuthConfigAdditionalVariableOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigAdditionalVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariable)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableOutput() ConnectionEventingConfigAuthConfigAdditionalVariableOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableOutput {
	return o
}

// Boolean Value of configVariable.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigAdditionalVariable) *bool { return v.BooleanValue }).(pulumi.BoolPtrOutput)
}

// Encription key value of configVariable.
// Structure is documented below.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableOutput) EncryptionKeyValue() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigAdditionalVariable) *ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue {
		return v.EncryptionKeyValue
	}).(ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

// Integer Value of configVariable.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableOutput) IntegerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigAdditionalVariable) *int { return v.IntegerValue }).(pulumi.IntPtrOutput)
}

// Key for the configVariable
func (o ConnectionEventingConfigAuthConfigAdditionalVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigAdditionalVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Secret value of configVariable
// Structure is documented below.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableOutput) SecretValue() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigAdditionalVariable) *ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue {
		return v.SecretValue
	}).(ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput)
}

// String Value of configVariabley.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigAdditionalVariable) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingConfigAuthConfigAdditionalVariable)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput() ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableArrayOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput) Index(i pulumi.IntInput) ConnectionEventingConfigAuthConfigAdditionalVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionEventingConfigAuthConfigAdditionalVariable {
		return vs[0].([]ConnectionEventingConfigAuthConfigAdditionalVariable)[vs[1].(int)]
	}).(ConnectionEventingConfigAuthConfigAdditionalVariableOutput)
}

type ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type *string `pulumi:"type"`
}

// ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueInput is an input type that accepts ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs and ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueInput` via:
//
//	ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs{...}
type ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput
	ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput
}

type ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return i.ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput)
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput).ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx)
}

// ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrInput is an input type that accepts ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs, ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtr and ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrInput` via:
//
//	        ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput
	ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput
}

type connectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrType ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs

func ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtr(v *ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrInput {
	return (*connectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrType)(v)
}

func (*connectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (i *connectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrType) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i *connectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrType) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

type ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue) *ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue {
		return &v
	}).(ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue) *string {
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) Elem() ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue) ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue
		return ret
	}).(ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueInput is an input type that accepts ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs and ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueInput` via:
//
//	ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs{...}
type ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput
	ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput
}

type ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput {
	return i.ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput)
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput {
	return i.ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput).ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx)
}

// ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrInput is an input type that accepts ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs, ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtr and ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrInput` via:
//
//	        ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput
	ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput
}

type connectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrType ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs

func ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtr(v *ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrInput {
	return (*connectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrType)(v)
}

func (*connectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (i *connectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrType) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput {
	return i.ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i *connectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrType) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput)
}

type ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o.ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue) *ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue {
		return &v
	}).(ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput) ToConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput) Elem() ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue) ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue
		return ret
	}).(ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigAdditionalVariableSecretValue) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAuthConfigUserPassword struct {
	// Password for Authentication.
	// Structure is documented below.
	Password *ConnectionEventingConfigAuthConfigUserPasswordPassword `pulumi:"password"`
	// Username for Authentication.
	Username *string `pulumi:"username"`
}

// ConnectionEventingConfigAuthConfigUserPasswordInput is an input type that accepts ConnectionEventingConfigAuthConfigUserPasswordArgs and ConnectionEventingConfigAuthConfigUserPasswordOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigUserPasswordInput` via:
//
//	ConnectionEventingConfigAuthConfigUserPasswordArgs{...}
type ConnectionEventingConfigAuthConfigUserPasswordInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigUserPasswordOutput() ConnectionEventingConfigAuthConfigUserPasswordOutput
	ToConnectionEventingConfigAuthConfigUserPasswordOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigUserPasswordOutput
}

type ConnectionEventingConfigAuthConfigUserPasswordArgs struct {
	// Password for Authentication.
	// Structure is documented below.
	Password ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrInput `pulumi:"password"`
	// Username for Authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ConnectionEventingConfigAuthConfigUserPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigUserPassword)(nil)).Elem()
}

func (i ConnectionEventingConfigAuthConfigUserPasswordArgs) ToConnectionEventingConfigAuthConfigUserPasswordOutput() ConnectionEventingConfigAuthConfigUserPasswordOutput {
	return i.ToConnectionEventingConfigAuthConfigUserPasswordOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigUserPasswordArgs) ToConnectionEventingConfigAuthConfigUserPasswordOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigUserPasswordOutput)
}

func (i ConnectionEventingConfigAuthConfigUserPasswordArgs) ToConnectionEventingConfigAuthConfigUserPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPtrOutput {
	return i.ToConnectionEventingConfigAuthConfigUserPasswordPtrOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigUserPasswordArgs) ToConnectionEventingConfigAuthConfigUserPasswordPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigUserPasswordOutput).ToConnectionEventingConfigAuthConfigUserPasswordPtrOutputWithContext(ctx)
}

// ConnectionEventingConfigAuthConfigUserPasswordPtrInput is an input type that accepts ConnectionEventingConfigAuthConfigUserPasswordArgs, ConnectionEventingConfigAuthConfigUserPasswordPtr and ConnectionEventingConfigAuthConfigUserPasswordPtrOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigUserPasswordPtrInput` via:
//
//	        ConnectionEventingConfigAuthConfigUserPasswordArgs{...}
//
//	or:
//
//	        nil
type ConnectionEventingConfigAuthConfigUserPasswordPtrInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigUserPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPtrOutput
	ToConnectionEventingConfigAuthConfigUserPasswordPtrOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigUserPasswordPtrOutput
}

type connectionEventingConfigAuthConfigUserPasswordPtrType ConnectionEventingConfigAuthConfigUserPasswordArgs

func ConnectionEventingConfigAuthConfigUserPasswordPtr(v *ConnectionEventingConfigAuthConfigUserPasswordArgs) ConnectionEventingConfigAuthConfigUserPasswordPtrInput {
	return (*connectionEventingConfigAuthConfigUserPasswordPtrType)(v)
}

func (*connectionEventingConfigAuthConfigUserPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfigUserPassword)(nil)).Elem()
}

func (i *connectionEventingConfigAuthConfigUserPasswordPtrType) ToConnectionEventingConfigAuthConfigUserPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPtrOutput {
	return i.ToConnectionEventingConfigAuthConfigUserPasswordPtrOutputWithContext(context.Background())
}

func (i *connectionEventingConfigAuthConfigUserPasswordPtrType) ToConnectionEventingConfigAuthConfigUserPasswordPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigUserPasswordPtrOutput)
}

type ConnectionEventingConfigAuthConfigUserPasswordOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigUserPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigUserPassword)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigUserPasswordOutput) ToConnectionEventingConfigAuthConfigUserPasswordOutput() ConnectionEventingConfigAuthConfigUserPasswordOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigUserPasswordOutput) ToConnectionEventingConfigAuthConfigUserPasswordOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigUserPasswordOutput) ToConnectionEventingConfigAuthConfigUserPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPtrOutput {
	return o.ToConnectionEventingConfigAuthConfigUserPasswordPtrOutputWithContext(context.Background())
}

func (o ConnectionEventingConfigAuthConfigUserPasswordOutput) ToConnectionEventingConfigAuthConfigUserPasswordPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingConfigAuthConfigUserPassword) *ConnectionEventingConfigAuthConfigUserPassword {
		return &v
	}).(ConnectionEventingConfigAuthConfigUserPasswordPtrOutput)
}

// Password for Authentication.
// Structure is documented below.
func (o ConnectionEventingConfigAuthConfigUserPasswordOutput) Password() ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigUserPassword) *ConnectionEventingConfigAuthConfigUserPasswordPassword {
		return v.Password
	}).(ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput)
}

// Username for Authentication.
func (o ConnectionEventingConfigAuthConfigUserPasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigUserPassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAuthConfigUserPasswordPtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigUserPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfigUserPassword)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPtrOutput) ToConnectionEventingConfigAuthConfigUserPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPtrOutput) ToConnectionEventingConfigAuthConfigUserPasswordPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPtrOutput) Elem() ConnectionEventingConfigAuthConfigUserPasswordOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigUserPassword) ConnectionEventingConfigAuthConfigUserPassword {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingConfigAuthConfigUserPassword
		return ret
	}).(ConnectionEventingConfigAuthConfigUserPasswordOutput)
}

// Password for Authentication.
// Structure is documented below.
func (o ConnectionEventingConfigAuthConfigUserPasswordPtrOutput) Password() ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigUserPassword) *ConnectionEventingConfigAuthConfigUserPasswordPassword {
		if v == nil {
			return nil
		}
		return v.Password
	}).(ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput)
}

// Username for Authentication.
func (o ConnectionEventingConfigAuthConfigUserPasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigUserPassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigAuthConfigUserPasswordPassword struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionEventingConfigAuthConfigUserPasswordPasswordInput is an input type that accepts ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs and ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigUserPasswordPasswordInput` via:
//
//	ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs{...}
type ConnectionEventingConfigAuthConfigUserPasswordPasswordInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigUserPasswordPasswordOutput() ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput
	ToConnectionEventingConfigAuthConfigUserPasswordPasswordOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput
}

type ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs struct {
	// The resource name of the secret version in the format,
	// format as: projects/*/secrets/*/versions/*.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigUserPasswordPassword)(nil)).Elem()
}

func (i ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs) ToConnectionEventingConfigAuthConfigUserPasswordPasswordOutput() ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput {
	return i.ToConnectionEventingConfigAuthConfigUserPasswordPasswordOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs) ToConnectionEventingConfigAuthConfigUserPasswordPasswordOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput)
}

func (i ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs) ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return i.ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs) ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput).ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx)
}

// ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrInput is an input type that accepts ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs, ConnectionEventingConfigAuthConfigUserPasswordPasswordPtr and ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrInput` via:
//
//	        ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs{...}
//
//	or:
//
//	        nil
type ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrInput interface {
	pulumi.Input

	ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput
	ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutputWithContext(context.Context) ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput
}

type connectionEventingConfigAuthConfigUserPasswordPasswordPtrType ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs

func ConnectionEventingConfigAuthConfigUserPasswordPasswordPtr(v *ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs) ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrInput {
	return (*connectionEventingConfigAuthConfigUserPasswordPasswordPtrType)(v)
}

func (*connectionEventingConfigAuthConfigUserPasswordPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfigUserPasswordPassword)(nil)).Elem()
}

func (i *connectionEventingConfigAuthConfigUserPasswordPasswordPtrType) ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return i.ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutputWithContext(context.Background())
}

func (i *connectionEventingConfigAuthConfigUserPasswordPasswordPtrType) ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput)
}

type ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigAuthConfigUserPasswordPassword)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput) ToConnectionEventingConfigAuthConfigUserPasswordPasswordOutput() ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput) ToConnectionEventingConfigAuthConfigUserPasswordPasswordOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput) ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return o.ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutputWithContext(context.Background())
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput) ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingConfigAuthConfigUserPasswordPassword) *ConnectionEventingConfigAuthConfigUserPasswordPassword {
		return &v
	}).(ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionEventingConfigAuthConfigUserPasswordPassword) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigAuthConfigUserPasswordPassword)(nil)).Elem()
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput) ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput() ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput) ToConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput {
	return o
}

func (o ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput) Elem() ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigUserPasswordPassword) ConnectionEventingConfigAuthConfigUserPasswordPassword {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingConfigAuthConfigUserPasswordPassword
		return ret
	}).(ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput)
}

// The resource name of the secret version in the format,
// format as: projects/*/secrets/*/versions/*.
func (o ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigAuthConfigUserPasswordPassword) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigRegistrationDestinationConfig struct {
	// destinations for the connection
	// Structure is documented below.
	Destinations []ConnectionEventingConfigRegistrationDestinationConfigDestination `pulumi:"destinations"`
	// Key for the connection
	Key *string `pulumi:"key"`
}

// ConnectionEventingConfigRegistrationDestinationConfigInput is an input type that accepts ConnectionEventingConfigRegistrationDestinationConfigArgs and ConnectionEventingConfigRegistrationDestinationConfigOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigRegistrationDestinationConfigInput` via:
//
//	ConnectionEventingConfigRegistrationDestinationConfigArgs{...}
type ConnectionEventingConfigRegistrationDestinationConfigInput interface {
	pulumi.Input

	ToConnectionEventingConfigRegistrationDestinationConfigOutput() ConnectionEventingConfigRegistrationDestinationConfigOutput
	ToConnectionEventingConfigRegistrationDestinationConfigOutputWithContext(context.Context) ConnectionEventingConfigRegistrationDestinationConfigOutput
}

type ConnectionEventingConfigRegistrationDestinationConfigArgs struct {
	// destinations for the connection
	// Structure is documented below.
	Destinations ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayInput `pulumi:"destinations"`
	// Key for the connection
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (ConnectionEventingConfigRegistrationDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigRegistrationDestinationConfig)(nil)).Elem()
}

func (i ConnectionEventingConfigRegistrationDestinationConfigArgs) ToConnectionEventingConfigRegistrationDestinationConfigOutput() ConnectionEventingConfigRegistrationDestinationConfigOutput {
	return i.ToConnectionEventingConfigRegistrationDestinationConfigOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigRegistrationDestinationConfigArgs) ToConnectionEventingConfigRegistrationDestinationConfigOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigRegistrationDestinationConfigOutput)
}

func (i ConnectionEventingConfigRegistrationDestinationConfigArgs) ToConnectionEventingConfigRegistrationDestinationConfigPtrOutput() ConnectionEventingConfigRegistrationDestinationConfigPtrOutput {
	return i.ToConnectionEventingConfigRegistrationDestinationConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigRegistrationDestinationConfigArgs) ToConnectionEventingConfigRegistrationDestinationConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigRegistrationDestinationConfigOutput).ToConnectionEventingConfigRegistrationDestinationConfigPtrOutputWithContext(ctx)
}

// ConnectionEventingConfigRegistrationDestinationConfigPtrInput is an input type that accepts ConnectionEventingConfigRegistrationDestinationConfigArgs, ConnectionEventingConfigRegistrationDestinationConfigPtr and ConnectionEventingConfigRegistrationDestinationConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigRegistrationDestinationConfigPtrInput` via:
//
//	        ConnectionEventingConfigRegistrationDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionEventingConfigRegistrationDestinationConfigPtrInput interface {
	pulumi.Input

	ToConnectionEventingConfigRegistrationDestinationConfigPtrOutput() ConnectionEventingConfigRegistrationDestinationConfigPtrOutput
	ToConnectionEventingConfigRegistrationDestinationConfigPtrOutputWithContext(context.Context) ConnectionEventingConfigRegistrationDestinationConfigPtrOutput
}

type connectionEventingConfigRegistrationDestinationConfigPtrType ConnectionEventingConfigRegistrationDestinationConfigArgs

func ConnectionEventingConfigRegistrationDestinationConfigPtr(v *ConnectionEventingConfigRegistrationDestinationConfigArgs) ConnectionEventingConfigRegistrationDestinationConfigPtrInput {
	return (*connectionEventingConfigRegistrationDestinationConfigPtrType)(v)
}

func (*connectionEventingConfigRegistrationDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigRegistrationDestinationConfig)(nil)).Elem()
}

func (i *connectionEventingConfigRegistrationDestinationConfigPtrType) ToConnectionEventingConfigRegistrationDestinationConfigPtrOutput() ConnectionEventingConfigRegistrationDestinationConfigPtrOutput {
	return i.ToConnectionEventingConfigRegistrationDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *connectionEventingConfigRegistrationDestinationConfigPtrType) ToConnectionEventingConfigRegistrationDestinationConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigRegistrationDestinationConfigPtrOutput)
}

type ConnectionEventingConfigRegistrationDestinationConfigOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigRegistrationDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigRegistrationDestinationConfig)(nil)).Elem()
}

func (o ConnectionEventingConfigRegistrationDestinationConfigOutput) ToConnectionEventingConfigRegistrationDestinationConfigOutput() ConnectionEventingConfigRegistrationDestinationConfigOutput {
	return o
}

func (o ConnectionEventingConfigRegistrationDestinationConfigOutput) ToConnectionEventingConfigRegistrationDestinationConfigOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigOutput {
	return o
}

func (o ConnectionEventingConfigRegistrationDestinationConfigOutput) ToConnectionEventingConfigRegistrationDestinationConfigPtrOutput() ConnectionEventingConfigRegistrationDestinationConfigPtrOutput {
	return o.ToConnectionEventingConfigRegistrationDestinationConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionEventingConfigRegistrationDestinationConfigOutput) ToConnectionEventingConfigRegistrationDestinationConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingConfigRegistrationDestinationConfig) *ConnectionEventingConfigRegistrationDestinationConfig {
		return &v
	}).(ConnectionEventingConfigRegistrationDestinationConfigPtrOutput)
}

// destinations for the connection
// Structure is documented below.
func (o ConnectionEventingConfigRegistrationDestinationConfigOutput) Destinations() ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput {
	return o.ApplyT(func(v ConnectionEventingConfigRegistrationDestinationConfig) []ConnectionEventingConfigRegistrationDestinationConfigDestination {
		return v.Destinations
	}).(ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput)
}

// Key for the connection
func (o ConnectionEventingConfigRegistrationDestinationConfigOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigRegistrationDestinationConfig) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigRegistrationDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigRegistrationDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingConfigRegistrationDestinationConfig)(nil)).Elem()
}

func (o ConnectionEventingConfigRegistrationDestinationConfigPtrOutput) ToConnectionEventingConfigRegistrationDestinationConfigPtrOutput() ConnectionEventingConfigRegistrationDestinationConfigPtrOutput {
	return o
}

func (o ConnectionEventingConfigRegistrationDestinationConfigPtrOutput) ToConnectionEventingConfigRegistrationDestinationConfigPtrOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigPtrOutput {
	return o
}

func (o ConnectionEventingConfigRegistrationDestinationConfigPtrOutput) Elem() ConnectionEventingConfigRegistrationDestinationConfigOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigRegistrationDestinationConfig) ConnectionEventingConfigRegistrationDestinationConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingConfigRegistrationDestinationConfig
		return ret
	}).(ConnectionEventingConfigRegistrationDestinationConfigOutput)
}

// destinations for the connection
// Structure is documented below.
func (o ConnectionEventingConfigRegistrationDestinationConfigPtrOutput) Destinations() ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigRegistrationDestinationConfig) []ConnectionEventingConfigRegistrationDestinationConfigDestination {
		if v == nil {
			return nil
		}
		return v.Destinations
	}).(ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput)
}

// Key for the connection
func (o ConnectionEventingConfigRegistrationDestinationConfigPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionEventingConfigRegistrationDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigRegistrationDestinationConfigDestination struct {
	// Host
	Host *string `pulumi:"host"`
	// port number
	Port *int `pulumi:"port"`
	// Service Attachment
	ServiceAttachment *string `pulumi:"serviceAttachment"`
}

// ConnectionEventingConfigRegistrationDestinationConfigDestinationInput is an input type that accepts ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs and ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigRegistrationDestinationConfigDestinationInput` via:
//
//	ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs{...}
type ConnectionEventingConfigRegistrationDestinationConfigDestinationInput interface {
	pulumi.Input

	ToConnectionEventingConfigRegistrationDestinationConfigDestinationOutput() ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput
	ToConnectionEventingConfigRegistrationDestinationConfigDestinationOutputWithContext(context.Context) ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput
}

type ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs struct {
	// Host
	Host pulumi.StringPtrInput `pulumi:"host"`
	// port number
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Service Attachment
	ServiceAttachment pulumi.StringPtrInput `pulumi:"serviceAttachment"`
}

func (ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigRegistrationDestinationConfigDestination)(nil)).Elem()
}

func (i ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs) ToConnectionEventingConfigRegistrationDestinationConfigDestinationOutput() ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput {
	return i.ToConnectionEventingConfigRegistrationDestinationConfigDestinationOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs) ToConnectionEventingConfigRegistrationDestinationConfigDestinationOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput)
}

// ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayInput is an input type that accepts ConnectionEventingConfigRegistrationDestinationConfigDestinationArray and ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput values.
// You can construct a concrete instance of `ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayInput` via:
//
//	ConnectionEventingConfigRegistrationDestinationConfigDestinationArray{ ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs{...} }
type ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayInput interface {
	pulumi.Input

	ToConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput() ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput
	ToConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutputWithContext(context.Context) ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput
}

type ConnectionEventingConfigRegistrationDestinationConfigDestinationArray []ConnectionEventingConfigRegistrationDestinationConfigDestinationInput

func (ConnectionEventingConfigRegistrationDestinationConfigDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingConfigRegistrationDestinationConfigDestination)(nil)).Elem()
}

func (i ConnectionEventingConfigRegistrationDestinationConfigDestinationArray) ToConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput() ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput {
	return i.ToConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutputWithContext(context.Background())
}

func (i ConnectionEventingConfigRegistrationDestinationConfigDestinationArray) ToConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput)
}

type ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingConfigRegistrationDestinationConfigDestination)(nil)).Elem()
}

func (o ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput) ToConnectionEventingConfigRegistrationDestinationConfigDestinationOutput() ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput {
	return o
}

func (o ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput) ToConnectionEventingConfigRegistrationDestinationConfigDestinationOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput {
	return o
}

// Host
func (o ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigRegistrationDestinationConfigDestination) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// port number
func (o ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigRegistrationDestinationConfigDestination) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Service Attachment
func (o ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput) ServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingConfigRegistrationDestinationConfigDestination) *string {
		return v.ServiceAttachment
	}).(pulumi.StringPtrOutput)
}

type ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput struct{ *pulumi.OutputState }

func (ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingConfigRegistrationDestinationConfigDestination)(nil)).Elem()
}

func (o ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput) ToConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput() ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput {
	return o
}

func (o ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput) ToConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutputWithContext(ctx context.Context) ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput {
	return o
}

func (o ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput) Index(i pulumi.IntInput) ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionEventingConfigRegistrationDestinationConfigDestination {
		return vs[0].([]ConnectionEventingConfigRegistrationDestinationConfigDestination)[vs[1].(int)]
	}).(ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput)
}

type ConnectionEventingRuntimeData struct {
	// Events listener endpoint. The value will populated after provisioning the events listener.
	EventsListenerEndpoint *string `pulumi:"eventsListenerEndpoint"`
	// (Output)
	// Current status of eventing.
	// Structure is documented below.
	Statuses []ConnectionEventingRuntimeDataStatus `pulumi:"statuses"`
}

// ConnectionEventingRuntimeDataInput is an input type that accepts ConnectionEventingRuntimeDataArgs and ConnectionEventingRuntimeDataOutput values.
// You can construct a concrete instance of `ConnectionEventingRuntimeDataInput` via:
//
//	ConnectionEventingRuntimeDataArgs{...}
type ConnectionEventingRuntimeDataInput interface {
	pulumi.Input

	ToConnectionEventingRuntimeDataOutput() ConnectionEventingRuntimeDataOutput
	ToConnectionEventingRuntimeDataOutputWithContext(context.Context) ConnectionEventingRuntimeDataOutput
}

type ConnectionEventingRuntimeDataArgs struct {
	// Events listener endpoint. The value will populated after provisioning the events listener.
	EventsListenerEndpoint pulumi.StringPtrInput `pulumi:"eventsListenerEndpoint"`
	// (Output)
	// Current status of eventing.
	// Structure is documented below.
	Statuses ConnectionEventingRuntimeDataStatusArrayInput `pulumi:"statuses"`
}

func (ConnectionEventingRuntimeDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingRuntimeData)(nil)).Elem()
}

func (i ConnectionEventingRuntimeDataArgs) ToConnectionEventingRuntimeDataOutput() ConnectionEventingRuntimeDataOutput {
	return i.ToConnectionEventingRuntimeDataOutputWithContext(context.Background())
}

func (i ConnectionEventingRuntimeDataArgs) ToConnectionEventingRuntimeDataOutputWithContext(ctx context.Context) ConnectionEventingRuntimeDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingRuntimeDataOutput)
}

// ConnectionEventingRuntimeDataArrayInput is an input type that accepts ConnectionEventingRuntimeDataArray and ConnectionEventingRuntimeDataArrayOutput values.
// You can construct a concrete instance of `ConnectionEventingRuntimeDataArrayInput` via:
//
//	ConnectionEventingRuntimeDataArray{ ConnectionEventingRuntimeDataArgs{...} }
type ConnectionEventingRuntimeDataArrayInput interface {
	pulumi.Input

	ToConnectionEventingRuntimeDataArrayOutput() ConnectionEventingRuntimeDataArrayOutput
	ToConnectionEventingRuntimeDataArrayOutputWithContext(context.Context) ConnectionEventingRuntimeDataArrayOutput
}

type ConnectionEventingRuntimeDataArray []ConnectionEventingRuntimeDataInput

func (ConnectionEventingRuntimeDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingRuntimeData)(nil)).Elem()
}

func (i ConnectionEventingRuntimeDataArray) ToConnectionEventingRuntimeDataArrayOutput() ConnectionEventingRuntimeDataArrayOutput {
	return i.ToConnectionEventingRuntimeDataArrayOutputWithContext(context.Background())
}

func (i ConnectionEventingRuntimeDataArray) ToConnectionEventingRuntimeDataArrayOutputWithContext(ctx context.Context) ConnectionEventingRuntimeDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingRuntimeDataArrayOutput)
}

type ConnectionEventingRuntimeDataOutput struct{ *pulumi.OutputState }

func (ConnectionEventingRuntimeDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingRuntimeData)(nil)).Elem()
}

func (o ConnectionEventingRuntimeDataOutput) ToConnectionEventingRuntimeDataOutput() ConnectionEventingRuntimeDataOutput {
	return o
}

func (o ConnectionEventingRuntimeDataOutput) ToConnectionEventingRuntimeDataOutputWithContext(ctx context.Context) ConnectionEventingRuntimeDataOutput {
	return o
}

// Events listener endpoint. The value will populated after provisioning the events listener.
func (o ConnectionEventingRuntimeDataOutput) EventsListenerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingRuntimeData) *string { return v.EventsListenerEndpoint }).(pulumi.StringPtrOutput)
}

// (Output)
// Current status of eventing.
// Structure is documented below.
func (o ConnectionEventingRuntimeDataOutput) Statuses() ConnectionEventingRuntimeDataStatusArrayOutput {
	return o.ApplyT(func(v ConnectionEventingRuntimeData) []ConnectionEventingRuntimeDataStatus { return v.Statuses }).(ConnectionEventingRuntimeDataStatusArrayOutput)
}

type ConnectionEventingRuntimeDataArrayOutput struct{ *pulumi.OutputState }

func (ConnectionEventingRuntimeDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingRuntimeData)(nil)).Elem()
}

func (o ConnectionEventingRuntimeDataArrayOutput) ToConnectionEventingRuntimeDataArrayOutput() ConnectionEventingRuntimeDataArrayOutput {
	return o
}

func (o ConnectionEventingRuntimeDataArrayOutput) ToConnectionEventingRuntimeDataArrayOutputWithContext(ctx context.Context) ConnectionEventingRuntimeDataArrayOutput {
	return o
}

func (o ConnectionEventingRuntimeDataArrayOutput) Index(i pulumi.IntInput) ConnectionEventingRuntimeDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionEventingRuntimeData {
		return vs[0].([]ConnectionEventingRuntimeData)[vs[1].(int)]
	}).(ConnectionEventingRuntimeDataOutput)
}

type ConnectionEventingRuntimeDataStatus struct {
	// An arbitrary description for the Conection.
	Description *string `pulumi:"description"`
	// (Output)
	// State of the Eventing
	State *string `pulumi:"state"`
}

// ConnectionEventingRuntimeDataStatusInput is an input type that accepts ConnectionEventingRuntimeDataStatusArgs and ConnectionEventingRuntimeDataStatusOutput values.
// You can construct a concrete instance of `ConnectionEventingRuntimeDataStatusInput` via:
//
//	ConnectionEventingRuntimeDataStatusArgs{...}
type ConnectionEventingRuntimeDataStatusInput interface {
	pulumi.Input

	ToConnectionEventingRuntimeDataStatusOutput() ConnectionEventingRuntimeDataStatusOutput
	ToConnectionEventingRuntimeDataStatusOutputWithContext(context.Context) ConnectionEventingRuntimeDataStatusOutput
}

type ConnectionEventingRuntimeDataStatusArgs struct {
	// An arbitrary description for the Conection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Output)
	// State of the Eventing
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ConnectionEventingRuntimeDataStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingRuntimeDataStatus)(nil)).Elem()
}

func (i ConnectionEventingRuntimeDataStatusArgs) ToConnectionEventingRuntimeDataStatusOutput() ConnectionEventingRuntimeDataStatusOutput {
	return i.ToConnectionEventingRuntimeDataStatusOutputWithContext(context.Background())
}

func (i ConnectionEventingRuntimeDataStatusArgs) ToConnectionEventingRuntimeDataStatusOutputWithContext(ctx context.Context) ConnectionEventingRuntimeDataStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingRuntimeDataStatusOutput)
}

// ConnectionEventingRuntimeDataStatusArrayInput is an input type that accepts ConnectionEventingRuntimeDataStatusArray and ConnectionEventingRuntimeDataStatusArrayOutput values.
// You can construct a concrete instance of `ConnectionEventingRuntimeDataStatusArrayInput` via:
//
//	ConnectionEventingRuntimeDataStatusArray{ ConnectionEventingRuntimeDataStatusArgs{...} }
type ConnectionEventingRuntimeDataStatusArrayInput interface {
	pulumi.Input

	ToConnectionEventingRuntimeDataStatusArrayOutput() ConnectionEventingRuntimeDataStatusArrayOutput
	ToConnectionEventingRuntimeDataStatusArrayOutputWithContext(context.Context) ConnectionEventingRuntimeDataStatusArrayOutput
}

type ConnectionEventingRuntimeDataStatusArray []ConnectionEventingRuntimeDataStatusInput

func (ConnectionEventingRuntimeDataStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingRuntimeDataStatus)(nil)).Elem()
}

func (i ConnectionEventingRuntimeDataStatusArray) ToConnectionEventingRuntimeDataStatusArrayOutput() ConnectionEventingRuntimeDataStatusArrayOutput {
	return i.ToConnectionEventingRuntimeDataStatusArrayOutputWithContext(context.Background())
}

func (i ConnectionEventingRuntimeDataStatusArray) ToConnectionEventingRuntimeDataStatusArrayOutputWithContext(ctx context.Context) ConnectionEventingRuntimeDataStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionEventingRuntimeDataStatusArrayOutput)
}

type ConnectionEventingRuntimeDataStatusOutput struct{ *pulumi.OutputState }

func (ConnectionEventingRuntimeDataStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingRuntimeDataStatus)(nil)).Elem()
}

func (o ConnectionEventingRuntimeDataStatusOutput) ToConnectionEventingRuntimeDataStatusOutput() ConnectionEventingRuntimeDataStatusOutput {
	return o
}

func (o ConnectionEventingRuntimeDataStatusOutput) ToConnectionEventingRuntimeDataStatusOutputWithContext(ctx context.Context) ConnectionEventingRuntimeDataStatusOutput {
	return o
}

// An arbitrary description for the Conection.
func (o ConnectionEventingRuntimeDataStatusOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingRuntimeDataStatus) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Output)
// State of the Eventing
func (o ConnectionEventingRuntimeDataStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionEventingRuntimeDataStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ConnectionEventingRuntimeDataStatusArrayOutput struct{ *pulumi.OutputState }

func (ConnectionEventingRuntimeDataStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionEventingRuntimeDataStatus)(nil)).Elem()
}

func (o ConnectionEventingRuntimeDataStatusArrayOutput) ToConnectionEventingRuntimeDataStatusArrayOutput() ConnectionEventingRuntimeDataStatusArrayOutput {
	return o
}

func (o ConnectionEventingRuntimeDataStatusArrayOutput) ToConnectionEventingRuntimeDataStatusArrayOutputWithContext(ctx context.Context) ConnectionEventingRuntimeDataStatusArrayOutput {
	return o
}

func (o ConnectionEventingRuntimeDataStatusArrayOutput) Index(i pulumi.IntInput) ConnectionEventingRuntimeDataStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionEventingRuntimeDataStatus {
		return vs[0].([]ConnectionEventingRuntimeDataStatus)[vs[1].(int)]
	}).(ConnectionEventingRuntimeDataStatusOutput)
}

type ConnectionLockConfig struct {
	// Indicates whether or not the connection is locked.
	Locked bool `pulumi:"locked"`
	// Describes why a connection is locked.
	Reason *string `pulumi:"reason"`
}

// ConnectionLockConfigInput is an input type that accepts ConnectionLockConfigArgs and ConnectionLockConfigOutput values.
// You can construct a concrete instance of `ConnectionLockConfigInput` via:
//
//	ConnectionLockConfigArgs{...}
type ConnectionLockConfigInput interface {
	pulumi.Input

	ToConnectionLockConfigOutput() ConnectionLockConfigOutput
	ToConnectionLockConfigOutputWithContext(context.Context) ConnectionLockConfigOutput
}

type ConnectionLockConfigArgs struct {
	// Indicates whether or not the connection is locked.
	Locked pulumi.BoolInput `pulumi:"locked"`
	// Describes why a connection is locked.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (ConnectionLockConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionLockConfig)(nil)).Elem()
}

func (i ConnectionLockConfigArgs) ToConnectionLockConfigOutput() ConnectionLockConfigOutput {
	return i.ToConnectionLockConfigOutputWithContext(context.Background())
}

func (i ConnectionLockConfigArgs) ToConnectionLockConfigOutputWithContext(ctx context.Context) ConnectionLockConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionLockConfigOutput)
}

func (i ConnectionLockConfigArgs) ToConnectionLockConfigPtrOutput() ConnectionLockConfigPtrOutput {
	return i.ToConnectionLockConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionLockConfigArgs) ToConnectionLockConfigPtrOutputWithContext(ctx context.Context) ConnectionLockConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionLockConfigOutput).ToConnectionLockConfigPtrOutputWithContext(ctx)
}

// ConnectionLockConfigPtrInput is an input type that accepts ConnectionLockConfigArgs, ConnectionLockConfigPtr and ConnectionLockConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionLockConfigPtrInput` via:
//
//	        ConnectionLockConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionLockConfigPtrInput interface {
	pulumi.Input

	ToConnectionLockConfigPtrOutput() ConnectionLockConfigPtrOutput
	ToConnectionLockConfigPtrOutputWithContext(context.Context) ConnectionLockConfigPtrOutput
}

type connectionLockConfigPtrType ConnectionLockConfigArgs

func ConnectionLockConfigPtr(v *ConnectionLockConfigArgs) ConnectionLockConfigPtrInput {
	return (*connectionLockConfigPtrType)(v)
}

func (*connectionLockConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionLockConfig)(nil)).Elem()
}

func (i *connectionLockConfigPtrType) ToConnectionLockConfigPtrOutput() ConnectionLockConfigPtrOutput {
	return i.ToConnectionLockConfigPtrOutputWithContext(context.Background())
}

func (i *connectionLockConfigPtrType) ToConnectionLockConfigPtrOutputWithContext(ctx context.Context) ConnectionLockConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionLockConfigPtrOutput)
}

type ConnectionLockConfigOutput struct{ *pulumi.OutputState }

func (ConnectionLockConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionLockConfig)(nil)).Elem()
}

func (o ConnectionLockConfigOutput) ToConnectionLockConfigOutput() ConnectionLockConfigOutput {
	return o
}

func (o ConnectionLockConfigOutput) ToConnectionLockConfigOutputWithContext(ctx context.Context) ConnectionLockConfigOutput {
	return o
}

func (o ConnectionLockConfigOutput) ToConnectionLockConfigPtrOutput() ConnectionLockConfigPtrOutput {
	return o.ToConnectionLockConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionLockConfigOutput) ToConnectionLockConfigPtrOutputWithContext(ctx context.Context) ConnectionLockConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionLockConfig) *ConnectionLockConfig {
		return &v
	}).(ConnectionLockConfigPtrOutput)
}

// Indicates whether or not the connection is locked.
func (o ConnectionLockConfigOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectionLockConfig) bool { return v.Locked }).(pulumi.BoolOutput)
}

// Describes why a connection is locked.
func (o ConnectionLockConfigOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionLockConfig) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

type ConnectionLockConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionLockConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionLockConfig)(nil)).Elem()
}

func (o ConnectionLockConfigPtrOutput) ToConnectionLockConfigPtrOutput() ConnectionLockConfigPtrOutput {
	return o
}

func (o ConnectionLockConfigPtrOutput) ToConnectionLockConfigPtrOutputWithContext(ctx context.Context) ConnectionLockConfigPtrOutput {
	return o
}

func (o ConnectionLockConfigPtrOutput) Elem() ConnectionLockConfigOutput {
	return o.ApplyT(func(v *ConnectionLockConfig) ConnectionLockConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionLockConfig
		return ret
	}).(ConnectionLockConfigOutput)
}

// Indicates whether or not the connection is locked.
func (o ConnectionLockConfigPtrOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionLockConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Locked
	}).(pulumi.BoolPtrOutput)
}

// Describes why a connection is locked.
func (o ConnectionLockConfigPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionLockConfig) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

type ConnectionLogConfig struct {
	// Enabled represents whether logging is enabled or not for a connection.
	Enabled bool `pulumi:"enabled"`
}

// ConnectionLogConfigInput is an input type that accepts ConnectionLogConfigArgs and ConnectionLogConfigOutput values.
// You can construct a concrete instance of `ConnectionLogConfigInput` via:
//
//	ConnectionLogConfigArgs{...}
type ConnectionLogConfigInput interface {
	pulumi.Input

	ToConnectionLogConfigOutput() ConnectionLogConfigOutput
	ToConnectionLogConfigOutputWithContext(context.Context) ConnectionLogConfigOutput
}

type ConnectionLogConfigArgs struct {
	// Enabled represents whether logging is enabled or not for a connection.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ConnectionLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionLogConfig)(nil)).Elem()
}

func (i ConnectionLogConfigArgs) ToConnectionLogConfigOutput() ConnectionLogConfigOutput {
	return i.ToConnectionLogConfigOutputWithContext(context.Background())
}

func (i ConnectionLogConfigArgs) ToConnectionLogConfigOutputWithContext(ctx context.Context) ConnectionLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionLogConfigOutput)
}

func (i ConnectionLogConfigArgs) ToConnectionLogConfigPtrOutput() ConnectionLogConfigPtrOutput {
	return i.ToConnectionLogConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionLogConfigArgs) ToConnectionLogConfigPtrOutputWithContext(ctx context.Context) ConnectionLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionLogConfigOutput).ToConnectionLogConfigPtrOutputWithContext(ctx)
}

// ConnectionLogConfigPtrInput is an input type that accepts ConnectionLogConfigArgs, ConnectionLogConfigPtr and ConnectionLogConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionLogConfigPtrInput` via:
//
//	        ConnectionLogConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionLogConfigPtrInput interface {
	pulumi.Input

	ToConnectionLogConfigPtrOutput() ConnectionLogConfigPtrOutput
	ToConnectionLogConfigPtrOutputWithContext(context.Context) ConnectionLogConfigPtrOutput
}

type connectionLogConfigPtrType ConnectionLogConfigArgs

func ConnectionLogConfigPtr(v *ConnectionLogConfigArgs) ConnectionLogConfigPtrInput {
	return (*connectionLogConfigPtrType)(v)
}

func (*connectionLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionLogConfig)(nil)).Elem()
}

func (i *connectionLogConfigPtrType) ToConnectionLogConfigPtrOutput() ConnectionLogConfigPtrOutput {
	return i.ToConnectionLogConfigPtrOutputWithContext(context.Background())
}

func (i *connectionLogConfigPtrType) ToConnectionLogConfigPtrOutputWithContext(ctx context.Context) ConnectionLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionLogConfigPtrOutput)
}

type ConnectionLogConfigOutput struct{ *pulumi.OutputState }

func (ConnectionLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionLogConfig)(nil)).Elem()
}

func (o ConnectionLogConfigOutput) ToConnectionLogConfigOutput() ConnectionLogConfigOutput {
	return o
}

func (o ConnectionLogConfigOutput) ToConnectionLogConfigOutputWithContext(ctx context.Context) ConnectionLogConfigOutput {
	return o
}

func (o ConnectionLogConfigOutput) ToConnectionLogConfigPtrOutput() ConnectionLogConfigPtrOutput {
	return o.ToConnectionLogConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionLogConfigOutput) ToConnectionLogConfigPtrOutputWithContext(ctx context.Context) ConnectionLogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionLogConfig) *ConnectionLogConfig {
		return &v
	}).(ConnectionLogConfigPtrOutput)
}

// Enabled represents whether logging is enabled or not for a connection.
func (o ConnectionLogConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectionLogConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ConnectionLogConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionLogConfig)(nil)).Elem()
}

func (o ConnectionLogConfigPtrOutput) ToConnectionLogConfigPtrOutput() ConnectionLogConfigPtrOutput {
	return o
}

func (o ConnectionLogConfigPtrOutput) ToConnectionLogConfigPtrOutputWithContext(ctx context.Context) ConnectionLogConfigPtrOutput {
	return o
}

func (o ConnectionLogConfigPtrOutput) Elem() ConnectionLogConfigOutput {
	return o.ApplyT(func(v *ConnectionLogConfig) ConnectionLogConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionLogConfig
		return ret
	}).(ConnectionLogConfigOutput)
}

// Enabled represents whether logging is enabled or not for a connection.
func (o ConnectionLogConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionLogConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ConnectionNodeConfig struct {
	// Minimum number of nodes in the runtime nodes.
	MaxNodeCount *int `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the runtime nodes.
	MinNodeCount *int `pulumi:"minNodeCount"`
}

// ConnectionNodeConfigInput is an input type that accepts ConnectionNodeConfigArgs and ConnectionNodeConfigOutput values.
// You can construct a concrete instance of `ConnectionNodeConfigInput` via:
//
//	ConnectionNodeConfigArgs{...}
type ConnectionNodeConfigInput interface {
	pulumi.Input

	ToConnectionNodeConfigOutput() ConnectionNodeConfigOutput
	ToConnectionNodeConfigOutputWithContext(context.Context) ConnectionNodeConfigOutput
}

type ConnectionNodeConfigArgs struct {
	// Minimum number of nodes in the runtime nodes.
	MaxNodeCount pulumi.IntPtrInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the runtime nodes.
	MinNodeCount pulumi.IntPtrInput `pulumi:"minNodeCount"`
}

func (ConnectionNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionNodeConfig)(nil)).Elem()
}

func (i ConnectionNodeConfigArgs) ToConnectionNodeConfigOutput() ConnectionNodeConfigOutput {
	return i.ToConnectionNodeConfigOutputWithContext(context.Background())
}

func (i ConnectionNodeConfigArgs) ToConnectionNodeConfigOutputWithContext(ctx context.Context) ConnectionNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionNodeConfigOutput)
}

func (i ConnectionNodeConfigArgs) ToConnectionNodeConfigPtrOutput() ConnectionNodeConfigPtrOutput {
	return i.ToConnectionNodeConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionNodeConfigArgs) ToConnectionNodeConfigPtrOutputWithContext(ctx context.Context) ConnectionNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionNodeConfigOutput).ToConnectionNodeConfigPtrOutputWithContext(ctx)
}

// ConnectionNodeConfigPtrInput is an input type that accepts ConnectionNodeConfigArgs, ConnectionNodeConfigPtr and ConnectionNodeConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionNodeConfigPtrInput` via:
//
//	        ConnectionNodeConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionNodeConfigPtrInput interface {
	pulumi.Input

	ToConnectionNodeConfigPtrOutput() ConnectionNodeConfigPtrOutput
	ToConnectionNodeConfigPtrOutputWithContext(context.Context) ConnectionNodeConfigPtrOutput
}

type connectionNodeConfigPtrType ConnectionNodeConfigArgs

func ConnectionNodeConfigPtr(v *ConnectionNodeConfigArgs) ConnectionNodeConfigPtrInput {
	return (*connectionNodeConfigPtrType)(v)
}

func (*connectionNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionNodeConfig)(nil)).Elem()
}

func (i *connectionNodeConfigPtrType) ToConnectionNodeConfigPtrOutput() ConnectionNodeConfigPtrOutput {
	return i.ToConnectionNodeConfigPtrOutputWithContext(context.Background())
}

func (i *connectionNodeConfigPtrType) ToConnectionNodeConfigPtrOutputWithContext(ctx context.Context) ConnectionNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionNodeConfigPtrOutput)
}

type ConnectionNodeConfigOutput struct{ *pulumi.OutputState }

func (ConnectionNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionNodeConfig)(nil)).Elem()
}

func (o ConnectionNodeConfigOutput) ToConnectionNodeConfigOutput() ConnectionNodeConfigOutput {
	return o
}

func (o ConnectionNodeConfigOutput) ToConnectionNodeConfigOutputWithContext(ctx context.Context) ConnectionNodeConfigOutput {
	return o
}

func (o ConnectionNodeConfigOutput) ToConnectionNodeConfigPtrOutput() ConnectionNodeConfigPtrOutput {
	return o.ToConnectionNodeConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionNodeConfigOutput) ToConnectionNodeConfigPtrOutputWithContext(ctx context.Context) ConnectionNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionNodeConfig) *ConnectionNodeConfig {
		return &v
	}).(ConnectionNodeConfigPtrOutput)
}

// Minimum number of nodes in the runtime nodes.
func (o ConnectionNodeConfigOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionNodeConfig) *int { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes in the runtime nodes.
func (o ConnectionNodeConfigOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionNodeConfig) *int { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

type ConnectionNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionNodeConfig)(nil)).Elem()
}

func (o ConnectionNodeConfigPtrOutput) ToConnectionNodeConfigPtrOutput() ConnectionNodeConfigPtrOutput {
	return o
}

func (o ConnectionNodeConfigPtrOutput) ToConnectionNodeConfigPtrOutputWithContext(ctx context.Context) ConnectionNodeConfigPtrOutput {
	return o
}

func (o ConnectionNodeConfigPtrOutput) Elem() ConnectionNodeConfigOutput {
	return o.ApplyT(func(v *ConnectionNodeConfig) ConnectionNodeConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionNodeConfig
		return ret
	}).(ConnectionNodeConfigOutput)
}

// Minimum number of nodes in the runtime nodes.
func (o ConnectionNodeConfigPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes in the runtime nodes.
func (o ConnectionNodeConfigPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

type ConnectionSslConfig struct {
	// Additional SSL related field values.
	// Structure is documented below.
	AdditionalVariables []ConnectionSslConfigAdditionalVariable `pulumi:"additionalVariables"`
	// Type of Client Cert (PEM/JKS/.. etc.)
	// Possible values are: `PEM`.
	ClientCertType *string `pulumi:"clientCertType"`
	// Client Certificate
	// Structure is documented below.
	ClientCertificate *ConnectionSslConfigClientCertificate `pulumi:"clientCertificate"`
	// Client Private Key
	// Structure is documented below.
	ClientPrivateKey *ConnectionSslConfigClientPrivateKey `pulumi:"clientPrivateKey"`
	// Secret containing the passphrase protecting the Client Private Key
	// Structure is documented below.
	ClientPrivateKeyPass *ConnectionSslConfigClientPrivateKeyPass `pulumi:"clientPrivateKeyPass"`
	// Private Server Certificate. Needs to be specified if trust model is PRIVATE.
	// Structure is documented below.
	PrivateServerCertificate *ConnectionSslConfigPrivateServerCertificate `pulumi:"privateServerCertificate"`
	// Type of Server Cert (PEM/JKS/.. etc.)
	// Possible values are: `PEM`.
	ServerCertType *string `pulumi:"serverCertType"`
	// Enum for Trust Model
	// Possible values are: `PUBLIC`, `PRIVATE`, `INSECURE`.
	TrustModel *string `pulumi:"trustModel"`
	// Enum for controlling the SSL Type (TLS/MTLS)
	// Possible values are: `TLS`, `MTLS`.
	Type string `pulumi:"type"`
	// Bool for enabling SSL
	UseSsl *bool `pulumi:"useSsl"`
}

// ConnectionSslConfigInput is an input type that accepts ConnectionSslConfigArgs and ConnectionSslConfigOutput values.
// You can construct a concrete instance of `ConnectionSslConfigInput` via:
//
//	ConnectionSslConfigArgs{...}
type ConnectionSslConfigInput interface {
	pulumi.Input

	ToConnectionSslConfigOutput() ConnectionSslConfigOutput
	ToConnectionSslConfigOutputWithContext(context.Context) ConnectionSslConfigOutput
}

type ConnectionSslConfigArgs struct {
	// Additional SSL related field values.
	// Structure is documented below.
	AdditionalVariables ConnectionSslConfigAdditionalVariableArrayInput `pulumi:"additionalVariables"`
	// Type of Client Cert (PEM/JKS/.. etc.)
	// Possible values are: `PEM`.
	ClientCertType pulumi.StringPtrInput `pulumi:"clientCertType"`
	// Client Certificate
	// Structure is documented below.
	ClientCertificate ConnectionSslConfigClientCertificatePtrInput `pulumi:"clientCertificate"`
	// Client Private Key
	// Structure is documented below.
	ClientPrivateKey ConnectionSslConfigClientPrivateKeyPtrInput `pulumi:"clientPrivateKey"`
	// Secret containing the passphrase protecting the Client Private Key
	// Structure is documented below.
	ClientPrivateKeyPass ConnectionSslConfigClientPrivateKeyPassPtrInput `pulumi:"clientPrivateKeyPass"`
	// Private Server Certificate. Needs to be specified if trust model is PRIVATE.
	// Structure is documented below.
	PrivateServerCertificate ConnectionSslConfigPrivateServerCertificatePtrInput `pulumi:"privateServerCertificate"`
	// Type of Server Cert (PEM/JKS/.. etc.)
	// Possible values are: `PEM`.
	ServerCertType pulumi.StringPtrInput `pulumi:"serverCertType"`
	// Enum for Trust Model
	// Possible values are: `PUBLIC`, `PRIVATE`, `INSECURE`.
	TrustModel pulumi.StringPtrInput `pulumi:"trustModel"`
	// Enum for controlling the SSL Type (TLS/MTLS)
	// Possible values are: `TLS`, `MTLS`.
	Type pulumi.StringInput `pulumi:"type"`
	// Bool for enabling SSL
	UseSsl pulumi.BoolPtrInput `pulumi:"useSsl"`
}

func (ConnectionSslConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfig)(nil)).Elem()
}

func (i ConnectionSslConfigArgs) ToConnectionSslConfigOutput() ConnectionSslConfigOutput {
	return i.ToConnectionSslConfigOutputWithContext(context.Background())
}

func (i ConnectionSslConfigArgs) ToConnectionSslConfigOutputWithContext(ctx context.Context) ConnectionSslConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigOutput)
}

func (i ConnectionSslConfigArgs) ToConnectionSslConfigPtrOutput() ConnectionSslConfigPtrOutput {
	return i.ToConnectionSslConfigPtrOutputWithContext(context.Background())
}

func (i ConnectionSslConfigArgs) ToConnectionSslConfigPtrOutputWithContext(ctx context.Context) ConnectionSslConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigOutput).ToConnectionSslConfigPtrOutputWithContext(ctx)
}

// ConnectionSslConfigPtrInput is an input type that accepts ConnectionSslConfigArgs, ConnectionSslConfigPtr and ConnectionSslConfigPtrOutput values.
// You can construct a concrete instance of `ConnectionSslConfigPtrInput` via:
//
//	        ConnectionSslConfigArgs{...}
//
//	or:
//
//	        nil
type ConnectionSslConfigPtrInput interface {
	pulumi.Input

	ToConnectionSslConfigPtrOutput() ConnectionSslConfigPtrOutput
	ToConnectionSslConfigPtrOutputWithContext(context.Context) ConnectionSslConfigPtrOutput
}

type connectionSslConfigPtrType ConnectionSslConfigArgs

func ConnectionSslConfigPtr(v *ConnectionSslConfigArgs) ConnectionSslConfigPtrInput {
	return (*connectionSslConfigPtrType)(v)
}

func (*connectionSslConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfig)(nil)).Elem()
}

func (i *connectionSslConfigPtrType) ToConnectionSslConfigPtrOutput() ConnectionSslConfigPtrOutput {
	return i.ToConnectionSslConfigPtrOutputWithContext(context.Background())
}

func (i *connectionSslConfigPtrType) ToConnectionSslConfigPtrOutputWithContext(ctx context.Context) ConnectionSslConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigPtrOutput)
}

type ConnectionSslConfigOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfig)(nil)).Elem()
}

func (o ConnectionSslConfigOutput) ToConnectionSslConfigOutput() ConnectionSslConfigOutput {
	return o
}

func (o ConnectionSslConfigOutput) ToConnectionSslConfigOutputWithContext(ctx context.Context) ConnectionSslConfigOutput {
	return o
}

func (o ConnectionSslConfigOutput) ToConnectionSslConfigPtrOutput() ConnectionSslConfigPtrOutput {
	return o.ToConnectionSslConfigPtrOutputWithContext(context.Background())
}

func (o ConnectionSslConfigOutput) ToConnectionSslConfigPtrOutputWithContext(ctx context.Context) ConnectionSslConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSslConfig) *ConnectionSslConfig {
		return &v
	}).(ConnectionSslConfigPtrOutput)
}

// Additional SSL related field values.
// Structure is documented below.
func (o ConnectionSslConfigOutput) AdditionalVariables() ConnectionSslConfigAdditionalVariableArrayOutput {
	return o.ApplyT(func(v ConnectionSslConfig) []ConnectionSslConfigAdditionalVariable { return v.AdditionalVariables }).(ConnectionSslConfigAdditionalVariableArrayOutput)
}

// Type of Client Cert (PEM/JKS/.. etc.)
// Possible values are: `PEM`.
func (o ConnectionSslConfigOutput) ClientCertType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfig) *string { return v.ClientCertType }).(pulumi.StringPtrOutput)
}

// Client Certificate
// Structure is documented below.
func (o ConnectionSslConfigOutput) ClientCertificate() ConnectionSslConfigClientCertificatePtrOutput {
	return o.ApplyT(func(v ConnectionSslConfig) *ConnectionSslConfigClientCertificate { return v.ClientCertificate }).(ConnectionSslConfigClientCertificatePtrOutput)
}

// Client Private Key
// Structure is documented below.
func (o ConnectionSslConfigOutput) ClientPrivateKey() ConnectionSslConfigClientPrivateKeyPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfig) *ConnectionSslConfigClientPrivateKey { return v.ClientPrivateKey }).(ConnectionSslConfigClientPrivateKeyPtrOutput)
}

// Secret containing the passphrase protecting the Client Private Key
// Structure is documented below.
func (o ConnectionSslConfigOutput) ClientPrivateKeyPass() ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfig) *ConnectionSslConfigClientPrivateKeyPass { return v.ClientPrivateKeyPass }).(ConnectionSslConfigClientPrivateKeyPassPtrOutput)
}

// Private Server Certificate. Needs to be specified if trust model is PRIVATE.
// Structure is documented below.
func (o ConnectionSslConfigOutput) PrivateServerCertificate() ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return o.ApplyT(func(v ConnectionSslConfig) *ConnectionSslConfigPrivateServerCertificate {
		return v.PrivateServerCertificate
	}).(ConnectionSslConfigPrivateServerCertificatePtrOutput)
}

// Type of Server Cert (PEM/JKS/.. etc.)
// Possible values are: `PEM`.
func (o ConnectionSslConfigOutput) ServerCertType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfig) *string { return v.ServerCertType }).(pulumi.StringPtrOutput)
}

// Enum for Trust Model
// Possible values are: `PUBLIC`, `PRIVATE`, `INSECURE`.
func (o ConnectionSslConfigOutput) TrustModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfig) *string { return v.TrustModel }).(pulumi.StringPtrOutput)
}

// Enum for controlling the SSL Type (TLS/MTLS)
// Possible values are: `TLS`, `MTLS`.
func (o ConnectionSslConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSslConfig) string { return v.Type }).(pulumi.StringOutput)
}

// Bool for enabling SSL
func (o ConnectionSslConfigOutput) UseSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfig) *bool { return v.UseSsl }).(pulumi.BoolPtrOutput)
}

type ConnectionSslConfigPtrOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfig)(nil)).Elem()
}

func (o ConnectionSslConfigPtrOutput) ToConnectionSslConfigPtrOutput() ConnectionSslConfigPtrOutput {
	return o
}

func (o ConnectionSslConfigPtrOutput) ToConnectionSslConfigPtrOutputWithContext(ctx context.Context) ConnectionSslConfigPtrOutput {
	return o
}

func (o ConnectionSslConfigPtrOutput) Elem() ConnectionSslConfigOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) ConnectionSslConfig {
		if v != nil {
			return *v
		}
		var ret ConnectionSslConfig
		return ret
	}).(ConnectionSslConfigOutput)
}

// Additional SSL related field values.
// Structure is documented below.
func (o ConnectionSslConfigPtrOutput) AdditionalVariables() ConnectionSslConfigAdditionalVariableArrayOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) []ConnectionSslConfigAdditionalVariable {
		if v == nil {
			return nil
		}
		return v.AdditionalVariables
	}).(ConnectionSslConfigAdditionalVariableArrayOutput)
}

// Type of Client Cert (PEM/JKS/.. etc.)
// Possible values are: `PEM`.
func (o ConnectionSslConfigPtrOutput) ClientCertType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertType
	}).(pulumi.StringPtrOutput)
}

// Client Certificate
// Structure is documented below.
func (o ConnectionSslConfigPtrOutput) ClientCertificate() ConnectionSslConfigClientCertificatePtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) *ConnectionSslConfigClientCertificate {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(ConnectionSslConfigClientCertificatePtrOutput)
}

// Client Private Key
// Structure is documented below.
func (o ConnectionSslConfigPtrOutput) ClientPrivateKey() ConnectionSslConfigClientPrivateKeyPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) *ConnectionSslConfigClientPrivateKey {
		if v == nil {
			return nil
		}
		return v.ClientPrivateKey
	}).(ConnectionSslConfigClientPrivateKeyPtrOutput)
}

// Secret containing the passphrase protecting the Client Private Key
// Structure is documented below.
func (o ConnectionSslConfigPtrOutput) ClientPrivateKeyPass() ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) *ConnectionSslConfigClientPrivateKeyPass {
		if v == nil {
			return nil
		}
		return v.ClientPrivateKeyPass
	}).(ConnectionSslConfigClientPrivateKeyPassPtrOutput)
}

// Private Server Certificate. Needs to be specified if trust model is PRIVATE.
// Structure is documented below.
func (o ConnectionSslConfigPtrOutput) PrivateServerCertificate() ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) *ConnectionSslConfigPrivateServerCertificate {
		if v == nil {
			return nil
		}
		return v.PrivateServerCertificate
	}).(ConnectionSslConfigPrivateServerCertificatePtrOutput)
}

// Type of Server Cert (PEM/JKS/.. etc.)
// Possible values are: `PEM`.
func (o ConnectionSslConfigPtrOutput) ServerCertType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServerCertType
	}).(pulumi.StringPtrOutput)
}

// Enum for Trust Model
// Possible values are: `PUBLIC`, `PRIVATE`, `INSECURE`.
func (o ConnectionSslConfigPtrOutput) TrustModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) *string {
		if v == nil {
			return nil
		}
		return v.TrustModel
	}).(pulumi.StringPtrOutput)
}

// Enum for controlling the SSL Type (TLS/MTLS)
// Possible values are: `TLS`, `MTLS`.
func (o ConnectionSslConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Bool for enabling SSL
func (o ConnectionSslConfigPtrOutput) UseSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseSsl
	}).(pulumi.BoolPtrOutput)
}

type ConnectionSslConfigAdditionalVariable struct {
	// Boolean Value of configVariable.
	BooleanValue *bool `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue *ConnectionSslConfigAdditionalVariableEncryptionKeyValue `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable.
	IntegerValue *int `pulumi:"integerValue"`
	// Key for the configVariable
	Key string `pulumi:"key"`
	// Secret value of configVariable
	// Structure is documented below.
	SecretValue *ConnectionSslConfigAdditionalVariableSecretValue `pulumi:"secretValue"`
	// String Value of configVariabley.
	StringValue *string `pulumi:"stringValue"`
}

// ConnectionSslConfigAdditionalVariableInput is an input type that accepts ConnectionSslConfigAdditionalVariableArgs and ConnectionSslConfigAdditionalVariableOutput values.
// You can construct a concrete instance of `ConnectionSslConfigAdditionalVariableInput` via:
//
//	ConnectionSslConfigAdditionalVariableArgs{...}
type ConnectionSslConfigAdditionalVariableInput interface {
	pulumi.Input

	ToConnectionSslConfigAdditionalVariableOutput() ConnectionSslConfigAdditionalVariableOutput
	ToConnectionSslConfigAdditionalVariableOutputWithContext(context.Context) ConnectionSslConfigAdditionalVariableOutput
}

type ConnectionSslConfigAdditionalVariableArgs struct {
	// Boolean Value of configVariable.
	BooleanValue pulumi.BoolPtrInput `pulumi:"booleanValue"`
	// Encription key value of configVariable.
	// Structure is documented below.
	EncryptionKeyValue ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrInput `pulumi:"encryptionKeyValue"`
	// Integer Value of configVariable.
	IntegerValue pulumi.IntPtrInput `pulumi:"integerValue"`
	// Key for the configVariable
	Key pulumi.StringInput `pulumi:"key"`
	// Secret value of configVariable
	// Structure is documented below.
	SecretValue ConnectionSslConfigAdditionalVariableSecretValuePtrInput `pulumi:"secretValue"`
	// String Value of configVariabley.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (ConnectionSslConfigAdditionalVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigAdditionalVariable)(nil)).Elem()
}

func (i ConnectionSslConfigAdditionalVariableArgs) ToConnectionSslConfigAdditionalVariableOutput() ConnectionSslConfigAdditionalVariableOutput {
	return i.ToConnectionSslConfigAdditionalVariableOutputWithContext(context.Background())
}

func (i ConnectionSslConfigAdditionalVariableArgs) ToConnectionSslConfigAdditionalVariableOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigAdditionalVariableOutput)
}

// ConnectionSslConfigAdditionalVariableArrayInput is an input type that accepts ConnectionSslConfigAdditionalVariableArray and ConnectionSslConfigAdditionalVariableArrayOutput values.
// You can construct a concrete instance of `ConnectionSslConfigAdditionalVariableArrayInput` via:
//
//	ConnectionSslConfigAdditionalVariableArray{ ConnectionSslConfigAdditionalVariableArgs{...} }
type ConnectionSslConfigAdditionalVariableArrayInput interface {
	pulumi.Input

	ToConnectionSslConfigAdditionalVariableArrayOutput() ConnectionSslConfigAdditionalVariableArrayOutput
	ToConnectionSslConfigAdditionalVariableArrayOutputWithContext(context.Context) ConnectionSslConfigAdditionalVariableArrayOutput
}

type ConnectionSslConfigAdditionalVariableArray []ConnectionSslConfigAdditionalVariableInput

func (ConnectionSslConfigAdditionalVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSslConfigAdditionalVariable)(nil)).Elem()
}

func (i ConnectionSslConfigAdditionalVariableArray) ToConnectionSslConfigAdditionalVariableArrayOutput() ConnectionSslConfigAdditionalVariableArrayOutput {
	return i.ToConnectionSslConfigAdditionalVariableArrayOutputWithContext(context.Background())
}

func (i ConnectionSslConfigAdditionalVariableArray) ToConnectionSslConfigAdditionalVariableArrayOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigAdditionalVariableArrayOutput)
}

type ConnectionSslConfigAdditionalVariableOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigAdditionalVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigAdditionalVariable)(nil)).Elem()
}

func (o ConnectionSslConfigAdditionalVariableOutput) ToConnectionSslConfigAdditionalVariableOutput() ConnectionSslConfigAdditionalVariableOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableOutput) ToConnectionSslConfigAdditionalVariableOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableOutput {
	return o
}

// Boolean Value of configVariable.
func (o ConnectionSslConfigAdditionalVariableOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfigAdditionalVariable) *bool { return v.BooleanValue }).(pulumi.BoolPtrOutput)
}

// Encription key value of configVariable.
// Structure is documented below.
func (o ConnectionSslConfigAdditionalVariableOutput) EncryptionKeyValue() ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ApplyT(func(v ConnectionSslConfigAdditionalVariable) *ConnectionSslConfigAdditionalVariableEncryptionKeyValue {
		return v.EncryptionKeyValue
	}).(ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

// Integer Value of configVariable.
func (o ConnectionSslConfigAdditionalVariableOutput) IntegerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfigAdditionalVariable) *int { return v.IntegerValue }).(pulumi.IntPtrOutput)
}

// Key for the configVariable
func (o ConnectionSslConfigAdditionalVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSslConfigAdditionalVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Secret value of configVariable
// Structure is documented below.
func (o ConnectionSslConfigAdditionalVariableOutput) SecretValue() ConnectionSslConfigAdditionalVariableSecretValuePtrOutput {
	return o.ApplyT(func(v ConnectionSslConfigAdditionalVariable) *ConnectionSslConfigAdditionalVariableSecretValue {
		return v.SecretValue
	}).(ConnectionSslConfigAdditionalVariableSecretValuePtrOutput)
}

// String Value of configVariabley.
func (o ConnectionSslConfigAdditionalVariableOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfigAdditionalVariable) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type ConnectionSslConfigAdditionalVariableArrayOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigAdditionalVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionSslConfigAdditionalVariable)(nil)).Elem()
}

func (o ConnectionSslConfigAdditionalVariableArrayOutput) ToConnectionSslConfigAdditionalVariableArrayOutput() ConnectionSslConfigAdditionalVariableArrayOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableArrayOutput) ToConnectionSslConfigAdditionalVariableArrayOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableArrayOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableArrayOutput) Index(i pulumi.IntInput) ConnectionSslConfigAdditionalVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionSslConfigAdditionalVariable {
		return vs[0].([]ConnectionSslConfigAdditionalVariable)[vs[1].(int)]
	}).(ConnectionSslConfigAdditionalVariableOutput)
}

type ConnectionSslConfigAdditionalVariableEncryptionKeyValue struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type *string `pulumi:"type"`
}

// ConnectionSslConfigAdditionalVariableEncryptionKeyValueInput is an input type that accepts ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs and ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput values.
// You can construct a concrete instance of `ConnectionSslConfigAdditionalVariableEncryptionKeyValueInput` via:
//
//	ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs{...}
type ConnectionSslConfigAdditionalVariableEncryptionKeyValueInput interface {
	pulumi.Input

	ToConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput
	ToConnectionSslConfigAdditionalVariableEncryptionKeyValueOutputWithContext(context.Context) ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput
}

type ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs struct {
	// The [KMS key name] with which the content of the Operation is encrypted. The expected
	// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// Will be empty string if google managed.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
	// Type of Encryption Key
	// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (i ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput {
	return i.ToConnectionSslConfigAdditionalVariableEncryptionKeyValueOutputWithContext(context.Background())
}

func (i ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionSslConfigAdditionalVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput)
}

func (i ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs) ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput).ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx)
}

// ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrInput is an input type that accepts ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs, ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtr and ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput values.
// You can construct a concrete instance of `ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrInput` via:
//
//	        ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrInput interface {
	pulumi.Input

	ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput
	ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Context) ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput
}

type connectionSslConfigAdditionalVariableEncryptionKeyValuePtrType ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs

func ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtr(v *ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs) ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrInput {
	return (*connectionSslConfigAdditionalVariableEncryptionKeyValuePtrType)(v)
}

func (*connectionSslConfigAdditionalVariableEncryptionKeyValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (i *connectionSslConfigAdditionalVariableEncryptionKeyValuePtrType) ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return i.ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (i *connectionSslConfigAdditionalVariableEncryptionKeyValuePtrType) ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

type ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput() ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionSslConfigAdditionalVariableEncryptionKeyValueOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(context.Background())
}

func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput) ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSslConfigAdditionalVariableEncryptionKeyValue) *ConnectionSslConfigAdditionalVariableEncryptionKeyValue {
		return &v
	}).(ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfigAdditionalVariableEncryptionKeyValue) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSslConfigAdditionalVariableEncryptionKeyValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigAdditionalVariableEncryptionKeyValue)(nil)).Elem()
}

func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput) ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput() ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput) ToConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput) Elem() ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput {
	return o.ApplyT(func(v *ConnectionSslConfigAdditionalVariableEncryptionKeyValue) ConnectionSslConfigAdditionalVariableEncryptionKeyValue {
		if v != nil {
			return *v
		}
		var ret ConnectionSslConfigAdditionalVariableEncryptionKeyValue
		return ret
	}).(ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput)
}

// The [KMS key name] with which the content of the Operation is encrypted. The expected
// format: projects/*/locations/*/keyRings/*/cryptoKeys/*.
// Will be empty string if google managed.
func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfigAdditionalVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Type of Encryption Key
// Possible values are: `GOOGLE_MANAGED`, `CUSTOMER_MANAGED`.
func (o ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfigAdditionalVariableEncryptionKeyValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectionSslConfigAdditionalVariableSecretValue struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionSslConfigAdditionalVariableSecretValueInput is an input type that accepts ConnectionSslConfigAdditionalVariableSecretValueArgs and ConnectionSslConfigAdditionalVariableSecretValueOutput values.
// You can construct a concrete instance of `ConnectionSslConfigAdditionalVariableSecretValueInput` via:
//
//	ConnectionSslConfigAdditionalVariableSecretValueArgs{...}
type ConnectionSslConfigAdditionalVariableSecretValueInput interface {
	pulumi.Input

	ToConnectionSslConfigAdditionalVariableSecretValueOutput() ConnectionSslConfigAdditionalVariableSecretValueOutput
	ToConnectionSslConfigAdditionalVariableSecretValueOutputWithContext(context.Context) ConnectionSslConfigAdditionalVariableSecretValueOutput
}

type ConnectionSslConfigAdditionalVariableSecretValueArgs struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionSslConfigAdditionalVariableSecretValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (i ConnectionSslConfigAdditionalVariableSecretValueArgs) ToConnectionSslConfigAdditionalVariableSecretValueOutput() ConnectionSslConfigAdditionalVariableSecretValueOutput {
	return i.ToConnectionSslConfigAdditionalVariableSecretValueOutputWithContext(context.Background())
}

func (i ConnectionSslConfigAdditionalVariableSecretValueArgs) ToConnectionSslConfigAdditionalVariableSecretValueOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableSecretValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigAdditionalVariableSecretValueOutput)
}

func (i ConnectionSslConfigAdditionalVariableSecretValueArgs) ToConnectionSslConfigAdditionalVariableSecretValuePtrOutput() ConnectionSslConfigAdditionalVariableSecretValuePtrOutput {
	return i.ToConnectionSslConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i ConnectionSslConfigAdditionalVariableSecretValueArgs) ToConnectionSslConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigAdditionalVariableSecretValueOutput).ToConnectionSslConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx)
}

// ConnectionSslConfigAdditionalVariableSecretValuePtrInput is an input type that accepts ConnectionSslConfigAdditionalVariableSecretValueArgs, ConnectionSslConfigAdditionalVariableSecretValuePtr and ConnectionSslConfigAdditionalVariableSecretValuePtrOutput values.
// You can construct a concrete instance of `ConnectionSslConfigAdditionalVariableSecretValuePtrInput` via:
//
//	        ConnectionSslConfigAdditionalVariableSecretValueArgs{...}
//
//	or:
//
//	        nil
type ConnectionSslConfigAdditionalVariableSecretValuePtrInput interface {
	pulumi.Input

	ToConnectionSslConfigAdditionalVariableSecretValuePtrOutput() ConnectionSslConfigAdditionalVariableSecretValuePtrOutput
	ToConnectionSslConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Context) ConnectionSslConfigAdditionalVariableSecretValuePtrOutput
}

type connectionSslConfigAdditionalVariableSecretValuePtrType ConnectionSslConfigAdditionalVariableSecretValueArgs

func ConnectionSslConfigAdditionalVariableSecretValuePtr(v *ConnectionSslConfigAdditionalVariableSecretValueArgs) ConnectionSslConfigAdditionalVariableSecretValuePtrInput {
	return (*connectionSslConfigAdditionalVariableSecretValuePtrType)(v)
}

func (*connectionSslConfigAdditionalVariableSecretValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (i *connectionSslConfigAdditionalVariableSecretValuePtrType) ToConnectionSslConfigAdditionalVariableSecretValuePtrOutput() ConnectionSslConfigAdditionalVariableSecretValuePtrOutput {
	return i.ToConnectionSslConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (i *connectionSslConfigAdditionalVariableSecretValuePtrType) ToConnectionSslConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableSecretValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigAdditionalVariableSecretValuePtrOutput)
}

type ConnectionSslConfigAdditionalVariableSecretValueOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigAdditionalVariableSecretValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (o ConnectionSslConfigAdditionalVariableSecretValueOutput) ToConnectionSslConfigAdditionalVariableSecretValueOutput() ConnectionSslConfigAdditionalVariableSecretValueOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableSecretValueOutput) ToConnectionSslConfigAdditionalVariableSecretValueOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableSecretValueOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableSecretValueOutput) ToConnectionSslConfigAdditionalVariableSecretValuePtrOutput() ConnectionSslConfigAdditionalVariableSecretValuePtrOutput {
	return o.ToConnectionSslConfigAdditionalVariableSecretValuePtrOutputWithContext(context.Background())
}

func (o ConnectionSslConfigAdditionalVariableSecretValueOutput) ToConnectionSslConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableSecretValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSslConfigAdditionalVariableSecretValue) *ConnectionSslConfigAdditionalVariableSecretValue {
		return &v
	}).(ConnectionSslConfigAdditionalVariableSecretValuePtrOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigAdditionalVariableSecretValueOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSslConfigAdditionalVariableSecretValue) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionSslConfigAdditionalVariableSecretValuePtrOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigAdditionalVariableSecretValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigAdditionalVariableSecretValue)(nil)).Elem()
}

func (o ConnectionSslConfigAdditionalVariableSecretValuePtrOutput) ToConnectionSslConfigAdditionalVariableSecretValuePtrOutput() ConnectionSslConfigAdditionalVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableSecretValuePtrOutput) ToConnectionSslConfigAdditionalVariableSecretValuePtrOutputWithContext(ctx context.Context) ConnectionSslConfigAdditionalVariableSecretValuePtrOutput {
	return o
}

func (o ConnectionSslConfigAdditionalVariableSecretValuePtrOutput) Elem() ConnectionSslConfigAdditionalVariableSecretValueOutput {
	return o.ApplyT(func(v *ConnectionSslConfigAdditionalVariableSecretValue) ConnectionSslConfigAdditionalVariableSecretValue {
		if v != nil {
			return *v
		}
		var ret ConnectionSslConfigAdditionalVariableSecretValue
		return ret
	}).(ConnectionSslConfigAdditionalVariableSecretValueOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigAdditionalVariableSecretValuePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfigAdditionalVariableSecretValue) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionSslConfigClientCertificate struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionSslConfigClientCertificateInput is an input type that accepts ConnectionSslConfigClientCertificateArgs and ConnectionSslConfigClientCertificateOutput values.
// You can construct a concrete instance of `ConnectionSslConfigClientCertificateInput` via:
//
//	ConnectionSslConfigClientCertificateArgs{...}
type ConnectionSslConfigClientCertificateInput interface {
	pulumi.Input

	ToConnectionSslConfigClientCertificateOutput() ConnectionSslConfigClientCertificateOutput
	ToConnectionSslConfigClientCertificateOutputWithContext(context.Context) ConnectionSslConfigClientCertificateOutput
}

type ConnectionSslConfigClientCertificateArgs struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionSslConfigClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigClientCertificate)(nil)).Elem()
}

func (i ConnectionSslConfigClientCertificateArgs) ToConnectionSslConfigClientCertificateOutput() ConnectionSslConfigClientCertificateOutput {
	return i.ToConnectionSslConfigClientCertificateOutputWithContext(context.Background())
}

func (i ConnectionSslConfigClientCertificateArgs) ToConnectionSslConfigClientCertificateOutputWithContext(ctx context.Context) ConnectionSslConfigClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigClientCertificateOutput)
}

func (i ConnectionSslConfigClientCertificateArgs) ToConnectionSslConfigClientCertificatePtrOutput() ConnectionSslConfigClientCertificatePtrOutput {
	return i.ToConnectionSslConfigClientCertificatePtrOutputWithContext(context.Background())
}

func (i ConnectionSslConfigClientCertificateArgs) ToConnectionSslConfigClientCertificatePtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigClientCertificateOutput).ToConnectionSslConfigClientCertificatePtrOutputWithContext(ctx)
}

// ConnectionSslConfigClientCertificatePtrInput is an input type that accepts ConnectionSslConfigClientCertificateArgs, ConnectionSslConfigClientCertificatePtr and ConnectionSslConfigClientCertificatePtrOutput values.
// You can construct a concrete instance of `ConnectionSslConfigClientCertificatePtrInput` via:
//
//	        ConnectionSslConfigClientCertificateArgs{...}
//
//	or:
//
//	        nil
type ConnectionSslConfigClientCertificatePtrInput interface {
	pulumi.Input

	ToConnectionSslConfigClientCertificatePtrOutput() ConnectionSslConfigClientCertificatePtrOutput
	ToConnectionSslConfigClientCertificatePtrOutputWithContext(context.Context) ConnectionSslConfigClientCertificatePtrOutput
}

type connectionSslConfigClientCertificatePtrType ConnectionSslConfigClientCertificateArgs

func ConnectionSslConfigClientCertificatePtr(v *ConnectionSslConfigClientCertificateArgs) ConnectionSslConfigClientCertificatePtrInput {
	return (*connectionSslConfigClientCertificatePtrType)(v)
}

func (*connectionSslConfigClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigClientCertificate)(nil)).Elem()
}

func (i *connectionSslConfigClientCertificatePtrType) ToConnectionSslConfigClientCertificatePtrOutput() ConnectionSslConfigClientCertificatePtrOutput {
	return i.ToConnectionSslConfigClientCertificatePtrOutputWithContext(context.Background())
}

func (i *connectionSslConfigClientCertificatePtrType) ToConnectionSslConfigClientCertificatePtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigClientCertificatePtrOutput)
}

type ConnectionSslConfigClientCertificateOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigClientCertificate)(nil)).Elem()
}

func (o ConnectionSslConfigClientCertificateOutput) ToConnectionSslConfigClientCertificateOutput() ConnectionSslConfigClientCertificateOutput {
	return o
}

func (o ConnectionSslConfigClientCertificateOutput) ToConnectionSslConfigClientCertificateOutputWithContext(ctx context.Context) ConnectionSslConfigClientCertificateOutput {
	return o
}

func (o ConnectionSslConfigClientCertificateOutput) ToConnectionSslConfigClientCertificatePtrOutput() ConnectionSslConfigClientCertificatePtrOutput {
	return o.ToConnectionSslConfigClientCertificatePtrOutputWithContext(context.Background())
}

func (o ConnectionSslConfigClientCertificateOutput) ToConnectionSslConfigClientCertificatePtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSslConfigClientCertificate) *ConnectionSslConfigClientCertificate {
		return &v
	}).(ConnectionSslConfigClientCertificatePtrOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigClientCertificateOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSslConfigClientCertificate) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionSslConfigClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigClientCertificate)(nil)).Elem()
}

func (o ConnectionSslConfigClientCertificatePtrOutput) ToConnectionSslConfigClientCertificatePtrOutput() ConnectionSslConfigClientCertificatePtrOutput {
	return o
}

func (o ConnectionSslConfigClientCertificatePtrOutput) ToConnectionSslConfigClientCertificatePtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientCertificatePtrOutput {
	return o
}

func (o ConnectionSslConfigClientCertificatePtrOutput) Elem() ConnectionSslConfigClientCertificateOutput {
	return o.ApplyT(func(v *ConnectionSslConfigClientCertificate) ConnectionSslConfigClientCertificate {
		if v != nil {
			return *v
		}
		var ret ConnectionSslConfigClientCertificate
		return ret
	}).(ConnectionSslConfigClientCertificateOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigClientCertificatePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfigClientCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionSslConfigClientPrivateKey struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionSslConfigClientPrivateKeyInput is an input type that accepts ConnectionSslConfigClientPrivateKeyArgs and ConnectionSslConfigClientPrivateKeyOutput values.
// You can construct a concrete instance of `ConnectionSslConfigClientPrivateKeyInput` via:
//
//	ConnectionSslConfigClientPrivateKeyArgs{...}
type ConnectionSslConfigClientPrivateKeyInput interface {
	pulumi.Input

	ToConnectionSslConfigClientPrivateKeyOutput() ConnectionSslConfigClientPrivateKeyOutput
	ToConnectionSslConfigClientPrivateKeyOutputWithContext(context.Context) ConnectionSslConfigClientPrivateKeyOutput
}

type ConnectionSslConfigClientPrivateKeyArgs struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionSslConfigClientPrivateKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigClientPrivateKey)(nil)).Elem()
}

func (i ConnectionSslConfigClientPrivateKeyArgs) ToConnectionSslConfigClientPrivateKeyOutput() ConnectionSslConfigClientPrivateKeyOutput {
	return i.ToConnectionSslConfigClientPrivateKeyOutputWithContext(context.Background())
}

func (i ConnectionSslConfigClientPrivateKeyArgs) ToConnectionSslConfigClientPrivateKeyOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigClientPrivateKeyOutput)
}

func (i ConnectionSslConfigClientPrivateKeyArgs) ToConnectionSslConfigClientPrivateKeyPtrOutput() ConnectionSslConfigClientPrivateKeyPtrOutput {
	return i.ToConnectionSslConfigClientPrivateKeyPtrOutputWithContext(context.Background())
}

func (i ConnectionSslConfigClientPrivateKeyArgs) ToConnectionSslConfigClientPrivateKeyPtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigClientPrivateKeyOutput).ToConnectionSslConfigClientPrivateKeyPtrOutputWithContext(ctx)
}

// ConnectionSslConfigClientPrivateKeyPtrInput is an input type that accepts ConnectionSslConfigClientPrivateKeyArgs, ConnectionSslConfigClientPrivateKeyPtr and ConnectionSslConfigClientPrivateKeyPtrOutput values.
// You can construct a concrete instance of `ConnectionSslConfigClientPrivateKeyPtrInput` via:
//
//	        ConnectionSslConfigClientPrivateKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectionSslConfigClientPrivateKeyPtrInput interface {
	pulumi.Input

	ToConnectionSslConfigClientPrivateKeyPtrOutput() ConnectionSslConfigClientPrivateKeyPtrOutput
	ToConnectionSslConfigClientPrivateKeyPtrOutputWithContext(context.Context) ConnectionSslConfigClientPrivateKeyPtrOutput
}

type connectionSslConfigClientPrivateKeyPtrType ConnectionSslConfigClientPrivateKeyArgs

func ConnectionSslConfigClientPrivateKeyPtr(v *ConnectionSslConfigClientPrivateKeyArgs) ConnectionSslConfigClientPrivateKeyPtrInput {
	return (*connectionSslConfigClientPrivateKeyPtrType)(v)
}

func (*connectionSslConfigClientPrivateKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigClientPrivateKey)(nil)).Elem()
}

func (i *connectionSslConfigClientPrivateKeyPtrType) ToConnectionSslConfigClientPrivateKeyPtrOutput() ConnectionSslConfigClientPrivateKeyPtrOutput {
	return i.ToConnectionSslConfigClientPrivateKeyPtrOutputWithContext(context.Background())
}

func (i *connectionSslConfigClientPrivateKeyPtrType) ToConnectionSslConfigClientPrivateKeyPtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigClientPrivateKeyPtrOutput)
}

type ConnectionSslConfigClientPrivateKeyOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigClientPrivateKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigClientPrivateKey)(nil)).Elem()
}

func (o ConnectionSslConfigClientPrivateKeyOutput) ToConnectionSslConfigClientPrivateKeyOutput() ConnectionSslConfigClientPrivateKeyOutput {
	return o
}

func (o ConnectionSslConfigClientPrivateKeyOutput) ToConnectionSslConfigClientPrivateKeyOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyOutput {
	return o
}

func (o ConnectionSslConfigClientPrivateKeyOutput) ToConnectionSslConfigClientPrivateKeyPtrOutput() ConnectionSslConfigClientPrivateKeyPtrOutput {
	return o.ToConnectionSslConfigClientPrivateKeyPtrOutputWithContext(context.Background())
}

func (o ConnectionSslConfigClientPrivateKeyOutput) ToConnectionSslConfigClientPrivateKeyPtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSslConfigClientPrivateKey) *ConnectionSslConfigClientPrivateKey {
		return &v
	}).(ConnectionSslConfigClientPrivateKeyPtrOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigClientPrivateKeyOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSslConfigClientPrivateKey) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionSslConfigClientPrivateKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigClientPrivateKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigClientPrivateKey)(nil)).Elem()
}

func (o ConnectionSslConfigClientPrivateKeyPtrOutput) ToConnectionSslConfigClientPrivateKeyPtrOutput() ConnectionSslConfigClientPrivateKeyPtrOutput {
	return o
}

func (o ConnectionSslConfigClientPrivateKeyPtrOutput) ToConnectionSslConfigClientPrivateKeyPtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPtrOutput {
	return o
}

func (o ConnectionSslConfigClientPrivateKeyPtrOutput) Elem() ConnectionSslConfigClientPrivateKeyOutput {
	return o.ApplyT(func(v *ConnectionSslConfigClientPrivateKey) ConnectionSslConfigClientPrivateKey {
		if v != nil {
			return *v
		}
		var ret ConnectionSslConfigClientPrivateKey
		return ret
	}).(ConnectionSslConfigClientPrivateKeyOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigClientPrivateKeyPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfigClientPrivateKey) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionSslConfigClientPrivateKeyPass struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionSslConfigClientPrivateKeyPassInput is an input type that accepts ConnectionSslConfigClientPrivateKeyPassArgs and ConnectionSslConfigClientPrivateKeyPassOutput values.
// You can construct a concrete instance of `ConnectionSslConfigClientPrivateKeyPassInput` via:
//
//	ConnectionSslConfigClientPrivateKeyPassArgs{...}
type ConnectionSslConfigClientPrivateKeyPassInput interface {
	pulumi.Input

	ToConnectionSslConfigClientPrivateKeyPassOutput() ConnectionSslConfigClientPrivateKeyPassOutput
	ToConnectionSslConfigClientPrivateKeyPassOutputWithContext(context.Context) ConnectionSslConfigClientPrivateKeyPassOutput
}

type ConnectionSslConfigClientPrivateKeyPassArgs struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionSslConfigClientPrivateKeyPassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigClientPrivateKeyPass)(nil)).Elem()
}

func (i ConnectionSslConfigClientPrivateKeyPassArgs) ToConnectionSslConfigClientPrivateKeyPassOutput() ConnectionSslConfigClientPrivateKeyPassOutput {
	return i.ToConnectionSslConfigClientPrivateKeyPassOutputWithContext(context.Background())
}

func (i ConnectionSslConfigClientPrivateKeyPassArgs) ToConnectionSslConfigClientPrivateKeyPassOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigClientPrivateKeyPassOutput)
}

func (i ConnectionSslConfigClientPrivateKeyPassArgs) ToConnectionSslConfigClientPrivateKeyPassPtrOutput() ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return i.ToConnectionSslConfigClientPrivateKeyPassPtrOutputWithContext(context.Background())
}

func (i ConnectionSslConfigClientPrivateKeyPassArgs) ToConnectionSslConfigClientPrivateKeyPassPtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigClientPrivateKeyPassOutput).ToConnectionSslConfigClientPrivateKeyPassPtrOutputWithContext(ctx)
}

// ConnectionSslConfigClientPrivateKeyPassPtrInput is an input type that accepts ConnectionSslConfigClientPrivateKeyPassArgs, ConnectionSslConfigClientPrivateKeyPassPtr and ConnectionSslConfigClientPrivateKeyPassPtrOutput values.
// You can construct a concrete instance of `ConnectionSslConfigClientPrivateKeyPassPtrInput` via:
//
//	        ConnectionSslConfigClientPrivateKeyPassArgs{...}
//
//	or:
//
//	        nil
type ConnectionSslConfigClientPrivateKeyPassPtrInput interface {
	pulumi.Input

	ToConnectionSslConfigClientPrivateKeyPassPtrOutput() ConnectionSslConfigClientPrivateKeyPassPtrOutput
	ToConnectionSslConfigClientPrivateKeyPassPtrOutputWithContext(context.Context) ConnectionSslConfigClientPrivateKeyPassPtrOutput
}

type connectionSslConfigClientPrivateKeyPassPtrType ConnectionSslConfigClientPrivateKeyPassArgs

func ConnectionSslConfigClientPrivateKeyPassPtr(v *ConnectionSslConfigClientPrivateKeyPassArgs) ConnectionSslConfigClientPrivateKeyPassPtrInput {
	return (*connectionSslConfigClientPrivateKeyPassPtrType)(v)
}

func (*connectionSslConfigClientPrivateKeyPassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigClientPrivateKeyPass)(nil)).Elem()
}

func (i *connectionSslConfigClientPrivateKeyPassPtrType) ToConnectionSslConfigClientPrivateKeyPassPtrOutput() ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return i.ToConnectionSslConfigClientPrivateKeyPassPtrOutputWithContext(context.Background())
}

func (i *connectionSslConfigClientPrivateKeyPassPtrType) ToConnectionSslConfigClientPrivateKeyPassPtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigClientPrivateKeyPassPtrOutput)
}

type ConnectionSslConfigClientPrivateKeyPassOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigClientPrivateKeyPassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigClientPrivateKeyPass)(nil)).Elem()
}

func (o ConnectionSslConfigClientPrivateKeyPassOutput) ToConnectionSslConfigClientPrivateKeyPassOutput() ConnectionSslConfigClientPrivateKeyPassOutput {
	return o
}

func (o ConnectionSslConfigClientPrivateKeyPassOutput) ToConnectionSslConfigClientPrivateKeyPassOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPassOutput {
	return o
}

func (o ConnectionSslConfigClientPrivateKeyPassOutput) ToConnectionSslConfigClientPrivateKeyPassPtrOutput() ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return o.ToConnectionSslConfigClientPrivateKeyPassPtrOutputWithContext(context.Background())
}

func (o ConnectionSslConfigClientPrivateKeyPassOutput) ToConnectionSslConfigClientPrivateKeyPassPtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSslConfigClientPrivateKeyPass) *ConnectionSslConfigClientPrivateKeyPass {
		return &v
	}).(ConnectionSslConfigClientPrivateKeyPassPtrOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigClientPrivateKeyPassOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSslConfigClientPrivateKeyPass) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionSslConfigClientPrivateKeyPassPtrOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigClientPrivateKeyPassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigClientPrivateKeyPass)(nil)).Elem()
}

func (o ConnectionSslConfigClientPrivateKeyPassPtrOutput) ToConnectionSslConfigClientPrivateKeyPassPtrOutput() ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return o
}

func (o ConnectionSslConfigClientPrivateKeyPassPtrOutput) ToConnectionSslConfigClientPrivateKeyPassPtrOutputWithContext(ctx context.Context) ConnectionSslConfigClientPrivateKeyPassPtrOutput {
	return o
}

func (o ConnectionSslConfigClientPrivateKeyPassPtrOutput) Elem() ConnectionSslConfigClientPrivateKeyPassOutput {
	return o.ApplyT(func(v *ConnectionSslConfigClientPrivateKeyPass) ConnectionSslConfigClientPrivateKeyPass {
		if v != nil {
			return *v
		}
		var ret ConnectionSslConfigClientPrivateKeyPass
		return ret
	}).(ConnectionSslConfigClientPrivateKeyPassOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigClientPrivateKeyPassPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfigClientPrivateKeyPass) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionSslConfigPrivateServerCertificate struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion string `pulumi:"secretVersion"`
}

// ConnectionSslConfigPrivateServerCertificateInput is an input type that accepts ConnectionSslConfigPrivateServerCertificateArgs and ConnectionSslConfigPrivateServerCertificateOutput values.
// You can construct a concrete instance of `ConnectionSslConfigPrivateServerCertificateInput` via:
//
//	ConnectionSslConfigPrivateServerCertificateArgs{...}
type ConnectionSslConfigPrivateServerCertificateInput interface {
	pulumi.Input

	ToConnectionSslConfigPrivateServerCertificateOutput() ConnectionSslConfigPrivateServerCertificateOutput
	ToConnectionSslConfigPrivateServerCertificateOutputWithContext(context.Context) ConnectionSslConfigPrivateServerCertificateOutput
}

type ConnectionSslConfigPrivateServerCertificateArgs struct {
	// Secret version of Secret Value for Config variable.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
}

func (ConnectionSslConfigPrivateServerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigPrivateServerCertificate)(nil)).Elem()
}

func (i ConnectionSslConfigPrivateServerCertificateArgs) ToConnectionSslConfigPrivateServerCertificateOutput() ConnectionSslConfigPrivateServerCertificateOutput {
	return i.ToConnectionSslConfigPrivateServerCertificateOutputWithContext(context.Background())
}

func (i ConnectionSslConfigPrivateServerCertificateArgs) ToConnectionSslConfigPrivateServerCertificateOutputWithContext(ctx context.Context) ConnectionSslConfigPrivateServerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigPrivateServerCertificateOutput)
}

func (i ConnectionSslConfigPrivateServerCertificateArgs) ToConnectionSslConfigPrivateServerCertificatePtrOutput() ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return i.ToConnectionSslConfigPrivateServerCertificatePtrOutputWithContext(context.Background())
}

func (i ConnectionSslConfigPrivateServerCertificateArgs) ToConnectionSslConfigPrivateServerCertificatePtrOutputWithContext(ctx context.Context) ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigPrivateServerCertificateOutput).ToConnectionSslConfigPrivateServerCertificatePtrOutputWithContext(ctx)
}

// ConnectionSslConfigPrivateServerCertificatePtrInput is an input type that accepts ConnectionSslConfigPrivateServerCertificateArgs, ConnectionSslConfigPrivateServerCertificatePtr and ConnectionSslConfigPrivateServerCertificatePtrOutput values.
// You can construct a concrete instance of `ConnectionSslConfigPrivateServerCertificatePtrInput` via:
//
//	        ConnectionSslConfigPrivateServerCertificateArgs{...}
//
//	or:
//
//	        nil
type ConnectionSslConfigPrivateServerCertificatePtrInput interface {
	pulumi.Input

	ToConnectionSslConfigPrivateServerCertificatePtrOutput() ConnectionSslConfigPrivateServerCertificatePtrOutput
	ToConnectionSslConfigPrivateServerCertificatePtrOutputWithContext(context.Context) ConnectionSslConfigPrivateServerCertificatePtrOutput
}

type connectionSslConfigPrivateServerCertificatePtrType ConnectionSslConfigPrivateServerCertificateArgs

func ConnectionSslConfigPrivateServerCertificatePtr(v *ConnectionSslConfigPrivateServerCertificateArgs) ConnectionSslConfigPrivateServerCertificatePtrInput {
	return (*connectionSslConfigPrivateServerCertificatePtrType)(v)
}

func (*connectionSslConfigPrivateServerCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigPrivateServerCertificate)(nil)).Elem()
}

func (i *connectionSslConfigPrivateServerCertificatePtrType) ToConnectionSslConfigPrivateServerCertificatePtrOutput() ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return i.ToConnectionSslConfigPrivateServerCertificatePtrOutputWithContext(context.Background())
}

func (i *connectionSslConfigPrivateServerCertificatePtrType) ToConnectionSslConfigPrivateServerCertificatePtrOutputWithContext(ctx context.Context) ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSslConfigPrivateServerCertificatePtrOutput)
}

type ConnectionSslConfigPrivateServerCertificateOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigPrivateServerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSslConfigPrivateServerCertificate)(nil)).Elem()
}

func (o ConnectionSslConfigPrivateServerCertificateOutput) ToConnectionSslConfigPrivateServerCertificateOutput() ConnectionSslConfigPrivateServerCertificateOutput {
	return o
}

func (o ConnectionSslConfigPrivateServerCertificateOutput) ToConnectionSslConfigPrivateServerCertificateOutputWithContext(ctx context.Context) ConnectionSslConfigPrivateServerCertificateOutput {
	return o
}

func (o ConnectionSslConfigPrivateServerCertificateOutput) ToConnectionSslConfigPrivateServerCertificatePtrOutput() ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return o.ToConnectionSslConfigPrivateServerCertificatePtrOutputWithContext(context.Background())
}

func (o ConnectionSslConfigPrivateServerCertificateOutput) ToConnectionSslConfigPrivateServerCertificatePtrOutputWithContext(ctx context.Context) ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSslConfigPrivateServerCertificate) *ConnectionSslConfigPrivateServerCertificate {
		return &v
	}).(ConnectionSslConfigPrivateServerCertificatePtrOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigPrivateServerCertificateOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionSslConfigPrivateServerCertificate) string { return v.SecretVersion }).(pulumi.StringOutput)
}

type ConnectionSslConfigPrivateServerCertificatePtrOutput struct{ *pulumi.OutputState }

func (ConnectionSslConfigPrivateServerCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSslConfigPrivateServerCertificate)(nil)).Elem()
}

func (o ConnectionSslConfigPrivateServerCertificatePtrOutput) ToConnectionSslConfigPrivateServerCertificatePtrOutput() ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return o
}

func (o ConnectionSslConfigPrivateServerCertificatePtrOutput) ToConnectionSslConfigPrivateServerCertificatePtrOutputWithContext(ctx context.Context) ConnectionSslConfigPrivateServerCertificatePtrOutput {
	return o
}

func (o ConnectionSslConfigPrivateServerCertificatePtrOutput) Elem() ConnectionSslConfigPrivateServerCertificateOutput {
	return o.ApplyT(func(v *ConnectionSslConfigPrivateServerCertificate) ConnectionSslConfigPrivateServerCertificate {
		if v != nil {
			return *v
		}
		var ret ConnectionSslConfigPrivateServerCertificate
		return ret
	}).(ConnectionSslConfigPrivateServerCertificateOutput)
}

// Secret version of Secret Value for Config variable.
func (o ConnectionSslConfigPrivateServerCertificatePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSslConfigPrivateServerCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type ConnectionStatus struct {
	// An arbitrary description for the Conection.
	Description *string `pulumi:"description"`
	// (Output)
	// State of the Eventing
	State *string `pulumi:"state"`
	// (Output)
	// Current status of eventing.
	// Structure is documented below.
	Status *string `pulumi:"status"`
}

// ConnectionStatusInput is an input type that accepts ConnectionStatusArgs and ConnectionStatusOutput values.
// You can construct a concrete instance of `ConnectionStatusInput` via:
//
//	ConnectionStatusArgs{...}
type ConnectionStatusInput interface {
	pulumi.Input

	ToConnectionStatusOutput() ConnectionStatusOutput
	ToConnectionStatusOutputWithContext(context.Context) ConnectionStatusOutput
}

type ConnectionStatusArgs struct {
	// An arbitrary description for the Conection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Output)
	// State of the Eventing
	State pulumi.StringPtrInput `pulumi:"state"`
	// (Output)
	// Current status of eventing.
	// Structure is documented below.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ConnectionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStatus)(nil)).Elem()
}

func (i ConnectionStatusArgs) ToConnectionStatusOutput() ConnectionStatusOutput {
	return i.ToConnectionStatusOutputWithContext(context.Background())
}

func (i ConnectionStatusArgs) ToConnectionStatusOutputWithContext(ctx context.Context) ConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStatusOutput)
}

// ConnectionStatusArrayInput is an input type that accepts ConnectionStatusArray and ConnectionStatusArrayOutput values.
// You can construct a concrete instance of `ConnectionStatusArrayInput` via:
//
//	ConnectionStatusArray{ ConnectionStatusArgs{...} }
type ConnectionStatusArrayInput interface {
	pulumi.Input

	ToConnectionStatusArrayOutput() ConnectionStatusArrayOutput
	ToConnectionStatusArrayOutputWithContext(context.Context) ConnectionStatusArrayOutput
}

type ConnectionStatusArray []ConnectionStatusInput

func (ConnectionStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionStatus)(nil)).Elem()
}

func (i ConnectionStatusArray) ToConnectionStatusArrayOutput() ConnectionStatusArrayOutput {
	return i.ToConnectionStatusArrayOutputWithContext(context.Background())
}

func (i ConnectionStatusArray) ToConnectionStatusArrayOutputWithContext(ctx context.Context) ConnectionStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStatusArrayOutput)
}

type ConnectionStatusOutput struct{ *pulumi.OutputState }

func (ConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStatus)(nil)).Elem()
}

func (o ConnectionStatusOutput) ToConnectionStatusOutput() ConnectionStatusOutput {
	return o
}

func (o ConnectionStatusOutput) ToConnectionStatusOutputWithContext(ctx context.Context) ConnectionStatusOutput {
	return o
}

// An arbitrary description for the Conection.
func (o ConnectionStatusOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatus) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Output)
// State of the Eventing
func (o ConnectionStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

// (Output)
// Current status of eventing.
// Structure is documented below.
func (o ConnectionStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ConnectionStatusArrayOutput struct{ *pulumi.OutputState }

func (ConnectionStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionStatus)(nil)).Elem()
}

func (o ConnectionStatusArrayOutput) ToConnectionStatusArrayOutput() ConnectionStatusArrayOutput {
	return o
}

func (o ConnectionStatusArrayOutput) ToConnectionStatusArrayOutputWithContext(ctx context.Context) ConnectionStatusArrayOutput {
	return o
}

func (o ConnectionStatusArrayOutput) Index(i pulumi.IntInput) ConnectionStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionStatus {
		return vs[0].([]ConnectionStatus)[vs[1].(int)]
	}).(ConnectionStatusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigInput)(nil)).Elem(), ConnectionAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigPtrInput)(nil)).Elem(), ConnectionAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableInput)(nil)).Elem(), ConnectionAuthConfigAdditionalVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableArrayInput)(nil)).Elem(), ConnectionAuthConfigAdditionalVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableEncryptionKeyValueInput)(nil)).Elem(), ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrInput)(nil)).Elem(), ConnectionAuthConfigAdditionalVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableSecretValueInput)(nil)).Elem(), ConnectionAuthConfigAdditionalVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigAdditionalVariableSecretValuePtrInput)(nil)).Elem(), ConnectionAuthConfigAdditionalVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2AuthCodeFlowInput)(nil)).Elem(), ConnectionAuthConfigOauth2AuthCodeFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2AuthCodeFlowPtrInput)(nil)).Elem(), ConnectionAuthConfigOauth2AuthCodeFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2AuthCodeFlowClientSecretInput)(nil)).Elem(), ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrInput)(nil)).Elem(), ConnectionAuthConfigOauth2AuthCodeFlowClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2ClientCredentialsInput)(nil)).Elem(), ConnectionAuthConfigOauth2ClientCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2ClientCredentialsPtrInput)(nil)).Elem(), ConnectionAuthConfigOauth2ClientCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2ClientCredentialsClientSecretInput)(nil)).Elem(), ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrInput)(nil)).Elem(), ConnectionAuthConfigOauth2ClientCredentialsClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerInput)(nil)).Elem(), ConnectionAuthConfigOauth2JwtBearerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerPtrInput)(nil)).Elem(), ConnectionAuthConfigOauth2JwtBearerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerClientKeyInput)(nil)).Elem(), ConnectionAuthConfigOauth2JwtBearerClientKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerClientKeyPtrInput)(nil)).Elem(), ConnectionAuthConfigOauth2JwtBearerClientKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerJwtClaimsInput)(nil)).Elem(), ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrInput)(nil)).Elem(), ConnectionAuthConfigOauth2JwtBearerJwtClaimsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigSshPublicKeyInput)(nil)).Elem(), ConnectionAuthConfigSshPublicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigSshPublicKeyPtrInput)(nil)).Elem(), ConnectionAuthConfigSshPublicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigSshPublicKeySshClientCertInput)(nil)).Elem(), ConnectionAuthConfigSshPublicKeySshClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigSshPublicKeySshClientCertPtrInput)(nil)).Elem(), ConnectionAuthConfigSshPublicKeySshClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigSshPublicKeySshClientCertPassInput)(nil)).Elem(), ConnectionAuthConfigSshPublicKeySshClientCertPassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigSshPublicKeySshClientCertPassPtrInput)(nil)).Elem(), ConnectionAuthConfigSshPublicKeySshClientCertPassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigUserPasswordInput)(nil)).Elem(), ConnectionAuthConfigUserPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigUserPasswordPtrInput)(nil)).Elem(), ConnectionAuthConfigUserPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigUserPasswordPasswordInput)(nil)).Elem(), ConnectionAuthConfigUserPasswordPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionAuthConfigUserPasswordPasswordPtrInput)(nil)).Elem(), ConnectionAuthConfigUserPasswordPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConfigVariableInput)(nil)).Elem(), ConnectionConfigVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConfigVariableArrayInput)(nil)).Elem(), ConnectionConfigVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConfigVariableEncryptionKeyValueInput)(nil)).Elem(), ConnectionConfigVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConfigVariableEncryptionKeyValuePtrInput)(nil)).Elem(), ConnectionConfigVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConfigVariableSecretValueInput)(nil)).Elem(), ConnectionConfigVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConfigVariableSecretValuePtrInput)(nil)).Elem(), ConnectionConfigVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConnectorVersionInfraConfigInput)(nil)).Elem(), ConnectionConnectorVersionInfraConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionConnectorVersionInfraConfigArrayInput)(nil)).Elem(), ConnectionConnectorVersionInfraConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionDestinationConfigInput)(nil)).Elem(), ConnectionDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionDestinationConfigArrayInput)(nil)).Elem(), ConnectionDestinationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionDestinationConfigDestinationInput)(nil)).Elem(), ConnectionDestinationConfigDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionDestinationConfigDestinationArrayInput)(nil)).Elem(), ConnectionDestinationConfigDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigInput)(nil)).Elem(), ConnectionEventingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigPtrInput)(nil)).Elem(), ConnectionEventingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableInput)(nil)).Elem(), ConnectionEventingConfigAdditionalVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableArrayInput)(nil)).Elem(), ConnectionEventingConfigAdditionalVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableEncryptionKeyValueInput)(nil)).Elem(), ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrInput)(nil)).Elem(), ConnectionEventingConfigAdditionalVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableSecretValueInput)(nil)).Elem(), ConnectionEventingConfigAdditionalVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAdditionalVariableSecretValuePtrInput)(nil)).Elem(), ConnectionEventingConfigAdditionalVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigPtrInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigAdditionalVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableArrayInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigAdditionalVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigUserPasswordInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigUserPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigUserPasswordPtrInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigUserPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigUserPasswordPasswordInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrInput)(nil)).Elem(), ConnectionEventingConfigAuthConfigUserPasswordPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigRegistrationDestinationConfigInput)(nil)).Elem(), ConnectionEventingConfigRegistrationDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigRegistrationDestinationConfigPtrInput)(nil)).Elem(), ConnectionEventingConfigRegistrationDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigRegistrationDestinationConfigDestinationInput)(nil)).Elem(), ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayInput)(nil)).Elem(), ConnectionEventingConfigRegistrationDestinationConfigDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingRuntimeDataInput)(nil)).Elem(), ConnectionEventingRuntimeDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingRuntimeDataArrayInput)(nil)).Elem(), ConnectionEventingRuntimeDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingRuntimeDataStatusInput)(nil)).Elem(), ConnectionEventingRuntimeDataStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingRuntimeDataStatusArrayInput)(nil)).Elem(), ConnectionEventingRuntimeDataStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionLockConfigInput)(nil)).Elem(), ConnectionLockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionLockConfigPtrInput)(nil)).Elem(), ConnectionLockConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionLogConfigInput)(nil)).Elem(), ConnectionLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionLogConfigPtrInput)(nil)).Elem(), ConnectionLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionNodeConfigInput)(nil)).Elem(), ConnectionNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionNodeConfigPtrInput)(nil)).Elem(), ConnectionNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigInput)(nil)).Elem(), ConnectionSslConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigPtrInput)(nil)).Elem(), ConnectionSslConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigAdditionalVariableInput)(nil)).Elem(), ConnectionSslConfigAdditionalVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigAdditionalVariableArrayInput)(nil)).Elem(), ConnectionSslConfigAdditionalVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigAdditionalVariableEncryptionKeyValueInput)(nil)).Elem(), ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrInput)(nil)).Elem(), ConnectionSslConfigAdditionalVariableEncryptionKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigAdditionalVariableSecretValueInput)(nil)).Elem(), ConnectionSslConfigAdditionalVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigAdditionalVariableSecretValuePtrInput)(nil)).Elem(), ConnectionSslConfigAdditionalVariableSecretValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigClientCertificateInput)(nil)).Elem(), ConnectionSslConfigClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigClientCertificatePtrInput)(nil)).Elem(), ConnectionSslConfigClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigClientPrivateKeyInput)(nil)).Elem(), ConnectionSslConfigClientPrivateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigClientPrivateKeyPtrInput)(nil)).Elem(), ConnectionSslConfigClientPrivateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigClientPrivateKeyPassInput)(nil)).Elem(), ConnectionSslConfigClientPrivateKeyPassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigClientPrivateKeyPassPtrInput)(nil)).Elem(), ConnectionSslConfigClientPrivateKeyPassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigPrivateServerCertificateInput)(nil)).Elem(), ConnectionSslConfigPrivateServerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionSslConfigPrivateServerCertificatePtrInput)(nil)).Elem(), ConnectionSslConfigPrivateServerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionStatusInput)(nil)).Elem(), ConnectionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionStatusArrayInput)(nil)).Elem(), ConnectionStatusArray{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigAdditionalVariableOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigAdditionalVariableArrayOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigAdditionalVariableEncryptionKeyValueOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigAdditionalVariableSecretValueOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigAdditionalVariableSecretValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2AuthCodeFlowOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2AuthCodeFlowPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2AuthCodeFlowClientSecretOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2AuthCodeFlowClientSecretPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2ClientCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2ClientCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2ClientCredentialsClientSecretOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2ClientCredentialsClientSecretPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2JwtBearerOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2JwtBearerPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2JwtBearerClientKeyOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2JwtBearerClientKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2JwtBearerJwtClaimsOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigOauth2JwtBearerJwtClaimsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigSshPublicKeyOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigSshPublicKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigSshPublicKeySshClientCertOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigSshPublicKeySshClientCertPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigSshPublicKeySshClientCertPassOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigSshPublicKeySshClientCertPassPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigUserPasswordOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigUserPasswordPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigUserPasswordPasswordOutput{})
	pulumi.RegisterOutputType(ConnectionAuthConfigUserPasswordPasswordPtrOutput{})
	pulumi.RegisterOutputType(ConnectionConfigVariableOutput{})
	pulumi.RegisterOutputType(ConnectionConfigVariableArrayOutput{})
	pulumi.RegisterOutputType(ConnectionConfigVariableEncryptionKeyValueOutput{})
	pulumi.RegisterOutputType(ConnectionConfigVariableEncryptionKeyValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionConfigVariableSecretValueOutput{})
	pulumi.RegisterOutputType(ConnectionConfigVariableSecretValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionConnectorVersionInfraConfigOutput{})
	pulumi.RegisterOutputType(ConnectionConnectorVersionInfraConfigArrayOutput{})
	pulumi.RegisterOutputType(ConnectionDestinationConfigOutput{})
	pulumi.RegisterOutputType(ConnectionDestinationConfigArrayOutput{})
	pulumi.RegisterOutputType(ConnectionDestinationConfigDestinationOutput{})
	pulumi.RegisterOutputType(ConnectionDestinationConfigDestinationArrayOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAdditionalVariableOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAdditionalVariableArrayOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAdditionalVariableEncryptionKeyValueOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAdditionalVariableEncryptionKeyValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAdditionalVariableSecretValueOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAdditionalVariableSecretValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigAdditionalVariableOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigAdditionalVariableArrayOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValueOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigAdditionalVariableEncryptionKeyValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigAdditionalVariableSecretValueOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigAdditionalVariableSecretValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigUserPasswordOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigUserPasswordPtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigUserPasswordPasswordOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigAuthConfigUserPasswordPasswordPtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigRegistrationDestinationConfigOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigRegistrationDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigRegistrationDestinationConfigDestinationOutput{})
	pulumi.RegisterOutputType(ConnectionEventingConfigRegistrationDestinationConfigDestinationArrayOutput{})
	pulumi.RegisterOutputType(ConnectionEventingRuntimeDataOutput{})
	pulumi.RegisterOutputType(ConnectionEventingRuntimeDataArrayOutput{})
	pulumi.RegisterOutputType(ConnectionEventingRuntimeDataStatusOutput{})
	pulumi.RegisterOutputType(ConnectionEventingRuntimeDataStatusArrayOutput{})
	pulumi.RegisterOutputType(ConnectionLockConfigOutput{})
	pulumi.RegisterOutputType(ConnectionLockConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionLogConfigOutput{})
	pulumi.RegisterOutputType(ConnectionLogConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionNodeConfigOutput{})
	pulumi.RegisterOutputType(ConnectionNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigPtrOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigAdditionalVariableOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigAdditionalVariableArrayOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigAdditionalVariableEncryptionKeyValueOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigAdditionalVariableEncryptionKeyValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigAdditionalVariableSecretValueOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigAdditionalVariableSecretValuePtrOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigClientCertificateOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigClientPrivateKeyOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigClientPrivateKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigClientPrivateKeyPassOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigClientPrivateKeyPassPtrOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigPrivateServerCertificateOutput{})
	pulumi.RegisterOutputType(ConnectionSslConfigPrivateServerCertificatePtrOutput{})
	pulumi.RegisterOutputType(ConnectionStatusOutput{})
	pulumi.RegisterOutputType(ConnectionStatusArrayOutput{})
}
