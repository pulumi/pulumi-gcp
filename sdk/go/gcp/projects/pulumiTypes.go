// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package projects

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessApprovalSettingsEnrolledService struct {
	// The product for which Access Approval will be enrolled. Allowed values are listed (case-sensitive):
	// all
	// appengine.googleapis.com
	// bigquery.googleapis.com
	// bigtable.googleapis.com
	// cloudkms.googleapis.com
	// compute.googleapis.com
	// dataflow.googleapis.com
	// iam.googleapis.com
	// pubsub.googleapis.com
	// storage.googleapis.com
	CloudProduct string `pulumi:"cloudProduct"`
	// The enrollment level of the service.
	// Default value is `BLOCK_ALL`.
	// Possible values are `BLOCK_ALL`.
	EnrollmentLevel *string `pulumi:"enrollmentLevel"`
}

// AccessApprovalSettingsEnrolledServiceInput is an input type that accepts AccessApprovalSettingsEnrolledServiceArgs and AccessApprovalSettingsEnrolledServiceOutput values.
// You can construct a concrete instance of `AccessApprovalSettingsEnrolledServiceInput` via:
//
//          AccessApprovalSettingsEnrolledServiceArgs{...}
type AccessApprovalSettingsEnrolledServiceInput interface {
	pulumi.Input

	ToAccessApprovalSettingsEnrolledServiceOutput() AccessApprovalSettingsEnrolledServiceOutput
	ToAccessApprovalSettingsEnrolledServiceOutputWithContext(context.Context) AccessApprovalSettingsEnrolledServiceOutput
}

type AccessApprovalSettingsEnrolledServiceArgs struct {
	// The product for which Access Approval will be enrolled. Allowed values are listed (case-sensitive):
	// all
	// appengine.googleapis.com
	// bigquery.googleapis.com
	// bigtable.googleapis.com
	// cloudkms.googleapis.com
	// compute.googleapis.com
	// dataflow.googleapis.com
	// iam.googleapis.com
	// pubsub.googleapis.com
	// storage.googleapis.com
	CloudProduct pulumi.StringInput `pulumi:"cloudProduct"`
	// The enrollment level of the service.
	// Default value is `BLOCK_ALL`.
	// Possible values are `BLOCK_ALL`.
	EnrollmentLevel pulumi.StringPtrInput `pulumi:"enrollmentLevel"`
}

func (AccessApprovalSettingsEnrolledServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (i AccessApprovalSettingsEnrolledServiceArgs) ToAccessApprovalSettingsEnrolledServiceOutput() AccessApprovalSettingsEnrolledServiceOutput {
	return i.ToAccessApprovalSettingsEnrolledServiceOutputWithContext(context.Background())
}

func (i AccessApprovalSettingsEnrolledServiceArgs) ToAccessApprovalSettingsEnrolledServiceOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApprovalSettingsEnrolledServiceOutput)
}

// AccessApprovalSettingsEnrolledServiceArrayInput is an input type that accepts AccessApprovalSettingsEnrolledServiceArray and AccessApprovalSettingsEnrolledServiceArrayOutput values.
// You can construct a concrete instance of `AccessApprovalSettingsEnrolledServiceArrayInput` via:
//
//          AccessApprovalSettingsEnrolledServiceArray{ AccessApprovalSettingsEnrolledServiceArgs{...} }
type AccessApprovalSettingsEnrolledServiceArrayInput interface {
	pulumi.Input

	ToAccessApprovalSettingsEnrolledServiceArrayOutput() AccessApprovalSettingsEnrolledServiceArrayOutput
	ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(context.Context) AccessApprovalSettingsEnrolledServiceArrayOutput
}

type AccessApprovalSettingsEnrolledServiceArray []AccessApprovalSettingsEnrolledServiceInput

func (AccessApprovalSettingsEnrolledServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (i AccessApprovalSettingsEnrolledServiceArray) ToAccessApprovalSettingsEnrolledServiceArrayOutput() AccessApprovalSettingsEnrolledServiceArrayOutput {
	return i.ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(context.Background())
}

func (i AccessApprovalSettingsEnrolledServiceArray) ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApprovalSettingsEnrolledServiceArrayOutput)
}

type AccessApprovalSettingsEnrolledServiceOutput struct{ *pulumi.OutputState }

func (AccessApprovalSettingsEnrolledServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (o AccessApprovalSettingsEnrolledServiceOutput) ToAccessApprovalSettingsEnrolledServiceOutput() AccessApprovalSettingsEnrolledServiceOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceOutput) ToAccessApprovalSettingsEnrolledServiceOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceOutput {
	return o
}

// The product for which Access Approval will be enrolled. Allowed values are listed (case-sensitive):
// all
// appengine.googleapis.com
// bigquery.googleapis.com
// bigtable.googleapis.com
// cloudkms.googleapis.com
// compute.googleapis.com
// dataflow.googleapis.com
// iam.googleapis.com
// pubsub.googleapis.com
// storage.googleapis.com
func (o AccessApprovalSettingsEnrolledServiceOutput) CloudProduct() pulumi.StringOutput {
	return o.ApplyT(func(v AccessApprovalSettingsEnrolledService) string { return v.CloudProduct }).(pulumi.StringOutput)
}

// The enrollment level of the service.
// Default value is `BLOCK_ALL`.
// Possible values are `BLOCK_ALL`.
func (o AccessApprovalSettingsEnrolledServiceOutput) EnrollmentLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessApprovalSettingsEnrolledService) *string { return v.EnrollmentLevel }).(pulumi.StringPtrOutput)
}

type AccessApprovalSettingsEnrolledServiceArrayOutput struct{ *pulumi.OutputState }

func (AccessApprovalSettingsEnrolledServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (o AccessApprovalSettingsEnrolledServiceArrayOutput) ToAccessApprovalSettingsEnrolledServiceArrayOutput() AccessApprovalSettingsEnrolledServiceArrayOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceArrayOutput) ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceArrayOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceArrayOutput) Index(i pulumi.IntInput) AccessApprovalSettingsEnrolledServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessApprovalSettingsEnrolledService {
		return vs[0].([]AccessApprovalSettingsEnrolledService)[vs[1].(int)]
	}).(AccessApprovalSettingsEnrolledServiceOutput)
}

type ApiKeyRestrictions struct {
	// The Android apps that are allowed to use the key.
	AndroidKeyRestrictions *ApiKeyRestrictionsAndroidKeyRestrictions `pulumi:"androidKeyRestrictions"`
	// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
	ApiTargets []ApiKeyRestrictionsApiTarget `pulumi:"apiTargets"`
	// The HTTP referrers (websites) that are allowed to use the key.
	BrowserKeyRestrictions *ApiKeyRestrictionsBrowserKeyRestrictions `pulumi:"browserKeyRestrictions"`
	// The iOS apps that are allowed to use the key.
	IosKeyRestrictions *ApiKeyRestrictionsIosKeyRestrictions `pulumi:"iosKeyRestrictions"`
	// The IP addresses of callers that are allowed to use the key.
	ServerKeyRestrictions *ApiKeyRestrictionsServerKeyRestrictions `pulumi:"serverKeyRestrictions"`
}

// ApiKeyRestrictionsInput is an input type that accepts ApiKeyRestrictionsArgs and ApiKeyRestrictionsOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsInput` via:
//
//          ApiKeyRestrictionsArgs{...}
type ApiKeyRestrictionsInput interface {
	pulumi.Input

	ToApiKeyRestrictionsOutput() ApiKeyRestrictionsOutput
	ToApiKeyRestrictionsOutputWithContext(context.Context) ApiKeyRestrictionsOutput
}

type ApiKeyRestrictionsArgs struct {
	// The Android apps that are allowed to use the key.
	AndroidKeyRestrictions ApiKeyRestrictionsAndroidKeyRestrictionsPtrInput `pulumi:"androidKeyRestrictions"`
	// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
	ApiTargets ApiKeyRestrictionsApiTargetArrayInput `pulumi:"apiTargets"`
	// The HTTP referrers (websites) that are allowed to use the key.
	BrowserKeyRestrictions ApiKeyRestrictionsBrowserKeyRestrictionsPtrInput `pulumi:"browserKeyRestrictions"`
	// The iOS apps that are allowed to use the key.
	IosKeyRestrictions ApiKeyRestrictionsIosKeyRestrictionsPtrInput `pulumi:"iosKeyRestrictions"`
	// The IP addresses of callers that are allowed to use the key.
	ServerKeyRestrictions ApiKeyRestrictionsServerKeyRestrictionsPtrInput `pulumi:"serverKeyRestrictions"`
}

func (ApiKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictions)(nil)).Elem()
}

func (i ApiKeyRestrictionsArgs) ToApiKeyRestrictionsOutput() ApiKeyRestrictionsOutput {
	return i.ToApiKeyRestrictionsOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsArgs) ToApiKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsOutput)
}

func (i ApiKeyRestrictionsArgs) ToApiKeyRestrictionsPtrOutput() ApiKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsArgs) ToApiKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsOutput).ToApiKeyRestrictionsPtrOutputWithContext(ctx)
}

// ApiKeyRestrictionsPtrInput is an input type that accepts ApiKeyRestrictionsArgs, ApiKeyRestrictionsPtr and ApiKeyRestrictionsPtrOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsPtrInput` via:
//
//          ApiKeyRestrictionsArgs{...}
//
//  or:
//
//          nil
type ApiKeyRestrictionsPtrInput interface {
	pulumi.Input

	ToApiKeyRestrictionsPtrOutput() ApiKeyRestrictionsPtrOutput
	ToApiKeyRestrictionsPtrOutputWithContext(context.Context) ApiKeyRestrictionsPtrOutput
}

type apiKeyRestrictionsPtrType ApiKeyRestrictionsArgs

func ApiKeyRestrictionsPtr(v *ApiKeyRestrictionsArgs) ApiKeyRestrictionsPtrInput {
	return (*apiKeyRestrictionsPtrType)(v)
}

func (*apiKeyRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictions)(nil)).Elem()
}

func (i *apiKeyRestrictionsPtrType) ToApiKeyRestrictionsPtrOutput() ApiKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i *apiKeyRestrictionsPtrType) ToApiKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsPtrOutput)
}

type ApiKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsOutput) ToApiKeyRestrictionsOutput() ApiKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsOutput) ToApiKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsOutput) ToApiKeyRestrictionsPtrOutput() ApiKeyRestrictionsPtrOutput {
	return o.ToApiKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (o ApiKeyRestrictionsOutput) ToApiKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyRestrictions) *ApiKeyRestrictions {
		return &v
	}).(ApiKeyRestrictionsPtrOutput)
}

// The Android apps that are allowed to use the key.
func (o ApiKeyRestrictionsOutput) AndroidKeyRestrictions() ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v ApiKeyRestrictions) *ApiKeyRestrictionsAndroidKeyRestrictions { return v.AndroidKeyRestrictions }).(ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput)
}

// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
func (o ApiKeyRestrictionsOutput) ApiTargets() ApiKeyRestrictionsApiTargetArrayOutput {
	return o.ApplyT(func(v ApiKeyRestrictions) []ApiKeyRestrictionsApiTarget { return v.ApiTargets }).(ApiKeyRestrictionsApiTargetArrayOutput)
}

// The HTTP referrers (websites) that are allowed to use the key.
func (o ApiKeyRestrictionsOutput) BrowserKeyRestrictions() ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v ApiKeyRestrictions) *ApiKeyRestrictionsBrowserKeyRestrictions { return v.BrowserKeyRestrictions }).(ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput)
}

// The iOS apps that are allowed to use the key.
func (o ApiKeyRestrictionsOutput) IosKeyRestrictions() ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v ApiKeyRestrictions) *ApiKeyRestrictionsIosKeyRestrictions { return v.IosKeyRestrictions }).(ApiKeyRestrictionsIosKeyRestrictionsPtrOutput)
}

// The IP addresses of callers that are allowed to use the key.
func (o ApiKeyRestrictionsOutput) ServerKeyRestrictions() ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v ApiKeyRestrictions) *ApiKeyRestrictionsServerKeyRestrictions { return v.ServerKeyRestrictions }).(ApiKeyRestrictionsServerKeyRestrictionsPtrOutput)
}

type ApiKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsPtrOutput) ToApiKeyRestrictionsPtrOutput() ApiKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsPtrOutput) ToApiKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsPtrOutput) Elem() ApiKeyRestrictionsOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) ApiKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret ApiKeyRestrictions
		return ret
	}).(ApiKeyRestrictionsOutput)
}

// The Android apps that are allowed to use the key.
func (o ApiKeyRestrictionsPtrOutput) AndroidKeyRestrictions() ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) *ApiKeyRestrictionsAndroidKeyRestrictions {
		if v == nil {
			return nil
		}
		return v.AndroidKeyRestrictions
	}).(ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput)
}

// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
func (o ApiKeyRestrictionsPtrOutput) ApiTargets() ApiKeyRestrictionsApiTargetArrayOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) []ApiKeyRestrictionsApiTarget {
		if v == nil {
			return nil
		}
		return v.ApiTargets
	}).(ApiKeyRestrictionsApiTargetArrayOutput)
}

// The HTTP referrers (websites) that are allowed to use the key.
func (o ApiKeyRestrictionsPtrOutput) BrowserKeyRestrictions() ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) *ApiKeyRestrictionsBrowserKeyRestrictions {
		if v == nil {
			return nil
		}
		return v.BrowserKeyRestrictions
	}).(ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput)
}

// The iOS apps that are allowed to use the key.
func (o ApiKeyRestrictionsPtrOutput) IosKeyRestrictions() ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) *ApiKeyRestrictionsIosKeyRestrictions {
		if v == nil {
			return nil
		}
		return v.IosKeyRestrictions
	}).(ApiKeyRestrictionsIosKeyRestrictionsPtrOutput)
}

// The IP addresses of callers that are allowed to use the key.
func (o ApiKeyRestrictionsPtrOutput) ServerKeyRestrictions() ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) *ApiKeyRestrictionsServerKeyRestrictions {
		if v == nil {
			return nil
		}
		return v.ServerKeyRestrictions
	}).(ApiKeyRestrictionsServerKeyRestrictionsPtrOutput)
}

type ApiKeyRestrictionsAndroidKeyRestrictions struct {
	// A list of Android applications that are allowed to make API calls with this key.
	AllowedApplications []ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication `pulumi:"allowedApplications"`
}

// ApiKeyRestrictionsAndroidKeyRestrictionsInput is an input type that accepts ApiKeyRestrictionsAndroidKeyRestrictionsArgs and ApiKeyRestrictionsAndroidKeyRestrictionsOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsAndroidKeyRestrictionsInput` via:
//
//          ApiKeyRestrictionsAndroidKeyRestrictionsArgs{...}
type ApiKeyRestrictionsAndroidKeyRestrictionsInput interface {
	pulumi.Input

	ToApiKeyRestrictionsAndroidKeyRestrictionsOutput() ApiKeyRestrictionsAndroidKeyRestrictionsOutput
	ToApiKeyRestrictionsAndroidKeyRestrictionsOutputWithContext(context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsOutput
}

type ApiKeyRestrictionsAndroidKeyRestrictionsArgs struct {
	// A list of Android applications that are allowed to make API calls with this key.
	AllowedApplications ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayInput `pulumi:"allowedApplications"`
}

func (ApiKeyRestrictionsAndroidKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsAndroidKeyRestrictions)(nil)).Elem()
}

func (i ApiKeyRestrictionsAndroidKeyRestrictionsArgs) ToApiKeyRestrictionsAndroidKeyRestrictionsOutput() ApiKeyRestrictionsAndroidKeyRestrictionsOutput {
	return i.ToApiKeyRestrictionsAndroidKeyRestrictionsOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsAndroidKeyRestrictionsArgs) ToApiKeyRestrictionsAndroidKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsAndroidKeyRestrictionsOutput)
}

func (i ApiKeyRestrictionsAndroidKeyRestrictionsArgs) ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput() ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsAndroidKeyRestrictionsArgs) ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsAndroidKeyRestrictionsOutput).ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutputWithContext(ctx)
}

// ApiKeyRestrictionsAndroidKeyRestrictionsPtrInput is an input type that accepts ApiKeyRestrictionsAndroidKeyRestrictionsArgs, ApiKeyRestrictionsAndroidKeyRestrictionsPtr and ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsAndroidKeyRestrictionsPtrInput` via:
//
//          ApiKeyRestrictionsAndroidKeyRestrictionsArgs{...}
//
//  or:
//
//          nil
type ApiKeyRestrictionsAndroidKeyRestrictionsPtrInput interface {
	pulumi.Input

	ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput() ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput
	ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutputWithContext(context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput
}

type apiKeyRestrictionsAndroidKeyRestrictionsPtrType ApiKeyRestrictionsAndroidKeyRestrictionsArgs

func ApiKeyRestrictionsAndroidKeyRestrictionsPtr(v *ApiKeyRestrictionsAndroidKeyRestrictionsArgs) ApiKeyRestrictionsAndroidKeyRestrictionsPtrInput {
	return (*apiKeyRestrictionsAndroidKeyRestrictionsPtrType)(v)
}

func (*apiKeyRestrictionsAndroidKeyRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictionsAndroidKeyRestrictions)(nil)).Elem()
}

func (i *apiKeyRestrictionsAndroidKeyRestrictionsPtrType) ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput() ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i *apiKeyRestrictionsAndroidKeyRestrictionsPtrType) ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput)
}

type ApiKeyRestrictionsAndroidKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsAndroidKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsAndroidKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsOutput() ApiKeyRestrictionsAndroidKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput() ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return o.ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyRestrictionsAndroidKeyRestrictions) *ApiKeyRestrictionsAndroidKeyRestrictions {
		return &v
	}).(ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput)
}

// A list of Android applications that are allowed to make API calls with this key.
func (o ApiKeyRestrictionsAndroidKeyRestrictionsOutput) AllowedApplications() ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput {
	return o.ApplyT(func(v ApiKeyRestrictionsAndroidKeyRestrictions) []ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication {
		return v.AllowedApplications
	}).(ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput)
}

type ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictionsAndroidKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput() ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput) Elem() ApiKeyRestrictionsAndroidKeyRestrictionsOutput {
	return o.ApplyT(func(v *ApiKeyRestrictionsAndroidKeyRestrictions) ApiKeyRestrictionsAndroidKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret ApiKeyRestrictionsAndroidKeyRestrictions
		return ret
	}).(ApiKeyRestrictionsAndroidKeyRestrictionsOutput)
}

// A list of Android applications that are allowed to make API calls with this key.
func (o ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput) AllowedApplications() ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput {
	return o.ApplyT(func(v *ApiKeyRestrictionsAndroidKeyRestrictions) []ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication {
		if v == nil {
			return nil
		}
		return v.AllowedApplications
	}).(ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput)
}

type ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication struct {
	// The package name of the application.
	PackageName string `pulumi:"packageName"`
	// The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

// ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationInput is an input type that accepts ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArgs and ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationInput` via:
//
//          ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArgs{...}
type ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationInput interface {
	pulumi.Input

	ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput() ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput
	ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutputWithContext(context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput
}

type ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArgs struct {
	// The package name of the application.
	PackageName pulumi.StringInput `pulumi:"packageName"`
	// The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication)(nil)).Elem()
}

func (i ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArgs) ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput() ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput {
	return i.ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArgs) ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput)
}

// ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayInput is an input type that accepts ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArray and ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayInput` via:
//
//          ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArray{ ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArgs{...} }
type ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayInput interface {
	pulumi.Input

	ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput() ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput
	ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutputWithContext(context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput
}

type ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArray []ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationInput

func (ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication)(nil)).Elem()
}

func (i ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArray) ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput() ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput {
	return i.ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArray) ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput)
}

type ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication)(nil)).Elem()
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput() ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput {
	return o
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput {
	return o
}

// The package name of the application.
func (o ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput) PackageName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication) string { return v.PackageName }).(pulumi.StringOutput)
}

// The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.
func (o ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication)(nil)).Elem()
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput() ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput {
	return o
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput) ToApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutputWithContext(ctx context.Context) ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput {
	return o
}

func (o ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput) Index(i pulumi.IntInput) ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication {
		return vs[0].([]ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplication)[vs[1].(int)]
	}).(ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput)
}

type ApiKeyRestrictionsApiTarget struct {
	// Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`
	Methods []string `pulumi:"methods"`
	// The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use `gcloud services list` to get a list of services that are enabled in the project.
	Service string `pulumi:"service"`
}

// ApiKeyRestrictionsApiTargetInput is an input type that accepts ApiKeyRestrictionsApiTargetArgs and ApiKeyRestrictionsApiTargetOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsApiTargetInput` via:
//
//          ApiKeyRestrictionsApiTargetArgs{...}
type ApiKeyRestrictionsApiTargetInput interface {
	pulumi.Input

	ToApiKeyRestrictionsApiTargetOutput() ApiKeyRestrictionsApiTargetOutput
	ToApiKeyRestrictionsApiTargetOutputWithContext(context.Context) ApiKeyRestrictionsApiTargetOutput
}

type ApiKeyRestrictionsApiTargetArgs struct {
	// Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use `gcloud services list` to get a list of services that are enabled in the project.
	Service pulumi.StringInput `pulumi:"service"`
}

func (ApiKeyRestrictionsApiTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsApiTarget)(nil)).Elem()
}

func (i ApiKeyRestrictionsApiTargetArgs) ToApiKeyRestrictionsApiTargetOutput() ApiKeyRestrictionsApiTargetOutput {
	return i.ToApiKeyRestrictionsApiTargetOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsApiTargetArgs) ToApiKeyRestrictionsApiTargetOutputWithContext(ctx context.Context) ApiKeyRestrictionsApiTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsApiTargetOutput)
}

// ApiKeyRestrictionsApiTargetArrayInput is an input type that accepts ApiKeyRestrictionsApiTargetArray and ApiKeyRestrictionsApiTargetArrayOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsApiTargetArrayInput` via:
//
//          ApiKeyRestrictionsApiTargetArray{ ApiKeyRestrictionsApiTargetArgs{...} }
type ApiKeyRestrictionsApiTargetArrayInput interface {
	pulumi.Input

	ToApiKeyRestrictionsApiTargetArrayOutput() ApiKeyRestrictionsApiTargetArrayOutput
	ToApiKeyRestrictionsApiTargetArrayOutputWithContext(context.Context) ApiKeyRestrictionsApiTargetArrayOutput
}

type ApiKeyRestrictionsApiTargetArray []ApiKeyRestrictionsApiTargetInput

func (ApiKeyRestrictionsApiTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyRestrictionsApiTarget)(nil)).Elem()
}

func (i ApiKeyRestrictionsApiTargetArray) ToApiKeyRestrictionsApiTargetArrayOutput() ApiKeyRestrictionsApiTargetArrayOutput {
	return i.ToApiKeyRestrictionsApiTargetArrayOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsApiTargetArray) ToApiKeyRestrictionsApiTargetArrayOutputWithContext(ctx context.Context) ApiKeyRestrictionsApiTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsApiTargetArrayOutput)
}

type ApiKeyRestrictionsApiTargetOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsApiTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsApiTarget)(nil)).Elem()
}

func (o ApiKeyRestrictionsApiTargetOutput) ToApiKeyRestrictionsApiTargetOutput() ApiKeyRestrictionsApiTargetOutput {
	return o
}

func (o ApiKeyRestrictionsApiTargetOutput) ToApiKeyRestrictionsApiTargetOutputWithContext(ctx context.Context) ApiKeyRestrictionsApiTargetOutput {
	return o
}

// Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`
func (o ApiKeyRestrictionsApiTargetOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiKeyRestrictionsApiTarget) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use `gcloud services list` to get a list of services that are enabled in the project.
func (o ApiKeyRestrictionsApiTargetOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyRestrictionsApiTarget) string { return v.Service }).(pulumi.StringOutput)
}

type ApiKeyRestrictionsApiTargetArrayOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsApiTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyRestrictionsApiTarget)(nil)).Elem()
}

func (o ApiKeyRestrictionsApiTargetArrayOutput) ToApiKeyRestrictionsApiTargetArrayOutput() ApiKeyRestrictionsApiTargetArrayOutput {
	return o
}

func (o ApiKeyRestrictionsApiTargetArrayOutput) ToApiKeyRestrictionsApiTargetArrayOutputWithContext(ctx context.Context) ApiKeyRestrictionsApiTargetArrayOutput {
	return o
}

func (o ApiKeyRestrictionsApiTargetArrayOutput) Index(i pulumi.IntInput) ApiKeyRestrictionsApiTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiKeyRestrictionsApiTarget {
		return vs[0].([]ApiKeyRestrictionsApiTarget)[vs[1].(int)]
	}).(ApiKeyRestrictionsApiTargetOutput)
}

type ApiKeyRestrictionsBrowserKeyRestrictions struct {
	// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
	AllowedReferrers []string `pulumi:"allowedReferrers"`
}

// ApiKeyRestrictionsBrowserKeyRestrictionsInput is an input type that accepts ApiKeyRestrictionsBrowserKeyRestrictionsArgs and ApiKeyRestrictionsBrowserKeyRestrictionsOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsBrowserKeyRestrictionsInput` via:
//
//          ApiKeyRestrictionsBrowserKeyRestrictionsArgs{...}
type ApiKeyRestrictionsBrowserKeyRestrictionsInput interface {
	pulumi.Input

	ToApiKeyRestrictionsBrowserKeyRestrictionsOutput() ApiKeyRestrictionsBrowserKeyRestrictionsOutput
	ToApiKeyRestrictionsBrowserKeyRestrictionsOutputWithContext(context.Context) ApiKeyRestrictionsBrowserKeyRestrictionsOutput
}

type ApiKeyRestrictionsBrowserKeyRestrictionsArgs struct {
	// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
	AllowedReferrers pulumi.StringArrayInput `pulumi:"allowedReferrers"`
}

func (ApiKeyRestrictionsBrowserKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsBrowserKeyRestrictions)(nil)).Elem()
}

func (i ApiKeyRestrictionsBrowserKeyRestrictionsArgs) ToApiKeyRestrictionsBrowserKeyRestrictionsOutput() ApiKeyRestrictionsBrowserKeyRestrictionsOutput {
	return i.ToApiKeyRestrictionsBrowserKeyRestrictionsOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsBrowserKeyRestrictionsArgs) ToApiKeyRestrictionsBrowserKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsBrowserKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsBrowserKeyRestrictionsOutput)
}

func (i ApiKeyRestrictionsBrowserKeyRestrictionsArgs) ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput() ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsBrowserKeyRestrictionsArgs) ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsBrowserKeyRestrictionsOutput).ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutputWithContext(ctx)
}

// ApiKeyRestrictionsBrowserKeyRestrictionsPtrInput is an input type that accepts ApiKeyRestrictionsBrowserKeyRestrictionsArgs, ApiKeyRestrictionsBrowserKeyRestrictionsPtr and ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsBrowserKeyRestrictionsPtrInput` via:
//
//          ApiKeyRestrictionsBrowserKeyRestrictionsArgs{...}
//
//  or:
//
//          nil
type ApiKeyRestrictionsBrowserKeyRestrictionsPtrInput interface {
	pulumi.Input

	ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput() ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput
	ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutputWithContext(context.Context) ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput
}

type apiKeyRestrictionsBrowserKeyRestrictionsPtrType ApiKeyRestrictionsBrowserKeyRestrictionsArgs

func ApiKeyRestrictionsBrowserKeyRestrictionsPtr(v *ApiKeyRestrictionsBrowserKeyRestrictionsArgs) ApiKeyRestrictionsBrowserKeyRestrictionsPtrInput {
	return (*apiKeyRestrictionsBrowserKeyRestrictionsPtrType)(v)
}

func (*apiKeyRestrictionsBrowserKeyRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictionsBrowserKeyRestrictions)(nil)).Elem()
}

func (i *apiKeyRestrictionsBrowserKeyRestrictionsPtrType) ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput() ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i *apiKeyRestrictionsBrowserKeyRestrictionsPtrType) ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput)
}

type ApiKeyRestrictionsBrowserKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsBrowserKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsBrowserKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsBrowserKeyRestrictionsOutput) ToApiKeyRestrictionsBrowserKeyRestrictionsOutput() ApiKeyRestrictionsBrowserKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsBrowserKeyRestrictionsOutput) ToApiKeyRestrictionsBrowserKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsBrowserKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsBrowserKeyRestrictionsOutput) ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput() ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return o.ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (o ApiKeyRestrictionsBrowserKeyRestrictionsOutput) ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyRestrictionsBrowserKeyRestrictions) *ApiKeyRestrictionsBrowserKeyRestrictions {
		return &v
	}).(ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput)
}

// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
func (o ApiKeyRestrictionsBrowserKeyRestrictionsOutput) AllowedReferrers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiKeyRestrictionsBrowserKeyRestrictions) []string { return v.AllowedReferrers }).(pulumi.StringArrayOutput)
}

type ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictionsBrowserKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput) ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput() ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput) ToApiKeyRestrictionsBrowserKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput) Elem() ApiKeyRestrictionsBrowserKeyRestrictionsOutput {
	return o.ApplyT(func(v *ApiKeyRestrictionsBrowserKeyRestrictions) ApiKeyRestrictionsBrowserKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret ApiKeyRestrictionsBrowserKeyRestrictions
		return ret
	}).(ApiKeyRestrictionsBrowserKeyRestrictionsOutput)
}

// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
func (o ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput) AllowedReferrers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiKeyRestrictionsBrowserKeyRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedReferrers
	}).(pulumi.StringArrayOutput)
}

type ApiKeyRestrictionsIosKeyRestrictions struct {
	// A list of bundle IDs that are allowed when making API calls with this key.
	AllowedBundleIds []string `pulumi:"allowedBundleIds"`
}

// ApiKeyRestrictionsIosKeyRestrictionsInput is an input type that accepts ApiKeyRestrictionsIosKeyRestrictionsArgs and ApiKeyRestrictionsIosKeyRestrictionsOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsIosKeyRestrictionsInput` via:
//
//          ApiKeyRestrictionsIosKeyRestrictionsArgs{...}
type ApiKeyRestrictionsIosKeyRestrictionsInput interface {
	pulumi.Input

	ToApiKeyRestrictionsIosKeyRestrictionsOutput() ApiKeyRestrictionsIosKeyRestrictionsOutput
	ToApiKeyRestrictionsIosKeyRestrictionsOutputWithContext(context.Context) ApiKeyRestrictionsIosKeyRestrictionsOutput
}

type ApiKeyRestrictionsIosKeyRestrictionsArgs struct {
	// A list of bundle IDs that are allowed when making API calls with this key.
	AllowedBundleIds pulumi.StringArrayInput `pulumi:"allowedBundleIds"`
}

func (ApiKeyRestrictionsIosKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsIosKeyRestrictions)(nil)).Elem()
}

func (i ApiKeyRestrictionsIosKeyRestrictionsArgs) ToApiKeyRestrictionsIosKeyRestrictionsOutput() ApiKeyRestrictionsIosKeyRestrictionsOutput {
	return i.ToApiKeyRestrictionsIosKeyRestrictionsOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsIosKeyRestrictionsArgs) ToApiKeyRestrictionsIosKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsIosKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsIosKeyRestrictionsOutput)
}

func (i ApiKeyRestrictionsIosKeyRestrictionsArgs) ToApiKeyRestrictionsIosKeyRestrictionsPtrOutput() ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsIosKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsIosKeyRestrictionsArgs) ToApiKeyRestrictionsIosKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsIosKeyRestrictionsOutput).ToApiKeyRestrictionsIosKeyRestrictionsPtrOutputWithContext(ctx)
}

// ApiKeyRestrictionsIosKeyRestrictionsPtrInput is an input type that accepts ApiKeyRestrictionsIosKeyRestrictionsArgs, ApiKeyRestrictionsIosKeyRestrictionsPtr and ApiKeyRestrictionsIosKeyRestrictionsPtrOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsIosKeyRestrictionsPtrInput` via:
//
//          ApiKeyRestrictionsIosKeyRestrictionsArgs{...}
//
//  or:
//
//          nil
type ApiKeyRestrictionsIosKeyRestrictionsPtrInput interface {
	pulumi.Input

	ToApiKeyRestrictionsIosKeyRestrictionsPtrOutput() ApiKeyRestrictionsIosKeyRestrictionsPtrOutput
	ToApiKeyRestrictionsIosKeyRestrictionsPtrOutputWithContext(context.Context) ApiKeyRestrictionsIosKeyRestrictionsPtrOutput
}

type apiKeyRestrictionsIosKeyRestrictionsPtrType ApiKeyRestrictionsIosKeyRestrictionsArgs

func ApiKeyRestrictionsIosKeyRestrictionsPtr(v *ApiKeyRestrictionsIosKeyRestrictionsArgs) ApiKeyRestrictionsIosKeyRestrictionsPtrInput {
	return (*apiKeyRestrictionsIosKeyRestrictionsPtrType)(v)
}

func (*apiKeyRestrictionsIosKeyRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictionsIosKeyRestrictions)(nil)).Elem()
}

func (i *apiKeyRestrictionsIosKeyRestrictionsPtrType) ToApiKeyRestrictionsIosKeyRestrictionsPtrOutput() ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsIosKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i *apiKeyRestrictionsIosKeyRestrictionsPtrType) ToApiKeyRestrictionsIosKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsIosKeyRestrictionsPtrOutput)
}

type ApiKeyRestrictionsIosKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsIosKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsIosKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsIosKeyRestrictionsOutput) ToApiKeyRestrictionsIosKeyRestrictionsOutput() ApiKeyRestrictionsIosKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsIosKeyRestrictionsOutput) ToApiKeyRestrictionsIosKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsIosKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsIosKeyRestrictionsOutput) ToApiKeyRestrictionsIosKeyRestrictionsPtrOutput() ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return o.ToApiKeyRestrictionsIosKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (o ApiKeyRestrictionsIosKeyRestrictionsOutput) ToApiKeyRestrictionsIosKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyRestrictionsIosKeyRestrictions) *ApiKeyRestrictionsIosKeyRestrictions {
		return &v
	}).(ApiKeyRestrictionsIosKeyRestrictionsPtrOutput)
}

// A list of bundle IDs that are allowed when making API calls with this key.
func (o ApiKeyRestrictionsIosKeyRestrictionsOutput) AllowedBundleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiKeyRestrictionsIosKeyRestrictions) []string { return v.AllowedBundleIds }).(pulumi.StringArrayOutput)
}

type ApiKeyRestrictionsIosKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsIosKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictionsIosKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsIosKeyRestrictionsPtrOutput) ToApiKeyRestrictionsIosKeyRestrictionsPtrOutput() ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsIosKeyRestrictionsPtrOutput) ToApiKeyRestrictionsIosKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsIosKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsIosKeyRestrictionsPtrOutput) Elem() ApiKeyRestrictionsIosKeyRestrictionsOutput {
	return o.ApplyT(func(v *ApiKeyRestrictionsIosKeyRestrictions) ApiKeyRestrictionsIosKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret ApiKeyRestrictionsIosKeyRestrictions
		return ret
	}).(ApiKeyRestrictionsIosKeyRestrictionsOutput)
}

// A list of bundle IDs that are allowed when making API calls with this key.
func (o ApiKeyRestrictionsIosKeyRestrictionsPtrOutput) AllowedBundleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiKeyRestrictionsIosKeyRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedBundleIds
	}).(pulumi.StringArrayOutput)
}

type ApiKeyRestrictionsServerKeyRestrictions struct {
	// A list of the caller IP addresses that are allowed to make API calls with this key.
	AllowedIps []string `pulumi:"allowedIps"`
}

// ApiKeyRestrictionsServerKeyRestrictionsInput is an input type that accepts ApiKeyRestrictionsServerKeyRestrictionsArgs and ApiKeyRestrictionsServerKeyRestrictionsOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsServerKeyRestrictionsInput` via:
//
//          ApiKeyRestrictionsServerKeyRestrictionsArgs{...}
type ApiKeyRestrictionsServerKeyRestrictionsInput interface {
	pulumi.Input

	ToApiKeyRestrictionsServerKeyRestrictionsOutput() ApiKeyRestrictionsServerKeyRestrictionsOutput
	ToApiKeyRestrictionsServerKeyRestrictionsOutputWithContext(context.Context) ApiKeyRestrictionsServerKeyRestrictionsOutput
}

type ApiKeyRestrictionsServerKeyRestrictionsArgs struct {
	// A list of the caller IP addresses that are allowed to make API calls with this key.
	AllowedIps pulumi.StringArrayInput `pulumi:"allowedIps"`
}

func (ApiKeyRestrictionsServerKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsServerKeyRestrictions)(nil)).Elem()
}

func (i ApiKeyRestrictionsServerKeyRestrictionsArgs) ToApiKeyRestrictionsServerKeyRestrictionsOutput() ApiKeyRestrictionsServerKeyRestrictionsOutput {
	return i.ToApiKeyRestrictionsServerKeyRestrictionsOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsServerKeyRestrictionsArgs) ToApiKeyRestrictionsServerKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsServerKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsServerKeyRestrictionsOutput)
}

func (i ApiKeyRestrictionsServerKeyRestrictionsArgs) ToApiKeyRestrictionsServerKeyRestrictionsPtrOutput() ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsServerKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsServerKeyRestrictionsArgs) ToApiKeyRestrictionsServerKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsServerKeyRestrictionsOutput).ToApiKeyRestrictionsServerKeyRestrictionsPtrOutputWithContext(ctx)
}

// ApiKeyRestrictionsServerKeyRestrictionsPtrInput is an input type that accepts ApiKeyRestrictionsServerKeyRestrictionsArgs, ApiKeyRestrictionsServerKeyRestrictionsPtr and ApiKeyRestrictionsServerKeyRestrictionsPtrOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsServerKeyRestrictionsPtrInput` via:
//
//          ApiKeyRestrictionsServerKeyRestrictionsArgs{...}
//
//  or:
//
//          nil
type ApiKeyRestrictionsServerKeyRestrictionsPtrInput interface {
	pulumi.Input

	ToApiKeyRestrictionsServerKeyRestrictionsPtrOutput() ApiKeyRestrictionsServerKeyRestrictionsPtrOutput
	ToApiKeyRestrictionsServerKeyRestrictionsPtrOutputWithContext(context.Context) ApiKeyRestrictionsServerKeyRestrictionsPtrOutput
}

type apiKeyRestrictionsServerKeyRestrictionsPtrType ApiKeyRestrictionsServerKeyRestrictionsArgs

func ApiKeyRestrictionsServerKeyRestrictionsPtr(v *ApiKeyRestrictionsServerKeyRestrictionsArgs) ApiKeyRestrictionsServerKeyRestrictionsPtrInput {
	return (*apiKeyRestrictionsServerKeyRestrictionsPtrType)(v)
}

func (*apiKeyRestrictionsServerKeyRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictionsServerKeyRestrictions)(nil)).Elem()
}

func (i *apiKeyRestrictionsServerKeyRestrictionsPtrType) ToApiKeyRestrictionsServerKeyRestrictionsPtrOutput() ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return i.ToApiKeyRestrictionsServerKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i *apiKeyRestrictionsServerKeyRestrictionsPtrType) ToApiKeyRestrictionsServerKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsServerKeyRestrictionsPtrOutput)
}

type ApiKeyRestrictionsServerKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsServerKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictionsServerKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsServerKeyRestrictionsOutput) ToApiKeyRestrictionsServerKeyRestrictionsOutput() ApiKeyRestrictionsServerKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsServerKeyRestrictionsOutput) ToApiKeyRestrictionsServerKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsServerKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsServerKeyRestrictionsOutput) ToApiKeyRestrictionsServerKeyRestrictionsPtrOutput() ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return o.ToApiKeyRestrictionsServerKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (o ApiKeyRestrictionsServerKeyRestrictionsOutput) ToApiKeyRestrictionsServerKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyRestrictionsServerKeyRestrictions) *ApiKeyRestrictionsServerKeyRestrictions {
		return &v
	}).(ApiKeyRestrictionsServerKeyRestrictionsPtrOutput)
}

// A list of the caller IP addresses that are allowed to make API calls with this key.
func (o ApiKeyRestrictionsServerKeyRestrictionsOutput) AllowedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiKeyRestrictionsServerKeyRestrictions) []string { return v.AllowedIps }).(pulumi.StringArrayOutput)
}

type ApiKeyRestrictionsServerKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsServerKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictionsServerKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsServerKeyRestrictionsPtrOutput) ToApiKeyRestrictionsServerKeyRestrictionsPtrOutput() ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsServerKeyRestrictionsPtrOutput) ToApiKeyRestrictionsServerKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsServerKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsServerKeyRestrictionsPtrOutput) Elem() ApiKeyRestrictionsServerKeyRestrictionsOutput {
	return o.ApplyT(func(v *ApiKeyRestrictionsServerKeyRestrictions) ApiKeyRestrictionsServerKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret ApiKeyRestrictionsServerKeyRestrictions
		return ret
	}).(ApiKeyRestrictionsServerKeyRestrictionsOutput)
}

// A list of the caller IP addresses that are allowed to make API calls with this key.
func (o ApiKeyRestrictionsServerKeyRestrictionsPtrOutput) AllowedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiKeyRestrictionsServerKeyRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedIps
	}).(pulumi.StringArrayOutput)
}

type IAMAuditConfigAuditLogConfig struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType string `pulumi:"logType"`
}

// IAMAuditConfigAuditLogConfigInput is an input type that accepts IAMAuditConfigAuditLogConfigArgs and IAMAuditConfigAuditLogConfigOutput values.
// You can construct a concrete instance of `IAMAuditConfigAuditLogConfigInput` via:
//
//          IAMAuditConfigAuditLogConfigArgs{...}
type IAMAuditConfigAuditLogConfigInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigOutput() IAMAuditConfigAuditLogConfigOutput
	ToIAMAuditConfigAuditLogConfigOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigOutput
}

type IAMAuditConfigAuditLogConfigArgs struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (IAMAuditConfigAuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigArgs) ToIAMAuditConfigAuditLogConfigOutput() IAMAuditConfigAuditLogConfigOutput {
	return i.ToIAMAuditConfigAuditLogConfigOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigArgs) ToIAMAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigOutput)
}

// IAMAuditConfigAuditLogConfigArrayInput is an input type that accepts IAMAuditConfigAuditLogConfigArray and IAMAuditConfigAuditLogConfigArrayOutput values.
// You can construct a concrete instance of `IAMAuditConfigAuditLogConfigArrayInput` via:
//
//          IAMAuditConfigAuditLogConfigArray{ IAMAuditConfigAuditLogConfigArgs{...} }
type IAMAuditConfigAuditLogConfigArrayInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigArrayOutput() IAMAuditConfigAuditLogConfigArrayOutput
	ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigArrayOutput
}

type IAMAuditConfigAuditLogConfigArray []IAMAuditConfigAuditLogConfigInput

func (IAMAuditConfigAuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigArray) ToIAMAuditConfigAuditLogConfigArrayOutput() IAMAuditConfigAuditLogConfigArrayOutput {
	return i.ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigArray) ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigArrayOutput)
}

type IAMAuditConfigAuditLogConfigOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigOutput) ToIAMAuditConfigAuditLogConfigOutput() IAMAuditConfigAuditLogConfigOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigOutput) ToIAMAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigOutput {
	return o
}

// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
func (o IAMAuditConfigAuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
func (o IAMAuditConfigAuditLogConfigOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfig) string { return v.LogType }).(pulumi.StringOutput)
}

type IAMAuditConfigAuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigArrayOutput) ToIAMAuditConfigAuditLogConfigArrayOutput() IAMAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigArrayOutput) ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigArrayOutput) Index(i pulumi.IntInput) IAMAuditConfigAuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IAMAuditConfigAuditLogConfig {
		return vs[0].([]IAMAuditConfigAuditLogConfig)[vs[1].(int)]
	}).(IAMAuditConfigAuditLogConfigOutput)
}

type IAMBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// IAMBindingConditionInput is an input type that accepts IAMBindingConditionArgs and IAMBindingConditionOutput values.
// You can construct a concrete instance of `IAMBindingConditionInput` via:
//
//          IAMBindingConditionArgs{...}
type IAMBindingConditionInput interface {
	pulumi.Input

	ToIAMBindingConditionOutput() IAMBindingConditionOutput
	ToIAMBindingConditionOutputWithContext(context.Context) IAMBindingConditionOutput
}

type IAMBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingCondition)(nil)).Elem()
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionOutput() IAMBindingConditionOutput {
	return i.ToIAMBindingConditionOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionOutputWithContext(ctx context.Context) IAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionOutput)
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return i.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionOutput).ToIAMBindingConditionPtrOutputWithContext(ctx)
}

// IAMBindingConditionPtrInput is an input type that accepts IAMBindingConditionArgs, IAMBindingConditionPtr and IAMBindingConditionPtrOutput values.
// You can construct a concrete instance of `IAMBindingConditionPtrInput` via:
//
//          IAMBindingConditionArgs{...}
//
//  or:
//
//          nil
type IAMBindingConditionPtrInput interface {
	pulumi.Input

	ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput
	ToIAMBindingConditionPtrOutputWithContext(context.Context) IAMBindingConditionPtrOutput
}

type iambindingConditionPtrType IAMBindingConditionArgs

func IAMBindingConditionPtr(v *IAMBindingConditionArgs) IAMBindingConditionPtrInput {
	return (*iambindingConditionPtrType)(v)
}

func (*iambindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingCondition)(nil)).Elem()
}

func (i *iambindingConditionPtrType) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return i.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *iambindingConditionPtrType) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionPtrOutput)
}

type IAMBindingConditionOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingCondition)(nil)).Elem()
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionOutput() IAMBindingConditionOutput {
	return o
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionOutputWithContext(ctx context.Context) IAMBindingConditionOutput {
	return o
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return o.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IAMBindingCondition) *IAMBindingCondition {
		return &v
	}).(IAMBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingCondition)(nil)).Elem()
}

func (o IAMBindingConditionPtrOutput) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return o
}

func (o IAMBindingConditionPtrOutput) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return o
}

func (o IAMBindingConditionPtrOutput) Elem() IAMBindingConditionOutput {
	return o.ApplyT(func(v *IAMBindingCondition) IAMBindingCondition {
		if v != nil {
			return *v
		}
		var ret IAMBindingCondition
		return ret
	}).(IAMBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type IAMMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// IAMMemberConditionInput is an input type that accepts IAMMemberConditionArgs and IAMMemberConditionOutput values.
// You can construct a concrete instance of `IAMMemberConditionInput` via:
//
//          IAMMemberConditionArgs{...}
type IAMMemberConditionInput interface {
	pulumi.Input

	ToIAMMemberConditionOutput() IAMMemberConditionOutput
	ToIAMMemberConditionOutputWithContext(context.Context) IAMMemberConditionOutput
}

type IAMMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberCondition)(nil)).Elem()
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionOutput() IAMMemberConditionOutput {
	return i.ToIAMMemberConditionOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionOutputWithContext(ctx context.Context) IAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionOutput)
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return i.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionOutput).ToIAMMemberConditionPtrOutputWithContext(ctx)
}

// IAMMemberConditionPtrInput is an input type that accepts IAMMemberConditionArgs, IAMMemberConditionPtr and IAMMemberConditionPtrOutput values.
// You can construct a concrete instance of `IAMMemberConditionPtrInput` via:
//
//          IAMMemberConditionArgs{...}
//
//  or:
//
//          nil
type IAMMemberConditionPtrInput interface {
	pulumi.Input

	ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput
	ToIAMMemberConditionPtrOutputWithContext(context.Context) IAMMemberConditionPtrOutput
}

type iammemberConditionPtrType IAMMemberConditionArgs

func IAMMemberConditionPtr(v *IAMMemberConditionArgs) IAMMemberConditionPtrInput {
	return (*iammemberConditionPtrType)(v)
}

func (*iammemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberCondition)(nil)).Elem()
}

func (i *iammemberConditionPtrType) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return i.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *iammemberConditionPtrType) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionPtrOutput)
}

type IAMMemberConditionOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberCondition)(nil)).Elem()
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionOutput() IAMMemberConditionOutput {
	return o
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionOutputWithContext(ctx context.Context) IAMMemberConditionOutput {
	return o
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return o.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IAMMemberCondition) *IAMMemberCondition {
		return &v
	}).(IAMMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberCondition)(nil)).Elem()
}

func (o IAMMemberConditionPtrOutput) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return o
}

func (o IAMMemberConditionPtrOutput) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return o
}

func (o IAMMemberConditionPtrOutput) Elem() IAMMemberConditionOutput {
	return o.ApplyT(func(v *IAMMemberCondition) IAMMemberCondition {
		if v != nil {
			return *v
		}
		var ret IAMMemberCondition
		return ret
	}).(IAMMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type OrganizationPolicyBooleanPolicy struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced bool `pulumi:"enforced"`
}

// OrganizationPolicyBooleanPolicyInput is an input type that accepts OrganizationPolicyBooleanPolicyArgs and OrganizationPolicyBooleanPolicyOutput values.
// You can construct a concrete instance of `OrganizationPolicyBooleanPolicyInput` via:
//
//          OrganizationPolicyBooleanPolicyArgs{...}
type OrganizationPolicyBooleanPolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyBooleanPolicyOutput() OrganizationPolicyBooleanPolicyOutput
	ToOrganizationPolicyBooleanPolicyOutputWithContext(context.Context) OrganizationPolicyBooleanPolicyOutput
}

type OrganizationPolicyBooleanPolicyArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (OrganizationPolicyBooleanPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyOutput() OrganizationPolicyBooleanPolicyOutput {
	return i.ToOrganizationPolicyBooleanPolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyOutput)
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return i.ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyOutput).ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx)
}

// OrganizationPolicyBooleanPolicyPtrInput is an input type that accepts OrganizationPolicyBooleanPolicyArgs, OrganizationPolicyBooleanPolicyPtr and OrganizationPolicyBooleanPolicyPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyBooleanPolicyPtrInput` via:
//
//          OrganizationPolicyBooleanPolicyArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyBooleanPolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput
	ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Context) OrganizationPolicyBooleanPolicyPtrOutput
}

type organizationPolicyBooleanPolicyPtrType OrganizationPolicyBooleanPolicyArgs

func OrganizationPolicyBooleanPolicyPtr(v *OrganizationPolicyBooleanPolicyArgs) OrganizationPolicyBooleanPolicyPtrInput {
	return (*organizationPolicyBooleanPolicyPtrType)(v)
}

func (*organizationPolicyBooleanPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i *organizationPolicyBooleanPolicyPtrType) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return i.ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyBooleanPolicyPtrType) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyPtrOutput)
}

type OrganizationPolicyBooleanPolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyBooleanPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyOutput() OrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return o.ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationPolicyBooleanPolicy) *OrganizationPolicyBooleanPolicy {
		return &v
	}).(OrganizationPolicyBooleanPolicyPtrOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o OrganizationPolicyBooleanPolicyOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicy) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type OrganizationPolicyBooleanPolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyBooleanPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o OrganizationPolicyBooleanPolicyPtrOutput) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyPtrOutput) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyPtrOutput) Elem() OrganizationPolicyBooleanPolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicyBooleanPolicy) OrganizationPolicyBooleanPolicy {
		if v != nil {
			return *v
		}
		var ret OrganizationPolicyBooleanPolicy
		return ret
	}).(OrganizationPolicyBooleanPolicyOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o OrganizationPolicyBooleanPolicyPtrOutput) Enforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyBooleanPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enforced
	}).(pulumi.BoolPtrOutput)
}

type OrganizationPolicyListPolicy struct {
	// or `deny` - (Optional) One or the other must be set.
	Allow *OrganizationPolicyListPolicyAllow `pulumi:"allow"`
	Deny  *OrganizationPolicyListPolicyDeny  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent *bool `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue *string `pulumi:"suggestedValue"`
}

// OrganizationPolicyListPolicyInput is an input type that accepts OrganizationPolicyListPolicyArgs and OrganizationPolicyListPolicyOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyInput` via:
//
//          OrganizationPolicyListPolicyArgs{...}
type OrganizationPolicyListPolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyOutput() OrganizationPolicyListPolicyOutput
	ToOrganizationPolicyListPolicyOutputWithContext(context.Context) OrganizationPolicyListPolicyOutput
}

type OrganizationPolicyListPolicyArgs struct {
	// or `deny` - (Optional) One or the other must be set.
	Allow OrganizationPolicyListPolicyAllowPtrInput `pulumi:"allow"`
	Deny  OrganizationPolicyListPolicyDenyPtrInput  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent pulumi.BoolPtrInput `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue pulumi.StringPtrInput `pulumi:"suggestedValue"`
}

func (OrganizationPolicyListPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicy)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyOutput() OrganizationPolicyListPolicyOutput {
	return i.ToOrganizationPolicyListPolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyOutput)
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return i.ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyOutput).ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx)
}

// OrganizationPolicyListPolicyPtrInput is an input type that accepts OrganizationPolicyListPolicyArgs, OrganizationPolicyListPolicyPtr and OrganizationPolicyListPolicyPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyPtrInput` via:
//
//          OrganizationPolicyListPolicyArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyListPolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput
	ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyPtrOutput
}

type organizationPolicyListPolicyPtrType OrganizationPolicyListPolicyArgs

func OrganizationPolicyListPolicyPtr(v *OrganizationPolicyListPolicyArgs) OrganizationPolicyListPolicyPtrInput {
	return (*organizationPolicyListPolicyPtrType)(v)
}

func (*organizationPolicyListPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicy)(nil)).Elem()
}

func (i *organizationPolicyListPolicyPtrType) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return i.ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyPtrType) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyPtrOutput)
}

type OrganizationPolicyListPolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicy)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyOutput() OrganizationPolicyListPolicyOutput {
	return o
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyOutput {
	return o
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return o.ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicy {
		return &v
	}).(OrganizationPolicyListPolicyPtrOutput)
}

// or `deny` - (Optional) One or the other must be set.
func (o OrganizationPolicyListPolicyOutput) Allow() OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyAllow { return v.Allow }).(OrganizationPolicyListPolicyAllowPtrOutput)
}

func (o OrganizationPolicyListPolicyOutput) Deny() OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyDeny { return v.Deny }).(OrganizationPolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o OrganizationPolicyListPolicyOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o OrganizationPolicyListPolicyOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *string { return v.SuggestedValue }).(pulumi.StringPtrOutput)
}

type OrganizationPolicyListPolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicy)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyPtrOutput) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyPtrOutput) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyPtrOutput) Elem() OrganizationPolicyListPolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) OrganizationPolicyListPolicy {
		if v != nil {
			return *v
		}
		var ret OrganizationPolicyListPolicy
		return ret
	}).(OrganizationPolicyListPolicyOutput)
}

// or `deny` - (Optional) One or the other must be set.
func (o OrganizationPolicyListPolicyPtrOutput) Allow() OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyAllow {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(OrganizationPolicyListPolicyAllowPtrOutput)
}

func (o OrganizationPolicyListPolicyPtrOutput) Deny() OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyDeny {
		if v == nil {
			return nil
		}
		return v.Deny
	}).(OrganizationPolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o OrganizationPolicyListPolicyPtrOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.InheritFromParent
	}).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o OrganizationPolicyListPolicyPtrOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) *string {
		if v == nil {
			return nil
		}
		return v.SuggestedValue
	}).(pulumi.StringPtrOutput)
}

type OrganizationPolicyListPolicyAllow struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

// OrganizationPolicyListPolicyAllowInput is an input type that accepts OrganizationPolicyListPolicyAllowArgs and OrganizationPolicyListPolicyAllowOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyAllowInput` via:
//
//          OrganizationPolicyListPolicyAllowArgs{...}
type OrganizationPolicyListPolicyAllowInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyAllowOutput() OrganizationPolicyListPolicyAllowOutput
	ToOrganizationPolicyListPolicyAllowOutputWithContext(context.Context) OrganizationPolicyListPolicyAllowOutput
}

type OrganizationPolicyListPolicyAllowArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowOutput() OrganizationPolicyListPolicyAllowOutput {
	return i.ToOrganizationPolicyListPolicyAllowOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowOutput)
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return i.ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowOutput).ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx)
}

// OrganizationPolicyListPolicyAllowPtrInput is an input type that accepts OrganizationPolicyListPolicyAllowArgs, OrganizationPolicyListPolicyAllowPtr and OrganizationPolicyListPolicyAllowPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyAllowPtrInput` via:
//
//          OrganizationPolicyListPolicyAllowArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyListPolicyAllowPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput
	ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyAllowPtrOutput
}

type organizationPolicyListPolicyAllowPtrType OrganizationPolicyListPolicyAllowArgs

func OrganizationPolicyListPolicyAllowPtr(v *OrganizationPolicyListPolicyAllowArgs) OrganizationPolicyListPolicyAllowPtrInput {
	return (*organizationPolicyListPolicyAllowPtrType)(v)
}

func (*organizationPolicyListPolicyAllowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i *organizationPolicyListPolicyAllowPtrType) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return i.ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyAllowPtrType) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowPtrOutput)
}

type OrganizationPolicyListPolicyAllowOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowOutput() OrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationPolicyListPolicyAllow) *OrganizationPolicyListPolicyAllow {
		return &v
	}).(OrganizationPolicyListPolicyAllowPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyAllowOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyAllowOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyAllowPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyAllowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyAllowPtrOutput) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowPtrOutput) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowPtrOutput) Elem() OrganizationPolicyListPolicyAllowOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyAllow) OrganizationPolicyListPolicyAllow {
		if v != nil {
			return *v
		}
		var ret OrganizationPolicyListPolicyAllow
		return ret
	}).(OrganizationPolicyListPolicyAllowOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyAllowPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyAllow) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyAllowPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyAllow) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyDeny struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

// OrganizationPolicyListPolicyDenyInput is an input type that accepts OrganizationPolicyListPolicyDenyArgs and OrganizationPolicyListPolicyDenyOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyDenyInput` via:
//
//          OrganizationPolicyListPolicyDenyArgs{...}
type OrganizationPolicyListPolicyDenyInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyDenyOutput() OrganizationPolicyListPolicyDenyOutput
	ToOrganizationPolicyListPolicyDenyOutputWithContext(context.Context) OrganizationPolicyListPolicyDenyOutput
}

type OrganizationPolicyListPolicyDenyArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyOutput() OrganizationPolicyListPolicyDenyOutput {
	return i.ToOrganizationPolicyListPolicyDenyOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyOutput)
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return i.ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyOutput).ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx)
}

// OrganizationPolicyListPolicyDenyPtrInput is an input type that accepts OrganizationPolicyListPolicyDenyArgs, OrganizationPolicyListPolicyDenyPtr and OrganizationPolicyListPolicyDenyPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyDenyPtrInput` via:
//
//          OrganizationPolicyListPolicyDenyArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyListPolicyDenyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput
	ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyDenyPtrOutput
}

type organizationPolicyListPolicyDenyPtrType OrganizationPolicyListPolicyDenyArgs

func OrganizationPolicyListPolicyDenyPtr(v *OrganizationPolicyListPolicyDenyArgs) OrganizationPolicyListPolicyDenyPtrInput {
	return (*organizationPolicyListPolicyDenyPtrType)(v)
}

func (*organizationPolicyListPolicyDenyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i *organizationPolicyListPolicyDenyPtrType) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return i.ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyDenyPtrType) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyPtrOutput)
}

type OrganizationPolicyListPolicyDenyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyOutput() OrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationPolicyListPolicyDeny) *OrganizationPolicyListPolicyDeny {
		return &v
	}).(OrganizationPolicyListPolicyDenyPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyDenyOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyDenyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyDenyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyDenyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyDenyPtrOutput) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyPtrOutput) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyPtrOutput) Elem() OrganizationPolicyListPolicyDenyOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyDeny) OrganizationPolicyListPolicyDeny {
		if v != nil {
			return *v
		}
		var ret OrganizationPolicyListPolicyDeny
		return ret
	}).(OrganizationPolicyListPolicyDenyOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyDenyPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyDeny) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyDenyPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyDeny) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type OrganizationPolicyRestorePolicy struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default bool `pulumi:"default"`
}

// OrganizationPolicyRestorePolicyInput is an input type that accepts OrganizationPolicyRestorePolicyArgs and OrganizationPolicyRestorePolicyOutput values.
// You can construct a concrete instance of `OrganizationPolicyRestorePolicyInput` via:
//
//          OrganizationPolicyRestorePolicyArgs{...}
type OrganizationPolicyRestorePolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyRestorePolicyOutput() OrganizationPolicyRestorePolicyOutput
	ToOrganizationPolicyRestorePolicyOutputWithContext(context.Context) OrganizationPolicyRestorePolicyOutput
}

type OrganizationPolicyRestorePolicyArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default pulumi.BoolInput `pulumi:"default"`
}

func (OrganizationPolicyRestorePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyOutput() OrganizationPolicyRestorePolicyOutput {
	return i.ToOrganizationPolicyRestorePolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyOutput)
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return i.ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyOutput).ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx)
}

// OrganizationPolicyRestorePolicyPtrInput is an input type that accepts OrganizationPolicyRestorePolicyArgs, OrganizationPolicyRestorePolicyPtr and OrganizationPolicyRestorePolicyPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyRestorePolicyPtrInput` via:
//
//          OrganizationPolicyRestorePolicyArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyRestorePolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput
	ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Context) OrganizationPolicyRestorePolicyPtrOutput
}

type organizationPolicyRestorePolicyPtrType OrganizationPolicyRestorePolicyArgs

func OrganizationPolicyRestorePolicyPtr(v *OrganizationPolicyRestorePolicyArgs) OrganizationPolicyRestorePolicyPtrInput {
	return (*organizationPolicyRestorePolicyPtrType)(v)
}

func (*organizationPolicyRestorePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i *organizationPolicyRestorePolicyPtrType) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return i.ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyRestorePolicyPtrType) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyPtrOutput)
}

type OrganizationPolicyRestorePolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyRestorePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyOutput() OrganizationPolicyRestorePolicyOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return o.ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationPolicyRestorePolicy) *OrganizationPolicyRestorePolicy {
		return &v
	}).(OrganizationPolicyRestorePolicyPtrOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o OrganizationPolicyRestorePolicyOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicy) bool { return v.Default }).(pulumi.BoolOutput)
}

type OrganizationPolicyRestorePolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyRestorePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o OrganizationPolicyRestorePolicyPtrOutput) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyPtrOutput) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyPtrOutput) Elem() OrganizationPolicyRestorePolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicyRestorePolicy) OrganizationPolicyRestorePolicy {
		if v != nil {
			return *v
		}
		var ret OrganizationPolicyRestorePolicy
		return ret
	}).(OrganizationPolicyRestorePolicyOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o OrganizationPolicyRestorePolicyPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyRestorePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Default
	}).(pulumi.BoolPtrOutput)
}

type GetOrganizationPolicyBooleanPolicy struct {
	Enforced bool `pulumi:"enforced"`
}

// GetOrganizationPolicyBooleanPolicyInput is an input type that accepts GetOrganizationPolicyBooleanPolicyArgs and GetOrganizationPolicyBooleanPolicyOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyBooleanPolicyInput` via:
//
//          GetOrganizationPolicyBooleanPolicyArgs{...}
type GetOrganizationPolicyBooleanPolicyInput interface {
	pulumi.Input

	ToGetOrganizationPolicyBooleanPolicyOutput() GetOrganizationPolicyBooleanPolicyOutput
	ToGetOrganizationPolicyBooleanPolicyOutputWithContext(context.Context) GetOrganizationPolicyBooleanPolicyOutput
}

type GetOrganizationPolicyBooleanPolicyArgs struct {
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (GetOrganizationPolicyBooleanPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyBooleanPolicyArgs) ToGetOrganizationPolicyBooleanPolicyOutput() GetOrganizationPolicyBooleanPolicyOutput {
	return i.ToGetOrganizationPolicyBooleanPolicyOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyBooleanPolicyArgs) ToGetOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyBooleanPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyBooleanPolicyOutput)
}

// GetOrganizationPolicyBooleanPolicyArrayInput is an input type that accepts GetOrganizationPolicyBooleanPolicyArray and GetOrganizationPolicyBooleanPolicyArrayOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyBooleanPolicyArrayInput` via:
//
//          GetOrganizationPolicyBooleanPolicyArray{ GetOrganizationPolicyBooleanPolicyArgs{...} }
type GetOrganizationPolicyBooleanPolicyArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyBooleanPolicyArrayOutput() GetOrganizationPolicyBooleanPolicyArrayOutput
	ToGetOrganizationPolicyBooleanPolicyArrayOutputWithContext(context.Context) GetOrganizationPolicyBooleanPolicyArrayOutput
}

type GetOrganizationPolicyBooleanPolicyArray []GetOrganizationPolicyBooleanPolicyInput

func (GetOrganizationPolicyBooleanPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyBooleanPolicyArray) ToGetOrganizationPolicyBooleanPolicyArrayOutput() GetOrganizationPolicyBooleanPolicyArrayOutput {
	return i.ToGetOrganizationPolicyBooleanPolicyArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyBooleanPolicyArray) ToGetOrganizationPolicyBooleanPolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyBooleanPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyBooleanPolicyArrayOutput)
}

type GetOrganizationPolicyBooleanPolicyOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyBooleanPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyBooleanPolicyOutput) ToGetOrganizationPolicyBooleanPolicyOutput() GetOrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o GetOrganizationPolicyBooleanPolicyOutput) ToGetOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o GetOrganizationPolicyBooleanPolicyOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyBooleanPolicy) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type GetOrganizationPolicyBooleanPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyBooleanPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyBooleanPolicyArrayOutput) ToGetOrganizationPolicyBooleanPolicyArrayOutput() GetOrganizationPolicyBooleanPolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyBooleanPolicyArrayOutput) ToGetOrganizationPolicyBooleanPolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyBooleanPolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyBooleanPolicyArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyBooleanPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyBooleanPolicy {
		return vs[0].([]GetOrganizationPolicyBooleanPolicy)[vs[1].(int)]
	}).(GetOrganizationPolicyBooleanPolicyOutput)
}

type GetOrganizationPolicyListPolicy struct {
	Allows            []GetOrganizationPolicyListPolicyAllow `pulumi:"allows"`
	Denies            []GetOrganizationPolicyListPolicyDeny  `pulumi:"denies"`
	InheritFromParent bool                                   `pulumi:"inheritFromParent"`
	SuggestedValue    string                                 `pulumi:"suggestedValue"`
}

// GetOrganizationPolicyListPolicyInput is an input type that accepts GetOrganizationPolicyListPolicyArgs and GetOrganizationPolicyListPolicyOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyListPolicyInput` via:
//
//          GetOrganizationPolicyListPolicyArgs{...}
type GetOrganizationPolicyListPolicyInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyOutput() GetOrganizationPolicyListPolicyOutput
	ToGetOrganizationPolicyListPolicyOutputWithContext(context.Context) GetOrganizationPolicyListPolicyOutput
}

type GetOrganizationPolicyListPolicyArgs struct {
	Allows            GetOrganizationPolicyListPolicyAllowArrayInput `pulumi:"allows"`
	Denies            GetOrganizationPolicyListPolicyDenyArrayInput  `pulumi:"denies"`
	InheritFromParent pulumi.BoolInput                               `pulumi:"inheritFromParent"`
	SuggestedValue    pulumi.StringInput                             `pulumi:"suggestedValue"`
}

func (GetOrganizationPolicyListPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyArgs) ToGetOrganizationPolicyListPolicyOutput() GetOrganizationPolicyListPolicyOutput {
	return i.ToGetOrganizationPolicyListPolicyOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyArgs) ToGetOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyOutput)
}

// GetOrganizationPolicyListPolicyArrayInput is an input type that accepts GetOrganizationPolicyListPolicyArray and GetOrganizationPolicyListPolicyArrayOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyListPolicyArrayInput` via:
//
//          GetOrganizationPolicyListPolicyArray{ GetOrganizationPolicyListPolicyArgs{...} }
type GetOrganizationPolicyListPolicyArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyArrayOutput() GetOrganizationPolicyListPolicyArrayOutput
	ToGetOrganizationPolicyListPolicyArrayOutputWithContext(context.Context) GetOrganizationPolicyListPolicyArrayOutput
}

type GetOrganizationPolicyListPolicyArray []GetOrganizationPolicyListPolicyInput

func (GetOrganizationPolicyListPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyArray) ToGetOrganizationPolicyListPolicyArrayOutput() GetOrganizationPolicyListPolicyArrayOutput {
	return i.ToGetOrganizationPolicyListPolicyArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyArray) ToGetOrganizationPolicyListPolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyArrayOutput)
}

type GetOrganizationPolicyListPolicyOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyOutput) ToGetOrganizationPolicyListPolicyOutput() GetOrganizationPolicyListPolicyOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyOutput) ToGetOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyOutput) Allows() GetOrganizationPolicyListPolicyAllowArrayOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicy) []GetOrganizationPolicyListPolicyAllow { return v.Allows }).(GetOrganizationPolicyListPolicyAllowArrayOutput)
}

func (o GetOrganizationPolicyListPolicyOutput) Denies() GetOrganizationPolicyListPolicyDenyArrayOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicy) []GetOrganizationPolicyListPolicyDeny { return v.Denies }).(GetOrganizationPolicyListPolicyDenyArrayOutput)
}

func (o GetOrganizationPolicyListPolicyOutput) InheritFromParent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicy) bool { return v.InheritFromParent }).(pulumi.BoolOutput)
}

func (o GetOrganizationPolicyListPolicyOutput) SuggestedValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicy) string { return v.SuggestedValue }).(pulumi.StringOutput)
}

type GetOrganizationPolicyListPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyArrayOutput) ToGetOrganizationPolicyListPolicyArrayOutput() GetOrganizationPolicyListPolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyArrayOutput) ToGetOrganizationPolicyListPolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyListPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyListPolicy {
		return vs[0].([]GetOrganizationPolicyListPolicy)[vs[1].(int)]
	}).(GetOrganizationPolicyListPolicyOutput)
}

type GetOrganizationPolicyListPolicyAllow struct {
	All    bool     `pulumi:"all"`
	Values []string `pulumi:"values"`
}

// GetOrganizationPolicyListPolicyAllowInput is an input type that accepts GetOrganizationPolicyListPolicyAllowArgs and GetOrganizationPolicyListPolicyAllowOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyListPolicyAllowInput` via:
//
//          GetOrganizationPolicyListPolicyAllowArgs{...}
type GetOrganizationPolicyListPolicyAllowInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyAllowOutput() GetOrganizationPolicyListPolicyAllowOutput
	ToGetOrganizationPolicyListPolicyAllowOutputWithContext(context.Context) GetOrganizationPolicyListPolicyAllowOutput
}

type GetOrganizationPolicyListPolicyAllowArgs struct {
	All    pulumi.BoolInput        `pulumi:"all"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOrganizationPolicyListPolicyAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyAllowArgs) ToGetOrganizationPolicyListPolicyAllowOutput() GetOrganizationPolicyListPolicyAllowOutput {
	return i.ToGetOrganizationPolicyListPolicyAllowOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyAllowArgs) ToGetOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyAllowOutput)
}

// GetOrganizationPolicyListPolicyAllowArrayInput is an input type that accepts GetOrganizationPolicyListPolicyAllowArray and GetOrganizationPolicyListPolicyAllowArrayOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyListPolicyAllowArrayInput` via:
//
//          GetOrganizationPolicyListPolicyAllowArray{ GetOrganizationPolicyListPolicyAllowArgs{...} }
type GetOrganizationPolicyListPolicyAllowArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyAllowArrayOutput() GetOrganizationPolicyListPolicyAllowArrayOutput
	ToGetOrganizationPolicyListPolicyAllowArrayOutputWithContext(context.Context) GetOrganizationPolicyListPolicyAllowArrayOutput
}

type GetOrganizationPolicyListPolicyAllowArray []GetOrganizationPolicyListPolicyAllowInput

func (GetOrganizationPolicyListPolicyAllowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyAllowArray) ToGetOrganizationPolicyListPolicyAllowArrayOutput() GetOrganizationPolicyListPolicyAllowArrayOutput {
	return i.ToGetOrganizationPolicyListPolicyAllowArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyAllowArray) ToGetOrganizationPolicyListPolicyAllowArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyAllowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyAllowArrayOutput)
}

type GetOrganizationPolicyListPolicyAllowOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyAllowOutput) ToGetOrganizationPolicyListPolicyAllowOutput() GetOrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyAllowOutput) ToGetOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyAllowOutput) All() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicyAllow) bool { return v.All }).(pulumi.BoolOutput)
}

func (o GetOrganizationPolicyListPolicyAllowOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicyAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOrganizationPolicyListPolicyAllowArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyAllowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyAllowArrayOutput) ToGetOrganizationPolicyListPolicyAllowArrayOutput() GetOrganizationPolicyListPolicyAllowArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyAllowArrayOutput) ToGetOrganizationPolicyListPolicyAllowArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyAllowArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyAllowArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyListPolicyAllowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyListPolicyAllow {
		return vs[0].([]GetOrganizationPolicyListPolicyAllow)[vs[1].(int)]
	}).(GetOrganizationPolicyListPolicyAllowOutput)
}

type GetOrganizationPolicyListPolicyDeny struct {
	All    bool     `pulumi:"all"`
	Values []string `pulumi:"values"`
}

// GetOrganizationPolicyListPolicyDenyInput is an input type that accepts GetOrganizationPolicyListPolicyDenyArgs and GetOrganizationPolicyListPolicyDenyOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyListPolicyDenyInput` via:
//
//          GetOrganizationPolicyListPolicyDenyArgs{...}
type GetOrganizationPolicyListPolicyDenyInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyDenyOutput() GetOrganizationPolicyListPolicyDenyOutput
	ToGetOrganizationPolicyListPolicyDenyOutputWithContext(context.Context) GetOrganizationPolicyListPolicyDenyOutput
}

type GetOrganizationPolicyListPolicyDenyArgs struct {
	All    pulumi.BoolInput        `pulumi:"all"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOrganizationPolicyListPolicyDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyDenyArgs) ToGetOrganizationPolicyListPolicyDenyOutput() GetOrganizationPolicyListPolicyDenyOutput {
	return i.ToGetOrganizationPolicyListPolicyDenyOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyDenyArgs) ToGetOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyDenyOutput)
}

// GetOrganizationPolicyListPolicyDenyArrayInput is an input type that accepts GetOrganizationPolicyListPolicyDenyArray and GetOrganizationPolicyListPolicyDenyArrayOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyListPolicyDenyArrayInput` via:
//
//          GetOrganizationPolicyListPolicyDenyArray{ GetOrganizationPolicyListPolicyDenyArgs{...} }
type GetOrganizationPolicyListPolicyDenyArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyDenyArrayOutput() GetOrganizationPolicyListPolicyDenyArrayOutput
	ToGetOrganizationPolicyListPolicyDenyArrayOutputWithContext(context.Context) GetOrganizationPolicyListPolicyDenyArrayOutput
}

type GetOrganizationPolicyListPolicyDenyArray []GetOrganizationPolicyListPolicyDenyInput

func (GetOrganizationPolicyListPolicyDenyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyDenyArray) ToGetOrganizationPolicyListPolicyDenyArrayOutput() GetOrganizationPolicyListPolicyDenyArrayOutput {
	return i.ToGetOrganizationPolicyListPolicyDenyArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyDenyArray) ToGetOrganizationPolicyListPolicyDenyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyDenyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyDenyArrayOutput)
}

type GetOrganizationPolicyListPolicyDenyOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyDenyOutput) ToGetOrganizationPolicyListPolicyDenyOutput() GetOrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyDenyOutput) ToGetOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyDenyOutput) All() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicyDeny) bool { return v.All }).(pulumi.BoolOutput)
}

func (o GetOrganizationPolicyListPolicyDenyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicyDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOrganizationPolicyListPolicyDenyArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyDenyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyDenyArrayOutput) ToGetOrganizationPolicyListPolicyDenyArrayOutput() GetOrganizationPolicyListPolicyDenyArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyDenyArrayOutput) ToGetOrganizationPolicyListPolicyDenyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyDenyArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyDenyArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyListPolicyDenyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyListPolicyDeny {
		return vs[0].([]GetOrganizationPolicyListPolicyDeny)[vs[1].(int)]
	}).(GetOrganizationPolicyListPolicyDenyOutput)
}

type GetOrganizationPolicyRestorePolicy struct {
	Default bool `pulumi:"default"`
}

// GetOrganizationPolicyRestorePolicyInput is an input type that accepts GetOrganizationPolicyRestorePolicyArgs and GetOrganizationPolicyRestorePolicyOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyRestorePolicyInput` via:
//
//          GetOrganizationPolicyRestorePolicyArgs{...}
type GetOrganizationPolicyRestorePolicyInput interface {
	pulumi.Input

	ToGetOrganizationPolicyRestorePolicyOutput() GetOrganizationPolicyRestorePolicyOutput
	ToGetOrganizationPolicyRestorePolicyOutputWithContext(context.Context) GetOrganizationPolicyRestorePolicyOutput
}

type GetOrganizationPolicyRestorePolicyArgs struct {
	Default pulumi.BoolInput `pulumi:"default"`
}

func (GetOrganizationPolicyRestorePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyRestorePolicyArgs) ToGetOrganizationPolicyRestorePolicyOutput() GetOrganizationPolicyRestorePolicyOutput {
	return i.ToGetOrganizationPolicyRestorePolicyOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyRestorePolicyArgs) ToGetOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyRestorePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyRestorePolicyOutput)
}

// GetOrganizationPolicyRestorePolicyArrayInput is an input type that accepts GetOrganizationPolicyRestorePolicyArray and GetOrganizationPolicyRestorePolicyArrayOutput values.
// You can construct a concrete instance of `GetOrganizationPolicyRestorePolicyArrayInput` via:
//
//          GetOrganizationPolicyRestorePolicyArray{ GetOrganizationPolicyRestorePolicyArgs{...} }
type GetOrganizationPolicyRestorePolicyArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyRestorePolicyArrayOutput() GetOrganizationPolicyRestorePolicyArrayOutput
	ToGetOrganizationPolicyRestorePolicyArrayOutputWithContext(context.Context) GetOrganizationPolicyRestorePolicyArrayOutput
}

type GetOrganizationPolicyRestorePolicyArray []GetOrganizationPolicyRestorePolicyInput

func (GetOrganizationPolicyRestorePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyRestorePolicyArray) ToGetOrganizationPolicyRestorePolicyArrayOutput() GetOrganizationPolicyRestorePolicyArrayOutput {
	return i.ToGetOrganizationPolicyRestorePolicyArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyRestorePolicyArray) ToGetOrganizationPolicyRestorePolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyRestorePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyRestorePolicyArrayOutput)
}

type GetOrganizationPolicyRestorePolicyOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyRestorePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyRestorePolicyOutput) ToGetOrganizationPolicyRestorePolicyOutput() GetOrganizationPolicyRestorePolicyOutput {
	return o
}

func (o GetOrganizationPolicyRestorePolicyOutput) ToGetOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyRestorePolicyOutput {
	return o
}

func (o GetOrganizationPolicyRestorePolicyOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyRestorePolicy) bool { return v.Default }).(pulumi.BoolOutput)
}

type GetOrganizationPolicyRestorePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyRestorePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyRestorePolicyArrayOutput) ToGetOrganizationPolicyRestorePolicyArrayOutput() GetOrganizationPolicyRestorePolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyRestorePolicyArrayOutput) ToGetOrganizationPolicyRestorePolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyRestorePolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyRestorePolicyArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyRestorePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyRestorePolicy {
		return vs[0].([]GetOrganizationPolicyRestorePolicy)[vs[1].(int)]
	}).(GetOrganizationPolicyRestorePolicyOutput)
}

type GetProjectProject struct {
	CreateTime     string            `pulumi:"createTime"`
	Labels         map[string]string `pulumi:"labels"`
	LifecycleState string            `pulumi:"lifecycleState"`
	Name           string            `pulumi:"name"`
	Number         string            `pulumi:"number"`
	Parent         map[string]string `pulumi:"parent"`
	// The project id of the project.
	ProjectId string `pulumi:"projectId"`
}

// GetProjectProjectInput is an input type that accepts GetProjectProjectArgs and GetProjectProjectOutput values.
// You can construct a concrete instance of `GetProjectProjectInput` via:
//
//          GetProjectProjectArgs{...}
type GetProjectProjectInput interface {
	pulumi.Input

	ToGetProjectProjectOutput() GetProjectProjectOutput
	ToGetProjectProjectOutputWithContext(context.Context) GetProjectProjectOutput
}

type GetProjectProjectArgs struct {
	CreateTime     pulumi.StringInput    `pulumi:"createTime"`
	Labels         pulumi.StringMapInput `pulumi:"labels"`
	LifecycleState pulumi.StringInput    `pulumi:"lifecycleState"`
	Name           pulumi.StringInput    `pulumi:"name"`
	Number         pulumi.StringInput    `pulumi:"number"`
	Parent         pulumi.StringMapInput `pulumi:"parent"`
	// The project id of the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetProjectProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProject)(nil)).Elem()
}

func (i GetProjectProjectArgs) ToGetProjectProjectOutput() GetProjectProjectOutput {
	return i.ToGetProjectProjectOutputWithContext(context.Background())
}

func (i GetProjectProjectArgs) ToGetProjectProjectOutputWithContext(ctx context.Context) GetProjectProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProjectOutput)
}

// GetProjectProjectArrayInput is an input type that accepts GetProjectProjectArray and GetProjectProjectArrayOutput values.
// You can construct a concrete instance of `GetProjectProjectArrayInput` via:
//
//          GetProjectProjectArray{ GetProjectProjectArgs{...} }
type GetProjectProjectArrayInput interface {
	pulumi.Input

	ToGetProjectProjectArrayOutput() GetProjectProjectArrayOutput
	ToGetProjectProjectArrayOutputWithContext(context.Context) GetProjectProjectArrayOutput
}

type GetProjectProjectArray []GetProjectProjectInput

func (GetProjectProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProject)(nil)).Elem()
}

func (i GetProjectProjectArray) ToGetProjectProjectArrayOutput() GetProjectProjectArrayOutput {
	return i.ToGetProjectProjectArrayOutputWithContext(context.Background())
}

func (i GetProjectProjectArray) ToGetProjectProjectArrayOutputWithContext(ctx context.Context) GetProjectProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProjectArrayOutput)
}

type GetProjectProjectOutput struct{ *pulumi.OutputState }

func (GetProjectProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProject)(nil)).Elem()
}

func (o GetProjectProjectOutput) ToGetProjectProjectOutput() GetProjectProjectOutput {
	return o
}

func (o GetProjectProjectOutput) ToGetProjectProjectOutputWithContext(ctx context.Context) GetProjectProjectOutput {
	return o
}

func (o GetProjectProjectOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetProjectProjectOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectProject) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o GetProjectProjectOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.LifecycleState }).(pulumi.StringOutput)
}

func (o GetProjectProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectProjectOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.Number }).(pulumi.StringOutput)
}

func (o GetProjectProjectOutput) Parent() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProjectProject) map[string]string { return v.Parent }).(pulumi.StringMapOutput)
}

// The project id of the project.
func (o GetProjectProjectOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.ProjectId }).(pulumi.StringOutput)
}

type GetProjectProjectArrayOutput struct{ *pulumi.OutputState }

func (GetProjectProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProject)(nil)).Elem()
}

func (o GetProjectProjectArrayOutput) ToGetProjectProjectArrayOutput() GetProjectProjectArrayOutput {
	return o
}

func (o GetProjectProjectArrayOutput) ToGetProjectProjectArrayOutputWithContext(ctx context.Context) GetProjectProjectArrayOutput {
	return o
}

func (o GetProjectProjectArrayOutput) Index(i pulumi.IntInput) GetProjectProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectProject {
		return vs[0].([]GetProjectProject)[vs[1].(int)]
	}).(GetProjectProjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApprovalSettingsEnrolledServiceInput)(nil)).Elem(), AccessApprovalSettingsEnrolledServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApprovalSettingsEnrolledServiceArrayInput)(nil)).Elem(), AccessApprovalSettingsEnrolledServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsInput)(nil)).Elem(), ApiKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsPtrInput)(nil)).Elem(), ApiKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsAndroidKeyRestrictionsInput)(nil)).Elem(), ApiKeyRestrictionsAndroidKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsAndroidKeyRestrictionsPtrInput)(nil)).Elem(), ApiKeyRestrictionsAndroidKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationInput)(nil)).Elem(), ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayInput)(nil)).Elem(), ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsApiTargetInput)(nil)).Elem(), ApiKeyRestrictionsApiTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsApiTargetArrayInput)(nil)).Elem(), ApiKeyRestrictionsApiTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsBrowserKeyRestrictionsInput)(nil)).Elem(), ApiKeyRestrictionsBrowserKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsBrowserKeyRestrictionsPtrInput)(nil)).Elem(), ApiKeyRestrictionsBrowserKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsIosKeyRestrictionsInput)(nil)).Elem(), ApiKeyRestrictionsIosKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsIosKeyRestrictionsPtrInput)(nil)).Elem(), ApiKeyRestrictionsIosKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsServerKeyRestrictionsInput)(nil)).Elem(), ApiKeyRestrictionsServerKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsServerKeyRestrictionsPtrInput)(nil)).Elem(), ApiKeyRestrictionsServerKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IAMAuditConfigAuditLogConfigInput)(nil)).Elem(), IAMAuditConfigAuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IAMAuditConfigAuditLogConfigArrayInput)(nil)).Elem(), IAMAuditConfigAuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IAMBindingConditionInput)(nil)).Elem(), IAMBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IAMBindingConditionPtrInput)(nil)).Elem(), IAMBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IAMMemberConditionInput)(nil)).Elem(), IAMMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IAMMemberConditionPtrInput)(nil)).Elem(), IAMMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyBooleanPolicyInput)(nil)).Elem(), OrganizationPolicyBooleanPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyBooleanPolicyPtrInput)(nil)).Elem(), OrganizationPolicyBooleanPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyListPolicyInput)(nil)).Elem(), OrganizationPolicyListPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyListPolicyPtrInput)(nil)).Elem(), OrganizationPolicyListPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyListPolicyAllowInput)(nil)).Elem(), OrganizationPolicyListPolicyAllowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyListPolicyAllowPtrInput)(nil)).Elem(), OrganizationPolicyListPolicyAllowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyListPolicyDenyInput)(nil)).Elem(), OrganizationPolicyListPolicyDenyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyListPolicyDenyPtrInput)(nil)).Elem(), OrganizationPolicyListPolicyDenyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyRestorePolicyInput)(nil)).Elem(), OrganizationPolicyRestorePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyRestorePolicyPtrInput)(nil)).Elem(), OrganizationPolicyRestorePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyBooleanPolicyInput)(nil)).Elem(), GetOrganizationPolicyBooleanPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyBooleanPolicyArrayInput)(nil)).Elem(), GetOrganizationPolicyBooleanPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyListPolicyInput)(nil)).Elem(), GetOrganizationPolicyListPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyListPolicyArrayInput)(nil)).Elem(), GetOrganizationPolicyListPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyListPolicyAllowInput)(nil)).Elem(), GetOrganizationPolicyListPolicyAllowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyListPolicyAllowArrayInput)(nil)).Elem(), GetOrganizationPolicyListPolicyAllowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyListPolicyDenyInput)(nil)).Elem(), GetOrganizationPolicyListPolicyDenyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyListPolicyDenyArrayInput)(nil)).Elem(), GetOrganizationPolicyListPolicyDenyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyRestorePolicyInput)(nil)).Elem(), GetOrganizationPolicyRestorePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationPolicyRestorePolicyArrayInput)(nil)).Elem(), GetOrganizationPolicyRestorePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProjectInput)(nil)).Elem(), GetProjectProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectProjectArrayInput)(nil)).Elem(), GetProjectProjectArray{})
	pulumi.RegisterOutputType(AccessApprovalSettingsEnrolledServiceOutput{})
	pulumi.RegisterOutputType(AccessApprovalSettingsEnrolledServiceArrayOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsAndroidKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsAndroidKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArrayOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsApiTargetOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsApiTargetArrayOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsBrowserKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsBrowserKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsIosKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsIosKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsServerKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsServerKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigOutput{})
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyBooleanPolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyBooleanPolicyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyAllowOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyAllowPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyDenyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyDenyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyRestorePolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyRestorePolicyPtrOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyBooleanPolicyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyBooleanPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyAllowOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyAllowArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyDenyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyDenyArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyRestorePolicyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyRestorePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectProjectOutput{})
	pulumi.RegisterOutputType(GetProjectProjectArrayOutput{})
}
