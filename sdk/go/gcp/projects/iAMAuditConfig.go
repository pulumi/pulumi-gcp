// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package projects

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type IAMAuditConfig struct {
	s *pulumi.ResourceState
}

// NewIAMAuditConfig registers a new resource with the given unique name, arguments, and options.
func NewIAMAuditConfig(ctx *pulumi.Context,
	name string, args *IAMAuditConfigArgs, opts ...pulumi.ResourceOpt) (*IAMAuditConfig, error) {
	if args == nil || args.AuditLogConfigs == nil {
		return nil, errors.New("missing required argument 'AuditLogConfigs'")
	}
	if args == nil || args.Service == nil {
		return nil, errors.New("missing required argument 'Service'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["auditLogConfigs"] = nil
		inputs["project"] = nil
		inputs["service"] = nil
	} else {
		inputs["auditLogConfigs"] = args.AuditLogConfigs
		inputs["project"] = args.Project
		inputs["service"] = args.Service
	}
	inputs["etag"] = nil
	s, err := ctx.RegisterResource("gcp:projects/iAMAuditConfig:IAMAuditConfig", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IAMAuditConfig{s: s}, nil
}

// GetIAMAuditConfig gets an existing IAMAuditConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIAMAuditConfig(ctx *pulumi.Context,
	name string, id pulumi.ID, state *IAMAuditConfigState, opts ...pulumi.ResourceOpt) (*IAMAuditConfig, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["auditLogConfigs"] = state.AuditLogConfigs
		inputs["etag"] = state.Etag
		inputs["project"] = state.Project
		inputs["service"] = state.Service
	}
	s, err := ctx.ReadResource("gcp:projects/iAMAuditConfig:IAMAuditConfig", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IAMAuditConfig{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *IAMAuditConfig) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *IAMAuditConfig) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *IAMAuditConfig) AuditLogConfigs() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["auditLogConfigs"])
}

func (r *IAMAuditConfig) Etag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["etag"])
}

func (r *IAMAuditConfig) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

func (r *IAMAuditConfig) Service() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["service"])
}

// Input properties used for looking up and filtering IAMAuditConfig resources.
type IAMAuditConfigState struct {
	AuditLogConfigs interface{}
	Etag interface{}
	Project interface{}
	Service interface{}
}

// The set of arguments for constructing a IAMAuditConfig resource.
type IAMAuditConfigArgs struct {
	AuditLogConfigs interface{}
	Project interface{}
	Service interface{}
}
