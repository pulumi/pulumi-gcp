// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package projects

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Ensures that a member:role pairing does not exist in a project's IAM policy.
//
// On create, this resource will modify the policy to remove the `member` from the
// `role`. If the membership is ever re-added, the next refresh will clear this
// resource from state, proposing re-adding it to correct the membership. Import is
// not supported- this resource will acquire the current policy and modify it as
// part of creating the resource.
//
// This resource will conflict with `projects.IAMPolicy` and
// `projects.IAMBinding` resources that share a role, as well as
// `projects.IAMMember` resources that target the same membership. When
// multiple resources conflict the final state is not guaranteed to include or omit
// the membership. Subsequent `pulumi up` calls will always show a diff
// until the configuration is corrected.
//
// For more information see
// [the official documentation](https://cloud.google.com/iam/docs/granting-changing-revoking-access)
// and
// [API reference](https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/organizations"
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/projects"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := organizations.LookupProject(ctx, &organizations.LookupProjectArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = projects.NewIamMemberRemove(ctx, "foo", &projects.IamMemberRemoveArgs{
//				Role:    pulumi.String("roles/editor"),
//				Project: pulumi.Any(targetProjectGoogleProject.ProjectId),
//				Member:  pulumi.Sprintf("serviceAccount:%v-compute@developer.gserviceaccount.com", targetProjectGoogleProject.Number),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type IamMemberRemove struct {
	pulumi.CustomResourceState

	// The IAM principal that should not have the target role.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Member pulumi.StringOutput `pulumi:"member"`
	// The project id of the target project.
	Project pulumi.StringOutput `pulumi:"project"`
	// The target role that should be removed.
	Role pulumi.StringOutput `pulumi:"role"`
}

// NewIamMemberRemove registers a new resource with the given unique name, arguments, and options.
func NewIamMemberRemove(ctx *pulumi.Context,
	name string, args *IamMemberRemoveArgs, opts ...pulumi.ResourceOption) (*IamMemberRemove, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IamMemberRemove
	err := ctx.RegisterResource("gcp:projects/iamMemberRemove:IamMemberRemove", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamMemberRemove gets an existing IamMemberRemove resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamMemberRemove(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamMemberRemoveState, opts ...pulumi.ResourceOption) (*IamMemberRemove, error) {
	var resource IamMemberRemove
	err := ctx.ReadResource("gcp:projects/iamMemberRemove:IamMemberRemove", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamMemberRemove resources.
type iamMemberRemoveState struct {
	// The IAM principal that should not have the target role.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Member *string `pulumi:"member"`
	// The project id of the target project.
	Project *string `pulumi:"project"`
	// The target role that should be removed.
	Role *string `pulumi:"role"`
}

type IamMemberRemoveState struct {
	// The IAM principal that should not have the target role.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Member pulumi.StringPtrInput
	// The project id of the target project.
	Project pulumi.StringPtrInput
	// The target role that should be removed.
	Role pulumi.StringPtrInput
}

func (IamMemberRemoveState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamMemberRemoveState)(nil)).Elem()
}

type iamMemberRemoveArgs struct {
	// The IAM principal that should not have the target role.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Member string `pulumi:"member"`
	// The project id of the target project.
	Project string `pulumi:"project"`
	// The target role that should be removed.
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a IamMemberRemove resource.
type IamMemberRemoveArgs struct {
	// The IAM principal that should not have the target role.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Member pulumi.StringInput
	// The project id of the target project.
	Project pulumi.StringInput
	// The target role that should be removed.
	Role pulumi.StringInput
}

func (IamMemberRemoveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamMemberRemoveArgs)(nil)).Elem()
}

type IamMemberRemoveInput interface {
	pulumi.Input

	ToIamMemberRemoveOutput() IamMemberRemoveOutput
	ToIamMemberRemoveOutputWithContext(ctx context.Context) IamMemberRemoveOutput
}

func (*IamMemberRemove) ElementType() reflect.Type {
	return reflect.TypeOf((**IamMemberRemove)(nil)).Elem()
}

func (i *IamMemberRemove) ToIamMemberRemoveOutput() IamMemberRemoveOutput {
	return i.ToIamMemberRemoveOutputWithContext(context.Background())
}

func (i *IamMemberRemove) ToIamMemberRemoveOutputWithContext(ctx context.Context) IamMemberRemoveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamMemberRemoveOutput)
}

// IamMemberRemoveArrayInput is an input type that accepts IamMemberRemoveArray and IamMemberRemoveArrayOutput values.
// You can construct a concrete instance of `IamMemberRemoveArrayInput` via:
//
//	IamMemberRemoveArray{ IamMemberRemoveArgs{...} }
type IamMemberRemoveArrayInput interface {
	pulumi.Input

	ToIamMemberRemoveArrayOutput() IamMemberRemoveArrayOutput
	ToIamMemberRemoveArrayOutputWithContext(context.Context) IamMemberRemoveArrayOutput
}

type IamMemberRemoveArray []IamMemberRemoveInput

func (IamMemberRemoveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamMemberRemove)(nil)).Elem()
}

func (i IamMemberRemoveArray) ToIamMemberRemoveArrayOutput() IamMemberRemoveArrayOutput {
	return i.ToIamMemberRemoveArrayOutputWithContext(context.Background())
}

func (i IamMemberRemoveArray) ToIamMemberRemoveArrayOutputWithContext(ctx context.Context) IamMemberRemoveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamMemberRemoveArrayOutput)
}

// IamMemberRemoveMapInput is an input type that accepts IamMemberRemoveMap and IamMemberRemoveMapOutput values.
// You can construct a concrete instance of `IamMemberRemoveMapInput` via:
//
//	IamMemberRemoveMap{ "key": IamMemberRemoveArgs{...} }
type IamMemberRemoveMapInput interface {
	pulumi.Input

	ToIamMemberRemoveMapOutput() IamMemberRemoveMapOutput
	ToIamMemberRemoveMapOutputWithContext(context.Context) IamMemberRemoveMapOutput
}

type IamMemberRemoveMap map[string]IamMemberRemoveInput

func (IamMemberRemoveMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamMemberRemove)(nil)).Elem()
}

func (i IamMemberRemoveMap) ToIamMemberRemoveMapOutput() IamMemberRemoveMapOutput {
	return i.ToIamMemberRemoveMapOutputWithContext(context.Background())
}

func (i IamMemberRemoveMap) ToIamMemberRemoveMapOutputWithContext(ctx context.Context) IamMemberRemoveMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamMemberRemoveMapOutput)
}

type IamMemberRemoveOutput struct{ *pulumi.OutputState }

func (IamMemberRemoveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamMemberRemove)(nil)).Elem()
}

func (o IamMemberRemoveOutput) ToIamMemberRemoveOutput() IamMemberRemoveOutput {
	return o
}

func (o IamMemberRemoveOutput) ToIamMemberRemoveOutputWithContext(ctx context.Context) IamMemberRemoveOutput {
	return o
}

// The IAM principal that should not have the target role.
// Each entry can have one of the following values:
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
func (o IamMemberRemoveOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *IamMemberRemove) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

// The project id of the target project.
func (o IamMemberRemoveOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IamMemberRemove) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The target role that should be removed.
func (o IamMemberRemoveOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *IamMemberRemove) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type IamMemberRemoveArrayOutput struct{ *pulumi.OutputState }

func (IamMemberRemoveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamMemberRemove)(nil)).Elem()
}

func (o IamMemberRemoveArrayOutput) ToIamMemberRemoveArrayOutput() IamMemberRemoveArrayOutput {
	return o
}

func (o IamMemberRemoveArrayOutput) ToIamMemberRemoveArrayOutputWithContext(ctx context.Context) IamMemberRemoveArrayOutput {
	return o
}

func (o IamMemberRemoveArrayOutput) Index(i pulumi.IntInput) IamMemberRemoveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IamMemberRemove {
		return vs[0].([]*IamMemberRemove)[vs[1].(int)]
	}).(IamMemberRemoveOutput)
}

type IamMemberRemoveMapOutput struct{ *pulumi.OutputState }

func (IamMemberRemoveMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamMemberRemove)(nil)).Elem()
}

func (o IamMemberRemoveMapOutput) ToIamMemberRemoveMapOutput() IamMemberRemoveMapOutput {
	return o
}

func (o IamMemberRemoveMapOutput) ToIamMemberRemoveMapOutputWithContext(ctx context.Context) IamMemberRemoveMapOutput {
	return o
}

func (o IamMemberRemoveMapOutput) MapIndex(k pulumi.StringInput) IamMemberRemoveOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IamMemberRemove {
		return vs[0].(map[string]*IamMemberRemove)[vs[1].(string)]
	}).(IamMemberRemoveOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamMemberRemoveInput)(nil)).Elem(), &IamMemberRemove{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamMemberRemoveArrayInput)(nil)).Elem(), IamMemberRemoveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamMemberRemoveMapInput)(nil)).Elem(), IamMemberRemoveMap{})
	pulumi.RegisterOutputType(IamMemberRemoveOutput{})
	pulumi.RegisterOutputType(IamMemberRemoveArrayOutput{})
	pulumi.RegisterOutputType(IamMemberRemoveMapOutput{})
}
