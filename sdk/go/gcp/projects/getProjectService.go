// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package projects

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Verify the API service for the Google Cloud Platform project to see if it is enabled or not.
//
// For a list of services available, visit the [API library page](https://console.cloud.google.com/apis/library)
// or run `gcloud services list --available`.
//
// This datasource requires the [Service Usage API](https://console.cloud.google.com/apis/library/serviceusage.googleapis.com)
// to use.
//
// To get more information about `projects.Service`, see:
//
// * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1/services)
// * How-to Guides
//   - [Enabling and Disabling Services](https://cloud.google.com/service-usage/docs/enable-disable)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/projects"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = projects.GetProjectService(ctx, &projects.GetProjectServiceArgs{
//				Service: "my-project-service",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetProjectService(ctx *pulumi.Context, args *GetProjectServiceArgs, opts ...pulumi.InvokeOption) (*GetProjectServiceResult, error) {
	var rv GetProjectServiceResult
	err := ctx.Invoke("gcp:projects/getProjectService:getProjectService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectService.
type GetProjectServiceArgs struct {
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The name of the Google Platform project service.
	Service string `pulumi:"service"`
}

// A collection of values returned by getProjectService.
type GetProjectServiceResult struct {
	DisableDependentServices bool `pulumi:"disableDependentServices"`
	DisableOnDestroy         bool `pulumi:"disableOnDestroy"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Project *string `pulumi:"project"`
	Service string  `pulumi:"service"`
}

func GetProjectServiceOutput(ctx *pulumi.Context, args GetProjectServiceOutputArgs, opts ...pulumi.InvokeOption) GetProjectServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProjectServiceResult, error) {
			args := v.(GetProjectServiceArgs)
			r, err := GetProjectService(ctx, &args, opts...)
			var s GetProjectServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetProjectServiceResultOutput)
}

// A collection of arguments for invoking getProjectService.
type GetProjectServiceOutputArgs struct {
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The name of the Google Platform project service.
	Service pulumi.StringInput `pulumi:"service"`
}

func (GetProjectServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectServiceArgs)(nil)).Elem()
}

// A collection of values returned by getProjectService.
type GetProjectServiceResultOutput struct{ *pulumi.OutputState }

func (GetProjectServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectServiceResult)(nil)).Elem()
}

func (o GetProjectServiceResultOutput) ToGetProjectServiceResultOutput() GetProjectServiceResultOutput {
	return o
}

func (o GetProjectServiceResultOutput) ToGetProjectServiceResultOutputWithContext(ctx context.Context) GetProjectServiceResultOutput {
	return o
}

func (o GetProjectServiceResultOutput) DisableDependentServices() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectServiceResult) bool { return v.DisableDependentServices }).(pulumi.BoolOutput)
}

func (o GetProjectServiceResultOutput) DisableOnDestroy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectServiceResult) bool { return v.DisableOnDestroy }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetProjectServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProjectServiceResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectServiceResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o GetProjectServiceResultOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectServiceResult) string { return v.Service }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProjectServiceResultOutput{})
}
