// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package projects

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp/sdk/v2/go/gcp"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp:projects/accessApprovalSettings:AccessApprovalSettings":
		r, err = NewAccessApprovalSettings(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/defaultServiceAccounts:DefaultServiceAccounts":
		r, err = NewDefaultServiceAccounts(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/iAMAuditConfig:IAMAuditConfig":
		r, err = NewIAMAuditConfig(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/iAMBinding:IAMBinding":
		r, err = NewIAMBinding(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/iAMCustomRole:IAMCustomRole":
		r, err = NewIAMCustomRole(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/iAMMember:IAMMember":
		r, err = NewIAMMember(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/iAMPolicy:IAMPolicy":
		r, err = NewIAMPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/organizationPolicy:OrganizationPolicy":
		r, err = NewOrganizationPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/service:Service":
		r, err = NewService(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/serviceIdentity:ServiceIdentity":
		r, err = NewServiceIdentity(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:projects/usageExportBucket:UsageExportBucket":
		r, err = NewUsageExportBucket(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/accessApprovalSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/defaultServiceAccounts",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/iAMAuditConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/iAMBinding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/iAMCustomRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/iAMMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/iAMPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/organizationPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/service",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/serviceIdentity",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"projects/usageExportBucket",
		&module{version},
	)
}
