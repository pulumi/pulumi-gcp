// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for logview
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/logging"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := logging.LookupLogViewIamPolicy(ctx, &logging.LookupLogViewIamPolicyArgs{
//				Parent:   loggingLogView.Parent,
//				Location: pulumi.StringRef(loggingLogView.Location),
//				Bucket:   loggingLogView.Bucket,
//				Name:     loggingLogView.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLogViewIamPolicy(ctx *pulumi.Context, args *LookupLogViewIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupLogViewIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLogViewIamPolicyResult
	err := ctx.Invoke("gcp:logging/getLogViewIamPolicy:getLogViewIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogViewIamPolicy.
type LookupLogViewIamPolicyArgs struct {
	// The bucket of the resource Used to find the parent resource to bind the IAM policy to
	Bucket string `pulumi:"bucket"`
	// The location of the resource. The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name string `pulumi:"name"`
	// The parent of the resource. Used to find the parent resource to bind the IAM policy to
	Parent string `pulumi:"parent"`
}

// A collection of values returned by getLogViewIamPolicy.
type LookupLogViewIamPolicyResult struct {
	Bucket string `pulumi:"bucket"`
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	Parent   string `pulumi:"parent"`
	// (Required only by `logging.LogViewIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
}

func LookupLogViewIamPolicyOutput(ctx *pulumi.Context, args LookupLogViewIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupLogViewIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLogViewIamPolicyResultOutput, error) {
			args := v.(LookupLogViewIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:logging/getLogViewIamPolicy:getLogViewIamPolicy", args, LookupLogViewIamPolicyResultOutput{}, options).(LookupLogViewIamPolicyResultOutput), nil
		}).(LookupLogViewIamPolicyResultOutput)
}

// A collection of arguments for invoking getLogViewIamPolicy.
type LookupLogViewIamPolicyOutputArgs struct {
	// The bucket of the resource Used to find the parent resource to bind the IAM policy to
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The location of the resource. The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringInput `pulumi:"name"`
	// The parent of the resource. Used to find the parent resource to bind the IAM policy to
	Parent pulumi.StringInput `pulumi:"parent"`
}

func (LookupLogViewIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogViewIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getLogViewIamPolicy.
type LookupLogViewIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupLogViewIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogViewIamPolicyResult)(nil)).Elem()
}

func (o LookupLogViewIamPolicyResultOutput) ToLookupLogViewIamPolicyResultOutput() LookupLogViewIamPolicyResultOutput {
	return o
}

func (o LookupLogViewIamPolicyResultOutput) ToLookupLogViewIamPolicyResultOutputWithContext(ctx context.Context) LookupLogViewIamPolicyResultOutput {
	return o
}

func (o LookupLogViewIamPolicyResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogViewIamPolicyResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LookupLogViewIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogViewIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLogViewIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogViewIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLogViewIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogViewIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupLogViewIamPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogViewIamPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupLogViewIamPolicyResultOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogViewIamPolicyResult) string { return v.Parent }).(pulumi.StringOutput)
}

// (Required only by `logging.LogViewIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupLogViewIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogViewIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogViewIamPolicyResultOutput{})
}
