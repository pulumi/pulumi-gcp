// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/logging"
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := organizations.NewFolder(ctx, "default", &organizations.FolderArgs{
//				DisplayName: pulumi.String("some-folder-name"),
//				Parent:      pulumi.String("organizations/123456789"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = logging.NewFolderBucketConfig(ctx, "basic", &logging.FolderBucketConfigArgs{
//				Folder:        _default.Name,
//				Location:      pulumi.String("global"),
//				RetentionDays: pulumi.Int(30),
//				BucketId:      pulumi.String("_Default"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # This resource can be imported using the following format
//
// ```sh
//
//	$ pulumi import gcp:logging/folderBucketConfig:FolderBucketConfig default folders/{{folder}}/locations/{{location}}/buckets/{{bucket_id}}
//
// ```
type FolderBucketConfig struct {
	pulumi.CustomResourceState

	// The name of the logging bucket. Logging automatically creates two log buckets: `_Required` and `_Default`.
	BucketId pulumi.StringOutput `pulumi:"bucketId"`
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings FolderBucketConfigCmekSettingsPtrOutput `pulumi:"cmekSettings"`
	// Describes this bucket.
	Description pulumi.StringOutput `pulumi:"description"`
	// The parent resource that contains the logging bucket.
	Folder pulumi.StringOutput `pulumi:"folder"`
	// The bucket's lifecycle such as active or deleted. See [LifecycleState](https://cloud.google.com/logging/docs/reference/v2/rest/v2/billingAccounts.buckets#LogBucket.LifecycleState).
	LifecycleState pulumi.StringOutput `pulumi:"lifecycleState"`
	// The location of the bucket.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	Name pulumi.StringOutput `pulumi:"name"`
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used. Bucket retention can not be increased on buckets outside of projects.
	RetentionDays pulumi.IntPtrOutput `pulumi:"retentionDays"`
}

// NewFolderBucketConfig registers a new resource with the given unique name, arguments, and options.
func NewFolderBucketConfig(ctx *pulumi.Context,
	name string, args *FolderBucketConfigArgs, opts ...pulumi.ResourceOption) (*FolderBucketConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BucketId == nil {
		return nil, errors.New("invalid value for required argument 'BucketId'")
	}
	if args.Folder == nil {
		return nil, errors.New("invalid value for required argument 'Folder'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	var resource FolderBucketConfig
	err := ctx.RegisterResource("gcp:logging/folderBucketConfig:FolderBucketConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFolderBucketConfig gets an existing FolderBucketConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFolderBucketConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FolderBucketConfigState, opts ...pulumi.ResourceOption) (*FolderBucketConfig, error) {
	var resource FolderBucketConfig
	err := ctx.ReadResource("gcp:logging/folderBucketConfig:FolderBucketConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FolderBucketConfig resources.
type folderBucketConfigState struct {
	// The name of the logging bucket. Logging automatically creates two log buckets: `_Required` and `_Default`.
	BucketId *string `pulumi:"bucketId"`
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings *FolderBucketConfigCmekSettings `pulumi:"cmekSettings"`
	// Describes this bucket.
	Description *string `pulumi:"description"`
	// The parent resource that contains the logging bucket.
	Folder *string `pulumi:"folder"`
	// The bucket's lifecycle such as active or deleted. See [LifecycleState](https://cloud.google.com/logging/docs/reference/v2/rest/v2/billingAccounts.buckets#LogBucket.LifecycleState).
	LifecycleState *string `pulumi:"lifecycleState"`
	// The location of the bucket.
	Location *string `pulumi:"location"`
	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	Name *string `pulumi:"name"`
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used. Bucket retention can not be increased on buckets outside of projects.
	RetentionDays *int `pulumi:"retentionDays"`
}

type FolderBucketConfigState struct {
	// The name of the logging bucket. Logging automatically creates two log buckets: `_Required` and `_Default`.
	BucketId pulumi.StringPtrInput
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings FolderBucketConfigCmekSettingsPtrInput
	// Describes this bucket.
	Description pulumi.StringPtrInput
	// The parent resource that contains the logging bucket.
	Folder pulumi.StringPtrInput
	// The bucket's lifecycle such as active or deleted. See [LifecycleState](https://cloud.google.com/logging/docs/reference/v2/rest/v2/billingAccounts.buckets#LogBucket.LifecycleState).
	LifecycleState pulumi.StringPtrInput
	// The location of the bucket.
	Location pulumi.StringPtrInput
	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	Name pulumi.StringPtrInput
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used. Bucket retention can not be increased on buckets outside of projects.
	RetentionDays pulumi.IntPtrInput
}

func (FolderBucketConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*folderBucketConfigState)(nil)).Elem()
}

type folderBucketConfigArgs struct {
	// The name of the logging bucket. Logging automatically creates two log buckets: `_Required` and `_Default`.
	BucketId string `pulumi:"bucketId"`
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings *FolderBucketConfigCmekSettings `pulumi:"cmekSettings"`
	// Describes this bucket.
	Description *string `pulumi:"description"`
	// The parent resource that contains the logging bucket.
	Folder string `pulumi:"folder"`
	// The location of the bucket.
	Location string `pulumi:"location"`
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used. Bucket retention can not be increased on buckets outside of projects.
	RetentionDays *int `pulumi:"retentionDays"`
}

// The set of arguments for constructing a FolderBucketConfig resource.
type FolderBucketConfigArgs struct {
	// The name of the logging bucket. Logging automatically creates two log buckets: `_Required` and `_Default`.
	BucketId pulumi.StringInput
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings FolderBucketConfigCmekSettingsPtrInput
	// Describes this bucket.
	Description pulumi.StringPtrInput
	// The parent resource that contains the logging bucket.
	Folder pulumi.StringInput
	// The location of the bucket.
	Location pulumi.StringInput
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used. Bucket retention can not be increased on buckets outside of projects.
	RetentionDays pulumi.IntPtrInput
}

func (FolderBucketConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*folderBucketConfigArgs)(nil)).Elem()
}

type FolderBucketConfigInput interface {
	pulumi.Input

	ToFolderBucketConfigOutput() FolderBucketConfigOutput
	ToFolderBucketConfigOutputWithContext(ctx context.Context) FolderBucketConfigOutput
}

func (*FolderBucketConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderBucketConfig)(nil)).Elem()
}

func (i *FolderBucketConfig) ToFolderBucketConfigOutput() FolderBucketConfigOutput {
	return i.ToFolderBucketConfigOutputWithContext(context.Background())
}

func (i *FolderBucketConfig) ToFolderBucketConfigOutputWithContext(ctx context.Context) FolderBucketConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderBucketConfigOutput)
}

// FolderBucketConfigArrayInput is an input type that accepts FolderBucketConfigArray and FolderBucketConfigArrayOutput values.
// You can construct a concrete instance of `FolderBucketConfigArrayInput` via:
//
//	FolderBucketConfigArray{ FolderBucketConfigArgs{...} }
type FolderBucketConfigArrayInput interface {
	pulumi.Input

	ToFolderBucketConfigArrayOutput() FolderBucketConfigArrayOutput
	ToFolderBucketConfigArrayOutputWithContext(context.Context) FolderBucketConfigArrayOutput
}

type FolderBucketConfigArray []FolderBucketConfigInput

func (FolderBucketConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FolderBucketConfig)(nil)).Elem()
}

func (i FolderBucketConfigArray) ToFolderBucketConfigArrayOutput() FolderBucketConfigArrayOutput {
	return i.ToFolderBucketConfigArrayOutputWithContext(context.Background())
}

func (i FolderBucketConfigArray) ToFolderBucketConfigArrayOutputWithContext(ctx context.Context) FolderBucketConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderBucketConfigArrayOutput)
}

// FolderBucketConfigMapInput is an input type that accepts FolderBucketConfigMap and FolderBucketConfigMapOutput values.
// You can construct a concrete instance of `FolderBucketConfigMapInput` via:
//
//	FolderBucketConfigMap{ "key": FolderBucketConfigArgs{...} }
type FolderBucketConfigMapInput interface {
	pulumi.Input

	ToFolderBucketConfigMapOutput() FolderBucketConfigMapOutput
	ToFolderBucketConfigMapOutputWithContext(context.Context) FolderBucketConfigMapOutput
}

type FolderBucketConfigMap map[string]FolderBucketConfigInput

func (FolderBucketConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FolderBucketConfig)(nil)).Elem()
}

func (i FolderBucketConfigMap) ToFolderBucketConfigMapOutput() FolderBucketConfigMapOutput {
	return i.ToFolderBucketConfigMapOutputWithContext(context.Background())
}

func (i FolderBucketConfigMap) ToFolderBucketConfigMapOutputWithContext(ctx context.Context) FolderBucketConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderBucketConfigMapOutput)
}

type FolderBucketConfigOutput struct{ *pulumi.OutputState }

func (FolderBucketConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderBucketConfig)(nil)).Elem()
}

func (o FolderBucketConfigOutput) ToFolderBucketConfigOutput() FolderBucketConfigOutput {
	return o
}

func (o FolderBucketConfigOutput) ToFolderBucketConfigOutputWithContext(ctx context.Context) FolderBucketConfigOutput {
	return o
}

// The name of the logging bucket. Logging automatically creates two log buckets: `_Required` and `_Default`.
func (o FolderBucketConfigOutput) BucketId() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderBucketConfig) pulumi.StringOutput { return v.BucketId }).(pulumi.StringOutput)
}

// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
// updating the log bucket. Changing the KMS key is allowed.
func (o FolderBucketConfigOutput) CmekSettings() FolderBucketConfigCmekSettingsPtrOutput {
	return o.ApplyT(func(v *FolderBucketConfig) FolderBucketConfigCmekSettingsPtrOutput { return v.CmekSettings }).(FolderBucketConfigCmekSettingsPtrOutput)
}

// Describes this bucket.
func (o FolderBucketConfigOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderBucketConfig) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The parent resource that contains the logging bucket.
func (o FolderBucketConfigOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderBucketConfig) pulumi.StringOutput { return v.Folder }).(pulumi.StringOutput)
}

// The bucket's lifecycle such as active or deleted. See [LifecycleState](https://cloud.google.com/logging/docs/reference/v2/rest/v2/billingAccounts.buckets#LogBucket.LifecycleState).
func (o FolderBucketConfigOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderBucketConfig) pulumi.StringOutput { return v.LifecycleState }).(pulumi.StringOutput)
}

// The location of the bucket.
func (o FolderBucketConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderBucketConfig) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
func (o FolderBucketConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderBucketConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used. Bucket retention can not be increased on buckets outside of projects.
func (o FolderBucketConfigOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FolderBucketConfig) pulumi.IntPtrOutput { return v.RetentionDays }).(pulumi.IntPtrOutput)
}

type FolderBucketConfigArrayOutput struct{ *pulumi.OutputState }

func (FolderBucketConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FolderBucketConfig)(nil)).Elem()
}

func (o FolderBucketConfigArrayOutput) ToFolderBucketConfigArrayOutput() FolderBucketConfigArrayOutput {
	return o
}

func (o FolderBucketConfigArrayOutput) ToFolderBucketConfigArrayOutputWithContext(ctx context.Context) FolderBucketConfigArrayOutput {
	return o
}

func (o FolderBucketConfigArrayOutput) Index(i pulumi.IntInput) FolderBucketConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FolderBucketConfig {
		return vs[0].([]*FolderBucketConfig)[vs[1].(int)]
	}).(FolderBucketConfigOutput)
}

type FolderBucketConfigMapOutput struct{ *pulumi.OutputState }

func (FolderBucketConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FolderBucketConfig)(nil)).Elem()
}

func (o FolderBucketConfigMapOutput) ToFolderBucketConfigMapOutput() FolderBucketConfigMapOutput {
	return o
}

func (o FolderBucketConfigMapOutput) ToFolderBucketConfigMapOutputWithContext(ctx context.Context) FolderBucketConfigMapOutput {
	return o
}

func (o FolderBucketConfigMapOutput) MapIndex(k pulumi.StringInput) FolderBucketConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FolderBucketConfig {
		return vs[0].(map[string]*FolderBucketConfig)[vs[1].(string)]
	}).(FolderBucketConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FolderBucketConfigInput)(nil)).Elem(), &FolderBucketConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderBucketConfigArrayInput)(nil)).Elem(), FolderBucketConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderBucketConfigMapInput)(nil)).Elem(), FolderBucketConfigMap{})
	pulumi.RegisterOutputType(FolderBucketConfigOutput{})
	pulumi.RegisterOutputType(FolderBucketConfigArrayOutput{})
	pulumi.RegisterOutputType(FolderBucketConfigMapOutput{})
}
