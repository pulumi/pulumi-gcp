// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp/sdk/v2/go/gcp"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp:logging/billingAccountBucketConfig:BillingAccountBucketConfig":
		r, err = NewBillingAccountBucketConfig(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/billingAccountExclusion:BillingAccountExclusion":
		r, err = NewBillingAccountExclusion(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/billingAccountSink:BillingAccountSink":
		r, err = NewBillingAccountSink(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/folderBucketConfig:FolderBucketConfig":
		r, err = NewFolderBucketConfig(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/folderExclusion:FolderExclusion":
		r, err = NewFolderExclusion(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/folderSink:FolderSink":
		r, err = NewFolderSink(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/metric:Metric":
		r, err = NewMetric(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/organizationBucketConfig:OrganizationBucketConfig":
		r, err = NewOrganizationBucketConfig(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/organizationExclusion:OrganizationExclusion":
		r, err = NewOrganizationExclusion(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/organizationSink:OrganizationSink":
		r, err = NewOrganizationSink(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/projectBucketConfig:ProjectBucketConfig":
		r, err = NewProjectBucketConfig(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/projectExclusion:ProjectExclusion":
		r, err = NewProjectExclusion(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:logging/projectSink:ProjectSink":
		r, err = NewProjectSink(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/billingAccountBucketConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/billingAccountExclusion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/billingAccountSink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/folderBucketConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/folderExclusion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/folderSink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/metric",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/organizationBucketConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/organizationExclusion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/organizationSink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/projectBucketConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/projectExclusion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"gcp",
		"logging/projectSink",
		&module{version},
	)
}
