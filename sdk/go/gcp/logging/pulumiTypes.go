// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BillingAccountBucketConfigCmekSettings struct {
	KmsKeyName        string  `pulumi:"kmsKeyName"`
	KmsKeyVersionName *string `pulumi:"kmsKeyVersionName"`
	// The resource name of the bucket. For example: "projects/my-project-id/locations/my-location/buckets/my-bucket-id"
	Name             *string `pulumi:"name"`
	ServiceAccountId *string `pulumi:"serviceAccountId"`
}

// BillingAccountBucketConfigCmekSettingsInput is an input type that accepts BillingAccountBucketConfigCmekSettingsArgs and BillingAccountBucketConfigCmekSettingsOutput values.
// You can construct a concrete instance of `BillingAccountBucketConfigCmekSettingsInput` via:
//
//	BillingAccountBucketConfigCmekSettingsArgs{...}
type BillingAccountBucketConfigCmekSettingsInput interface {
	pulumi.Input

	ToBillingAccountBucketConfigCmekSettingsOutput() BillingAccountBucketConfigCmekSettingsOutput
	ToBillingAccountBucketConfigCmekSettingsOutputWithContext(context.Context) BillingAccountBucketConfigCmekSettingsOutput
}

type BillingAccountBucketConfigCmekSettingsArgs struct {
	KmsKeyName        pulumi.StringInput    `pulumi:"kmsKeyName"`
	KmsKeyVersionName pulumi.StringPtrInput `pulumi:"kmsKeyVersionName"`
	// The resource name of the bucket. For example: "projects/my-project-id/locations/my-location/buckets/my-bucket-id"
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ServiceAccountId pulumi.StringPtrInput `pulumi:"serviceAccountId"`
}

func (BillingAccountBucketConfigCmekSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountBucketConfigCmekSettings)(nil)).Elem()
}

func (i BillingAccountBucketConfigCmekSettingsArgs) ToBillingAccountBucketConfigCmekSettingsOutput() BillingAccountBucketConfigCmekSettingsOutput {
	return i.ToBillingAccountBucketConfigCmekSettingsOutputWithContext(context.Background())
}

func (i BillingAccountBucketConfigCmekSettingsArgs) ToBillingAccountBucketConfigCmekSettingsOutputWithContext(ctx context.Context) BillingAccountBucketConfigCmekSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountBucketConfigCmekSettingsOutput)
}

func (i BillingAccountBucketConfigCmekSettingsArgs) ToBillingAccountBucketConfigCmekSettingsPtrOutput() BillingAccountBucketConfigCmekSettingsPtrOutput {
	return i.ToBillingAccountBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (i BillingAccountBucketConfigCmekSettingsArgs) ToBillingAccountBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) BillingAccountBucketConfigCmekSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountBucketConfigCmekSettingsOutput).ToBillingAccountBucketConfigCmekSettingsPtrOutputWithContext(ctx)
}

// BillingAccountBucketConfigCmekSettingsPtrInput is an input type that accepts BillingAccountBucketConfigCmekSettingsArgs, BillingAccountBucketConfigCmekSettingsPtr and BillingAccountBucketConfigCmekSettingsPtrOutput values.
// You can construct a concrete instance of `BillingAccountBucketConfigCmekSettingsPtrInput` via:
//
//	        BillingAccountBucketConfigCmekSettingsArgs{...}
//
//	or:
//
//	        nil
type BillingAccountBucketConfigCmekSettingsPtrInput interface {
	pulumi.Input

	ToBillingAccountBucketConfigCmekSettingsPtrOutput() BillingAccountBucketConfigCmekSettingsPtrOutput
	ToBillingAccountBucketConfigCmekSettingsPtrOutputWithContext(context.Context) BillingAccountBucketConfigCmekSettingsPtrOutput
}

type billingAccountBucketConfigCmekSettingsPtrType BillingAccountBucketConfigCmekSettingsArgs

func BillingAccountBucketConfigCmekSettingsPtr(v *BillingAccountBucketConfigCmekSettingsArgs) BillingAccountBucketConfigCmekSettingsPtrInput {
	return (*billingAccountBucketConfigCmekSettingsPtrType)(v)
}

func (*billingAccountBucketConfigCmekSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingAccountBucketConfigCmekSettings)(nil)).Elem()
}

func (i *billingAccountBucketConfigCmekSettingsPtrType) ToBillingAccountBucketConfigCmekSettingsPtrOutput() BillingAccountBucketConfigCmekSettingsPtrOutput {
	return i.ToBillingAccountBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (i *billingAccountBucketConfigCmekSettingsPtrType) ToBillingAccountBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) BillingAccountBucketConfigCmekSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountBucketConfigCmekSettingsPtrOutput)
}

type BillingAccountBucketConfigCmekSettingsOutput struct{ *pulumi.OutputState }

func (BillingAccountBucketConfigCmekSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountBucketConfigCmekSettings)(nil)).Elem()
}

func (o BillingAccountBucketConfigCmekSettingsOutput) ToBillingAccountBucketConfigCmekSettingsOutput() BillingAccountBucketConfigCmekSettingsOutput {
	return o
}

func (o BillingAccountBucketConfigCmekSettingsOutput) ToBillingAccountBucketConfigCmekSettingsOutputWithContext(ctx context.Context) BillingAccountBucketConfigCmekSettingsOutput {
	return o
}

func (o BillingAccountBucketConfigCmekSettingsOutput) ToBillingAccountBucketConfigCmekSettingsPtrOutput() BillingAccountBucketConfigCmekSettingsPtrOutput {
	return o.ToBillingAccountBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (o BillingAccountBucketConfigCmekSettingsOutput) ToBillingAccountBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) BillingAccountBucketConfigCmekSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BillingAccountBucketConfigCmekSettings) *BillingAccountBucketConfigCmekSettings {
		return &v
	}).(BillingAccountBucketConfigCmekSettingsPtrOutput)
}

func (o BillingAccountBucketConfigCmekSettingsOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v BillingAccountBucketConfigCmekSettings) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

func (o BillingAccountBucketConfigCmekSettingsOutput) KmsKeyVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BillingAccountBucketConfigCmekSettings) *string { return v.KmsKeyVersionName }).(pulumi.StringPtrOutput)
}

// The resource name of the bucket. For example: "projects/my-project-id/locations/my-location/buckets/my-bucket-id"
func (o BillingAccountBucketConfigCmekSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BillingAccountBucketConfigCmekSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o BillingAccountBucketConfigCmekSettingsOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BillingAccountBucketConfigCmekSettings) *string { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

type BillingAccountBucketConfigCmekSettingsPtrOutput struct{ *pulumi.OutputState }

func (BillingAccountBucketConfigCmekSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingAccountBucketConfigCmekSettings)(nil)).Elem()
}

func (o BillingAccountBucketConfigCmekSettingsPtrOutput) ToBillingAccountBucketConfigCmekSettingsPtrOutput() BillingAccountBucketConfigCmekSettingsPtrOutput {
	return o
}

func (o BillingAccountBucketConfigCmekSettingsPtrOutput) ToBillingAccountBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) BillingAccountBucketConfigCmekSettingsPtrOutput {
	return o
}

func (o BillingAccountBucketConfigCmekSettingsPtrOutput) Elem() BillingAccountBucketConfigCmekSettingsOutput {
	return o.ApplyT(func(v *BillingAccountBucketConfigCmekSettings) BillingAccountBucketConfigCmekSettings {
		if v != nil {
			return *v
		}
		var ret BillingAccountBucketConfigCmekSettings
		return ret
	}).(BillingAccountBucketConfigCmekSettingsOutput)
}

func (o BillingAccountBucketConfigCmekSettingsPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingAccountBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

func (o BillingAccountBucketConfigCmekSettingsPtrOutput) KmsKeyVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingAccountBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyVersionName
	}).(pulumi.StringPtrOutput)
}

// The resource name of the bucket. For example: "projects/my-project-id/locations/my-location/buckets/my-bucket-id"
func (o BillingAccountBucketConfigCmekSettingsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingAccountBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o BillingAccountBucketConfigCmekSettingsPtrOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BillingAccountBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountId
	}).(pulumi.StringPtrOutput)
}

type BillingAccountSinkBigqueryOptions struct {
	// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
	// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
	// tables, the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
	// has to be used instead. In both cases, tables are sharded based on UTC timezone.
	UsePartitionedTables bool `pulumi:"usePartitionedTables"`
}

// BillingAccountSinkBigqueryOptionsInput is an input type that accepts BillingAccountSinkBigqueryOptionsArgs and BillingAccountSinkBigqueryOptionsOutput values.
// You can construct a concrete instance of `BillingAccountSinkBigqueryOptionsInput` via:
//
//	BillingAccountSinkBigqueryOptionsArgs{...}
type BillingAccountSinkBigqueryOptionsInput interface {
	pulumi.Input

	ToBillingAccountSinkBigqueryOptionsOutput() BillingAccountSinkBigqueryOptionsOutput
	ToBillingAccountSinkBigqueryOptionsOutputWithContext(context.Context) BillingAccountSinkBigqueryOptionsOutput
}

type BillingAccountSinkBigqueryOptionsArgs struct {
	// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
	// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
	// tables, the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
	// has to be used instead. In both cases, tables are sharded based on UTC timezone.
	UsePartitionedTables pulumi.BoolInput `pulumi:"usePartitionedTables"`
}

func (BillingAccountSinkBigqueryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountSinkBigqueryOptions)(nil)).Elem()
}

func (i BillingAccountSinkBigqueryOptionsArgs) ToBillingAccountSinkBigqueryOptionsOutput() BillingAccountSinkBigqueryOptionsOutput {
	return i.ToBillingAccountSinkBigqueryOptionsOutputWithContext(context.Background())
}

func (i BillingAccountSinkBigqueryOptionsArgs) ToBillingAccountSinkBigqueryOptionsOutputWithContext(ctx context.Context) BillingAccountSinkBigqueryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountSinkBigqueryOptionsOutput)
}

func (i BillingAccountSinkBigqueryOptionsArgs) ToBillingAccountSinkBigqueryOptionsPtrOutput() BillingAccountSinkBigqueryOptionsPtrOutput {
	return i.ToBillingAccountSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (i BillingAccountSinkBigqueryOptionsArgs) ToBillingAccountSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) BillingAccountSinkBigqueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountSinkBigqueryOptionsOutput).ToBillingAccountSinkBigqueryOptionsPtrOutputWithContext(ctx)
}

// BillingAccountSinkBigqueryOptionsPtrInput is an input type that accepts BillingAccountSinkBigqueryOptionsArgs, BillingAccountSinkBigqueryOptionsPtr and BillingAccountSinkBigqueryOptionsPtrOutput values.
// You can construct a concrete instance of `BillingAccountSinkBigqueryOptionsPtrInput` via:
//
//	        BillingAccountSinkBigqueryOptionsArgs{...}
//
//	or:
//
//	        nil
type BillingAccountSinkBigqueryOptionsPtrInput interface {
	pulumi.Input

	ToBillingAccountSinkBigqueryOptionsPtrOutput() BillingAccountSinkBigqueryOptionsPtrOutput
	ToBillingAccountSinkBigqueryOptionsPtrOutputWithContext(context.Context) BillingAccountSinkBigqueryOptionsPtrOutput
}

type billingAccountSinkBigqueryOptionsPtrType BillingAccountSinkBigqueryOptionsArgs

func BillingAccountSinkBigqueryOptionsPtr(v *BillingAccountSinkBigqueryOptionsArgs) BillingAccountSinkBigqueryOptionsPtrInput {
	return (*billingAccountSinkBigqueryOptionsPtrType)(v)
}

func (*billingAccountSinkBigqueryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingAccountSinkBigqueryOptions)(nil)).Elem()
}

func (i *billingAccountSinkBigqueryOptionsPtrType) ToBillingAccountSinkBigqueryOptionsPtrOutput() BillingAccountSinkBigqueryOptionsPtrOutput {
	return i.ToBillingAccountSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (i *billingAccountSinkBigqueryOptionsPtrType) ToBillingAccountSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) BillingAccountSinkBigqueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountSinkBigqueryOptionsPtrOutput)
}

type BillingAccountSinkBigqueryOptionsOutput struct{ *pulumi.OutputState }

func (BillingAccountSinkBigqueryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountSinkBigqueryOptions)(nil)).Elem()
}

func (o BillingAccountSinkBigqueryOptionsOutput) ToBillingAccountSinkBigqueryOptionsOutput() BillingAccountSinkBigqueryOptionsOutput {
	return o
}

func (o BillingAccountSinkBigqueryOptionsOutput) ToBillingAccountSinkBigqueryOptionsOutputWithContext(ctx context.Context) BillingAccountSinkBigqueryOptionsOutput {
	return o
}

func (o BillingAccountSinkBigqueryOptionsOutput) ToBillingAccountSinkBigqueryOptionsPtrOutput() BillingAccountSinkBigqueryOptionsPtrOutput {
	return o.ToBillingAccountSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (o BillingAccountSinkBigqueryOptionsOutput) ToBillingAccountSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) BillingAccountSinkBigqueryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BillingAccountSinkBigqueryOptions) *BillingAccountSinkBigqueryOptions {
		return &v
	}).(BillingAccountSinkBigqueryOptionsPtrOutput)
}

// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
// tables, the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
// has to be used instead. In both cases, tables are sharded based on UTC timezone.
func (o BillingAccountSinkBigqueryOptionsOutput) UsePartitionedTables() pulumi.BoolOutput {
	return o.ApplyT(func(v BillingAccountSinkBigqueryOptions) bool { return v.UsePartitionedTables }).(pulumi.BoolOutput)
}

type BillingAccountSinkBigqueryOptionsPtrOutput struct{ *pulumi.OutputState }

func (BillingAccountSinkBigqueryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingAccountSinkBigqueryOptions)(nil)).Elem()
}

func (o BillingAccountSinkBigqueryOptionsPtrOutput) ToBillingAccountSinkBigqueryOptionsPtrOutput() BillingAccountSinkBigqueryOptionsPtrOutput {
	return o
}

func (o BillingAccountSinkBigqueryOptionsPtrOutput) ToBillingAccountSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) BillingAccountSinkBigqueryOptionsPtrOutput {
	return o
}

func (o BillingAccountSinkBigqueryOptionsPtrOutput) Elem() BillingAccountSinkBigqueryOptionsOutput {
	return o.ApplyT(func(v *BillingAccountSinkBigqueryOptions) BillingAccountSinkBigqueryOptions {
		if v != nil {
			return *v
		}
		var ret BillingAccountSinkBigqueryOptions
		return ret
	}).(BillingAccountSinkBigqueryOptionsOutput)
}

// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
// tables, the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
// has to be used instead. In both cases, tables are sharded based on UTC timezone.
func (o BillingAccountSinkBigqueryOptionsPtrOutput) UsePartitionedTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BillingAccountSinkBigqueryOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.UsePartitionedTables
	}).(pulumi.BoolPtrOutput)
}

type BillingAccountSinkExclusion struct {
	// A description of this exclusion.
	Description *string `pulumi:"description"`
	// If set to True, then this exclusion is disabled and it does not exclude any log entries.
	Disabled *bool `pulumi:"disabled"`
	// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
	// write a filter.
	Filter string `pulumi:"filter"`
	// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name string `pulumi:"name"`
}

// BillingAccountSinkExclusionInput is an input type that accepts BillingAccountSinkExclusionArgs and BillingAccountSinkExclusionOutput values.
// You can construct a concrete instance of `BillingAccountSinkExclusionInput` via:
//
//	BillingAccountSinkExclusionArgs{...}
type BillingAccountSinkExclusionInput interface {
	pulumi.Input

	ToBillingAccountSinkExclusionOutput() BillingAccountSinkExclusionOutput
	ToBillingAccountSinkExclusionOutputWithContext(context.Context) BillingAccountSinkExclusionOutput
}

type BillingAccountSinkExclusionArgs struct {
	// A description of this exclusion.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If set to True, then this exclusion is disabled and it does not exclude any log entries.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
	// write a filter.
	Filter pulumi.StringInput `pulumi:"filter"`
	// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name pulumi.StringInput `pulumi:"name"`
}

func (BillingAccountSinkExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountSinkExclusion)(nil)).Elem()
}

func (i BillingAccountSinkExclusionArgs) ToBillingAccountSinkExclusionOutput() BillingAccountSinkExclusionOutput {
	return i.ToBillingAccountSinkExclusionOutputWithContext(context.Background())
}

func (i BillingAccountSinkExclusionArgs) ToBillingAccountSinkExclusionOutputWithContext(ctx context.Context) BillingAccountSinkExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountSinkExclusionOutput)
}

// BillingAccountSinkExclusionArrayInput is an input type that accepts BillingAccountSinkExclusionArray and BillingAccountSinkExclusionArrayOutput values.
// You can construct a concrete instance of `BillingAccountSinkExclusionArrayInput` via:
//
//	BillingAccountSinkExclusionArray{ BillingAccountSinkExclusionArgs{...} }
type BillingAccountSinkExclusionArrayInput interface {
	pulumi.Input

	ToBillingAccountSinkExclusionArrayOutput() BillingAccountSinkExclusionArrayOutput
	ToBillingAccountSinkExclusionArrayOutputWithContext(context.Context) BillingAccountSinkExclusionArrayOutput
}

type BillingAccountSinkExclusionArray []BillingAccountSinkExclusionInput

func (BillingAccountSinkExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BillingAccountSinkExclusion)(nil)).Elem()
}

func (i BillingAccountSinkExclusionArray) ToBillingAccountSinkExclusionArrayOutput() BillingAccountSinkExclusionArrayOutput {
	return i.ToBillingAccountSinkExclusionArrayOutputWithContext(context.Background())
}

func (i BillingAccountSinkExclusionArray) ToBillingAccountSinkExclusionArrayOutputWithContext(ctx context.Context) BillingAccountSinkExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountSinkExclusionArrayOutput)
}

type BillingAccountSinkExclusionOutput struct{ *pulumi.OutputState }

func (BillingAccountSinkExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountSinkExclusion)(nil)).Elem()
}

func (o BillingAccountSinkExclusionOutput) ToBillingAccountSinkExclusionOutput() BillingAccountSinkExclusionOutput {
	return o
}

func (o BillingAccountSinkExclusionOutput) ToBillingAccountSinkExclusionOutputWithContext(ctx context.Context) BillingAccountSinkExclusionOutput {
	return o
}

// A description of this exclusion.
func (o BillingAccountSinkExclusionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BillingAccountSinkExclusion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If set to True, then this exclusion is disabled and it does not exclude any log entries.
func (o BillingAccountSinkExclusionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BillingAccountSinkExclusion) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
// write a filter.
func (o BillingAccountSinkExclusionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v BillingAccountSinkExclusion) string { return v.Filter }).(pulumi.StringOutput)
}

// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
func (o BillingAccountSinkExclusionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BillingAccountSinkExclusion) string { return v.Name }).(pulumi.StringOutput)
}

type BillingAccountSinkExclusionArrayOutput struct{ *pulumi.OutputState }

func (BillingAccountSinkExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BillingAccountSinkExclusion)(nil)).Elem()
}

func (o BillingAccountSinkExclusionArrayOutput) ToBillingAccountSinkExclusionArrayOutput() BillingAccountSinkExclusionArrayOutput {
	return o
}

func (o BillingAccountSinkExclusionArrayOutput) ToBillingAccountSinkExclusionArrayOutputWithContext(ctx context.Context) BillingAccountSinkExclusionArrayOutput {
	return o
}

func (o BillingAccountSinkExclusionArrayOutput) Index(i pulumi.IntInput) BillingAccountSinkExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BillingAccountSinkExclusion {
		return vs[0].([]BillingAccountSinkExclusion)[vs[1].(int)]
	}).(BillingAccountSinkExclusionOutput)
}

type FolderBucketConfigCmekSettings struct {
	KmsKeyName        string  `pulumi:"kmsKeyName"`
	KmsKeyVersionName *string `pulumi:"kmsKeyVersionName"`
	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	Name             *string `pulumi:"name"`
	ServiceAccountId *string `pulumi:"serviceAccountId"`
}

// FolderBucketConfigCmekSettingsInput is an input type that accepts FolderBucketConfigCmekSettingsArgs and FolderBucketConfigCmekSettingsOutput values.
// You can construct a concrete instance of `FolderBucketConfigCmekSettingsInput` via:
//
//	FolderBucketConfigCmekSettingsArgs{...}
type FolderBucketConfigCmekSettingsInput interface {
	pulumi.Input

	ToFolderBucketConfigCmekSettingsOutput() FolderBucketConfigCmekSettingsOutput
	ToFolderBucketConfigCmekSettingsOutputWithContext(context.Context) FolderBucketConfigCmekSettingsOutput
}

type FolderBucketConfigCmekSettingsArgs struct {
	KmsKeyName        pulumi.StringInput    `pulumi:"kmsKeyName"`
	KmsKeyVersionName pulumi.StringPtrInput `pulumi:"kmsKeyVersionName"`
	// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ServiceAccountId pulumi.StringPtrInput `pulumi:"serviceAccountId"`
}

func (FolderBucketConfigCmekSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderBucketConfigCmekSettings)(nil)).Elem()
}

func (i FolderBucketConfigCmekSettingsArgs) ToFolderBucketConfigCmekSettingsOutput() FolderBucketConfigCmekSettingsOutput {
	return i.ToFolderBucketConfigCmekSettingsOutputWithContext(context.Background())
}

func (i FolderBucketConfigCmekSettingsArgs) ToFolderBucketConfigCmekSettingsOutputWithContext(ctx context.Context) FolderBucketConfigCmekSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderBucketConfigCmekSettingsOutput)
}

func (i FolderBucketConfigCmekSettingsArgs) ToFolderBucketConfigCmekSettingsPtrOutput() FolderBucketConfigCmekSettingsPtrOutput {
	return i.ToFolderBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (i FolderBucketConfigCmekSettingsArgs) ToFolderBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) FolderBucketConfigCmekSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderBucketConfigCmekSettingsOutput).ToFolderBucketConfigCmekSettingsPtrOutputWithContext(ctx)
}

// FolderBucketConfigCmekSettingsPtrInput is an input type that accepts FolderBucketConfigCmekSettingsArgs, FolderBucketConfigCmekSettingsPtr and FolderBucketConfigCmekSettingsPtrOutput values.
// You can construct a concrete instance of `FolderBucketConfigCmekSettingsPtrInput` via:
//
//	        FolderBucketConfigCmekSettingsArgs{...}
//
//	or:
//
//	        nil
type FolderBucketConfigCmekSettingsPtrInput interface {
	pulumi.Input

	ToFolderBucketConfigCmekSettingsPtrOutput() FolderBucketConfigCmekSettingsPtrOutput
	ToFolderBucketConfigCmekSettingsPtrOutputWithContext(context.Context) FolderBucketConfigCmekSettingsPtrOutput
}

type folderBucketConfigCmekSettingsPtrType FolderBucketConfigCmekSettingsArgs

func FolderBucketConfigCmekSettingsPtr(v *FolderBucketConfigCmekSettingsArgs) FolderBucketConfigCmekSettingsPtrInput {
	return (*folderBucketConfigCmekSettingsPtrType)(v)
}

func (*folderBucketConfigCmekSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderBucketConfigCmekSettings)(nil)).Elem()
}

func (i *folderBucketConfigCmekSettingsPtrType) ToFolderBucketConfigCmekSettingsPtrOutput() FolderBucketConfigCmekSettingsPtrOutput {
	return i.ToFolderBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (i *folderBucketConfigCmekSettingsPtrType) ToFolderBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) FolderBucketConfigCmekSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderBucketConfigCmekSettingsPtrOutput)
}

type FolderBucketConfigCmekSettingsOutput struct{ *pulumi.OutputState }

func (FolderBucketConfigCmekSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderBucketConfigCmekSettings)(nil)).Elem()
}

func (o FolderBucketConfigCmekSettingsOutput) ToFolderBucketConfigCmekSettingsOutput() FolderBucketConfigCmekSettingsOutput {
	return o
}

func (o FolderBucketConfigCmekSettingsOutput) ToFolderBucketConfigCmekSettingsOutputWithContext(ctx context.Context) FolderBucketConfigCmekSettingsOutput {
	return o
}

func (o FolderBucketConfigCmekSettingsOutput) ToFolderBucketConfigCmekSettingsPtrOutput() FolderBucketConfigCmekSettingsPtrOutput {
	return o.ToFolderBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (o FolderBucketConfigCmekSettingsOutput) ToFolderBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) FolderBucketConfigCmekSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FolderBucketConfigCmekSettings) *FolderBucketConfigCmekSettings {
		return &v
	}).(FolderBucketConfigCmekSettingsPtrOutput)
}

func (o FolderBucketConfigCmekSettingsOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v FolderBucketConfigCmekSettings) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

func (o FolderBucketConfigCmekSettingsOutput) KmsKeyVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FolderBucketConfigCmekSettings) *string { return v.KmsKeyVersionName }).(pulumi.StringPtrOutput)
}

// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
func (o FolderBucketConfigCmekSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FolderBucketConfigCmekSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FolderBucketConfigCmekSettingsOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FolderBucketConfigCmekSettings) *string { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

type FolderBucketConfigCmekSettingsPtrOutput struct{ *pulumi.OutputState }

func (FolderBucketConfigCmekSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderBucketConfigCmekSettings)(nil)).Elem()
}

func (o FolderBucketConfigCmekSettingsPtrOutput) ToFolderBucketConfigCmekSettingsPtrOutput() FolderBucketConfigCmekSettingsPtrOutput {
	return o
}

func (o FolderBucketConfigCmekSettingsPtrOutput) ToFolderBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) FolderBucketConfigCmekSettingsPtrOutput {
	return o
}

func (o FolderBucketConfigCmekSettingsPtrOutput) Elem() FolderBucketConfigCmekSettingsOutput {
	return o.ApplyT(func(v *FolderBucketConfigCmekSettings) FolderBucketConfigCmekSettings {
		if v != nil {
			return *v
		}
		var ret FolderBucketConfigCmekSettings
		return ret
	}).(FolderBucketConfigCmekSettingsOutput)
}

func (o FolderBucketConfigCmekSettingsPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FolderBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

func (o FolderBucketConfigCmekSettingsPtrOutput) KmsKeyVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FolderBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyVersionName
	}).(pulumi.StringPtrOutput)
}

// The resource name of the bucket. For example: "folders/my-folder-id/locations/my-location/buckets/my-bucket-id"
func (o FolderBucketConfigCmekSettingsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FolderBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o FolderBucketConfigCmekSettingsPtrOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FolderBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountId
	}).(pulumi.StringPtrOutput)
}

type FolderSinkBigqueryOptions struct {
	// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
	// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
	// tables, the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
	// has to be used instead. In both cases, tables are sharded based on UTC timezone.
	UsePartitionedTables bool `pulumi:"usePartitionedTables"`
}

// FolderSinkBigqueryOptionsInput is an input type that accepts FolderSinkBigqueryOptionsArgs and FolderSinkBigqueryOptionsOutput values.
// You can construct a concrete instance of `FolderSinkBigqueryOptionsInput` via:
//
//	FolderSinkBigqueryOptionsArgs{...}
type FolderSinkBigqueryOptionsInput interface {
	pulumi.Input

	ToFolderSinkBigqueryOptionsOutput() FolderSinkBigqueryOptionsOutput
	ToFolderSinkBigqueryOptionsOutputWithContext(context.Context) FolderSinkBigqueryOptionsOutput
}

type FolderSinkBigqueryOptionsArgs struct {
	// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
	// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
	// tables, the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
	// has to be used instead. In both cases, tables are sharded based on UTC timezone.
	UsePartitionedTables pulumi.BoolInput `pulumi:"usePartitionedTables"`
}

func (FolderSinkBigqueryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderSinkBigqueryOptions)(nil)).Elem()
}

func (i FolderSinkBigqueryOptionsArgs) ToFolderSinkBigqueryOptionsOutput() FolderSinkBigqueryOptionsOutput {
	return i.ToFolderSinkBigqueryOptionsOutputWithContext(context.Background())
}

func (i FolderSinkBigqueryOptionsArgs) ToFolderSinkBigqueryOptionsOutputWithContext(ctx context.Context) FolderSinkBigqueryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderSinkBigqueryOptionsOutput)
}

func (i FolderSinkBigqueryOptionsArgs) ToFolderSinkBigqueryOptionsPtrOutput() FolderSinkBigqueryOptionsPtrOutput {
	return i.ToFolderSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (i FolderSinkBigqueryOptionsArgs) ToFolderSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) FolderSinkBigqueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderSinkBigqueryOptionsOutput).ToFolderSinkBigqueryOptionsPtrOutputWithContext(ctx)
}

// FolderSinkBigqueryOptionsPtrInput is an input type that accepts FolderSinkBigqueryOptionsArgs, FolderSinkBigqueryOptionsPtr and FolderSinkBigqueryOptionsPtrOutput values.
// You can construct a concrete instance of `FolderSinkBigqueryOptionsPtrInput` via:
//
//	        FolderSinkBigqueryOptionsArgs{...}
//
//	or:
//
//	        nil
type FolderSinkBigqueryOptionsPtrInput interface {
	pulumi.Input

	ToFolderSinkBigqueryOptionsPtrOutput() FolderSinkBigqueryOptionsPtrOutput
	ToFolderSinkBigqueryOptionsPtrOutputWithContext(context.Context) FolderSinkBigqueryOptionsPtrOutput
}

type folderSinkBigqueryOptionsPtrType FolderSinkBigqueryOptionsArgs

func FolderSinkBigqueryOptionsPtr(v *FolderSinkBigqueryOptionsArgs) FolderSinkBigqueryOptionsPtrInput {
	return (*folderSinkBigqueryOptionsPtrType)(v)
}

func (*folderSinkBigqueryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderSinkBigqueryOptions)(nil)).Elem()
}

func (i *folderSinkBigqueryOptionsPtrType) ToFolderSinkBigqueryOptionsPtrOutput() FolderSinkBigqueryOptionsPtrOutput {
	return i.ToFolderSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (i *folderSinkBigqueryOptionsPtrType) ToFolderSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) FolderSinkBigqueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderSinkBigqueryOptionsPtrOutput)
}

type FolderSinkBigqueryOptionsOutput struct{ *pulumi.OutputState }

func (FolderSinkBigqueryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderSinkBigqueryOptions)(nil)).Elem()
}

func (o FolderSinkBigqueryOptionsOutput) ToFolderSinkBigqueryOptionsOutput() FolderSinkBigqueryOptionsOutput {
	return o
}

func (o FolderSinkBigqueryOptionsOutput) ToFolderSinkBigqueryOptionsOutputWithContext(ctx context.Context) FolderSinkBigqueryOptionsOutput {
	return o
}

func (o FolderSinkBigqueryOptionsOutput) ToFolderSinkBigqueryOptionsPtrOutput() FolderSinkBigqueryOptionsPtrOutput {
	return o.ToFolderSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (o FolderSinkBigqueryOptionsOutput) ToFolderSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) FolderSinkBigqueryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FolderSinkBigqueryOptions) *FolderSinkBigqueryOptions {
		return &v
	}).(FolderSinkBigqueryOptionsPtrOutput)
}

// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
// tables, the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
// has to be used instead. In both cases, tables are sharded based on UTC timezone.
func (o FolderSinkBigqueryOptionsOutput) UsePartitionedTables() pulumi.BoolOutput {
	return o.ApplyT(func(v FolderSinkBigqueryOptions) bool { return v.UsePartitionedTables }).(pulumi.BoolOutput)
}

type FolderSinkBigqueryOptionsPtrOutput struct{ *pulumi.OutputState }

func (FolderSinkBigqueryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderSinkBigqueryOptions)(nil)).Elem()
}

func (o FolderSinkBigqueryOptionsPtrOutput) ToFolderSinkBigqueryOptionsPtrOutput() FolderSinkBigqueryOptionsPtrOutput {
	return o
}

func (o FolderSinkBigqueryOptionsPtrOutput) ToFolderSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) FolderSinkBigqueryOptionsPtrOutput {
	return o
}

func (o FolderSinkBigqueryOptionsPtrOutput) Elem() FolderSinkBigqueryOptionsOutput {
	return o.ApplyT(func(v *FolderSinkBigqueryOptions) FolderSinkBigqueryOptions {
		if v != nil {
			return *v
		}
		var ret FolderSinkBigqueryOptions
		return ret
	}).(FolderSinkBigqueryOptionsOutput)
}

// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
// tables, the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
// has to be used instead. In both cases, tables are sharded based on UTC timezone.
func (o FolderSinkBigqueryOptionsPtrOutput) UsePartitionedTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FolderSinkBigqueryOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.UsePartitionedTables
	}).(pulumi.BoolPtrOutput)
}

type FolderSinkExclusion struct {
	// A description of this exclusion.
	Description *string `pulumi:"description"`
	// If set to True, then this exclusion is disabled and it does not exclude any log entries.
	Disabled *bool `pulumi:"disabled"`
	// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
	// write a filter.
	Filter string `pulumi:"filter"`
	// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name string `pulumi:"name"`
}

// FolderSinkExclusionInput is an input type that accepts FolderSinkExclusionArgs and FolderSinkExclusionOutput values.
// You can construct a concrete instance of `FolderSinkExclusionInput` via:
//
//	FolderSinkExclusionArgs{...}
type FolderSinkExclusionInput interface {
	pulumi.Input

	ToFolderSinkExclusionOutput() FolderSinkExclusionOutput
	ToFolderSinkExclusionOutputWithContext(context.Context) FolderSinkExclusionOutput
}

type FolderSinkExclusionArgs struct {
	// A description of this exclusion.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If set to True, then this exclusion is disabled and it does not exclude any log entries.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
	// write a filter.
	Filter pulumi.StringInput `pulumi:"filter"`
	// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FolderSinkExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderSinkExclusion)(nil)).Elem()
}

func (i FolderSinkExclusionArgs) ToFolderSinkExclusionOutput() FolderSinkExclusionOutput {
	return i.ToFolderSinkExclusionOutputWithContext(context.Background())
}

func (i FolderSinkExclusionArgs) ToFolderSinkExclusionOutputWithContext(ctx context.Context) FolderSinkExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderSinkExclusionOutput)
}

// FolderSinkExclusionArrayInput is an input type that accepts FolderSinkExclusionArray and FolderSinkExclusionArrayOutput values.
// You can construct a concrete instance of `FolderSinkExclusionArrayInput` via:
//
//	FolderSinkExclusionArray{ FolderSinkExclusionArgs{...} }
type FolderSinkExclusionArrayInput interface {
	pulumi.Input

	ToFolderSinkExclusionArrayOutput() FolderSinkExclusionArrayOutput
	ToFolderSinkExclusionArrayOutputWithContext(context.Context) FolderSinkExclusionArrayOutput
}

type FolderSinkExclusionArray []FolderSinkExclusionInput

func (FolderSinkExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FolderSinkExclusion)(nil)).Elem()
}

func (i FolderSinkExclusionArray) ToFolderSinkExclusionArrayOutput() FolderSinkExclusionArrayOutput {
	return i.ToFolderSinkExclusionArrayOutputWithContext(context.Background())
}

func (i FolderSinkExclusionArray) ToFolderSinkExclusionArrayOutputWithContext(ctx context.Context) FolderSinkExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderSinkExclusionArrayOutput)
}

type FolderSinkExclusionOutput struct{ *pulumi.OutputState }

func (FolderSinkExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderSinkExclusion)(nil)).Elem()
}

func (o FolderSinkExclusionOutput) ToFolderSinkExclusionOutput() FolderSinkExclusionOutput {
	return o
}

func (o FolderSinkExclusionOutput) ToFolderSinkExclusionOutputWithContext(ctx context.Context) FolderSinkExclusionOutput {
	return o
}

// A description of this exclusion.
func (o FolderSinkExclusionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FolderSinkExclusion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If set to True, then this exclusion is disabled and it does not exclude any log entries.
func (o FolderSinkExclusionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FolderSinkExclusion) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
// write a filter.
func (o FolderSinkExclusionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v FolderSinkExclusion) string { return v.Filter }).(pulumi.StringOutput)
}

// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
func (o FolderSinkExclusionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FolderSinkExclusion) string { return v.Name }).(pulumi.StringOutput)
}

type FolderSinkExclusionArrayOutput struct{ *pulumi.OutputState }

func (FolderSinkExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FolderSinkExclusion)(nil)).Elem()
}

func (o FolderSinkExclusionArrayOutput) ToFolderSinkExclusionArrayOutput() FolderSinkExclusionArrayOutput {
	return o
}

func (o FolderSinkExclusionArrayOutput) ToFolderSinkExclusionArrayOutputWithContext(ctx context.Context) FolderSinkExclusionArrayOutput {
	return o
}

func (o FolderSinkExclusionArrayOutput) Index(i pulumi.IntInput) FolderSinkExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FolderSinkExclusion {
		return vs[0].([]FolderSinkExclusion)[vs[1].(int)]
	}).(FolderSinkExclusionOutput)
}

type MetricBucketOptions struct {
	// Specifies a set of buckets with arbitrary widths.
	// Structure is documented below.
	ExplicitBuckets *MetricBucketOptionsExplicitBuckets `pulumi:"explicitBuckets"`
	// Specifies an exponential sequence of buckets that have a width that is proportional to the value of
	// the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
	// Structure is documented below.
	ExponentialBuckets *MetricBucketOptionsExponentialBuckets `pulumi:"exponentialBuckets"`
	// Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
	// Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
	// Structure is documented below.
	LinearBuckets *MetricBucketOptionsLinearBuckets `pulumi:"linearBuckets"`
}

// MetricBucketOptionsInput is an input type that accepts MetricBucketOptionsArgs and MetricBucketOptionsOutput values.
// You can construct a concrete instance of `MetricBucketOptionsInput` via:
//
//	MetricBucketOptionsArgs{...}
type MetricBucketOptionsInput interface {
	pulumi.Input

	ToMetricBucketOptionsOutput() MetricBucketOptionsOutput
	ToMetricBucketOptionsOutputWithContext(context.Context) MetricBucketOptionsOutput
}

type MetricBucketOptionsArgs struct {
	// Specifies a set of buckets with arbitrary widths.
	// Structure is documented below.
	ExplicitBuckets MetricBucketOptionsExplicitBucketsPtrInput `pulumi:"explicitBuckets"`
	// Specifies an exponential sequence of buckets that have a width that is proportional to the value of
	// the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
	// Structure is documented below.
	ExponentialBuckets MetricBucketOptionsExponentialBucketsPtrInput `pulumi:"exponentialBuckets"`
	// Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
	// Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
	// Structure is documented below.
	LinearBuckets MetricBucketOptionsLinearBucketsPtrInput `pulumi:"linearBuckets"`
}

func (MetricBucketOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricBucketOptions)(nil)).Elem()
}

func (i MetricBucketOptionsArgs) ToMetricBucketOptionsOutput() MetricBucketOptionsOutput {
	return i.ToMetricBucketOptionsOutputWithContext(context.Background())
}

func (i MetricBucketOptionsArgs) ToMetricBucketOptionsOutputWithContext(ctx context.Context) MetricBucketOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsOutput)
}

func (i MetricBucketOptionsArgs) ToMetricBucketOptionsPtrOutput() MetricBucketOptionsPtrOutput {
	return i.ToMetricBucketOptionsPtrOutputWithContext(context.Background())
}

func (i MetricBucketOptionsArgs) ToMetricBucketOptionsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsOutput).ToMetricBucketOptionsPtrOutputWithContext(ctx)
}

// MetricBucketOptionsPtrInput is an input type that accepts MetricBucketOptionsArgs, MetricBucketOptionsPtr and MetricBucketOptionsPtrOutput values.
// You can construct a concrete instance of `MetricBucketOptionsPtrInput` via:
//
//	        MetricBucketOptionsArgs{...}
//
//	or:
//
//	        nil
type MetricBucketOptionsPtrInput interface {
	pulumi.Input

	ToMetricBucketOptionsPtrOutput() MetricBucketOptionsPtrOutput
	ToMetricBucketOptionsPtrOutputWithContext(context.Context) MetricBucketOptionsPtrOutput
}

type metricBucketOptionsPtrType MetricBucketOptionsArgs

func MetricBucketOptionsPtr(v *MetricBucketOptionsArgs) MetricBucketOptionsPtrInput {
	return (*metricBucketOptionsPtrType)(v)
}

func (*metricBucketOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricBucketOptions)(nil)).Elem()
}

func (i *metricBucketOptionsPtrType) ToMetricBucketOptionsPtrOutput() MetricBucketOptionsPtrOutput {
	return i.ToMetricBucketOptionsPtrOutputWithContext(context.Background())
}

func (i *metricBucketOptionsPtrType) ToMetricBucketOptionsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsPtrOutput)
}

type MetricBucketOptionsOutput struct{ *pulumi.OutputState }

func (MetricBucketOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricBucketOptions)(nil)).Elem()
}

func (o MetricBucketOptionsOutput) ToMetricBucketOptionsOutput() MetricBucketOptionsOutput {
	return o
}

func (o MetricBucketOptionsOutput) ToMetricBucketOptionsOutputWithContext(ctx context.Context) MetricBucketOptionsOutput {
	return o
}

func (o MetricBucketOptionsOutput) ToMetricBucketOptionsPtrOutput() MetricBucketOptionsPtrOutput {
	return o.ToMetricBucketOptionsPtrOutputWithContext(context.Background())
}

func (o MetricBucketOptionsOutput) ToMetricBucketOptionsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricBucketOptions) *MetricBucketOptions {
		return &v
	}).(MetricBucketOptionsPtrOutput)
}

// Specifies a set of buckets with arbitrary widths.
// Structure is documented below.
func (o MetricBucketOptionsOutput) ExplicitBuckets() MetricBucketOptionsExplicitBucketsPtrOutput {
	return o.ApplyT(func(v MetricBucketOptions) *MetricBucketOptionsExplicitBuckets { return v.ExplicitBuckets }).(MetricBucketOptionsExplicitBucketsPtrOutput)
}

// Specifies an exponential sequence of buckets that have a width that is proportional to the value of
// the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
// Structure is documented below.
func (o MetricBucketOptionsOutput) ExponentialBuckets() MetricBucketOptionsExponentialBucketsPtrOutput {
	return o.ApplyT(func(v MetricBucketOptions) *MetricBucketOptionsExponentialBuckets { return v.ExponentialBuckets }).(MetricBucketOptionsExponentialBucketsPtrOutput)
}

// Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
// Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
// Structure is documented below.
func (o MetricBucketOptionsOutput) LinearBuckets() MetricBucketOptionsLinearBucketsPtrOutput {
	return o.ApplyT(func(v MetricBucketOptions) *MetricBucketOptionsLinearBuckets { return v.LinearBuckets }).(MetricBucketOptionsLinearBucketsPtrOutput)
}

type MetricBucketOptionsPtrOutput struct{ *pulumi.OutputState }

func (MetricBucketOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricBucketOptions)(nil)).Elem()
}

func (o MetricBucketOptionsPtrOutput) ToMetricBucketOptionsPtrOutput() MetricBucketOptionsPtrOutput {
	return o
}

func (o MetricBucketOptionsPtrOutput) ToMetricBucketOptionsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsPtrOutput {
	return o
}

func (o MetricBucketOptionsPtrOutput) Elem() MetricBucketOptionsOutput {
	return o.ApplyT(func(v *MetricBucketOptions) MetricBucketOptions {
		if v != nil {
			return *v
		}
		var ret MetricBucketOptions
		return ret
	}).(MetricBucketOptionsOutput)
}

// Specifies a set of buckets with arbitrary widths.
// Structure is documented below.
func (o MetricBucketOptionsPtrOutput) ExplicitBuckets() MetricBucketOptionsExplicitBucketsPtrOutput {
	return o.ApplyT(func(v *MetricBucketOptions) *MetricBucketOptionsExplicitBuckets {
		if v == nil {
			return nil
		}
		return v.ExplicitBuckets
	}).(MetricBucketOptionsExplicitBucketsPtrOutput)
}

// Specifies an exponential sequence of buckets that have a width that is proportional to the value of
// the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
// Structure is documented below.
func (o MetricBucketOptionsPtrOutput) ExponentialBuckets() MetricBucketOptionsExponentialBucketsPtrOutput {
	return o.ApplyT(func(v *MetricBucketOptions) *MetricBucketOptionsExponentialBuckets {
		if v == nil {
			return nil
		}
		return v.ExponentialBuckets
	}).(MetricBucketOptionsExponentialBucketsPtrOutput)
}

// Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
// Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
// Structure is documented below.
func (o MetricBucketOptionsPtrOutput) LinearBuckets() MetricBucketOptionsLinearBucketsPtrOutput {
	return o.ApplyT(func(v *MetricBucketOptions) *MetricBucketOptionsLinearBuckets {
		if v == nil {
			return nil
		}
		return v.LinearBuckets
	}).(MetricBucketOptionsLinearBucketsPtrOutput)
}

type MetricBucketOptionsExplicitBuckets struct {
	// The values must be monotonically increasing.
	Bounds []float64 `pulumi:"bounds"`
}

// MetricBucketOptionsExplicitBucketsInput is an input type that accepts MetricBucketOptionsExplicitBucketsArgs and MetricBucketOptionsExplicitBucketsOutput values.
// You can construct a concrete instance of `MetricBucketOptionsExplicitBucketsInput` via:
//
//	MetricBucketOptionsExplicitBucketsArgs{...}
type MetricBucketOptionsExplicitBucketsInput interface {
	pulumi.Input

	ToMetricBucketOptionsExplicitBucketsOutput() MetricBucketOptionsExplicitBucketsOutput
	ToMetricBucketOptionsExplicitBucketsOutputWithContext(context.Context) MetricBucketOptionsExplicitBucketsOutput
}

type MetricBucketOptionsExplicitBucketsArgs struct {
	// The values must be monotonically increasing.
	Bounds pulumi.Float64ArrayInput `pulumi:"bounds"`
}

func (MetricBucketOptionsExplicitBucketsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricBucketOptionsExplicitBuckets)(nil)).Elem()
}

func (i MetricBucketOptionsExplicitBucketsArgs) ToMetricBucketOptionsExplicitBucketsOutput() MetricBucketOptionsExplicitBucketsOutput {
	return i.ToMetricBucketOptionsExplicitBucketsOutputWithContext(context.Background())
}

func (i MetricBucketOptionsExplicitBucketsArgs) ToMetricBucketOptionsExplicitBucketsOutputWithContext(ctx context.Context) MetricBucketOptionsExplicitBucketsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsExplicitBucketsOutput)
}

func (i MetricBucketOptionsExplicitBucketsArgs) ToMetricBucketOptionsExplicitBucketsPtrOutput() MetricBucketOptionsExplicitBucketsPtrOutput {
	return i.ToMetricBucketOptionsExplicitBucketsPtrOutputWithContext(context.Background())
}

func (i MetricBucketOptionsExplicitBucketsArgs) ToMetricBucketOptionsExplicitBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsExplicitBucketsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsExplicitBucketsOutput).ToMetricBucketOptionsExplicitBucketsPtrOutputWithContext(ctx)
}

// MetricBucketOptionsExplicitBucketsPtrInput is an input type that accepts MetricBucketOptionsExplicitBucketsArgs, MetricBucketOptionsExplicitBucketsPtr and MetricBucketOptionsExplicitBucketsPtrOutput values.
// You can construct a concrete instance of `MetricBucketOptionsExplicitBucketsPtrInput` via:
//
//	        MetricBucketOptionsExplicitBucketsArgs{...}
//
//	or:
//
//	        nil
type MetricBucketOptionsExplicitBucketsPtrInput interface {
	pulumi.Input

	ToMetricBucketOptionsExplicitBucketsPtrOutput() MetricBucketOptionsExplicitBucketsPtrOutput
	ToMetricBucketOptionsExplicitBucketsPtrOutputWithContext(context.Context) MetricBucketOptionsExplicitBucketsPtrOutput
}

type metricBucketOptionsExplicitBucketsPtrType MetricBucketOptionsExplicitBucketsArgs

func MetricBucketOptionsExplicitBucketsPtr(v *MetricBucketOptionsExplicitBucketsArgs) MetricBucketOptionsExplicitBucketsPtrInput {
	return (*metricBucketOptionsExplicitBucketsPtrType)(v)
}

func (*metricBucketOptionsExplicitBucketsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricBucketOptionsExplicitBuckets)(nil)).Elem()
}

func (i *metricBucketOptionsExplicitBucketsPtrType) ToMetricBucketOptionsExplicitBucketsPtrOutput() MetricBucketOptionsExplicitBucketsPtrOutput {
	return i.ToMetricBucketOptionsExplicitBucketsPtrOutputWithContext(context.Background())
}

func (i *metricBucketOptionsExplicitBucketsPtrType) ToMetricBucketOptionsExplicitBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsExplicitBucketsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsExplicitBucketsPtrOutput)
}

type MetricBucketOptionsExplicitBucketsOutput struct{ *pulumi.OutputState }

func (MetricBucketOptionsExplicitBucketsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricBucketOptionsExplicitBuckets)(nil)).Elem()
}

func (o MetricBucketOptionsExplicitBucketsOutput) ToMetricBucketOptionsExplicitBucketsOutput() MetricBucketOptionsExplicitBucketsOutput {
	return o
}

func (o MetricBucketOptionsExplicitBucketsOutput) ToMetricBucketOptionsExplicitBucketsOutputWithContext(ctx context.Context) MetricBucketOptionsExplicitBucketsOutput {
	return o
}

func (o MetricBucketOptionsExplicitBucketsOutput) ToMetricBucketOptionsExplicitBucketsPtrOutput() MetricBucketOptionsExplicitBucketsPtrOutput {
	return o.ToMetricBucketOptionsExplicitBucketsPtrOutputWithContext(context.Background())
}

func (o MetricBucketOptionsExplicitBucketsOutput) ToMetricBucketOptionsExplicitBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsExplicitBucketsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricBucketOptionsExplicitBuckets) *MetricBucketOptionsExplicitBuckets {
		return &v
	}).(MetricBucketOptionsExplicitBucketsPtrOutput)
}

// The values must be monotonically increasing.
func (o MetricBucketOptionsExplicitBucketsOutput) Bounds() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v MetricBucketOptionsExplicitBuckets) []float64 { return v.Bounds }).(pulumi.Float64ArrayOutput)
}

type MetricBucketOptionsExplicitBucketsPtrOutput struct{ *pulumi.OutputState }

func (MetricBucketOptionsExplicitBucketsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricBucketOptionsExplicitBuckets)(nil)).Elem()
}

func (o MetricBucketOptionsExplicitBucketsPtrOutput) ToMetricBucketOptionsExplicitBucketsPtrOutput() MetricBucketOptionsExplicitBucketsPtrOutput {
	return o
}

func (o MetricBucketOptionsExplicitBucketsPtrOutput) ToMetricBucketOptionsExplicitBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsExplicitBucketsPtrOutput {
	return o
}

func (o MetricBucketOptionsExplicitBucketsPtrOutput) Elem() MetricBucketOptionsExplicitBucketsOutput {
	return o.ApplyT(func(v *MetricBucketOptionsExplicitBuckets) MetricBucketOptionsExplicitBuckets {
		if v != nil {
			return *v
		}
		var ret MetricBucketOptionsExplicitBuckets
		return ret
	}).(MetricBucketOptionsExplicitBucketsOutput)
}

// The values must be monotonically increasing.
func (o MetricBucketOptionsExplicitBucketsPtrOutput) Bounds() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *MetricBucketOptionsExplicitBuckets) []float64 {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(pulumi.Float64ArrayOutput)
}

type MetricBucketOptionsExponentialBuckets struct {
	// Must be greater than 1.
	GrowthFactor *float64 `pulumi:"growthFactor"`
	// Must be greater than 0.
	NumFiniteBuckets *int `pulumi:"numFiniteBuckets"`
	// Must be greater than 0.
	Scale *float64 `pulumi:"scale"`
}

// MetricBucketOptionsExponentialBucketsInput is an input type that accepts MetricBucketOptionsExponentialBucketsArgs and MetricBucketOptionsExponentialBucketsOutput values.
// You can construct a concrete instance of `MetricBucketOptionsExponentialBucketsInput` via:
//
//	MetricBucketOptionsExponentialBucketsArgs{...}
type MetricBucketOptionsExponentialBucketsInput interface {
	pulumi.Input

	ToMetricBucketOptionsExponentialBucketsOutput() MetricBucketOptionsExponentialBucketsOutput
	ToMetricBucketOptionsExponentialBucketsOutputWithContext(context.Context) MetricBucketOptionsExponentialBucketsOutput
}

type MetricBucketOptionsExponentialBucketsArgs struct {
	// Must be greater than 1.
	GrowthFactor pulumi.Float64PtrInput `pulumi:"growthFactor"`
	// Must be greater than 0.
	NumFiniteBuckets pulumi.IntPtrInput `pulumi:"numFiniteBuckets"`
	// Must be greater than 0.
	Scale pulumi.Float64PtrInput `pulumi:"scale"`
}

func (MetricBucketOptionsExponentialBucketsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricBucketOptionsExponentialBuckets)(nil)).Elem()
}

func (i MetricBucketOptionsExponentialBucketsArgs) ToMetricBucketOptionsExponentialBucketsOutput() MetricBucketOptionsExponentialBucketsOutput {
	return i.ToMetricBucketOptionsExponentialBucketsOutputWithContext(context.Background())
}

func (i MetricBucketOptionsExponentialBucketsArgs) ToMetricBucketOptionsExponentialBucketsOutputWithContext(ctx context.Context) MetricBucketOptionsExponentialBucketsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsExponentialBucketsOutput)
}

func (i MetricBucketOptionsExponentialBucketsArgs) ToMetricBucketOptionsExponentialBucketsPtrOutput() MetricBucketOptionsExponentialBucketsPtrOutput {
	return i.ToMetricBucketOptionsExponentialBucketsPtrOutputWithContext(context.Background())
}

func (i MetricBucketOptionsExponentialBucketsArgs) ToMetricBucketOptionsExponentialBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsExponentialBucketsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsExponentialBucketsOutput).ToMetricBucketOptionsExponentialBucketsPtrOutputWithContext(ctx)
}

// MetricBucketOptionsExponentialBucketsPtrInput is an input type that accepts MetricBucketOptionsExponentialBucketsArgs, MetricBucketOptionsExponentialBucketsPtr and MetricBucketOptionsExponentialBucketsPtrOutput values.
// You can construct a concrete instance of `MetricBucketOptionsExponentialBucketsPtrInput` via:
//
//	        MetricBucketOptionsExponentialBucketsArgs{...}
//
//	or:
//
//	        nil
type MetricBucketOptionsExponentialBucketsPtrInput interface {
	pulumi.Input

	ToMetricBucketOptionsExponentialBucketsPtrOutput() MetricBucketOptionsExponentialBucketsPtrOutput
	ToMetricBucketOptionsExponentialBucketsPtrOutputWithContext(context.Context) MetricBucketOptionsExponentialBucketsPtrOutput
}

type metricBucketOptionsExponentialBucketsPtrType MetricBucketOptionsExponentialBucketsArgs

func MetricBucketOptionsExponentialBucketsPtr(v *MetricBucketOptionsExponentialBucketsArgs) MetricBucketOptionsExponentialBucketsPtrInput {
	return (*metricBucketOptionsExponentialBucketsPtrType)(v)
}

func (*metricBucketOptionsExponentialBucketsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricBucketOptionsExponentialBuckets)(nil)).Elem()
}

func (i *metricBucketOptionsExponentialBucketsPtrType) ToMetricBucketOptionsExponentialBucketsPtrOutput() MetricBucketOptionsExponentialBucketsPtrOutput {
	return i.ToMetricBucketOptionsExponentialBucketsPtrOutputWithContext(context.Background())
}

func (i *metricBucketOptionsExponentialBucketsPtrType) ToMetricBucketOptionsExponentialBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsExponentialBucketsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsExponentialBucketsPtrOutput)
}

type MetricBucketOptionsExponentialBucketsOutput struct{ *pulumi.OutputState }

func (MetricBucketOptionsExponentialBucketsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricBucketOptionsExponentialBuckets)(nil)).Elem()
}

func (o MetricBucketOptionsExponentialBucketsOutput) ToMetricBucketOptionsExponentialBucketsOutput() MetricBucketOptionsExponentialBucketsOutput {
	return o
}

func (o MetricBucketOptionsExponentialBucketsOutput) ToMetricBucketOptionsExponentialBucketsOutputWithContext(ctx context.Context) MetricBucketOptionsExponentialBucketsOutput {
	return o
}

func (o MetricBucketOptionsExponentialBucketsOutput) ToMetricBucketOptionsExponentialBucketsPtrOutput() MetricBucketOptionsExponentialBucketsPtrOutput {
	return o.ToMetricBucketOptionsExponentialBucketsPtrOutputWithContext(context.Background())
}

func (o MetricBucketOptionsExponentialBucketsOutput) ToMetricBucketOptionsExponentialBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsExponentialBucketsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricBucketOptionsExponentialBuckets) *MetricBucketOptionsExponentialBuckets {
		return &v
	}).(MetricBucketOptionsExponentialBucketsPtrOutput)
}

// Must be greater than 1.
func (o MetricBucketOptionsExponentialBucketsOutput) GrowthFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MetricBucketOptionsExponentialBuckets) *float64 { return v.GrowthFactor }).(pulumi.Float64PtrOutput)
}

// Must be greater than 0.
func (o MetricBucketOptionsExponentialBucketsOutput) NumFiniteBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricBucketOptionsExponentialBuckets) *int { return v.NumFiniteBuckets }).(pulumi.IntPtrOutput)
}

// Must be greater than 0.
func (o MetricBucketOptionsExponentialBucketsOutput) Scale() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MetricBucketOptionsExponentialBuckets) *float64 { return v.Scale }).(pulumi.Float64PtrOutput)
}

type MetricBucketOptionsExponentialBucketsPtrOutput struct{ *pulumi.OutputState }

func (MetricBucketOptionsExponentialBucketsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricBucketOptionsExponentialBuckets)(nil)).Elem()
}

func (o MetricBucketOptionsExponentialBucketsPtrOutput) ToMetricBucketOptionsExponentialBucketsPtrOutput() MetricBucketOptionsExponentialBucketsPtrOutput {
	return o
}

func (o MetricBucketOptionsExponentialBucketsPtrOutput) ToMetricBucketOptionsExponentialBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsExponentialBucketsPtrOutput {
	return o
}

func (o MetricBucketOptionsExponentialBucketsPtrOutput) Elem() MetricBucketOptionsExponentialBucketsOutput {
	return o.ApplyT(func(v *MetricBucketOptionsExponentialBuckets) MetricBucketOptionsExponentialBuckets {
		if v != nil {
			return *v
		}
		var ret MetricBucketOptionsExponentialBuckets
		return ret
	}).(MetricBucketOptionsExponentialBucketsOutput)
}

// Must be greater than 1.
func (o MetricBucketOptionsExponentialBucketsPtrOutput) GrowthFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MetricBucketOptionsExponentialBuckets) *float64 {
		if v == nil {
			return nil
		}
		return v.GrowthFactor
	}).(pulumi.Float64PtrOutput)
}

// Must be greater than 0.
func (o MetricBucketOptionsExponentialBucketsPtrOutput) NumFiniteBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MetricBucketOptionsExponentialBuckets) *int {
		if v == nil {
			return nil
		}
		return v.NumFiniteBuckets
	}).(pulumi.IntPtrOutput)
}

// Must be greater than 0.
func (o MetricBucketOptionsExponentialBucketsPtrOutput) Scale() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MetricBucketOptionsExponentialBuckets) *float64 {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(pulumi.Float64PtrOutput)
}

type MetricBucketOptionsLinearBuckets struct {
	// Must be greater than 0.
	NumFiniteBuckets *int `pulumi:"numFiniteBuckets"`
	// Lower bound of the first bucket.
	Offset *float64 `pulumi:"offset"`
	// Must be greater than 0.
	Width *float64 `pulumi:"width"`
}

// MetricBucketOptionsLinearBucketsInput is an input type that accepts MetricBucketOptionsLinearBucketsArgs and MetricBucketOptionsLinearBucketsOutput values.
// You can construct a concrete instance of `MetricBucketOptionsLinearBucketsInput` via:
//
//	MetricBucketOptionsLinearBucketsArgs{...}
type MetricBucketOptionsLinearBucketsInput interface {
	pulumi.Input

	ToMetricBucketOptionsLinearBucketsOutput() MetricBucketOptionsLinearBucketsOutput
	ToMetricBucketOptionsLinearBucketsOutputWithContext(context.Context) MetricBucketOptionsLinearBucketsOutput
}

type MetricBucketOptionsLinearBucketsArgs struct {
	// Must be greater than 0.
	NumFiniteBuckets pulumi.IntPtrInput `pulumi:"numFiniteBuckets"`
	// Lower bound of the first bucket.
	Offset pulumi.Float64PtrInput `pulumi:"offset"`
	// Must be greater than 0.
	Width pulumi.Float64PtrInput `pulumi:"width"`
}

func (MetricBucketOptionsLinearBucketsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricBucketOptionsLinearBuckets)(nil)).Elem()
}

func (i MetricBucketOptionsLinearBucketsArgs) ToMetricBucketOptionsLinearBucketsOutput() MetricBucketOptionsLinearBucketsOutput {
	return i.ToMetricBucketOptionsLinearBucketsOutputWithContext(context.Background())
}

func (i MetricBucketOptionsLinearBucketsArgs) ToMetricBucketOptionsLinearBucketsOutputWithContext(ctx context.Context) MetricBucketOptionsLinearBucketsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsLinearBucketsOutput)
}

func (i MetricBucketOptionsLinearBucketsArgs) ToMetricBucketOptionsLinearBucketsPtrOutput() MetricBucketOptionsLinearBucketsPtrOutput {
	return i.ToMetricBucketOptionsLinearBucketsPtrOutputWithContext(context.Background())
}

func (i MetricBucketOptionsLinearBucketsArgs) ToMetricBucketOptionsLinearBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsLinearBucketsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsLinearBucketsOutput).ToMetricBucketOptionsLinearBucketsPtrOutputWithContext(ctx)
}

// MetricBucketOptionsLinearBucketsPtrInput is an input type that accepts MetricBucketOptionsLinearBucketsArgs, MetricBucketOptionsLinearBucketsPtr and MetricBucketOptionsLinearBucketsPtrOutput values.
// You can construct a concrete instance of `MetricBucketOptionsLinearBucketsPtrInput` via:
//
//	        MetricBucketOptionsLinearBucketsArgs{...}
//
//	or:
//
//	        nil
type MetricBucketOptionsLinearBucketsPtrInput interface {
	pulumi.Input

	ToMetricBucketOptionsLinearBucketsPtrOutput() MetricBucketOptionsLinearBucketsPtrOutput
	ToMetricBucketOptionsLinearBucketsPtrOutputWithContext(context.Context) MetricBucketOptionsLinearBucketsPtrOutput
}

type metricBucketOptionsLinearBucketsPtrType MetricBucketOptionsLinearBucketsArgs

func MetricBucketOptionsLinearBucketsPtr(v *MetricBucketOptionsLinearBucketsArgs) MetricBucketOptionsLinearBucketsPtrInput {
	return (*metricBucketOptionsLinearBucketsPtrType)(v)
}

func (*metricBucketOptionsLinearBucketsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricBucketOptionsLinearBuckets)(nil)).Elem()
}

func (i *metricBucketOptionsLinearBucketsPtrType) ToMetricBucketOptionsLinearBucketsPtrOutput() MetricBucketOptionsLinearBucketsPtrOutput {
	return i.ToMetricBucketOptionsLinearBucketsPtrOutputWithContext(context.Background())
}

func (i *metricBucketOptionsLinearBucketsPtrType) ToMetricBucketOptionsLinearBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsLinearBucketsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricBucketOptionsLinearBucketsPtrOutput)
}

type MetricBucketOptionsLinearBucketsOutput struct{ *pulumi.OutputState }

func (MetricBucketOptionsLinearBucketsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricBucketOptionsLinearBuckets)(nil)).Elem()
}

func (o MetricBucketOptionsLinearBucketsOutput) ToMetricBucketOptionsLinearBucketsOutput() MetricBucketOptionsLinearBucketsOutput {
	return o
}

func (o MetricBucketOptionsLinearBucketsOutput) ToMetricBucketOptionsLinearBucketsOutputWithContext(ctx context.Context) MetricBucketOptionsLinearBucketsOutput {
	return o
}

func (o MetricBucketOptionsLinearBucketsOutput) ToMetricBucketOptionsLinearBucketsPtrOutput() MetricBucketOptionsLinearBucketsPtrOutput {
	return o.ToMetricBucketOptionsLinearBucketsPtrOutputWithContext(context.Background())
}

func (o MetricBucketOptionsLinearBucketsOutput) ToMetricBucketOptionsLinearBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsLinearBucketsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricBucketOptionsLinearBuckets) *MetricBucketOptionsLinearBuckets {
		return &v
	}).(MetricBucketOptionsLinearBucketsPtrOutput)
}

// Must be greater than 0.
func (o MetricBucketOptionsLinearBucketsOutput) NumFiniteBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricBucketOptionsLinearBuckets) *int { return v.NumFiniteBuckets }).(pulumi.IntPtrOutput)
}

// Lower bound of the first bucket.
func (o MetricBucketOptionsLinearBucketsOutput) Offset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MetricBucketOptionsLinearBuckets) *float64 { return v.Offset }).(pulumi.Float64PtrOutput)
}

// Must be greater than 0.
func (o MetricBucketOptionsLinearBucketsOutput) Width() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MetricBucketOptionsLinearBuckets) *float64 { return v.Width }).(pulumi.Float64PtrOutput)
}

type MetricBucketOptionsLinearBucketsPtrOutput struct{ *pulumi.OutputState }

func (MetricBucketOptionsLinearBucketsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricBucketOptionsLinearBuckets)(nil)).Elem()
}

func (o MetricBucketOptionsLinearBucketsPtrOutput) ToMetricBucketOptionsLinearBucketsPtrOutput() MetricBucketOptionsLinearBucketsPtrOutput {
	return o
}

func (o MetricBucketOptionsLinearBucketsPtrOutput) ToMetricBucketOptionsLinearBucketsPtrOutputWithContext(ctx context.Context) MetricBucketOptionsLinearBucketsPtrOutput {
	return o
}

func (o MetricBucketOptionsLinearBucketsPtrOutput) Elem() MetricBucketOptionsLinearBucketsOutput {
	return o.ApplyT(func(v *MetricBucketOptionsLinearBuckets) MetricBucketOptionsLinearBuckets {
		if v != nil {
			return *v
		}
		var ret MetricBucketOptionsLinearBuckets
		return ret
	}).(MetricBucketOptionsLinearBucketsOutput)
}

// Must be greater than 0.
func (o MetricBucketOptionsLinearBucketsPtrOutput) NumFiniteBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MetricBucketOptionsLinearBuckets) *int {
		if v == nil {
			return nil
		}
		return v.NumFiniteBuckets
	}).(pulumi.IntPtrOutput)
}

// Lower bound of the first bucket.
func (o MetricBucketOptionsLinearBucketsPtrOutput) Offset() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MetricBucketOptionsLinearBuckets) *float64 {
		if v == nil {
			return nil
		}
		return v.Offset
	}).(pulumi.Float64PtrOutput)
}

// Must be greater than 0.
func (o MetricBucketOptionsLinearBucketsPtrOutput) Width() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MetricBucketOptionsLinearBuckets) *float64 {
		if v == nil {
			return nil
		}
		return v.Width
	}).(pulumi.Float64PtrOutput)
}

type MetricMetricDescriptor struct {
	// A concise name for the metric, which can be displayed in user interfaces. Use sentence case
	// without an ending period, for example "Request count". This field is optional but it is
	// recommended to be set for any metrics associated with user-visible concepts, such as Quota.
	DisplayName *string `pulumi:"displayName"`
	// The set of labels that can be used to describe a specific instance of this metric type. For
	// example, the appengine.googleapis.com/http/server/response_latencies metric type has a label
	// for the HTTP response code, response_code, so you can look at latencies for successful responses
	// or just for responses that failed.
	// Structure is documented below.
	Labels []MetricMetricDescriptorLabel `pulumi:"labels"`
	// Whether the metric records instantaneous values, changes to a value, etc.
	// Some combinations of metricKind and valueType might not be supported.
	// For counter metrics, set this to DELTA.
	// Possible values are `DELTA`, `GAUGE`, and `CUMULATIVE`.
	MetricKind string `pulumi:"metricKind"`
	// The unit in which the metric value is reported. It is only applicable if the valueType is
	// `INT64`, `DOUBLE`, or `DISTRIBUTION`. The supported units are a subset of
	// [The Unified Code for Units of Measure](http://unitsofmeasure.org/ucum.html) standard
	Unit *string `pulumi:"unit"`
	// Whether the measurement is an integer, a floating-point number, etc.
	// Some combinations of metricKind and valueType might not be supported.
	// For counter metrics, set this to INT64.
	// Possible values are `BOOL`, `INT64`, `DOUBLE`, `STRING`, `DISTRIBUTION`, and `MONEY`.
	ValueType string `pulumi:"valueType"`
}

// MetricMetricDescriptorInput is an input type that accepts MetricMetricDescriptorArgs and MetricMetricDescriptorOutput values.
// You can construct a concrete instance of `MetricMetricDescriptorInput` via:
//
//	MetricMetricDescriptorArgs{...}
type MetricMetricDescriptorInput interface {
	pulumi.Input

	ToMetricMetricDescriptorOutput() MetricMetricDescriptorOutput
	ToMetricMetricDescriptorOutputWithContext(context.Context) MetricMetricDescriptorOutput
}

type MetricMetricDescriptorArgs struct {
	// A concise name for the metric, which can be displayed in user interfaces. Use sentence case
	// without an ending period, for example "Request count". This field is optional but it is
	// recommended to be set for any metrics associated with user-visible concepts, such as Quota.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The set of labels that can be used to describe a specific instance of this metric type. For
	// example, the appengine.googleapis.com/http/server/response_latencies metric type has a label
	// for the HTTP response code, response_code, so you can look at latencies for successful responses
	// or just for responses that failed.
	// Structure is documented below.
	Labels MetricMetricDescriptorLabelArrayInput `pulumi:"labels"`
	// Whether the metric records instantaneous values, changes to a value, etc.
	// Some combinations of metricKind and valueType might not be supported.
	// For counter metrics, set this to DELTA.
	// Possible values are `DELTA`, `GAUGE`, and `CUMULATIVE`.
	MetricKind pulumi.StringInput `pulumi:"metricKind"`
	// The unit in which the metric value is reported. It is only applicable if the valueType is
	// `INT64`, `DOUBLE`, or `DISTRIBUTION`. The supported units are a subset of
	// [The Unified Code for Units of Measure](http://unitsofmeasure.org/ucum.html) standard
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Whether the measurement is an integer, a floating-point number, etc.
	// Some combinations of metricKind and valueType might not be supported.
	// For counter metrics, set this to INT64.
	// Possible values are `BOOL`, `INT64`, `DOUBLE`, `STRING`, `DISTRIBUTION`, and `MONEY`.
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (MetricMetricDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricMetricDescriptor)(nil)).Elem()
}

func (i MetricMetricDescriptorArgs) ToMetricMetricDescriptorOutput() MetricMetricDescriptorOutput {
	return i.ToMetricMetricDescriptorOutputWithContext(context.Background())
}

func (i MetricMetricDescriptorArgs) ToMetricMetricDescriptorOutputWithContext(ctx context.Context) MetricMetricDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricMetricDescriptorOutput)
}

func (i MetricMetricDescriptorArgs) ToMetricMetricDescriptorPtrOutput() MetricMetricDescriptorPtrOutput {
	return i.ToMetricMetricDescriptorPtrOutputWithContext(context.Background())
}

func (i MetricMetricDescriptorArgs) ToMetricMetricDescriptorPtrOutputWithContext(ctx context.Context) MetricMetricDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricMetricDescriptorOutput).ToMetricMetricDescriptorPtrOutputWithContext(ctx)
}

// MetricMetricDescriptorPtrInput is an input type that accepts MetricMetricDescriptorArgs, MetricMetricDescriptorPtr and MetricMetricDescriptorPtrOutput values.
// You can construct a concrete instance of `MetricMetricDescriptorPtrInput` via:
//
//	        MetricMetricDescriptorArgs{...}
//
//	or:
//
//	        nil
type MetricMetricDescriptorPtrInput interface {
	pulumi.Input

	ToMetricMetricDescriptorPtrOutput() MetricMetricDescriptorPtrOutput
	ToMetricMetricDescriptorPtrOutputWithContext(context.Context) MetricMetricDescriptorPtrOutput
}

type metricMetricDescriptorPtrType MetricMetricDescriptorArgs

func MetricMetricDescriptorPtr(v *MetricMetricDescriptorArgs) MetricMetricDescriptorPtrInput {
	return (*metricMetricDescriptorPtrType)(v)
}

func (*metricMetricDescriptorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricMetricDescriptor)(nil)).Elem()
}

func (i *metricMetricDescriptorPtrType) ToMetricMetricDescriptorPtrOutput() MetricMetricDescriptorPtrOutput {
	return i.ToMetricMetricDescriptorPtrOutputWithContext(context.Background())
}

func (i *metricMetricDescriptorPtrType) ToMetricMetricDescriptorPtrOutputWithContext(ctx context.Context) MetricMetricDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricMetricDescriptorPtrOutput)
}

type MetricMetricDescriptorOutput struct{ *pulumi.OutputState }

func (MetricMetricDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricMetricDescriptor)(nil)).Elem()
}

func (o MetricMetricDescriptorOutput) ToMetricMetricDescriptorOutput() MetricMetricDescriptorOutput {
	return o
}

func (o MetricMetricDescriptorOutput) ToMetricMetricDescriptorOutputWithContext(ctx context.Context) MetricMetricDescriptorOutput {
	return o
}

func (o MetricMetricDescriptorOutput) ToMetricMetricDescriptorPtrOutput() MetricMetricDescriptorPtrOutput {
	return o.ToMetricMetricDescriptorPtrOutputWithContext(context.Background())
}

func (o MetricMetricDescriptorOutput) ToMetricMetricDescriptorPtrOutputWithContext(ctx context.Context) MetricMetricDescriptorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricMetricDescriptor) *MetricMetricDescriptor {
		return &v
	}).(MetricMetricDescriptorPtrOutput)
}

// A concise name for the metric, which can be displayed in user interfaces. Use sentence case
// without an ending period, for example "Request count". This field is optional but it is
// recommended to be set for any metrics associated with user-visible concepts, such as Quota.
func (o MetricMetricDescriptorOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricMetricDescriptor) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The set of labels that can be used to describe a specific instance of this metric type. For
// example, the appengine.googleapis.com/http/server/response_latencies metric type has a label
// for the HTTP response code, response_code, so you can look at latencies for successful responses
// or just for responses that failed.
// Structure is documented below.
func (o MetricMetricDescriptorOutput) Labels() MetricMetricDescriptorLabelArrayOutput {
	return o.ApplyT(func(v MetricMetricDescriptor) []MetricMetricDescriptorLabel { return v.Labels }).(MetricMetricDescriptorLabelArrayOutput)
}

// Whether the metric records instantaneous values, changes to a value, etc.
// Some combinations of metricKind and valueType might not be supported.
// For counter metrics, set this to DELTA.
// Possible values are `DELTA`, `GAUGE`, and `CUMULATIVE`.
func (o MetricMetricDescriptorOutput) MetricKind() pulumi.StringOutput {
	return o.ApplyT(func(v MetricMetricDescriptor) string { return v.MetricKind }).(pulumi.StringOutput)
}

// The unit in which the metric value is reported. It is only applicable if the valueType is
// `INT64`, `DOUBLE`, or `DISTRIBUTION`. The supported units are a subset of
// [The Unified Code for Units of Measure](http://unitsofmeasure.org/ucum.html) standard
func (o MetricMetricDescriptorOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricMetricDescriptor) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Whether the measurement is an integer, a floating-point number, etc.
// Some combinations of metricKind and valueType might not be supported.
// For counter metrics, set this to INT64.
// Possible values are `BOOL`, `INT64`, `DOUBLE`, `STRING`, `DISTRIBUTION`, and `MONEY`.
func (o MetricMetricDescriptorOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v MetricMetricDescriptor) string { return v.ValueType }).(pulumi.StringOutput)
}

type MetricMetricDescriptorPtrOutput struct{ *pulumi.OutputState }

func (MetricMetricDescriptorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricMetricDescriptor)(nil)).Elem()
}

func (o MetricMetricDescriptorPtrOutput) ToMetricMetricDescriptorPtrOutput() MetricMetricDescriptorPtrOutput {
	return o
}

func (o MetricMetricDescriptorPtrOutput) ToMetricMetricDescriptorPtrOutputWithContext(ctx context.Context) MetricMetricDescriptorPtrOutput {
	return o
}

func (o MetricMetricDescriptorPtrOutput) Elem() MetricMetricDescriptorOutput {
	return o.ApplyT(func(v *MetricMetricDescriptor) MetricMetricDescriptor {
		if v != nil {
			return *v
		}
		var ret MetricMetricDescriptor
		return ret
	}).(MetricMetricDescriptorOutput)
}

// A concise name for the metric, which can be displayed in user interfaces. Use sentence case
// without an ending period, for example "Request count". This field is optional but it is
// recommended to be set for any metrics associated with user-visible concepts, such as Quota.
func (o MetricMetricDescriptorPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricMetricDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The set of labels that can be used to describe a specific instance of this metric type. For
// example, the appengine.googleapis.com/http/server/response_latencies metric type has a label
// for the HTTP response code, response_code, so you can look at latencies for successful responses
// or just for responses that failed.
// Structure is documented below.
func (o MetricMetricDescriptorPtrOutput) Labels() MetricMetricDescriptorLabelArrayOutput {
	return o.ApplyT(func(v *MetricMetricDescriptor) []MetricMetricDescriptorLabel {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(MetricMetricDescriptorLabelArrayOutput)
}

// Whether the metric records instantaneous values, changes to a value, etc.
// Some combinations of metricKind and valueType might not be supported.
// For counter metrics, set this to DELTA.
// Possible values are `DELTA`, `GAUGE`, and `CUMULATIVE`.
func (o MetricMetricDescriptorPtrOutput) MetricKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricMetricDescriptor) *string {
		if v == nil {
			return nil
		}
		return &v.MetricKind
	}).(pulumi.StringPtrOutput)
}

// The unit in which the metric value is reported. It is only applicable if the valueType is
// `INT64`, `DOUBLE`, or `DISTRIBUTION`. The supported units are a subset of
// [The Unified Code for Units of Measure](http://unitsofmeasure.org/ucum.html) standard
func (o MetricMetricDescriptorPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricMetricDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// Whether the measurement is an integer, a floating-point number, etc.
// Some combinations of metricKind and valueType might not be supported.
// For counter metrics, set this to INT64.
// Possible values are `BOOL`, `INT64`, `DOUBLE`, `STRING`, `DISTRIBUTION`, and `MONEY`.
func (o MetricMetricDescriptorPtrOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricMetricDescriptor) *string {
		if v == nil {
			return nil
		}
		return &v.ValueType
	}).(pulumi.StringPtrOutput)
}

type MetricMetricDescriptorLabel struct {
	// A human-readable description for the label.
	Description *string `pulumi:"description"`
	// The label key.
	Key string `pulumi:"key"`
	// The type of data that can be assigned to the label.
	// Default value is `STRING`.
	// Possible values are `BOOL`, `INT64`, and `STRING`.
	ValueType *string `pulumi:"valueType"`
}

// MetricMetricDescriptorLabelInput is an input type that accepts MetricMetricDescriptorLabelArgs and MetricMetricDescriptorLabelOutput values.
// You can construct a concrete instance of `MetricMetricDescriptorLabelInput` via:
//
//	MetricMetricDescriptorLabelArgs{...}
type MetricMetricDescriptorLabelInput interface {
	pulumi.Input

	ToMetricMetricDescriptorLabelOutput() MetricMetricDescriptorLabelOutput
	ToMetricMetricDescriptorLabelOutputWithContext(context.Context) MetricMetricDescriptorLabelOutput
}

type MetricMetricDescriptorLabelArgs struct {
	// A human-readable description for the label.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The label key.
	Key pulumi.StringInput `pulumi:"key"`
	// The type of data that can be assigned to the label.
	// Default value is `STRING`.
	// Possible values are `BOOL`, `INT64`, and `STRING`.
	ValueType pulumi.StringPtrInput `pulumi:"valueType"`
}

func (MetricMetricDescriptorLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricMetricDescriptorLabel)(nil)).Elem()
}

func (i MetricMetricDescriptorLabelArgs) ToMetricMetricDescriptorLabelOutput() MetricMetricDescriptorLabelOutput {
	return i.ToMetricMetricDescriptorLabelOutputWithContext(context.Background())
}

func (i MetricMetricDescriptorLabelArgs) ToMetricMetricDescriptorLabelOutputWithContext(ctx context.Context) MetricMetricDescriptorLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricMetricDescriptorLabelOutput)
}

// MetricMetricDescriptorLabelArrayInput is an input type that accepts MetricMetricDescriptorLabelArray and MetricMetricDescriptorLabelArrayOutput values.
// You can construct a concrete instance of `MetricMetricDescriptorLabelArrayInput` via:
//
//	MetricMetricDescriptorLabelArray{ MetricMetricDescriptorLabelArgs{...} }
type MetricMetricDescriptorLabelArrayInput interface {
	pulumi.Input

	ToMetricMetricDescriptorLabelArrayOutput() MetricMetricDescriptorLabelArrayOutput
	ToMetricMetricDescriptorLabelArrayOutputWithContext(context.Context) MetricMetricDescriptorLabelArrayOutput
}

type MetricMetricDescriptorLabelArray []MetricMetricDescriptorLabelInput

func (MetricMetricDescriptorLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricMetricDescriptorLabel)(nil)).Elem()
}

func (i MetricMetricDescriptorLabelArray) ToMetricMetricDescriptorLabelArrayOutput() MetricMetricDescriptorLabelArrayOutput {
	return i.ToMetricMetricDescriptorLabelArrayOutputWithContext(context.Background())
}

func (i MetricMetricDescriptorLabelArray) ToMetricMetricDescriptorLabelArrayOutputWithContext(ctx context.Context) MetricMetricDescriptorLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricMetricDescriptorLabelArrayOutput)
}

type MetricMetricDescriptorLabelOutput struct{ *pulumi.OutputState }

func (MetricMetricDescriptorLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricMetricDescriptorLabel)(nil)).Elem()
}

func (o MetricMetricDescriptorLabelOutput) ToMetricMetricDescriptorLabelOutput() MetricMetricDescriptorLabelOutput {
	return o
}

func (o MetricMetricDescriptorLabelOutput) ToMetricMetricDescriptorLabelOutputWithContext(ctx context.Context) MetricMetricDescriptorLabelOutput {
	return o
}

// A human-readable description for the label.
func (o MetricMetricDescriptorLabelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricMetricDescriptorLabel) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The label key.
func (o MetricMetricDescriptorLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MetricMetricDescriptorLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The type of data that can be assigned to the label.
// Default value is `STRING`.
// Possible values are `BOOL`, `INT64`, and `STRING`.
func (o MetricMetricDescriptorLabelOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricMetricDescriptorLabel) *string { return v.ValueType }).(pulumi.StringPtrOutput)
}

type MetricMetricDescriptorLabelArrayOutput struct{ *pulumi.OutputState }

func (MetricMetricDescriptorLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricMetricDescriptorLabel)(nil)).Elem()
}

func (o MetricMetricDescriptorLabelArrayOutput) ToMetricMetricDescriptorLabelArrayOutput() MetricMetricDescriptorLabelArrayOutput {
	return o
}

func (o MetricMetricDescriptorLabelArrayOutput) ToMetricMetricDescriptorLabelArrayOutputWithContext(ctx context.Context) MetricMetricDescriptorLabelArrayOutput {
	return o
}

func (o MetricMetricDescriptorLabelArrayOutput) Index(i pulumi.IntInput) MetricMetricDescriptorLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricMetricDescriptorLabel {
		return vs[0].([]MetricMetricDescriptorLabel)[vs[1].(int)]
	}).(MetricMetricDescriptorLabelOutput)
}

type OrganizationBucketConfigCmekSettings struct {
	KmsKeyName        string  `pulumi:"kmsKeyName"`
	KmsKeyVersionName *string `pulumi:"kmsKeyVersionName"`
	// The resource name of the bucket. For example: "organizations/my-organization-id/locations/my-location/buckets/my-bucket-id"
	Name             *string `pulumi:"name"`
	ServiceAccountId *string `pulumi:"serviceAccountId"`
}

// OrganizationBucketConfigCmekSettingsInput is an input type that accepts OrganizationBucketConfigCmekSettingsArgs and OrganizationBucketConfigCmekSettingsOutput values.
// You can construct a concrete instance of `OrganizationBucketConfigCmekSettingsInput` via:
//
//	OrganizationBucketConfigCmekSettingsArgs{...}
type OrganizationBucketConfigCmekSettingsInput interface {
	pulumi.Input

	ToOrganizationBucketConfigCmekSettingsOutput() OrganizationBucketConfigCmekSettingsOutput
	ToOrganizationBucketConfigCmekSettingsOutputWithContext(context.Context) OrganizationBucketConfigCmekSettingsOutput
}

type OrganizationBucketConfigCmekSettingsArgs struct {
	KmsKeyName        pulumi.StringInput    `pulumi:"kmsKeyName"`
	KmsKeyVersionName pulumi.StringPtrInput `pulumi:"kmsKeyVersionName"`
	// The resource name of the bucket. For example: "organizations/my-organization-id/locations/my-location/buckets/my-bucket-id"
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ServiceAccountId pulumi.StringPtrInput `pulumi:"serviceAccountId"`
}

func (OrganizationBucketConfigCmekSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationBucketConfigCmekSettings)(nil)).Elem()
}

func (i OrganizationBucketConfigCmekSettingsArgs) ToOrganizationBucketConfigCmekSettingsOutput() OrganizationBucketConfigCmekSettingsOutput {
	return i.ToOrganizationBucketConfigCmekSettingsOutputWithContext(context.Background())
}

func (i OrganizationBucketConfigCmekSettingsArgs) ToOrganizationBucketConfigCmekSettingsOutputWithContext(ctx context.Context) OrganizationBucketConfigCmekSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBucketConfigCmekSettingsOutput)
}

func (i OrganizationBucketConfigCmekSettingsArgs) ToOrganizationBucketConfigCmekSettingsPtrOutput() OrganizationBucketConfigCmekSettingsPtrOutput {
	return i.ToOrganizationBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (i OrganizationBucketConfigCmekSettingsArgs) ToOrganizationBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) OrganizationBucketConfigCmekSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBucketConfigCmekSettingsOutput).ToOrganizationBucketConfigCmekSettingsPtrOutputWithContext(ctx)
}

// OrganizationBucketConfigCmekSettingsPtrInput is an input type that accepts OrganizationBucketConfigCmekSettingsArgs, OrganizationBucketConfigCmekSettingsPtr and OrganizationBucketConfigCmekSettingsPtrOutput values.
// You can construct a concrete instance of `OrganizationBucketConfigCmekSettingsPtrInput` via:
//
//	        OrganizationBucketConfigCmekSettingsArgs{...}
//
//	or:
//
//	        nil
type OrganizationBucketConfigCmekSettingsPtrInput interface {
	pulumi.Input

	ToOrganizationBucketConfigCmekSettingsPtrOutput() OrganizationBucketConfigCmekSettingsPtrOutput
	ToOrganizationBucketConfigCmekSettingsPtrOutputWithContext(context.Context) OrganizationBucketConfigCmekSettingsPtrOutput
}

type organizationBucketConfigCmekSettingsPtrType OrganizationBucketConfigCmekSettingsArgs

func OrganizationBucketConfigCmekSettingsPtr(v *OrganizationBucketConfigCmekSettingsArgs) OrganizationBucketConfigCmekSettingsPtrInput {
	return (*organizationBucketConfigCmekSettingsPtrType)(v)
}

func (*organizationBucketConfigCmekSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationBucketConfigCmekSettings)(nil)).Elem()
}

func (i *organizationBucketConfigCmekSettingsPtrType) ToOrganizationBucketConfigCmekSettingsPtrOutput() OrganizationBucketConfigCmekSettingsPtrOutput {
	return i.ToOrganizationBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (i *organizationBucketConfigCmekSettingsPtrType) ToOrganizationBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) OrganizationBucketConfigCmekSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBucketConfigCmekSettingsPtrOutput)
}

type OrganizationBucketConfigCmekSettingsOutput struct{ *pulumi.OutputState }

func (OrganizationBucketConfigCmekSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationBucketConfigCmekSettings)(nil)).Elem()
}

func (o OrganizationBucketConfigCmekSettingsOutput) ToOrganizationBucketConfigCmekSettingsOutput() OrganizationBucketConfigCmekSettingsOutput {
	return o
}

func (o OrganizationBucketConfigCmekSettingsOutput) ToOrganizationBucketConfigCmekSettingsOutputWithContext(ctx context.Context) OrganizationBucketConfigCmekSettingsOutput {
	return o
}

func (o OrganizationBucketConfigCmekSettingsOutput) ToOrganizationBucketConfigCmekSettingsPtrOutput() OrganizationBucketConfigCmekSettingsPtrOutput {
	return o.ToOrganizationBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (o OrganizationBucketConfigCmekSettingsOutput) ToOrganizationBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) OrganizationBucketConfigCmekSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationBucketConfigCmekSettings) *OrganizationBucketConfigCmekSettings {
		return &v
	}).(OrganizationBucketConfigCmekSettingsPtrOutput)
}

func (o OrganizationBucketConfigCmekSettingsOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationBucketConfigCmekSettings) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

func (o OrganizationBucketConfigCmekSettingsOutput) KmsKeyVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationBucketConfigCmekSettings) *string { return v.KmsKeyVersionName }).(pulumi.StringPtrOutput)
}

// The resource name of the bucket. For example: "organizations/my-organization-id/locations/my-location/buckets/my-bucket-id"
func (o OrganizationBucketConfigCmekSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationBucketConfigCmekSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o OrganizationBucketConfigCmekSettingsOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationBucketConfigCmekSettings) *string { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

type OrganizationBucketConfigCmekSettingsPtrOutput struct{ *pulumi.OutputState }

func (OrganizationBucketConfigCmekSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationBucketConfigCmekSettings)(nil)).Elem()
}

func (o OrganizationBucketConfigCmekSettingsPtrOutput) ToOrganizationBucketConfigCmekSettingsPtrOutput() OrganizationBucketConfigCmekSettingsPtrOutput {
	return o
}

func (o OrganizationBucketConfigCmekSettingsPtrOutput) ToOrganizationBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) OrganizationBucketConfigCmekSettingsPtrOutput {
	return o
}

func (o OrganizationBucketConfigCmekSettingsPtrOutput) Elem() OrganizationBucketConfigCmekSettingsOutput {
	return o.ApplyT(func(v *OrganizationBucketConfigCmekSettings) OrganizationBucketConfigCmekSettings {
		if v != nil {
			return *v
		}
		var ret OrganizationBucketConfigCmekSettings
		return ret
	}).(OrganizationBucketConfigCmekSettingsOutput)
}

func (o OrganizationBucketConfigCmekSettingsPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationBucketConfigCmekSettingsPtrOutput) KmsKeyVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyVersionName
	}).(pulumi.StringPtrOutput)
}

// The resource name of the bucket. For example: "organizations/my-organization-id/locations/my-location/buckets/my-bucket-id"
func (o OrganizationBucketConfigCmekSettingsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationBucketConfigCmekSettingsPtrOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountId
	}).(pulumi.StringPtrOutput)
}

type OrganizationSinkBigqueryOptions struct {
	// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
	// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
	// tables the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
	// has to be used instead. In both cases, tables are sharded based on UTC timezone.
	UsePartitionedTables bool `pulumi:"usePartitionedTables"`
}

// OrganizationSinkBigqueryOptionsInput is an input type that accepts OrganizationSinkBigqueryOptionsArgs and OrganizationSinkBigqueryOptionsOutput values.
// You can construct a concrete instance of `OrganizationSinkBigqueryOptionsInput` via:
//
//	OrganizationSinkBigqueryOptionsArgs{...}
type OrganizationSinkBigqueryOptionsInput interface {
	pulumi.Input

	ToOrganizationSinkBigqueryOptionsOutput() OrganizationSinkBigqueryOptionsOutput
	ToOrganizationSinkBigqueryOptionsOutputWithContext(context.Context) OrganizationSinkBigqueryOptionsOutput
}

type OrganizationSinkBigqueryOptionsArgs struct {
	// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
	// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
	// tables the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
	// has to be used instead. In both cases, tables are sharded based on UTC timezone.
	UsePartitionedTables pulumi.BoolInput `pulumi:"usePartitionedTables"`
}

func (OrganizationSinkBigqueryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSinkBigqueryOptions)(nil)).Elem()
}

func (i OrganizationSinkBigqueryOptionsArgs) ToOrganizationSinkBigqueryOptionsOutput() OrganizationSinkBigqueryOptionsOutput {
	return i.ToOrganizationSinkBigqueryOptionsOutputWithContext(context.Background())
}

func (i OrganizationSinkBigqueryOptionsArgs) ToOrganizationSinkBigqueryOptionsOutputWithContext(ctx context.Context) OrganizationSinkBigqueryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSinkBigqueryOptionsOutput)
}

func (i OrganizationSinkBigqueryOptionsArgs) ToOrganizationSinkBigqueryOptionsPtrOutput() OrganizationSinkBigqueryOptionsPtrOutput {
	return i.ToOrganizationSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (i OrganizationSinkBigqueryOptionsArgs) ToOrganizationSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) OrganizationSinkBigqueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSinkBigqueryOptionsOutput).ToOrganizationSinkBigqueryOptionsPtrOutputWithContext(ctx)
}

// OrganizationSinkBigqueryOptionsPtrInput is an input type that accepts OrganizationSinkBigqueryOptionsArgs, OrganizationSinkBigqueryOptionsPtr and OrganizationSinkBigqueryOptionsPtrOutput values.
// You can construct a concrete instance of `OrganizationSinkBigqueryOptionsPtrInput` via:
//
//	        OrganizationSinkBigqueryOptionsArgs{...}
//
//	or:
//
//	        nil
type OrganizationSinkBigqueryOptionsPtrInput interface {
	pulumi.Input

	ToOrganizationSinkBigqueryOptionsPtrOutput() OrganizationSinkBigqueryOptionsPtrOutput
	ToOrganizationSinkBigqueryOptionsPtrOutputWithContext(context.Context) OrganizationSinkBigqueryOptionsPtrOutput
}

type organizationSinkBigqueryOptionsPtrType OrganizationSinkBigqueryOptionsArgs

func OrganizationSinkBigqueryOptionsPtr(v *OrganizationSinkBigqueryOptionsArgs) OrganizationSinkBigqueryOptionsPtrInput {
	return (*organizationSinkBigqueryOptionsPtrType)(v)
}

func (*organizationSinkBigqueryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSinkBigqueryOptions)(nil)).Elem()
}

func (i *organizationSinkBigqueryOptionsPtrType) ToOrganizationSinkBigqueryOptionsPtrOutput() OrganizationSinkBigqueryOptionsPtrOutput {
	return i.ToOrganizationSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (i *organizationSinkBigqueryOptionsPtrType) ToOrganizationSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) OrganizationSinkBigqueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSinkBigqueryOptionsPtrOutput)
}

type OrganizationSinkBigqueryOptionsOutput struct{ *pulumi.OutputState }

func (OrganizationSinkBigqueryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSinkBigqueryOptions)(nil)).Elem()
}

func (o OrganizationSinkBigqueryOptionsOutput) ToOrganizationSinkBigqueryOptionsOutput() OrganizationSinkBigqueryOptionsOutput {
	return o
}

func (o OrganizationSinkBigqueryOptionsOutput) ToOrganizationSinkBigqueryOptionsOutputWithContext(ctx context.Context) OrganizationSinkBigqueryOptionsOutput {
	return o
}

func (o OrganizationSinkBigqueryOptionsOutput) ToOrganizationSinkBigqueryOptionsPtrOutput() OrganizationSinkBigqueryOptionsPtrOutput {
	return o.ToOrganizationSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (o OrganizationSinkBigqueryOptionsOutput) ToOrganizationSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) OrganizationSinkBigqueryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationSinkBigqueryOptions) *OrganizationSinkBigqueryOptions {
		return &v
	}).(OrganizationSinkBigqueryOptionsPtrOutput)
}

// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
// tables the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
// has to be used instead. In both cases, tables are sharded based on UTC timezone.
func (o OrganizationSinkBigqueryOptionsOutput) UsePartitionedTables() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationSinkBigqueryOptions) bool { return v.UsePartitionedTables }).(pulumi.BoolOutput)
}

type OrganizationSinkBigqueryOptionsPtrOutput struct{ *pulumi.OutputState }

func (OrganizationSinkBigqueryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSinkBigqueryOptions)(nil)).Elem()
}

func (o OrganizationSinkBigqueryOptionsPtrOutput) ToOrganizationSinkBigqueryOptionsPtrOutput() OrganizationSinkBigqueryOptionsPtrOutput {
	return o
}

func (o OrganizationSinkBigqueryOptionsPtrOutput) ToOrganizationSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) OrganizationSinkBigqueryOptionsPtrOutput {
	return o
}

func (o OrganizationSinkBigqueryOptionsPtrOutput) Elem() OrganizationSinkBigqueryOptionsOutput {
	return o.ApplyT(func(v *OrganizationSinkBigqueryOptions) OrganizationSinkBigqueryOptions {
		if v != nil {
			return *v
		}
		var ret OrganizationSinkBigqueryOptions
		return ret
	}).(OrganizationSinkBigqueryOptionsOutput)
}

// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
// By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
// tables the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
// has to be used instead. In both cases, tables are sharded based on UTC timezone.
func (o OrganizationSinkBigqueryOptionsPtrOutput) UsePartitionedTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationSinkBigqueryOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.UsePartitionedTables
	}).(pulumi.BoolPtrOutput)
}

type OrganizationSinkExclusion struct {
	// A description of this exclusion.
	Description *string `pulumi:"description"`
	// If set to True, then this exclusion is disabled and it does not exclude any log entries.
	Disabled *bool `pulumi:"disabled"`
	// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
	// write a filter.
	Filter string `pulumi:"filter"`
	// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name string `pulumi:"name"`
}

// OrganizationSinkExclusionInput is an input type that accepts OrganizationSinkExclusionArgs and OrganizationSinkExclusionOutput values.
// You can construct a concrete instance of `OrganizationSinkExclusionInput` via:
//
//	OrganizationSinkExclusionArgs{...}
type OrganizationSinkExclusionInput interface {
	pulumi.Input

	ToOrganizationSinkExclusionOutput() OrganizationSinkExclusionOutput
	ToOrganizationSinkExclusionOutputWithContext(context.Context) OrganizationSinkExclusionOutput
}

type OrganizationSinkExclusionArgs struct {
	// A description of this exclusion.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If set to True, then this exclusion is disabled and it does not exclude any log entries.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
	// write a filter.
	Filter pulumi.StringInput `pulumi:"filter"`
	// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OrganizationSinkExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSinkExclusion)(nil)).Elem()
}

func (i OrganizationSinkExclusionArgs) ToOrganizationSinkExclusionOutput() OrganizationSinkExclusionOutput {
	return i.ToOrganizationSinkExclusionOutputWithContext(context.Background())
}

func (i OrganizationSinkExclusionArgs) ToOrganizationSinkExclusionOutputWithContext(ctx context.Context) OrganizationSinkExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSinkExclusionOutput)
}

// OrganizationSinkExclusionArrayInput is an input type that accepts OrganizationSinkExclusionArray and OrganizationSinkExclusionArrayOutput values.
// You can construct a concrete instance of `OrganizationSinkExclusionArrayInput` via:
//
//	OrganizationSinkExclusionArray{ OrganizationSinkExclusionArgs{...} }
type OrganizationSinkExclusionArrayInput interface {
	pulumi.Input

	ToOrganizationSinkExclusionArrayOutput() OrganizationSinkExclusionArrayOutput
	ToOrganizationSinkExclusionArrayOutputWithContext(context.Context) OrganizationSinkExclusionArrayOutput
}

type OrganizationSinkExclusionArray []OrganizationSinkExclusionInput

func (OrganizationSinkExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationSinkExclusion)(nil)).Elem()
}

func (i OrganizationSinkExclusionArray) ToOrganizationSinkExclusionArrayOutput() OrganizationSinkExclusionArrayOutput {
	return i.ToOrganizationSinkExclusionArrayOutputWithContext(context.Background())
}

func (i OrganizationSinkExclusionArray) ToOrganizationSinkExclusionArrayOutputWithContext(ctx context.Context) OrganizationSinkExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSinkExclusionArrayOutput)
}

type OrganizationSinkExclusionOutput struct{ *pulumi.OutputState }

func (OrganizationSinkExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSinkExclusion)(nil)).Elem()
}

func (o OrganizationSinkExclusionOutput) ToOrganizationSinkExclusionOutput() OrganizationSinkExclusionOutput {
	return o
}

func (o OrganizationSinkExclusionOutput) ToOrganizationSinkExclusionOutputWithContext(ctx context.Context) OrganizationSinkExclusionOutput {
	return o
}

// A description of this exclusion.
func (o OrganizationSinkExclusionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationSinkExclusion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If set to True, then this exclusion is disabled and it does not exclude any log entries.
func (o OrganizationSinkExclusionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationSinkExclusion) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
// write a filter.
func (o OrganizationSinkExclusionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationSinkExclusion) string { return v.Filter }).(pulumi.StringOutput)
}

// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
func (o OrganizationSinkExclusionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationSinkExclusion) string { return v.Name }).(pulumi.StringOutput)
}

type OrganizationSinkExclusionArrayOutput struct{ *pulumi.OutputState }

func (OrganizationSinkExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationSinkExclusion)(nil)).Elem()
}

func (o OrganizationSinkExclusionArrayOutput) ToOrganizationSinkExclusionArrayOutput() OrganizationSinkExclusionArrayOutput {
	return o
}

func (o OrganizationSinkExclusionArrayOutput) ToOrganizationSinkExclusionArrayOutputWithContext(ctx context.Context) OrganizationSinkExclusionArrayOutput {
	return o
}

func (o OrganizationSinkExclusionArrayOutput) Index(i pulumi.IntInput) OrganizationSinkExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationSinkExclusion {
		return vs[0].([]OrganizationSinkExclusion)[vs[1].(int)]
	}).(OrganizationSinkExclusionOutput)
}

type ProjectBucketConfigCmekSettings struct {
	// The resource name for the configured Cloud KMS key.
	// KMS key name format:
	// `'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]'`
	// To enable CMEK for the bucket, set this field to a valid kmsKeyName for which the associated service account has the required cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.
	// The Cloud KMS key used by the bucket can be updated by changing the kmsKeyName to a new valid key name. Encryption operations that are in progress will be completed with the key that was in use when they started. Decryption operations will be completed using the key that was used at the time of encryption unless access to that key has been revoked.
	// See [Enabling CMEK for Logging Buckets](https://cloud.google.com/logging/docs/routing/managed-encryption-storage) for more information.
	KmsKeyName string `pulumi:"kmsKeyName"`
	// The CryptoKeyVersion resource name for the configured Cloud KMS key.
	// KMS key name format:
	// `'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[VERSION]'`
	// For example:
	// "projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key/cryptoKeyVersions/1"
	// This is a read-only field used to convey the specific configured CryptoKeyVersion of kmsKey that has been configured. It will be populated in cases where the CMEK settings are bound to a single key version.
	KmsKeyVersionName *string `pulumi:"kmsKeyVersionName"`
	// The resource name of the CMEK settings.
	Name *string `pulumi:"name"`
	// The service account associated with a project for which CMEK will apply.
	// Before enabling CMEK for a logging bucket, you must first assign the cloudkms.cryptoKeyEncrypterDecrypter role to the service account associated with the project for which CMEK will apply. Use [v2.getCmekSettings](https://cloud.google.com/logging/docs/reference/v2/rest/v2/TopLevel/getCmekSettings#google.logging.v2.ConfigServiceV2.GetCmekSettings) to obtain the service account ID.
	// See [Enabling CMEK for Logging Buckets](https://cloud.google.com/logging/docs/routing/managed-encryption-storage) for more information.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
}

// ProjectBucketConfigCmekSettingsInput is an input type that accepts ProjectBucketConfigCmekSettingsArgs and ProjectBucketConfigCmekSettingsOutput values.
// You can construct a concrete instance of `ProjectBucketConfigCmekSettingsInput` via:
//
//	ProjectBucketConfigCmekSettingsArgs{...}
type ProjectBucketConfigCmekSettingsInput interface {
	pulumi.Input

	ToProjectBucketConfigCmekSettingsOutput() ProjectBucketConfigCmekSettingsOutput
	ToProjectBucketConfigCmekSettingsOutputWithContext(context.Context) ProjectBucketConfigCmekSettingsOutput
}

type ProjectBucketConfigCmekSettingsArgs struct {
	// The resource name for the configured Cloud KMS key.
	// KMS key name format:
	// `'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]'`
	// To enable CMEK for the bucket, set this field to a valid kmsKeyName for which the associated service account has the required cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.
	// The Cloud KMS key used by the bucket can be updated by changing the kmsKeyName to a new valid key name. Encryption operations that are in progress will be completed with the key that was in use when they started. Decryption operations will be completed using the key that was used at the time of encryption unless access to that key has been revoked.
	// See [Enabling CMEK for Logging Buckets](https://cloud.google.com/logging/docs/routing/managed-encryption-storage) for more information.
	KmsKeyName pulumi.StringInput `pulumi:"kmsKeyName"`
	// The CryptoKeyVersion resource name for the configured Cloud KMS key.
	// KMS key name format:
	// `'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[VERSION]'`
	// For example:
	// "projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key/cryptoKeyVersions/1"
	// This is a read-only field used to convey the specific configured CryptoKeyVersion of kmsKey that has been configured. It will be populated in cases where the CMEK settings are bound to a single key version.
	KmsKeyVersionName pulumi.StringPtrInput `pulumi:"kmsKeyVersionName"`
	// The resource name of the CMEK settings.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The service account associated with a project for which CMEK will apply.
	// Before enabling CMEK for a logging bucket, you must first assign the cloudkms.cryptoKeyEncrypterDecrypter role to the service account associated with the project for which CMEK will apply. Use [v2.getCmekSettings](https://cloud.google.com/logging/docs/reference/v2/rest/v2/TopLevel/getCmekSettings#google.logging.v2.ConfigServiceV2.GetCmekSettings) to obtain the service account ID.
	// See [Enabling CMEK for Logging Buckets](https://cloud.google.com/logging/docs/routing/managed-encryption-storage) for more information.
	ServiceAccountId pulumi.StringPtrInput `pulumi:"serviceAccountId"`
}

func (ProjectBucketConfigCmekSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBucketConfigCmekSettings)(nil)).Elem()
}

func (i ProjectBucketConfigCmekSettingsArgs) ToProjectBucketConfigCmekSettingsOutput() ProjectBucketConfigCmekSettingsOutput {
	return i.ToProjectBucketConfigCmekSettingsOutputWithContext(context.Background())
}

func (i ProjectBucketConfigCmekSettingsArgs) ToProjectBucketConfigCmekSettingsOutputWithContext(ctx context.Context) ProjectBucketConfigCmekSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBucketConfigCmekSettingsOutput)
}

func (i ProjectBucketConfigCmekSettingsArgs) ToProjectBucketConfigCmekSettingsPtrOutput() ProjectBucketConfigCmekSettingsPtrOutput {
	return i.ToProjectBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (i ProjectBucketConfigCmekSettingsArgs) ToProjectBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) ProjectBucketConfigCmekSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBucketConfigCmekSettingsOutput).ToProjectBucketConfigCmekSettingsPtrOutputWithContext(ctx)
}

// ProjectBucketConfigCmekSettingsPtrInput is an input type that accepts ProjectBucketConfigCmekSettingsArgs, ProjectBucketConfigCmekSettingsPtr and ProjectBucketConfigCmekSettingsPtrOutput values.
// You can construct a concrete instance of `ProjectBucketConfigCmekSettingsPtrInput` via:
//
//	        ProjectBucketConfigCmekSettingsArgs{...}
//
//	or:
//
//	        nil
type ProjectBucketConfigCmekSettingsPtrInput interface {
	pulumi.Input

	ToProjectBucketConfigCmekSettingsPtrOutput() ProjectBucketConfigCmekSettingsPtrOutput
	ToProjectBucketConfigCmekSettingsPtrOutputWithContext(context.Context) ProjectBucketConfigCmekSettingsPtrOutput
}

type projectBucketConfigCmekSettingsPtrType ProjectBucketConfigCmekSettingsArgs

func ProjectBucketConfigCmekSettingsPtr(v *ProjectBucketConfigCmekSettingsArgs) ProjectBucketConfigCmekSettingsPtrInput {
	return (*projectBucketConfigCmekSettingsPtrType)(v)
}

func (*projectBucketConfigCmekSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBucketConfigCmekSettings)(nil)).Elem()
}

func (i *projectBucketConfigCmekSettingsPtrType) ToProjectBucketConfigCmekSettingsPtrOutput() ProjectBucketConfigCmekSettingsPtrOutput {
	return i.ToProjectBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (i *projectBucketConfigCmekSettingsPtrType) ToProjectBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) ProjectBucketConfigCmekSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBucketConfigCmekSettingsPtrOutput)
}

type ProjectBucketConfigCmekSettingsOutput struct{ *pulumi.OutputState }

func (ProjectBucketConfigCmekSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBucketConfigCmekSettings)(nil)).Elem()
}

func (o ProjectBucketConfigCmekSettingsOutput) ToProjectBucketConfigCmekSettingsOutput() ProjectBucketConfigCmekSettingsOutput {
	return o
}

func (o ProjectBucketConfigCmekSettingsOutput) ToProjectBucketConfigCmekSettingsOutputWithContext(ctx context.Context) ProjectBucketConfigCmekSettingsOutput {
	return o
}

func (o ProjectBucketConfigCmekSettingsOutput) ToProjectBucketConfigCmekSettingsPtrOutput() ProjectBucketConfigCmekSettingsPtrOutput {
	return o.ToProjectBucketConfigCmekSettingsPtrOutputWithContext(context.Background())
}

func (o ProjectBucketConfigCmekSettingsOutput) ToProjectBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) ProjectBucketConfigCmekSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectBucketConfigCmekSettings) *ProjectBucketConfigCmekSettings {
		return &v
	}).(ProjectBucketConfigCmekSettingsPtrOutput)
}

// The resource name for the configured Cloud KMS key.
// KMS key name format:
// `'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]'`
// To enable CMEK for the bucket, set this field to a valid kmsKeyName for which the associated service account has the required cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.
// The Cloud KMS key used by the bucket can be updated by changing the kmsKeyName to a new valid key name. Encryption operations that are in progress will be completed with the key that was in use when they started. Decryption operations will be completed using the key that was used at the time of encryption unless access to that key has been revoked.
// See [Enabling CMEK for Logging Buckets](https://cloud.google.com/logging/docs/routing/managed-encryption-storage) for more information.
func (o ProjectBucketConfigCmekSettingsOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectBucketConfigCmekSettings) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

// The CryptoKeyVersion resource name for the configured Cloud KMS key.
// KMS key name format:
// `'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[VERSION]'`
// For example:
// "projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key/cryptoKeyVersions/1"
// This is a read-only field used to convey the specific configured CryptoKeyVersion of kmsKey that has been configured. It will be populated in cases where the CMEK settings are bound to a single key version.
func (o ProjectBucketConfigCmekSettingsOutput) KmsKeyVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBucketConfigCmekSettings) *string { return v.KmsKeyVersionName }).(pulumi.StringPtrOutput)
}

// The resource name of the CMEK settings.
func (o ProjectBucketConfigCmekSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBucketConfigCmekSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The service account associated with a project for which CMEK will apply.
// Before enabling CMEK for a logging bucket, you must first assign the cloudkms.cryptoKeyEncrypterDecrypter role to the service account associated with the project for which CMEK will apply. Use [v2.getCmekSettings](https://cloud.google.com/logging/docs/reference/v2/rest/v2/TopLevel/getCmekSettings#google.logging.v2.ConfigServiceV2.GetCmekSettings) to obtain the service account ID.
// See [Enabling CMEK for Logging Buckets](https://cloud.google.com/logging/docs/routing/managed-encryption-storage) for more information.
func (o ProjectBucketConfigCmekSettingsOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBucketConfigCmekSettings) *string { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

type ProjectBucketConfigCmekSettingsPtrOutput struct{ *pulumi.OutputState }

func (ProjectBucketConfigCmekSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBucketConfigCmekSettings)(nil)).Elem()
}

func (o ProjectBucketConfigCmekSettingsPtrOutput) ToProjectBucketConfigCmekSettingsPtrOutput() ProjectBucketConfigCmekSettingsPtrOutput {
	return o
}

func (o ProjectBucketConfigCmekSettingsPtrOutput) ToProjectBucketConfigCmekSettingsPtrOutputWithContext(ctx context.Context) ProjectBucketConfigCmekSettingsPtrOutput {
	return o
}

func (o ProjectBucketConfigCmekSettingsPtrOutput) Elem() ProjectBucketConfigCmekSettingsOutput {
	return o.ApplyT(func(v *ProjectBucketConfigCmekSettings) ProjectBucketConfigCmekSettings {
		if v != nil {
			return *v
		}
		var ret ProjectBucketConfigCmekSettings
		return ret
	}).(ProjectBucketConfigCmekSettingsOutput)
}

// The resource name for the configured Cloud KMS key.
// KMS key name format:
// `'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]'`
// To enable CMEK for the bucket, set this field to a valid kmsKeyName for which the associated service account has the required cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.
// The Cloud KMS key used by the bucket can be updated by changing the kmsKeyName to a new valid key name. Encryption operations that are in progress will be completed with the key that was in use when they started. Decryption operations will be completed using the key that was used at the time of encryption unless access to that key has been revoked.
// See [Enabling CMEK for Logging Buckets](https://cloud.google.com/logging/docs/routing/managed-encryption-storage) for more information.
func (o ProjectBucketConfigCmekSettingsPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

// The CryptoKeyVersion resource name for the configured Cloud KMS key.
// KMS key name format:
// `'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[VERSION]'`
// For example:
// "projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key/cryptoKeyVersions/1"
// This is a read-only field used to convey the specific configured CryptoKeyVersion of kmsKey that has been configured. It will be populated in cases where the CMEK settings are bound to a single key version.
func (o ProjectBucketConfigCmekSettingsPtrOutput) KmsKeyVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyVersionName
	}).(pulumi.StringPtrOutput)
}

// The resource name of the CMEK settings.
func (o ProjectBucketConfigCmekSettingsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The service account associated with a project for which CMEK will apply.
// Before enabling CMEK for a logging bucket, you must first assign the cloudkms.cryptoKeyEncrypterDecrypter role to the service account associated with the project for which CMEK will apply. Use [v2.getCmekSettings](https://cloud.google.com/logging/docs/reference/v2/rest/v2/TopLevel/getCmekSettings#google.logging.v2.ConfigServiceV2.GetCmekSettings) to obtain the service account ID.
// See [Enabling CMEK for Logging Buckets](https://cloud.google.com/logging/docs/routing/managed-encryption-storage) for more information.
func (o ProjectBucketConfigCmekSettingsPtrOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBucketConfigCmekSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountId
	}).(pulumi.StringPtrOutput)
}

type ProjectSinkBigqueryOptions struct {
	// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
	// By default, Logging creates dated tables based on the log entries' timestamps, e.g. `syslog20170523`. With partitioned
	// tables the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
	// has to be used instead. In both cases, tables are sharded based on UTC timezone.
	UsePartitionedTables bool `pulumi:"usePartitionedTables"`
}

// ProjectSinkBigqueryOptionsInput is an input type that accepts ProjectSinkBigqueryOptionsArgs and ProjectSinkBigqueryOptionsOutput values.
// You can construct a concrete instance of `ProjectSinkBigqueryOptionsInput` via:
//
//	ProjectSinkBigqueryOptionsArgs{...}
type ProjectSinkBigqueryOptionsInput interface {
	pulumi.Input

	ToProjectSinkBigqueryOptionsOutput() ProjectSinkBigqueryOptionsOutput
	ToProjectSinkBigqueryOptionsOutputWithContext(context.Context) ProjectSinkBigqueryOptionsOutput
}

type ProjectSinkBigqueryOptionsArgs struct {
	// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
	// By default, Logging creates dated tables based on the log entries' timestamps, e.g. `syslog20170523`. With partitioned
	// tables the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
	// has to be used instead. In both cases, tables are sharded based on UTC timezone.
	UsePartitionedTables pulumi.BoolInput `pulumi:"usePartitionedTables"`
}

func (ProjectSinkBigqueryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSinkBigqueryOptions)(nil)).Elem()
}

func (i ProjectSinkBigqueryOptionsArgs) ToProjectSinkBigqueryOptionsOutput() ProjectSinkBigqueryOptionsOutput {
	return i.ToProjectSinkBigqueryOptionsOutputWithContext(context.Background())
}

func (i ProjectSinkBigqueryOptionsArgs) ToProjectSinkBigqueryOptionsOutputWithContext(ctx context.Context) ProjectSinkBigqueryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSinkBigqueryOptionsOutput)
}

func (i ProjectSinkBigqueryOptionsArgs) ToProjectSinkBigqueryOptionsPtrOutput() ProjectSinkBigqueryOptionsPtrOutput {
	return i.ToProjectSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (i ProjectSinkBigqueryOptionsArgs) ToProjectSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) ProjectSinkBigqueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSinkBigqueryOptionsOutput).ToProjectSinkBigqueryOptionsPtrOutputWithContext(ctx)
}

// ProjectSinkBigqueryOptionsPtrInput is an input type that accepts ProjectSinkBigqueryOptionsArgs, ProjectSinkBigqueryOptionsPtr and ProjectSinkBigqueryOptionsPtrOutput values.
// You can construct a concrete instance of `ProjectSinkBigqueryOptionsPtrInput` via:
//
//	        ProjectSinkBigqueryOptionsArgs{...}
//
//	or:
//
//	        nil
type ProjectSinkBigqueryOptionsPtrInput interface {
	pulumi.Input

	ToProjectSinkBigqueryOptionsPtrOutput() ProjectSinkBigqueryOptionsPtrOutput
	ToProjectSinkBigqueryOptionsPtrOutputWithContext(context.Context) ProjectSinkBigqueryOptionsPtrOutput
}

type projectSinkBigqueryOptionsPtrType ProjectSinkBigqueryOptionsArgs

func ProjectSinkBigqueryOptionsPtr(v *ProjectSinkBigqueryOptionsArgs) ProjectSinkBigqueryOptionsPtrInput {
	return (*projectSinkBigqueryOptionsPtrType)(v)
}

func (*projectSinkBigqueryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSinkBigqueryOptions)(nil)).Elem()
}

func (i *projectSinkBigqueryOptionsPtrType) ToProjectSinkBigqueryOptionsPtrOutput() ProjectSinkBigqueryOptionsPtrOutput {
	return i.ToProjectSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (i *projectSinkBigqueryOptionsPtrType) ToProjectSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) ProjectSinkBigqueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSinkBigqueryOptionsPtrOutput)
}

type ProjectSinkBigqueryOptionsOutput struct{ *pulumi.OutputState }

func (ProjectSinkBigqueryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSinkBigqueryOptions)(nil)).Elem()
}

func (o ProjectSinkBigqueryOptionsOutput) ToProjectSinkBigqueryOptionsOutput() ProjectSinkBigqueryOptionsOutput {
	return o
}

func (o ProjectSinkBigqueryOptionsOutput) ToProjectSinkBigqueryOptionsOutputWithContext(ctx context.Context) ProjectSinkBigqueryOptionsOutput {
	return o
}

func (o ProjectSinkBigqueryOptionsOutput) ToProjectSinkBigqueryOptionsPtrOutput() ProjectSinkBigqueryOptionsPtrOutput {
	return o.ToProjectSinkBigqueryOptionsPtrOutputWithContext(context.Background())
}

func (o ProjectSinkBigqueryOptionsOutput) ToProjectSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) ProjectSinkBigqueryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSinkBigqueryOptions) *ProjectSinkBigqueryOptions {
		return &v
	}).(ProjectSinkBigqueryOptionsPtrOutput)
}

// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
// By default, Logging creates dated tables based on the log entries' timestamps, e.g. `syslog20170523`. With partitioned
// tables the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
// has to be used instead. In both cases, tables are sharded based on UTC timezone.
func (o ProjectSinkBigqueryOptionsOutput) UsePartitionedTables() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectSinkBigqueryOptions) bool { return v.UsePartitionedTables }).(pulumi.BoolOutput)
}

type ProjectSinkBigqueryOptionsPtrOutput struct{ *pulumi.OutputState }

func (ProjectSinkBigqueryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSinkBigqueryOptions)(nil)).Elem()
}

func (o ProjectSinkBigqueryOptionsPtrOutput) ToProjectSinkBigqueryOptionsPtrOutput() ProjectSinkBigqueryOptionsPtrOutput {
	return o
}

func (o ProjectSinkBigqueryOptionsPtrOutput) ToProjectSinkBigqueryOptionsPtrOutputWithContext(ctx context.Context) ProjectSinkBigqueryOptionsPtrOutput {
	return o
}

func (o ProjectSinkBigqueryOptionsPtrOutput) Elem() ProjectSinkBigqueryOptionsOutput {
	return o.ApplyT(func(v *ProjectSinkBigqueryOptions) ProjectSinkBigqueryOptions {
		if v != nil {
			return *v
		}
		var ret ProjectSinkBigqueryOptions
		return ret
	}).(ProjectSinkBigqueryOptionsOutput)
}

// Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).
// By default, Logging creates dated tables based on the log entries' timestamps, e.g. `syslog20170523`. With partitioned
// tables the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
// has to be used instead. In both cases, tables are sharded based on UTC timezone.
func (o ProjectSinkBigqueryOptionsPtrOutput) UsePartitionedTables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSinkBigqueryOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.UsePartitionedTables
	}).(pulumi.BoolPtrOutput)
}

type ProjectSinkExclusion struct {
	// A description of this exclusion.
	Description *string `pulumi:"description"`
	// If set to True, then this exclusion is disabled and it does not exclude any log entries.
	Disabled *bool `pulumi:"disabled"`
	// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
	// write a filter.
	Filter string `pulumi:"filter"`
	// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name string `pulumi:"name"`
}

// ProjectSinkExclusionInput is an input type that accepts ProjectSinkExclusionArgs and ProjectSinkExclusionOutput values.
// You can construct a concrete instance of `ProjectSinkExclusionInput` via:
//
//	ProjectSinkExclusionArgs{...}
type ProjectSinkExclusionInput interface {
	pulumi.Input

	ToProjectSinkExclusionOutput() ProjectSinkExclusionOutput
	ToProjectSinkExclusionOutputWithContext(context.Context) ProjectSinkExclusionOutput
}

type ProjectSinkExclusionArgs struct {
	// A description of this exclusion.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If set to True, then this exclusion is disabled and it does not exclude any log entries.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
	// write a filter.
	Filter pulumi.StringInput `pulumi:"filter"`
	// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ProjectSinkExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSinkExclusion)(nil)).Elem()
}

func (i ProjectSinkExclusionArgs) ToProjectSinkExclusionOutput() ProjectSinkExclusionOutput {
	return i.ToProjectSinkExclusionOutputWithContext(context.Background())
}

func (i ProjectSinkExclusionArgs) ToProjectSinkExclusionOutputWithContext(ctx context.Context) ProjectSinkExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSinkExclusionOutput)
}

// ProjectSinkExclusionArrayInput is an input type that accepts ProjectSinkExclusionArray and ProjectSinkExclusionArrayOutput values.
// You can construct a concrete instance of `ProjectSinkExclusionArrayInput` via:
//
//	ProjectSinkExclusionArray{ ProjectSinkExclusionArgs{...} }
type ProjectSinkExclusionArrayInput interface {
	pulumi.Input

	ToProjectSinkExclusionArrayOutput() ProjectSinkExclusionArrayOutput
	ToProjectSinkExclusionArrayOutputWithContext(context.Context) ProjectSinkExclusionArrayOutput
}

type ProjectSinkExclusionArray []ProjectSinkExclusionInput

func (ProjectSinkExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSinkExclusion)(nil)).Elem()
}

func (i ProjectSinkExclusionArray) ToProjectSinkExclusionArrayOutput() ProjectSinkExclusionArrayOutput {
	return i.ToProjectSinkExclusionArrayOutputWithContext(context.Background())
}

func (i ProjectSinkExclusionArray) ToProjectSinkExclusionArrayOutputWithContext(ctx context.Context) ProjectSinkExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSinkExclusionArrayOutput)
}

type ProjectSinkExclusionOutput struct{ *pulumi.OutputState }

func (ProjectSinkExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSinkExclusion)(nil)).Elem()
}

func (o ProjectSinkExclusionOutput) ToProjectSinkExclusionOutput() ProjectSinkExclusionOutput {
	return o
}

func (o ProjectSinkExclusionOutput) ToProjectSinkExclusionOutputWithContext(ctx context.Context) ProjectSinkExclusionOutput {
	return o
}

// A description of this exclusion.
func (o ProjectSinkExclusionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSinkExclusion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If set to True, then this exclusion is disabled and it does not exclude any log entries.
func (o ProjectSinkExclusionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSinkExclusion) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to
// write a filter.
func (o ProjectSinkExclusionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSinkExclusion) string { return v.Filter }).(pulumi.StringOutput)
}

// A client-assigned identifier, such as `load-balancer-exclusion`. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
func (o ProjectSinkExclusionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSinkExclusion) string { return v.Name }).(pulumi.StringOutput)
}

type ProjectSinkExclusionArrayOutput struct{ *pulumi.OutputState }

func (ProjectSinkExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSinkExclusion)(nil)).Elem()
}

func (o ProjectSinkExclusionArrayOutput) ToProjectSinkExclusionArrayOutput() ProjectSinkExclusionArrayOutput {
	return o
}

func (o ProjectSinkExclusionArrayOutput) ToProjectSinkExclusionArrayOutputWithContext(ctx context.Context) ProjectSinkExclusionArrayOutput {
	return o
}

func (o ProjectSinkExclusionArrayOutput) Index(i pulumi.IntInput) ProjectSinkExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSinkExclusion {
		return vs[0].([]ProjectSinkExclusion)[vs[1].(int)]
	}).(ProjectSinkExclusionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BillingAccountBucketConfigCmekSettingsInput)(nil)).Elem(), BillingAccountBucketConfigCmekSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingAccountBucketConfigCmekSettingsPtrInput)(nil)).Elem(), BillingAccountBucketConfigCmekSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingAccountSinkBigqueryOptionsInput)(nil)).Elem(), BillingAccountSinkBigqueryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingAccountSinkBigqueryOptionsPtrInput)(nil)).Elem(), BillingAccountSinkBigqueryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingAccountSinkExclusionInput)(nil)).Elem(), BillingAccountSinkExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingAccountSinkExclusionArrayInput)(nil)).Elem(), BillingAccountSinkExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderBucketConfigCmekSettingsInput)(nil)).Elem(), FolderBucketConfigCmekSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderBucketConfigCmekSettingsPtrInput)(nil)).Elem(), FolderBucketConfigCmekSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderSinkBigqueryOptionsInput)(nil)).Elem(), FolderSinkBigqueryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderSinkBigqueryOptionsPtrInput)(nil)).Elem(), FolderSinkBigqueryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderSinkExclusionInput)(nil)).Elem(), FolderSinkExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderSinkExclusionArrayInput)(nil)).Elem(), FolderSinkExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricBucketOptionsInput)(nil)).Elem(), MetricBucketOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricBucketOptionsPtrInput)(nil)).Elem(), MetricBucketOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricBucketOptionsExplicitBucketsInput)(nil)).Elem(), MetricBucketOptionsExplicitBucketsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricBucketOptionsExplicitBucketsPtrInput)(nil)).Elem(), MetricBucketOptionsExplicitBucketsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricBucketOptionsExponentialBucketsInput)(nil)).Elem(), MetricBucketOptionsExponentialBucketsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricBucketOptionsExponentialBucketsPtrInput)(nil)).Elem(), MetricBucketOptionsExponentialBucketsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricBucketOptionsLinearBucketsInput)(nil)).Elem(), MetricBucketOptionsLinearBucketsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricBucketOptionsLinearBucketsPtrInput)(nil)).Elem(), MetricBucketOptionsLinearBucketsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricMetricDescriptorInput)(nil)).Elem(), MetricMetricDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricMetricDescriptorPtrInput)(nil)).Elem(), MetricMetricDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricMetricDescriptorLabelInput)(nil)).Elem(), MetricMetricDescriptorLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricMetricDescriptorLabelArrayInput)(nil)).Elem(), MetricMetricDescriptorLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationBucketConfigCmekSettingsInput)(nil)).Elem(), OrganizationBucketConfigCmekSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationBucketConfigCmekSettingsPtrInput)(nil)).Elem(), OrganizationBucketConfigCmekSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSinkBigqueryOptionsInput)(nil)).Elem(), OrganizationSinkBigqueryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSinkBigqueryOptionsPtrInput)(nil)).Elem(), OrganizationSinkBigqueryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSinkExclusionInput)(nil)).Elem(), OrganizationSinkExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSinkExclusionArrayInput)(nil)).Elem(), OrganizationSinkExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBucketConfigCmekSettingsInput)(nil)).Elem(), ProjectBucketConfigCmekSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBucketConfigCmekSettingsPtrInput)(nil)).Elem(), ProjectBucketConfigCmekSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSinkBigqueryOptionsInput)(nil)).Elem(), ProjectSinkBigqueryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSinkBigqueryOptionsPtrInput)(nil)).Elem(), ProjectSinkBigqueryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSinkExclusionInput)(nil)).Elem(), ProjectSinkExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSinkExclusionArrayInput)(nil)).Elem(), ProjectSinkExclusionArray{})
	pulumi.RegisterOutputType(BillingAccountBucketConfigCmekSettingsOutput{})
	pulumi.RegisterOutputType(BillingAccountBucketConfigCmekSettingsPtrOutput{})
	pulumi.RegisterOutputType(BillingAccountSinkBigqueryOptionsOutput{})
	pulumi.RegisterOutputType(BillingAccountSinkBigqueryOptionsPtrOutput{})
	pulumi.RegisterOutputType(BillingAccountSinkExclusionOutput{})
	pulumi.RegisterOutputType(BillingAccountSinkExclusionArrayOutput{})
	pulumi.RegisterOutputType(FolderBucketConfigCmekSettingsOutput{})
	pulumi.RegisterOutputType(FolderBucketConfigCmekSettingsPtrOutput{})
	pulumi.RegisterOutputType(FolderSinkBigqueryOptionsOutput{})
	pulumi.RegisterOutputType(FolderSinkBigqueryOptionsPtrOutput{})
	pulumi.RegisterOutputType(FolderSinkExclusionOutput{})
	pulumi.RegisterOutputType(FolderSinkExclusionArrayOutput{})
	pulumi.RegisterOutputType(MetricBucketOptionsOutput{})
	pulumi.RegisterOutputType(MetricBucketOptionsPtrOutput{})
	pulumi.RegisterOutputType(MetricBucketOptionsExplicitBucketsOutput{})
	pulumi.RegisterOutputType(MetricBucketOptionsExplicitBucketsPtrOutput{})
	pulumi.RegisterOutputType(MetricBucketOptionsExponentialBucketsOutput{})
	pulumi.RegisterOutputType(MetricBucketOptionsExponentialBucketsPtrOutput{})
	pulumi.RegisterOutputType(MetricBucketOptionsLinearBucketsOutput{})
	pulumi.RegisterOutputType(MetricBucketOptionsLinearBucketsPtrOutput{})
	pulumi.RegisterOutputType(MetricMetricDescriptorOutput{})
	pulumi.RegisterOutputType(MetricMetricDescriptorPtrOutput{})
	pulumi.RegisterOutputType(MetricMetricDescriptorLabelOutput{})
	pulumi.RegisterOutputType(MetricMetricDescriptorLabelArrayOutput{})
	pulumi.RegisterOutputType(OrganizationBucketConfigCmekSettingsOutput{})
	pulumi.RegisterOutputType(OrganizationBucketConfigCmekSettingsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationSinkBigqueryOptionsOutput{})
	pulumi.RegisterOutputType(OrganizationSinkBigqueryOptionsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationSinkExclusionOutput{})
	pulumi.RegisterOutputType(OrganizationSinkExclusionArrayOutput{})
	pulumi.RegisterOutputType(ProjectBucketConfigCmekSettingsOutput{})
	pulumi.RegisterOutputType(ProjectBucketConfigCmekSettingsPtrOutput{})
	pulumi.RegisterOutputType(ProjectSinkBigqueryOptionsOutput{})
	pulumi.RegisterOutputType(ProjectSinkBigqueryOptionsPtrOutput{})
	pulumi.RegisterOutputType(ProjectSinkExclusionOutput{})
	pulumi.RegisterOutputType(ProjectSinkExclusionArrayOutput{})
}
