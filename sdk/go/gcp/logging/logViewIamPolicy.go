// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// For all import syntaxes, the "resource in question" can take any of the following forms:
//
// * {{parent}}/locations/{{location}}/buckets/{{bucket}}/views/{{name}}
//
// * {{name}}
//
// Any variables not passed in the import command will be taken from the provider configuration.
//
// Cloud (Stackdriver) Logging logview IAM resources can be imported using the resource identifiers, role, and member.
//
// IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
//
// ```sh
// $ pulumi import gcp:logging/logViewIamPolicy:LogViewIamPolicy editor "{{parent}}/locations/{{location}}/buckets/{{bucket}}/views/{{log_view}} roles/logging.admin user:jane@example.com"
// ```
//
// IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
//
// ```sh
// $ pulumi import gcp:logging/logViewIamPolicy:LogViewIamPolicy editor "{{parent}}/locations/{{location}}/buckets/{{bucket}}/views/{{log_view}} roles/logging.admin"
// ```
//
// IAM policy imports use the identifier of the resource in question, e.g.
//
// ```sh
// $ pulumi import gcp:logging/logViewIamPolicy:LogViewIamPolicy editor {{parent}}/locations/{{location}}/buckets/{{bucket}}/views/{{log_view}}
// ```
//
// -> **Custom Roles**: If you're importing a IAM resource with a custom role, make sure to use the
//
//	full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.
type LogViewIamPolicy struct {
	pulumi.CustomResourceState

	// The bucket of the resource Used to find the parent resource to bind the IAM policy to
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The location of the resource. The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringOutput `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringOutput `pulumi:"name"`
	// The parent of the resource. Used to find the parent resource to bind the IAM policy to
	Parent pulumi.StringOutput `pulumi:"parent"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
}

// NewLogViewIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewLogViewIamPolicy(ctx *pulumi.Context,
	name string, args *LogViewIamPolicyArgs, opts ...pulumi.ResourceOption) (*LogViewIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogViewIamPolicy
	err := ctx.RegisterResource("gcp:logging/logViewIamPolicy:LogViewIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogViewIamPolicy gets an existing LogViewIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogViewIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogViewIamPolicyState, opts ...pulumi.ResourceOption) (*LogViewIamPolicy, error) {
	var resource LogViewIamPolicy
	err := ctx.ReadResource("gcp:logging/logViewIamPolicy:LogViewIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogViewIamPolicy resources.
type logViewIamPolicyState struct {
	// The bucket of the resource Used to find the parent resource to bind the IAM policy to
	Bucket *string `pulumi:"bucket"`
	// (Computed) The etag of the IAM policy.
	Etag *string `pulumi:"etag"`
	// The location of the resource. The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name *string `pulumi:"name"`
	// The parent of the resource. Used to find the parent resource to bind the IAM policy to
	Parent *string `pulumi:"parent"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData *string `pulumi:"policyData"`
}

type LogViewIamPolicyState struct {
	// The bucket of the resource Used to find the parent resource to bind the IAM policy to
	Bucket pulumi.StringPtrInput
	// (Computed) The etag of the IAM policy.
	Etag pulumi.StringPtrInput
	// The location of the resource. The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringPtrInput
	// The parent of the resource. Used to find the parent resource to bind the IAM policy to
	Parent pulumi.StringPtrInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringPtrInput
}

func (LogViewIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*logViewIamPolicyState)(nil)).Elem()
}

type logViewIamPolicyArgs struct {
	// The bucket of the resource Used to find the parent resource to bind the IAM policy to
	Bucket string `pulumi:"bucket"`
	// The location of the resource. The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location *string `pulumi:"location"`
	// Used to find the parent resource to bind the IAM policy to
	Name *string `pulumi:"name"`
	// The parent of the resource. Used to find the parent resource to bind the IAM policy to
	Parent string `pulumi:"parent"`
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
}

// The set of arguments for constructing a LogViewIamPolicy resource.
type LogViewIamPolicyArgs struct {
	// The bucket of the resource Used to find the parent resource to bind the IAM policy to
	Bucket pulumi.StringInput
	// The location of the resource. The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1. Used to find the parent resource to bind the IAM policy to. If not specified,
	// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
	// location is specified, it is taken from the provider configuration.
	Location pulumi.StringPtrInput
	// Used to find the parent resource to bind the IAM policy to
	Name pulumi.StringPtrInput
	// The parent of the resource. Used to find the parent resource to bind the IAM policy to
	Parent pulumi.StringInput
	// The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData pulumi.StringInput
}

func (LogViewIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logViewIamPolicyArgs)(nil)).Elem()
}

type LogViewIamPolicyInput interface {
	pulumi.Input

	ToLogViewIamPolicyOutput() LogViewIamPolicyOutput
	ToLogViewIamPolicyOutputWithContext(ctx context.Context) LogViewIamPolicyOutput
}

func (*LogViewIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**LogViewIamPolicy)(nil)).Elem()
}

func (i *LogViewIamPolicy) ToLogViewIamPolicyOutput() LogViewIamPolicyOutput {
	return i.ToLogViewIamPolicyOutputWithContext(context.Background())
}

func (i *LogViewIamPolicy) ToLogViewIamPolicyOutputWithContext(ctx context.Context) LogViewIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogViewIamPolicyOutput)
}

// LogViewIamPolicyArrayInput is an input type that accepts LogViewIamPolicyArray and LogViewIamPolicyArrayOutput values.
// You can construct a concrete instance of `LogViewIamPolicyArrayInput` via:
//
//	LogViewIamPolicyArray{ LogViewIamPolicyArgs{...} }
type LogViewIamPolicyArrayInput interface {
	pulumi.Input

	ToLogViewIamPolicyArrayOutput() LogViewIamPolicyArrayOutput
	ToLogViewIamPolicyArrayOutputWithContext(context.Context) LogViewIamPolicyArrayOutput
}

type LogViewIamPolicyArray []LogViewIamPolicyInput

func (LogViewIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogViewIamPolicy)(nil)).Elem()
}

func (i LogViewIamPolicyArray) ToLogViewIamPolicyArrayOutput() LogViewIamPolicyArrayOutput {
	return i.ToLogViewIamPolicyArrayOutputWithContext(context.Background())
}

func (i LogViewIamPolicyArray) ToLogViewIamPolicyArrayOutputWithContext(ctx context.Context) LogViewIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogViewIamPolicyArrayOutput)
}

// LogViewIamPolicyMapInput is an input type that accepts LogViewIamPolicyMap and LogViewIamPolicyMapOutput values.
// You can construct a concrete instance of `LogViewIamPolicyMapInput` via:
//
//	LogViewIamPolicyMap{ "key": LogViewIamPolicyArgs{...} }
type LogViewIamPolicyMapInput interface {
	pulumi.Input

	ToLogViewIamPolicyMapOutput() LogViewIamPolicyMapOutput
	ToLogViewIamPolicyMapOutputWithContext(context.Context) LogViewIamPolicyMapOutput
}

type LogViewIamPolicyMap map[string]LogViewIamPolicyInput

func (LogViewIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogViewIamPolicy)(nil)).Elem()
}

func (i LogViewIamPolicyMap) ToLogViewIamPolicyMapOutput() LogViewIamPolicyMapOutput {
	return i.ToLogViewIamPolicyMapOutputWithContext(context.Background())
}

func (i LogViewIamPolicyMap) ToLogViewIamPolicyMapOutputWithContext(ctx context.Context) LogViewIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogViewIamPolicyMapOutput)
}

type LogViewIamPolicyOutput struct{ *pulumi.OutputState }

func (LogViewIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogViewIamPolicy)(nil)).Elem()
}

func (o LogViewIamPolicyOutput) ToLogViewIamPolicyOutput() LogViewIamPolicyOutput {
	return o
}

func (o LogViewIamPolicyOutput) ToLogViewIamPolicyOutputWithContext(ctx context.Context) LogViewIamPolicyOutput {
	return o
}

// The bucket of the resource Used to find the parent resource to bind the IAM policy to
func (o LogViewIamPolicyOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *LogViewIamPolicy) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// (Computed) The etag of the IAM policy.
func (o LogViewIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *LogViewIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The location of the resource. The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1. Used to find the parent resource to bind the IAM policy to. If not specified,
// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
// location is specified, it is taken from the provider configuration.
func (o LogViewIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LogViewIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Used to find the parent resource to bind the IAM policy to
func (o LogViewIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LogViewIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parent of the resource. Used to find the parent resource to bind the IAM policy to
func (o LogViewIamPolicyOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *LogViewIamPolicy) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LogViewIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *LogViewIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

type LogViewIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (LogViewIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogViewIamPolicy)(nil)).Elem()
}

func (o LogViewIamPolicyArrayOutput) ToLogViewIamPolicyArrayOutput() LogViewIamPolicyArrayOutput {
	return o
}

func (o LogViewIamPolicyArrayOutput) ToLogViewIamPolicyArrayOutputWithContext(ctx context.Context) LogViewIamPolicyArrayOutput {
	return o
}

func (o LogViewIamPolicyArrayOutput) Index(i pulumi.IntInput) LogViewIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogViewIamPolicy {
		return vs[0].([]*LogViewIamPolicy)[vs[1].(int)]
	}).(LogViewIamPolicyOutput)
}

type LogViewIamPolicyMapOutput struct{ *pulumi.OutputState }

func (LogViewIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogViewIamPolicy)(nil)).Elem()
}

func (o LogViewIamPolicyMapOutput) ToLogViewIamPolicyMapOutput() LogViewIamPolicyMapOutput {
	return o
}

func (o LogViewIamPolicyMapOutput) ToLogViewIamPolicyMapOutputWithContext(ctx context.Context) LogViewIamPolicyMapOutput {
	return o
}

func (o LogViewIamPolicyMapOutput) MapIndex(k pulumi.StringInput) LogViewIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogViewIamPolicy {
		return vs[0].(map[string]*LogViewIamPolicy)[vs[1].(string)]
	}).(LogViewIamPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogViewIamPolicyInput)(nil)).Elem(), &LogViewIamPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogViewIamPolicyArrayInput)(nil)).Elem(), LogViewIamPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogViewIamPolicyMapInput)(nil)).Elem(), LogViewIamPolicyMap{})
	pulumi.RegisterOutputType(LogViewIamPolicyOutput{})
	pulumi.RegisterOutputType(LogViewIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(LogViewIamPolicyMapOutput{})
}
