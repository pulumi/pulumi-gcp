// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a project, folder, organization or billing account logging sink details.
// To get more information about Service, see:
//
// [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/sinks)
//
// ## Example Usage
// ### Retrieve Project Logging Sink Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/logging"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := logging.GetSink(ctx, &logging.GetSinkArgs{
//				Id: "projects/0123456789/sinks/my-sink-name",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSink(ctx *pulumi.Context, args *GetSinkArgs, opts ...pulumi.InvokeOption) (*GetSinkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSinkResult
	err := ctx.Invoke("gcp:logging/getSink:getSink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSink.
type GetSinkArgs struct {
	// The identifier for the resource.
	// Examples:
	//
	// - `projects/[PROJECT_ID]/sinks/[SINK_NAME]`
	// - `organizations/[ORGANIZATION_ID]/sinks/[SINK_NAME]`
	// -  `billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_NAME]`
	// - `folders/[FOLDER_ID]/sinks/[SINK_NAME]`
	Id string `pulumi:"id"`
}

// A collection of values returned by getSink.
type GetSinkResult struct {
	// Options that affect sinks exporting data to BigQuery. Structure is documented below.
	BigqueryOptions []GetSinkBigqueryOption `pulumi:"bigqueryOptions"`
	// A description of this exclusion.
	Description string `pulumi:"description"`
	// The destination of the sink (or, in other words, where logs are written to).
	Destination string `pulumi:"destination"`
	// Whether this exclusion is disabled and it does not exclude any log entries.
	Disabled bool `pulumi:"disabled"`
	// Log entries that match any of the exclusion filters are not exported. Structure is documented below.
	Exclusions []GetSinkExclusion `pulumi:"exclusions"`
	// An advanced logs filter that matches the log entries to be excluded.
	Filter string `pulumi:"filter"`
	Id     string `pulumi:"id"`
	// A client-assigned identifier, such as `load-balancer-exclusion`.
	Name string `pulumi:"name"`
	// The identity associated with this sink. This identity must be granted write access to the configured `destination`.
	WriterIdentity string `pulumi:"writerIdentity"`
}

func GetSinkOutput(ctx *pulumi.Context, args GetSinkOutputArgs, opts ...pulumi.InvokeOption) GetSinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSinkResult, error) {
			args := v.(GetSinkArgs)
			r, err := GetSink(ctx, &args, opts...)
			var s GetSinkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSinkResultOutput)
}

// A collection of arguments for invoking getSink.
type GetSinkOutputArgs struct {
	// The identifier for the resource.
	// Examples:
	//
	// - `projects/[PROJECT_ID]/sinks/[SINK_NAME]`
	// - `organizations/[ORGANIZATION_ID]/sinks/[SINK_NAME]`
	// -  `billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_NAME]`
	// - `folders/[FOLDER_ID]/sinks/[SINK_NAME]`
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSinkArgs)(nil)).Elem()
}

// A collection of values returned by getSink.
type GetSinkResultOutput struct{ *pulumi.OutputState }

func (GetSinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSinkResult)(nil)).Elem()
}

func (o GetSinkResultOutput) ToGetSinkResultOutput() GetSinkResultOutput {
	return o
}

func (o GetSinkResultOutput) ToGetSinkResultOutputWithContext(ctx context.Context) GetSinkResultOutput {
	return o
}

// Options that affect sinks exporting data to BigQuery. Structure is documented below.
func (o GetSinkResultOutput) BigqueryOptions() GetSinkBigqueryOptionArrayOutput {
	return o.ApplyT(func(v GetSinkResult) []GetSinkBigqueryOption { return v.BigqueryOptions }).(GetSinkBigqueryOptionArrayOutput)
}

// A description of this exclusion.
func (o GetSinkResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSinkResult) string { return v.Description }).(pulumi.StringOutput)
}

// The destination of the sink (or, in other words, where logs are written to).
func (o GetSinkResultOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetSinkResult) string { return v.Destination }).(pulumi.StringOutput)
}

// Whether this exclusion is disabled and it does not exclude any log entries.
func (o GetSinkResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSinkResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// Log entries that match any of the exclusion filters are not exported. Structure is documented below.
func (o GetSinkResultOutput) Exclusions() GetSinkExclusionArrayOutput {
	return o.ApplyT(func(v GetSinkResult) []GetSinkExclusion { return v.Exclusions }).(GetSinkExclusionArrayOutput)
}

// An advanced logs filter that matches the log entries to be excluded.
func (o GetSinkResultOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GetSinkResult) string { return v.Filter }).(pulumi.StringOutput)
}

func (o GetSinkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSinkResult) string { return v.Id }).(pulumi.StringOutput)
}

// A client-assigned identifier, such as `load-balancer-exclusion`.
func (o GetSinkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSinkResult) string { return v.Name }).(pulumi.StringOutput)
}

// The identity associated with this sink. This identity must be granted write access to the configured `destination`.
func (o GetSinkResultOutput) WriterIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v GetSinkResult) string { return v.WriterIdentity }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSinkResultOutput{})
}
