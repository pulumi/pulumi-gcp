// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package pubsub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SubscriptionExpirationPolicy struct {
	Ttl string `pulumi:"ttl"`
}

type SubscriptionExpirationPolicyInput interface {
	pulumi.Input

	ToSubscriptionExpirationPolicyOutput() SubscriptionExpirationPolicyOutput
	ToSubscriptionExpirationPolicyOutputWithContext(context.Context) SubscriptionExpirationPolicyOutput
}

type SubscriptionExpirationPolicyArgs struct {
	Ttl pulumi.StringInput `pulumi:"ttl"`
}

func (SubscriptionExpirationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionExpirationPolicy)(nil)).Elem()
}

func (i SubscriptionExpirationPolicyArgs) ToSubscriptionExpirationPolicyOutput() SubscriptionExpirationPolicyOutput {
	return i.ToSubscriptionExpirationPolicyOutputWithContext(context.Background())
}

func (i SubscriptionExpirationPolicyArgs) ToSubscriptionExpirationPolicyOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyOutput)
}

func (i SubscriptionExpirationPolicyArgs) ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput {
	return i.ToSubscriptionExpirationPolicyPtrOutputWithContext(context.Background())
}

func (i SubscriptionExpirationPolicyArgs) ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyOutput).ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx)
}

type SubscriptionExpirationPolicyPtrInput interface {
	pulumi.Input

	ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput
	ToSubscriptionExpirationPolicyPtrOutputWithContext(context.Context) SubscriptionExpirationPolicyPtrOutput
}

type subscriptionExpirationPolicyPtrType SubscriptionExpirationPolicyArgs

func SubscriptionExpirationPolicyPtr(v *SubscriptionExpirationPolicyArgs) SubscriptionExpirationPolicyPtrInput {
	return (*subscriptionExpirationPolicyPtrType)(v)
}

func (*subscriptionExpirationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionExpirationPolicy)(nil)).Elem()
}

func (i *subscriptionExpirationPolicyPtrType) ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput {
	return i.ToSubscriptionExpirationPolicyPtrOutputWithContext(context.Background())
}

func (i *subscriptionExpirationPolicyPtrType) ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyPtrOutput)
}

type SubscriptionExpirationPolicyOutput struct{ *pulumi.OutputState }

func (SubscriptionExpirationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionExpirationPolicy)(nil)).Elem()
}

func (o SubscriptionExpirationPolicyOutput) ToSubscriptionExpirationPolicyOutput() SubscriptionExpirationPolicyOutput {
	return o
}

func (o SubscriptionExpirationPolicyOutput) ToSubscriptionExpirationPolicyOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyOutput {
	return o
}

func (o SubscriptionExpirationPolicyOutput) ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput {
	return o.ToSubscriptionExpirationPolicyPtrOutputWithContext(context.Background())
}

func (o SubscriptionExpirationPolicyOutput) ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyPtrOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicy) *SubscriptionExpirationPolicy {
		return &v
	}).(SubscriptionExpirationPolicyPtrOutput)
}
func (o SubscriptionExpirationPolicyOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicy) string { return v.Ttl }).(pulumi.StringOutput)
}

type SubscriptionExpirationPolicyPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionExpirationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionExpirationPolicy)(nil)).Elem()
}

func (o SubscriptionExpirationPolicyPtrOutput) ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput {
	return o
}

func (o SubscriptionExpirationPolicyPtrOutput) ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyPtrOutput {
	return o
}

func (o SubscriptionExpirationPolicyPtrOutput) Elem() SubscriptionExpirationPolicyOutput {
	return o.ApplyT(func(v *SubscriptionExpirationPolicy) SubscriptionExpirationPolicy { return *v }).(SubscriptionExpirationPolicyOutput)
}

func (o SubscriptionExpirationPolicyPtrOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicy) string { return v.Ttl }).(pulumi.StringOutput)
}

type SubscriptionIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type SubscriptionIAMBindingConditionInput interface {
	pulumi.Input

	ToSubscriptionIAMBindingConditionOutput() SubscriptionIAMBindingConditionOutput
	ToSubscriptionIAMBindingConditionOutputWithContext(context.Context) SubscriptionIAMBindingConditionOutput
}

type SubscriptionIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SubscriptionIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionOutput() SubscriptionIAMBindingConditionOutput {
	return i.ToSubscriptionIAMBindingConditionOutputWithContext(context.Background())
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionOutput)
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return i.ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionOutput).ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx)
}

type SubscriptionIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput
	ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Context) SubscriptionIAMBindingConditionPtrOutput
}

type subscriptionIAMBindingConditionPtrType SubscriptionIAMBindingConditionArgs

func SubscriptionIAMBindingConditionPtr(v *SubscriptionIAMBindingConditionArgs) SubscriptionIAMBindingConditionPtrInput {
	return (*subscriptionIAMBindingConditionPtrType)(v)
}

func (*subscriptionIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (i *subscriptionIAMBindingConditionPtrType) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return i.ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *subscriptionIAMBindingConditionPtrType) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionPtrOutput)
}

type SubscriptionIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionOutput() SubscriptionIAMBindingConditionOutput {
	return o
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionOutput {
	return o
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return o.ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) *SubscriptionIAMBindingCondition {
		return &v
	}).(SubscriptionIAMBindingConditionPtrOutput)
}
func (o SubscriptionIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (o SubscriptionIAMBindingConditionPtrOutput) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return o
}

func (o SubscriptionIAMBindingConditionPtrOutput) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return o
}

func (o SubscriptionIAMBindingConditionPtrOutput) Elem() SubscriptionIAMBindingConditionOutput {
	return o.ApplyT(func(v *SubscriptionIAMBindingCondition) SubscriptionIAMBindingCondition { return *v }).(SubscriptionIAMBindingConditionOutput)
}

func (o SubscriptionIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type SubscriptionIAMMemberConditionInput interface {
	pulumi.Input

	ToSubscriptionIAMMemberConditionOutput() SubscriptionIAMMemberConditionOutput
	ToSubscriptionIAMMemberConditionOutputWithContext(context.Context) SubscriptionIAMMemberConditionOutput
}

type SubscriptionIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SubscriptionIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionOutput() SubscriptionIAMMemberConditionOutput {
	return i.ToSubscriptionIAMMemberConditionOutputWithContext(context.Background())
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionOutput)
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return i.ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionOutput).ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx)
}

type SubscriptionIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput
	ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Context) SubscriptionIAMMemberConditionPtrOutput
}

type subscriptionIAMMemberConditionPtrType SubscriptionIAMMemberConditionArgs

func SubscriptionIAMMemberConditionPtr(v *SubscriptionIAMMemberConditionArgs) SubscriptionIAMMemberConditionPtrInput {
	return (*subscriptionIAMMemberConditionPtrType)(v)
}

func (*subscriptionIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (i *subscriptionIAMMemberConditionPtrType) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return i.ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *subscriptionIAMMemberConditionPtrType) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionPtrOutput)
}

type SubscriptionIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionOutput() SubscriptionIAMMemberConditionOutput {
	return o
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionOutput {
	return o
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return o.ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) *SubscriptionIAMMemberCondition {
		return &v
	}).(SubscriptionIAMMemberConditionPtrOutput)
}
func (o SubscriptionIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (o SubscriptionIAMMemberConditionPtrOutput) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return o
}

func (o SubscriptionIAMMemberConditionPtrOutput) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return o
}

func (o SubscriptionIAMMemberConditionPtrOutput) Elem() SubscriptionIAMMemberConditionOutput {
	return o.ApplyT(func(v *SubscriptionIAMMemberCondition) SubscriptionIAMMemberCondition { return *v }).(SubscriptionIAMMemberConditionOutput)
}

func (o SubscriptionIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionPushConfig struct {
	Attributes   map[string]string                `pulumi:"attributes"`
	OidcToken    *SubscriptionPushConfigOidcToken `pulumi:"oidcToken"`
	PushEndpoint string                           `pulumi:"pushEndpoint"`
}

type SubscriptionPushConfigInput interface {
	pulumi.Input

	ToSubscriptionPushConfigOutput() SubscriptionPushConfigOutput
	ToSubscriptionPushConfigOutputWithContext(context.Context) SubscriptionPushConfigOutput
}

type SubscriptionPushConfigArgs struct {
	Attributes   pulumi.StringMapInput                   `pulumi:"attributes"`
	OidcToken    SubscriptionPushConfigOidcTokenPtrInput `pulumi:"oidcToken"`
	PushEndpoint pulumi.StringInput                      `pulumi:"pushEndpoint"`
}

func (SubscriptionPushConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfig)(nil)).Elem()
}

func (i SubscriptionPushConfigArgs) ToSubscriptionPushConfigOutput() SubscriptionPushConfigOutput {
	return i.ToSubscriptionPushConfigOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigArgs) ToSubscriptionPushConfigOutputWithContext(ctx context.Context) SubscriptionPushConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOutput)
}

func (i SubscriptionPushConfigArgs) ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput {
	return i.ToSubscriptionPushConfigPtrOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigArgs) ToSubscriptionPushConfigPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOutput).ToSubscriptionPushConfigPtrOutputWithContext(ctx)
}

type SubscriptionPushConfigPtrInput interface {
	pulumi.Input

	ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput
	ToSubscriptionPushConfigPtrOutputWithContext(context.Context) SubscriptionPushConfigPtrOutput
}

type subscriptionPushConfigPtrType SubscriptionPushConfigArgs

func SubscriptionPushConfigPtr(v *SubscriptionPushConfigArgs) SubscriptionPushConfigPtrInput {
	return (*subscriptionPushConfigPtrType)(v)
}

func (*subscriptionPushConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfig)(nil)).Elem()
}

func (i *subscriptionPushConfigPtrType) ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput {
	return i.ToSubscriptionPushConfigPtrOutputWithContext(context.Background())
}

func (i *subscriptionPushConfigPtrType) ToSubscriptionPushConfigPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigPtrOutput)
}

type SubscriptionPushConfigOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfig)(nil)).Elem()
}

func (o SubscriptionPushConfigOutput) ToSubscriptionPushConfigOutput() SubscriptionPushConfigOutput {
	return o
}

func (o SubscriptionPushConfigOutput) ToSubscriptionPushConfigOutputWithContext(ctx context.Context) SubscriptionPushConfigOutput {
	return o
}

func (o SubscriptionPushConfigOutput) ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput {
	return o.ToSubscriptionPushConfigPtrOutputWithContext(context.Background())
}

func (o SubscriptionPushConfigOutput) ToSubscriptionPushConfigPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) *SubscriptionPushConfig {
		return &v
	}).(SubscriptionPushConfigPtrOutput)
}
func (o SubscriptionPushConfigOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

func (o SubscriptionPushConfigOutput) OidcToken() SubscriptionPushConfigOidcTokenPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) *SubscriptionPushConfigOidcToken { return v.OidcToken }).(SubscriptionPushConfigOidcTokenPtrOutput)
}

func (o SubscriptionPushConfigOutput) PushEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) string { return v.PushEndpoint }).(pulumi.StringOutput)
}

type SubscriptionPushConfigPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfig)(nil)).Elem()
}

func (o SubscriptionPushConfigPtrOutput) ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput {
	return o
}

func (o SubscriptionPushConfigPtrOutput) ToSubscriptionPushConfigPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigPtrOutput {
	return o
}

func (o SubscriptionPushConfigPtrOutput) Elem() SubscriptionPushConfigOutput {
	return o.ApplyT(func(v *SubscriptionPushConfig) SubscriptionPushConfig { return *v }).(SubscriptionPushConfigOutput)
}

func (o SubscriptionPushConfigPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

func (o SubscriptionPushConfigPtrOutput) OidcToken() SubscriptionPushConfigOidcTokenPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) *SubscriptionPushConfigOidcToken { return v.OidcToken }).(SubscriptionPushConfigOidcTokenPtrOutput)
}

func (o SubscriptionPushConfigPtrOutput) PushEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) string { return v.PushEndpoint }).(pulumi.StringOutput)
}

type SubscriptionPushConfigOidcToken struct {
	Audience            *string `pulumi:"audience"`
	ServiceAccountEmail string  `pulumi:"serviceAccountEmail"`
}

type SubscriptionPushConfigOidcTokenInput interface {
	pulumi.Input

	ToSubscriptionPushConfigOidcTokenOutput() SubscriptionPushConfigOidcTokenOutput
	ToSubscriptionPushConfigOidcTokenOutputWithContext(context.Context) SubscriptionPushConfigOidcTokenOutput
}

type SubscriptionPushConfigOidcTokenArgs struct {
	Audience            pulumi.StringPtrInput `pulumi:"audience"`
	ServiceAccountEmail pulumi.StringInput    `pulumi:"serviceAccountEmail"`
}

func (SubscriptionPushConfigOidcTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigOidcToken)(nil)).Elem()
}

func (i SubscriptionPushConfigOidcTokenArgs) ToSubscriptionPushConfigOidcTokenOutput() SubscriptionPushConfigOidcTokenOutput {
	return i.ToSubscriptionPushConfigOidcTokenOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigOidcTokenArgs) ToSubscriptionPushConfigOidcTokenOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOidcTokenOutput)
}

func (i SubscriptionPushConfigOidcTokenArgs) ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput {
	return i.ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigOidcTokenArgs) ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOidcTokenOutput).ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx)
}

type SubscriptionPushConfigOidcTokenPtrInput interface {
	pulumi.Input

	ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput
	ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(context.Context) SubscriptionPushConfigOidcTokenPtrOutput
}

type subscriptionPushConfigOidcTokenPtrType SubscriptionPushConfigOidcTokenArgs

func SubscriptionPushConfigOidcTokenPtr(v *SubscriptionPushConfigOidcTokenArgs) SubscriptionPushConfigOidcTokenPtrInput {
	return (*subscriptionPushConfigOidcTokenPtrType)(v)
}

func (*subscriptionPushConfigOidcTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigOidcToken)(nil)).Elem()
}

func (i *subscriptionPushConfigOidcTokenPtrType) ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput {
	return i.ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(context.Background())
}

func (i *subscriptionPushConfigOidcTokenPtrType) ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOidcTokenPtrOutput)
}

type SubscriptionPushConfigOidcTokenOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigOidcTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigOidcToken)(nil)).Elem()
}

func (o SubscriptionPushConfigOidcTokenOutput) ToSubscriptionPushConfigOidcTokenOutput() SubscriptionPushConfigOidcTokenOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenOutput) ToSubscriptionPushConfigOidcTokenOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenOutput) ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput {
	return o.ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(context.Background())
}

func (o SubscriptionPushConfigOidcTokenOutput) ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) *SubscriptionPushConfigOidcToken {
		return &v
	}).(SubscriptionPushConfigOidcTokenPtrOutput)
}
func (o SubscriptionPushConfigOidcTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPushConfigOidcTokenOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type SubscriptionPushConfigOidcTokenPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigOidcTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigOidcToken)(nil)).Elem()
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenPtrOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) Elem() SubscriptionPushConfigOidcTokenOutput {
	return o.ApplyT(func(v *SubscriptionPushConfigOidcToken) SubscriptionPushConfigOidcToken { return *v }).(SubscriptionPushConfigOidcTokenOutput)
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type TopicIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type TopicIAMBindingConditionInput interface {
	pulumi.Input

	ToTopicIAMBindingConditionOutput() TopicIAMBindingConditionOutput
	ToTopicIAMBindingConditionOutputWithContext(context.Context) TopicIAMBindingConditionOutput
}

type TopicIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TopicIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMBindingCondition)(nil)).Elem()
}

func (i TopicIAMBindingConditionArgs) ToTopicIAMBindingConditionOutput() TopicIAMBindingConditionOutput {
	return i.ToTopicIAMBindingConditionOutputWithContext(context.Background())
}

func (i TopicIAMBindingConditionArgs) ToTopicIAMBindingConditionOutputWithContext(ctx context.Context) TopicIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionOutput)
}

func (i TopicIAMBindingConditionArgs) ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput {
	return i.ToTopicIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i TopicIAMBindingConditionArgs) ToTopicIAMBindingConditionPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionOutput).ToTopicIAMBindingConditionPtrOutputWithContext(ctx)
}

type TopicIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput
	ToTopicIAMBindingConditionPtrOutputWithContext(context.Context) TopicIAMBindingConditionPtrOutput
}

type topicIAMBindingConditionPtrType TopicIAMBindingConditionArgs

func TopicIAMBindingConditionPtr(v *TopicIAMBindingConditionArgs) TopicIAMBindingConditionPtrInput {
	return (*topicIAMBindingConditionPtrType)(v)
}

func (*topicIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMBindingCondition)(nil)).Elem()
}

func (i *topicIAMBindingConditionPtrType) ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput {
	return i.ToTopicIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *topicIAMBindingConditionPtrType) ToTopicIAMBindingConditionPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionPtrOutput)
}

type TopicIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (TopicIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMBindingCondition)(nil)).Elem()
}

func (o TopicIAMBindingConditionOutput) ToTopicIAMBindingConditionOutput() TopicIAMBindingConditionOutput {
	return o
}

func (o TopicIAMBindingConditionOutput) ToTopicIAMBindingConditionOutputWithContext(ctx context.Context) TopicIAMBindingConditionOutput {
	return o
}

func (o TopicIAMBindingConditionOutput) ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput {
	return o.ToTopicIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o TopicIAMBindingConditionOutput) ToTopicIAMBindingConditionPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) *TopicIAMBindingCondition {
		return &v
	}).(TopicIAMBindingConditionPtrOutput)
}
func (o TopicIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (TopicIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMBindingCondition)(nil)).Elem()
}

func (o TopicIAMBindingConditionPtrOutput) ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput {
	return o
}

func (o TopicIAMBindingConditionPtrOutput) ToTopicIAMBindingConditionPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionPtrOutput {
	return o
}

func (o TopicIAMBindingConditionPtrOutput) Elem() TopicIAMBindingConditionOutput {
	return o.ApplyT(func(v *TopicIAMBindingCondition) TopicIAMBindingCondition { return *v }).(TopicIAMBindingConditionOutput)
}

func (o TopicIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type TopicIAMMemberConditionInput interface {
	pulumi.Input

	ToTopicIAMMemberConditionOutput() TopicIAMMemberConditionOutput
	ToTopicIAMMemberConditionOutputWithContext(context.Context) TopicIAMMemberConditionOutput
}

type TopicIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TopicIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMMemberCondition)(nil)).Elem()
}

func (i TopicIAMMemberConditionArgs) ToTopicIAMMemberConditionOutput() TopicIAMMemberConditionOutput {
	return i.ToTopicIAMMemberConditionOutputWithContext(context.Background())
}

func (i TopicIAMMemberConditionArgs) ToTopicIAMMemberConditionOutputWithContext(ctx context.Context) TopicIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionOutput)
}

func (i TopicIAMMemberConditionArgs) ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput {
	return i.ToTopicIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i TopicIAMMemberConditionArgs) ToTopicIAMMemberConditionPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionOutput).ToTopicIAMMemberConditionPtrOutputWithContext(ctx)
}

type TopicIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput
	ToTopicIAMMemberConditionPtrOutputWithContext(context.Context) TopicIAMMemberConditionPtrOutput
}

type topicIAMMemberConditionPtrType TopicIAMMemberConditionArgs

func TopicIAMMemberConditionPtr(v *TopicIAMMemberConditionArgs) TopicIAMMemberConditionPtrInput {
	return (*topicIAMMemberConditionPtrType)(v)
}

func (*topicIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMMemberCondition)(nil)).Elem()
}

func (i *topicIAMMemberConditionPtrType) ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput {
	return i.ToTopicIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *topicIAMMemberConditionPtrType) ToTopicIAMMemberConditionPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionPtrOutput)
}

type TopicIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (TopicIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMMemberCondition)(nil)).Elem()
}

func (o TopicIAMMemberConditionOutput) ToTopicIAMMemberConditionOutput() TopicIAMMemberConditionOutput {
	return o
}

func (o TopicIAMMemberConditionOutput) ToTopicIAMMemberConditionOutputWithContext(ctx context.Context) TopicIAMMemberConditionOutput {
	return o
}

func (o TopicIAMMemberConditionOutput) ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput {
	return o.ToTopicIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o TopicIAMMemberConditionOutput) ToTopicIAMMemberConditionPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) *TopicIAMMemberCondition {
		return &v
	}).(TopicIAMMemberConditionPtrOutput)
}
func (o TopicIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (TopicIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMMemberCondition)(nil)).Elem()
}

func (o TopicIAMMemberConditionPtrOutput) ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput {
	return o
}

func (o TopicIAMMemberConditionPtrOutput) ToTopicIAMMemberConditionPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionPtrOutput {
	return o
}

func (o TopicIAMMemberConditionPtrOutput) Elem() TopicIAMMemberConditionOutput {
	return o.ApplyT(func(v *TopicIAMMemberCondition) TopicIAMMemberCondition { return *v }).(TopicIAMMemberConditionOutput)
}

func (o TopicIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TopicMessageStoragePolicy struct {
	AllowedPersistenceRegions []string `pulumi:"allowedPersistenceRegions"`
}

type TopicMessageStoragePolicyInput interface {
	pulumi.Input

	ToTopicMessageStoragePolicyOutput() TopicMessageStoragePolicyOutput
	ToTopicMessageStoragePolicyOutputWithContext(context.Context) TopicMessageStoragePolicyOutput
}

type TopicMessageStoragePolicyArgs struct {
	AllowedPersistenceRegions pulumi.StringArrayInput `pulumi:"allowedPersistenceRegions"`
}

func (TopicMessageStoragePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicMessageStoragePolicy)(nil)).Elem()
}

func (i TopicMessageStoragePolicyArgs) ToTopicMessageStoragePolicyOutput() TopicMessageStoragePolicyOutput {
	return i.ToTopicMessageStoragePolicyOutputWithContext(context.Background())
}

func (i TopicMessageStoragePolicyArgs) ToTopicMessageStoragePolicyOutputWithContext(ctx context.Context) TopicMessageStoragePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyOutput)
}

func (i TopicMessageStoragePolicyArgs) ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput {
	return i.ToTopicMessageStoragePolicyPtrOutputWithContext(context.Background())
}

func (i TopicMessageStoragePolicyArgs) ToTopicMessageStoragePolicyPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyOutput).ToTopicMessageStoragePolicyPtrOutputWithContext(ctx)
}

type TopicMessageStoragePolicyPtrInput interface {
	pulumi.Input

	ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput
	ToTopicMessageStoragePolicyPtrOutputWithContext(context.Context) TopicMessageStoragePolicyPtrOutput
}

type topicMessageStoragePolicyPtrType TopicMessageStoragePolicyArgs

func TopicMessageStoragePolicyPtr(v *TopicMessageStoragePolicyArgs) TopicMessageStoragePolicyPtrInput {
	return (*topicMessageStoragePolicyPtrType)(v)
}

func (*topicMessageStoragePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicMessageStoragePolicy)(nil)).Elem()
}

func (i *topicMessageStoragePolicyPtrType) ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput {
	return i.ToTopicMessageStoragePolicyPtrOutputWithContext(context.Background())
}

func (i *topicMessageStoragePolicyPtrType) ToTopicMessageStoragePolicyPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyPtrOutput)
}

type TopicMessageStoragePolicyOutput struct{ *pulumi.OutputState }

func (TopicMessageStoragePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicMessageStoragePolicy)(nil)).Elem()
}

func (o TopicMessageStoragePolicyOutput) ToTopicMessageStoragePolicyOutput() TopicMessageStoragePolicyOutput {
	return o
}

func (o TopicMessageStoragePolicyOutput) ToTopicMessageStoragePolicyOutputWithContext(ctx context.Context) TopicMessageStoragePolicyOutput {
	return o
}

func (o TopicMessageStoragePolicyOutput) ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput {
	return o.ToTopicMessageStoragePolicyPtrOutputWithContext(context.Background())
}

func (o TopicMessageStoragePolicyOutput) ToTopicMessageStoragePolicyPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyPtrOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicy) *TopicMessageStoragePolicy {
		return &v
	}).(TopicMessageStoragePolicyPtrOutput)
}
func (o TopicMessageStoragePolicyOutput) AllowedPersistenceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicy) []string { return v.AllowedPersistenceRegions }).(pulumi.StringArrayOutput)
}

type TopicMessageStoragePolicyPtrOutput struct{ *pulumi.OutputState }

func (TopicMessageStoragePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicMessageStoragePolicy)(nil)).Elem()
}

func (o TopicMessageStoragePolicyPtrOutput) ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput {
	return o
}

func (o TopicMessageStoragePolicyPtrOutput) ToTopicMessageStoragePolicyPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyPtrOutput {
	return o
}

func (o TopicMessageStoragePolicyPtrOutput) Elem() TopicMessageStoragePolicyOutput {
	return o.ApplyT(func(v *TopicMessageStoragePolicy) TopicMessageStoragePolicy { return *v }).(TopicMessageStoragePolicyOutput)
}

func (o TopicMessageStoragePolicyPtrOutput) AllowedPersistenceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicy) []string { return v.AllowedPersistenceRegions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(SubscriptionExpirationPolicyOutput{})
	pulumi.RegisterOutputType(SubscriptionExpirationPolicyPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigOidcTokenOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigOidcTokenPtrOutput{})
	pulumi.RegisterOutputType(TopicIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(TopicIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(TopicIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(TopicIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(TopicMessageStoragePolicyOutput{})
	pulumi.RegisterOutputType(TopicMessageStoragePolicyPtrOutput{})
}
