// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pubsub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for schema
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v8/go/gcp/pubsub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pubsub.LookupSchemaIamPolicy(ctx, &pubsub.LookupSchemaIamPolicyArgs{
//				Project: pulumi.StringRef(example.Project),
//				Schema:  example.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSchemaIamPolicy(ctx *pulumi.Context, args *LookupSchemaIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupSchemaIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSchemaIamPolicyResult
	err := ctx.Invoke("gcp:pubsub/getSchemaIamPolicy:getSchemaIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSchemaIamPolicy.
type LookupSchemaIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	Schema string `pulumi:"schema"`
}

// A collection of values returned by getSchemaIamPolicy.
type LookupSchemaIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `pubsub.SchemaIamPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Schema     string `pulumi:"schema"`
}

func LookupSchemaIamPolicyOutput(ctx *pulumi.Context, args LookupSchemaIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSchemaIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSchemaIamPolicyResultOutput, error) {
			args := v.(LookupSchemaIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("gcp:pubsub/getSchemaIamPolicy:getSchemaIamPolicy", args, LookupSchemaIamPolicyResultOutput{}, options).(LookupSchemaIamPolicyResultOutput), nil
		}).(LookupSchemaIamPolicyResultOutput)
}

// A collection of arguments for invoking getSchemaIamPolicy.
type LookupSchemaIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	Schema pulumi.StringInput `pulumi:"schema"`
}

func (LookupSchemaIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchemaIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getSchemaIamPolicy.
type LookupSchemaIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSchemaIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchemaIamPolicyResult)(nil)).Elem()
}

func (o LookupSchemaIamPolicyResultOutput) ToLookupSchemaIamPolicyResultOutput() LookupSchemaIamPolicyResultOutput {
	return o
}

func (o LookupSchemaIamPolicyResultOutput) ToLookupSchemaIamPolicyResultOutputWithContext(ctx context.Context) LookupSchemaIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o LookupSchemaIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSchemaIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `pubsub.SchemaIamPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o LookupSchemaIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupSchemaIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupSchemaIamPolicyResultOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaIamPolicyResult) string { return v.Schema }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSchemaIamPolicyResultOutput{})
}
