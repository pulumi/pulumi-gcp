// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pubsub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the current IAM policy data for topic
//
// ## example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/pubsub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pubsub.GetTopicIamPolicy(ctx, &pubsub.GetTopicIamPolicyArgs{
//				Project: pulumi.StringRef(google_pubsub_topic.Example.Project),
//				Topic:   google_pubsub_topic.Example.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTopicIamPolicy(ctx *pulumi.Context, args *GetTopicIamPolicyArgs, opts ...pulumi.InvokeOption) (*GetTopicIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTopicIamPolicyResult
	err := ctx.Invoke("gcp:pubsub/getTopicIamPolicy:getTopicIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTopicIamPolicy.
type GetTopicIamPolicyArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project *string `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	Topic string `pulumi:"topic"`
}

// A collection of values returned by getTopicIamPolicy.
type GetTopicIamPolicyResult struct {
	// (Computed) The etag of the IAM policy.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required only by `pubsub.TopicIAMPolicy`) The policy data generated by
	// a `organizations.getIAMPolicy` data source.
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Topic      string `pulumi:"topic"`
}

func GetTopicIamPolicyOutput(ctx *pulumi.Context, args GetTopicIamPolicyOutputArgs, opts ...pulumi.InvokeOption) GetTopicIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTopicIamPolicyResult, error) {
			args := v.(GetTopicIamPolicyArgs)
			r, err := GetTopicIamPolicy(ctx, &args, opts...)
			var s GetTopicIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTopicIamPolicyResultOutput)
}

// A collection of arguments for invoking getTopicIamPolicy.
type GetTopicIamPolicyOutputArgs struct {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Used to find the parent resource to bind the IAM policy to
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GetTopicIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getTopicIamPolicy.
type GetTopicIamPolicyResultOutput struct{ *pulumi.OutputState }

func (GetTopicIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicIamPolicyResult)(nil)).Elem()
}

func (o GetTopicIamPolicyResultOutput) ToGetTopicIamPolicyResultOutput() GetTopicIamPolicyResultOutput {
	return o
}

func (o GetTopicIamPolicyResultOutput) ToGetTopicIamPolicyResultOutputWithContext(ctx context.Context) GetTopicIamPolicyResultOutput {
	return o
}

// (Computed) The etag of the IAM policy.
func (o GetTopicIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTopicIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required only by `pubsub.TopicIAMPolicy`) The policy data generated by
// a `organizations.getIAMPolicy` data source.
func (o GetTopicIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o GetTopicIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetTopicIamPolicyResultOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicIamPolicyResult) string { return v.Topic }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTopicIamPolicyResultOutput{})
}
