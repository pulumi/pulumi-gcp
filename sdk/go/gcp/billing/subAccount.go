// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package billing

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// Billing Subaccounts can be imported using any of these accepted formats
//
// ```sh
//  $ pulumi import gcp:billing/subAccount:SubAccount default billingAccounts/{billing_account_id}
// ```
type SubAccount struct {
	pulumi.CustomResourceState

	// The billing account id.
	BillingAccountId pulumi.StringOutput    `pulumi:"billingAccountId"`
	DeletionPolicy   pulumi.StringPtrOutput `pulumi:"deletionPolicy"`
	// The display name of the billing account.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The name of the master billing account that the subaccount
	// will be created under in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
	MasterBillingAccount pulumi.StringOutput `pulumi:"masterBillingAccount"`
	// The resource name of the billing account in the form `billingAccounts/{billing_account_id}`.
	Name pulumi.StringOutput `pulumi:"name"`
	// `true` if the billing account is open, `false` if the billing account is closed.
	Open pulumi.BoolOutput `pulumi:"open"`
}

// NewSubAccount registers a new resource with the given unique name, arguments, and options.
func NewSubAccount(ctx *pulumi.Context,
	name string, args *SubAccountArgs, opts ...pulumi.ResourceOption) (*SubAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.MasterBillingAccount == nil {
		return nil, errors.New("invalid value for required argument 'MasterBillingAccount'")
	}
	var resource SubAccount
	err := ctx.RegisterResource("gcp:billing/subAccount:SubAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubAccount gets an existing SubAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubAccountState, opts ...pulumi.ResourceOption) (*SubAccount, error) {
	var resource SubAccount
	err := ctx.ReadResource("gcp:billing/subAccount:SubAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubAccount resources.
type subAccountState struct {
	// The billing account id.
	BillingAccountId *string `pulumi:"billingAccountId"`
	DeletionPolicy   *string `pulumi:"deletionPolicy"`
	// The display name of the billing account.
	DisplayName *string `pulumi:"displayName"`
	// The name of the master billing account that the subaccount
	// will be created under in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
	MasterBillingAccount *string `pulumi:"masterBillingAccount"`
	// The resource name of the billing account in the form `billingAccounts/{billing_account_id}`.
	Name *string `pulumi:"name"`
	// `true` if the billing account is open, `false` if the billing account is closed.
	Open *bool `pulumi:"open"`
}

type SubAccountState struct {
	// The billing account id.
	BillingAccountId pulumi.StringPtrInput
	DeletionPolicy   pulumi.StringPtrInput
	// The display name of the billing account.
	DisplayName pulumi.StringPtrInput
	// The name of the master billing account that the subaccount
	// will be created under in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
	MasterBillingAccount pulumi.StringPtrInput
	// The resource name of the billing account in the form `billingAccounts/{billing_account_id}`.
	Name pulumi.StringPtrInput
	// `true` if the billing account is open, `false` if the billing account is closed.
	Open pulumi.BoolPtrInput
}

func (SubAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*subAccountState)(nil)).Elem()
}

type subAccountArgs struct {
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// The display name of the billing account.
	DisplayName string `pulumi:"displayName"`
	// The name of the master billing account that the subaccount
	// will be created under in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
	MasterBillingAccount string `pulumi:"masterBillingAccount"`
}

// The set of arguments for constructing a SubAccount resource.
type SubAccountArgs struct {
	DeletionPolicy pulumi.StringPtrInput
	// The display name of the billing account.
	DisplayName pulumi.StringInput
	// The name of the master billing account that the subaccount
	// will be created under in the form `{billing_account_id}` or `billingAccounts/{billing_account_id}`.
	MasterBillingAccount pulumi.StringInput
}

func (SubAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subAccountArgs)(nil)).Elem()
}

type SubAccountInput interface {
	pulumi.Input

	ToSubAccountOutput() SubAccountOutput
	ToSubAccountOutputWithContext(ctx context.Context) SubAccountOutput
}

func (*SubAccount) ElementType() reflect.Type {
	return reflect.TypeOf((*SubAccount)(nil))
}

func (i *SubAccount) ToSubAccountOutput() SubAccountOutput {
	return i.ToSubAccountOutputWithContext(context.Background())
}

func (i *SubAccount) ToSubAccountOutputWithContext(ctx context.Context) SubAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubAccountOutput)
}

type SubAccountOutput struct {
	*pulumi.OutputState
}

func (SubAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubAccount)(nil))
}

func (o SubAccountOutput) ToSubAccountOutput() SubAccountOutput {
	return o
}

func (o SubAccountOutput) ToSubAccountOutputWithContext(ctx context.Context) SubAccountOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SubAccountOutput{})
}
