// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package billing

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccountIamPolicy struct {
	pulumi.CustomResourceState

	BillingAccountId pulumi.StringOutput `pulumi:"billingAccountId"`
	Etag             pulumi.StringOutput `pulumi:"etag"`
	PolicyData       pulumi.StringOutput `pulumi:"policyData"`
}

// NewAccountIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccountIamPolicy(ctx *pulumi.Context,
	name string, args *AccountIamPolicyArgs, opts ...pulumi.ResourceOption) (*AccountIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingAccountId == nil {
		return nil, errors.New("invalid value for required argument 'BillingAccountId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	var resource AccountIamPolicy
	err := ctx.RegisterResource("gcp:billing/accountIamPolicy:AccountIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountIamPolicy gets an existing AccountIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountIamPolicyState, opts ...pulumi.ResourceOption) (*AccountIamPolicy, error) {
	var resource AccountIamPolicy
	err := ctx.ReadResource("gcp:billing/accountIamPolicy:AccountIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountIamPolicy resources.
type accountIamPolicyState struct {
	BillingAccountId *string `pulumi:"billingAccountId"`
	Etag             *string `pulumi:"etag"`
	PolicyData       *string `pulumi:"policyData"`
}

type AccountIamPolicyState struct {
	BillingAccountId pulumi.StringPtrInput
	Etag             pulumi.StringPtrInput
	PolicyData       pulumi.StringPtrInput
}

func (AccountIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountIamPolicyState)(nil)).Elem()
}

type accountIamPolicyArgs struct {
	BillingAccountId string `pulumi:"billingAccountId"`
	PolicyData       string `pulumi:"policyData"`
}

// The set of arguments for constructing a AccountIamPolicy resource.
type AccountIamPolicyArgs struct {
	BillingAccountId pulumi.StringInput
	PolicyData       pulumi.StringInput
}

func (AccountIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountIamPolicyArgs)(nil)).Elem()
}

type AccountIamPolicyInput interface {
	pulumi.Input

	ToAccountIamPolicyOutput() AccountIamPolicyOutput
	ToAccountIamPolicyOutputWithContext(ctx context.Context) AccountIamPolicyOutput
}

func (*AccountIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIamPolicy)(nil))
}

func (i *AccountIamPolicy) ToAccountIamPolicyOutput() AccountIamPolicyOutput {
	return i.ToAccountIamPolicyOutputWithContext(context.Background())
}

func (i *AccountIamPolicy) ToAccountIamPolicyOutputWithContext(ctx context.Context) AccountIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIamPolicyOutput)
}

func (i *AccountIamPolicy) ToAccountIamPolicyPtrOutput() AccountIamPolicyPtrOutput {
	return i.ToAccountIamPolicyPtrOutputWithContext(context.Background())
}

func (i *AccountIamPolicy) ToAccountIamPolicyPtrOutputWithContext(ctx context.Context) AccountIamPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIamPolicyPtrOutput)
}

type AccountIamPolicyPtrInput interface {
	pulumi.Input

	ToAccountIamPolicyPtrOutput() AccountIamPolicyPtrOutput
	ToAccountIamPolicyPtrOutputWithContext(ctx context.Context) AccountIamPolicyPtrOutput
}

type accountIamPolicyPtrType AccountIamPolicyArgs

func (*accountIamPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIamPolicy)(nil))
}

func (i *accountIamPolicyPtrType) ToAccountIamPolicyPtrOutput() AccountIamPolicyPtrOutput {
	return i.ToAccountIamPolicyPtrOutputWithContext(context.Background())
}

func (i *accountIamPolicyPtrType) ToAccountIamPolicyPtrOutputWithContext(ctx context.Context) AccountIamPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIamPolicyPtrOutput)
}

// AccountIamPolicyArrayInput is an input type that accepts AccountIamPolicyArray and AccountIamPolicyArrayOutput values.
// You can construct a concrete instance of `AccountIamPolicyArrayInput` via:
//
//          AccountIamPolicyArray{ AccountIamPolicyArgs{...} }
type AccountIamPolicyArrayInput interface {
	pulumi.Input

	ToAccountIamPolicyArrayOutput() AccountIamPolicyArrayOutput
	ToAccountIamPolicyArrayOutputWithContext(context.Context) AccountIamPolicyArrayOutput
}

type AccountIamPolicyArray []AccountIamPolicyInput

func (AccountIamPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AccountIamPolicy)(nil))
}

func (i AccountIamPolicyArray) ToAccountIamPolicyArrayOutput() AccountIamPolicyArrayOutput {
	return i.ToAccountIamPolicyArrayOutputWithContext(context.Background())
}

func (i AccountIamPolicyArray) ToAccountIamPolicyArrayOutputWithContext(ctx context.Context) AccountIamPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIamPolicyArrayOutput)
}

// AccountIamPolicyMapInput is an input type that accepts AccountIamPolicyMap and AccountIamPolicyMapOutput values.
// You can construct a concrete instance of `AccountIamPolicyMapInput` via:
//
//          AccountIamPolicyMap{ "key": AccountIamPolicyArgs{...} }
type AccountIamPolicyMapInput interface {
	pulumi.Input

	ToAccountIamPolicyMapOutput() AccountIamPolicyMapOutput
	ToAccountIamPolicyMapOutputWithContext(context.Context) AccountIamPolicyMapOutput
}

type AccountIamPolicyMap map[string]AccountIamPolicyInput

func (AccountIamPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AccountIamPolicy)(nil))
}

func (i AccountIamPolicyMap) ToAccountIamPolicyMapOutput() AccountIamPolicyMapOutput {
	return i.ToAccountIamPolicyMapOutputWithContext(context.Background())
}

func (i AccountIamPolicyMap) ToAccountIamPolicyMapOutputWithContext(ctx context.Context) AccountIamPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIamPolicyMapOutput)
}

type AccountIamPolicyOutput struct {
	*pulumi.OutputState
}

func (AccountIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIamPolicy)(nil))
}

func (o AccountIamPolicyOutput) ToAccountIamPolicyOutput() AccountIamPolicyOutput {
	return o
}

func (o AccountIamPolicyOutput) ToAccountIamPolicyOutputWithContext(ctx context.Context) AccountIamPolicyOutput {
	return o
}

func (o AccountIamPolicyOutput) ToAccountIamPolicyPtrOutput() AccountIamPolicyPtrOutput {
	return o.ToAccountIamPolicyPtrOutputWithContext(context.Background())
}

func (o AccountIamPolicyOutput) ToAccountIamPolicyPtrOutputWithContext(ctx context.Context) AccountIamPolicyPtrOutput {
	return o.ApplyT(func(v AccountIamPolicy) *AccountIamPolicy {
		return &v
	}).(AccountIamPolicyPtrOutput)
}

type AccountIamPolicyPtrOutput struct {
	*pulumi.OutputState
}

func (AccountIamPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIamPolicy)(nil))
}

func (o AccountIamPolicyPtrOutput) ToAccountIamPolicyPtrOutput() AccountIamPolicyPtrOutput {
	return o
}

func (o AccountIamPolicyPtrOutput) ToAccountIamPolicyPtrOutputWithContext(ctx context.Context) AccountIamPolicyPtrOutput {
	return o
}

type AccountIamPolicyArrayOutput struct{ *pulumi.OutputState }

func (AccountIamPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountIamPolicy)(nil))
}

func (o AccountIamPolicyArrayOutput) ToAccountIamPolicyArrayOutput() AccountIamPolicyArrayOutput {
	return o
}

func (o AccountIamPolicyArrayOutput) ToAccountIamPolicyArrayOutputWithContext(ctx context.Context) AccountIamPolicyArrayOutput {
	return o
}

func (o AccountIamPolicyArrayOutput) Index(i pulumi.IntInput) AccountIamPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountIamPolicy {
		return vs[0].([]AccountIamPolicy)[vs[1].(int)]
	}).(AccountIamPolicyOutput)
}

type AccountIamPolicyMapOutput struct{ *pulumi.OutputState }

func (AccountIamPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AccountIamPolicy)(nil))
}

func (o AccountIamPolicyMapOutput) ToAccountIamPolicyMapOutput() AccountIamPolicyMapOutput {
	return o
}

func (o AccountIamPolicyMapOutput) ToAccountIamPolicyMapOutputWithContext(ctx context.Context) AccountIamPolicyMapOutput {
	return o
}

func (o AccountIamPolicyMapOutput) MapIndex(k pulumi.StringInput) AccountIamPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AccountIamPolicy {
		return vs[0].(map[string]AccountIamPolicy)[vs[1].(string)]
	}).(AccountIamPolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountIamPolicyOutput{})
	pulumi.RegisterOutputType(AccountIamPolicyPtrOutput{})
	pulumi.RegisterOutputType(AccountIamPolicyArrayOutput{})
	pulumi.RegisterOutputType(AccountIamPolicyMapOutput{})
}
