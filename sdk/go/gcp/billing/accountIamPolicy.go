// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package billing

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccountIamPolicy struct {
	pulumi.CustomResourceState

	BillingAccountId pulumi.StringOutput `pulumi:"billingAccountId"`
	Etag             pulumi.StringOutput `pulumi:"etag"`
	PolicyData       pulumi.StringOutput `pulumi:"policyData"`
}

// NewAccountIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccountIamPolicy(ctx *pulumi.Context,
	name string, args *AccountIamPolicyArgs, opts ...pulumi.ResourceOption) (*AccountIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingAccountId == nil {
		return nil, errors.New("invalid value for required argument 'BillingAccountId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	var resource AccountIamPolicy
	err := ctx.RegisterResource("gcp:billing/accountIamPolicy:AccountIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountIamPolicy gets an existing AccountIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountIamPolicyState, opts ...pulumi.ResourceOption) (*AccountIamPolicy, error) {
	var resource AccountIamPolicy
	err := ctx.ReadResource("gcp:billing/accountIamPolicy:AccountIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountIamPolicy resources.
type accountIamPolicyState struct {
	BillingAccountId *string `pulumi:"billingAccountId"`
	Etag             *string `pulumi:"etag"`
	PolicyData       *string `pulumi:"policyData"`
}

type AccountIamPolicyState struct {
	BillingAccountId pulumi.StringPtrInput
	Etag             pulumi.StringPtrInput
	PolicyData       pulumi.StringPtrInput
}

func (AccountIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountIamPolicyState)(nil)).Elem()
}

type accountIamPolicyArgs struct {
	BillingAccountId string `pulumi:"billingAccountId"`
	PolicyData       string `pulumi:"policyData"`
}

// The set of arguments for constructing a AccountIamPolicy resource.
type AccountIamPolicyArgs struct {
	BillingAccountId pulumi.StringInput
	PolicyData       pulumi.StringInput
}

func (AccountIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountIamPolicyArgs)(nil)).Elem()
}

type AccountIamPolicyInput interface {
	pulumi.Input

	ToAccountIamPolicyOutput() AccountIamPolicyOutput
	ToAccountIamPolicyOutputWithContext(ctx context.Context) AccountIamPolicyOutput
}

func (AccountIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIamPolicy)(nil)).Elem()
}

func (i AccountIamPolicy) ToAccountIamPolicyOutput() AccountIamPolicyOutput {
	return i.ToAccountIamPolicyOutputWithContext(context.Background())
}

func (i AccountIamPolicy) ToAccountIamPolicyOutputWithContext(ctx context.Context) AccountIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIamPolicyOutput)
}

type AccountIamPolicyOutput struct {
	*pulumi.OutputState
}

func (AccountIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIamPolicyOutput)(nil)).Elem()
}

func (o AccountIamPolicyOutput) ToAccountIamPolicyOutput() AccountIamPolicyOutput {
	return o
}

func (o AccountIamPolicyOutput) ToAccountIamPolicyOutputWithContext(ctx context.Context) AccountIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AccountIamPolicyOutput{})
}
