// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfunctionsv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Google Cloud Function (2nd gen). For more information see:
//
// * [API documentation](https://cloud.google.com/functions/docs/reference/rest/v2beta/projects.locations.functions).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/cloudfunctionsv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudfunctionsv2.LookupFunction(ctx, &cloudfunctionsv2.LookupFunctionArgs{
//				Location: "us-central1",
//				Name:     "function",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFunction(ctx *pulumi.Context, args *LookupFunctionArgs, opts ...pulumi.InvokeOption) (*LookupFunctionResult, error) {
	var rv LookupFunctionResult
	err := ctx.Invoke("gcp:cloudfunctionsv2/getFunction:getFunction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFunction.
type LookupFunctionArgs struct {
	// The location in which the resource belongs.
	Location string `pulumi:"location"`
	// The name of a Cloud Function (2nd gen).
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getFunction.
type LookupFunctionResult struct {
	BuildConfigs  []GetFunctionBuildConfig  `pulumi:"buildConfigs"`
	Description   string                    `pulumi:"description"`
	Environment   string                    `pulumi:"environment"`
	EventTriggers []GetFunctionEventTrigger `pulumi:"eventTriggers"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                     `pulumi:"id"`
	Labels         map[string]string          `pulumi:"labels"`
	Location       string                     `pulumi:"location"`
	Name           string                     `pulumi:"name"`
	Project        *string                    `pulumi:"project"`
	ServiceConfigs []GetFunctionServiceConfig `pulumi:"serviceConfigs"`
	State          string                     `pulumi:"state"`
	UpdateTime     string                     `pulumi:"updateTime"`
}

func LookupFunctionOutput(ctx *pulumi.Context, args LookupFunctionOutputArgs, opts ...pulumi.InvokeOption) LookupFunctionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFunctionResult, error) {
			args := v.(LookupFunctionArgs)
			r, err := LookupFunction(ctx, &args, opts...)
			var s LookupFunctionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFunctionResultOutput)
}

// A collection of arguments for invoking getFunction.
type LookupFunctionOutputArgs struct {
	// The location in which the resource belongs.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of a Cloud Function (2nd gen).
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFunctionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionArgs)(nil)).Elem()
}

// A collection of values returned by getFunction.
type LookupFunctionResultOutput struct{ *pulumi.OutputState }

func (LookupFunctionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionResult)(nil)).Elem()
}

func (o LookupFunctionResultOutput) ToLookupFunctionResultOutput() LookupFunctionResultOutput {
	return o
}

func (o LookupFunctionResultOutput) ToLookupFunctionResultOutputWithContext(ctx context.Context) LookupFunctionResultOutput {
	return o
}

func (o LookupFunctionResultOutput) BuildConfigs() GetFunctionBuildConfigArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionBuildConfig { return v.BuildConfigs }).(GetFunctionBuildConfigArrayOutput)
}

func (o LookupFunctionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupFunctionResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Environment }).(pulumi.StringOutput)
}

func (o LookupFunctionResultOutput) EventTriggers() GetFunctionEventTriggerArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionEventTrigger { return v.EventTriggers }).(GetFunctionEventTriggerArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFunctionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFunctionResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFunctionResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupFunctionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupFunctionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupFunctionResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFunctionResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupFunctionResultOutput) ServiceConfigs() GetFunctionServiceConfigArrayOutput {
	return o.ApplyT(func(v LookupFunctionResult) []GetFunctionServiceConfig { return v.ServiceConfigs }).(GetFunctionServiceConfigArrayOutput)
}

func (o LookupFunctionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupFunctionResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFunctionResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFunctionResultOutput{})
}
