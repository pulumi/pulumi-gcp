// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkeonprem

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-gcp/sdk/v6/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type BareMetalAdminClusterClusterOperations struct {
	// Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
	EnableApplicationLogs *bool `pulumi:"enableApplicationLogs"`
}

// BareMetalAdminClusterClusterOperationsInput is an input type that accepts BareMetalAdminClusterClusterOperationsArgs and BareMetalAdminClusterClusterOperationsOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterClusterOperationsInput` via:
//
//	BareMetalAdminClusterClusterOperationsArgs{...}
type BareMetalAdminClusterClusterOperationsInput interface {
	pulumi.Input

	ToBareMetalAdminClusterClusterOperationsOutput() BareMetalAdminClusterClusterOperationsOutput
	ToBareMetalAdminClusterClusterOperationsOutputWithContext(context.Context) BareMetalAdminClusterClusterOperationsOutput
}

type BareMetalAdminClusterClusterOperationsArgs struct {
	// Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
	EnableApplicationLogs pulumi.BoolPtrInput `pulumi:"enableApplicationLogs"`
}

func (BareMetalAdminClusterClusterOperationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterClusterOperations)(nil)).Elem()
}

func (i BareMetalAdminClusterClusterOperationsArgs) ToBareMetalAdminClusterClusterOperationsOutput() BareMetalAdminClusterClusterOperationsOutput {
	return i.ToBareMetalAdminClusterClusterOperationsOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterClusterOperationsArgs) ToBareMetalAdminClusterClusterOperationsOutputWithContext(ctx context.Context) BareMetalAdminClusterClusterOperationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterClusterOperationsOutput)
}

func (i BareMetalAdminClusterClusterOperationsArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterClusterOperations] {
	return pulumix.Output[BareMetalAdminClusterClusterOperations]{
		OutputState: i.ToBareMetalAdminClusterClusterOperationsOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterClusterOperationsArgs) ToBareMetalAdminClusterClusterOperationsPtrOutput() BareMetalAdminClusterClusterOperationsPtrOutput {
	return i.ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterClusterOperationsArgs) ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterClusterOperationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterClusterOperationsOutput).ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterClusterOperationsPtrInput is an input type that accepts BareMetalAdminClusterClusterOperationsArgs, BareMetalAdminClusterClusterOperationsPtr and BareMetalAdminClusterClusterOperationsPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterClusterOperationsPtrInput` via:
//
//	        BareMetalAdminClusterClusterOperationsArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterClusterOperationsPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterClusterOperationsPtrOutput() BareMetalAdminClusterClusterOperationsPtrOutput
	ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(context.Context) BareMetalAdminClusterClusterOperationsPtrOutput
}

type bareMetalAdminClusterClusterOperationsPtrType BareMetalAdminClusterClusterOperationsArgs

func BareMetalAdminClusterClusterOperationsPtr(v *BareMetalAdminClusterClusterOperationsArgs) BareMetalAdminClusterClusterOperationsPtrInput {
	return (*bareMetalAdminClusterClusterOperationsPtrType)(v)
}

func (*bareMetalAdminClusterClusterOperationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterClusterOperations)(nil)).Elem()
}

func (i *bareMetalAdminClusterClusterOperationsPtrType) ToBareMetalAdminClusterClusterOperationsPtrOutput() BareMetalAdminClusterClusterOperationsPtrOutput {
	return i.ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterClusterOperationsPtrType) ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterClusterOperationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterClusterOperationsPtrOutput)
}

func (i *bareMetalAdminClusterClusterOperationsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterClusterOperations] {
	return pulumix.Output[*BareMetalAdminClusterClusterOperations]{
		OutputState: i.ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterClusterOperationsOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterClusterOperationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterClusterOperations)(nil)).Elem()
}

func (o BareMetalAdminClusterClusterOperationsOutput) ToBareMetalAdminClusterClusterOperationsOutput() BareMetalAdminClusterClusterOperationsOutput {
	return o
}

func (o BareMetalAdminClusterClusterOperationsOutput) ToBareMetalAdminClusterClusterOperationsOutputWithContext(ctx context.Context) BareMetalAdminClusterClusterOperationsOutput {
	return o
}

func (o BareMetalAdminClusterClusterOperationsOutput) ToBareMetalAdminClusterClusterOperationsPtrOutput() BareMetalAdminClusterClusterOperationsPtrOutput {
	return o.ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterClusterOperationsOutput) ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterClusterOperationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterClusterOperations) *BareMetalAdminClusterClusterOperations {
		return &v
	}).(BareMetalAdminClusterClusterOperationsPtrOutput)
}

func (o BareMetalAdminClusterClusterOperationsOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterClusterOperations] {
	return pulumix.Output[BareMetalAdminClusterClusterOperations]{
		OutputState: o.OutputState,
	}
}

// Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
func (o BareMetalAdminClusterClusterOperationsOutput) EnableApplicationLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterClusterOperations) *bool { return v.EnableApplicationLogs }).(pulumi.BoolPtrOutput)
}

type BareMetalAdminClusterClusterOperationsPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterClusterOperationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterClusterOperations)(nil)).Elem()
}

func (o BareMetalAdminClusterClusterOperationsPtrOutput) ToBareMetalAdminClusterClusterOperationsPtrOutput() BareMetalAdminClusterClusterOperationsPtrOutput {
	return o
}

func (o BareMetalAdminClusterClusterOperationsPtrOutput) ToBareMetalAdminClusterClusterOperationsPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterClusterOperationsPtrOutput {
	return o
}

func (o BareMetalAdminClusterClusterOperationsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterClusterOperations] {
	return pulumix.Output[*BareMetalAdminClusterClusterOperations]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterClusterOperationsPtrOutput) Elem() BareMetalAdminClusterClusterOperationsOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterClusterOperations) BareMetalAdminClusterClusterOperations {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterClusterOperations
		return ret
	}).(BareMetalAdminClusterClusterOperationsOutput)
}

// Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
func (o BareMetalAdminClusterClusterOperationsPtrOutput) EnableApplicationLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterClusterOperations) *bool {
		if v == nil {
			return nil
		}
		return v.EnableApplicationLogs
	}).(pulumi.BoolPtrOutput)
}

type BareMetalAdminClusterControlPlane struct {
	// Customizes the default API server args. Only a subset of
	// customized flags are supported. Please refer to the API server
	// documentation below to know the exact format:
	// https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
	// Structure is documented below.
	ApiServerArgs []BareMetalAdminClusterControlPlaneApiServerArg `pulumi:"apiServerArgs"`
	// Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster.
	// Structure is documented below.
	ControlPlaneNodePoolConfig BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig `pulumi:"controlPlaneNodePoolConfig"`
}

// BareMetalAdminClusterControlPlaneInput is an input type that accepts BareMetalAdminClusterControlPlaneArgs and BareMetalAdminClusterControlPlaneOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneInput` via:
//
//	BareMetalAdminClusterControlPlaneArgs{...}
type BareMetalAdminClusterControlPlaneInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneOutput() BareMetalAdminClusterControlPlaneOutput
	ToBareMetalAdminClusterControlPlaneOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneOutput
}

type BareMetalAdminClusterControlPlaneArgs struct {
	// Customizes the default API server args. Only a subset of
	// customized flags are supported. Please refer to the API server
	// documentation below to know the exact format:
	// https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
	// Structure is documented below.
	ApiServerArgs BareMetalAdminClusterControlPlaneApiServerArgArrayInput `pulumi:"apiServerArgs"`
	// Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster.
	// Structure is documented below.
	ControlPlaneNodePoolConfig BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigInput `pulumi:"controlPlaneNodePoolConfig"`
}

func (BareMetalAdminClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlane)(nil)).Elem()
}

func (i BareMetalAdminClusterControlPlaneArgs) ToBareMetalAdminClusterControlPlaneOutput() BareMetalAdminClusterControlPlaneOutput {
	return i.ToBareMetalAdminClusterControlPlaneOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneArgs) ToBareMetalAdminClusterControlPlaneOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneOutput)
}

func (i BareMetalAdminClusterControlPlaneArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlane] {
	return pulumix.Output[BareMetalAdminClusterControlPlane]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterControlPlaneArgs) ToBareMetalAdminClusterControlPlanePtrOutput() BareMetalAdminClusterControlPlanePtrOutput {
	return i.ToBareMetalAdminClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneArgs) ToBareMetalAdminClusterControlPlanePtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneOutput).ToBareMetalAdminClusterControlPlanePtrOutputWithContext(ctx)
}

// BareMetalAdminClusterControlPlanePtrInput is an input type that accepts BareMetalAdminClusterControlPlaneArgs, BareMetalAdminClusterControlPlanePtr and BareMetalAdminClusterControlPlanePtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlanePtrInput` via:
//
//	        BareMetalAdminClusterControlPlaneArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterControlPlanePtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlanePtrOutput() BareMetalAdminClusterControlPlanePtrOutput
	ToBareMetalAdminClusterControlPlanePtrOutputWithContext(context.Context) BareMetalAdminClusterControlPlanePtrOutput
}

type bareMetalAdminClusterControlPlanePtrType BareMetalAdminClusterControlPlaneArgs

func BareMetalAdminClusterControlPlanePtr(v *BareMetalAdminClusterControlPlaneArgs) BareMetalAdminClusterControlPlanePtrInput {
	return (*bareMetalAdminClusterControlPlanePtrType)(v)
}

func (*bareMetalAdminClusterControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterControlPlane)(nil)).Elem()
}

func (i *bareMetalAdminClusterControlPlanePtrType) ToBareMetalAdminClusterControlPlanePtrOutput() BareMetalAdminClusterControlPlanePtrOutput {
	return i.ToBareMetalAdminClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterControlPlanePtrType) ToBareMetalAdminClusterControlPlanePtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlanePtrOutput)
}

func (i *bareMetalAdminClusterControlPlanePtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterControlPlane] {
	return pulumix.Output[*BareMetalAdminClusterControlPlane]{
		OutputState: i.ToBareMetalAdminClusterControlPlanePtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlane)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneOutput) ToBareMetalAdminClusterControlPlaneOutput() BareMetalAdminClusterControlPlaneOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneOutput) ToBareMetalAdminClusterControlPlaneOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneOutput) ToBareMetalAdminClusterControlPlanePtrOutput() BareMetalAdminClusterControlPlanePtrOutput {
	return o.ToBareMetalAdminClusterControlPlanePtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterControlPlaneOutput) ToBareMetalAdminClusterControlPlanePtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterControlPlane) *BareMetalAdminClusterControlPlane {
		return &v
	}).(BareMetalAdminClusterControlPlanePtrOutput)
}

func (o BareMetalAdminClusterControlPlaneOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlane] {
	return pulumix.Output[BareMetalAdminClusterControlPlane]{
		OutputState: o.OutputState,
	}
}

// Customizes the default API server args. Only a subset of
// customized flags are supported. Please refer to the API server
// documentation below to know the exact format:
// https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
// Structure is documented below.
func (o BareMetalAdminClusterControlPlaneOutput) ApiServerArgs() BareMetalAdminClusterControlPlaneApiServerArgArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlane) []BareMetalAdminClusterControlPlaneApiServerArg {
		return v.ApiServerArgs
	}).(BareMetalAdminClusterControlPlaneApiServerArgArrayOutput)
}

// Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster.
// Structure is documented below.
func (o BareMetalAdminClusterControlPlaneOutput) ControlPlaneNodePoolConfig() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlane) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig {
		return v.ControlPlaneNodePoolConfig
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput)
}

type BareMetalAdminClusterControlPlanePtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterControlPlane)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlanePtrOutput) ToBareMetalAdminClusterControlPlanePtrOutput() BareMetalAdminClusterControlPlanePtrOutput {
	return o
}

func (o BareMetalAdminClusterControlPlanePtrOutput) ToBareMetalAdminClusterControlPlanePtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlanePtrOutput {
	return o
}

func (o BareMetalAdminClusterControlPlanePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterControlPlane] {
	return pulumix.Output[*BareMetalAdminClusterControlPlane]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterControlPlanePtrOutput) Elem() BareMetalAdminClusterControlPlaneOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlane) BareMetalAdminClusterControlPlane {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterControlPlane
		return ret
	}).(BareMetalAdminClusterControlPlaneOutput)
}

// Customizes the default API server args. Only a subset of
// customized flags are supported. Please refer to the API server
// documentation below to know the exact format:
// https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
// Structure is documented below.
func (o BareMetalAdminClusterControlPlanePtrOutput) ApiServerArgs() BareMetalAdminClusterControlPlaneApiServerArgArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlane) []BareMetalAdminClusterControlPlaneApiServerArg {
		if v == nil {
			return nil
		}
		return v.ApiServerArgs
	}).(BareMetalAdminClusterControlPlaneApiServerArgArrayOutput)
}

// Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster.
// Structure is documented below.
func (o BareMetalAdminClusterControlPlanePtrOutput) ControlPlaneNodePoolConfig() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlane) *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig {
		if v == nil {
			return nil
		}
		return &v.ControlPlaneNodePoolConfig
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput)
}

type BareMetalAdminClusterControlPlaneApiServerArg struct {
	// The argument name as it appears on the API Server command line please make sure to remove the leading dashes.
	Argument string `pulumi:"argument"`
	// The value of the arg as it will be passed to the API Server command line.
	Value string `pulumi:"value"`
}

// BareMetalAdminClusterControlPlaneApiServerArgInput is an input type that accepts BareMetalAdminClusterControlPlaneApiServerArgArgs and BareMetalAdminClusterControlPlaneApiServerArgOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneApiServerArgInput` via:
//
//	BareMetalAdminClusterControlPlaneApiServerArgArgs{...}
type BareMetalAdminClusterControlPlaneApiServerArgInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneApiServerArgOutput() BareMetalAdminClusterControlPlaneApiServerArgOutput
	ToBareMetalAdminClusterControlPlaneApiServerArgOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneApiServerArgOutput
}

type BareMetalAdminClusterControlPlaneApiServerArgArgs struct {
	// The argument name as it appears on the API Server command line please make sure to remove the leading dashes.
	Argument pulumi.StringInput `pulumi:"argument"`
	// The value of the arg as it will be passed to the API Server command line.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BareMetalAdminClusterControlPlaneApiServerArgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneApiServerArg)(nil)).Elem()
}

func (i BareMetalAdminClusterControlPlaneApiServerArgArgs) ToBareMetalAdminClusterControlPlaneApiServerArgOutput() BareMetalAdminClusterControlPlaneApiServerArgOutput {
	return i.ToBareMetalAdminClusterControlPlaneApiServerArgOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneApiServerArgArgs) ToBareMetalAdminClusterControlPlaneApiServerArgOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneApiServerArgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneApiServerArgOutput)
}

func (i BareMetalAdminClusterControlPlaneApiServerArgArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneApiServerArg] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneApiServerArg]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneApiServerArgOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterControlPlaneApiServerArgArrayInput is an input type that accepts BareMetalAdminClusterControlPlaneApiServerArgArray and BareMetalAdminClusterControlPlaneApiServerArgArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneApiServerArgArrayInput` via:
//
//	BareMetalAdminClusterControlPlaneApiServerArgArray{ BareMetalAdminClusterControlPlaneApiServerArgArgs{...} }
type BareMetalAdminClusterControlPlaneApiServerArgArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneApiServerArgArrayOutput() BareMetalAdminClusterControlPlaneApiServerArgArrayOutput
	ToBareMetalAdminClusterControlPlaneApiServerArgArrayOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneApiServerArgArrayOutput
}

type BareMetalAdminClusterControlPlaneApiServerArgArray []BareMetalAdminClusterControlPlaneApiServerArgInput

func (BareMetalAdminClusterControlPlaneApiServerArgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterControlPlaneApiServerArg)(nil)).Elem()
}

func (i BareMetalAdminClusterControlPlaneApiServerArgArray) ToBareMetalAdminClusterControlPlaneApiServerArgArrayOutput() BareMetalAdminClusterControlPlaneApiServerArgArrayOutput {
	return i.ToBareMetalAdminClusterControlPlaneApiServerArgArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneApiServerArgArray) ToBareMetalAdminClusterControlPlaneApiServerArgArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneApiServerArgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneApiServerArgArrayOutput)
}

func (i BareMetalAdminClusterControlPlaneApiServerArgArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterControlPlaneApiServerArg] {
	return pulumix.Output[[]BareMetalAdminClusterControlPlaneApiServerArg]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneApiServerArgArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterControlPlaneApiServerArgOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneApiServerArgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneApiServerArg)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneApiServerArgOutput) ToBareMetalAdminClusterControlPlaneApiServerArgOutput() BareMetalAdminClusterControlPlaneApiServerArgOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneApiServerArgOutput) ToBareMetalAdminClusterControlPlaneApiServerArgOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneApiServerArgOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneApiServerArgOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneApiServerArg] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneApiServerArg]{
		OutputState: o.OutputState,
	}
}

// The argument name as it appears on the API Server command line please make sure to remove the leading dashes.
func (o BareMetalAdminClusterControlPlaneApiServerArgOutput) Argument() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneApiServerArg) string { return v.Argument }).(pulumi.StringOutput)
}

// The value of the arg as it will be passed to the API Server command line.
func (o BareMetalAdminClusterControlPlaneApiServerArgOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneApiServerArg) string { return v.Value }).(pulumi.StringOutput)
}

type BareMetalAdminClusterControlPlaneApiServerArgArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneApiServerArgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterControlPlaneApiServerArg)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneApiServerArgArrayOutput) ToBareMetalAdminClusterControlPlaneApiServerArgArrayOutput() BareMetalAdminClusterControlPlaneApiServerArgArrayOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneApiServerArgArrayOutput) ToBareMetalAdminClusterControlPlaneApiServerArgArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneApiServerArgArrayOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneApiServerArgArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterControlPlaneApiServerArg] {
	return pulumix.Output[[]BareMetalAdminClusterControlPlaneApiServerArg]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterControlPlaneApiServerArgArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterControlPlaneApiServerArgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterControlPlaneApiServerArg {
		return vs[0].([]BareMetalAdminClusterControlPlaneApiServerArg)[vs[1].(int)]
	}).(BareMetalAdminClusterControlPlaneApiServerArgOutput)
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig struct {
	// The generic configuration for a node pool running the control plane.
	// Structure is documented below.
	NodePoolConfig BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig `pulumi:"nodePoolConfig"`
}

// BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigInput is an input type that accepts BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs and BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigInput` via:
//
//	BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs{...}
type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput
	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs struct {
	// The generic configuration for a node pool running the control plane.
	// Structure is documented below.
	NodePoolConfig BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput `pulumi:"nodePoolConfig"`
}

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput)
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput).ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrInput is an input type that accepts BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs, BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtr and BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrInput` via:
//
//	        BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput
	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput
}

type bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrType BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs

func BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtr(v *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrInput {
	return (*bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrType)(v)
}

func (*bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrType) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrType) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput)
}

func (i *bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig] {
	return pulumix.Output[*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig) *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig {
		return &v
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput)
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// The generic configuration for a node pool running the control plane.
// Structure is documented below.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput) NodePoolConfig() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig {
		return v.NodePoolConfig
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput)
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig] {
	return pulumix.Output[*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) Elem() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig
		return ret
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput)
}

// The generic configuration for a node pool running the control plane.
// Structure is documented below.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) NodePoolConfig() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfig) *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig {
		if v == nil {
			return nil
		}
		return &v.NodePoolConfig
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput)
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs []BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem *string `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints []BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint `pulumi:"taints"`
}

// BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput is an input type that accepts BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs and BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput` via:
//
//	BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{...}
type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput
	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem pulumi.StringPtrInput `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput `pulumi:"taints"`
}

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput)
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput).ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput is an input type that accepts BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs, BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtr and BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput` via:
//
//	        BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput
	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput
}

type bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs

func BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtr(v *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput {
	return (*bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType)(v)
}

func (*bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput)
}

func (i *bareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig] {
	return pulumix.Output[*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig {
		return &v
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput)
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) NodeConfigs() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) []BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig {
		return v.NodeConfigs
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) *string {
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) Taints() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) []BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint {
		return v.Taints
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput)
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig] {
	return pulumix.Output[*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) Elem() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig
		return ret
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) NodeConfigs() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) []BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig {
		if v == nil {
			return nil
		}
		return v.NodeConfigs
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) Taints() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) []BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput)
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp *string `pulumi:"nodeIp"`
}

// BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput is an input type that accepts BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs and BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput` via:
//
//	BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{...}
type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput
	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp pulumi.StringPtrInput `pulumi:"nodeIp"`
}

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput)
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput is an input type that accepts BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray and BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput` via:
//
//	BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray{ BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{...} }
type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput
	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray []BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The default IPv4 address for SSH access and Kubernetes node.
// Example: 192.168.0.1
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) NodeIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig) *string {
		return v.NodeIp
	}).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig {
		return vs[0].([]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)[vs[1].(int)]
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput)
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	Effect *string `pulumi:"effect"`
	// Key associated with the effect.
	Key *string `pulumi:"key"`
	// Value associated with the effect.
	Value *string `pulumi:"value"`
}

// BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput is an input type that accepts BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs and BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput` via:
//
//	BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs{...}
type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput
	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key associated with the effect.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value associated with the effect.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput)
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput is an input type that accepts BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray and BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput` via:
//
//	BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray{ BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs{...} }
type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput
	ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray []BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput)
}

func (i BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint]{
		OutputState: i.ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

// Specifies the nodes operating system (default: LINUX).
// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint) *string {
		return v.Effect
	}).(pulumi.StringPtrOutput)
}

// Key associated with the effect.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Value associated with the effect.
func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) ToBareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint {
		return vs[0].([]BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)[vs[1].(int)]
	}).(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput)
}

type BareMetalAdminClusterFleet struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this cluster.
	// Membership names are formatted as
	// `projects/<project-number>/locations/<location>/memberships/<cluster-id>`.
	Membership *string `pulumi:"membership"`
}

// BareMetalAdminClusterFleetInput is an input type that accepts BareMetalAdminClusterFleetArgs and BareMetalAdminClusterFleetOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterFleetInput` via:
//
//	BareMetalAdminClusterFleetArgs{...}
type BareMetalAdminClusterFleetInput interface {
	pulumi.Input

	ToBareMetalAdminClusterFleetOutput() BareMetalAdminClusterFleetOutput
	ToBareMetalAdminClusterFleetOutputWithContext(context.Context) BareMetalAdminClusterFleetOutput
}

type BareMetalAdminClusterFleetArgs struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this cluster.
	// Membership names are formatted as
	// `projects/<project-number>/locations/<location>/memberships/<cluster-id>`.
	Membership pulumi.StringPtrInput `pulumi:"membership"`
}

func (BareMetalAdminClusterFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterFleet)(nil)).Elem()
}

func (i BareMetalAdminClusterFleetArgs) ToBareMetalAdminClusterFleetOutput() BareMetalAdminClusterFleetOutput {
	return i.ToBareMetalAdminClusterFleetOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterFleetArgs) ToBareMetalAdminClusterFleetOutputWithContext(ctx context.Context) BareMetalAdminClusterFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterFleetOutput)
}

func (i BareMetalAdminClusterFleetArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterFleet] {
	return pulumix.Output[BareMetalAdminClusterFleet]{
		OutputState: i.ToBareMetalAdminClusterFleetOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterFleetArrayInput is an input type that accepts BareMetalAdminClusterFleetArray and BareMetalAdminClusterFleetArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterFleetArrayInput` via:
//
//	BareMetalAdminClusterFleetArray{ BareMetalAdminClusterFleetArgs{...} }
type BareMetalAdminClusterFleetArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterFleetArrayOutput() BareMetalAdminClusterFleetArrayOutput
	ToBareMetalAdminClusterFleetArrayOutputWithContext(context.Context) BareMetalAdminClusterFleetArrayOutput
}

type BareMetalAdminClusterFleetArray []BareMetalAdminClusterFleetInput

func (BareMetalAdminClusterFleetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterFleet)(nil)).Elem()
}

func (i BareMetalAdminClusterFleetArray) ToBareMetalAdminClusterFleetArrayOutput() BareMetalAdminClusterFleetArrayOutput {
	return i.ToBareMetalAdminClusterFleetArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterFleetArray) ToBareMetalAdminClusterFleetArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterFleetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterFleetArrayOutput)
}

func (i BareMetalAdminClusterFleetArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterFleet] {
	return pulumix.Output[[]BareMetalAdminClusterFleet]{
		OutputState: i.ToBareMetalAdminClusterFleetArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterFleetOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterFleet)(nil)).Elem()
}

func (o BareMetalAdminClusterFleetOutput) ToBareMetalAdminClusterFleetOutput() BareMetalAdminClusterFleetOutput {
	return o
}

func (o BareMetalAdminClusterFleetOutput) ToBareMetalAdminClusterFleetOutputWithContext(ctx context.Context) BareMetalAdminClusterFleetOutput {
	return o
}

func (o BareMetalAdminClusterFleetOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterFleet] {
	return pulumix.Output[BareMetalAdminClusterFleet]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The name of the managed Hub Membership resource associated to this cluster.
// Membership names are formatted as
// `projects/<project-number>/locations/<location>/memberships/<cluster-id>`.
func (o BareMetalAdminClusterFleetOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterFleet) *string { return v.Membership }).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterFleetArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterFleetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterFleet)(nil)).Elem()
}

func (o BareMetalAdminClusterFleetArrayOutput) ToBareMetalAdminClusterFleetArrayOutput() BareMetalAdminClusterFleetArrayOutput {
	return o
}

func (o BareMetalAdminClusterFleetArrayOutput) ToBareMetalAdminClusterFleetArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterFleetArrayOutput {
	return o
}

func (o BareMetalAdminClusterFleetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterFleet] {
	return pulumix.Output[[]BareMetalAdminClusterFleet]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterFleetArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterFleetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterFleet {
		return vs[0].([]BareMetalAdminClusterFleet)[vs[1].(int)]
	}).(BareMetalAdminClusterFleetOutput)
}

type BareMetalAdminClusterLoadBalancer struct {
	// A nested object resource
	// Structure is documented below.
	ManualLbConfig *BareMetalAdminClusterLoadBalancerManualLbConfig `pulumi:"manualLbConfig"`
	// Specifies the load balancer ports.
	// Structure is documented below.
	PortConfig BareMetalAdminClusterLoadBalancerPortConfig `pulumi:"portConfig"`
	// Specified the Bare Metal Load Balancer Config
	// Structure is documented below.
	VipConfig BareMetalAdminClusterLoadBalancerVipConfig `pulumi:"vipConfig"`
}

// BareMetalAdminClusterLoadBalancerInput is an input type that accepts BareMetalAdminClusterLoadBalancerArgs and BareMetalAdminClusterLoadBalancerOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterLoadBalancerInput` via:
//
//	BareMetalAdminClusterLoadBalancerArgs{...}
type BareMetalAdminClusterLoadBalancerInput interface {
	pulumi.Input

	ToBareMetalAdminClusterLoadBalancerOutput() BareMetalAdminClusterLoadBalancerOutput
	ToBareMetalAdminClusterLoadBalancerOutputWithContext(context.Context) BareMetalAdminClusterLoadBalancerOutput
}

type BareMetalAdminClusterLoadBalancerArgs struct {
	// A nested object resource
	// Structure is documented below.
	ManualLbConfig BareMetalAdminClusterLoadBalancerManualLbConfigPtrInput `pulumi:"manualLbConfig"`
	// Specifies the load balancer ports.
	// Structure is documented below.
	PortConfig BareMetalAdminClusterLoadBalancerPortConfigInput `pulumi:"portConfig"`
	// Specified the Bare Metal Load Balancer Config
	// Structure is documented below.
	VipConfig BareMetalAdminClusterLoadBalancerVipConfigInput `pulumi:"vipConfig"`
}

func (BareMetalAdminClusterLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterLoadBalancer)(nil)).Elem()
}

func (i BareMetalAdminClusterLoadBalancerArgs) ToBareMetalAdminClusterLoadBalancerOutput() BareMetalAdminClusterLoadBalancerOutput {
	return i.ToBareMetalAdminClusterLoadBalancerOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterLoadBalancerArgs) ToBareMetalAdminClusterLoadBalancerOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerOutput)
}

func (i BareMetalAdminClusterLoadBalancerArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterLoadBalancer] {
	return pulumix.Output[BareMetalAdminClusterLoadBalancer]{
		OutputState: i.ToBareMetalAdminClusterLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterLoadBalancerArgs) ToBareMetalAdminClusterLoadBalancerPtrOutput() BareMetalAdminClusterLoadBalancerPtrOutput {
	return i.ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterLoadBalancerArgs) ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerOutput).ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterLoadBalancerPtrInput is an input type that accepts BareMetalAdminClusterLoadBalancerArgs, BareMetalAdminClusterLoadBalancerPtr and BareMetalAdminClusterLoadBalancerPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterLoadBalancerPtrInput` via:
//
//	        BareMetalAdminClusterLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterLoadBalancerPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterLoadBalancerPtrOutput() BareMetalAdminClusterLoadBalancerPtrOutput
	ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(context.Context) BareMetalAdminClusterLoadBalancerPtrOutput
}

type bareMetalAdminClusterLoadBalancerPtrType BareMetalAdminClusterLoadBalancerArgs

func BareMetalAdminClusterLoadBalancerPtr(v *BareMetalAdminClusterLoadBalancerArgs) BareMetalAdminClusterLoadBalancerPtrInput {
	return (*bareMetalAdminClusterLoadBalancerPtrType)(v)
}

func (*bareMetalAdminClusterLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterLoadBalancer)(nil)).Elem()
}

func (i *bareMetalAdminClusterLoadBalancerPtrType) ToBareMetalAdminClusterLoadBalancerPtrOutput() BareMetalAdminClusterLoadBalancerPtrOutput {
	return i.ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterLoadBalancerPtrType) ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerPtrOutput)
}

func (i *bareMetalAdminClusterLoadBalancerPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterLoadBalancer] {
	return pulumix.Output[*BareMetalAdminClusterLoadBalancer]{
		OutputState: i.ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterLoadBalancerOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterLoadBalancer)(nil)).Elem()
}

func (o BareMetalAdminClusterLoadBalancerOutput) ToBareMetalAdminClusterLoadBalancerOutput() BareMetalAdminClusterLoadBalancerOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerOutput) ToBareMetalAdminClusterLoadBalancerOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerOutput) ToBareMetalAdminClusterLoadBalancerPtrOutput() BareMetalAdminClusterLoadBalancerPtrOutput {
	return o.ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterLoadBalancerOutput) ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterLoadBalancer) *BareMetalAdminClusterLoadBalancer {
		return &v
	}).(BareMetalAdminClusterLoadBalancerPtrOutput)
}

func (o BareMetalAdminClusterLoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterLoadBalancer] {
	return pulumix.Output[BareMetalAdminClusterLoadBalancer]{
		OutputState: o.OutputState,
	}
}

// A nested object resource
// Structure is documented below.
func (o BareMetalAdminClusterLoadBalancerOutput) ManualLbConfig() BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterLoadBalancer) *BareMetalAdminClusterLoadBalancerManualLbConfig {
		return v.ManualLbConfig
	}).(BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput)
}

// Specifies the load balancer ports.
// Structure is documented below.
func (o BareMetalAdminClusterLoadBalancerOutput) PortConfig() BareMetalAdminClusterLoadBalancerPortConfigOutput {
	return o.ApplyT(func(v BareMetalAdminClusterLoadBalancer) BareMetalAdminClusterLoadBalancerPortConfig {
		return v.PortConfig
	}).(BareMetalAdminClusterLoadBalancerPortConfigOutput)
}

// Specified the Bare Metal Load Balancer Config
// Structure is documented below.
func (o BareMetalAdminClusterLoadBalancerOutput) VipConfig() BareMetalAdminClusterLoadBalancerVipConfigOutput {
	return o.ApplyT(func(v BareMetalAdminClusterLoadBalancer) BareMetalAdminClusterLoadBalancerVipConfig {
		return v.VipConfig
	}).(BareMetalAdminClusterLoadBalancerVipConfigOutput)
}

type BareMetalAdminClusterLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterLoadBalancer)(nil)).Elem()
}

func (o BareMetalAdminClusterLoadBalancerPtrOutput) ToBareMetalAdminClusterLoadBalancerPtrOutput() BareMetalAdminClusterLoadBalancerPtrOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerPtrOutput) ToBareMetalAdminClusterLoadBalancerPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPtrOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterLoadBalancer] {
	return pulumix.Output[*BareMetalAdminClusterLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterLoadBalancerPtrOutput) Elem() BareMetalAdminClusterLoadBalancerOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancer) BareMetalAdminClusterLoadBalancer {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterLoadBalancer
		return ret
	}).(BareMetalAdminClusterLoadBalancerOutput)
}

// A nested object resource
// Structure is documented below.
func (o BareMetalAdminClusterLoadBalancerPtrOutput) ManualLbConfig() BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancer) *BareMetalAdminClusterLoadBalancerManualLbConfig {
		if v == nil {
			return nil
		}
		return v.ManualLbConfig
	}).(BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput)
}

// Specifies the load balancer ports.
// Structure is documented below.
func (o BareMetalAdminClusterLoadBalancerPtrOutput) PortConfig() BareMetalAdminClusterLoadBalancerPortConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancer) *BareMetalAdminClusterLoadBalancerPortConfig {
		if v == nil {
			return nil
		}
		return &v.PortConfig
	}).(BareMetalAdminClusterLoadBalancerPortConfigPtrOutput)
}

// Specified the Bare Metal Load Balancer Config
// Structure is documented below.
func (o BareMetalAdminClusterLoadBalancerPtrOutput) VipConfig() BareMetalAdminClusterLoadBalancerVipConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancer) *BareMetalAdminClusterLoadBalancerVipConfig {
		if v == nil {
			return nil
		}
		return &v.VipConfig
	}).(BareMetalAdminClusterLoadBalancerVipConfigPtrOutput)
}

type BareMetalAdminClusterLoadBalancerManualLbConfig struct {
	// Whether manual load balancing is enabled.
	Enabled bool `pulumi:"enabled"`
}

// BareMetalAdminClusterLoadBalancerManualLbConfigInput is an input type that accepts BareMetalAdminClusterLoadBalancerManualLbConfigArgs and BareMetalAdminClusterLoadBalancerManualLbConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterLoadBalancerManualLbConfigInput` via:
//
//	BareMetalAdminClusterLoadBalancerManualLbConfigArgs{...}
type BareMetalAdminClusterLoadBalancerManualLbConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterLoadBalancerManualLbConfigOutput() BareMetalAdminClusterLoadBalancerManualLbConfigOutput
	ToBareMetalAdminClusterLoadBalancerManualLbConfigOutputWithContext(context.Context) BareMetalAdminClusterLoadBalancerManualLbConfigOutput
}

type BareMetalAdminClusterLoadBalancerManualLbConfigArgs struct {
	// Whether manual load balancing is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (BareMetalAdminClusterLoadBalancerManualLbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterLoadBalancerManualLbConfigArgs) ToBareMetalAdminClusterLoadBalancerManualLbConfigOutput() BareMetalAdminClusterLoadBalancerManualLbConfigOutput {
	return i.ToBareMetalAdminClusterLoadBalancerManualLbConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterLoadBalancerManualLbConfigArgs) ToBareMetalAdminClusterLoadBalancerManualLbConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerManualLbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerManualLbConfigOutput)
}

func (i BareMetalAdminClusterLoadBalancerManualLbConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[BareMetalAdminClusterLoadBalancerManualLbConfig]{
		OutputState: i.ToBareMetalAdminClusterLoadBalancerManualLbConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterLoadBalancerManualLbConfigArgs) ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput() BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return i.ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterLoadBalancerManualLbConfigArgs) ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerManualLbConfigOutput).ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterLoadBalancerManualLbConfigPtrInput is an input type that accepts BareMetalAdminClusterLoadBalancerManualLbConfigArgs, BareMetalAdminClusterLoadBalancerManualLbConfigPtr and BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterLoadBalancerManualLbConfigPtrInput` via:
//
//	        BareMetalAdminClusterLoadBalancerManualLbConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterLoadBalancerManualLbConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput() BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput
	ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput
}

type bareMetalAdminClusterLoadBalancerManualLbConfigPtrType BareMetalAdminClusterLoadBalancerManualLbConfigArgs

func BareMetalAdminClusterLoadBalancerManualLbConfigPtr(v *BareMetalAdminClusterLoadBalancerManualLbConfigArgs) BareMetalAdminClusterLoadBalancerManualLbConfigPtrInput {
	return (*bareMetalAdminClusterLoadBalancerManualLbConfigPtrType)(v)
}

func (*bareMetalAdminClusterLoadBalancerManualLbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterLoadBalancerManualLbConfigPtrType) ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput() BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return i.ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterLoadBalancerManualLbConfigPtrType) ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput)
}

func (i *bareMetalAdminClusterLoadBalancerManualLbConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[*BareMetalAdminClusterLoadBalancerManualLbConfig]{
		OutputState: i.ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterLoadBalancerManualLbConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterLoadBalancerManualLbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterLoadBalancerManualLbConfigOutput) ToBareMetalAdminClusterLoadBalancerManualLbConfigOutput() BareMetalAdminClusterLoadBalancerManualLbConfigOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerManualLbConfigOutput) ToBareMetalAdminClusterLoadBalancerManualLbConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerManualLbConfigOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerManualLbConfigOutput) ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput() BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterLoadBalancerManualLbConfigOutput) ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterLoadBalancerManualLbConfig) *BareMetalAdminClusterLoadBalancerManualLbConfig {
		return &v
	}).(BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput)
}

func (o BareMetalAdminClusterLoadBalancerManualLbConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[BareMetalAdminClusterLoadBalancerManualLbConfig]{
		OutputState: o.OutputState,
	}
}

// Whether manual load balancing is enabled.
func (o BareMetalAdminClusterLoadBalancerManualLbConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BareMetalAdminClusterLoadBalancerManualLbConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput) ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput() BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput) ToBareMetalAdminClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[*BareMetalAdminClusterLoadBalancerManualLbConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput) Elem() BareMetalAdminClusterLoadBalancerManualLbConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancerManualLbConfig) BareMetalAdminClusterLoadBalancerManualLbConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterLoadBalancerManualLbConfig
		return ret
	}).(BareMetalAdminClusterLoadBalancerManualLbConfigOutput)
}

// Whether manual load balancing is enabled.
func (o BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancerManualLbConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type BareMetalAdminClusterLoadBalancerPortConfig struct {
	// The port that control plane hosted load balancers will listen on.
	ControlPlaneLoadBalancerPort int `pulumi:"controlPlaneLoadBalancerPort"`
}

// BareMetalAdminClusterLoadBalancerPortConfigInput is an input type that accepts BareMetalAdminClusterLoadBalancerPortConfigArgs and BareMetalAdminClusterLoadBalancerPortConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterLoadBalancerPortConfigInput` via:
//
//	BareMetalAdminClusterLoadBalancerPortConfigArgs{...}
type BareMetalAdminClusterLoadBalancerPortConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterLoadBalancerPortConfigOutput() BareMetalAdminClusterLoadBalancerPortConfigOutput
	ToBareMetalAdminClusterLoadBalancerPortConfigOutputWithContext(context.Context) BareMetalAdminClusterLoadBalancerPortConfigOutput
}

type BareMetalAdminClusterLoadBalancerPortConfigArgs struct {
	// The port that control plane hosted load balancers will listen on.
	ControlPlaneLoadBalancerPort pulumi.IntInput `pulumi:"controlPlaneLoadBalancerPort"`
}

func (BareMetalAdminClusterLoadBalancerPortConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterLoadBalancerPortConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterLoadBalancerPortConfigArgs) ToBareMetalAdminClusterLoadBalancerPortConfigOutput() BareMetalAdminClusterLoadBalancerPortConfigOutput {
	return i.ToBareMetalAdminClusterLoadBalancerPortConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterLoadBalancerPortConfigArgs) ToBareMetalAdminClusterLoadBalancerPortConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPortConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerPortConfigOutput)
}

func (i BareMetalAdminClusterLoadBalancerPortConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterLoadBalancerPortConfig] {
	return pulumix.Output[BareMetalAdminClusterLoadBalancerPortConfig]{
		OutputState: i.ToBareMetalAdminClusterLoadBalancerPortConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterLoadBalancerPortConfigArgs) ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutput() BareMetalAdminClusterLoadBalancerPortConfigPtrOutput {
	return i.ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterLoadBalancerPortConfigArgs) ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPortConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerPortConfigOutput).ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterLoadBalancerPortConfigPtrInput is an input type that accepts BareMetalAdminClusterLoadBalancerPortConfigArgs, BareMetalAdminClusterLoadBalancerPortConfigPtr and BareMetalAdminClusterLoadBalancerPortConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterLoadBalancerPortConfigPtrInput` via:
//
//	        BareMetalAdminClusterLoadBalancerPortConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterLoadBalancerPortConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutput() BareMetalAdminClusterLoadBalancerPortConfigPtrOutput
	ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterLoadBalancerPortConfigPtrOutput
}

type bareMetalAdminClusterLoadBalancerPortConfigPtrType BareMetalAdminClusterLoadBalancerPortConfigArgs

func BareMetalAdminClusterLoadBalancerPortConfigPtr(v *BareMetalAdminClusterLoadBalancerPortConfigArgs) BareMetalAdminClusterLoadBalancerPortConfigPtrInput {
	return (*bareMetalAdminClusterLoadBalancerPortConfigPtrType)(v)
}

func (*bareMetalAdminClusterLoadBalancerPortConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterLoadBalancerPortConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterLoadBalancerPortConfigPtrType) ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutput() BareMetalAdminClusterLoadBalancerPortConfigPtrOutput {
	return i.ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterLoadBalancerPortConfigPtrType) ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPortConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerPortConfigPtrOutput)
}

func (i *bareMetalAdminClusterLoadBalancerPortConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterLoadBalancerPortConfig] {
	return pulumix.Output[*BareMetalAdminClusterLoadBalancerPortConfig]{
		OutputState: i.ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterLoadBalancerPortConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterLoadBalancerPortConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterLoadBalancerPortConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterLoadBalancerPortConfigOutput) ToBareMetalAdminClusterLoadBalancerPortConfigOutput() BareMetalAdminClusterLoadBalancerPortConfigOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerPortConfigOutput) ToBareMetalAdminClusterLoadBalancerPortConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPortConfigOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerPortConfigOutput) ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutput() BareMetalAdminClusterLoadBalancerPortConfigPtrOutput {
	return o.ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterLoadBalancerPortConfigOutput) ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPortConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterLoadBalancerPortConfig) *BareMetalAdminClusterLoadBalancerPortConfig {
		return &v
	}).(BareMetalAdminClusterLoadBalancerPortConfigPtrOutput)
}

func (o BareMetalAdminClusterLoadBalancerPortConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterLoadBalancerPortConfig] {
	return pulumix.Output[BareMetalAdminClusterLoadBalancerPortConfig]{
		OutputState: o.OutputState,
	}
}

// The port that control plane hosted load balancers will listen on.
func (o BareMetalAdminClusterLoadBalancerPortConfigOutput) ControlPlaneLoadBalancerPort() pulumi.IntOutput {
	return o.ApplyT(func(v BareMetalAdminClusterLoadBalancerPortConfig) int { return v.ControlPlaneLoadBalancerPort }).(pulumi.IntOutput)
}

type BareMetalAdminClusterLoadBalancerPortConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterLoadBalancerPortConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterLoadBalancerPortConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterLoadBalancerPortConfigPtrOutput) ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutput() BareMetalAdminClusterLoadBalancerPortConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerPortConfigPtrOutput) ToBareMetalAdminClusterLoadBalancerPortConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerPortConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerPortConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterLoadBalancerPortConfig] {
	return pulumix.Output[*BareMetalAdminClusterLoadBalancerPortConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterLoadBalancerPortConfigPtrOutput) Elem() BareMetalAdminClusterLoadBalancerPortConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancerPortConfig) BareMetalAdminClusterLoadBalancerPortConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterLoadBalancerPortConfig
		return ret
	}).(BareMetalAdminClusterLoadBalancerPortConfigOutput)
}

// The port that control plane hosted load balancers will listen on.
func (o BareMetalAdminClusterLoadBalancerPortConfigPtrOutput) ControlPlaneLoadBalancerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancerPortConfig) *int {
		if v == nil {
			return nil
		}
		return &v.ControlPlaneLoadBalancerPort
	}).(pulumi.IntPtrOutput)
}

type BareMetalAdminClusterLoadBalancerVipConfig struct {
	// The VIP which you previously set aside for the Kubernetes API of this Bare Metal Admin Cluster.
	ControlPlaneVip string `pulumi:"controlPlaneVip"`
}

// BareMetalAdminClusterLoadBalancerVipConfigInput is an input type that accepts BareMetalAdminClusterLoadBalancerVipConfigArgs and BareMetalAdminClusterLoadBalancerVipConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterLoadBalancerVipConfigInput` via:
//
//	BareMetalAdminClusterLoadBalancerVipConfigArgs{...}
type BareMetalAdminClusterLoadBalancerVipConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterLoadBalancerVipConfigOutput() BareMetalAdminClusterLoadBalancerVipConfigOutput
	ToBareMetalAdminClusterLoadBalancerVipConfigOutputWithContext(context.Context) BareMetalAdminClusterLoadBalancerVipConfigOutput
}

type BareMetalAdminClusterLoadBalancerVipConfigArgs struct {
	// The VIP which you previously set aside for the Kubernetes API of this Bare Metal Admin Cluster.
	ControlPlaneVip pulumi.StringInput `pulumi:"controlPlaneVip"`
}

func (BareMetalAdminClusterLoadBalancerVipConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterLoadBalancerVipConfigArgs) ToBareMetalAdminClusterLoadBalancerVipConfigOutput() BareMetalAdminClusterLoadBalancerVipConfigOutput {
	return i.ToBareMetalAdminClusterLoadBalancerVipConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterLoadBalancerVipConfigArgs) ToBareMetalAdminClusterLoadBalancerVipConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerVipConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerVipConfigOutput)
}

func (i BareMetalAdminClusterLoadBalancerVipConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterLoadBalancerVipConfig] {
	return pulumix.Output[BareMetalAdminClusterLoadBalancerVipConfig]{
		OutputState: i.ToBareMetalAdminClusterLoadBalancerVipConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterLoadBalancerVipConfigArgs) ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutput() BareMetalAdminClusterLoadBalancerVipConfigPtrOutput {
	return i.ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterLoadBalancerVipConfigArgs) ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerVipConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerVipConfigOutput).ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterLoadBalancerVipConfigPtrInput is an input type that accepts BareMetalAdminClusterLoadBalancerVipConfigArgs, BareMetalAdminClusterLoadBalancerVipConfigPtr and BareMetalAdminClusterLoadBalancerVipConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterLoadBalancerVipConfigPtrInput` via:
//
//	        BareMetalAdminClusterLoadBalancerVipConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterLoadBalancerVipConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutput() BareMetalAdminClusterLoadBalancerVipConfigPtrOutput
	ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterLoadBalancerVipConfigPtrOutput
}

type bareMetalAdminClusterLoadBalancerVipConfigPtrType BareMetalAdminClusterLoadBalancerVipConfigArgs

func BareMetalAdminClusterLoadBalancerVipConfigPtr(v *BareMetalAdminClusterLoadBalancerVipConfigArgs) BareMetalAdminClusterLoadBalancerVipConfigPtrInput {
	return (*bareMetalAdminClusterLoadBalancerVipConfigPtrType)(v)
}

func (*bareMetalAdminClusterLoadBalancerVipConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterLoadBalancerVipConfigPtrType) ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutput() BareMetalAdminClusterLoadBalancerVipConfigPtrOutput {
	return i.ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterLoadBalancerVipConfigPtrType) ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerVipConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterLoadBalancerVipConfigPtrOutput)
}

func (i *bareMetalAdminClusterLoadBalancerVipConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterLoadBalancerVipConfig] {
	return pulumix.Output[*BareMetalAdminClusterLoadBalancerVipConfig]{
		OutputState: i.ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterLoadBalancerVipConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterLoadBalancerVipConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterLoadBalancerVipConfigOutput) ToBareMetalAdminClusterLoadBalancerVipConfigOutput() BareMetalAdminClusterLoadBalancerVipConfigOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerVipConfigOutput) ToBareMetalAdminClusterLoadBalancerVipConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerVipConfigOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerVipConfigOutput) ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutput() BareMetalAdminClusterLoadBalancerVipConfigPtrOutput {
	return o.ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterLoadBalancerVipConfigOutput) ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerVipConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterLoadBalancerVipConfig) *BareMetalAdminClusterLoadBalancerVipConfig {
		return &v
	}).(BareMetalAdminClusterLoadBalancerVipConfigPtrOutput)
}

func (o BareMetalAdminClusterLoadBalancerVipConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterLoadBalancerVipConfig] {
	return pulumix.Output[BareMetalAdminClusterLoadBalancerVipConfig]{
		OutputState: o.OutputState,
	}
}

// The VIP which you previously set aside for the Kubernetes API of this Bare Metal Admin Cluster.
func (o BareMetalAdminClusterLoadBalancerVipConfigOutput) ControlPlaneVip() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalAdminClusterLoadBalancerVipConfig) string { return v.ControlPlaneVip }).(pulumi.StringOutput)
}

type BareMetalAdminClusterLoadBalancerVipConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterLoadBalancerVipConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterLoadBalancerVipConfigPtrOutput) ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutput() BareMetalAdminClusterLoadBalancerVipConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerVipConfigPtrOutput) ToBareMetalAdminClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterLoadBalancerVipConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterLoadBalancerVipConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterLoadBalancerVipConfig] {
	return pulumix.Output[*BareMetalAdminClusterLoadBalancerVipConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterLoadBalancerVipConfigPtrOutput) Elem() BareMetalAdminClusterLoadBalancerVipConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancerVipConfig) BareMetalAdminClusterLoadBalancerVipConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterLoadBalancerVipConfig
		return ret
	}).(BareMetalAdminClusterLoadBalancerVipConfigOutput)
}

// The VIP which you previously set aside for the Kubernetes API of this Bare Metal Admin Cluster.
func (o BareMetalAdminClusterLoadBalancerVipConfigPtrOutput) ControlPlaneVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterLoadBalancerVipConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ControlPlaneVip
	}).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterMaintenanceConfig struct {
	// All IPv4 address from these ranges will be placed into maintenance mode.
	// Nodes in maintenance mode will be cordoned and drained. When both of these
	// are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set
	// on the node resource.
	MaintenanceAddressCidrBlocks []string `pulumi:"maintenanceAddressCidrBlocks"`
}

// BareMetalAdminClusterMaintenanceConfigInput is an input type that accepts BareMetalAdminClusterMaintenanceConfigArgs and BareMetalAdminClusterMaintenanceConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterMaintenanceConfigInput` via:
//
//	BareMetalAdminClusterMaintenanceConfigArgs{...}
type BareMetalAdminClusterMaintenanceConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterMaintenanceConfigOutput() BareMetalAdminClusterMaintenanceConfigOutput
	ToBareMetalAdminClusterMaintenanceConfigOutputWithContext(context.Context) BareMetalAdminClusterMaintenanceConfigOutput
}

type BareMetalAdminClusterMaintenanceConfigArgs struct {
	// All IPv4 address from these ranges will be placed into maintenance mode.
	// Nodes in maintenance mode will be cordoned and drained. When both of these
	// are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set
	// on the node resource.
	MaintenanceAddressCidrBlocks pulumi.StringArrayInput `pulumi:"maintenanceAddressCidrBlocks"`
}

func (BareMetalAdminClusterMaintenanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterMaintenanceConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterMaintenanceConfigArgs) ToBareMetalAdminClusterMaintenanceConfigOutput() BareMetalAdminClusterMaintenanceConfigOutput {
	return i.ToBareMetalAdminClusterMaintenanceConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterMaintenanceConfigArgs) ToBareMetalAdminClusterMaintenanceConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterMaintenanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterMaintenanceConfigOutput)
}

func (i BareMetalAdminClusterMaintenanceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterMaintenanceConfig] {
	return pulumix.Output[BareMetalAdminClusterMaintenanceConfig]{
		OutputState: i.ToBareMetalAdminClusterMaintenanceConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterMaintenanceConfigArgs) ToBareMetalAdminClusterMaintenanceConfigPtrOutput() BareMetalAdminClusterMaintenanceConfigPtrOutput {
	return i.ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterMaintenanceConfigArgs) ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterMaintenanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterMaintenanceConfigOutput).ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterMaintenanceConfigPtrInput is an input type that accepts BareMetalAdminClusterMaintenanceConfigArgs, BareMetalAdminClusterMaintenanceConfigPtr and BareMetalAdminClusterMaintenanceConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterMaintenanceConfigPtrInput` via:
//
//	        BareMetalAdminClusterMaintenanceConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterMaintenanceConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterMaintenanceConfigPtrOutput() BareMetalAdminClusterMaintenanceConfigPtrOutput
	ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterMaintenanceConfigPtrOutput
}

type bareMetalAdminClusterMaintenanceConfigPtrType BareMetalAdminClusterMaintenanceConfigArgs

func BareMetalAdminClusterMaintenanceConfigPtr(v *BareMetalAdminClusterMaintenanceConfigArgs) BareMetalAdminClusterMaintenanceConfigPtrInput {
	return (*bareMetalAdminClusterMaintenanceConfigPtrType)(v)
}

func (*bareMetalAdminClusterMaintenanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterMaintenanceConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterMaintenanceConfigPtrType) ToBareMetalAdminClusterMaintenanceConfigPtrOutput() BareMetalAdminClusterMaintenanceConfigPtrOutput {
	return i.ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterMaintenanceConfigPtrType) ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterMaintenanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterMaintenanceConfigPtrOutput)
}

func (i *bareMetalAdminClusterMaintenanceConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterMaintenanceConfig] {
	return pulumix.Output[*BareMetalAdminClusterMaintenanceConfig]{
		OutputState: i.ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterMaintenanceConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterMaintenanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterMaintenanceConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterMaintenanceConfigOutput) ToBareMetalAdminClusterMaintenanceConfigOutput() BareMetalAdminClusterMaintenanceConfigOutput {
	return o
}

func (o BareMetalAdminClusterMaintenanceConfigOutput) ToBareMetalAdminClusterMaintenanceConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterMaintenanceConfigOutput {
	return o
}

func (o BareMetalAdminClusterMaintenanceConfigOutput) ToBareMetalAdminClusterMaintenanceConfigPtrOutput() BareMetalAdminClusterMaintenanceConfigPtrOutput {
	return o.ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterMaintenanceConfigOutput) ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterMaintenanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterMaintenanceConfig) *BareMetalAdminClusterMaintenanceConfig {
		return &v
	}).(BareMetalAdminClusterMaintenanceConfigPtrOutput)
}

func (o BareMetalAdminClusterMaintenanceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterMaintenanceConfig] {
	return pulumix.Output[BareMetalAdminClusterMaintenanceConfig]{
		OutputState: o.OutputState,
	}
}

// All IPv4 address from these ranges will be placed into maintenance mode.
// Nodes in maintenance mode will be cordoned and drained. When both of these
// are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set
// on the node resource.
func (o BareMetalAdminClusterMaintenanceConfigOutput) MaintenanceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterMaintenanceConfig) []string { return v.MaintenanceAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

type BareMetalAdminClusterMaintenanceConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterMaintenanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterMaintenanceConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterMaintenanceConfigPtrOutput) ToBareMetalAdminClusterMaintenanceConfigPtrOutput() BareMetalAdminClusterMaintenanceConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterMaintenanceConfigPtrOutput) ToBareMetalAdminClusterMaintenanceConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterMaintenanceConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterMaintenanceConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterMaintenanceConfig] {
	return pulumix.Output[*BareMetalAdminClusterMaintenanceConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterMaintenanceConfigPtrOutput) Elem() BareMetalAdminClusterMaintenanceConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterMaintenanceConfig) BareMetalAdminClusterMaintenanceConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterMaintenanceConfig
		return ret
	}).(BareMetalAdminClusterMaintenanceConfigOutput)
}

// All IPv4 address from these ranges will be placed into maintenance mode.
// Nodes in maintenance mode will be cordoned and drained. When both of these
// are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set
// on the node resource.
func (o BareMetalAdminClusterMaintenanceConfigPtrOutput) MaintenanceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterMaintenanceConfig) []string {
		if v == nil {
			return nil
		}
		return v.MaintenanceAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

type BareMetalAdminClusterNetworkConfig struct {
	// A nested object resource
	// Structure is documented below.
	IslandModeCidr *BareMetalAdminClusterNetworkConfigIslandModeCidr `pulumi:"islandModeCidr"`
}

// BareMetalAdminClusterNetworkConfigInput is an input type that accepts BareMetalAdminClusterNetworkConfigArgs and BareMetalAdminClusterNetworkConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterNetworkConfigInput` via:
//
//	BareMetalAdminClusterNetworkConfigArgs{...}
type BareMetalAdminClusterNetworkConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterNetworkConfigOutput() BareMetalAdminClusterNetworkConfigOutput
	ToBareMetalAdminClusterNetworkConfigOutputWithContext(context.Context) BareMetalAdminClusterNetworkConfigOutput
}

type BareMetalAdminClusterNetworkConfigArgs struct {
	// A nested object resource
	// Structure is documented below.
	IslandModeCidr BareMetalAdminClusterNetworkConfigIslandModeCidrPtrInput `pulumi:"islandModeCidr"`
}

func (BareMetalAdminClusterNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterNetworkConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterNetworkConfigArgs) ToBareMetalAdminClusterNetworkConfigOutput() BareMetalAdminClusterNetworkConfigOutput {
	return i.ToBareMetalAdminClusterNetworkConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterNetworkConfigArgs) ToBareMetalAdminClusterNetworkConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNetworkConfigOutput)
}

func (i BareMetalAdminClusterNetworkConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterNetworkConfig] {
	return pulumix.Output[BareMetalAdminClusterNetworkConfig]{
		OutputState: i.ToBareMetalAdminClusterNetworkConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterNetworkConfigArgs) ToBareMetalAdminClusterNetworkConfigPtrOutput() BareMetalAdminClusterNetworkConfigPtrOutput {
	return i.ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterNetworkConfigArgs) ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNetworkConfigOutput).ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterNetworkConfigPtrInput is an input type that accepts BareMetalAdminClusterNetworkConfigArgs, BareMetalAdminClusterNetworkConfigPtr and BareMetalAdminClusterNetworkConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterNetworkConfigPtrInput` via:
//
//	        BareMetalAdminClusterNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterNetworkConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterNetworkConfigPtrOutput() BareMetalAdminClusterNetworkConfigPtrOutput
	ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterNetworkConfigPtrOutput
}

type bareMetalAdminClusterNetworkConfigPtrType BareMetalAdminClusterNetworkConfigArgs

func BareMetalAdminClusterNetworkConfigPtr(v *BareMetalAdminClusterNetworkConfigArgs) BareMetalAdminClusterNetworkConfigPtrInput {
	return (*bareMetalAdminClusterNetworkConfigPtrType)(v)
}

func (*bareMetalAdminClusterNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterNetworkConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterNetworkConfigPtrType) ToBareMetalAdminClusterNetworkConfigPtrOutput() BareMetalAdminClusterNetworkConfigPtrOutput {
	return i.ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterNetworkConfigPtrType) ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNetworkConfigPtrOutput)
}

func (i *bareMetalAdminClusterNetworkConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterNetworkConfig] {
	return pulumix.Output[*BareMetalAdminClusterNetworkConfig]{
		OutputState: i.ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterNetworkConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterNetworkConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterNetworkConfigOutput) ToBareMetalAdminClusterNetworkConfigOutput() BareMetalAdminClusterNetworkConfigOutput {
	return o
}

func (o BareMetalAdminClusterNetworkConfigOutput) ToBareMetalAdminClusterNetworkConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigOutput {
	return o
}

func (o BareMetalAdminClusterNetworkConfigOutput) ToBareMetalAdminClusterNetworkConfigPtrOutput() BareMetalAdminClusterNetworkConfigPtrOutput {
	return o.ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterNetworkConfigOutput) ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterNetworkConfig) *BareMetalAdminClusterNetworkConfig {
		return &v
	}).(BareMetalAdminClusterNetworkConfigPtrOutput)
}

func (o BareMetalAdminClusterNetworkConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterNetworkConfig] {
	return pulumix.Output[BareMetalAdminClusterNetworkConfig]{
		OutputState: o.OutputState,
	}
}

// A nested object resource
// Structure is documented below.
func (o BareMetalAdminClusterNetworkConfigOutput) IslandModeCidr() BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterNetworkConfig) *BareMetalAdminClusterNetworkConfigIslandModeCidr {
		return v.IslandModeCidr
	}).(BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput)
}

type BareMetalAdminClusterNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterNetworkConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterNetworkConfigPtrOutput) ToBareMetalAdminClusterNetworkConfigPtrOutput() BareMetalAdminClusterNetworkConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterNetworkConfigPtrOutput) ToBareMetalAdminClusterNetworkConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterNetworkConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterNetworkConfig] {
	return pulumix.Output[*BareMetalAdminClusterNetworkConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterNetworkConfigPtrOutput) Elem() BareMetalAdminClusterNetworkConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterNetworkConfig) BareMetalAdminClusterNetworkConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterNetworkConfig
		return ret
	}).(BareMetalAdminClusterNetworkConfigOutput)
}

// A nested object resource
// Structure is documented below.
func (o BareMetalAdminClusterNetworkConfigPtrOutput) IslandModeCidr() BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterNetworkConfig) *BareMetalAdminClusterNetworkConfigIslandModeCidr {
		if v == nil {
			return nil
		}
		return v.IslandModeCidr
	}).(BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput)
}

type BareMetalAdminClusterNetworkConfigIslandModeCidr struct {
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
	PodAddressCidrBlocks []string `pulumi:"podAddressCidrBlocks"`
	// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
	ServiceAddressCidrBlocks []string `pulumi:"serviceAddressCidrBlocks"`
}

// BareMetalAdminClusterNetworkConfigIslandModeCidrInput is an input type that accepts BareMetalAdminClusterNetworkConfigIslandModeCidrArgs and BareMetalAdminClusterNetworkConfigIslandModeCidrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterNetworkConfigIslandModeCidrInput` via:
//
//	BareMetalAdminClusterNetworkConfigIslandModeCidrArgs{...}
type BareMetalAdminClusterNetworkConfigIslandModeCidrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterNetworkConfigIslandModeCidrOutput() BareMetalAdminClusterNetworkConfigIslandModeCidrOutput
	ToBareMetalAdminClusterNetworkConfigIslandModeCidrOutputWithContext(context.Context) BareMetalAdminClusterNetworkConfigIslandModeCidrOutput
}

type BareMetalAdminClusterNetworkConfigIslandModeCidrArgs struct {
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
	PodAddressCidrBlocks pulumi.StringArrayInput `pulumi:"podAddressCidrBlocks"`
	// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
	ServiceAddressCidrBlocks pulumi.StringArrayInput `pulumi:"serviceAddressCidrBlocks"`
}

func (BareMetalAdminClusterNetworkConfigIslandModeCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterNetworkConfigIslandModeCidr)(nil)).Elem()
}

func (i BareMetalAdminClusterNetworkConfigIslandModeCidrArgs) ToBareMetalAdminClusterNetworkConfigIslandModeCidrOutput() BareMetalAdminClusterNetworkConfigIslandModeCidrOutput {
	return i.ToBareMetalAdminClusterNetworkConfigIslandModeCidrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterNetworkConfigIslandModeCidrArgs) ToBareMetalAdminClusterNetworkConfigIslandModeCidrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigIslandModeCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNetworkConfigIslandModeCidrOutput)
}

func (i BareMetalAdminClusterNetworkConfigIslandModeCidrArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterNetworkConfigIslandModeCidr] {
	return pulumix.Output[BareMetalAdminClusterNetworkConfigIslandModeCidr]{
		OutputState: i.ToBareMetalAdminClusterNetworkConfigIslandModeCidrOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterNetworkConfigIslandModeCidrArgs) ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return i.ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterNetworkConfigIslandModeCidrArgs) ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNetworkConfigIslandModeCidrOutput).ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterNetworkConfigIslandModeCidrPtrInput is an input type that accepts BareMetalAdminClusterNetworkConfigIslandModeCidrArgs, BareMetalAdminClusterNetworkConfigIslandModeCidrPtr and BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterNetworkConfigIslandModeCidrPtrInput` via:
//
//	        BareMetalAdminClusterNetworkConfigIslandModeCidrArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterNetworkConfigIslandModeCidrPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput
	ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(context.Context) BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput
}

type bareMetalAdminClusterNetworkConfigIslandModeCidrPtrType BareMetalAdminClusterNetworkConfigIslandModeCidrArgs

func BareMetalAdminClusterNetworkConfigIslandModeCidrPtr(v *BareMetalAdminClusterNetworkConfigIslandModeCidrArgs) BareMetalAdminClusterNetworkConfigIslandModeCidrPtrInput {
	return (*bareMetalAdminClusterNetworkConfigIslandModeCidrPtrType)(v)
}

func (*bareMetalAdminClusterNetworkConfigIslandModeCidrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterNetworkConfigIslandModeCidr)(nil)).Elem()
}

func (i *bareMetalAdminClusterNetworkConfigIslandModeCidrPtrType) ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return i.ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterNetworkConfigIslandModeCidrPtrType) ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput)
}

func (i *bareMetalAdminClusterNetworkConfigIslandModeCidrPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterNetworkConfigIslandModeCidr] {
	return pulumix.Output[*BareMetalAdminClusterNetworkConfigIslandModeCidr]{
		OutputState: i.ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterNetworkConfigIslandModeCidrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterNetworkConfigIslandModeCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterNetworkConfigIslandModeCidr)(nil)).Elem()
}

func (o BareMetalAdminClusterNetworkConfigIslandModeCidrOutput) ToBareMetalAdminClusterNetworkConfigIslandModeCidrOutput() BareMetalAdminClusterNetworkConfigIslandModeCidrOutput {
	return o
}

func (o BareMetalAdminClusterNetworkConfigIslandModeCidrOutput) ToBareMetalAdminClusterNetworkConfigIslandModeCidrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigIslandModeCidrOutput {
	return o
}

func (o BareMetalAdminClusterNetworkConfigIslandModeCidrOutput) ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return o.ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterNetworkConfigIslandModeCidrOutput) ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterNetworkConfigIslandModeCidr) *BareMetalAdminClusterNetworkConfigIslandModeCidr {
		return &v
	}).(BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput)
}

func (o BareMetalAdminClusterNetworkConfigIslandModeCidrOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterNetworkConfigIslandModeCidr] {
	return pulumix.Output[BareMetalAdminClusterNetworkConfigIslandModeCidr]{
		OutputState: o.OutputState,
	}
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
func (o BareMetalAdminClusterNetworkConfigIslandModeCidrOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterNetworkConfigIslandModeCidr) []string { return v.PodAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
func (o BareMetalAdminClusterNetworkConfigIslandModeCidrOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterNetworkConfigIslandModeCidr) []string { return v.ServiceAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

type BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterNetworkConfigIslandModeCidr)(nil)).Elem()
}

func (o BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput) ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return o
}

func (o BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput) ToBareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput {
	return o
}

func (o BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterNetworkConfigIslandModeCidr] {
	return pulumix.Output[*BareMetalAdminClusterNetworkConfigIslandModeCidr]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput) Elem() BareMetalAdminClusterNetworkConfigIslandModeCidrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterNetworkConfigIslandModeCidr) BareMetalAdminClusterNetworkConfigIslandModeCidr {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterNetworkConfigIslandModeCidr
		return ret
	}).(BareMetalAdminClusterNetworkConfigIslandModeCidrOutput)
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
func (o BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterNetworkConfigIslandModeCidr) []string {
		if v == nil {
			return nil
		}
		return v.PodAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
func (o BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterNetworkConfigIslandModeCidr) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

type BareMetalAdminClusterNodeAccessConfig struct {
	// LoginUser is the user name used to access node machines.
	// It defaults to "root" if not set.
	LoginUser *string `pulumi:"loginUser"`
}

// BareMetalAdminClusterNodeAccessConfigInput is an input type that accepts BareMetalAdminClusterNodeAccessConfigArgs and BareMetalAdminClusterNodeAccessConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterNodeAccessConfigInput` via:
//
//	BareMetalAdminClusterNodeAccessConfigArgs{...}
type BareMetalAdminClusterNodeAccessConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterNodeAccessConfigOutput() BareMetalAdminClusterNodeAccessConfigOutput
	ToBareMetalAdminClusterNodeAccessConfigOutputWithContext(context.Context) BareMetalAdminClusterNodeAccessConfigOutput
}

type BareMetalAdminClusterNodeAccessConfigArgs struct {
	// LoginUser is the user name used to access node machines.
	// It defaults to "root" if not set.
	LoginUser pulumi.StringPtrInput `pulumi:"loginUser"`
}

func (BareMetalAdminClusterNodeAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterNodeAccessConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterNodeAccessConfigArgs) ToBareMetalAdminClusterNodeAccessConfigOutput() BareMetalAdminClusterNodeAccessConfigOutput {
	return i.ToBareMetalAdminClusterNodeAccessConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterNodeAccessConfigArgs) ToBareMetalAdminClusterNodeAccessConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNodeAccessConfigOutput)
}

func (i BareMetalAdminClusterNodeAccessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterNodeAccessConfig] {
	return pulumix.Output[BareMetalAdminClusterNodeAccessConfig]{
		OutputState: i.ToBareMetalAdminClusterNodeAccessConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterNodeAccessConfigArgs) ToBareMetalAdminClusterNodeAccessConfigPtrOutput() BareMetalAdminClusterNodeAccessConfigPtrOutput {
	return i.ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterNodeAccessConfigArgs) ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNodeAccessConfigOutput).ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterNodeAccessConfigPtrInput is an input type that accepts BareMetalAdminClusterNodeAccessConfigArgs, BareMetalAdminClusterNodeAccessConfigPtr and BareMetalAdminClusterNodeAccessConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterNodeAccessConfigPtrInput` via:
//
//	        BareMetalAdminClusterNodeAccessConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterNodeAccessConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterNodeAccessConfigPtrOutput() BareMetalAdminClusterNodeAccessConfigPtrOutput
	ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterNodeAccessConfigPtrOutput
}

type bareMetalAdminClusterNodeAccessConfigPtrType BareMetalAdminClusterNodeAccessConfigArgs

func BareMetalAdminClusterNodeAccessConfigPtr(v *BareMetalAdminClusterNodeAccessConfigArgs) BareMetalAdminClusterNodeAccessConfigPtrInput {
	return (*bareMetalAdminClusterNodeAccessConfigPtrType)(v)
}

func (*bareMetalAdminClusterNodeAccessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterNodeAccessConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterNodeAccessConfigPtrType) ToBareMetalAdminClusterNodeAccessConfigPtrOutput() BareMetalAdminClusterNodeAccessConfigPtrOutput {
	return i.ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterNodeAccessConfigPtrType) ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNodeAccessConfigPtrOutput)
}

func (i *bareMetalAdminClusterNodeAccessConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterNodeAccessConfig] {
	return pulumix.Output[*BareMetalAdminClusterNodeAccessConfig]{
		OutputState: i.ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterNodeAccessConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterNodeAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterNodeAccessConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterNodeAccessConfigOutput) ToBareMetalAdminClusterNodeAccessConfigOutput() BareMetalAdminClusterNodeAccessConfigOutput {
	return o
}

func (o BareMetalAdminClusterNodeAccessConfigOutput) ToBareMetalAdminClusterNodeAccessConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeAccessConfigOutput {
	return o
}

func (o BareMetalAdminClusterNodeAccessConfigOutput) ToBareMetalAdminClusterNodeAccessConfigPtrOutput() BareMetalAdminClusterNodeAccessConfigPtrOutput {
	return o.ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterNodeAccessConfigOutput) ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeAccessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterNodeAccessConfig) *BareMetalAdminClusterNodeAccessConfig {
		return &v
	}).(BareMetalAdminClusterNodeAccessConfigPtrOutput)
}

func (o BareMetalAdminClusterNodeAccessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterNodeAccessConfig] {
	return pulumix.Output[BareMetalAdminClusterNodeAccessConfig]{
		OutputState: o.OutputState,
	}
}

// LoginUser is the user name used to access node machines.
// It defaults to "root" if not set.
func (o BareMetalAdminClusterNodeAccessConfigOutput) LoginUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterNodeAccessConfig) *string { return v.LoginUser }).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterNodeAccessConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterNodeAccessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterNodeAccessConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterNodeAccessConfigPtrOutput) ToBareMetalAdminClusterNodeAccessConfigPtrOutput() BareMetalAdminClusterNodeAccessConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterNodeAccessConfigPtrOutput) ToBareMetalAdminClusterNodeAccessConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeAccessConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterNodeAccessConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterNodeAccessConfig] {
	return pulumix.Output[*BareMetalAdminClusterNodeAccessConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterNodeAccessConfigPtrOutput) Elem() BareMetalAdminClusterNodeAccessConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterNodeAccessConfig) BareMetalAdminClusterNodeAccessConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterNodeAccessConfig
		return ret
	}).(BareMetalAdminClusterNodeAccessConfigOutput)
}

// LoginUser is the user name used to access node machines.
// It defaults to "root" if not set.
func (o BareMetalAdminClusterNodeAccessConfigPtrOutput) LoginUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterNodeAccessConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoginUser
	}).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterNodeConfig struct {
	// The maximum number of pods a node can run. The size of the CIDR range
	// assigned to the node will be derived from this parameter.
	MaxPodsPerNode *int `pulumi:"maxPodsPerNode"`
}

// BareMetalAdminClusterNodeConfigInput is an input type that accepts BareMetalAdminClusterNodeConfigArgs and BareMetalAdminClusterNodeConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterNodeConfigInput` via:
//
//	BareMetalAdminClusterNodeConfigArgs{...}
type BareMetalAdminClusterNodeConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterNodeConfigOutput() BareMetalAdminClusterNodeConfigOutput
	ToBareMetalAdminClusterNodeConfigOutputWithContext(context.Context) BareMetalAdminClusterNodeConfigOutput
}

type BareMetalAdminClusterNodeConfigArgs struct {
	// The maximum number of pods a node can run. The size of the CIDR range
	// assigned to the node will be derived from this parameter.
	MaxPodsPerNode pulumi.IntPtrInput `pulumi:"maxPodsPerNode"`
}

func (BareMetalAdminClusterNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterNodeConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterNodeConfigArgs) ToBareMetalAdminClusterNodeConfigOutput() BareMetalAdminClusterNodeConfigOutput {
	return i.ToBareMetalAdminClusterNodeConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterNodeConfigArgs) ToBareMetalAdminClusterNodeConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNodeConfigOutput)
}

func (i BareMetalAdminClusterNodeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterNodeConfig] {
	return pulumix.Output[BareMetalAdminClusterNodeConfig]{
		OutputState: i.ToBareMetalAdminClusterNodeConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterNodeConfigArgs) ToBareMetalAdminClusterNodeConfigPtrOutput() BareMetalAdminClusterNodeConfigPtrOutput {
	return i.ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterNodeConfigArgs) ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNodeConfigOutput).ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterNodeConfigPtrInput is an input type that accepts BareMetalAdminClusterNodeConfigArgs, BareMetalAdminClusterNodeConfigPtr and BareMetalAdminClusterNodeConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterNodeConfigPtrInput` via:
//
//	        BareMetalAdminClusterNodeConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterNodeConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterNodeConfigPtrOutput() BareMetalAdminClusterNodeConfigPtrOutput
	ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterNodeConfigPtrOutput
}

type bareMetalAdminClusterNodeConfigPtrType BareMetalAdminClusterNodeConfigArgs

func BareMetalAdminClusterNodeConfigPtr(v *BareMetalAdminClusterNodeConfigArgs) BareMetalAdminClusterNodeConfigPtrInput {
	return (*bareMetalAdminClusterNodeConfigPtrType)(v)
}

func (*bareMetalAdminClusterNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterNodeConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterNodeConfigPtrType) ToBareMetalAdminClusterNodeConfigPtrOutput() BareMetalAdminClusterNodeConfigPtrOutput {
	return i.ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterNodeConfigPtrType) ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterNodeConfigPtrOutput)
}

func (i *bareMetalAdminClusterNodeConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterNodeConfig] {
	return pulumix.Output[*BareMetalAdminClusterNodeConfig]{
		OutputState: i.ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterNodeConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterNodeConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterNodeConfigOutput) ToBareMetalAdminClusterNodeConfigOutput() BareMetalAdminClusterNodeConfigOutput {
	return o
}

func (o BareMetalAdminClusterNodeConfigOutput) ToBareMetalAdminClusterNodeConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeConfigOutput {
	return o
}

func (o BareMetalAdminClusterNodeConfigOutput) ToBareMetalAdminClusterNodeConfigPtrOutput() BareMetalAdminClusterNodeConfigPtrOutput {
	return o.ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterNodeConfigOutput) ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterNodeConfig) *BareMetalAdminClusterNodeConfig {
		return &v
	}).(BareMetalAdminClusterNodeConfigPtrOutput)
}

func (o BareMetalAdminClusterNodeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterNodeConfig] {
	return pulumix.Output[BareMetalAdminClusterNodeConfig]{
		OutputState: o.OutputState,
	}
}

// The maximum number of pods a node can run. The size of the CIDR range
// assigned to the node will be derived from this parameter.
func (o BareMetalAdminClusterNodeConfigOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterNodeConfig) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

type BareMetalAdminClusterNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterNodeConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterNodeConfigPtrOutput) ToBareMetalAdminClusterNodeConfigPtrOutput() BareMetalAdminClusterNodeConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterNodeConfigPtrOutput) ToBareMetalAdminClusterNodeConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterNodeConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterNodeConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterNodeConfig] {
	return pulumix.Output[*BareMetalAdminClusterNodeConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterNodeConfigPtrOutput) Elem() BareMetalAdminClusterNodeConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterNodeConfig) BareMetalAdminClusterNodeConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterNodeConfig
		return ret
	}).(BareMetalAdminClusterNodeConfigOutput)
}

// The maximum number of pods a node can run. The size of the CIDR range
// assigned to the node will be derived from this parameter.
func (o BareMetalAdminClusterNodeConfigPtrOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNode
	}).(pulumi.IntPtrOutput)
}

type BareMetalAdminClusterProxy struct {
	// A list of IPs, hostnames, and domains that should skip the proxy.
	// Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
	NoProxies []string `pulumi:"noProxies"`
	// Specifies the address of your proxy server.
	// Examples: http://domain
	// WARNING: Do not provide credentials in the format
	// http://(username:password@)domain these will be rejected by the server.
	Uri string `pulumi:"uri"`
}

// BareMetalAdminClusterProxyInput is an input type that accepts BareMetalAdminClusterProxyArgs and BareMetalAdminClusterProxyOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterProxyInput` via:
//
//	BareMetalAdminClusterProxyArgs{...}
type BareMetalAdminClusterProxyInput interface {
	pulumi.Input

	ToBareMetalAdminClusterProxyOutput() BareMetalAdminClusterProxyOutput
	ToBareMetalAdminClusterProxyOutputWithContext(context.Context) BareMetalAdminClusterProxyOutput
}

type BareMetalAdminClusterProxyArgs struct {
	// A list of IPs, hostnames, and domains that should skip the proxy.
	// Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
	NoProxies pulumi.StringArrayInput `pulumi:"noProxies"`
	// Specifies the address of your proxy server.
	// Examples: http://domain
	// WARNING: Do not provide credentials in the format
	// http://(username:password@)domain these will be rejected by the server.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (BareMetalAdminClusterProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterProxy)(nil)).Elem()
}

func (i BareMetalAdminClusterProxyArgs) ToBareMetalAdminClusterProxyOutput() BareMetalAdminClusterProxyOutput {
	return i.ToBareMetalAdminClusterProxyOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterProxyArgs) ToBareMetalAdminClusterProxyOutputWithContext(ctx context.Context) BareMetalAdminClusterProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterProxyOutput)
}

func (i BareMetalAdminClusterProxyArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterProxy] {
	return pulumix.Output[BareMetalAdminClusterProxy]{
		OutputState: i.ToBareMetalAdminClusterProxyOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterProxyArgs) ToBareMetalAdminClusterProxyPtrOutput() BareMetalAdminClusterProxyPtrOutput {
	return i.ToBareMetalAdminClusterProxyPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterProxyArgs) ToBareMetalAdminClusterProxyPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterProxyOutput).ToBareMetalAdminClusterProxyPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterProxyPtrInput is an input type that accepts BareMetalAdminClusterProxyArgs, BareMetalAdminClusterProxyPtr and BareMetalAdminClusterProxyPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterProxyPtrInput` via:
//
//	        BareMetalAdminClusterProxyArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterProxyPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterProxyPtrOutput() BareMetalAdminClusterProxyPtrOutput
	ToBareMetalAdminClusterProxyPtrOutputWithContext(context.Context) BareMetalAdminClusterProxyPtrOutput
}

type bareMetalAdminClusterProxyPtrType BareMetalAdminClusterProxyArgs

func BareMetalAdminClusterProxyPtr(v *BareMetalAdminClusterProxyArgs) BareMetalAdminClusterProxyPtrInput {
	return (*bareMetalAdminClusterProxyPtrType)(v)
}

func (*bareMetalAdminClusterProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterProxy)(nil)).Elem()
}

func (i *bareMetalAdminClusterProxyPtrType) ToBareMetalAdminClusterProxyPtrOutput() BareMetalAdminClusterProxyPtrOutput {
	return i.ToBareMetalAdminClusterProxyPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterProxyPtrType) ToBareMetalAdminClusterProxyPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterProxyPtrOutput)
}

func (i *bareMetalAdminClusterProxyPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterProxy] {
	return pulumix.Output[*BareMetalAdminClusterProxy]{
		OutputState: i.ToBareMetalAdminClusterProxyPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterProxyOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterProxy)(nil)).Elem()
}

func (o BareMetalAdminClusterProxyOutput) ToBareMetalAdminClusterProxyOutput() BareMetalAdminClusterProxyOutput {
	return o
}

func (o BareMetalAdminClusterProxyOutput) ToBareMetalAdminClusterProxyOutputWithContext(ctx context.Context) BareMetalAdminClusterProxyOutput {
	return o
}

func (o BareMetalAdminClusterProxyOutput) ToBareMetalAdminClusterProxyPtrOutput() BareMetalAdminClusterProxyPtrOutput {
	return o.ToBareMetalAdminClusterProxyPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterProxyOutput) ToBareMetalAdminClusterProxyPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterProxy) *BareMetalAdminClusterProxy {
		return &v
	}).(BareMetalAdminClusterProxyPtrOutput)
}

func (o BareMetalAdminClusterProxyOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterProxy] {
	return pulumix.Output[BareMetalAdminClusterProxy]{
		OutputState: o.OutputState,
	}
}

// A list of IPs, hostnames, and domains that should skip the proxy.
// Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
func (o BareMetalAdminClusterProxyOutput) NoProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterProxy) []string { return v.NoProxies }).(pulumi.StringArrayOutput)
}

// Specifies the address of your proxy server.
// Examples: http://domain
// WARNING: Do not provide credentials in the format
// http://(username:password@)domain these will be rejected by the server.
func (o BareMetalAdminClusterProxyOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalAdminClusterProxy) string { return v.Uri }).(pulumi.StringOutput)
}

type BareMetalAdminClusterProxyPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterProxy)(nil)).Elem()
}

func (o BareMetalAdminClusterProxyPtrOutput) ToBareMetalAdminClusterProxyPtrOutput() BareMetalAdminClusterProxyPtrOutput {
	return o
}

func (o BareMetalAdminClusterProxyPtrOutput) ToBareMetalAdminClusterProxyPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterProxyPtrOutput {
	return o
}

func (o BareMetalAdminClusterProxyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterProxy] {
	return pulumix.Output[*BareMetalAdminClusterProxy]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterProxyPtrOutput) Elem() BareMetalAdminClusterProxyOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterProxy) BareMetalAdminClusterProxy {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterProxy
		return ret
	}).(BareMetalAdminClusterProxyOutput)
}

// A list of IPs, hostnames, and domains that should skip the proxy.
// Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
func (o BareMetalAdminClusterProxyPtrOutput) NoProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterProxy) []string {
		if v == nil {
			return nil
		}
		return v.NoProxies
	}).(pulumi.StringArrayOutput)
}

// Specifies the address of your proxy server.
// Examples: http://domain
// WARNING: Do not provide credentials in the format
// http://(username:password@)domain these will be rejected by the server.
func (o BareMetalAdminClusterProxyPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterSecurityConfig struct {
	// Configures user access to the Bare Metal User cluster.
	// Structure is documented below.
	Authorization *BareMetalAdminClusterSecurityConfigAuthorization `pulumi:"authorization"`
}

// BareMetalAdminClusterSecurityConfigInput is an input type that accepts BareMetalAdminClusterSecurityConfigArgs and BareMetalAdminClusterSecurityConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterSecurityConfigInput` via:
//
//	BareMetalAdminClusterSecurityConfigArgs{...}
type BareMetalAdminClusterSecurityConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterSecurityConfigOutput() BareMetalAdminClusterSecurityConfigOutput
	ToBareMetalAdminClusterSecurityConfigOutputWithContext(context.Context) BareMetalAdminClusterSecurityConfigOutput
}

type BareMetalAdminClusterSecurityConfigArgs struct {
	// Configures user access to the Bare Metal User cluster.
	// Structure is documented below.
	Authorization BareMetalAdminClusterSecurityConfigAuthorizationPtrInput `pulumi:"authorization"`
}

func (BareMetalAdminClusterSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterSecurityConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterSecurityConfigArgs) ToBareMetalAdminClusterSecurityConfigOutput() BareMetalAdminClusterSecurityConfigOutput {
	return i.ToBareMetalAdminClusterSecurityConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterSecurityConfigArgs) ToBareMetalAdminClusterSecurityConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterSecurityConfigOutput)
}

func (i BareMetalAdminClusterSecurityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterSecurityConfig] {
	return pulumix.Output[BareMetalAdminClusterSecurityConfig]{
		OutputState: i.ToBareMetalAdminClusterSecurityConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterSecurityConfigArgs) ToBareMetalAdminClusterSecurityConfigPtrOutput() BareMetalAdminClusterSecurityConfigPtrOutput {
	return i.ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterSecurityConfigArgs) ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterSecurityConfigOutput).ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterSecurityConfigPtrInput is an input type that accepts BareMetalAdminClusterSecurityConfigArgs, BareMetalAdminClusterSecurityConfigPtr and BareMetalAdminClusterSecurityConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterSecurityConfigPtrInput` via:
//
//	        BareMetalAdminClusterSecurityConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterSecurityConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterSecurityConfigPtrOutput() BareMetalAdminClusterSecurityConfigPtrOutput
	ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterSecurityConfigPtrOutput
}

type bareMetalAdminClusterSecurityConfigPtrType BareMetalAdminClusterSecurityConfigArgs

func BareMetalAdminClusterSecurityConfigPtr(v *BareMetalAdminClusterSecurityConfigArgs) BareMetalAdminClusterSecurityConfigPtrInput {
	return (*bareMetalAdminClusterSecurityConfigPtrType)(v)
}

func (*bareMetalAdminClusterSecurityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterSecurityConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterSecurityConfigPtrType) ToBareMetalAdminClusterSecurityConfigPtrOutput() BareMetalAdminClusterSecurityConfigPtrOutput {
	return i.ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterSecurityConfigPtrType) ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterSecurityConfigPtrOutput)
}

func (i *bareMetalAdminClusterSecurityConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterSecurityConfig] {
	return pulumix.Output[*BareMetalAdminClusterSecurityConfig]{
		OutputState: i.ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterSecurityConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterSecurityConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterSecurityConfigOutput) ToBareMetalAdminClusterSecurityConfigOutput() BareMetalAdminClusterSecurityConfigOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigOutput) ToBareMetalAdminClusterSecurityConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigOutput) ToBareMetalAdminClusterSecurityConfigPtrOutput() BareMetalAdminClusterSecurityConfigPtrOutput {
	return o.ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterSecurityConfigOutput) ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterSecurityConfig) *BareMetalAdminClusterSecurityConfig {
		return &v
	}).(BareMetalAdminClusterSecurityConfigPtrOutput)
}

func (o BareMetalAdminClusterSecurityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterSecurityConfig] {
	return pulumix.Output[BareMetalAdminClusterSecurityConfig]{
		OutputState: o.OutputState,
	}
}

// Configures user access to the Bare Metal User cluster.
// Structure is documented below.
func (o BareMetalAdminClusterSecurityConfigOutput) Authorization() BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterSecurityConfig) *BareMetalAdminClusterSecurityConfigAuthorization {
		return v.Authorization
	}).(BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput)
}

type BareMetalAdminClusterSecurityConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterSecurityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterSecurityConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterSecurityConfigPtrOutput) ToBareMetalAdminClusterSecurityConfigPtrOutput() BareMetalAdminClusterSecurityConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigPtrOutput) ToBareMetalAdminClusterSecurityConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterSecurityConfig] {
	return pulumix.Output[*BareMetalAdminClusterSecurityConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterSecurityConfigPtrOutput) Elem() BareMetalAdminClusterSecurityConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterSecurityConfig) BareMetalAdminClusterSecurityConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterSecurityConfig
		return ret
	}).(BareMetalAdminClusterSecurityConfigOutput)
}

// Configures user access to the Bare Metal User cluster.
// Structure is documented below.
func (o BareMetalAdminClusterSecurityConfigPtrOutput) Authorization() BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterSecurityConfig) *BareMetalAdminClusterSecurityConfigAuthorization {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput)
}

type BareMetalAdminClusterSecurityConfigAuthorization struct {
	// Users that will be granted the cluster-admin role on the cluster, providing full access to the cluster.
	// Structure is documented below.
	AdminUsers []BareMetalAdminClusterSecurityConfigAuthorizationAdminUser `pulumi:"adminUsers"`
}

// BareMetalAdminClusterSecurityConfigAuthorizationInput is an input type that accepts BareMetalAdminClusterSecurityConfigAuthorizationArgs and BareMetalAdminClusterSecurityConfigAuthorizationOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterSecurityConfigAuthorizationInput` via:
//
//	BareMetalAdminClusterSecurityConfigAuthorizationArgs{...}
type BareMetalAdminClusterSecurityConfigAuthorizationInput interface {
	pulumi.Input

	ToBareMetalAdminClusterSecurityConfigAuthorizationOutput() BareMetalAdminClusterSecurityConfigAuthorizationOutput
	ToBareMetalAdminClusterSecurityConfigAuthorizationOutputWithContext(context.Context) BareMetalAdminClusterSecurityConfigAuthorizationOutput
}

type BareMetalAdminClusterSecurityConfigAuthorizationArgs struct {
	// Users that will be granted the cluster-admin role on the cluster, providing full access to the cluster.
	// Structure is documented below.
	AdminUsers BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayInput `pulumi:"adminUsers"`
}

func (BareMetalAdminClusterSecurityConfigAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterSecurityConfigAuthorization)(nil)).Elem()
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationArgs) ToBareMetalAdminClusterSecurityConfigAuthorizationOutput() BareMetalAdminClusterSecurityConfigAuthorizationOutput {
	return i.ToBareMetalAdminClusterSecurityConfigAuthorizationOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationArgs) ToBareMetalAdminClusterSecurityConfigAuthorizationOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterSecurityConfigAuthorizationOutput)
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterSecurityConfigAuthorization] {
	return pulumix.Output[BareMetalAdminClusterSecurityConfigAuthorization]{
		OutputState: i.ToBareMetalAdminClusterSecurityConfigAuthorizationOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationArgs) ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutput() BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return i.ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationArgs) ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterSecurityConfigAuthorizationOutput).ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterSecurityConfigAuthorizationPtrInput is an input type that accepts BareMetalAdminClusterSecurityConfigAuthorizationArgs, BareMetalAdminClusterSecurityConfigAuthorizationPtr and BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterSecurityConfigAuthorizationPtrInput` via:
//
//	        BareMetalAdminClusterSecurityConfigAuthorizationArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterSecurityConfigAuthorizationPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutput() BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput
	ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(context.Context) BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput
}

type bareMetalAdminClusterSecurityConfigAuthorizationPtrType BareMetalAdminClusterSecurityConfigAuthorizationArgs

func BareMetalAdminClusterSecurityConfigAuthorizationPtr(v *BareMetalAdminClusterSecurityConfigAuthorizationArgs) BareMetalAdminClusterSecurityConfigAuthorizationPtrInput {
	return (*bareMetalAdminClusterSecurityConfigAuthorizationPtrType)(v)
}

func (*bareMetalAdminClusterSecurityConfigAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterSecurityConfigAuthorization)(nil)).Elem()
}

func (i *bareMetalAdminClusterSecurityConfigAuthorizationPtrType) ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutput() BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return i.ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterSecurityConfigAuthorizationPtrType) ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput)
}

func (i *bareMetalAdminClusterSecurityConfigAuthorizationPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterSecurityConfigAuthorization] {
	return pulumix.Output[*BareMetalAdminClusterSecurityConfigAuthorization]{
		OutputState: i.ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterSecurityConfigAuthorizationOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterSecurityConfigAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterSecurityConfigAuthorization)(nil)).Elem()
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationOutput() BareMetalAdminClusterSecurityConfigAuthorizationOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutput() BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return o.ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterSecurityConfigAuthorization) *BareMetalAdminClusterSecurityConfigAuthorization {
		return &v
	}).(BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput)
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterSecurityConfigAuthorization] {
	return pulumix.Output[BareMetalAdminClusterSecurityConfigAuthorization]{
		OutputState: o.OutputState,
	}
}

// Users that will be granted the cluster-admin role on the cluster, providing full access to the cluster.
// Structure is documented below.
func (o BareMetalAdminClusterSecurityConfigAuthorizationOutput) AdminUsers() BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterSecurityConfigAuthorization) []BareMetalAdminClusterSecurityConfigAuthorizationAdminUser {
		return v.AdminUsers
	}).(BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput)
}

type BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterSecurityConfigAuthorization)(nil)).Elem()
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutput() BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterSecurityConfigAuthorization] {
	return pulumix.Output[*BareMetalAdminClusterSecurityConfigAuthorization]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput) Elem() BareMetalAdminClusterSecurityConfigAuthorizationOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterSecurityConfigAuthorization) BareMetalAdminClusterSecurityConfigAuthorization {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterSecurityConfigAuthorization
		return ret
	}).(BareMetalAdminClusterSecurityConfigAuthorizationOutput)
}

// Users that will be granted the cluster-admin role on the cluster, providing full access to the cluster.
// Structure is documented below.
func (o BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput) AdminUsers() BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterSecurityConfigAuthorization) []BareMetalAdminClusterSecurityConfigAuthorizationAdminUser {
		if v == nil {
			return nil
		}
		return v.AdminUsers
	}).(BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput)
}

type BareMetalAdminClusterSecurityConfigAuthorizationAdminUser struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username string `pulumi:"username"`
}

// BareMetalAdminClusterSecurityConfigAuthorizationAdminUserInput is an input type that accepts BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs and BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterSecurityConfigAuthorizationAdminUserInput` via:
//
//	BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs{...}
type BareMetalAdminClusterSecurityConfigAuthorizationAdminUserInput interface {
	pulumi.Input

	ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput() BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput
	ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutputWithContext(context.Context) BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput
}

type BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username pulumi.StringInput `pulumi:"username"`
}

func (BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterSecurityConfigAuthorizationAdminUser)(nil)).Elem()
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs) ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput() BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput {
	return i.ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs) ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput)
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterSecurityConfigAuthorizationAdminUser] {
	return pulumix.Output[BareMetalAdminClusterSecurityConfigAuthorizationAdminUser]{
		OutputState: i.ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayInput is an input type that accepts BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArray and BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayInput` via:
//
//	BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArray{ BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs{...} }
type BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput() BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput
	ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(context.Context) BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput
}

type BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArray []BareMetalAdminClusterSecurityConfigAuthorizationAdminUserInput

func (BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterSecurityConfigAuthorizationAdminUser)(nil)).Elem()
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArray) ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput() BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return i.ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArray) ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput)
}

func (i BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterSecurityConfigAuthorizationAdminUser] {
	return pulumix.Output[[]BareMetalAdminClusterSecurityConfigAuthorizationAdminUser]{
		OutputState: i.ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterSecurityConfigAuthorizationAdminUser)(nil)).Elem()
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput() BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterSecurityConfigAuthorizationAdminUser] {
	return pulumix.Output[BareMetalAdminClusterSecurityConfigAuthorizationAdminUser]{
		OutputState: o.OutputState,
	}
}

// The name of the user, e.g. `my-gcp-id@gmail.com`.
func (o BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalAdminClusterSecurityConfigAuthorizationAdminUser) string { return v.Username }).(pulumi.StringOutput)
}

type BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterSecurityConfigAuthorizationAdminUser)(nil)).Elem()
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput() BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput) ToBareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return o
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterSecurityConfigAuthorizationAdminUser] {
	return pulumix.Output[[]BareMetalAdminClusterSecurityConfigAuthorizationAdminUser]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterSecurityConfigAuthorizationAdminUser {
		return vs[0].([]BareMetalAdminClusterSecurityConfigAuthorizationAdminUser)[vs[1].(int)]
	}).(BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput)
}

type BareMetalAdminClusterStatus struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from admin cluster controller.
	// Structure is documented below.
	Conditions []BareMetalAdminClusterStatusCondition `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the admin cluster
	// controller. The error message can be temporary as the admin cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage *string `pulumi:"errorMessage"`
}

// BareMetalAdminClusterStatusInput is an input type that accepts BareMetalAdminClusterStatusArgs and BareMetalAdminClusterStatusOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStatusInput` via:
//
//	BareMetalAdminClusterStatusArgs{...}
type BareMetalAdminClusterStatusInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStatusOutput() BareMetalAdminClusterStatusOutput
	ToBareMetalAdminClusterStatusOutputWithContext(context.Context) BareMetalAdminClusterStatusOutput
}

type BareMetalAdminClusterStatusArgs struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from admin cluster controller.
	// Structure is documented below.
	Conditions BareMetalAdminClusterStatusConditionArrayInput `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the admin cluster
	// controller. The error message can be temporary as the admin cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
}

func (BareMetalAdminClusterStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStatus)(nil)).Elem()
}

func (i BareMetalAdminClusterStatusArgs) ToBareMetalAdminClusterStatusOutput() BareMetalAdminClusterStatusOutput {
	return i.ToBareMetalAdminClusterStatusOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStatusArgs) ToBareMetalAdminClusterStatusOutputWithContext(ctx context.Context) BareMetalAdminClusterStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStatusOutput)
}

func (i BareMetalAdminClusterStatusArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStatus] {
	return pulumix.Output[BareMetalAdminClusterStatus]{
		OutputState: i.ToBareMetalAdminClusterStatusOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterStatusArrayInput is an input type that accepts BareMetalAdminClusterStatusArray and BareMetalAdminClusterStatusArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStatusArrayInput` via:
//
//	BareMetalAdminClusterStatusArray{ BareMetalAdminClusterStatusArgs{...} }
type BareMetalAdminClusterStatusArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStatusArrayOutput() BareMetalAdminClusterStatusArrayOutput
	ToBareMetalAdminClusterStatusArrayOutputWithContext(context.Context) BareMetalAdminClusterStatusArrayOutput
}

type BareMetalAdminClusterStatusArray []BareMetalAdminClusterStatusInput

func (BareMetalAdminClusterStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterStatus)(nil)).Elem()
}

func (i BareMetalAdminClusterStatusArray) ToBareMetalAdminClusterStatusArrayOutput() BareMetalAdminClusterStatusArrayOutput {
	return i.ToBareMetalAdminClusterStatusArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStatusArray) ToBareMetalAdminClusterStatusArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStatusArrayOutput)
}

func (i BareMetalAdminClusterStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterStatus] {
	return pulumix.Output[[]BareMetalAdminClusterStatus]{
		OutputState: i.ToBareMetalAdminClusterStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterStatusOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStatus)(nil)).Elem()
}

func (o BareMetalAdminClusterStatusOutput) ToBareMetalAdminClusterStatusOutput() BareMetalAdminClusterStatusOutput {
	return o
}

func (o BareMetalAdminClusterStatusOutput) ToBareMetalAdminClusterStatusOutputWithContext(ctx context.Context) BareMetalAdminClusterStatusOutput {
	return o
}

func (o BareMetalAdminClusterStatusOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStatus] {
	return pulumix.Output[BareMetalAdminClusterStatus]{
		OutputState: o.OutputState,
	}
}

// (Output)
// ResourceConditions provide a standard mechanism for higher-level status reporting from admin cluster controller.
// Structure is documented below.
func (o BareMetalAdminClusterStatusOutput) Conditions() BareMetalAdminClusterStatusConditionArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStatus) []BareMetalAdminClusterStatusCondition { return v.Conditions }).(BareMetalAdminClusterStatusConditionArrayOutput)
}

// (Output)
// Human-friendly representation of the error message from the admin cluster
// controller. The error message can be temporary as the admin cluster
// controller creates a cluster or node pool. If the error message persists
// for a longer period of time, it can be used to surface error message to
// indicate real problems requiring user intervention.
func (o BareMetalAdminClusterStatusOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStatus) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterStatusArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterStatus)(nil)).Elem()
}

func (o BareMetalAdminClusterStatusArrayOutput) ToBareMetalAdminClusterStatusArrayOutput() BareMetalAdminClusterStatusArrayOutput {
	return o
}

func (o BareMetalAdminClusterStatusArrayOutput) ToBareMetalAdminClusterStatusArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterStatusArrayOutput {
	return o
}

func (o BareMetalAdminClusterStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterStatus] {
	return pulumix.Output[[]BareMetalAdminClusterStatus]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterStatusArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterStatus {
		return vs[0].([]BareMetalAdminClusterStatus)[vs[1].(int)]
	}).(BareMetalAdminClusterStatusOutput)
}

type BareMetalAdminClusterStatusCondition struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`
	// (Output)
	// A human-readable message of the check failure.
	Reason *string `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State *string `pulumi:"state"`
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type *string `pulumi:"type"`
}

// BareMetalAdminClusterStatusConditionInput is an input type that accepts BareMetalAdminClusterStatusConditionArgs and BareMetalAdminClusterStatusConditionOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStatusConditionInput` via:
//
//	BareMetalAdminClusterStatusConditionArgs{...}
type BareMetalAdminClusterStatusConditionInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStatusConditionOutput() BareMetalAdminClusterStatusConditionOutput
	ToBareMetalAdminClusterStatusConditionOutputWithContext(context.Context) BareMetalAdminClusterStatusConditionOutput
}

type BareMetalAdminClusterStatusConditionArgs struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (Output)
	// A human-readable message of the check failure.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BareMetalAdminClusterStatusConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStatusCondition)(nil)).Elem()
}

func (i BareMetalAdminClusterStatusConditionArgs) ToBareMetalAdminClusterStatusConditionOutput() BareMetalAdminClusterStatusConditionOutput {
	return i.ToBareMetalAdminClusterStatusConditionOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStatusConditionArgs) ToBareMetalAdminClusterStatusConditionOutputWithContext(ctx context.Context) BareMetalAdminClusterStatusConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStatusConditionOutput)
}

func (i BareMetalAdminClusterStatusConditionArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStatusCondition] {
	return pulumix.Output[BareMetalAdminClusterStatusCondition]{
		OutputState: i.ToBareMetalAdminClusterStatusConditionOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterStatusConditionArrayInput is an input type that accepts BareMetalAdminClusterStatusConditionArray and BareMetalAdminClusterStatusConditionArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStatusConditionArrayInput` via:
//
//	BareMetalAdminClusterStatusConditionArray{ BareMetalAdminClusterStatusConditionArgs{...} }
type BareMetalAdminClusterStatusConditionArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStatusConditionArrayOutput() BareMetalAdminClusterStatusConditionArrayOutput
	ToBareMetalAdminClusterStatusConditionArrayOutputWithContext(context.Context) BareMetalAdminClusterStatusConditionArrayOutput
}

type BareMetalAdminClusterStatusConditionArray []BareMetalAdminClusterStatusConditionInput

func (BareMetalAdminClusterStatusConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterStatusCondition)(nil)).Elem()
}

func (i BareMetalAdminClusterStatusConditionArray) ToBareMetalAdminClusterStatusConditionArrayOutput() BareMetalAdminClusterStatusConditionArrayOutput {
	return i.ToBareMetalAdminClusterStatusConditionArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStatusConditionArray) ToBareMetalAdminClusterStatusConditionArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterStatusConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStatusConditionArrayOutput)
}

func (i BareMetalAdminClusterStatusConditionArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterStatusCondition] {
	return pulumix.Output[[]BareMetalAdminClusterStatusCondition]{
		OutputState: i.ToBareMetalAdminClusterStatusConditionArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterStatusConditionOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStatusConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStatusCondition)(nil)).Elem()
}

func (o BareMetalAdminClusterStatusConditionOutput) ToBareMetalAdminClusterStatusConditionOutput() BareMetalAdminClusterStatusConditionOutput {
	return o
}

func (o BareMetalAdminClusterStatusConditionOutput) ToBareMetalAdminClusterStatusConditionOutputWithContext(ctx context.Context) BareMetalAdminClusterStatusConditionOutput {
	return o
}

func (o BareMetalAdminClusterStatusConditionOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStatusCondition] {
	return pulumix.Output[BareMetalAdminClusterStatusCondition]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Last time the condition transit from one status to another.
func (o BareMetalAdminClusterStatusConditionOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStatusCondition) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about last transition.
func (o BareMetalAdminClusterStatusConditionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStatusCondition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// (Output)
// A human-readable message of the check failure.
func (o BareMetalAdminClusterStatusConditionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStatusCondition) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// (Output)
// The lifecycle state of the condition.
func (o BareMetalAdminClusterStatusConditionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStatusCondition) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Type of the condition.
// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
func (o BareMetalAdminClusterStatusConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStatusCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterStatusConditionArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStatusConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterStatusCondition)(nil)).Elem()
}

func (o BareMetalAdminClusterStatusConditionArrayOutput) ToBareMetalAdminClusterStatusConditionArrayOutput() BareMetalAdminClusterStatusConditionArrayOutput {
	return o
}

func (o BareMetalAdminClusterStatusConditionArrayOutput) ToBareMetalAdminClusterStatusConditionArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterStatusConditionArrayOutput {
	return o
}

func (o BareMetalAdminClusterStatusConditionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterStatusCondition] {
	return pulumix.Output[[]BareMetalAdminClusterStatusCondition]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterStatusConditionArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterStatusConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterStatusCondition {
		return vs[0].([]BareMetalAdminClusterStatusCondition)[vs[1].(int)]
	}).(BareMetalAdminClusterStatusConditionOutput)
}

type BareMetalAdminClusterStorage struct {
	// Specifies the config for local PersistentVolumes backed
	// by mounted node disks. These disks need to be formatted and mounted by the
	// user, which can be done before or after cluster creation.
	// Structure is documented below.
	LvpNodeMountsConfig BareMetalAdminClusterStorageLvpNodeMountsConfig `pulumi:"lvpNodeMountsConfig"`
	// Specifies the config for local PersistentVolumes backed by
	// subdirectories in a shared filesystem. These subdirectores are
	// automatically created during cluster creation.
	// Structure is documented below.
	LvpShareConfig BareMetalAdminClusterStorageLvpShareConfig `pulumi:"lvpShareConfig"`
}

// BareMetalAdminClusterStorageInput is an input type that accepts BareMetalAdminClusterStorageArgs and BareMetalAdminClusterStorageOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStorageInput` via:
//
//	BareMetalAdminClusterStorageArgs{...}
type BareMetalAdminClusterStorageInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStorageOutput() BareMetalAdminClusterStorageOutput
	ToBareMetalAdminClusterStorageOutputWithContext(context.Context) BareMetalAdminClusterStorageOutput
}

type BareMetalAdminClusterStorageArgs struct {
	// Specifies the config for local PersistentVolumes backed
	// by mounted node disks. These disks need to be formatted and mounted by the
	// user, which can be done before or after cluster creation.
	// Structure is documented below.
	LvpNodeMountsConfig BareMetalAdminClusterStorageLvpNodeMountsConfigInput `pulumi:"lvpNodeMountsConfig"`
	// Specifies the config for local PersistentVolumes backed by
	// subdirectories in a shared filesystem. These subdirectores are
	// automatically created during cluster creation.
	// Structure is documented below.
	LvpShareConfig BareMetalAdminClusterStorageLvpShareConfigInput `pulumi:"lvpShareConfig"`
}

func (BareMetalAdminClusterStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStorage)(nil)).Elem()
}

func (i BareMetalAdminClusterStorageArgs) ToBareMetalAdminClusterStorageOutput() BareMetalAdminClusterStorageOutput {
	return i.ToBareMetalAdminClusterStorageOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStorageArgs) ToBareMetalAdminClusterStorageOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageOutput)
}

func (i BareMetalAdminClusterStorageArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStorage] {
	return pulumix.Output[BareMetalAdminClusterStorage]{
		OutputState: i.ToBareMetalAdminClusterStorageOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterStorageArgs) ToBareMetalAdminClusterStoragePtrOutput() BareMetalAdminClusterStoragePtrOutput {
	return i.ToBareMetalAdminClusterStoragePtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStorageArgs) ToBareMetalAdminClusterStoragePtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageOutput).ToBareMetalAdminClusterStoragePtrOutputWithContext(ctx)
}

// BareMetalAdminClusterStoragePtrInput is an input type that accepts BareMetalAdminClusterStorageArgs, BareMetalAdminClusterStoragePtr and BareMetalAdminClusterStoragePtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStoragePtrInput` via:
//
//	        BareMetalAdminClusterStorageArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterStoragePtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStoragePtrOutput() BareMetalAdminClusterStoragePtrOutput
	ToBareMetalAdminClusterStoragePtrOutputWithContext(context.Context) BareMetalAdminClusterStoragePtrOutput
}

type bareMetalAdminClusterStoragePtrType BareMetalAdminClusterStorageArgs

func BareMetalAdminClusterStoragePtr(v *BareMetalAdminClusterStorageArgs) BareMetalAdminClusterStoragePtrInput {
	return (*bareMetalAdminClusterStoragePtrType)(v)
}

func (*bareMetalAdminClusterStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterStorage)(nil)).Elem()
}

func (i *bareMetalAdminClusterStoragePtrType) ToBareMetalAdminClusterStoragePtrOutput() BareMetalAdminClusterStoragePtrOutput {
	return i.ToBareMetalAdminClusterStoragePtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterStoragePtrType) ToBareMetalAdminClusterStoragePtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStoragePtrOutput)
}

func (i *bareMetalAdminClusterStoragePtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterStorage] {
	return pulumix.Output[*BareMetalAdminClusterStorage]{
		OutputState: i.ToBareMetalAdminClusterStoragePtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterStorageOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStorage)(nil)).Elem()
}

func (o BareMetalAdminClusterStorageOutput) ToBareMetalAdminClusterStorageOutput() BareMetalAdminClusterStorageOutput {
	return o
}

func (o BareMetalAdminClusterStorageOutput) ToBareMetalAdminClusterStorageOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageOutput {
	return o
}

func (o BareMetalAdminClusterStorageOutput) ToBareMetalAdminClusterStoragePtrOutput() BareMetalAdminClusterStoragePtrOutput {
	return o.ToBareMetalAdminClusterStoragePtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterStorageOutput) ToBareMetalAdminClusterStoragePtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterStorage) *BareMetalAdminClusterStorage {
		return &v
	}).(BareMetalAdminClusterStoragePtrOutput)
}

func (o BareMetalAdminClusterStorageOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStorage] {
	return pulumix.Output[BareMetalAdminClusterStorage]{
		OutputState: o.OutputState,
	}
}

// Specifies the config for local PersistentVolumes backed
// by mounted node disks. These disks need to be formatted and mounted by the
// user, which can be done before or after cluster creation.
// Structure is documented below.
func (o BareMetalAdminClusterStorageOutput) LvpNodeMountsConfig() BareMetalAdminClusterStorageLvpNodeMountsConfigOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStorage) BareMetalAdminClusterStorageLvpNodeMountsConfig {
		return v.LvpNodeMountsConfig
	}).(BareMetalAdminClusterStorageLvpNodeMountsConfigOutput)
}

// Specifies the config for local PersistentVolumes backed by
// subdirectories in a shared filesystem. These subdirectores are
// automatically created during cluster creation.
// Structure is documented below.
func (o BareMetalAdminClusterStorageOutput) LvpShareConfig() BareMetalAdminClusterStorageLvpShareConfigOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStorage) BareMetalAdminClusterStorageLvpShareConfig {
		return v.LvpShareConfig
	}).(BareMetalAdminClusterStorageLvpShareConfigOutput)
}

type BareMetalAdminClusterStoragePtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterStorage)(nil)).Elem()
}

func (o BareMetalAdminClusterStoragePtrOutput) ToBareMetalAdminClusterStoragePtrOutput() BareMetalAdminClusterStoragePtrOutput {
	return o
}

func (o BareMetalAdminClusterStoragePtrOutput) ToBareMetalAdminClusterStoragePtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStoragePtrOutput {
	return o
}

func (o BareMetalAdminClusterStoragePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterStorage] {
	return pulumix.Output[*BareMetalAdminClusterStorage]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterStoragePtrOutput) Elem() BareMetalAdminClusterStorageOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorage) BareMetalAdminClusterStorage {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterStorage
		return ret
	}).(BareMetalAdminClusterStorageOutput)
}

// Specifies the config for local PersistentVolumes backed
// by mounted node disks. These disks need to be formatted and mounted by the
// user, which can be done before or after cluster creation.
// Structure is documented below.
func (o BareMetalAdminClusterStoragePtrOutput) LvpNodeMountsConfig() BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorage) *BareMetalAdminClusterStorageLvpNodeMountsConfig {
		if v == nil {
			return nil
		}
		return &v.LvpNodeMountsConfig
	}).(BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput)
}

// Specifies the config for local PersistentVolumes backed by
// subdirectories in a shared filesystem. These subdirectores are
// automatically created during cluster creation.
// Structure is documented below.
func (o BareMetalAdminClusterStoragePtrOutput) LvpShareConfig() BareMetalAdminClusterStorageLvpShareConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorage) *BareMetalAdminClusterStorageLvpShareConfig {
		if v == nil {
			return nil
		}
		return &v.LvpShareConfig
	}).(BareMetalAdminClusterStorageLvpShareConfigPtrOutput)
}

type BareMetalAdminClusterStorageLvpNodeMountsConfig struct {
	// The host machine path.
	Path string `pulumi:"path"`
	// The StorageClass name that PVs will be created with.
	StorageClass string `pulumi:"storageClass"`
}

// BareMetalAdminClusterStorageLvpNodeMountsConfigInput is an input type that accepts BareMetalAdminClusterStorageLvpNodeMountsConfigArgs and BareMetalAdminClusterStorageLvpNodeMountsConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStorageLvpNodeMountsConfigInput` via:
//
//	BareMetalAdminClusterStorageLvpNodeMountsConfigArgs{...}
type BareMetalAdminClusterStorageLvpNodeMountsConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStorageLvpNodeMountsConfigOutput() BareMetalAdminClusterStorageLvpNodeMountsConfigOutput
	ToBareMetalAdminClusterStorageLvpNodeMountsConfigOutputWithContext(context.Context) BareMetalAdminClusterStorageLvpNodeMountsConfigOutput
}

type BareMetalAdminClusterStorageLvpNodeMountsConfigArgs struct {
	// The host machine path.
	Path pulumi.StringInput `pulumi:"path"`
	// The StorageClass name that PVs will be created with.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BareMetalAdminClusterStorageLvpNodeMountsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStorageLvpNodeMountsConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterStorageLvpNodeMountsConfigArgs) ToBareMetalAdminClusterStorageLvpNodeMountsConfigOutput() BareMetalAdminClusterStorageLvpNodeMountsConfigOutput {
	return i.ToBareMetalAdminClusterStorageLvpNodeMountsConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStorageLvpNodeMountsConfigArgs) ToBareMetalAdminClusterStorageLvpNodeMountsConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpNodeMountsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageLvpNodeMountsConfigOutput)
}

func (i BareMetalAdminClusterStorageLvpNodeMountsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStorageLvpNodeMountsConfig] {
	return pulumix.Output[BareMetalAdminClusterStorageLvpNodeMountsConfig]{
		OutputState: i.ToBareMetalAdminClusterStorageLvpNodeMountsConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterStorageLvpNodeMountsConfigArgs) ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput {
	return i.ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStorageLvpNodeMountsConfigArgs) ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageLvpNodeMountsConfigOutput).ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterStorageLvpNodeMountsConfigPtrInput is an input type that accepts BareMetalAdminClusterStorageLvpNodeMountsConfigArgs, BareMetalAdminClusterStorageLvpNodeMountsConfigPtr and BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStorageLvpNodeMountsConfigPtrInput` via:
//
//	        BareMetalAdminClusterStorageLvpNodeMountsConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterStorageLvpNodeMountsConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput
	ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput
}

type bareMetalAdminClusterStorageLvpNodeMountsConfigPtrType BareMetalAdminClusterStorageLvpNodeMountsConfigArgs

func BareMetalAdminClusterStorageLvpNodeMountsConfigPtr(v *BareMetalAdminClusterStorageLvpNodeMountsConfigArgs) BareMetalAdminClusterStorageLvpNodeMountsConfigPtrInput {
	return (*bareMetalAdminClusterStorageLvpNodeMountsConfigPtrType)(v)
}

func (*bareMetalAdminClusterStorageLvpNodeMountsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterStorageLvpNodeMountsConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterStorageLvpNodeMountsConfigPtrType) ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput {
	return i.ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterStorageLvpNodeMountsConfigPtrType) ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput)
}

func (i *bareMetalAdminClusterStorageLvpNodeMountsConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterStorageLvpNodeMountsConfig] {
	return pulumix.Output[*BareMetalAdminClusterStorageLvpNodeMountsConfig]{
		OutputState: i.ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterStorageLvpNodeMountsConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStorageLvpNodeMountsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStorageLvpNodeMountsConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterStorageLvpNodeMountsConfigOutput) ToBareMetalAdminClusterStorageLvpNodeMountsConfigOutput() BareMetalAdminClusterStorageLvpNodeMountsConfigOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpNodeMountsConfigOutput) ToBareMetalAdminClusterStorageLvpNodeMountsConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpNodeMountsConfigOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpNodeMountsConfigOutput) ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput {
	return o.ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterStorageLvpNodeMountsConfigOutput) ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterStorageLvpNodeMountsConfig) *BareMetalAdminClusterStorageLvpNodeMountsConfig {
		return &v
	}).(BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput)
}

func (o BareMetalAdminClusterStorageLvpNodeMountsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStorageLvpNodeMountsConfig] {
	return pulumix.Output[BareMetalAdminClusterStorageLvpNodeMountsConfig]{
		OutputState: o.OutputState,
	}
}

// The host machine path.
func (o BareMetalAdminClusterStorageLvpNodeMountsConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStorageLvpNodeMountsConfig) string { return v.Path }).(pulumi.StringOutput)
}

// The StorageClass name that PVs will be created with.
func (o BareMetalAdminClusterStorageLvpNodeMountsConfigOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStorageLvpNodeMountsConfig) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterStorageLvpNodeMountsConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput) ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput) ToBareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterStorageLvpNodeMountsConfig] {
	return pulumix.Output[*BareMetalAdminClusterStorageLvpNodeMountsConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput) Elem() BareMetalAdminClusterStorageLvpNodeMountsConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorageLvpNodeMountsConfig) BareMetalAdminClusterStorageLvpNodeMountsConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterStorageLvpNodeMountsConfig
		return ret
	}).(BareMetalAdminClusterStorageLvpNodeMountsConfigOutput)
}

// The host machine path.
func (o BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorageLvpNodeMountsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The StorageClass name that PVs will be created with.
func (o BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorageLvpNodeMountsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterStorageLvpShareConfig struct {
	// Defines the machine path and storage class for the LVP Share.
	// Structure is documented below.
	LvpConfig BareMetalAdminClusterStorageLvpShareConfigLvpConfig `pulumi:"lvpConfig"`
	// The number of subdirectories to create under path.
	SharedPathPvCount *int `pulumi:"sharedPathPvCount"`
}

// BareMetalAdminClusterStorageLvpShareConfigInput is an input type that accepts BareMetalAdminClusterStorageLvpShareConfigArgs and BareMetalAdminClusterStorageLvpShareConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStorageLvpShareConfigInput` via:
//
//	BareMetalAdminClusterStorageLvpShareConfigArgs{...}
type BareMetalAdminClusterStorageLvpShareConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStorageLvpShareConfigOutput() BareMetalAdminClusterStorageLvpShareConfigOutput
	ToBareMetalAdminClusterStorageLvpShareConfigOutputWithContext(context.Context) BareMetalAdminClusterStorageLvpShareConfigOutput
}

type BareMetalAdminClusterStorageLvpShareConfigArgs struct {
	// Defines the machine path and storage class for the LVP Share.
	// Structure is documented below.
	LvpConfig BareMetalAdminClusterStorageLvpShareConfigLvpConfigInput `pulumi:"lvpConfig"`
	// The number of subdirectories to create under path.
	SharedPathPvCount pulumi.IntPtrInput `pulumi:"sharedPathPvCount"`
}

func (BareMetalAdminClusterStorageLvpShareConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStorageLvpShareConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterStorageLvpShareConfigArgs) ToBareMetalAdminClusterStorageLvpShareConfigOutput() BareMetalAdminClusterStorageLvpShareConfigOutput {
	return i.ToBareMetalAdminClusterStorageLvpShareConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStorageLvpShareConfigArgs) ToBareMetalAdminClusterStorageLvpShareConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageLvpShareConfigOutput)
}

func (i BareMetalAdminClusterStorageLvpShareConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStorageLvpShareConfig] {
	return pulumix.Output[BareMetalAdminClusterStorageLvpShareConfig]{
		OutputState: i.ToBareMetalAdminClusterStorageLvpShareConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterStorageLvpShareConfigArgs) ToBareMetalAdminClusterStorageLvpShareConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigPtrOutput {
	return i.ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStorageLvpShareConfigArgs) ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageLvpShareConfigOutput).ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterStorageLvpShareConfigPtrInput is an input type that accepts BareMetalAdminClusterStorageLvpShareConfigArgs, BareMetalAdminClusterStorageLvpShareConfigPtr and BareMetalAdminClusterStorageLvpShareConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStorageLvpShareConfigPtrInput` via:
//
//	        BareMetalAdminClusterStorageLvpShareConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterStorageLvpShareConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStorageLvpShareConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigPtrOutput
	ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterStorageLvpShareConfigPtrOutput
}

type bareMetalAdminClusterStorageLvpShareConfigPtrType BareMetalAdminClusterStorageLvpShareConfigArgs

func BareMetalAdminClusterStorageLvpShareConfigPtr(v *BareMetalAdminClusterStorageLvpShareConfigArgs) BareMetalAdminClusterStorageLvpShareConfigPtrInput {
	return (*bareMetalAdminClusterStorageLvpShareConfigPtrType)(v)
}

func (*bareMetalAdminClusterStorageLvpShareConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterStorageLvpShareConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterStorageLvpShareConfigPtrType) ToBareMetalAdminClusterStorageLvpShareConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigPtrOutput {
	return i.ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterStorageLvpShareConfigPtrType) ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageLvpShareConfigPtrOutput)
}

func (i *bareMetalAdminClusterStorageLvpShareConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterStorageLvpShareConfig] {
	return pulumix.Output[*BareMetalAdminClusterStorageLvpShareConfig]{
		OutputState: i.ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterStorageLvpShareConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStorageLvpShareConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStorageLvpShareConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterStorageLvpShareConfigOutput) ToBareMetalAdminClusterStorageLvpShareConfigOutput() BareMetalAdminClusterStorageLvpShareConfigOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpShareConfigOutput) ToBareMetalAdminClusterStorageLvpShareConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpShareConfigOutput) ToBareMetalAdminClusterStorageLvpShareConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigPtrOutput {
	return o.ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterStorageLvpShareConfigOutput) ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterStorageLvpShareConfig) *BareMetalAdminClusterStorageLvpShareConfig {
		return &v
	}).(BareMetalAdminClusterStorageLvpShareConfigPtrOutput)
}

func (o BareMetalAdminClusterStorageLvpShareConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStorageLvpShareConfig] {
	return pulumix.Output[BareMetalAdminClusterStorageLvpShareConfig]{
		OutputState: o.OutputState,
	}
}

// Defines the machine path and storage class for the LVP Share.
// Structure is documented below.
func (o BareMetalAdminClusterStorageLvpShareConfigOutput) LvpConfig() BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStorageLvpShareConfig) BareMetalAdminClusterStorageLvpShareConfigLvpConfig {
		return v.LvpConfig
	}).(BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput)
}

// The number of subdirectories to create under path.
func (o BareMetalAdminClusterStorageLvpShareConfigOutput) SharedPathPvCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStorageLvpShareConfig) *int { return v.SharedPathPvCount }).(pulumi.IntPtrOutput)
}

type BareMetalAdminClusterStorageLvpShareConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStorageLvpShareConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterStorageLvpShareConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterStorageLvpShareConfigPtrOutput) ToBareMetalAdminClusterStorageLvpShareConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpShareConfigPtrOutput) ToBareMetalAdminClusterStorageLvpShareConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpShareConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterStorageLvpShareConfig] {
	return pulumix.Output[*BareMetalAdminClusterStorageLvpShareConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterStorageLvpShareConfigPtrOutput) Elem() BareMetalAdminClusterStorageLvpShareConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorageLvpShareConfig) BareMetalAdminClusterStorageLvpShareConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterStorageLvpShareConfig
		return ret
	}).(BareMetalAdminClusterStorageLvpShareConfigOutput)
}

// Defines the machine path and storage class for the LVP Share.
// Structure is documented below.
func (o BareMetalAdminClusterStorageLvpShareConfigPtrOutput) LvpConfig() BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorageLvpShareConfig) *BareMetalAdminClusterStorageLvpShareConfigLvpConfig {
		if v == nil {
			return nil
		}
		return &v.LvpConfig
	}).(BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput)
}

// The number of subdirectories to create under path.
func (o BareMetalAdminClusterStorageLvpShareConfigPtrOutput) SharedPathPvCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorageLvpShareConfig) *int {
		if v == nil {
			return nil
		}
		return v.SharedPathPvCount
	}).(pulumi.IntPtrOutput)
}

type BareMetalAdminClusterStorageLvpShareConfigLvpConfig struct {
	// The host machine path.
	Path string `pulumi:"path"`
	// The StorageClass name that PVs will be created with.
	StorageClass string `pulumi:"storageClass"`
}

// BareMetalAdminClusterStorageLvpShareConfigLvpConfigInput is an input type that accepts BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs and BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStorageLvpShareConfigLvpConfigInput` via:
//
//	BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs{...}
type BareMetalAdminClusterStorageLvpShareConfigLvpConfigInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput() BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput
	ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigOutputWithContext(context.Context) BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput
}

type BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs struct {
	// The host machine path.
	Path pulumi.StringInput `pulumi:"path"`
	// The StorageClass name that PVs will be created with.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStorageLvpShareConfigLvpConfig)(nil)).Elem()
}

func (i BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput() BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput {
	return i.ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput)
}

func (i BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStorageLvpShareConfigLvpConfig] {
	return pulumix.Output[BareMetalAdminClusterStorageLvpShareConfigLvpConfig]{
		OutputState: i.ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return i.ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput).ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx)
}

// BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrInput is an input type that accepts BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs, BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtr and BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrInput` via:
//
//	        BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrInput interface {
	pulumi.Input

	ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput
	ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(context.Context) BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput
}

type bareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrType BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs

func BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtr(v *BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs) BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrInput {
	return (*bareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrType)(v)
}

func (*bareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterStorageLvpShareConfigLvpConfig)(nil)).Elem()
}

func (i *bareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrType) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return i.ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrType) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput)
}

func (i *bareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterStorageLvpShareConfigLvpConfig] {
	return pulumix.Output[*BareMetalAdminClusterStorageLvpShareConfigLvpConfig]{
		OutputState: i.ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterStorageLvpShareConfigLvpConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput() BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o.ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalAdminClusterStorageLvpShareConfigLvpConfig) *BareMetalAdminClusterStorageLvpShareConfigLvpConfig {
		return &v
	}).(BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput)
}

func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterStorageLvpShareConfigLvpConfig] {
	return pulumix.Output[BareMetalAdminClusterStorageLvpShareConfigLvpConfig]{
		OutputState: o.OutputState,
	}
}

// The host machine path.
func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStorageLvpShareConfigLvpConfig) string { return v.Path }).(pulumi.StringOutput)
}

// The StorageClass name that PVs will be created with.
func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalAdminClusterStorageLvpShareConfigLvpConfig) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminClusterStorageLvpShareConfigLvpConfig)(nil)).Elem()
}

func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput) ToBareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx context.Context) BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o
}

func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalAdminClusterStorageLvpShareConfigLvpConfig] {
	return pulumix.Output[*BareMetalAdminClusterStorageLvpShareConfigLvpConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput) Elem() BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorageLvpShareConfigLvpConfig) BareMetalAdminClusterStorageLvpShareConfigLvpConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalAdminClusterStorageLvpShareConfigLvpConfig
		return ret
	}).(BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput)
}

// The host machine path.
func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorageLvpShareConfigLvpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The StorageClass name that PVs will be created with.
func (o BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminClusterStorageLvpShareConfigLvpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterValidationCheck struct {
	// (Output)
	// Options used for the validation check.
	Options *string `pulumi:"options"`
	// (Output)
	// The scenario when the preflight checks were run..
	Scenario *string `pulumi:"scenario"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses []BareMetalAdminClusterValidationCheckStatus `pulumi:"statuses"`
}

// BareMetalAdminClusterValidationCheckInput is an input type that accepts BareMetalAdminClusterValidationCheckArgs and BareMetalAdminClusterValidationCheckOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterValidationCheckInput` via:
//
//	BareMetalAdminClusterValidationCheckArgs{...}
type BareMetalAdminClusterValidationCheckInput interface {
	pulumi.Input

	ToBareMetalAdminClusterValidationCheckOutput() BareMetalAdminClusterValidationCheckOutput
	ToBareMetalAdminClusterValidationCheckOutputWithContext(context.Context) BareMetalAdminClusterValidationCheckOutput
}

type BareMetalAdminClusterValidationCheckArgs struct {
	// (Output)
	// Options used for the validation check.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// (Output)
	// The scenario when the preflight checks were run..
	Scenario pulumi.StringPtrInput `pulumi:"scenario"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses BareMetalAdminClusterValidationCheckStatusArrayInput `pulumi:"statuses"`
}

func (BareMetalAdminClusterValidationCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterValidationCheck)(nil)).Elem()
}

func (i BareMetalAdminClusterValidationCheckArgs) ToBareMetalAdminClusterValidationCheckOutput() BareMetalAdminClusterValidationCheckOutput {
	return i.ToBareMetalAdminClusterValidationCheckOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterValidationCheckArgs) ToBareMetalAdminClusterValidationCheckOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterValidationCheckOutput)
}

func (i BareMetalAdminClusterValidationCheckArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterValidationCheck] {
	return pulumix.Output[BareMetalAdminClusterValidationCheck]{
		OutputState: i.ToBareMetalAdminClusterValidationCheckOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterValidationCheckArrayInput is an input type that accepts BareMetalAdminClusterValidationCheckArray and BareMetalAdminClusterValidationCheckArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterValidationCheckArrayInput` via:
//
//	BareMetalAdminClusterValidationCheckArray{ BareMetalAdminClusterValidationCheckArgs{...} }
type BareMetalAdminClusterValidationCheckArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterValidationCheckArrayOutput() BareMetalAdminClusterValidationCheckArrayOutput
	ToBareMetalAdminClusterValidationCheckArrayOutputWithContext(context.Context) BareMetalAdminClusterValidationCheckArrayOutput
}

type BareMetalAdminClusterValidationCheckArray []BareMetalAdminClusterValidationCheckInput

func (BareMetalAdminClusterValidationCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterValidationCheck)(nil)).Elem()
}

func (i BareMetalAdminClusterValidationCheckArray) ToBareMetalAdminClusterValidationCheckArrayOutput() BareMetalAdminClusterValidationCheckArrayOutput {
	return i.ToBareMetalAdminClusterValidationCheckArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterValidationCheckArray) ToBareMetalAdminClusterValidationCheckArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterValidationCheckArrayOutput)
}

func (i BareMetalAdminClusterValidationCheckArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterValidationCheck] {
	return pulumix.Output[[]BareMetalAdminClusterValidationCheck]{
		OutputState: i.ToBareMetalAdminClusterValidationCheckArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterValidationCheckOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterValidationCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterValidationCheck)(nil)).Elem()
}

func (o BareMetalAdminClusterValidationCheckOutput) ToBareMetalAdminClusterValidationCheckOutput() BareMetalAdminClusterValidationCheckOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckOutput) ToBareMetalAdminClusterValidationCheckOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterValidationCheck] {
	return pulumix.Output[BareMetalAdminClusterValidationCheck]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Options used for the validation check.
func (o BareMetalAdminClusterValidationCheckOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterValidationCheck) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// (Output)
// The scenario when the preflight checks were run..
func (o BareMetalAdminClusterValidationCheckOutput) Scenario() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterValidationCheck) *string { return v.Scenario }).(pulumi.StringPtrOutput)
}

// (Output)
// Specifies the detailed validation check status
// Structure is documented below.
func (o BareMetalAdminClusterValidationCheckOutput) Statuses() BareMetalAdminClusterValidationCheckStatusArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterValidationCheck) []BareMetalAdminClusterValidationCheckStatus {
		return v.Statuses
	}).(BareMetalAdminClusterValidationCheckStatusArrayOutput)
}

type BareMetalAdminClusterValidationCheckArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterValidationCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterValidationCheck)(nil)).Elem()
}

func (o BareMetalAdminClusterValidationCheckArrayOutput) ToBareMetalAdminClusterValidationCheckArrayOutput() BareMetalAdminClusterValidationCheckArrayOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckArrayOutput) ToBareMetalAdminClusterValidationCheckArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckArrayOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterValidationCheck] {
	return pulumix.Output[[]BareMetalAdminClusterValidationCheck]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterValidationCheckArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterValidationCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterValidationCheck {
		return vs[0].([]BareMetalAdminClusterValidationCheck)[vs[1].(int)]
	}).(BareMetalAdminClusterValidationCheckOutput)
}

type BareMetalAdminClusterValidationCheckStatus struct {
	// (Output)
	// Individual checks which failed as part of the Preflight check execution.
	// Structure is documented below.
	Results []BareMetalAdminClusterValidationCheckStatusResult `pulumi:"results"`
}

// BareMetalAdminClusterValidationCheckStatusInput is an input type that accepts BareMetalAdminClusterValidationCheckStatusArgs and BareMetalAdminClusterValidationCheckStatusOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterValidationCheckStatusInput` via:
//
//	BareMetalAdminClusterValidationCheckStatusArgs{...}
type BareMetalAdminClusterValidationCheckStatusInput interface {
	pulumi.Input

	ToBareMetalAdminClusterValidationCheckStatusOutput() BareMetalAdminClusterValidationCheckStatusOutput
	ToBareMetalAdminClusterValidationCheckStatusOutputWithContext(context.Context) BareMetalAdminClusterValidationCheckStatusOutput
}

type BareMetalAdminClusterValidationCheckStatusArgs struct {
	// (Output)
	// Individual checks which failed as part of the Preflight check execution.
	// Structure is documented below.
	Results BareMetalAdminClusterValidationCheckStatusResultArrayInput `pulumi:"results"`
}

func (BareMetalAdminClusterValidationCheckStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterValidationCheckStatus)(nil)).Elem()
}

func (i BareMetalAdminClusterValidationCheckStatusArgs) ToBareMetalAdminClusterValidationCheckStatusOutput() BareMetalAdminClusterValidationCheckStatusOutput {
	return i.ToBareMetalAdminClusterValidationCheckStatusOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterValidationCheckStatusArgs) ToBareMetalAdminClusterValidationCheckStatusOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterValidationCheckStatusOutput)
}

func (i BareMetalAdminClusterValidationCheckStatusArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterValidationCheckStatus] {
	return pulumix.Output[BareMetalAdminClusterValidationCheckStatus]{
		OutputState: i.ToBareMetalAdminClusterValidationCheckStatusOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterValidationCheckStatusArrayInput is an input type that accepts BareMetalAdminClusterValidationCheckStatusArray and BareMetalAdminClusterValidationCheckStatusArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterValidationCheckStatusArrayInput` via:
//
//	BareMetalAdminClusterValidationCheckStatusArray{ BareMetalAdminClusterValidationCheckStatusArgs{...} }
type BareMetalAdminClusterValidationCheckStatusArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterValidationCheckStatusArrayOutput() BareMetalAdminClusterValidationCheckStatusArrayOutput
	ToBareMetalAdminClusterValidationCheckStatusArrayOutputWithContext(context.Context) BareMetalAdminClusterValidationCheckStatusArrayOutput
}

type BareMetalAdminClusterValidationCheckStatusArray []BareMetalAdminClusterValidationCheckStatusInput

func (BareMetalAdminClusterValidationCheckStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterValidationCheckStatus)(nil)).Elem()
}

func (i BareMetalAdminClusterValidationCheckStatusArray) ToBareMetalAdminClusterValidationCheckStatusArrayOutput() BareMetalAdminClusterValidationCheckStatusArrayOutput {
	return i.ToBareMetalAdminClusterValidationCheckStatusArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterValidationCheckStatusArray) ToBareMetalAdminClusterValidationCheckStatusArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterValidationCheckStatusArrayOutput)
}

func (i BareMetalAdminClusterValidationCheckStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterValidationCheckStatus] {
	return pulumix.Output[[]BareMetalAdminClusterValidationCheckStatus]{
		OutputState: i.ToBareMetalAdminClusterValidationCheckStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterValidationCheckStatusOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterValidationCheckStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterValidationCheckStatus)(nil)).Elem()
}

func (o BareMetalAdminClusterValidationCheckStatusOutput) ToBareMetalAdminClusterValidationCheckStatusOutput() BareMetalAdminClusterValidationCheckStatusOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckStatusOutput) ToBareMetalAdminClusterValidationCheckStatusOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckStatusOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckStatusOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterValidationCheckStatus] {
	return pulumix.Output[BareMetalAdminClusterValidationCheckStatus]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Individual checks which failed as part of the Preflight check execution.
// Structure is documented below.
func (o BareMetalAdminClusterValidationCheckStatusOutput) Results() BareMetalAdminClusterValidationCheckStatusResultArrayOutput {
	return o.ApplyT(func(v BareMetalAdminClusterValidationCheckStatus) []BareMetalAdminClusterValidationCheckStatusResult {
		return v.Results
	}).(BareMetalAdminClusterValidationCheckStatusResultArrayOutput)
}

type BareMetalAdminClusterValidationCheckStatusArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterValidationCheckStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterValidationCheckStatus)(nil)).Elem()
}

func (o BareMetalAdminClusterValidationCheckStatusArrayOutput) ToBareMetalAdminClusterValidationCheckStatusArrayOutput() BareMetalAdminClusterValidationCheckStatusArrayOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckStatusArrayOutput) ToBareMetalAdminClusterValidationCheckStatusArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckStatusArrayOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterValidationCheckStatus] {
	return pulumix.Output[[]BareMetalAdminClusterValidationCheckStatus]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterValidationCheckStatusArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterValidationCheckStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterValidationCheckStatus {
		return vs[0].([]BareMetalAdminClusterValidationCheckStatus)[vs[1].(int)]
	}).(BareMetalAdminClusterValidationCheckStatusOutput)
}

type BareMetalAdminClusterValidationCheckStatusResult struct {
	// (Output)
	// The category of the validation.
	Category *string `pulumi:"category"`
	// A human readable description of this Bare Metal Admin Cluster.
	Description *string `pulumi:"description"`
	// (Output)
	// Detailed failure information, which might be unformatted.
	Details *string `pulumi:"details"`
	// (Output)
	// Options used for the validation check.
	Options *string `pulumi:"options"`
	// (Output)
	// A human-readable message of the check failure.
	Reason *string `pulumi:"reason"`
}

// BareMetalAdminClusterValidationCheckStatusResultInput is an input type that accepts BareMetalAdminClusterValidationCheckStatusResultArgs and BareMetalAdminClusterValidationCheckStatusResultOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterValidationCheckStatusResultInput` via:
//
//	BareMetalAdminClusterValidationCheckStatusResultArgs{...}
type BareMetalAdminClusterValidationCheckStatusResultInput interface {
	pulumi.Input

	ToBareMetalAdminClusterValidationCheckStatusResultOutput() BareMetalAdminClusterValidationCheckStatusResultOutput
	ToBareMetalAdminClusterValidationCheckStatusResultOutputWithContext(context.Context) BareMetalAdminClusterValidationCheckStatusResultOutput
}

type BareMetalAdminClusterValidationCheckStatusResultArgs struct {
	// (Output)
	// The category of the validation.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// A human readable description of this Bare Metal Admin Cluster.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Output)
	// Detailed failure information, which might be unformatted.
	Details pulumi.StringPtrInput `pulumi:"details"`
	// (Output)
	// Options used for the validation check.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// (Output)
	// A human-readable message of the check failure.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (BareMetalAdminClusterValidationCheckStatusResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterValidationCheckStatusResult)(nil)).Elem()
}

func (i BareMetalAdminClusterValidationCheckStatusResultArgs) ToBareMetalAdminClusterValidationCheckStatusResultOutput() BareMetalAdminClusterValidationCheckStatusResultOutput {
	return i.ToBareMetalAdminClusterValidationCheckStatusResultOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterValidationCheckStatusResultArgs) ToBareMetalAdminClusterValidationCheckStatusResultOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckStatusResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterValidationCheckStatusResultOutput)
}

func (i BareMetalAdminClusterValidationCheckStatusResultArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterValidationCheckStatusResult] {
	return pulumix.Output[BareMetalAdminClusterValidationCheckStatusResult]{
		OutputState: i.ToBareMetalAdminClusterValidationCheckStatusResultOutputWithContext(ctx).OutputState,
	}
}

// BareMetalAdminClusterValidationCheckStatusResultArrayInput is an input type that accepts BareMetalAdminClusterValidationCheckStatusResultArray and BareMetalAdminClusterValidationCheckStatusResultArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterValidationCheckStatusResultArrayInput` via:
//
//	BareMetalAdminClusterValidationCheckStatusResultArray{ BareMetalAdminClusterValidationCheckStatusResultArgs{...} }
type BareMetalAdminClusterValidationCheckStatusResultArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterValidationCheckStatusResultArrayOutput() BareMetalAdminClusterValidationCheckStatusResultArrayOutput
	ToBareMetalAdminClusterValidationCheckStatusResultArrayOutputWithContext(context.Context) BareMetalAdminClusterValidationCheckStatusResultArrayOutput
}

type BareMetalAdminClusterValidationCheckStatusResultArray []BareMetalAdminClusterValidationCheckStatusResultInput

func (BareMetalAdminClusterValidationCheckStatusResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterValidationCheckStatusResult)(nil)).Elem()
}

func (i BareMetalAdminClusterValidationCheckStatusResultArray) ToBareMetalAdminClusterValidationCheckStatusResultArrayOutput() BareMetalAdminClusterValidationCheckStatusResultArrayOutput {
	return i.ToBareMetalAdminClusterValidationCheckStatusResultArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterValidationCheckStatusResultArray) ToBareMetalAdminClusterValidationCheckStatusResultArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckStatusResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterValidationCheckStatusResultArrayOutput)
}

func (i BareMetalAdminClusterValidationCheckStatusResultArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterValidationCheckStatusResult] {
	return pulumix.Output[[]BareMetalAdminClusterValidationCheckStatusResult]{
		OutputState: i.ToBareMetalAdminClusterValidationCheckStatusResultArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalAdminClusterValidationCheckStatusResultOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterValidationCheckStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalAdminClusterValidationCheckStatusResult)(nil)).Elem()
}

func (o BareMetalAdminClusterValidationCheckStatusResultOutput) ToBareMetalAdminClusterValidationCheckStatusResultOutput() BareMetalAdminClusterValidationCheckStatusResultOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckStatusResultOutput) ToBareMetalAdminClusterValidationCheckStatusResultOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckStatusResultOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckStatusResultOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalAdminClusterValidationCheckStatusResult] {
	return pulumix.Output[BareMetalAdminClusterValidationCheckStatusResult]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The category of the validation.
func (o BareMetalAdminClusterValidationCheckStatusResultOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterValidationCheckStatusResult) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// A human readable description of this Bare Metal Admin Cluster.
func (o BareMetalAdminClusterValidationCheckStatusResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterValidationCheckStatusResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Output)
// Detailed failure information, which might be unformatted.
func (o BareMetalAdminClusterValidationCheckStatusResultOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterValidationCheckStatusResult) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// (Output)
// Options used for the validation check.
func (o BareMetalAdminClusterValidationCheckStatusResultOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterValidationCheckStatusResult) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// (Output)
// A human-readable message of the check failure.
func (o BareMetalAdminClusterValidationCheckStatusResultOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalAdminClusterValidationCheckStatusResult) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

type BareMetalAdminClusterValidationCheckStatusResultArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterValidationCheckStatusResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalAdminClusterValidationCheckStatusResult)(nil)).Elem()
}

func (o BareMetalAdminClusterValidationCheckStatusResultArrayOutput) ToBareMetalAdminClusterValidationCheckStatusResultArrayOutput() BareMetalAdminClusterValidationCheckStatusResultArrayOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckStatusResultArrayOutput) ToBareMetalAdminClusterValidationCheckStatusResultArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterValidationCheckStatusResultArrayOutput {
	return o
}

func (o BareMetalAdminClusterValidationCheckStatusResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalAdminClusterValidationCheckStatusResult] {
	return pulumix.Output[[]BareMetalAdminClusterValidationCheckStatusResult]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalAdminClusterValidationCheckStatusResultArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterValidationCheckStatusResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalAdminClusterValidationCheckStatusResult {
		return vs[0].([]BareMetalAdminClusterValidationCheckStatusResult)[vs[1].(int)]
	}).(BareMetalAdminClusterValidationCheckStatusResultOutput)
}

type BareMetalClusterClusterOperations struct {
	// Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
	EnableApplicationLogs *bool `pulumi:"enableApplicationLogs"`
}

// BareMetalClusterClusterOperationsInput is an input type that accepts BareMetalClusterClusterOperationsArgs and BareMetalClusterClusterOperationsOutput values.
// You can construct a concrete instance of `BareMetalClusterClusterOperationsInput` via:
//
//	BareMetalClusterClusterOperationsArgs{...}
type BareMetalClusterClusterOperationsInput interface {
	pulumi.Input

	ToBareMetalClusterClusterOperationsOutput() BareMetalClusterClusterOperationsOutput
	ToBareMetalClusterClusterOperationsOutputWithContext(context.Context) BareMetalClusterClusterOperationsOutput
}

type BareMetalClusterClusterOperationsArgs struct {
	// Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
	EnableApplicationLogs pulumi.BoolPtrInput `pulumi:"enableApplicationLogs"`
}

func (BareMetalClusterClusterOperationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterClusterOperations)(nil)).Elem()
}

func (i BareMetalClusterClusterOperationsArgs) ToBareMetalClusterClusterOperationsOutput() BareMetalClusterClusterOperationsOutput {
	return i.ToBareMetalClusterClusterOperationsOutputWithContext(context.Background())
}

func (i BareMetalClusterClusterOperationsArgs) ToBareMetalClusterClusterOperationsOutputWithContext(ctx context.Context) BareMetalClusterClusterOperationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterClusterOperationsOutput)
}

func (i BareMetalClusterClusterOperationsArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterClusterOperations] {
	return pulumix.Output[BareMetalClusterClusterOperations]{
		OutputState: i.ToBareMetalClusterClusterOperationsOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterClusterOperationsArgs) ToBareMetalClusterClusterOperationsPtrOutput() BareMetalClusterClusterOperationsPtrOutput {
	return i.ToBareMetalClusterClusterOperationsPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterClusterOperationsArgs) ToBareMetalClusterClusterOperationsPtrOutputWithContext(ctx context.Context) BareMetalClusterClusterOperationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterClusterOperationsOutput).ToBareMetalClusterClusterOperationsPtrOutputWithContext(ctx)
}

// BareMetalClusterClusterOperationsPtrInput is an input type that accepts BareMetalClusterClusterOperationsArgs, BareMetalClusterClusterOperationsPtr and BareMetalClusterClusterOperationsPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterClusterOperationsPtrInput` via:
//
//	        BareMetalClusterClusterOperationsArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterClusterOperationsPtrInput interface {
	pulumi.Input

	ToBareMetalClusterClusterOperationsPtrOutput() BareMetalClusterClusterOperationsPtrOutput
	ToBareMetalClusterClusterOperationsPtrOutputWithContext(context.Context) BareMetalClusterClusterOperationsPtrOutput
}

type bareMetalClusterClusterOperationsPtrType BareMetalClusterClusterOperationsArgs

func BareMetalClusterClusterOperationsPtr(v *BareMetalClusterClusterOperationsArgs) BareMetalClusterClusterOperationsPtrInput {
	return (*bareMetalClusterClusterOperationsPtrType)(v)
}

func (*bareMetalClusterClusterOperationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterClusterOperations)(nil)).Elem()
}

func (i *bareMetalClusterClusterOperationsPtrType) ToBareMetalClusterClusterOperationsPtrOutput() BareMetalClusterClusterOperationsPtrOutput {
	return i.ToBareMetalClusterClusterOperationsPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterClusterOperationsPtrType) ToBareMetalClusterClusterOperationsPtrOutputWithContext(ctx context.Context) BareMetalClusterClusterOperationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterClusterOperationsPtrOutput)
}

func (i *bareMetalClusterClusterOperationsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterClusterOperations] {
	return pulumix.Output[*BareMetalClusterClusterOperations]{
		OutputState: i.ToBareMetalClusterClusterOperationsPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterClusterOperationsOutput struct{ *pulumi.OutputState }

func (BareMetalClusterClusterOperationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterClusterOperations)(nil)).Elem()
}

func (o BareMetalClusterClusterOperationsOutput) ToBareMetalClusterClusterOperationsOutput() BareMetalClusterClusterOperationsOutput {
	return o
}

func (o BareMetalClusterClusterOperationsOutput) ToBareMetalClusterClusterOperationsOutputWithContext(ctx context.Context) BareMetalClusterClusterOperationsOutput {
	return o
}

func (o BareMetalClusterClusterOperationsOutput) ToBareMetalClusterClusterOperationsPtrOutput() BareMetalClusterClusterOperationsPtrOutput {
	return o.ToBareMetalClusterClusterOperationsPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterClusterOperationsOutput) ToBareMetalClusterClusterOperationsPtrOutputWithContext(ctx context.Context) BareMetalClusterClusterOperationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterClusterOperations) *BareMetalClusterClusterOperations {
		return &v
	}).(BareMetalClusterClusterOperationsPtrOutput)
}

func (o BareMetalClusterClusterOperationsOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterClusterOperations] {
	return pulumix.Output[BareMetalClusterClusterOperations]{
		OutputState: o.OutputState,
	}
}

// Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
func (o BareMetalClusterClusterOperationsOutput) EnableApplicationLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BareMetalClusterClusterOperations) *bool { return v.EnableApplicationLogs }).(pulumi.BoolPtrOutput)
}

type BareMetalClusterClusterOperationsPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterClusterOperationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterClusterOperations)(nil)).Elem()
}

func (o BareMetalClusterClusterOperationsPtrOutput) ToBareMetalClusterClusterOperationsPtrOutput() BareMetalClusterClusterOperationsPtrOutput {
	return o
}

func (o BareMetalClusterClusterOperationsPtrOutput) ToBareMetalClusterClusterOperationsPtrOutputWithContext(ctx context.Context) BareMetalClusterClusterOperationsPtrOutput {
	return o
}

func (o BareMetalClusterClusterOperationsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterClusterOperations] {
	return pulumix.Output[*BareMetalClusterClusterOperations]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterClusterOperationsPtrOutput) Elem() BareMetalClusterClusterOperationsOutput {
	return o.ApplyT(func(v *BareMetalClusterClusterOperations) BareMetalClusterClusterOperations {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterClusterOperations
		return ret
	}).(BareMetalClusterClusterOperationsOutput)
}

// Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).
func (o BareMetalClusterClusterOperationsPtrOutput) EnableApplicationLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterClusterOperations) *bool {
		if v == nil {
			return nil
		}
		return v.EnableApplicationLogs
	}).(pulumi.BoolPtrOutput)
}

type BareMetalClusterControlPlane struct {
	// Customizes the default API server args. Only a subset of
	// customized flags are supported. Please refer to the API server
	// documentation below to know the exact format:
	// https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
	// Structure is documented below.
	ApiServerArgs []BareMetalClusterControlPlaneApiServerArg `pulumi:"apiServerArgs"`
	// Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster.
	// Structure is documented below.
	ControlPlaneNodePoolConfig BareMetalClusterControlPlaneControlPlaneNodePoolConfig `pulumi:"controlPlaneNodePoolConfig"`
}

// BareMetalClusterControlPlaneInput is an input type that accepts BareMetalClusterControlPlaneArgs and BareMetalClusterControlPlaneOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneInput` via:
//
//	BareMetalClusterControlPlaneArgs{...}
type BareMetalClusterControlPlaneInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneOutput() BareMetalClusterControlPlaneOutput
	ToBareMetalClusterControlPlaneOutputWithContext(context.Context) BareMetalClusterControlPlaneOutput
}

type BareMetalClusterControlPlaneArgs struct {
	// Customizes the default API server args. Only a subset of
	// customized flags are supported. Please refer to the API server
	// documentation below to know the exact format:
	// https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
	// Structure is documented below.
	ApiServerArgs BareMetalClusterControlPlaneApiServerArgArrayInput `pulumi:"apiServerArgs"`
	// Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster.
	// Structure is documented below.
	ControlPlaneNodePoolConfig BareMetalClusterControlPlaneControlPlaneNodePoolConfigInput `pulumi:"controlPlaneNodePoolConfig"`
}

func (BareMetalClusterControlPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlane)(nil)).Elem()
}

func (i BareMetalClusterControlPlaneArgs) ToBareMetalClusterControlPlaneOutput() BareMetalClusterControlPlaneOutput {
	return i.ToBareMetalClusterControlPlaneOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneArgs) ToBareMetalClusterControlPlaneOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneOutput)
}

func (i BareMetalClusterControlPlaneArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlane] {
	return pulumix.Output[BareMetalClusterControlPlane]{
		OutputState: i.ToBareMetalClusterControlPlaneOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterControlPlaneArgs) ToBareMetalClusterControlPlanePtrOutput() BareMetalClusterControlPlanePtrOutput {
	return i.ToBareMetalClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneArgs) ToBareMetalClusterControlPlanePtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneOutput).ToBareMetalClusterControlPlanePtrOutputWithContext(ctx)
}

// BareMetalClusterControlPlanePtrInput is an input type that accepts BareMetalClusterControlPlaneArgs, BareMetalClusterControlPlanePtr and BareMetalClusterControlPlanePtrOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlanePtrInput` via:
//
//	        BareMetalClusterControlPlaneArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterControlPlanePtrInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlanePtrOutput() BareMetalClusterControlPlanePtrOutput
	ToBareMetalClusterControlPlanePtrOutputWithContext(context.Context) BareMetalClusterControlPlanePtrOutput
}

type bareMetalClusterControlPlanePtrType BareMetalClusterControlPlaneArgs

func BareMetalClusterControlPlanePtr(v *BareMetalClusterControlPlaneArgs) BareMetalClusterControlPlanePtrInput {
	return (*bareMetalClusterControlPlanePtrType)(v)
}

func (*bareMetalClusterControlPlanePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterControlPlane)(nil)).Elem()
}

func (i *bareMetalClusterControlPlanePtrType) ToBareMetalClusterControlPlanePtrOutput() BareMetalClusterControlPlanePtrOutput {
	return i.ToBareMetalClusterControlPlanePtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterControlPlanePtrType) ToBareMetalClusterControlPlanePtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlanePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlanePtrOutput)
}

func (i *bareMetalClusterControlPlanePtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterControlPlane] {
	return pulumix.Output[*BareMetalClusterControlPlane]{
		OutputState: i.ToBareMetalClusterControlPlanePtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterControlPlaneOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlane)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneOutput) ToBareMetalClusterControlPlaneOutput() BareMetalClusterControlPlaneOutput {
	return o
}

func (o BareMetalClusterControlPlaneOutput) ToBareMetalClusterControlPlaneOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneOutput {
	return o
}

func (o BareMetalClusterControlPlaneOutput) ToBareMetalClusterControlPlanePtrOutput() BareMetalClusterControlPlanePtrOutput {
	return o.ToBareMetalClusterControlPlanePtrOutputWithContext(context.Background())
}

func (o BareMetalClusterControlPlaneOutput) ToBareMetalClusterControlPlanePtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlanePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterControlPlane) *BareMetalClusterControlPlane {
		return &v
	}).(BareMetalClusterControlPlanePtrOutput)
}

func (o BareMetalClusterControlPlaneOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlane] {
	return pulumix.Output[BareMetalClusterControlPlane]{
		OutputState: o.OutputState,
	}
}

// Customizes the default API server args. Only a subset of
// customized flags are supported. Please refer to the API server
// documentation below to know the exact format:
// https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
// Structure is documented below.
func (o BareMetalClusterControlPlaneOutput) ApiServerArgs() BareMetalClusterControlPlaneApiServerArgArrayOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlane) []BareMetalClusterControlPlaneApiServerArg {
		return v.ApiServerArgs
	}).(BareMetalClusterControlPlaneApiServerArgArrayOutput)
}

// Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster.
// Structure is documented below.
func (o BareMetalClusterControlPlaneOutput) ControlPlaneNodePoolConfig() BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlane) BareMetalClusterControlPlaneControlPlaneNodePoolConfig {
		return v.ControlPlaneNodePoolConfig
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput)
}

type BareMetalClusterControlPlanePtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlanePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterControlPlane)(nil)).Elem()
}

func (o BareMetalClusterControlPlanePtrOutput) ToBareMetalClusterControlPlanePtrOutput() BareMetalClusterControlPlanePtrOutput {
	return o
}

func (o BareMetalClusterControlPlanePtrOutput) ToBareMetalClusterControlPlanePtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlanePtrOutput {
	return o
}

func (o BareMetalClusterControlPlanePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterControlPlane] {
	return pulumix.Output[*BareMetalClusterControlPlane]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterControlPlanePtrOutput) Elem() BareMetalClusterControlPlaneOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlane) BareMetalClusterControlPlane {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterControlPlane
		return ret
	}).(BareMetalClusterControlPlaneOutput)
}

// Customizes the default API server args. Only a subset of
// customized flags are supported. Please refer to the API server
// documentation below to know the exact format:
// https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
// Structure is documented below.
func (o BareMetalClusterControlPlanePtrOutput) ApiServerArgs() BareMetalClusterControlPlaneApiServerArgArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlane) []BareMetalClusterControlPlaneApiServerArg {
		if v == nil {
			return nil
		}
		return v.ApiServerArgs
	}).(BareMetalClusterControlPlaneApiServerArgArrayOutput)
}

// Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster.
// Structure is documented below.
func (o BareMetalClusterControlPlanePtrOutput) ControlPlaneNodePoolConfig() BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlane) *BareMetalClusterControlPlaneControlPlaneNodePoolConfig {
		if v == nil {
			return nil
		}
		return &v.ControlPlaneNodePoolConfig
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput)
}

type BareMetalClusterControlPlaneApiServerArg struct {
	// The argument name as it appears on the API Server command line please make sure to remove the leading dashes.
	Argument string `pulumi:"argument"`
	// The value of the arg as it will be passed to the API Server command line.
	Value string `pulumi:"value"`
}

// BareMetalClusterControlPlaneApiServerArgInput is an input type that accepts BareMetalClusterControlPlaneApiServerArgArgs and BareMetalClusterControlPlaneApiServerArgOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneApiServerArgInput` via:
//
//	BareMetalClusterControlPlaneApiServerArgArgs{...}
type BareMetalClusterControlPlaneApiServerArgInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneApiServerArgOutput() BareMetalClusterControlPlaneApiServerArgOutput
	ToBareMetalClusterControlPlaneApiServerArgOutputWithContext(context.Context) BareMetalClusterControlPlaneApiServerArgOutput
}

type BareMetalClusterControlPlaneApiServerArgArgs struct {
	// The argument name as it appears on the API Server command line please make sure to remove the leading dashes.
	Argument pulumi.StringInput `pulumi:"argument"`
	// The value of the arg as it will be passed to the API Server command line.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BareMetalClusterControlPlaneApiServerArgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneApiServerArg)(nil)).Elem()
}

func (i BareMetalClusterControlPlaneApiServerArgArgs) ToBareMetalClusterControlPlaneApiServerArgOutput() BareMetalClusterControlPlaneApiServerArgOutput {
	return i.ToBareMetalClusterControlPlaneApiServerArgOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneApiServerArgArgs) ToBareMetalClusterControlPlaneApiServerArgOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneApiServerArgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneApiServerArgOutput)
}

func (i BareMetalClusterControlPlaneApiServerArgArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneApiServerArg] {
	return pulumix.Output[BareMetalClusterControlPlaneApiServerArg]{
		OutputState: i.ToBareMetalClusterControlPlaneApiServerArgOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterControlPlaneApiServerArgArrayInput is an input type that accepts BareMetalClusterControlPlaneApiServerArgArray and BareMetalClusterControlPlaneApiServerArgArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneApiServerArgArrayInput` via:
//
//	BareMetalClusterControlPlaneApiServerArgArray{ BareMetalClusterControlPlaneApiServerArgArgs{...} }
type BareMetalClusterControlPlaneApiServerArgArrayInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneApiServerArgArrayOutput() BareMetalClusterControlPlaneApiServerArgArrayOutput
	ToBareMetalClusterControlPlaneApiServerArgArrayOutputWithContext(context.Context) BareMetalClusterControlPlaneApiServerArgArrayOutput
}

type BareMetalClusterControlPlaneApiServerArgArray []BareMetalClusterControlPlaneApiServerArgInput

func (BareMetalClusterControlPlaneApiServerArgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterControlPlaneApiServerArg)(nil)).Elem()
}

func (i BareMetalClusterControlPlaneApiServerArgArray) ToBareMetalClusterControlPlaneApiServerArgArrayOutput() BareMetalClusterControlPlaneApiServerArgArrayOutput {
	return i.ToBareMetalClusterControlPlaneApiServerArgArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneApiServerArgArray) ToBareMetalClusterControlPlaneApiServerArgArrayOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneApiServerArgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneApiServerArgArrayOutput)
}

func (i BareMetalClusterControlPlaneApiServerArgArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterControlPlaneApiServerArg] {
	return pulumix.Output[[]BareMetalClusterControlPlaneApiServerArg]{
		OutputState: i.ToBareMetalClusterControlPlaneApiServerArgArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterControlPlaneApiServerArgOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneApiServerArgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneApiServerArg)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneApiServerArgOutput) ToBareMetalClusterControlPlaneApiServerArgOutput() BareMetalClusterControlPlaneApiServerArgOutput {
	return o
}

func (o BareMetalClusterControlPlaneApiServerArgOutput) ToBareMetalClusterControlPlaneApiServerArgOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneApiServerArgOutput {
	return o
}

func (o BareMetalClusterControlPlaneApiServerArgOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneApiServerArg] {
	return pulumix.Output[BareMetalClusterControlPlaneApiServerArg]{
		OutputState: o.OutputState,
	}
}

// The argument name as it appears on the API Server command line please make sure to remove the leading dashes.
func (o BareMetalClusterControlPlaneApiServerArgOutput) Argument() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneApiServerArg) string { return v.Argument }).(pulumi.StringOutput)
}

// The value of the arg as it will be passed to the API Server command line.
func (o BareMetalClusterControlPlaneApiServerArgOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneApiServerArg) string { return v.Value }).(pulumi.StringOutput)
}

type BareMetalClusterControlPlaneApiServerArgArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneApiServerArgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterControlPlaneApiServerArg)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneApiServerArgArrayOutput) ToBareMetalClusterControlPlaneApiServerArgArrayOutput() BareMetalClusterControlPlaneApiServerArgArrayOutput {
	return o
}

func (o BareMetalClusterControlPlaneApiServerArgArrayOutput) ToBareMetalClusterControlPlaneApiServerArgArrayOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneApiServerArgArrayOutput {
	return o
}

func (o BareMetalClusterControlPlaneApiServerArgArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterControlPlaneApiServerArg] {
	return pulumix.Output[[]BareMetalClusterControlPlaneApiServerArg]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterControlPlaneApiServerArgArrayOutput) Index(i pulumi.IntInput) BareMetalClusterControlPlaneApiServerArgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterControlPlaneApiServerArg {
		return vs[0].([]BareMetalClusterControlPlaneApiServerArg)[vs[1].(int)]
	}).(BareMetalClusterControlPlaneApiServerArgOutput)
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfig struct {
	// The generic configuration for a node pool running the control plane.
	// Structure is documented below.
	NodePoolConfig BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig `pulumi:"nodePoolConfig"`
}

// BareMetalClusterControlPlaneControlPlaneNodePoolConfigInput is an input type that accepts BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs and BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneControlPlaneNodePoolConfigInput` via:
//
//	BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs{...}
type BareMetalClusterControlPlaneControlPlaneNodePoolConfigInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput
	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs struct {
	// The generic configuration for a node pool running the control plane.
	// Structure is documented below.
	NodePoolConfig BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput `pulumi:"nodePoolConfig"`
}

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfig)(nil)).Elem()
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput)
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfig] {
	return pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfig]{
		OutputState: i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput).ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrInput is an input type that accepts BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs, BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtr and BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrInput` via:
//
//	        BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput
	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput
}

type bareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrType BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs

func BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtr(v *BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs) BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrInput {
	return (*bareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrType)(v)
}

func (*bareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterControlPlaneControlPlaneNodePoolConfig)(nil)).Elem()
}

func (i *bareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrType) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrType) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput)
}

func (i *bareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterControlPlaneControlPlaneNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterControlPlaneControlPlaneNodePoolConfig]{
		OutputState: i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterControlPlaneControlPlaneNodePoolConfig) *BareMetalClusterControlPlaneControlPlaneNodePoolConfig {
		return &v
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput)
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfig] {
	return pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// The generic configuration for a node pool running the control plane.
// Structure is documented below.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput) NodePoolConfig() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfig) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig {
		return v.NodePoolConfig
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput)
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterControlPlaneControlPlaneNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterControlPlaneControlPlaneNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterControlPlaneControlPlaneNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) Elem() BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlaneControlPlaneNodePoolConfig) BareMetalClusterControlPlaneControlPlaneNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterControlPlaneControlPlaneNodePoolConfig
		return ret
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput)
}

// The generic configuration for a node pool running the control plane.
// Structure is documented below.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput) NodePoolConfig() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlaneControlPlaneNodePoolConfig) *BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig {
		if v == nil {
			return nil
		}
		return &v.NodePoolConfig
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput)
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs []BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem *string `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints []BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint `pulumi:"taints"`
}

// BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput is an input type that accepts BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs and BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput` via:
//
//	BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{...}
type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput
	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem pulumi.StringPtrInput `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput `pulumi:"taints"`
}

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput)
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig] {
	return pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig]{
		OutputState: i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput).ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput is an input type that accepts BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs, BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtr and BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput` via:
//
//	        BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput
	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput
}

type bareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs

func BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtr(v *BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput {
	return (*bareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType)(v)
}

func (*bareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (i *bareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput)
}

func (i *bareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig]{
		OutputState: i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) *BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig {
		return &v
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput)
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig] {
	return pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) NodeConfigs() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) []BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig {
		return v.NodeConfigs
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) *string {
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput) Taints() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) []BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint {
		return v.Taints
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput)
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) Elem() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig
		return ret
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) NodeConfigs() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) []BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig {
		if v == nil {
			return nil
		}
		return v.NodeConfigs
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput) Taints() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfig) []BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput)
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp *string `pulumi:"nodeIp"`
}

// BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput is an input type that accepts BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs and BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput` via:
//
//	BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{...}
type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput
	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp pulumi.StringPtrInput `pulumi:"nodeIp"`
}

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput)
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput is an input type that accepts BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray and BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput` via:
//
//	BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray{ BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{...} }
type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput
	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray []BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The default IPv4 address for SSH access and Kubernetes node.
// Example: 192.168.0.1
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput) NodeIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig) *string {
		return v.NodeIp
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput) Index(i pulumi.IntInput) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig {
		return vs[0].([]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfig)[vs[1].(int)]
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput)
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	Effect *string `pulumi:"effect"`
	// Key associated with the effect.
	Key *string `pulumi:"key"`
	// Value associated with the effect.
	Value *string `pulumi:"value"`
}

// BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput is an input type that accepts BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs and BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput` via:
//
//	BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs{...}
type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput
	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key associated with the effect.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value associated with the effect.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput)
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint]{
		OutputState: i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput is an input type that accepts BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray and BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput` via:
//
//	BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray{ BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs{...} }
type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput interface {
	pulumi.Input

	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput
	ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray []BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput)
}

func (i BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint]{
		OutputState: i.ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

// Specifies the nodes operating system (default: LINUX).
// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint) *string {
		return v.Effect
	}).(pulumi.StringPtrOutput)
}

// Key associated with the effect.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Value associated with the effect.
func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) ToBareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput) Index(i pulumi.IntInput) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint {
		return vs[0].([]BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaint)[vs[1].(int)]
	}).(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput)
}

type BareMetalClusterFleet struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this cluster.
	// Membership names are formatted as
	// `projects/<project-number>/locations/<location>/memberships/<cluster-id>`.
	Membership *string `pulumi:"membership"`
}

// BareMetalClusterFleetInput is an input type that accepts BareMetalClusterFleetArgs and BareMetalClusterFleetOutput values.
// You can construct a concrete instance of `BareMetalClusterFleetInput` via:
//
//	BareMetalClusterFleetArgs{...}
type BareMetalClusterFleetInput interface {
	pulumi.Input

	ToBareMetalClusterFleetOutput() BareMetalClusterFleetOutput
	ToBareMetalClusterFleetOutputWithContext(context.Context) BareMetalClusterFleetOutput
}

type BareMetalClusterFleetArgs struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this cluster.
	// Membership names are formatted as
	// `projects/<project-number>/locations/<location>/memberships/<cluster-id>`.
	Membership pulumi.StringPtrInput `pulumi:"membership"`
}

func (BareMetalClusterFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterFleet)(nil)).Elem()
}

func (i BareMetalClusterFleetArgs) ToBareMetalClusterFleetOutput() BareMetalClusterFleetOutput {
	return i.ToBareMetalClusterFleetOutputWithContext(context.Background())
}

func (i BareMetalClusterFleetArgs) ToBareMetalClusterFleetOutputWithContext(ctx context.Context) BareMetalClusterFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterFleetOutput)
}

func (i BareMetalClusterFleetArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterFleet] {
	return pulumix.Output[BareMetalClusterFleet]{
		OutputState: i.ToBareMetalClusterFleetOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterFleetArrayInput is an input type that accepts BareMetalClusterFleetArray and BareMetalClusterFleetArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterFleetArrayInput` via:
//
//	BareMetalClusterFleetArray{ BareMetalClusterFleetArgs{...} }
type BareMetalClusterFleetArrayInput interface {
	pulumi.Input

	ToBareMetalClusterFleetArrayOutput() BareMetalClusterFleetArrayOutput
	ToBareMetalClusterFleetArrayOutputWithContext(context.Context) BareMetalClusterFleetArrayOutput
}

type BareMetalClusterFleetArray []BareMetalClusterFleetInput

func (BareMetalClusterFleetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterFleet)(nil)).Elem()
}

func (i BareMetalClusterFleetArray) ToBareMetalClusterFleetArrayOutput() BareMetalClusterFleetArrayOutput {
	return i.ToBareMetalClusterFleetArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterFleetArray) ToBareMetalClusterFleetArrayOutputWithContext(ctx context.Context) BareMetalClusterFleetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterFleetArrayOutput)
}

func (i BareMetalClusterFleetArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterFleet] {
	return pulumix.Output[[]BareMetalClusterFleet]{
		OutputState: i.ToBareMetalClusterFleetArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterFleetOutput struct{ *pulumi.OutputState }

func (BareMetalClusterFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterFleet)(nil)).Elem()
}

func (o BareMetalClusterFleetOutput) ToBareMetalClusterFleetOutput() BareMetalClusterFleetOutput {
	return o
}

func (o BareMetalClusterFleetOutput) ToBareMetalClusterFleetOutputWithContext(ctx context.Context) BareMetalClusterFleetOutput {
	return o
}

func (o BareMetalClusterFleetOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterFleet] {
	return pulumix.Output[BareMetalClusterFleet]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The name of the managed Hub Membership resource associated to this cluster.
// Membership names are formatted as
// `projects/<project-number>/locations/<location>/memberships/<cluster-id>`.
func (o BareMetalClusterFleetOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterFleet) *string { return v.Membership }).(pulumi.StringPtrOutput)
}

type BareMetalClusterFleetArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterFleetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterFleet)(nil)).Elem()
}

func (o BareMetalClusterFleetArrayOutput) ToBareMetalClusterFleetArrayOutput() BareMetalClusterFleetArrayOutput {
	return o
}

func (o BareMetalClusterFleetArrayOutput) ToBareMetalClusterFleetArrayOutputWithContext(ctx context.Context) BareMetalClusterFleetArrayOutput {
	return o
}

func (o BareMetalClusterFleetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterFleet] {
	return pulumix.Output[[]BareMetalClusterFleet]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterFleetArrayOutput) Index(i pulumi.IntInput) BareMetalClusterFleetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterFleet {
		return vs[0].([]BareMetalClusterFleet)[vs[1].(int)]
	}).(BareMetalClusterFleetOutput)
}

type BareMetalClusterLoadBalancer struct {
	// Configuration for BGP typed load balancers.
	// Structure is documented below.
	BgpLbConfig *BareMetalClusterLoadBalancerBgpLbConfig `pulumi:"bgpLbConfig"`
	// A nested object resource
	// Structure is documented below.
	ManualLbConfig *BareMetalClusterLoadBalancerManualLbConfig `pulumi:"manualLbConfig"`
	// A nested object resource
	// Structure is documented below.
	MetalLbConfig *BareMetalClusterLoadBalancerMetalLbConfig `pulumi:"metalLbConfig"`
	// Specifies the load balancer ports.
	// Structure is documented below.
	PortConfig BareMetalClusterLoadBalancerPortConfig `pulumi:"portConfig"`
	// Specified the Bare Metal Load Balancer Config
	// Structure is documented below.
	VipConfig BareMetalClusterLoadBalancerVipConfig `pulumi:"vipConfig"`
}

// BareMetalClusterLoadBalancerInput is an input type that accepts BareMetalClusterLoadBalancerArgs and BareMetalClusterLoadBalancerOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerInput` via:
//
//	BareMetalClusterLoadBalancerArgs{...}
type BareMetalClusterLoadBalancerInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerOutput() BareMetalClusterLoadBalancerOutput
	ToBareMetalClusterLoadBalancerOutputWithContext(context.Context) BareMetalClusterLoadBalancerOutput
}

type BareMetalClusterLoadBalancerArgs struct {
	// Configuration for BGP typed load balancers.
	// Structure is documented below.
	BgpLbConfig BareMetalClusterLoadBalancerBgpLbConfigPtrInput `pulumi:"bgpLbConfig"`
	// A nested object resource
	// Structure is documented below.
	ManualLbConfig BareMetalClusterLoadBalancerManualLbConfigPtrInput `pulumi:"manualLbConfig"`
	// A nested object resource
	// Structure is documented below.
	MetalLbConfig BareMetalClusterLoadBalancerMetalLbConfigPtrInput `pulumi:"metalLbConfig"`
	// Specifies the load balancer ports.
	// Structure is documented below.
	PortConfig BareMetalClusterLoadBalancerPortConfigInput `pulumi:"portConfig"`
	// Specified the Bare Metal Load Balancer Config
	// Structure is documented below.
	VipConfig BareMetalClusterLoadBalancerVipConfigInput `pulumi:"vipConfig"`
}

func (BareMetalClusterLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancer)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerArgs) ToBareMetalClusterLoadBalancerOutput() BareMetalClusterLoadBalancerOutput {
	return i.ToBareMetalClusterLoadBalancerOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerArgs) ToBareMetalClusterLoadBalancerOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerOutput)
}

func (i BareMetalClusterLoadBalancerArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancer] {
	return pulumix.Output[BareMetalClusterLoadBalancer]{
		OutputState: i.ToBareMetalClusterLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerArgs) ToBareMetalClusterLoadBalancerPtrOutput() BareMetalClusterLoadBalancerPtrOutput {
	return i.ToBareMetalClusterLoadBalancerPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerArgs) ToBareMetalClusterLoadBalancerPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerOutput).ToBareMetalClusterLoadBalancerPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerPtrInput is an input type that accepts BareMetalClusterLoadBalancerArgs, BareMetalClusterLoadBalancerPtr and BareMetalClusterLoadBalancerPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerPtrInput` via:
//
//	        BareMetalClusterLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerPtrOutput() BareMetalClusterLoadBalancerPtrOutput
	ToBareMetalClusterLoadBalancerPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerPtrOutput
}

type bareMetalClusterLoadBalancerPtrType BareMetalClusterLoadBalancerArgs

func BareMetalClusterLoadBalancerPtr(v *BareMetalClusterLoadBalancerArgs) BareMetalClusterLoadBalancerPtrInput {
	return (*bareMetalClusterLoadBalancerPtrType)(v)
}

func (*bareMetalClusterLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancer)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerPtrType) ToBareMetalClusterLoadBalancerPtrOutput() BareMetalClusterLoadBalancerPtrOutput {
	return i.ToBareMetalClusterLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerPtrType) ToBareMetalClusterLoadBalancerPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerPtrOutput)
}

func (i *bareMetalClusterLoadBalancerPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancer] {
	return pulumix.Output[*BareMetalClusterLoadBalancer]{
		OutputState: i.ToBareMetalClusterLoadBalancerPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancer)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerOutput) ToBareMetalClusterLoadBalancerOutput() BareMetalClusterLoadBalancerOutput {
	return o
}

func (o BareMetalClusterLoadBalancerOutput) ToBareMetalClusterLoadBalancerOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerOutput {
	return o
}

func (o BareMetalClusterLoadBalancerOutput) ToBareMetalClusterLoadBalancerPtrOutput() BareMetalClusterLoadBalancerPtrOutput {
	return o.ToBareMetalClusterLoadBalancerPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerOutput) ToBareMetalClusterLoadBalancerPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancer) *BareMetalClusterLoadBalancer {
		return &v
	}).(BareMetalClusterLoadBalancerPtrOutput)
}

func (o BareMetalClusterLoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancer] {
	return pulumix.Output[BareMetalClusterLoadBalancer]{
		OutputState: o.OutputState,
	}
}

// Configuration for BGP typed load balancers.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerOutput) BgpLbConfig() BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancer) *BareMetalClusterLoadBalancerBgpLbConfig { return v.BgpLbConfig }).(BareMetalClusterLoadBalancerBgpLbConfigPtrOutput)
}

// A nested object resource
// Structure is documented below.
func (o BareMetalClusterLoadBalancerOutput) ManualLbConfig() BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancer) *BareMetalClusterLoadBalancerManualLbConfig {
		return v.ManualLbConfig
	}).(BareMetalClusterLoadBalancerManualLbConfigPtrOutput)
}

// A nested object resource
// Structure is documented below.
func (o BareMetalClusterLoadBalancerOutput) MetalLbConfig() BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancer) *BareMetalClusterLoadBalancerMetalLbConfig {
		return v.MetalLbConfig
	}).(BareMetalClusterLoadBalancerMetalLbConfigPtrOutput)
}

// Specifies the load balancer ports.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerOutput) PortConfig() BareMetalClusterLoadBalancerPortConfigOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancer) BareMetalClusterLoadBalancerPortConfig { return v.PortConfig }).(BareMetalClusterLoadBalancerPortConfigOutput)
}

// Specified the Bare Metal Load Balancer Config
// Structure is documented below.
func (o BareMetalClusterLoadBalancerOutput) VipConfig() BareMetalClusterLoadBalancerVipConfigOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancer) BareMetalClusterLoadBalancerVipConfig { return v.VipConfig }).(BareMetalClusterLoadBalancerVipConfigOutput)
}

type BareMetalClusterLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancer)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerPtrOutput) ToBareMetalClusterLoadBalancerPtrOutput() BareMetalClusterLoadBalancerPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerPtrOutput) ToBareMetalClusterLoadBalancerPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancer] {
	return pulumix.Output[*BareMetalClusterLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerPtrOutput) Elem() BareMetalClusterLoadBalancerOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancer) BareMetalClusterLoadBalancer {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancer
		return ret
	}).(BareMetalClusterLoadBalancerOutput)
}

// Configuration for BGP typed load balancers.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerPtrOutput) BgpLbConfig() BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancer) *BareMetalClusterLoadBalancerBgpLbConfig {
		if v == nil {
			return nil
		}
		return v.BgpLbConfig
	}).(BareMetalClusterLoadBalancerBgpLbConfigPtrOutput)
}

// A nested object resource
// Structure is documented below.
func (o BareMetalClusterLoadBalancerPtrOutput) ManualLbConfig() BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancer) *BareMetalClusterLoadBalancerManualLbConfig {
		if v == nil {
			return nil
		}
		return v.ManualLbConfig
	}).(BareMetalClusterLoadBalancerManualLbConfigPtrOutput)
}

// A nested object resource
// Structure is documented below.
func (o BareMetalClusterLoadBalancerPtrOutput) MetalLbConfig() BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancer) *BareMetalClusterLoadBalancerMetalLbConfig {
		if v == nil {
			return nil
		}
		return v.MetalLbConfig
	}).(BareMetalClusterLoadBalancerMetalLbConfigPtrOutput)
}

// Specifies the load balancer ports.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerPtrOutput) PortConfig() BareMetalClusterLoadBalancerPortConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancer) *BareMetalClusterLoadBalancerPortConfig {
		if v == nil {
			return nil
		}
		return &v.PortConfig
	}).(BareMetalClusterLoadBalancerPortConfigPtrOutput)
}

// Specified the Bare Metal Load Balancer Config
// Structure is documented below.
func (o BareMetalClusterLoadBalancerPtrOutput) VipConfig() BareMetalClusterLoadBalancerVipConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancer) *BareMetalClusterLoadBalancerVipConfig {
		if v == nil {
			return nil
		}
		return &v.VipConfig
	}).(BareMetalClusterLoadBalancerVipConfigPtrOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfig struct {
	// AddressPools is a list of non-overlapping IP pools used by load balancer
	// typed services. All addresses must be routable to load balancer nodes.
	// IngressVIP must be included in the pools.
	// Structure is documented below.
	AddressPools []BareMetalClusterLoadBalancerBgpLbConfigAddressPool `pulumi:"addressPools"`
	// BGP autonomous system number (ASN) of the cluster.
	// This field can be updated after cluster creation.
	Asn int `pulumi:"asn"`
	// The list of BGP peers that the cluster will connect to.
	// At least one peer must be configured for each control plane node.
	// Control plane nodes will connect to these peers to advertise the control
	// plane VIP. The Services load balancer also uses these peers by default.
	// This field can be updated after cluster creation.
	// Structure is documented below.
	BgpPeerConfigs []BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig `pulumi:"bgpPeerConfigs"`
	// Specifies the node pool running data plane load balancing. L2 connectivity
	// is required among nodes in this pool. If missing, the control plane node
	// pool is used for data plane load balancing.
	// Structure is documented below.
	LoadBalancerNodePoolConfig *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig `pulumi:"loadBalancerNodePoolConfig"`
}

// BareMetalClusterLoadBalancerBgpLbConfigInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigArgs and BareMetalClusterLoadBalancerBgpLbConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigArgs{...}
type BareMetalClusterLoadBalancerBgpLbConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigArgs struct {
	// AddressPools is a list of non-overlapping IP pools used by load balancer
	// typed services. All addresses must be routable to load balancer nodes.
	// IngressVIP must be included in the pools.
	// Structure is documented below.
	AddressPools BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayInput `pulumi:"addressPools"`
	// BGP autonomous system number (ASN) of the cluster.
	// This field can be updated after cluster creation.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The list of BGP peers that the cluster will connect to.
	// At least one peer must be configured for each control plane node.
	// Control plane nodes will connect to these peers to advertise the control
	// plane VIP. The Services load balancer also uses these peers by default.
	// This field can be updated after cluster creation.
	// Structure is documented below.
	BgpPeerConfigs BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayInput `pulumi:"bgpPeerConfigs"`
	// Specifies the node pool running data plane load balancing. L2 connectivity
	// is required among nodes in this pool. If missing, the control plane node
	// pool is used for data plane load balancing.
	// Structure is documented below.
	LoadBalancerNodePoolConfig BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrInput `pulumi:"loadBalancerNodePoolConfig"`
}

func (BareMetalClusterLoadBalancerBgpLbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerBgpLbConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigOutput).ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerBgpLbConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigArgs, BareMetalClusterLoadBalancerBgpLbConfigPtr and BareMetalClusterLoadBalancerBgpLbConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerBgpLbConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerBgpLbConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigPtrOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigPtrOutput
}

type bareMetalClusterLoadBalancerBgpLbConfigPtrType BareMetalClusterLoadBalancerBgpLbConfigArgs

func BareMetalClusterLoadBalancerBgpLbConfigPtr(v *BareMetalClusterLoadBalancerBgpLbConfigArgs) BareMetalClusterLoadBalancerBgpLbConfigPtrInput {
	return (*bareMetalClusterLoadBalancerBgpLbConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerBgpLbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerBgpLbConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigPtrType) ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigPtrType) ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerBgpLbConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerBgpLbConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerBgpLbConfig) *BareMetalClusterLoadBalancerBgpLbConfig {
		return &v
	}).(BareMetalClusterLoadBalancerBgpLbConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerBgpLbConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfig]{
		OutputState: o.OutputState,
	}
}

// AddressPools is a list of non-overlapping IP pools used by load balancer
// typed services. All addresses must be routable to load balancer nodes.
// IngressVIP must be included in the pools.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigOutput) AddressPools() BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfig) []BareMetalClusterLoadBalancerBgpLbConfigAddressPool {
		return v.AddressPools
	}).(BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput)
}

// BGP autonomous system number (ASN) of the cluster.
// This field can be updated after cluster creation.
func (o BareMetalClusterLoadBalancerBgpLbConfigOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfig) int { return v.Asn }).(pulumi.IntOutput)
}

// The list of BGP peers that the cluster will connect to.
// At least one peer must be configured for each control plane node.
// Control plane nodes will connect to these peers to advertise the control
// plane VIP. The Services load balancer also uses these peers by default.
// This field can be updated after cluster creation.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigOutput) BgpPeerConfigs() BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfig) []BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig {
		return v.BgpPeerConfigs
	}).(BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput)
}

// Specifies the node pool running data plane load balancing. L2 connectivity
// is required among nodes in this pool. If missing, the control plane node
// pool is used for data plane load balancing.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigOutput) LoadBalancerNodePoolConfig() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfig) *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig {
		return v.LoadBalancerNodePoolConfig
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerBgpLbConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigPtrOutput) ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigPtrOutput) ToBareMetalClusterLoadBalancerBgpLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerBgpLbConfigPtrOutput) Elem() BareMetalClusterLoadBalancerBgpLbConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfig) BareMetalClusterLoadBalancerBgpLbConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerBgpLbConfig
		return ret
	}).(BareMetalClusterLoadBalancerBgpLbConfigOutput)
}

// AddressPools is a list of non-overlapping IP pools used by load balancer
// typed services. All addresses must be routable to load balancer nodes.
// IngressVIP must be included in the pools.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigPtrOutput) AddressPools() BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfig) []BareMetalClusterLoadBalancerBgpLbConfigAddressPool {
		if v == nil {
			return nil
		}
		return v.AddressPools
	}).(BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput)
}

// BGP autonomous system number (ASN) of the cluster.
// This field can be updated after cluster creation.
func (o BareMetalClusterLoadBalancerBgpLbConfigPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Asn
	}).(pulumi.IntPtrOutput)
}

// The list of BGP peers that the cluster will connect to.
// At least one peer must be configured for each control plane node.
// Control plane nodes will connect to these peers to advertise the control
// plane VIP. The Services load balancer also uses these peers by default.
// This field can be updated after cluster creation.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigPtrOutput) BgpPeerConfigs() BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfig) []BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig {
		if v == nil {
			return nil
		}
		return v.BgpPeerConfigs
	}).(BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput)
}

// Specifies the node pool running data plane load balancing. L2 connectivity
// is required among nodes in this pool. If missing, the control plane node
// pool is used for data plane load balancing.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigPtrOutput) LoadBalancerNodePoolConfig() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfig) *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig {
		if v == nil {
			return nil
		}
		return v.LoadBalancerNodePoolConfig
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigAddressPool struct {
	// The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
	Addresses []string `pulumi:"addresses"`
	// If true, avoid using IPs ending in .0 or .255.
	// This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.
	AvoidBuggyIps *bool `pulumi:"avoidBuggyIps"`
	// If true, prevent IP addresses from being automatically assigned.
	ManualAssign *string `pulumi:"manualAssign"`
	// The name of the address pool.
	Pool string `pulumi:"pool"`
}

// BareMetalClusterLoadBalancerBgpLbConfigAddressPoolInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs and BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigAddressPoolInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs{...}
type BareMetalClusterLoadBalancerBgpLbConfigAddressPoolInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput() BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs struct {
	// The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// If true, avoid using IPs ending in .0 or .255.
	// This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.
	AvoidBuggyIps pulumi.BoolPtrInput `pulumi:"avoidBuggyIps"`
	// If true, prevent IP addresses from being automatically assigned.
	ManualAssign pulumi.StringPtrInput `pulumi:"manualAssign"`
	// The name of the address pool.
	Pool pulumi.StringInput `pulumi:"pool"`
}

func (BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigAddressPool)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs) ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput() BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs) ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigAddressPool] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigAddressPool]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArray and BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArray{ BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs{...} }
type BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArray []BareMetalClusterLoadBalancerBgpLbConfigAddressPoolInput

func (BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerBgpLbConfigAddressPool)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArray) ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArray) ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigAddressPool] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigAddressPool]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigAddressPool)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput) ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput() BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput) ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigAddressPool] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigAddressPool]{
		OutputState: o.OutputState,
	}
}

// The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigAddressPool) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// If true, avoid using IPs ending in .0 or .255.
// This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.
func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput) AvoidBuggyIps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigAddressPool) *bool { return v.AvoidBuggyIps }).(pulumi.BoolPtrOutput)
}

// If true, prevent IP addresses from being automatically assigned.
func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput) ManualAssign() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigAddressPool) *string { return v.ManualAssign }).(pulumi.StringPtrOutput)
}

// The name of the address pool.
func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput) Pool() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigAddressPool) string { return v.Pool }).(pulumi.StringOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerBgpLbConfigAddressPool)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput) ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput) ToBareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigAddressPool] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigAddressPool]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput) Index(i pulumi.IntInput) BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterLoadBalancerBgpLbConfigAddressPool {
		return vs[0].([]BareMetalClusterLoadBalancerBgpLbConfigAddressPool)[vs[1].(int)]
	}).(BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig struct {
	// BGP autonomous system number (ASN) for the network that contains the
	// external peer device.
	Asn int `pulumi:"asn"`
	// The IP address of the control plane node that connects to the external
	// peer.
	// If you don't specify any control plane nodes, all control plane nodes
	// can connect to the external peer. If you specify one or more IP addresses,
	// only the nodes specified participate in peering sessions.
	ControlPlaneNodes []string `pulumi:"controlPlaneNodes"`
	// The IP address of the external peer device.
	IpAddress string `pulumi:"ipAddress"`
}

// BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs and BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs{...}
type BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs struct {
	// BGP autonomous system number (ASN) for the network that contains the
	// external peer device.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The IP address of the control plane node that connects to the external
	// peer.
	// If you don't specify any control plane nodes, all control plane nodes
	// can connect to the external peer. If you specify one or more IP addresses,
	// only the nodes specified participate in peering sessions.
	ControlPlaneNodes pulumi.StringArrayInput `pulumi:"controlPlaneNodes"`
	// The IP address of the external peer device.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
}

func (BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArray and BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArray{ BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs{...} }
type BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArray []BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigInput

func (BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArray) ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArray) ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig]{
		OutputState: o.OutputState,
	}
}

// BGP autonomous system number (ASN) for the network that contains the
// external peer device.
func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig) int { return v.Asn }).(pulumi.IntOutput)
}

// The IP address of the control plane node that connects to the external
// peer.
// If you don't specify any control plane nodes, all control plane nodes
// can connect to the external peer. If you specify one or more IP addresses,
// only the nodes specified participate in peering sessions.
func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput) ControlPlaneNodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig) []string { return v.ControlPlaneNodes }).(pulumi.StringArrayOutput)
}

// The IP address of the external peer device.
func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig) string { return v.IpAddress }).(pulumi.StringOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput) ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput) ToBareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput) Index(i pulumi.IntInput) BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig {
		return vs[0].([]BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig)[vs[1].(int)]
	}).(BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig struct {
	// The generic configuration for a node pool running a load balancer.
	// Structure is documented below.
	NodePoolConfig *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig `pulumi:"nodePoolConfig"`
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs{...}
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs struct {
	// The generic configuration for a node pool running a load balancer.
	// Structure is documented below.
	NodePoolConfig BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput `pulumi:"nodePoolConfig"`
}

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput).ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs, BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtr and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput
}

type bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrType BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs

func BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtr(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrInput {
	return (*bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrType) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrType) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig) *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig {
		return &v
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// The generic configuration for a node pool running a load balancer.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput) NodePoolConfig() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig) *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig {
		return v.NodePoolConfig
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput) Elem() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig
		return ret
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput)
}

// The generic configuration for a node pool running a load balancer.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput) NodePoolConfig() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfig) *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig {
		if v == nil {
			return nil
		}
		return v.NodePoolConfig
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig struct {
	// The modifiable kubelet configurations for the baremetal machines.
	// Structure is documented below.
	KubeletConfig *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig `pulumi:"kubeletConfig"`
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs []BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem *string `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints []BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint `pulumi:"taints"`
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs{...}
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs struct {
	// The modifiable kubelet configurations for the baremetal machines.
	// Structure is documented below.
	KubeletConfig BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrInput `pulumi:"kubeletConfig"`
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem pulumi.StringPtrInput `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput `pulumi:"taints"`
}

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput).ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs, BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtr and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput
}

type bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs

func BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtr(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput {
	return (*bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig {
		return &v
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// The modifiable kubelet configurations for the baremetal machines.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) KubeletConfig() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig {
		return v.KubeletConfig
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) NodeConfigs() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) []BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig {
		return v.NodeConfigs
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) *string {
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) Taints() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) []BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint {
		return v.Taints
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) Elem() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig
		return ret
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput)
}

// The modifiable kubelet configurations for the baremetal machines.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) KubeletConfig() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig {
		if v == nil {
			return nil
		}
		return v.KubeletConfig
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) NodeConfigs() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) []BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig {
		if v == nil {
			return nil
		}
		return v.NodeConfigs
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) Taints() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfig) []BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig struct {
	// The maximum size of bursty pulls, temporarily allows pulls to burst to this
	// number, while still not exceeding registry_pull_qps.
	// The value must not be a negative number.
	// Updating this field may impact scalability by changing the amount of
	// traffic produced by image pulls.
	// Defaults to 10.
	RegistryBurst *int `pulumi:"registryBurst"`
	// The limit of registry pulls per second.
	// Setting this value to 0 means no limit.
	// Updating this field may impact scalability by changing the amount of
	// traffic produced by image pulls.
	// Defaults to 5.
	RegistryPullQps *int `pulumi:"registryPullQps"`
	// Prevents the Kubelet from pulling multiple images at a time.
	// We recommend *not* changing the default value on nodes that run docker
	// daemon with version  < 1.9 or an Another Union File System (Aufs) storage
	// backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has
	// more details.
	SerializeImagePullsDisabled *bool `pulumi:"serializeImagePullsDisabled"`
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs{...}
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs struct {
	// The maximum size of bursty pulls, temporarily allows pulls to burst to this
	// number, while still not exceeding registry_pull_qps.
	// The value must not be a negative number.
	// Updating this field may impact scalability by changing the amount of
	// traffic produced by image pulls.
	// Defaults to 10.
	RegistryBurst pulumi.IntPtrInput `pulumi:"registryBurst"`
	// The limit of registry pulls per second.
	// Setting this value to 0 means no limit.
	// Updating this field may impact scalability by changing the amount of
	// traffic produced by image pulls.
	// Defaults to 5.
	RegistryPullQps pulumi.IntPtrInput `pulumi:"registryPullQps"`
	// Prevents the Kubelet from pulling multiple images at a time.
	// We recommend *not* changing the default value on nodes that run docker
	// daemon with version  < 1.9 or an Another Union File System (Aufs) storage
	// backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has
	// more details.
	SerializeImagePullsDisabled pulumi.BoolPtrInput `pulumi:"serializeImagePullsDisabled"`
}

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput).ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs, BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtr and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput
}

type bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrType BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs

func BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtr(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrInput {
	return (*bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrType) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrType) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig) *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig {
		return &v
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig]{
		OutputState: o.OutputState,
	}
}

// The maximum size of bursty pulls, temporarily allows pulls to burst to this
// number, while still not exceeding registry_pull_qps.
// The value must not be a negative number.
// Updating this field may impact scalability by changing the amount of
// traffic produced by image pulls.
// Defaults to 10.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput) RegistryBurst() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig) *int {
		return v.RegistryBurst
	}).(pulumi.IntPtrOutput)
}

// The limit of registry pulls per second.
// Setting this value to 0 means no limit.
// Updating this field may impact scalability by changing the amount of
// traffic produced by image pulls.
// Defaults to 5.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput) RegistryPullQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig) *int {
		return v.RegistryPullQps
	}).(pulumi.IntPtrOutput)
}

// Prevents the Kubelet from pulling multiple images at a time.
// We recommend *not* changing the default value on nodes that run docker
// daemon with version  < 1.9 or an Another Union File System (Aufs) storage
// backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has
// more details.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput) SerializeImagePullsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig) *bool {
		return v.SerializeImagePullsDisabled
	}).(pulumi.BoolPtrOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput) Elem() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig
		return ret
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput)
}

// The maximum size of bursty pulls, temporarily allows pulls to burst to this
// number, while still not exceeding registry_pull_qps.
// The value must not be a negative number.
// Updating this field may impact scalability by changing the amount of
// traffic produced by image pulls.
// Defaults to 10.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput) RegistryBurst() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.RegistryBurst
	}).(pulumi.IntPtrOutput)
}

// The limit of registry pulls per second.
// Setting this value to 0 means no limit.
// Updating this field may impact scalability by changing the amount of
// traffic produced by image pulls.
// Defaults to 5.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput) RegistryPullQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.RegistryPullQps
	}).(pulumi.IntPtrOutput)
}

// Prevents the Kubelet from pulling multiple images at a time.
// We recommend *not* changing the default value on nodes that run docker
// daemon with version  < 1.9 or an Another Union File System (Aufs) storage
// backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has
// more details.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput) SerializeImagePullsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SerializeImagePullsDisabled
	}).(pulumi.BoolPtrOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp *string `pulumi:"nodeIp"`
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs{...}
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp pulumi.StringPtrInput `pulumi:"nodeIp"`
}

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray{ BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs{...} }
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray []BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The default IPv4 address for SSH access and Kubernetes node.
// Example: 192.168.0.1
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) NodeIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig) *string {
		return v.NodeIp
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) Index(i pulumi.IntInput) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig {
		return vs[0].([]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)[vs[1].(int)]
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	Effect *string `pulumi:"effect"`
	// Key associated with the effect.
	Key *string `pulumi:"key"`
	// Value associated with the effect.
	Value *string `pulumi:"value"`
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs{...}
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key associated with the effect.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value associated with the effect.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput is an input type that accepts BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray and BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput` via:
//
//	BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray{ BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs{...} }
type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput
	ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray []BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput)
}

func (i BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint]{
		OutputState: i.ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

// Specifies the nodes operating system (default: LINUX).
// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint) *string {
		return v.Effect
	}).(pulumi.StringPtrOutput)
}

// Key associated with the effect.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Value associated with the effect.
func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) ToBareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) Index(i pulumi.IntInput) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint {
		return vs[0].([]BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)[vs[1].(int)]
	}).(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput)
}

type BareMetalClusterLoadBalancerManualLbConfig struct {
	// Whether manual load balancing is enabled.
	Enabled bool `pulumi:"enabled"`
}

// BareMetalClusterLoadBalancerManualLbConfigInput is an input type that accepts BareMetalClusterLoadBalancerManualLbConfigArgs and BareMetalClusterLoadBalancerManualLbConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerManualLbConfigInput` via:
//
//	BareMetalClusterLoadBalancerManualLbConfigArgs{...}
type BareMetalClusterLoadBalancerManualLbConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerManualLbConfigOutput() BareMetalClusterLoadBalancerManualLbConfigOutput
	ToBareMetalClusterLoadBalancerManualLbConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerManualLbConfigOutput
}

type BareMetalClusterLoadBalancerManualLbConfigArgs struct {
	// Whether manual load balancing is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (BareMetalClusterLoadBalancerManualLbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerManualLbConfigArgs) ToBareMetalClusterLoadBalancerManualLbConfigOutput() BareMetalClusterLoadBalancerManualLbConfigOutput {
	return i.ToBareMetalClusterLoadBalancerManualLbConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerManualLbConfigArgs) ToBareMetalClusterLoadBalancerManualLbConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerManualLbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerManualLbConfigOutput)
}

func (i BareMetalClusterLoadBalancerManualLbConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerManualLbConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerManualLbConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerManualLbConfigArgs) ToBareMetalClusterLoadBalancerManualLbConfigPtrOutput() BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerManualLbConfigArgs) ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerManualLbConfigOutput).ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerManualLbConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerManualLbConfigArgs, BareMetalClusterLoadBalancerManualLbConfigPtr and BareMetalClusterLoadBalancerManualLbConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerManualLbConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerManualLbConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerManualLbConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerManualLbConfigPtrOutput() BareMetalClusterLoadBalancerManualLbConfigPtrOutput
	ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerManualLbConfigPtrOutput
}

type bareMetalClusterLoadBalancerManualLbConfigPtrType BareMetalClusterLoadBalancerManualLbConfigArgs

func BareMetalClusterLoadBalancerManualLbConfigPtr(v *BareMetalClusterLoadBalancerManualLbConfigArgs) BareMetalClusterLoadBalancerManualLbConfigPtrInput {
	return (*bareMetalClusterLoadBalancerManualLbConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerManualLbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerManualLbConfigPtrType) ToBareMetalClusterLoadBalancerManualLbConfigPtrOutput() BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerManualLbConfigPtrType) ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerManualLbConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerManualLbConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerManualLbConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerManualLbConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerManualLbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerManualLbConfigOutput) ToBareMetalClusterLoadBalancerManualLbConfigOutput() BareMetalClusterLoadBalancerManualLbConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerManualLbConfigOutput) ToBareMetalClusterLoadBalancerManualLbConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerManualLbConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerManualLbConfigOutput) ToBareMetalClusterLoadBalancerManualLbConfigPtrOutput() BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerManualLbConfigOutput) ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerManualLbConfig) *BareMetalClusterLoadBalancerManualLbConfig {
		return &v
	}).(BareMetalClusterLoadBalancerManualLbConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerManualLbConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerManualLbConfig]{
		OutputState: o.OutputState,
	}
}

// Whether manual load balancing is enabled.
func (o BareMetalClusterLoadBalancerManualLbConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerManualLbConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BareMetalClusterLoadBalancerManualLbConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerManualLbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerManualLbConfigPtrOutput) ToBareMetalClusterLoadBalancerManualLbConfigPtrOutput() BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerManualLbConfigPtrOutput) ToBareMetalClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerManualLbConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerManualLbConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerManualLbConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerManualLbConfigPtrOutput) Elem() BareMetalClusterLoadBalancerManualLbConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerManualLbConfig) BareMetalClusterLoadBalancerManualLbConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerManualLbConfig
		return ret
	}).(BareMetalClusterLoadBalancerManualLbConfigOutput)
}

// Whether manual load balancing is enabled.
func (o BareMetalClusterLoadBalancerManualLbConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerManualLbConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfig struct {
	// AddressPools is a list of non-overlapping IP pools used by load balancer
	// typed services. All addresses must be routable to load balancer nodes.
	// IngressVIP must be included in the pools.
	// Structure is documented below.
	AddressPools []BareMetalClusterLoadBalancerMetalLbConfigAddressPool `pulumi:"addressPools"`
	// Specifies the load balancer's node pool configuration.
	// Structure is documented below.
	LoadBalancerNodePoolConfig *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig `pulumi:"loadBalancerNodePoolConfig"`
}

// BareMetalClusterLoadBalancerMetalLbConfigInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigArgs and BareMetalClusterLoadBalancerMetalLbConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigInput` via:
//
//	BareMetalClusterLoadBalancerMetalLbConfigArgs{...}
type BareMetalClusterLoadBalancerMetalLbConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigOutput
}

type BareMetalClusterLoadBalancerMetalLbConfigArgs struct {
	// AddressPools is a list of non-overlapping IP pools used by load balancer
	// typed services. All addresses must be routable to load balancer nodes.
	// IngressVIP must be included in the pools.
	// Structure is documented below.
	AddressPools BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayInput `pulumi:"addressPools"`
	// Specifies the load balancer's node pool configuration.
	// Structure is documented below.
	LoadBalancerNodePoolConfig BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrInput `pulumi:"loadBalancerNodePoolConfig"`
}

func (BareMetalClusterLoadBalancerMetalLbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerMetalLbConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigOutput)
}

func (i BareMetalClusterLoadBalancerMetalLbConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerMetalLbConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigOutput).ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerMetalLbConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigArgs, BareMetalClusterLoadBalancerMetalLbConfigPtr and BareMetalClusterLoadBalancerMetalLbConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerMetalLbConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerMetalLbConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigPtrOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigPtrOutput
}

type bareMetalClusterLoadBalancerMetalLbConfigPtrType BareMetalClusterLoadBalancerMetalLbConfigArgs

func BareMetalClusterLoadBalancerMetalLbConfigPtr(v *BareMetalClusterLoadBalancerMetalLbConfigArgs) BareMetalClusterLoadBalancerMetalLbConfigPtrInput {
	return (*bareMetalClusterLoadBalancerMetalLbConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerMetalLbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerMetalLbConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerMetalLbConfigPtrType) ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerMetalLbConfigPtrType) ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerMetalLbConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerMetalLbConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerMetalLbConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerMetalLbConfig) *BareMetalClusterLoadBalancerMetalLbConfig {
		return &v
	}).(BareMetalClusterLoadBalancerMetalLbConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerMetalLbConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfig]{
		OutputState: o.OutputState,
	}
}

// AddressPools is a list of non-overlapping IP pools used by load balancer
// typed services. All addresses must be routable to load balancer nodes.
// IngressVIP must be included in the pools.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigOutput) AddressPools() BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfig) []BareMetalClusterLoadBalancerMetalLbConfigAddressPool {
		return v.AddressPools
	}).(BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput)
}

// Specifies the load balancer's node pool configuration.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigOutput) LoadBalancerNodePoolConfig() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfig) *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig {
		return v.LoadBalancerNodePoolConfig
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerMetalLbConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigPtrOutput) ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigPtrOutput) ToBareMetalClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerMetalLbConfigPtrOutput) Elem() BareMetalClusterLoadBalancerMetalLbConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfig) BareMetalClusterLoadBalancerMetalLbConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerMetalLbConfig
		return ret
	}).(BareMetalClusterLoadBalancerMetalLbConfigOutput)
}

// AddressPools is a list of non-overlapping IP pools used by load balancer
// typed services. All addresses must be routable to load balancer nodes.
// IngressVIP must be included in the pools.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigPtrOutput) AddressPools() BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfig) []BareMetalClusterLoadBalancerMetalLbConfigAddressPool {
		if v == nil {
			return nil
		}
		return v.AddressPools
	}).(BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput)
}

// Specifies the load balancer's node pool configuration.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigPtrOutput) LoadBalancerNodePoolConfig() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfig) *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig {
		if v == nil {
			return nil
		}
		return v.LoadBalancerNodePoolConfig
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigAddressPool struct {
	// The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
	Addresses []string `pulumi:"addresses"`
	// If true, avoid using IPs ending in .0 or .255.
	// This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.
	AvoidBuggyIps *bool `pulumi:"avoidBuggyIps"`
	// If true, prevent IP addresses from being automatically assigned.
	ManualAssign *bool `pulumi:"manualAssign"`
	// The name of the address pool.
	Pool string `pulumi:"pool"`
}

// BareMetalClusterLoadBalancerMetalLbConfigAddressPoolInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs and BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigAddressPoolInput` via:
//
//	BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs{...}
type BareMetalClusterLoadBalancerMetalLbConfigAddressPoolInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput() BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput
}

type BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs struct {
	// The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// If true, avoid using IPs ending in .0 or .255.
	// This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.
	AvoidBuggyIps pulumi.BoolPtrInput `pulumi:"avoidBuggyIps"`
	// If true, prevent IP addresses from being automatically assigned.
	ManualAssign pulumi.BoolPtrInput `pulumi:"manualAssign"`
	// The name of the address pool.
	Pool pulumi.StringInput `pulumi:"pool"`
}

func (BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigAddressPool)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs) ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput() BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs) ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput)
}

func (i BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigAddressPool] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigAddressPool]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArray and BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayInput` via:
//
//	BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArray{ BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs{...} }
type BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput() BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput
}

type BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArray []BareMetalClusterLoadBalancerMetalLbConfigAddressPoolInput

func (BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerMetalLbConfigAddressPool)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArray) ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput() BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArray) ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput)
}

func (i BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigAddressPool] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigAddressPool]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigAddressPool)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput) ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput() BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput) ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigAddressPool] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigAddressPool]{
		OutputState: o.OutputState,
	}
}

// The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigAddressPool) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// If true, avoid using IPs ending in .0 or .255.
// This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.
func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput) AvoidBuggyIps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigAddressPool) *bool { return v.AvoidBuggyIps }).(pulumi.BoolPtrOutput)
}

// If true, prevent IP addresses from being automatically assigned.
func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput) ManualAssign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigAddressPool) *bool { return v.ManualAssign }).(pulumi.BoolPtrOutput)
}

// The name of the address pool.
func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput) Pool() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigAddressPool) string { return v.Pool }).(pulumi.StringOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerMetalLbConfigAddressPool)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput() BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) ToBareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigAddressPool] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigAddressPool]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) Index(i pulumi.IntInput) BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterLoadBalancerMetalLbConfigAddressPool {
		return vs[0].([]BareMetalClusterLoadBalancerMetalLbConfigAddressPool)[vs[1].(int)]
	}).(BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig struct {
	// The generic configuration for a node pool running a load balancer.
	// Structure is documented below.
	NodePoolConfig *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig `pulumi:"nodePoolConfig"`
}

// BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs and BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigInput` via:
//
//	BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs{...}
type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs struct {
	// The generic configuration for a node pool running a load balancer.
	// Structure is documented below.
	NodePoolConfig BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput `pulumi:"nodePoolConfig"`
}

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput)
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput).ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs, BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtr and BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput
}

type bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrType BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs

func BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtr(v *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrInput {
	return (*bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrType) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrType) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig) *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig {
		return &v
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// The generic configuration for a node pool running a load balancer.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput) NodePoolConfig() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig) *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig {
		return v.NodePoolConfig
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput) Elem() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig
		return ret
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput)
}

// The generic configuration for a node pool running a load balancer.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput) NodePoolConfig() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig) *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig {
		if v == nil {
			return nil
		}
		return v.NodePoolConfig
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs []BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem *string `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints []BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint `pulumi:"taints"`
}

// BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs and BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigInput` via:
//
//	BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs{...}
type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem pulumi.StringPtrInput `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput `pulumi:"taints"`
}

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput)
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput).ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs, BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtr and BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput
}

type bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs

func BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtr(v *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput {
	return (*bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig {
		return &v
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) NodeConfigs() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) []BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig {
		return v.NodeConfigs
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) *string {
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput) Taints() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) []BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint {
		return v.Taints
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) Elem() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig
		return ret
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) NodeConfigs() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) []BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig {
		if v == nil {
			return nil
		}
		return v.NodeConfigs
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput) Taints() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfig) []BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp *string `pulumi:"nodeIp"`
}

// BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs and BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput` via:
//
//	BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs{...}
type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp pulumi.StringPtrInput `pulumi:"nodeIp"`
}

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput)
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray and BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput` via:
//
//	BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray{ BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs{...} }
type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray []BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput)
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The default IPv4 address for SSH access and Kubernetes node.
// Example: 192.168.0.1
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput) NodeIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig) *string {
		return v.NodeIp
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput) Index(i pulumi.IntInput) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig {
		return vs[0].([]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfig)[vs[1].(int)]
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	Effect *string `pulumi:"effect"`
	// Key associated with the effect.
	Key *string `pulumi:"key"`
	// Value associated with the effect.
	Value *string `pulumi:"value"`
}

// BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs and BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput` via:
//
//	BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs{...}
type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key associated with the effect.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value associated with the effect.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput)
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput is an input type that accepts BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray and BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput` via:
//
//	BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray{ BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs{...} }
type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput
	ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray []BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput)
}

func (i BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint]{
		OutputState: i.ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

// Specifies the nodes operating system (default: LINUX).
// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint) *string {
		return v.Effect
	}).(pulumi.StringPtrOutput)
}

// Key associated with the effect.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Value associated with the effect.
func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput() BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) ToBareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput) Index(i pulumi.IntInput) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint {
		return vs[0].([]BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaint)[vs[1].(int)]
	}).(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput)
}

type BareMetalClusterLoadBalancerPortConfig struct {
	// The port that control plane hosted load balancers will listen on.
	ControlPlaneLoadBalancerPort int `pulumi:"controlPlaneLoadBalancerPort"`
}

// BareMetalClusterLoadBalancerPortConfigInput is an input type that accepts BareMetalClusterLoadBalancerPortConfigArgs and BareMetalClusterLoadBalancerPortConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerPortConfigInput` via:
//
//	BareMetalClusterLoadBalancerPortConfigArgs{...}
type BareMetalClusterLoadBalancerPortConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerPortConfigOutput() BareMetalClusterLoadBalancerPortConfigOutput
	ToBareMetalClusterLoadBalancerPortConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerPortConfigOutput
}

type BareMetalClusterLoadBalancerPortConfigArgs struct {
	// The port that control plane hosted load balancers will listen on.
	ControlPlaneLoadBalancerPort pulumi.IntInput `pulumi:"controlPlaneLoadBalancerPort"`
}

func (BareMetalClusterLoadBalancerPortConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerPortConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerPortConfigArgs) ToBareMetalClusterLoadBalancerPortConfigOutput() BareMetalClusterLoadBalancerPortConfigOutput {
	return i.ToBareMetalClusterLoadBalancerPortConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerPortConfigArgs) ToBareMetalClusterLoadBalancerPortConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPortConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerPortConfigOutput)
}

func (i BareMetalClusterLoadBalancerPortConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerPortConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerPortConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerPortConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerPortConfigArgs) ToBareMetalClusterLoadBalancerPortConfigPtrOutput() BareMetalClusterLoadBalancerPortConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerPortConfigArgs) ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPortConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerPortConfigOutput).ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerPortConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerPortConfigArgs, BareMetalClusterLoadBalancerPortConfigPtr and BareMetalClusterLoadBalancerPortConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerPortConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerPortConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerPortConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerPortConfigPtrOutput() BareMetalClusterLoadBalancerPortConfigPtrOutput
	ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerPortConfigPtrOutput
}

type bareMetalClusterLoadBalancerPortConfigPtrType BareMetalClusterLoadBalancerPortConfigArgs

func BareMetalClusterLoadBalancerPortConfigPtr(v *BareMetalClusterLoadBalancerPortConfigArgs) BareMetalClusterLoadBalancerPortConfigPtrInput {
	return (*bareMetalClusterLoadBalancerPortConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerPortConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerPortConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerPortConfigPtrType) ToBareMetalClusterLoadBalancerPortConfigPtrOutput() BareMetalClusterLoadBalancerPortConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerPortConfigPtrType) ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPortConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerPortConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerPortConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerPortConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerPortConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerPortConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerPortConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerPortConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerPortConfigOutput) ToBareMetalClusterLoadBalancerPortConfigOutput() BareMetalClusterLoadBalancerPortConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerPortConfigOutput) ToBareMetalClusterLoadBalancerPortConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPortConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerPortConfigOutput) ToBareMetalClusterLoadBalancerPortConfigPtrOutput() BareMetalClusterLoadBalancerPortConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerPortConfigOutput) ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPortConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerPortConfig) *BareMetalClusterLoadBalancerPortConfig {
		return &v
	}).(BareMetalClusterLoadBalancerPortConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerPortConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerPortConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerPortConfig]{
		OutputState: o.OutputState,
	}
}

// The port that control plane hosted load balancers will listen on.
func (o BareMetalClusterLoadBalancerPortConfigOutput) ControlPlaneLoadBalancerPort() pulumi.IntOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerPortConfig) int { return v.ControlPlaneLoadBalancerPort }).(pulumi.IntOutput)
}

type BareMetalClusterLoadBalancerPortConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerPortConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerPortConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerPortConfigPtrOutput) ToBareMetalClusterLoadBalancerPortConfigPtrOutput() BareMetalClusterLoadBalancerPortConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerPortConfigPtrOutput) ToBareMetalClusterLoadBalancerPortConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerPortConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerPortConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerPortConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerPortConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerPortConfigPtrOutput) Elem() BareMetalClusterLoadBalancerPortConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerPortConfig) BareMetalClusterLoadBalancerPortConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerPortConfig
		return ret
	}).(BareMetalClusterLoadBalancerPortConfigOutput)
}

// The port that control plane hosted load balancers will listen on.
func (o BareMetalClusterLoadBalancerPortConfigPtrOutput) ControlPlaneLoadBalancerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerPortConfig) *int {
		if v == nil {
			return nil
		}
		return &v.ControlPlaneLoadBalancerPort
	}).(pulumi.IntPtrOutput)
}

type BareMetalClusterLoadBalancerVipConfig struct {
	// The VIP which you previously set aside for the Kubernetes API of this Bare Metal User Cluster.
	ControlPlaneVip string `pulumi:"controlPlaneVip"`
	// The VIP which you previously set aside for ingress traffic into this Bare Metal User Cluster.
	IngressVip string `pulumi:"ingressVip"`
}

// BareMetalClusterLoadBalancerVipConfigInput is an input type that accepts BareMetalClusterLoadBalancerVipConfigArgs and BareMetalClusterLoadBalancerVipConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerVipConfigInput` via:
//
//	BareMetalClusterLoadBalancerVipConfigArgs{...}
type BareMetalClusterLoadBalancerVipConfigInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerVipConfigOutput() BareMetalClusterLoadBalancerVipConfigOutput
	ToBareMetalClusterLoadBalancerVipConfigOutputWithContext(context.Context) BareMetalClusterLoadBalancerVipConfigOutput
}

type BareMetalClusterLoadBalancerVipConfigArgs struct {
	// The VIP which you previously set aside for the Kubernetes API of this Bare Metal User Cluster.
	ControlPlaneVip pulumi.StringInput `pulumi:"controlPlaneVip"`
	// The VIP which you previously set aside for ingress traffic into this Bare Metal User Cluster.
	IngressVip pulumi.StringInput `pulumi:"ingressVip"`
}

func (BareMetalClusterLoadBalancerVipConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (i BareMetalClusterLoadBalancerVipConfigArgs) ToBareMetalClusterLoadBalancerVipConfigOutput() BareMetalClusterLoadBalancerVipConfigOutput {
	return i.ToBareMetalClusterLoadBalancerVipConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerVipConfigArgs) ToBareMetalClusterLoadBalancerVipConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerVipConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerVipConfigOutput)
}

func (i BareMetalClusterLoadBalancerVipConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerVipConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerVipConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerVipConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterLoadBalancerVipConfigArgs) ToBareMetalClusterLoadBalancerVipConfigPtrOutput() BareMetalClusterLoadBalancerVipConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterLoadBalancerVipConfigArgs) ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerVipConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerVipConfigOutput).ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterLoadBalancerVipConfigPtrInput is an input type that accepts BareMetalClusterLoadBalancerVipConfigArgs, BareMetalClusterLoadBalancerVipConfigPtr and BareMetalClusterLoadBalancerVipConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterLoadBalancerVipConfigPtrInput` via:
//
//	        BareMetalClusterLoadBalancerVipConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterLoadBalancerVipConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterLoadBalancerVipConfigPtrOutput() BareMetalClusterLoadBalancerVipConfigPtrOutput
	ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(context.Context) BareMetalClusterLoadBalancerVipConfigPtrOutput
}

type bareMetalClusterLoadBalancerVipConfigPtrType BareMetalClusterLoadBalancerVipConfigArgs

func BareMetalClusterLoadBalancerVipConfigPtr(v *BareMetalClusterLoadBalancerVipConfigArgs) BareMetalClusterLoadBalancerVipConfigPtrInput {
	return (*bareMetalClusterLoadBalancerVipConfigPtrType)(v)
}

func (*bareMetalClusterLoadBalancerVipConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (i *bareMetalClusterLoadBalancerVipConfigPtrType) ToBareMetalClusterLoadBalancerVipConfigPtrOutput() BareMetalClusterLoadBalancerVipConfigPtrOutput {
	return i.ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterLoadBalancerVipConfigPtrType) ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerVipConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterLoadBalancerVipConfigPtrOutput)
}

func (i *bareMetalClusterLoadBalancerVipConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerVipConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerVipConfig]{
		OutputState: i.ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterLoadBalancerVipConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerVipConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerVipConfigOutput) ToBareMetalClusterLoadBalancerVipConfigOutput() BareMetalClusterLoadBalancerVipConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerVipConfigOutput) ToBareMetalClusterLoadBalancerVipConfigOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerVipConfigOutput {
	return o
}

func (o BareMetalClusterLoadBalancerVipConfigOutput) ToBareMetalClusterLoadBalancerVipConfigPtrOutput() BareMetalClusterLoadBalancerVipConfigPtrOutput {
	return o.ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterLoadBalancerVipConfigOutput) ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerVipConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterLoadBalancerVipConfig) *BareMetalClusterLoadBalancerVipConfig {
		return &v
	}).(BareMetalClusterLoadBalancerVipConfigPtrOutput)
}

func (o BareMetalClusterLoadBalancerVipConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterLoadBalancerVipConfig] {
	return pulumix.Output[BareMetalClusterLoadBalancerVipConfig]{
		OutputState: o.OutputState,
	}
}

// The VIP which you previously set aside for the Kubernetes API of this Bare Metal User Cluster.
func (o BareMetalClusterLoadBalancerVipConfigOutput) ControlPlaneVip() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerVipConfig) string { return v.ControlPlaneVip }).(pulumi.StringOutput)
}

// The VIP which you previously set aside for ingress traffic into this Bare Metal User Cluster.
func (o BareMetalClusterLoadBalancerVipConfigOutput) IngressVip() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterLoadBalancerVipConfig) string { return v.IngressVip }).(pulumi.StringOutput)
}

type BareMetalClusterLoadBalancerVipConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterLoadBalancerVipConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (o BareMetalClusterLoadBalancerVipConfigPtrOutput) ToBareMetalClusterLoadBalancerVipConfigPtrOutput() BareMetalClusterLoadBalancerVipConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerVipConfigPtrOutput) ToBareMetalClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterLoadBalancerVipConfigPtrOutput {
	return o
}

func (o BareMetalClusterLoadBalancerVipConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterLoadBalancerVipConfig] {
	return pulumix.Output[*BareMetalClusterLoadBalancerVipConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterLoadBalancerVipConfigPtrOutput) Elem() BareMetalClusterLoadBalancerVipConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerVipConfig) BareMetalClusterLoadBalancerVipConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterLoadBalancerVipConfig
		return ret
	}).(BareMetalClusterLoadBalancerVipConfigOutput)
}

// The VIP which you previously set aside for the Kubernetes API of this Bare Metal User Cluster.
func (o BareMetalClusterLoadBalancerVipConfigPtrOutput) ControlPlaneVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerVipConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ControlPlaneVip
	}).(pulumi.StringPtrOutput)
}

// The VIP which you previously set aside for ingress traffic into this Bare Metal User Cluster.
func (o BareMetalClusterLoadBalancerVipConfigPtrOutput) IngressVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterLoadBalancerVipConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IngressVip
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterMaintenanceConfig struct {
	// All IPv4 address from these ranges will be placed into maintenance mode.
	// Nodes in maintenance mode will be cordoned and drained. When both of these
	// are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set
	// on the node resource.
	MaintenanceAddressCidrBlocks []string `pulumi:"maintenanceAddressCidrBlocks"`
}

// BareMetalClusterMaintenanceConfigInput is an input type that accepts BareMetalClusterMaintenanceConfigArgs and BareMetalClusterMaintenanceConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterMaintenanceConfigInput` via:
//
//	BareMetalClusterMaintenanceConfigArgs{...}
type BareMetalClusterMaintenanceConfigInput interface {
	pulumi.Input

	ToBareMetalClusterMaintenanceConfigOutput() BareMetalClusterMaintenanceConfigOutput
	ToBareMetalClusterMaintenanceConfigOutputWithContext(context.Context) BareMetalClusterMaintenanceConfigOutput
}

type BareMetalClusterMaintenanceConfigArgs struct {
	// All IPv4 address from these ranges will be placed into maintenance mode.
	// Nodes in maintenance mode will be cordoned and drained. When both of these
	// are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set
	// on the node resource.
	MaintenanceAddressCidrBlocks pulumi.StringArrayInput `pulumi:"maintenanceAddressCidrBlocks"`
}

func (BareMetalClusterMaintenanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterMaintenanceConfig)(nil)).Elem()
}

func (i BareMetalClusterMaintenanceConfigArgs) ToBareMetalClusterMaintenanceConfigOutput() BareMetalClusterMaintenanceConfigOutput {
	return i.ToBareMetalClusterMaintenanceConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterMaintenanceConfigArgs) ToBareMetalClusterMaintenanceConfigOutputWithContext(ctx context.Context) BareMetalClusterMaintenanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterMaintenanceConfigOutput)
}

func (i BareMetalClusterMaintenanceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterMaintenanceConfig] {
	return pulumix.Output[BareMetalClusterMaintenanceConfig]{
		OutputState: i.ToBareMetalClusterMaintenanceConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterMaintenanceConfigArgs) ToBareMetalClusterMaintenanceConfigPtrOutput() BareMetalClusterMaintenanceConfigPtrOutput {
	return i.ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterMaintenanceConfigArgs) ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterMaintenanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterMaintenanceConfigOutput).ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterMaintenanceConfigPtrInput is an input type that accepts BareMetalClusterMaintenanceConfigArgs, BareMetalClusterMaintenanceConfigPtr and BareMetalClusterMaintenanceConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterMaintenanceConfigPtrInput` via:
//
//	        BareMetalClusterMaintenanceConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterMaintenanceConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterMaintenanceConfigPtrOutput() BareMetalClusterMaintenanceConfigPtrOutput
	ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(context.Context) BareMetalClusterMaintenanceConfigPtrOutput
}

type bareMetalClusterMaintenanceConfigPtrType BareMetalClusterMaintenanceConfigArgs

func BareMetalClusterMaintenanceConfigPtr(v *BareMetalClusterMaintenanceConfigArgs) BareMetalClusterMaintenanceConfigPtrInput {
	return (*bareMetalClusterMaintenanceConfigPtrType)(v)
}

func (*bareMetalClusterMaintenanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterMaintenanceConfig)(nil)).Elem()
}

func (i *bareMetalClusterMaintenanceConfigPtrType) ToBareMetalClusterMaintenanceConfigPtrOutput() BareMetalClusterMaintenanceConfigPtrOutput {
	return i.ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterMaintenanceConfigPtrType) ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterMaintenanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterMaintenanceConfigPtrOutput)
}

func (i *bareMetalClusterMaintenanceConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterMaintenanceConfig] {
	return pulumix.Output[*BareMetalClusterMaintenanceConfig]{
		OutputState: i.ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterMaintenanceConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterMaintenanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterMaintenanceConfig)(nil)).Elem()
}

func (o BareMetalClusterMaintenanceConfigOutput) ToBareMetalClusterMaintenanceConfigOutput() BareMetalClusterMaintenanceConfigOutput {
	return o
}

func (o BareMetalClusterMaintenanceConfigOutput) ToBareMetalClusterMaintenanceConfigOutputWithContext(ctx context.Context) BareMetalClusterMaintenanceConfigOutput {
	return o
}

func (o BareMetalClusterMaintenanceConfigOutput) ToBareMetalClusterMaintenanceConfigPtrOutput() BareMetalClusterMaintenanceConfigPtrOutput {
	return o.ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterMaintenanceConfigOutput) ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterMaintenanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterMaintenanceConfig) *BareMetalClusterMaintenanceConfig {
		return &v
	}).(BareMetalClusterMaintenanceConfigPtrOutput)
}

func (o BareMetalClusterMaintenanceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterMaintenanceConfig] {
	return pulumix.Output[BareMetalClusterMaintenanceConfig]{
		OutputState: o.OutputState,
	}
}

// All IPv4 address from these ranges will be placed into maintenance mode.
// Nodes in maintenance mode will be cordoned and drained. When both of these
// are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set
// on the node resource.
func (o BareMetalClusterMaintenanceConfigOutput) MaintenanceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalClusterMaintenanceConfig) []string { return v.MaintenanceAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

type BareMetalClusterMaintenanceConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterMaintenanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterMaintenanceConfig)(nil)).Elem()
}

func (o BareMetalClusterMaintenanceConfigPtrOutput) ToBareMetalClusterMaintenanceConfigPtrOutput() BareMetalClusterMaintenanceConfigPtrOutput {
	return o
}

func (o BareMetalClusterMaintenanceConfigPtrOutput) ToBareMetalClusterMaintenanceConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterMaintenanceConfigPtrOutput {
	return o
}

func (o BareMetalClusterMaintenanceConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterMaintenanceConfig] {
	return pulumix.Output[*BareMetalClusterMaintenanceConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterMaintenanceConfigPtrOutput) Elem() BareMetalClusterMaintenanceConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterMaintenanceConfig) BareMetalClusterMaintenanceConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterMaintenanceConfig
		return ret
	}).(BareMetalClusterMaintenanceConfigOutput)
}

// All IPv4 address from these ranges will be placed into maintenance mode.
// Nodes in maintenance mode will be cordoned and drained. When both of these
// are true, the "baremetal.cluster.gke.io/maintenance" annotation will be set
// on the node resource.
func (o BareMetalClusterMaintenanceConfigPtrOutput) MaintenanceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterMaintenanceConfig) []string {
		if v == nil {
			return nil
		}
		return v.MaintenanceAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

type BareMetalClusterNetworkConfig struct {
	// Enables the use of advanced Anthos networking features, such as Bundled
	// Load Balancing with BGP or the egress NAT gateway.
	// Setting configuration for advanced networking features will automatically
	// set this flag.
	AdvancedNetworking *bool `pulumi:"advancedNetworking"`
	// A nested object resource
	// Structure is documented below.
	IslandModeCidr *BareMetalClusterNetworkConfigIslandModeCidr `pulumi:"islandModeCidr"`
	// Configuration for multiple network interfaces.
	// Structure is documented below.
	MultipleNetworkInterfacesConfig *BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig `pulumi:"multipleNetworkInterfacesConfig"`
	// Configuration for SR-IOV.
	// Structure is documented below.
	SrIovConfig *BareMetalClusterNetworkConfigSrIovConfig `pulumi:"srIovConfig"`
}

// BareMetalClusterNetworkConfigInput is an input type that accepts BareMetalClusterNetworkConfigArgs and BareMetalClusterNetworkConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterNetworkConfigInput` via:
//
//	BareMetalClusterNetworkConfigArgs{...}
type BareMetalClusterNetworkConfigInput interface {
	pulumi.Input

	ToBareMetalClusterNetworkConfigOutput() BareMetalClusterNetworkConfigOutput
	ToBareMetalClusterNetworkConfigOutputWithContext(context.Context) BareMetalClusterNetworkConfigOutput
}

type BareMetalClusterNetworkConfigArgs struct {
	// Enables the use of advanced Anthos networking features, such as Bundled
	// Load Balancing with BGP or the egress NAT gateway.
	// Setting configuration for advanced networking features will automatically
	// set this flag.
	AdvancedNetworking pulumi.BoolPtrInput `pulumi:"advancedNetworking"`
	// A nested object resource
	// Structure is documented below.
	IslandModeCidr BareMetalClusterNetworkConfigIslandModeCidrPtrInput `pulumi:"islandModeCidr"`
	// Configuration for multiple network interfaces.
	// Structure is documented below.
	MultipleNetworkInterfacesConfig BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrInput `pulumi:"multipleNetworkInterfacesConfig"`
	// Configuration for SR-IOV.
	// Structure is documented below.
	SrIovConfig BareMetalClusterNetworkConfigSrIovConfigPtrInput `pulumi:"srIovConfig"`
}

func (BareMetalClusterNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNetworkConfig)(nil)).Elem()
}

func (i BareMetalClusterNetworkConfigArgs) ToBareMetalClusterNetworkConfigOutput() BareMetalClusterNetworkConfigOutput {
	return i.ToBareMetalClusterNetworkConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterNetworkConfigArgs) ToBareMetalClusterNetworkConfigOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigOutput)
}

func (i BareMetalClusterNetworkConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNetworkConfig] {
	return pulumix.Output[BareMetalClusterNetworkConfig]{
		OutputState: i.ToBareMetalClusterNetworkConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterNetworkConfigArgs) ToBareMetalClusterNetworkConfigPtrOutput() BareMetalClusterNetworkConfigPtrOutput {
	return i.ToBareMetalClusterNetworkConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterNetworkConfigArgs) ToBareMetalClusterNetworkConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigOutput).ToBareMetalClusterNetworkConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterNetworkConfigPtrInput is an input type that accepts BareMetalClusterNetworkConfigArgs, BareMetalClusterNetworkConfigPtr and BareMetalClusterNetworkConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterNetworkConfigPtrInput` via:
//
//	        BareMetalClusterNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterNetworkConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterNetworkConfigPtrOutput() BareMetalClusterNetworkConfigPtrOutput
	ToBareMetalClusterNetworkConfigPtrOutputWithContext(context.Context) BareMetalClusterNetworkConfigPtrOutput
}

type bareMetalClusterNetworkConfigPtrType BareMetalClusterNetworkConfigArgs

func BareMetalClusterNetworkConfigPtr(v *BareMetalClusterNetworkConfigArgs) BareMetalClusterNetworkConfigPtrInput {
	return (*bareMetalClusterNetworkConfigPtrType)(v)
}

func (*bareMetalClusterNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNetworkConfig)(nil)).Elem()
}

func (i *bareMetalClusterNetworkConfigPtrType) ToBareMetalClusterNetworkConfigPtrOutput() BareMetalClusterNetworkConfigPtrOutput {
	return i.ToBareMetalClusterNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterNetworkConfigPtrType) ToBareMetalClusterNetworkConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigPtrOutput)
}

func (i *bareMetalClusterNetworkConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNetworkConfig] {
	return pulumix.Output[*BareMetalClusterNetworkConfig]{
		OutputState: i.ToBareMetalClusterNetworkConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterNetworkConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNetworkConfig)(nil)).Elem()
}

func (o BareMetalClusterNetworkConfigOutput) ToBareMetalClusterNetworkConfigOutput() BareMetalClusterNetworkConfigOutput {
	return o
}

func (o BareMetalClusterNetworkConfigOutput) ToBareMetalClusterNetworkConfigOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigOutput {
	return o
}

func (o BareMetalClusterNetworkConfigOutput) ToBareMetalClusterNetworkConfigPtrOutput() BareMetalClusterNetworkConfigPtrOutput {
	return o.ToBareMetalClusterNetworkConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterNetworkConfigOutput) ToBareMetalClusterNetworkConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterNetworkConfig) *BareMetalClusterNetworkConfig {
		return &v
	}).(BareMetalClusterNetworkConfigPtrOutput)
}

func (o BareMetalClusterNetworkConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNetworkConfig] {
	return pulumix.Output[BareMetalClusterNetworkConfig]{
		OutputState: o.OutputState,
	}
}

// Enables the use of advanced Anthos networking features, such as Bundled
// Load Balancing with BGP or the egress NAT gateway.
// Setting configuration for advanced networking features will automatically
// set this flag.
func (o BareMetalClusterNetworkConfigOutput) AdvancedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BareMetalClusterNetworkConfig) *bool { return v.AdvancedNetworking }).(pulumi.BoolPtrOutput)
}

// A nested object resource
// Structure is documented below.
func (o BareMetalClusterNetworkConfigOutput) IslandModeCidr() BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return o.ApplyT(func(v BareMetalClusterNetworkConfig) *BareMetalClusterNetworkConfigIslandModeCidr {
		return v.IslandModeCidr
	}).(BareMetalClusterNetworkConfigIslandModeCidrPtrOutput)
}

// Configuration for multiple network interfaces.
// Structure is documented below.
func (o BareMetalClusterNetworkConfigOutput) MultipleNetworkInterfacesConfig() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterNetworkConfig) *BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig {
		return v.MultipleNetworkInterfacesConfig
	}).(BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput)
}

// Configuration for SR-IOV.
// Structure is documented below.
func (o BareMetalClusterNetworkConfigOutput) SrIovConfig() BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return o.ApplyT(func(v BareMetalClusterNetworkConfig) *BareMetalClusterNetworkConfigSrIovConfig { return v.SrIovConfig }).(BareMetalClusterNetworkConfigSrIovConfigPtrOutput)
}

type BareMetalClusterNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNetworkConfig)(nil)).Elem()
}

func (o BareMetalClusterNetworkConfigPtrOutput) ToBareMetalClusterNetworkConfigPtrOutput() BareMetalClusterNetworkConfigPtrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigPtrOutput) ToBareMetalClusterNetworkConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigPtrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNetworkConfig] {
	return pulumix.Output[*BareMetalClusterNetworkConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterNetworkConfigPtrOutput) Elem() BareMetalClusterNetworkConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfig) BareMetalClusterNetworkConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterNetworkConfig
		return ret
	}).(BareMetalClusterNetworkConfigOutput)
}

// Enables the use of advanced Anthos networking features, such as Bundled
// Load Balancing with BGP or the egress NAT gateway.
// Setting configuration for advanced networking features will automatically
// set this flag.
func (o BareMetalClusterNetworkConfigPtrOutput) AdvancedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AdvancedNetworking
	}).(pulumi.BoolPtrOutput)
}

// A nested object resource
// Structure is documented below.
func (o BareMetalClusterNetworkConfigPtrOutput) IslandModeCidr() BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfig) *BareMetalClusterNetworkConfigIslandModeCidr {
		if v == nil {
			return nil
		}
		return v.IslandModeCidr
	}).(BareMetalClusterNetworkConfigIslandModeCidrPtrOutput)
}

// Configuration for multiple network interfaces.
// Structure is documented below.
func (o BareMetalClusterNetworkConfigPtrOutput) MultipleNetworkInterfacesConfig() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfig) *BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig {
		if v == nil {
			return nil
		}
		return v.MultipleNetworkInterfacesConfig
	}).(BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput)
}

// Configuration for SR-IOV.
// Structure is documented below.
func (o BareMetalClusterNetworkConfigPtrOutput) SrIovConfig() BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfig) *BareMetalClusterNetworkConfigSrIovConfig {
		if v == nil {
			return nil
		}
		return v.SrIovConfig
	}).(BareMetalClusterNetworkConfigSrIovConfigPtrOutput)
}

type BareMetalClusterNetworkConfigIslandModeCidr struct {
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
	PodAddressCidrBlocks []string `pulumi:"podAddressCidrBlocks"`
	// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
	ServiceAddressCidrBlocks []string `pulumi:"serviceAddressCidrBlocks"`
}

// BareMetalClusterNetworkConfigIslandModeCidrInput is an input type that accepts BareMetalClusterNetworkConfigIslandModeCidrArgs and BareMetalClusterNetworkConfigIslandModeCidrOutput values.
// You can construct a concrete instance of `BareMetalClusterNetworkConfigIslandModeCidrInput` via:
//
//	BareMetalClusterNetworkConfigIslandModeCidrArgs{...}
type BareMetalClusterNetworkConfigIslandModeCidrInput interface {
	pulumi.Input

	ToBareMetalClusterNetworkConfigIslandModeCidrOutput() BareMetalClusterNetworkConfigIslandModeCidrOutput
	ToBareMetalClusterNetworkConfigIslandModeCidrOutputWithContext(context.Context) BareMetalClusterNetworkConfigIslandModeCidrOutput
}

type BareMetalClusterNetworkConfigIslandModeCidrArgs struct {
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
	PodAddressCidrBlocks pulumi.StringArrayInput `pulumi:"podAddressCidrBlocks"`
	// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
	ServiceAddressCidrBlocks pulumi.StringArrayInput `pulumi:"serviceAddressCidrBlocks"`
}

func (BareMetalClusterNetworkConfigIslandModeCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNetworkConfigIslandModeCidr)(nil)).Elem()
}

func (i BareMetalClusterNetworkConfigIslandModeCidrArgs) ToBareMetalClusterNetworkConfigIslandModeCidrOutput() BareMetalClusterNetworkConfigIslandModeCidrOutput {
	return i.ToBareMetalClusterNetworkConfigIslandModeCidrOutputWithContext(context.Background())
}

func (i BareMetalClusterNetworkConfigIslandModeCidrArgs) ToBareMetalClusterNetworkConfigIslandModeCidrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigIslandModeCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigIslandModeCidrOutput)
}

func (i BareMetalClusterNetworkConfigIslandModeCidrArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNetworkConfigIslandModeCidr] {
	return pulumix.Output[BareMetalClusterNetworkConfigIslandModeCidr]{
		OutputState: i.ToBareMetalClusterNetworkConfigIslandModeCidrOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterNetworkConfigIslandModeCidrArgs) ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return i.ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterNetworkConfigIslandModeCidrArgs) ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigIslandModeCidrOutput).ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx)
}

// BareMetalClusterNetworkConfigIslandModeCidrPtrInput is an input type that accepts BareMetalClusterNetworkConfigIslandModeCidrArgs, BareMetalClusterNetworkConfigIslandModeCidrPtr and BareMetalClusterNetworkConfigIslandModeCidrPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterNetworkConfigIslandModeCidrPtrInput` via:
//
//	        BareMetalClusterNetworkConfigIslandModeCidrArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterNetworkConfigIslandModeCidrPtrInput interface {
	pulumi.Input

	ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalClusterNetworkConfigIslandModeCidrPtrOutput
	ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(context.Context) BareMetalClusterNetworkConfigIslandModeCidrPtrOutput
}

type bareMetalClusterNetworkConfigIslandModeCidrPtrType BareMetalClusterNetworkConfigIslandModeCidrArgs

func BareMetalClusterNetworkConfigIslandModeCidrPtr(v *BareMetalClusterNetworkConfigIslandModeCidrArgs) BareMetalClusterNetworkConfigIslandModeCidrPtrInput {
	return (*bareMetalClusterNetworkConfigIslandModeCidrPtrType)(v)
}

func (*bareMetalClusterNetworkConfigIslandModeCidrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNetworkConfigIslandModeCidr)(nil)).Elem()
}

func (i *bareMetalClusterNetworkConfigIslandModeCidrPtrType) ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return i.ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterNetworkConfigIslandModeCidrPtrType) ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigIslandModeCidrPtrOutput)
}

func (i *bareMetalClusterNetworkConfigIslandModeCidrPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNetworkConfigIslandModeCidr] {
	return pulumix.Output[*BareMetalClusterNetworkConfigIslandModeCidr]{
		OutputState: i.ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterNetworkConfigIslandModeCidrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNetworkConfigIslandModeCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNetworkConfigIslandModeCidr)(nil)).Elem()
}

func (o BareMetalClusterNetworkConfigIslandModeCidrOutput) ToBareMetalClusterNetworkConfigIslandModeCidrOutput() BareMetalClusterNetworkConfigIslandModeCidrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigIslandModeCidrOutput) ToBareMetalClusterNetworkConfigIslandModeCidrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigIslandModeCidrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigIslandModeCidrOutput) ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return o.ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterNetworkConfigIslandModeCidrOutput) ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterNetworkConfigIslandModeCidr) *BareMetalClusterNetworkConfigIslandModeCidr {
		return &v
	}).(BareMetalClusterNetworkConfigIslandModeCidrPtrOutput)
}

func (o BareMetalClusterNetworkConfigIslandModeCidrOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNetworkConfigIslandModeCidr] {
	return pulumix.Output[BareMetalClusterNetworkConfigIslandModeCidr]{
		OutputState: o.OutputState,
	}
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
func (o BareMetalClusterNetworkConfigIslandModeCidrOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalClusterNetworkConfigIslandModeCidr) []string { return v.PodAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
func (o BareMetalClusterNetworkConfigIslandModeCidrOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalClusterNetworkConfigIslandModeCidr) []string { return v.ServiceAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

type BareMetalClusterNetworkConfigIslandModeCidrPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNetworkConfigIslandModeCidrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNetworkConfigIslandModeCidr)(nil)).Elem()
}

func (o BareMetalClusterNetworkConfigIslandModeCidrPtrOutput) ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutput() BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigIslandModeCidrPtrOutput) ToBareMetalClusterNetworkConfigIslandModeCidrPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigIslandModeCidrPtrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigIslandModeCidrPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNetworkConfigIslandModeCidr] {
	return pulumix.Output[*BareMetalClusterNetworkConfigIslandModeCidr]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterNetworkConfigIslandModeCidrPtrOutput) Elem() BareMetalClusterNetworkConfigIslandModeCidrOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfigIslandModeCidr) BareMetalClusterNetworkConfigIslandModeCidr {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterNetworkConfigIslandModeCidr
		return ret
	}).(BareMetalClusterNetworkConfigIslandModeCidrOutput)
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
func (o BareMetalClusterNetworkConfigIslandModeCidrPtrOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfigIslandModeCidr) []string {
		if v == nil {
			return nil
		}
		return v.PodAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
func (o BareMetalClusterNetworkConfigIslandModeCidrPtrOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfigIslandModeCidr) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

type BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig struct {
	// Whether to enable multiple network interfaces for your pods.
	// When set network_config.advanced_networking is automatically
	// set to true.
	Enabled *bool `pulumi:"enabled"`
}

// BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigInput is an input type that accepts BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs and BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigInput` via:
//
//	BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs{...}
type BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigInput interface {
	pulumi.Input

	ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput
	ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutputWithContext(context.Context) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput
}

type BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs struct {
	// Whether to enable multiple network interfaces for your pods.
	// When set network_config.advanced_networking is automatically
	// set to true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig)(nil)).Elem()
}

func (i BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput {
	return i.ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput)
}

func (i BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig] {
	return pulumix.Output[BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig]{
		OutputState: i.ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return i.ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput).ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrInput is an input type that accepts BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs, BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtr and BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrInput` via:
//
//	        BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput
	ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(context.Context) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput
}

type bareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrType BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs

func BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtr(v *BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrInput {
	return (*bareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrType)(v)
}

func (*bareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig)(nil)).Elem()
}

func (i *bareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrType) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return i.ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrType) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput)
}

func (i *bareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig] {
	return pulumix.Output[*BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig]{
		OutputState: i.ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig)(nil)).Elem()
}

func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput {
	return o
}

func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput {
	return o
}

func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return o.ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig) *BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig {
		return &v
	}).(BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput)
}

func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig] {
	return pulumix.Output[BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig]{
		OutputState: o.OutputState,
	}
}

// Whether to enable multiple network interfaces for your pods.
// When set network_config.advanced_networking is automatically
// set to true.
func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig)(nil)).Elem()
}

func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput) ToBareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig] {
	return pulumix.Output[*BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput) Elem() BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig) BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig
		return ret
	}).(BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput)
}

// Whether to enable multiple network interfaces for your pods.
// When set network_config.advanced_networking is automatically
// set to true.
func (o BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type BareMetalClusterNetworkConfigSrIovConfig struct {
	// Whether to install the SR-IOV operator.
	Enabled *bool `pulumi:"enabled"`
}

// BareMetalClusterNetworkConfigSrIovConfigInput is an input type that accepts BareMetalClusterNetworkConfigSrIovConfigArgs and BareMetalClusterNetworkConfigSrIovConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterNetworkConfigSrIovConfigInput` via:
//
//	BareMetalClusterNetworkConfigSrIovConfigArgs{...}
type BareMetalClusterNetworkConfigSrIovConfigInput interface {
	pulumi.Input

	ToBareMetalClusterNetworkConfigSrIovConfigOutput() BareMetalClusterNetworkConfigSrIovConfigOutput
	ToBareMetalClusterNetworkConfigSrIovConfigOutputWithContext(context.Context) BareMetalClusterNetworkConfigSrIovConfigOutput
}

type BareMetalClusterNetworkConfigSrIovConfigArgs struct {
	// Whether to install the SR-IOV operator.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (BareMetalClusterNetworkConfigSrIovConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNetworkConfigSrIovConfig)(nil)).Elem()
}

func (i BareMetalClusterNetworkConfigSrIovConfigArgs) ToBareMetalClusterNetworkConfigSrIovConfigOutput() BareMetalClusterNetworkConfigSrIovConfigOutput {
	return i.ToBareMetalClusterNetworkConfigSrIovConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterNetworkConfigSrIovConfigArgs) ToBareMetalClusterNetworkConfigSrIovConfigOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigSrIovConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigSrIovConfigOutput)
}

func (i BareMetalClusterNetworkConfigSrIovConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNetworkConfigSrIovConfig] {
	return pulumix.Output[BareMetalClusterNetworkConfigSrIovConfig]{
		OutputState: i.ToBareMetalClusterNetworkConfigSrIovConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterNetworkConfigSrIovConfigArgs) ToBareMetalClusterNetworkConfigSrIovConfigPtrOutput() BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return i.ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterNetworkConfigSrIovConfigArgs) ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigSrIovConfigOutput).ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterNetworkConfigSrIovConfigPtrInput is an input type that accepts BareMetalClusterNetworkConfigSrIovConfigArgs, BareMetalClusterNetworkConfigSrIovConfigPtr and BareMetalClusterNetworkConfigSrIovConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterNetworkConfigSrIovConfigPtrInput` via:
//
//	        BareMetalClusterNetworkConfigSrIovConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterNetworkConfigSrIovConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterNetworkConfigSrIovConfigPtrOutput() BareMetalClusterNetworkConfigSrIovConfigPtrOutput
	ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(context.Context) BareMetalClusterNetworkConfigSrIovConfigPtrOutput
}

type bareMetalClusterNetworkConfigSrIovConfigPtrType BareMetalClusterNetworkConfigSrIovConfigArgs

func BareMetalClusterNetworkConfigSrIovConfigPtr(v *BareMetalClusterNetworkConfigSrIovConfigArgs) BareMetalClusterNetworkConfigSrIovConfigPtrInput {
	return (*bareMetalClusterNetworkConfigSrIovConfigPtrType)(v)
}

func (*bareMetalClusterNetworkConfigSrIovConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNetworkConfigSrIovConfig)(nil)).Elem()
}

func (i *bareMetalClusterNetworkConfigSrIovConfigPtrType) ToBareMetalClusterNetworkConfigSrIovConfigPtrOutput() BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return i.ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterNetworkConfigSrIovConfigPtrType) ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNetworkConfigSrIovConfigPtrOutput)
}

func (i *bareMetalClusterNetworkConfigSrIovConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNetworkConfigSrIovConfig] {
	return pulumix.Output[*BareMetalClusterNetworkConfigSrIovConfig]{
		OutputState: i.ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterNetworkConfigSrIovConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNetworkConfigSrIovConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNetworkConfigSrIovConfig)(nil)).Elem()
}

func (o BareMetalClusterNetworkConfigSrIovConfigOutput) ToBareMetalClusterNetworkConfigSrIovConfigOutput() BareMetalClusterNetworkConfigSrIovConfigOutput {
	return o
}

func (o BareMetalClusterNetworkConfigSrIovConfigOutput) ToBareMetalClusterNetworkConfigSrIovConfigOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigSrIovConfigOutput {
	return o
}

func (o BareMetalClusterNetworkConfigSrIovConfigOutput) ToBareMetalClusterNetworkConfigSrIovConfigPtrOutput() BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return o.ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterNetworkConfigSrIovConfigOutput) ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterNetworkConfigSrIovConfig) *BareMetalClusterNetworkConfigSrIovConfig {
		return &v
	}).(BareMetalClusterNetworkConfigSrIovConfigPtrOutput)
}

func (o BareMetalClusterNetworkConfigSrIovConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNetworkConfigSrIovConfig] {
	return pulumix.Output[BareMetalClusterNetworkConfigSrIovConfig]{
		OutputState: o.OutputState,
	}
}

// Whether to install the SR-IOV operator.
func (o BareMetalClusterNetworkConfigSrIovConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BareMetalClusterNetworkConfigSrIovConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type BareMetalClusterNetworkConfigSrIovConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNetworkConfigSrIovConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNetworkConfigSrIovConfig)(nil)).Elem()
}

func (o BareMetalClusterNetworkConfigSrIovConfigPtrOutput) ToBareMetalClusterNetworkConfigSrIovConfigPtrOutput() BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigSrIovConfigPtrOutput) ToBareMetalClusterNetworkConfigSrIovConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNetworkConfigSrIovConfigPtrOutput {
	return o
}

func (o BareMetalClusterNetworkConfigSrIovConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNetworkConfigSrIovConfig] {
	return pulumix.Output[*BareMetalClusterNetworkConfigSrIovConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterNetworkConfigSrIovConfigPtrOutput) Elem() BareMetalClusterNetworkConfigSrIovConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfigSrIovConfig) BareMetalClusterNetworkConfigSrIovConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterNetworkConfigSrIovConfig
		return ret
	}).(BareMetalClusterNetworkConfigSrIovConfigOutput)
}

// Whether to install the SR-IOV operator.
func (o BareMetalClusterNetworkConfigSrIovConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterNetworkConfigSrIovConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type BareMetalClusterNodeAccessConfig struct {
	// LoginUser is the user name used to access node machines.
	// It defaults to "root" if not set.
	LoginUser *string `pulumi:"loginUser"`
}

// BareMetalClusterNodeAccessConfigInput is an input type that accepts BareMetalClusterNodeAccessConfigArgs and BareMetalClusterNodeAccessConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterNodeAccessConfigInput` via:
//
//	BareMetalClusterNodeAccessConfigArgs{...}
type BareMetalClusterNodeAccessConfigInput interface {
	pulumi.Input

	ToBareMetalClusterNodeAccessConfigOutput() BareMetalClusterNodeAccessConfigOutput
	ToBareMetalClusterNodeAccessConfigOutputWithContext(context.Context) BareMetalClusterNodeAccessConfigOutput
}

type BareMetalClusterNodeAccessConfigArgs struct {
	// LoginUser is the user name used to access node machines.
	// It defaults to "root" if not set.
	LoginUser pulumi.StringPtrInput `pulumi:"loginUser"`
}

func (BareMetalClusterNodeAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNodeAccessConfig)(nil)).Elem()
}

func (i BareMetalClusterNodeAccessConfigArgs) ToBareMetalClusterNodeAccessConfigOutput() BareMetalClusterNodeAccessConfigOutput {
	return i.ToBareMetalClusterNodeAccessConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterNodeAccessConfigArgs) ToBareMetalClusterNodeAccessConfigOutputWithContext(ctx context.Context) BareMetalClusterNodeAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNodeAccessConfigOutput)
}

func (i BareMetalClusterNodeAccessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNodeAccessConfig] {
	return pulumix.Output[BareMetalClusterNodeAccessConfig]{
		OutputState: i.ToBareMetalClusterNodeAccessConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterNodeAccessConfigArgs) ToBareMetalClusterNodeAccessConfigPtrOutput() BareMetalClusterNodeAccessConfigPtrOutput {
	return i.ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterNodeAccessConfigArgs) ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNodeAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNodeAccessConfigOutput).ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterNodeAccessConfigPtrInput is an input type that accepts BareMetalClusterNodeAccessConfigArgs, BareMetalClusterNodeAccessConfigPtr and BareMetalClusterNodeAccessConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterNodeAccessConfigPtrInput` via:
//
//	        BareMetalClusterNodeAccessConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterNodeAccessConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterNodeAccessConfigPtrOutput() BareMetalClusterNodeAccessConfigPtrOutput
	ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(context.Context) BareMetalClusterNodeAccessConfigPtrOutput
}

type bareMetalClusterNodeAccessConfigPtrType BareMetalClusterNodeAccessConfigArgs

func BareMetalClusterNodeAccessConfigPtr(v *BareMetalClusterNodeAccessConfigArgs) BareMetalClusterNodeAccessConfigPtrInput {
	return (*bareMetalClusterNodeAccessConfigPtrType)(v)
}

func (*bareMetalClusterNodeAccessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNodeAccessConfig)(nil)).Elem()
}

func (i *bareMetalClusterNodeAccessConfigPtrType) ToBareMetalClusterNodeAccessConfigPtrOutput() BareMetalClusterNodeAccessConfigPtrOutput {
	return i.ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterNodeAccessConfigPtrType) ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNodeAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNodeAccessConfigPtrOutput)
}

func (i *bareMetalClusterNodeAccessConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNodeAccessConfig] {
	return pulumix.Output[*BareMetalClusterNodeAccessConfig]{
		OutputState: i.ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterNodeAccessConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNodeAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNodeAccessConfig)(nil)).Elem()
}

func (o BareMetalClusterNodeAccessConfigOutput) ToBareMetalClusterNodeAccessConfigOutput() BareMetalClusterNodeAccessConfigOutput {
	return o
}

func (o BareMetalClusterNodeAccessConfigOutput) ToBareMetalClusterNodeAccessConfigOutputWithContext(ctx context.Context) BareMetalClusterNodeAccessConfigOutput {
	return o
}

func (o BareMetalClusterNodeAccessConfigOutput) ToBareMetalClusterNodeAccessConfigPtrOutput() BareMetalClusterNodeAccessConfigPtrOutput {
	return o.ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterNodeAccessConfigOutput) ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNodeAccessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterNodeAccessConfig) *BareMetalClusterNodeAccessConfig {
		return &v
	}).(BareMetalClusterNodeAccessConfigPtrOutput)
}

func (o BareMetalClusterNodeAccessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNodeAccessConfig] {
	return pulumix.Output[BareMetalClusterNodeAccessConfig]{
		OutputState: o.OutputState,
	}
}

// LoginUser is the user name used to access node machines.
// It defaults to "root" if not set.
func (o BareMetalClusterNodeAccessConfigOutput) LoginUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterNodeAccessConfig) *string { return v.LoginUser }).(pulumi.StringPtrOutput)
}

type BareMetalClusterNodeAccessConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNodeAccessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNodeAccessConfig)(nil)).Elem()
}

func (o BareMetalClusterNodeAccessConfigPtrOutput) ToBareMetalClusterNodeAccessConfigPtrOutput() BareMetalClusterNodeAccessConfigPtrOutput {
	return o
}

func (o BareMetalClusterNodeAccessConfigPtrOutput) ToBareMetalClusterNodeAccessConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNodeAccessConfigPtrOutput {
	return o
}

func (o BareMetalClusterNodeAccessConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNodeAccessConfig] {
	return pulumix.Output[*BareMetalClusterNodeAccessConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterNodeAccessConfigPtrOutput) Elem() BareMetalClusterNodeAccessConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterNodeAccessConfig) BareMetalClusterNodeAccessConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterNodeAccessConfig
		return ret
	}).(BareMetalClusterNodeAccessConfigOutput)
}

// LoginUser is the user name used to access node machines.
// It defaults to "root" if not set.
func (o BareMetalClusterNodeAccessConfigPtrOutput) LoginUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterNodeAccessConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoginUser
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterNodeConfig struct {
	// The available runtimes that can be used to run containers in a Bare Metal User Cluster.
	// Possible values are: `CONTAINER_RUNTIME_UNSPECIFIED`, `DOCKER`, `CONTAINERD`.
	ContainerRuntime *string `pulumi:"containerRuntime"`
	// The maximum number of pods a node can run. The size of the CIDR range
	// assigned to the node will be derived from this parameter.
	MaxPodsPerNode *int `pulumi:"maxPodsPerNode"`
}

// BareMetalClusterNodeConfigInput is an input type that accepts BareMetalClusterNodeConfigArgs and BareMetalClusterNodeConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterNodeConfigInput` via:
//
//	BareMetalClusterNodeConfigArgs{...}
type BareMetalClusterNodeConfigInput interface {
	pulumi.Input

	ToBareMetalClusterNodeConfigOutput() BareMetalClusterNodeConfigOutput
	ToBareMetalClusterNodeConfigOutputWithContext(context.Context) BareMetalClusterNodeConfigOutput
}

type BareMetalClusterNodeConfigArgs struct {
	// The available runtimes that can be used to run containers in a Bare Metal User Cluster.
	// Possible values are: `CONTAINER_RUNTIME_UNSPECIFIED`, `DOCKER`, `CONTAINERD`.
	ContainerRuntime pulumi.StringPtrInput `pulumi:"containerRuntime"`
	// The maximum number of pods a node can run. The size of the CIDR range
	// assigned to the node will be derived from this parameter.
	MaxPodsPerNode pulumi.IntPtrInput `pulumi:"maxPodsPerNode"`
}

func (BareMetalClusterNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNodeConfig)(nil)).Elem()
}

func (i BareMetalClusterNodeConfigArgs) ToBareMetalClusterNodeConfigOutput() BareMetalClusterNodeConfigOutput {
	return i.ToBareMetalClusterNodeConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterNodeConfigArgs) ToBareMetalClusterNodeConfigOutputWithContext(ctx context.Context) BareMetalClusterNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNodeConfigOutput)
}

func (i BareMetalClusterNodeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNodeConfig] {
	return pulumix.Output[BareMetalClusterNodeConfig]{
		OutputState: i.ToBareMetalClusterNodeConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterNodeConfigArgs) ToBareMetalClusterNodeConfigPtrOutput() BareMetalClusterNodeConfigPtrOutput {
	return i.ToBareMetalClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterNodeConfigArgs) ToBareMetalClusterNodeConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNodeConfigOutput).ToBareMetalClusterNodeConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterNodeConfigPtrInput is an input type that accepts BareMetalClusterNodeConfigArgs, BareMetalClusterNodeConfigPtr and BareMetalClusterNodeConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterNodeConfigPtrInput` via:
//
//	        BareMetalClusterNodeConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterNodeConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterNodeConfigPtrOutput() BareMetalClusterNodeConfigPtrOutput
	ToBareMetalClusterNodeConfigPtrOutputWithContext(context.Context) BareMetalClusterNodeConfigPtrOutput
}

type bareMetalClusterNodeConfigPtrType BareMetalClusterNodeConfigArgs

func BareMetalClusterNodeConfigPtr(v *BareMetalClusterNodeConfigArgs) BareMetalClusterNodeConfigPtrInput {
	return (*bareMetalClusterNodeConfigPtrType)(v)
}

func (*bareMetalClusterNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNodeConfig)(nil)).Elem()
}

func (i *bareMetalClusterNodeConfigPtrType) ToBareMetalClusterNodeConfigPtrOutput() BareMetalClusterNodeConfigPtrOutput {
	return i.ToBareMetalClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterNodeConfigPtrType) ToBareMetalClusterNodeConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterNodeConfigPtrOutput)
}

func (i *bareMetalClusterNodeConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNodeConfig] {
	return pulumix.Output[*BareMetalClusterNodeConfig]{
		OutputState: i.ToBareMetalClusterNodeConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterNodeConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterNodeConfig)(nil)).Elem()
}

func (o BareMetalClusterNodeConfigOutput) ToBareMetalClusterNodeConfigOutput() BareMetalClusterNodeConfigOutput {
	return o
}

func (o BareMetalClusterNodeConfigOutput) ToBareMetalClusterNodeConfigOutputWithContext(ctx context.Context) BareMetalClusterNodeConfigOutput {
	return o
}

func (o BareMetalClusterNodeConfigOutput) ToBareMetalClusterNodeConfigPtrOutput() BareMetalClusterNodeConfigPtrOutput {
	return o.ToBareMetalClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterNodeConfigOutput) ToBareMetalClusterNodeConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNodeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterNodeConfig) *BareMetalClusterNodeConfig {
		return &v
	}).(BareMetalClusterNodeConfigPtrOutput)
}

func (o BareMetalClusterNodeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterNodeConfig] {
	return pulumix.Output[BareMetalClusterNodeConfig]{
		OutputState: o.OutputState,
	}
}

// The available runtimes that can be used to run containers in a Bare Metal User Cluster.
// Possible values are: `CONTAINER_RUNTIME_UNSPECIFIED`, `DOCKER`, `CONTAINERD`.
func (o BareMetalClusterNodeConfigOutput) ContainerRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterNodeConfig) *string { return v.ContainerRuntime }).(pulumi.StringPtrOutput)
}

// The maximum number of pods a node can run. The size of the CIDR range
// assigned to the node will be derived from this parameter.
func (o BareMetalClusterNodeConfigOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BareMetalClusterNodeConfig) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

type BareMetalClusterNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterNodeConfig)(nil)).Elem()
}

func (o BareMetalClusterNodeConfigPtrOutput) ToBareMetalClusterNodeConfigPtrOutput() BareMetalClusterNodeConfigPtrOutput {
	return o
}

func (o BareMetalClusterNodeConfigPtrOutput) ToBareMetalClusterNodeConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterNodeConfigPtrOutput {
	return o
}

func (o BareMetalClusterNodeConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterNodeConfig] {
	return pulumix.Output[*BareMetalClusterNodeConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterNodeConfigPtrOutput) Elem() BareMetalClusterNodeConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterNodeConfig) BareMetalClusterNodeConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterNodeConfig
		return ret
	}).(BareMetalClusterNodeConfigOutput)
}

// The available runtimes that can be used to run containers in a Bare Metal User Cluster.
// Possible values are: `CONTAINER_RUNTIME_UNSPECIFIED`, `DOCKER`, `CONTAINERD`.
func (o BareMetalClusterNodeConfigPtrOutput) ContainerRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ContainerRuntime
	}).(pulumi.StringPtrOutput)
}

// The maximum number of pods a node can run. The size of the CIDR range
// assigned to the node will be derived from this parameter.
func (o BareMetalClusterNodeConfigPtrOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNode
	}).(pulumi.IntPtrOutput)
}

type BareMetalClusterOsEnvironmentConfig struct {
	// Whether the package repo should not be included when initializing
	// bare metal machines.
	PackageRepoExcluded bool `pulumi:"packageRepoExcluded"`
}

// BareMetalClusterOsEnvironmentConfigInput is an input type that accepts BareMetalClusterOsEnvironmentConfigArgs and BareMetalClusterOsEnvironmentConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterOsEnvironmentConfigInput` via:
//
//	BareMetalClusterOsEnvironmentConfigArgs{...}
type BareMetalClusterOsEnvironmentConfigInput interface {
	pulumi.Input

	ToBareMetalClusterOsEnvironmentConfigOutput() BareMetalClusterOsEnvironmentConfigOutput
	ToBareMetalClusterOsEnvironmentConfigOutputWithContext(context.Context) BareMetalClusterOsEnvironmentConfigOutput
}

type BareMetalClusterOsEnvironmentConfigArgs struct {
	// Whether the package repo should not be included when initializing
	// bare metal machines.
	PackageRepoExcluded pulumi.BoolInput `pulumi:"packageRepoExcluded"`
}

func (BareMetalClusterOsEnvironmentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterOsEnvironmentConfig)(nil)).Elem()
}

func (i BareMetalClusterOsEnvironmentConfigArgs) ToBareMetalClusterOsEnvironmentConfigOutput() BareMetalClusterOsEnvironmentConfigOutput {
	return i.ToBareMetalClusterOsEnvironmentConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterOsEnvironmentConfigArgs) ToBareMetalClusterOsEnvironmentConfigOutputWithContext(ctx context.Context) BareMetalClusterOsEnvironmentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterOsEnvironmentConfigOutput)
}

func (i BareMetalClusterOsEnvironmentConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterOsEnvironmentConfig] {
	return pulumix.Output[BareMetalClusterOsEnvironmentConfig]{
		OutputState: i.ToBareMetalClusterOsEnvironmentConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterOsEnvironmentConfigArgs) ToBareMetalClusterOsEnvironmentConfigPtrOutput() BareMetalClusterOsEnvironmentConfigPtrOutput {
	return i.ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterOsEnvironmentConfigArgs) ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterOsEnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterOsEnvironmentConfigOutput).ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterOsEnvironmentConfigPtrInput is an input type that accepts BareMetalClusterOsEnvironmentConfigArgs, BareMetalClusterOsEnvironmentConfigPtr and BareMetalClusterOsEnvironmentConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterOsEnvironmentConfigPtrInput` via:
//
//	        BareMetalClusterOsEnvironmentConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterOsEnvironmentConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterOsEnvironmentConfigPtrOutput() BareMetalClusterOsEnvironmentConfigPtrOutput
	ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(context.Context) BareMetalClusterOsEnvironmentConfigPtrOutput
}

type bareMetalClusterOsEnvironmentConfigPtrType BareMetalClusterOsEnvironmentConfigArgs

func BareMetalClusterOsEnvironmentConfigPtr(v *BareMetalClusterOsEnvironmentConfigArgs) BareMetalClusterOsEnvironmentConfigPtrInput {
	return (*bareMetalClusterOsEnvironmentConfigPtrType)(v)
}

func (*bareMetalClusterOsEnvironmentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterOsEnvironmentConfig)(nil)).Elem()
}

func (i *bareMetalClusterOsEnvironmentConfigPtrType) ToBareMetalClusterOsEnvironmentConfigPtrOutput() BareMetalClusterOsEnvironmentConfigPtrOutput {
	return i.ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterOsEnvironmentConfigPtrType) ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterOsEnvironmentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterOsEnvironmentConfigPtrOutput)
}

func (i *bareMetalClusterOsEnvironmentConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterOsEnvironmentConfig] {
	return pulumix.Output[*BareMetalClusterOsEnvironmentConfig]{
		OutputState: i.ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterOsEnvironmentConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterOsEnvironmentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterOsEnvironmentConfig)(nil)).Elem()
}

func (o BareMetalClusterOsEnvironmentConfigOutput) ToBareMetalClusterOsEnvironmentConfigOutput() BareMetalClusterOsEnvironmentConfigOutput {
	return o
}

func (o BareMetalClusterOsEnvironmentConfigOutput) ToBareMetalClusterOsEnvironmentConfigOutputWithContext(ctx context.Context) BareMetalClusterOsEnvironmentConfigOutput {
	return o
}

func (o BareMetalClusterOsEnvironmentConfigOutput) ToBareMetalClusterOsEnvironmentConfigPtrOutput() BareMetalClusterOsEnvironmentConfigPtrOutput {
	return o.ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterOsEnvironmentConfigOutput) ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterOsEnvironmentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterOsEnvironmentConfig) *BareMetalClusterOsEnvironmentConfig {
		return &v
	}).(BareMetalClusterOsEnvironmentConfigPtrOutput)
}

func (o BareMetalClusterOsEnvironmentConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterOsEnvironmentConfig] {
	return pulumix.Output[BareMetalClusterOsEnvironmentConfig]{
		OutputState: o.OutputState,
	}
}

// Whether the package repo should not be included when initializing
// bare metal machines.
func (o BareMetalClusterOsEnvironmentConfigOutput) PackageRepoExcluded() pulumi.BoolOutput {
	return o.ApplyT(func(v BareMetalClusterOsEnvironmentConfig) bool { return v.PackageRepoExcluded }).(pulumi.BoolOutput)
}

type BareMetalClusterOsEnvironmentConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterOsEnvironmentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterOsEnvironmentConfig)(nil)).Elem()
}

func (o BareMetalClusterOsEnvironmentConfigPtrOutput) ToBareMetalClusterOsEnvironmentConfigPtrOutput() BareMetalClusterOsEnvironmentConfigPtrOutput {
	return o
}

func (o BareMetalClusterOsEnvironmentConfigPtrOutput) ToBareMetalClusterOsEnvironmentConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterOsEnvironmentConfigPtrOutput {
	return o
}

func (o BareMetalClusterOsEnvironmentConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterOsEnvironmentConfig] {
	return pulumix.Output[*BareMetalClusterOsEnvironmentConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterOsEnvironmentConfigPtrOutput) Elem() BareMetalClusterOsEnvironmentConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterOsEnvironmentConfig) BareMetalClusterOsEnvironmentConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterOsEnvironmentConfig
		return ret
	}).(BareMetalClusterOsEnvironmentConfigOutput)
}

// Whether the package repo should not be included when initializing
// bare metal machines.
func (o BareMetalClusterOsEnvironmentConfigPtrOutput) PackageRepoExcluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterOsEnvironmentConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.PackageRepoExcluded
	}).(pulumi.BoolPtrOutput)
}

type BareMetalClusterProxy struct {
	// A list of IPs, hostnames, and domains that should skip the proxy.
	// Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
	NoProxies []string `pulumi:"noProxies"`
	// Specifies the address of your proxy server.
	// Examples: http://domain
	// WARNING: Do not provide credentials in the format
	// http://(username:password@)domain these will be rejected by the server.
	Uri string `pulumi:"uri"`
}

// BareMetalClusterProxyInput is an input type that accepts BareMetalClusterProxyArgs and BareMetalClusterProxyOutput values.
// You can construct a concrete instance of `BareMetalClusterProxyInput` via:
//
//	BareMetalClusterProxyArgs{...}
type BareMetalClusterProxyInput interface {
	pulumi.Input

	ToBareMetalClusterProxyOutput() BareMetalClusterProxyOutput
	ToBareMetalClusterProxyOutputWithContext(context.Context) BareMetalClusterProxyOutput
}

type BareMetalClusterProxyArgs struct {
	// A list of IPs, hostnames, and domains that should skip the proxy.
	// Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
	NoProxies pulumi.StringArrayInput `pulumi:"noProxies"`
	// Specifies the address of your proxy server.
	// Examples: http://domain
	// WARNING: Do not provide credentials in the format
	// http://(username:password@)domain these will be rejected by the server.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (BareMetalClusterProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterProxy)(nil)).Elem()
}

func (i BareMetalClusterProxyArgs) ToBareMetalClusterProxyOutput() BareMetalClusterProxyOutput {
	return i.ToBareMetalClusterProxyOutputWithContext(context.Background())
}

func (i BareMetalClusterProxyArgs) ToBareMetalClusterProxyOutputWithContext(ctx context.Context) BareMetalClusterProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterProxyOutput)
}

func (i BareMetalClusterProxyArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterProxy] {
	return pulumix.Output[BareMetalClusterProxy]{
		OutputState: i.ToBareMetalClusterProxyOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterProxyArgs) ToBareMetalClusterProxyPtrOutput() BareMetalClusterProxyPtrOutput {
	return i.ToBareMetalClusterProxyPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterProxyArgs) ToBareMetalClusterProxyPtrOutputWithContext(ctx context.Context) BareMetalClusterProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterProxyOutput).ToBareMetalClusterProxyPtrOutputWithContext(ctx)
}

// BareMetalClusterProxyPtrInput is an input type that accepts BareMetalClusterProxyArgs, BareMetalClusterProxyPtr and BareMetalClusterProxyPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterProxyPtrInput` via:
//
//	        BareMetalClusterProxyArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterProxyPtrInput interface {
	pulumi.Input

	ToBareMetalClusterProxyPtrOutput() BareMetalClusterProxyPtrOutput
	ToBareMetalClusterProxyPtrOutputWithContext(context.Context) BareMetalClusterProxyPtrOutput
}

type bareMetalClusterProxyPtrType BareMetalClusterProxyArgs

func BareMetalClusterProxyPtr(v *BareMetalClusterProxyArgs) BareMetalClusterProxyPtrInput {
	return (*bareMetalClusterProxyPtrType)(v)
}

func (*bareMetalClusterProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterProxy)(nil)).Elem()
}

func (i *bareMetalClusterProxyPtrType) ToBareMetalClusterProxyPtrOutput() BareMetalClusterProxyPtrOutput {
	return i.ToBareMetalClusterProxyPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterProxyPtrType) ToBareMetalClusterProxyPtrOutputWithContext(ctx context.Context) BareMetalClusterProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterProxyPtrOutput)
}

func (i *bareMetalClusterProxyPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterProxy] {
	return pulumix.Output[*BareMetalClusterProxy]{
		OutputState: i.ToBareMetalClusterProxyPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterProxyOutput struct{ *pulumi.OutputState }

func (BareMetalClusterProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterProxy)(nil)).Elem()
}

func (o BareMetalClusterProxyOutput) ToBareMetalClusterProxyOutput() BareMetalClusterProxyOutput {
	return o
}

func (o BareMetalClusterProxyOutput) ToBareMetalClusterProxyOutputWithContext(ctx context.Context) BareMetalClusterProxyOutput {
	return o
}

func (o BareMetalClusterProxyOutput) ToBareMetalClusterProxyPtrOutput() BareMetalClusterProxyPtrOutput {
	return o.ToBareMetalClusterProxyPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterProxyOutput) ToBareMetalClusterProxyPtrOutputWithContext(ctx context.Context) BareMetalClusterProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterProxy) *BareMetalClusterProxy {
		return &v
	}).(BareMetalClusterProxyPtrOutput)
}

func (o BareMetalClusterProxyOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterProxy] {
	return pulumix.Output[BareMetalClusterProxy]{
		OutputState: o.OutputState,
	}
}

// A list of IPs, hostnames, and domains that should skip the proxy.
// Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
func (o BareMetalClusterProxyOutput) NoProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BareMetalClusterProxy) []string { return v.NoProxies }).(pulumi.StringArrayOutput)
}

// Specifies the address of your proxy server.
// Examples: http://domain
// WARNING: Do not provide credentials in the format
// http://(username:password@)domain these will be rejected by the server.
func (o BareMetalClusterProxyOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterProxy) string { return v.Uri }).(pulumi.StringOutput)
}

type BareMetalClusterProxyPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterProxy)(nil)).Elem()
}

func (o BareMetalClusterProxyPtrOutput) ToBareMetalClusterProxyPtrOutput() BareMetalClusterProxyPtrOutput {
	return o
}

func (o BareMetalClusterProxyPtrOutput) ToBareMetalClusterProxyPtrOutputWithContext(ctx context.Context) BareMetalClusterProxyPtrOutput {
	return o
}

func (o BareMetalClusterProxyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterProxy] {
	return pulumix.Output[*BareMetalClusterProxy]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterProxyPtrOutput) Elem() BareMetalClusterProxyOutput {
	return o.ApplyT(func(v *BareMetalClusterProxy) BareMetalClusterProxy {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterProxy
		return ret
	}).(BareMetalClusterProxyOutput)
}

// A list of IPs, hostnames, and domains that should skip the proxy.
// Examples: ["127.0.0.1", "example.com", ".corp", "localhost"].
func (o BareMetalClusterProxyPtrOutput) NoProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterProxy) []string {
		if v == nil {
			return nil
		}
		return v.NoProxies
	}).(pulumi.StringArrayOutput)
}

// Specifies the address of your proxy server.
// Examples: http://domain
// WARNING: Do not provide credentials in the format
// http://(username:password@)domain these will be rejected by the server.
func (o BareMetalClusterProxyPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterSecurityConfig struct {
	// Configures user access to the Bare Metal User cluster.
	// Structure is documented below.
	Authorization *BareMetalClusterSecurityConfigAuthorization `pulumi:"authorization"`
}

// BareMetalClusterSecurityConfigInput is an input type that accepts BareMetalClusterSecurityConfigArgs and BareMetalClusterSecurityConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterSecurityConfigInput` via:
//
//	BareMetalClusterSecurityConfigArgs{...}
type BareMetalClusterSecurityConfigInput interface {
	pulumi.Input

	ToBareMetalClusterSecurityConfigOutput() BareMetalClusterSecurityConfigOutput
	ToBareMetalClusterSecurityConfigOutputWithContext(context.Context) BareMetalClusterSecurityConfigOutput
}

type BareMetalClusterSecurityConfigArgs struct {
	// Configures user access to the Bare Metal User cluster.
	// Structure is documented below.
	Authorization BareMetalClusterSecurityConfigAuthorizationPtrInput `pulumi:"authorization"`
}

func (BareMetalClusterSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterSecurityConfig)(nil)).Elem()
}

func (i BareMetalClusterSecurityConfigArgs) ToBareMetalClusterSecurityConfigOutput() BareMetalClusterSecurityConfigOutput {
	return i.ToBareMetalClusterSecurityConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterSecurityConfigArgs) ToBareMetalClusterSecurityConfigOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterSecurityConfigOutput)
}

func (i BareMetalClusterSecurityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterSecurityConfig] {
	return pulumix.Output[BareMetalClusterSecurityConfig]{
		OutputState: i.ToBareMetalClusterSecurityConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterSecurityConfigArgs) ToBareMetalClusterSecurityConfigPtrOutput() BareMetalClusterSecurityConfigPtrOutput {
	return i.ToBareMetalClusterSecurityConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterSecurityConfigArgs) ToBareMetalClusterSecurityConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterSecurityConfigOutput).ToBareMetalClusterSecurityConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterSecurityConfigPtrInput is an input type that accepts BareMetalClusterSecurityConfigArgs, BareMetalClusterSecurityConfigPtr and BareMetalClusterSecurityConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterSecurityConfigPtrInput` via:
//
//	        BareMetalClusterSecurityConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterSecurityConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterSecurityConfigPtrOutput() BareMetalClusterSecurityConfigPtrOutput
	ToBareMetalClusterSecurityConfigPtrOutputWithContext(context.Context) BareMetalClusterSecurityConfigPtrOutput
}

type bareMetalClusterSecurityConfigPtrType BareMetalClusterSecurityConfigArgs

func BareMetalClusterSecurityConfigPtr(v *BareMetalClusterSecurityConfigArgs) BareMetalClusterSecurityConfigPtrInput {
	return (*bareMetalClusterSecurityConfigPtrType)(v)
}

func (*bareMetalClusterSecurityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterSecurityConfig)(nil)).Elem()
}

func (i *bareMetalClusterSecurityConfigPtrType) ToBareMetalClusterSecurityConfigPtrOutput() BareMetalClusterSecurityConfigPtrOutput {
	return i.ToBareMetalClusterSecurityConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterSecurityConfigPtrType) ToBareMetalClusterSecurityConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterSecurityConfigPtrOutput)
}

func (i *bareMetalClusterSecurityConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterSecurityConfig] {
	return pulumix.Output[*BareMetalClusterSecurityConfig]{
		OutputState: i.ToBareMetalClusterSecurityConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterSecurityConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterSecurityConfig)(nil)).Elem()
}

func (o BareMetalClusterSecurityConfigOutput) ToBareMetalClusterSecurityConfigOutput() BareMetalClusterSecurityConfigOutput {
	return o
}

func (o BareMetalClusterSecurityConfigOutput) ToBareMetalClusterSecurityConfigOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigOutput {
	return o
}

func (o BareMetalClusterSecurityConfigOutput) ToBareMetalClusterSecurityConfigPtrOutput() BareMetalClusterSecurityConfigPtrOutput {
	return o.ToBareMetalClusterSecurityConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterSecurityConfigOutput) ToBareMetalClusterSecurityConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterSecurityConfig) *BareMetalClusterSecurityConfig {
		return &v
	}).(BareMetalClusterSecurityConfigPtrOutput)
}

func (o BareMetalClusterSecurityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterSecurityConfig] {
	return pulumix.Output[BareMetalClusterSecurityConfig]{
		OutputState: o.OutputState,
	}
}

// Configures user access to the Bare Metal User cluster.
// Structure is documented below.
func (o BareMetalClusterSecurityConfigOutput) Authorization() BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return o.ApplyT(func(v BareMetalClusterSecurityConfig) *BareMetalClusterSecurityConfigAuthorization {
		return v.Authorization
	}).(BareMetalClusterSecurityConfigAuthorizationPtrOutput)
}

type BareMetalClusterSecurityConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterSecurityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterSecurityConfig)(nil)).Elem()
}

func (o BareMetalClusterSecurityConfigPtrOutput) ToBareMetalClusterSecurityConfigPtrOutput() BareMetalClusterSecurityConfigPtrOutput {
	return o
}

func (o BareMetalClusterSecurityConfigPtrOutput) ToBareMetalClusterSecurityConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigPtrOutput {
	return o
}

func (o BareMetalClusterSecurityConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterSecurityConfig] {
	return pulumix.Output[*BareMetalClusterSecurityConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterSecurityConfigPtrOutput) Elem() BareMetalClusterSecurityConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterSecurityConfig) BareMetalClusterSecurityConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterSecurityConfig
		return ret
	}).(BareMetalClusterSecurityConfigOutput)
}

// Configures user access to the Bare Metal User cluster.
// Structure is documented below.
func (o BareMetalClusterSecurityConfigPtrOutput) Authorization() BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterSecurityConfig) *BareMetalClusterSecurityConfigAuthorization {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(BareMetalClusterSecurityConfigAuthorizationPtrOutput)
}

type BareMetalClusterSecurityConfigAuthorization struct {
	// Users that will be granted the cluster-admin role on the cluster, providing full access to the cluster.
	// Structure is documented below.
	AdminUsers []BareMetalClusterSecurityConfigAuthorizationAdminUser `pulumi:"adminUsers"`
}

// BareMetalClusterSecurityConfigAuthorizationInput is an input type that accepts BareMetalClusterSecurityConfigAuthorizationArgs and BareMetalClusterSecurityConfigAuthorizationOutput values.
// You can construct a concrete instance of `BareMetalClusterSecurityConfigAuthorizationInput` via:
//
//	BareMetalClusterSecurityConfigAuthorizationArgs{...}
type BareMetalClusterSecurityConfigAuthorizationInput interface {
	pulumi.Input

	ToBareMetalClusterSecurityConfigAuthorizationOutput() BareMetalClusterSecurityConfigAuthorizationOutput
	ToBareMetalClusterSecurityConfigAuthorizationOutputWithContext(context.Context) BareMetalClusterSecurityConfigAuthorizationOutput
}

type BareMetalClusterSecurityConfigAuthorizationArgs struct {
	// Users that will be granted the cluster-admin role on the cluster, providing full access to the cluster.
	// Structure is documented below.
	AdminUsers BareMetalClusterSecurityConfigAuthorizationAdminUserArrayInput `pulumi:"adminUsers"`
}

func (BareMetalClusterSecurityConfigAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterSecurityConfigAuthorization)(nil)).Elem()
}

func (i BareMetalClusterSecurityConfigAuthorizationArgs) ToBareMetalClusterSecurityConfigAuthorizationOutput() BareMetalClusterSecurityConfigAuthorizationOutput {
	return i.ToBareMetalClusterSecurityConfigAuthorizationOutputWithContext(context.Background())
}

func (i BareMetalClusterSecurityConfigAuthorizationArgs) ToBareMetalClusterSecurityConfigAuthorizationOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterSecurityConfigAuthorizationOutput)
}

func (i BareMetalClusterSecurityConfigAuthorizationArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterSecurityConfigAuthorization] {
	return pulumix.Output[BareMetalClusterSecurityConfigAuthorization]{
		OutputState: i.ToBareMetalClusterSecurityConfigAuthorizationOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterSecurityConfigAuthorizationArgs) ToBareMetalClusterSecurityConfigAuthorizationPtrOutput() BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return i.ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterSecurityConfigAuthorizationArgs) ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterSecurityConfigAuthorizationOutput).ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx)
}

// BareMetalClusterSecurityConfigAuthorizationPtrInput is an input type that accepts BareMetalClusterSecurityConfigAuthorizationArgs, BareMetalClusterSecurityConfigAuthorizationPtr and BareMetalClusterSecurityConfigAuthorizationPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterSecurityConfigAuthorizationPtrInput` via:
//
//	        BareMetalClusterSecurityConfigAuthorizationArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterSecurityConfigAuthorizationPtrInput interface {
	pulumi.Input

	ToBareMetalClusterSecurityConfigAuthorizationPtrOutput() BareMetalClusterSecurityConfigAuthorizationPtrOutput
	ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(context.Context) BareMetalClusterSecurityConfigAuthorizationPtrOutput
}

type bareMetalClusterSecurityConfigAuthorizationPtrType BareMetalClusterSecurityConfigAuthorizationArgs

func BareMetalClusterSecurityConfigAuthorizationPtr(v *BareMetalClusterSecurityConfigAuthorizationArgs) BareMetalClusterSecurityConfigAuthorizationPtrInput {
	return (*bareMetalClusterSecurityConfigAuthorizationPtrType)(v)
}

func (*bareMetalClusterSecurityConfigAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterSecurityConfigAuthorization)(nil)).Elem()
}

func (i *bareMetalClusterSecurityConfigAuthorizationPtrType) ToBareMetalClusterSecurityConfigAuthorizationPtrOutput() BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return i.ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterSecurityConfigAuthorizationPtrType) ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterSecurityConfigAuthorizationPtrOutput)
}

func (i *bareMetalClusterSecurityConfigAuthorizationPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterSecurityConfigAuthorization] {
	return pulumix.Output[*BareMetalClusterSecurityConfigAuthorization]{
		OutputState: i.ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterSecurityConfigAuthorizationOutput struct{ *pulumi.OutputState }

func (BareMetalClusterSecurityConfigAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterSecurityConfigAuthorization)(nil)).Elem()
}

func (o BareMetalClusterSecurityConfigAuthorizationOutput) ToBareMetalClusterSecurityConfigAuthorizationOutput() BareMetalClusterSecurityConfigAuthorizationOutput {
	return o
}

func (o BareMetalClusterSecurityConfigAuthorizationOutput) ToBareMetalClusterSecurityConfigAuthorizationOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationOutput {
	return o
}

func (o BareMetalClusterSecurityConfigAuthorizationOutput) ToBareMetalClusterSecurityConfigAuthorizationPtrOutput() BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return o.ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterSecurityConfigAuthorizationOutput) ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterSecurityConfigAuthorization) *BareMetalClusterSecurityConfigAuthorization {
		return &v
	}).(BareMetalClusterSecurityConfigAuthorizationPtrOutput)
}

func (o BareMetalClusterSecurityConfigAuthorizationOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterSecurityConfigAuthorization] {
	return pulumix.Output[BareMetalClusterSecurityConfigAuthorization]{
		OutputState: o.OutputState,
	}
}

// Users that will be granted the cluster-admin role on the cluster, providing full access to the cluster.
// Structure is documented below.
func (o BareMetalClusterSecurityConfigAuthorizationOutput) AdminUsers() BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v BareMetalClusterSecurityConfigAuthorization) []BareMetalClusterSecurityConfigAuthorizationAdminUser {
		return v.AdminUsers
	}).(BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput)
}

type BareMetalClusterSecurityConfigAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterSecurityConfigAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterSecurityConfigAuthorization)(nil)).Elem()
}

func (o BareMetalClusterSecurityConfigAuthorizationPtrOutput) ToBareMetalClusterSecurityConfigAuthorizationPtrOutput() BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return o
}

func (o BareMetalClusterSecurityConfigAuthorizationPtrOutput) ToBareMetalClusterSecurityConfigAuthorizationPtrOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationPtrOutput {
	return o
}

func (o BareMetalClusterSecurityConfigAuthorizationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterSecurityConfigAuthorization] {
	return pulumix.Output[*BareMetalClusterSecurityConfigAuthorization]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterSecurityConfigAuthorizationPtrOutput) Elem() BareMetalClusterSecurityConfigAuthorizationOutput {
	return o.ApplyT(func(v *BareMetalClusterSecurityConfigAuthorization) BareMetalClusterSecurityConfigAuthorization {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterSecurityConfigAuthorization
		return ret
	}).(BareMetalClusterSecurityConfigAuthorizationOutput)
}

// Users that will be granted the cluster-admin role on the cluster, providing full access to the cluster.
// Structure is documented below.
func (o BareMetalClusterSecurityConfigAuthorizationPtrOutput) AdminUsers() BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v *BareMetalClusterSecurityConfigAuthorization) []BareMetalClusterSecurityConfigAuthorizationAdminUser {
		if v == nil {
			return nil
		}
		return v.AdminUsers
	}).(BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput)
}

type BareMetalClusterSecurityConfigAuthorizationAdminUser struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username string `pulumi:"username"`
}

// BareMetalClusterSecurityConfigAuthorizationAdminUserInput is an input type that accepts BareMetalClusterSecurityConfigAuthorizationAdminUserArgs and BareMetalClusterSecurityConfigAuthorizationAdminUserOutput values.
// You can construct a concrete instance of `BareMetalClusterSecurityConfigAuthorizationAdminUserInput` via:
//
//	BareMetalClusterSecurityConfigAuthorizationAdminUserArgs{...}
type BareMetalClusterSecurityConfigAuthorizationAdminUserInput interface {
	pulumi.Input

	ToBareMetalClusterSecurityConfigAuthorizationAdminUserOutput() BareMetalClusterSecurityConfigAuthorizationAdminUserOutput
	ToBareMetalClusterSecurityConfigAuthorizationAdminUserOutputWithContext(context.Context) BareMetalClusterSecurityConfigAuthorizationAdminUserOutput
}

type BareMetalClusterSecurityConfigAuthorizationAdminUserArgs struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username pulumi.StringInput `pulumi:"username"`
}

func (BareMetalClusterSecurityConfigAuthorizationAdminUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterSecurityConfigAuthorizationAdminUser)(nil)).Elem()
}

func (i BareMetalClusterSecurityConfigAuthorizationAdminUserArgs) ToBareMetalClusterSecurityConfigAuthorizationAdminUserOutput() BareMetalClusterSecurityConfigAuthorizationAdminUserOutput {
	return i.ToBareMetalClusterSecurityConfigAuthorizationAdminUserOutputWithContext(context.Background())
}

func (i BareMetalClusterSecurityConfigAuthorizationAdminUserArgs) ToBareMetalClusterSecurityConfigAuthorizationAdminUserOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationAdminUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterSecurityConfigAuthorizationAdminUserOutput)
}

func (i BareMetalClusterSecurityConfigAuthorizationAdminUserArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterSecurityConfigAuthorizationAdminUser] {
	return pulumix.Output[BareMetalClusterSecurityConfigAuthorizationAdminUser]{
		OutputState: i.ToBareMetalClusterSecurityConfigAuthorizationAdminUserOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterSecurityConfigAuthorizationAdminUserArrayInput is an input type that accepts BareMetalClusterSecurityConfigAuthorizationAdminUserArray and BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterSecurityConfigAuthorizationAdminUserArrayInput` via:
//
//	BareMetalClusterSecurityConfigAuthorizationAdminUserArray{ BareMetalClusterSecurityConfigAuthorizationAdminUserArgs{...} }
type BareMetalClusterSecurityConfigAuthorizationAdminUserArrayInput interface {
	pulumi.Input

	ToBareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput() BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput
	ToBareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(context.Context) BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput
}

type BareMetalClusterSecurityConfigAuthorizationAdminUserArray []BareMetalClusterSecurityConfigAuthorizationAdminUserInput

func (BareMetalClusterSecurityConfigAuthorizationAdminUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterSecurityConfigAuthorizationAdminUser)(nil)).Elem()
}

func (i BareMetalClusterSecurityConfigAuthorizationAdminUserArray) ToBareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput() BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return i.ToBareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterSecurityConfigAuthorizationAdminUserArray) ToBareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput)
}

func (i BareMetalClusterSecurityConfigAuthorizationAdminUserArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterSecurityConfigAuthorizationAdminUser] {
	return pulumix.Output[[]BareMetalClusterSecurityConfigAuthorizationAdminUser]{
		OutputState: i.ToBareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterSecurityConfigAuthorizationAdminUserOutput struct{ *pulumi.OutputState }

func (BareMetalClusterSecurityConfigAuthorizationAdminUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterSecurityConfigAuthorizationAdminUser)(nil)).Elem()
}

func (o BareMetalClusterSecurityConfigAuthorizationAdminUserOutput) ToBareMetalClusterSecurityConfigAuthorizationAdminUserOutput() BareMetalClusterSecurityConfigAuthorizationAdminUserOutput {
	return o
}

func (o BareMetalClusterSecurityConfigAuthorizationAdminUserOutput) ToBareMetalClusterSecurityConfigAuthorizationAdminUserOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationAdminUserOutput {
	return o
}

func (o BareMetalClusterSecurityConfigAuthorizationAdminUserOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterSecurityConfigAuthorizationAdminUser] {
	return pulumix.Output[BareMetalClusterSecurityConfigAuthorizationAdminUser]{
		OutputState: o.OutputState,
	}
}

// The name of the user, e.g. `my-gcp-id@gmail.com`.
func (o BareMetalClusterSecurityConfigAuthorizationAdminUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterSecurityConfigAuthorizationAdminUser) string { return v.Username }).(pulumi.StringOutput)
}

type BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterSecurityConfigAuthorizationAdminUser)(nil)).Elem()
}

func (o BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput) ToBareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput() BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return o
}

func (o BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput) ToBareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput {
	return o
}

func (o BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterSecurityConfigAuthorizationAdminUser] {
	return pulumix.Output[[]BareMetalClusterSecurityConfigAuthorizationAdminUser]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput) Index(i pulumi.IntInput) BareMetalClusterSecurityConfigAuthorizationAdminUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterSecurityConfigAuthorizationAdminUser {
		return vs[0].([]BareMetalClusterSecurityConfigAuthorizationAdminUser)[vs[1].(int)]
	}).(BareMetalClusterSecurityConfigAuthorizationAdminUserOutput)
}

type BareMetalClusterStatus struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
	// Structure is documented below.
	Conditions []BareMetalClusterStatusCondition `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the user cluster
	// controller. The error message can be temporary as the user cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage *string `pulumi:"errorMessage"`
}

// BareMetalClusterStatusInput is an input type that accepts BareMetalClusterStatusArgs and BareMetalClusterStatusOutput values.
// You can construct a concrete instance of `BareMetalClusterStatusInput` via:
//
//	BareMetalClusterStatusArgs{...}
type BareMetalClusterStatusInput interface {
	pulumi.Input

	ToBareMetalClusterStatusOutput() BareMetalClusterStatusOutput
	ToBareMetalClusterStatusOutputWithContext(context.Context) BareMetalClusterStatusOutput
}

type BareMetalClusterStatusArgs struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
	// Structure is documented below.
	Conditions BareMetalClusterStatusConditionArrayInput `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the user cluster
	// controller. The error message can be temporary as the user cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
}

func (BareMetalClusterStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStatus)(nil)).Elem()
}

func (i BareMetalClusterStatusArgs) ToBareMetalClusterStatusOutput() BareMetalClusterStatusOutput {
	return i.ToBareMetalClusterStatusOutputWithContext(context.Background())
}

func (i BareMetalClusterStatusArgs) ToBareMetalClusterStatusOutputWithContext(ctx context.Context) BareMetalClusterStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStatusOutput)
}

func (i BareMetalClusterStatusArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStatus] {
	return pulumix.Output[BareMetalClusterStatus]{
		OutputState: i.ToBareMetalClusterStatusOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterStatusArrayInput is an input type that accepts BareMetalClusterStatusArray and BareMetalClusterStatusArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterStatusArrayInput` via:
//
//	BareMetalClusterStatusArray{ BareMetalClusterStatusArgs{...} }
type BareMetalClusterStatusArrayInput interface {
	pulumi.Input

	ToBareMetalClusterStatusArrayOutput() BareMetalClusterStatusArrayOutput
	ToBareMetalClusterStatusArrayOutputWithContext(context.Context) BareMetalClusterStatusArrayOutput
}

type BareMetalClusterStatusArray []BareMetalClusterStatusInput

func (BareMetalClusterStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterStatus)(nil)).Elem()
}

func (i BareMetalClusterStatusArray) ToBareMetalClusterStatusArrayOutput() BareMetalClusterStatusArrayOutput {
	return i.ToBareMetalClusterStatusArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterStatusArray) ToBareMetalClusterStatusArrayOutputWithContext(ctx context.Context) BareMetalClusterStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStatusArrayOutput)
}

func (i BareMetalClusterStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterStatus] {
	return pulumix.Output[[]BareMetalClusterStatus]{
		OutputState: i.ToBareMetalClusterStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterStatusOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStatus)(nil)).Elem()
}

func (o BareMetalClusterStatusOutput) ToBareMetalClusterStatusOutput() BareMetalClusterStatusOutput {
	return o
}

func (o BareMetalClusterStatusOutput) ToBareMetalClusterStatusOutputWithContext(ctx context.Context) BareMetalClusterStatusOutput {
	return o
}

func (o BareMetalClusterStatusOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStatus] {
	return pulumix.Output[BareMetalClusterStatus]{
		OutputState: o.OutputState,
	}
}

// (Output)
// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
// Structure is documented below.
func (o BareMetalClusterStatusOutput) Conditions() BareMetalClusterStatusConditionArrayOutput {
	return o.ApplyT(func(v BareMetalClusterStatus) []BareMetalClusterStatusCondition { return v.Conditions }).(BareMetalClusterStatusConditionArrayOutput)
}

// (Output)
// Human-friendly representation of the error message from the user cluster
// controller. The error message can be temporary as the user cluster
// controller creates a cluster or node pool. If the error message persists
// for a longer period of time, it can be used to surface error message to
// indicate real problems requiring user intervention.
func (o BareMetalClusterStatusOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterStatus) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

type BareMetalClusterStatusArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterStatus)(nil)).Elem()
}

func (o BareMetalClusterStatusArrayOutput) ToBareMetalClusterStatusArrayOutput() BareMetalClusterStatusArrayOutput {
	return o
}

func (o BareMetalClusterStatusArrayOutput) ToBareMetalClusterStatusArrayOutputWithContext(ctx context.Context) BareMetalClusterStatusArrayOutput {
	return o
}

func (o BareMetalClusterStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterStatus] {
	return pulumix.Output[[]BareMetalClusterStatus]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterStatusArrayOutput) Index(i pulumi.IntInput) BareMetalClusterStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterStatus {
		return vs[0].([]BareMetalClusterStatus)[vs[1].(int)]
	}).(BareMetalClusterStatusOutput)
}

type BareMetalClusterStatusCondition struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`
	// (Output)
	// A human-readable message of the check failure.
	Reason *string `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State *string `pulumi:"state"`
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type *string `pulumi:"type"`
}

// BareMetalClusterStatusConditionInput is an input type that accepts BareMetalClusterStatusConditionArgs and BareMetalClusterStatusConditionOutput values.
// You can construct a concrete instance of `BareMetalClusterStatusConditionInput` via:
//
//	BareMetalClusterStatusConditionArgs{...}
type BareMetalClusterStatusConditionInput interface {
	pulumi.Input

	ToBareMetalClusterStatusConditionOutput() BareMetalClusterStatusConditionOutput
	ToBareMetalClusterStatusConditionOutputWithContext(context.Context) BareMetalClusterStatusConditionOutput
}

type BareMetalClusterStatusConditionArgs struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (Output)
	// A human-readable message of the check failure.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BareMetalClusterStatusConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStatusCondition)(nil)).Elem()
}

func (i BareMetalClusterStatusConditionArgs) ToBareMetalClusterStatusConditionOutput() BareMetalClusterStatusConditionOutput {
	return i.ToBareMetalClusterStatusConditionOutputWithContext(context.Background())
}

func (i BareMetalClusterStatusConditionArgs) ToBareMetalClusterStatusConditionOutputWithContext(ctx context.Context) BareMetalClusterStatusConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStatusConditionOutput)
}

func (i BareMetalClusterStatusConditionArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStatusCondition] {
	return pulumix.Output[BareMetalClusterStatusCondition]{
		OutputState: i.ToBareMetalClusterStatusConditionOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterStatusConditionArrayInput is an input type that accepts BareMetalClusterStatusConditionArray and BareMetalClusterStatusConditionArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterStatusConditionArrayInput` via:
//
//	BareMetalClusterStatusConditionArray{ BareMetalClusterStatusConditionArgs{...} }
type BareMetalClusterStatusConditionArrayInput interface {
	pulumi.Input

	ToBareMetalClusterStatusConditionArrayOutput() BareMetalClusterStatusConditionArrayOutput
	ToBareMetalClusterStatusConditionArrayOutputWithContext(context.Context) BareMetalClusterStatusConditionArrayOutput
}

type BareMetalClusterStatusConditionArray []BareMetalClusterStatusConditionInput

func (BareMetalClusterStatusConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterStatusCondition)(nil)).Elem()
}

func (i BareMetalClusterStatusConditionArray) ToBareMetalClusterStatusConditionArrayOutput() BareMetalClusterStatusConditionArrayOutput {
	return i.ToBareMetalClusterStatusConditionArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterStatusConditionArray) ToBareMetalClusterStatusConditionArrayOutputWithContext(ctx context.Context) BareMetalClusterStatusConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStatusConditionArrayOutput)
}

func (i BareMetalClusterStatusConditionArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterStatusCondition] {
	return pulumix.Output[[]BareMetalClusterStatusCondition]{
		OutputState: i.ToBareMetalClusterStatusConditionArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterStatusConditionOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStatusConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStatusCondition)(nil)).Elem()
}

func (o BareMetalClusterStatusConditionOutput) ToBareMetalClusterStatusConditionOutput() BareMetalClusterStatusConditionOutput {
	return o
}

func (o BareMetalClusterStatusConditionOutput) ToBareMetalClusterStatusConditionOutputWithContext(ctx context.Context) BareMetalClusterStatusConditionOutput {
	return o
}

func (o BareMetalClusterStatusConditionOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStatusCondition] {
	return pulumix.Output[BareMetalClusterStatusCondition]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Last time the condition transit from one status to another.
func (o BareMetalClusterStatusConditionOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterStatusCondition) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about last transition.
func (o BareMetalClusterStatusConditionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterStatusCondition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// (Output)
// A human-readable message of the check failure.
func (o BareMetalClusterStatusConditionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterStatusCondition) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// (Output)
// The lifecycle state of the condition.
func (o BareMetalClusterStatusConditionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterStatusCondition) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Type of the condition.
// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
func (o BareMetalClusterStatusConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterStatusCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BareMetalClusterStatusConditionArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStatusConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterStatusCondition)(nil)).Elem()
}

func (o BareMetalClusterStatusConditionArrayOutput) ToBareMetalClusterStatusConditionArrayOutput() BareMetalClusterStatusConditionArrayOutput {
	return o
}

func (o BareMetalClusterStatusConditionArrayOutput) ToBareMetalClusterStatusConditionArrayOutputWithContext(ctx context.Context) BareMetalClusterStatusConditionArrayOutput {
	return o
}

func (o BareMetalClusterStatusConditionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterStatusCondition] {
	return pulumix.Output[[]BareMetalClusterStatusCondition]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterStatusConditionArrayOutput) Index(i pulumi.IntInput) BareMetalClusterStatusConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterStatusCondition {
		return vs[0].([]BareMetalClusterStatusCondition)[vs[1].(int)]
	}).(BareMetalClusterStatusConditionOutput)
}

type BareMetalClusterStorage struct {
	// Specifies the config for local PersistentVolumes backed
	// by mounted node disks. These disks need to be formatted and mounted by the
	// user, which can be done before or after cluster creation.
	// Structure is documented below.
	LvpNodeMountsConfig BareMetalClusterStorageLvpNodeMountsConfig `pulumi:"lvpNodeMountsConfig"`
	// Specifies the config for local PersistentVolumes backed by
	// subdirectories in a shared filesystem. These subdirectores are
	// automatically created during cluster creation.
	// Structure is documented below.
	LvpShareConfig BareMetalClusterStorageLvpShareConfig `pulumi:"lvpShareConfig"`
}

// BareMetalClusterStorageInput is an input type that accepts BareMetalClusterStorageArgs and BareMetalClusterStorageOutput values.
// You can construct a concrete instance of `BareMetalClusterStorageInput` via:
//
//	BareMetalClusterStorageArgs{...}
type BareMetalClusterStorageInput interface {
	pulumi.Input

	ToBareMetalClusterStorageOutput() BareMetalClusterStorageOutput
	ToBareMetalClusterStorageOutputWithContext(context.Context) BareMetalClusterStorageOutput
}

type BareMetalClusterStorageArgs struct {
	// Specifies the config for local PersistentVolumes backed
	// by mounted node disks. These disks need to be formatted and mounted by the
	// user, which can be done before or after cluster creation.
	// Structure is documented below.
	LvpNodeMountsConfig BareMetalClusterStorageLvpNodeMountsConfigInput `pulumi:"lvpNodeMountsConfig"`
	// Specifies the config for local PersistentVolumes backed by
	// subdirectories in a shared filesystem. These subdirectores are
	// automatically created during cluster creation.
	// Structure is documented below.
	LvpShareConfig BareMetalClusterStorageLvpShareConfigInput `pulumi:"lvpShareConfig"`
}

func (BareMetalClusterStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStorage)(nil)).Elem()
}

func (i BareMetalClusterStorageArgs) ToBareMetalClusterStorageOutput() BareMetalClusterStorageOutput {
	return i.ToBareMetalClusterStorageOutputWithContext(context.Background())
}

func (i BareMetalClusterStorageArgs) ToBareMetalClusterStorageOutputWithContext(ctx context.Context) BareMetalClusterStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageOutput)
}

func (i BareMetalClusterStorageArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStorage] {
	return pulumix.Output[BareMetalClusterStorage]{
		OutputState: i.ToBareMetalClusterStorageOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterStorageArgs) ToBareMetalClusterStoragePtrOutput() BareMetalClusterStoragePtrOutput {
	return i.ToBareMetalClusterStoragePtrOutputWithContext(context.Background())
}

func (i BareMetalClusterStorageArgs) ToBareMetalClusterStoragePtrOutputWithContext(ctx context.Context) BareMetalClusterStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageOutput).ToBareMetalClusterStoragePtrOutputWithContext(ctx)
}

// BareMetalClusterStoragePtrInput is an input type that accepts BareMetalClusterStorageArgs, BareMetalClusterStoragePtr and BareMetalClusterStoragePtrOutput values.
// You can construct a concrete instance of `BareMetalClusterStoragePtrInput` via:
//
//	        BareMetalClusterStorageArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterStoragePtrInput interface {
	pulumi.Input

	ToBareMetalClusterStoragePtrOutput() BareMetalClusterStoragePtrOutput
	ToBareMetalClusterStoragePtrOutputWithContext(context.Context) BareMetalClusterStoragePtrOutput
}

type bareMetalClusterStoragePtrType BareMetalClusterStorageArgs

func BareMetalClusterStoragePtr(v *BareMetalClusterStorageArgs) BareMetalClusterStoragePtrInput {
	return (*bareMetalClusterStoragePtrType)(v)
}

func (*bareMetalClusterStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterStorage)(nil)).Elem()
}

func (i *bareMetalClusterStoragePtrType) ToBareMetalClusterStoragePtrOutput() BareMetalClusterStoragePtrOutput {
	return i.ToBareMetalClusterStoragePtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterStoragePtrType) ToBareMetalClusterStoragePtrOutputWithContext(ctx context.Context) BareMetalClusterStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStoragePtrOutput)
}

func (i *bareMetalClusterStoragePtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterStorage] {
	return pulumix.Output[*BareMetalClusterStorage]{
		OutputState: i.ToBareMetalClusterStoragePtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterStorageOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStorage)(nil)).Elem()
}

func (o BareMetalClusterStorageOutput) ToBareMetalClusterStorageOutput() BareMetalClusterStorageOutput {
	return o
}

func (o BareMetalClusterStorageOutput) ToBareMetalClusterStorageOutputWithContext(ctx context.Context) BareMetalClusterStorageOutput {
	return o
}

func (o BareMetalClusterStorageOutput) ToBareMetalClusterStoragePtrOutput() BareMetalClusterStoragePtrOutput {
	return o.ToBareMetalClusterStoragePtrOutputWithContext(context.Background())
}

func (o BareMetalClusterStorageOutput) ToBareMetalClusterStoragePtrOutputWithContext(ctx context.Context) BareMetalClusterStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterStorage) *BareMetalClusterStorage {
		return &v
	}).(BareMetalClusterStoragePtrOutput)
}

func (o BareMetalClusterStorageOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStorage] {
	return pulumix.Output[BareMetalClusterStorage]{
		OutputState: o.OutputState,
	}
}

// Specifies the config for local PersistentVolumes backed
// by mounted node disks. These disks need to be formatted and mounted by the
// user, which can be done before or after cluster creation.
// Structure is documented below.
func (o BareMetalClusterStorageOutput) LvpNodeMountsConfig() BareMetalClusterStorageLvpNodeMountsConfigOutput {
	return o.ApplyT(func(v BareMetalClusterStorage) BareMetalClusterStorageLvpNodeMountsConfig {
		return v.LvpNodeMountsConfig
	}).(BareMetalClusterStorageLvpNodeMountsConfigOutput)
}

// Specifies the config for local PersistentVolumes backed by
// subdirectories in a shared filesystem. These subdirectores are
// automatically created during cluster creation.
// Structure is documented below.
func (o BareMetalClusterStorageOutput) LvpShareConfig() BareMetalClusterStorageLvpShareConfigOutput {
	return o.ApplyT(func(v BareMetalClusterStorage) BareMetalClusterStorageLvpShareConfig { return v.LvpShareConfig }).(BareMetalClusterStorageLvpShareConfigOutput)
}

type BareMetalClusterStoragePtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterStorage)(nil)).Elem()
}

func (o BareMetalClusterStoragePtrOutput) ToBareMetalClusterStoragePtrOutput() BareMetalClusterStoragePtrOutput {
	return o
}

func (o BareMetalClusterStoragePtrOutput) ToBareMetalClusterStoragePtrOutputWithContext(ctx context.Context) BareMetalClusterStoragePtrOutput {
	return o
}

func (o BareMetalClusterStoragePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterStorage] {
	return pulumix.Output[*BareMetalClusterStorage]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterStoragePtrOutput) Elem() BareMetalClusterStorageOutput {
	return o.ApplyT(func(v *BareMetalClusterStorage) BareMetalClusterStorage {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterStorage
		return ret
	}).(BareMetalClusterStorageOutput)
}

// Specifies the config for local PersistentVolumes backed
// by mounted node disks. These disks need to be formatted and mounted by the
// user, which can be done before or after cluster creation.
// Structure is documented below.
func (o BareMetalClusterStoragePtrOutput) LvpNodeMountsConfig() BareMetalClusterStorageLvpNodeMountsConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterStorage) *BareMetalClusterStorageLvpNodeMountsConfig {
		if v == nil {
			return nil
		}
		return &v.LvpNodeMountsConfig
	}).(BareMetalClusterStorageLvpNodeMountsConfigPtrOutput)
}

// Specifies the config for local PersistentVolumes backed by
// subdirectories in a shared filesystem. These subdirectores are
// automatically created during cluster creation.
// Structure is documented below.
func (o BareMetalClusterStoragePtrOutput) LvpShareConfig() BareMetalClusterStorageLvpShareConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterStorage) *BareMetalClusterStorageLvpShareConfig {
		if v == nil {
			return nil
		}
		return &v.LvpShareConfig
	}).(BareMetalClusterStorageLvpShareConfigPtrOutput)
}

type BareMetalClusterStorageLvpNodeMountsConfig struct {
	// The host machine path.
	Path string `pulumi:"path"`
	// The StorageClass name that PVs will be created with.
	//
	// ***
	StorageClass string `pulumi:"storageClass"`
}

// BareMetalClusterStorageLvpNodeMountsConfigInput is an input type that accepts BareMetalClusterStorageLvpNodeMountsConfigArgs and BareMetalClusterStorageLvpNodeMountsConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterStorageLvpNodeMountsConfigInput` via:
//
//	BareMetalClusterStorageLvpNodeMountsConfigArgs{...}
type BareMetalClusterStorageLvpNodeMountsConfigInput interface {
	pulumi.Input

	ToBareMetalClusterStorageLvpNodeMountsConfigOutput() BareMetalClusterStorageLvpNodeMountsConfigOutput
	ToBareMetalClusterStorageLvpNodeMountsConfigOutputWithContext(context.Context) BareMetalClusterStorageLvpNodeMountsConfigOutput
}

type BareMetalClusterStorageLvpNodeMountsConfigArgs struct {
	// The host machine path.
	Path pulumi.StringInput `pulumi:"path"`
	// The StorageClass name that PVs will be created with.
	//
	// ***
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BareMetalClusterStorageLvpNodeMountsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStorageLvpNodeMountsConfig)(nil)).Elem()
}

func (i BareMetalClusterStorageLvpNodeMountsConfigArgs) ToBareMetalClusterStorageLvpNodeMountsConfigOutput() BareMetalClusterStorageLvpNodeMountsConfigOutput {
	return i.ToBareMetalClusterStorageLvpNodeMountsConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterStorageLvpNodeMountsConfigArgs) ToBareMetalClusterStorageLvpNodeMountsConfigOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpNodeMountsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageLvpNodeMountsConfigOutput)
}

func (i BareMetalClusterStorageLvpNodeMountsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStorageLvpNodeMountsConfig] {
	return pulumix.Output[BareMetalClusterStorageLvpNodeMountsConfig]{
		OutputState: i.ToBareMetalClusterStorageLvpNodeMountsConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterStorageLvpNodeMountsConfigArgs) ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalClusterStorageLvpNodeMountsConfigPtrOutput {
	return i.ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterStorageLvpNodeMountsConfigArgs) ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpNodeMountsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageLvpNodeMountsConfigOutput).ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterStorageLvpNodeMountsConfigPtrInput is an input type that accepts BareMetalClusterStorageLvpNodeMountsConfigArgs, BareMetalClusterStorageLvpNodeMountsConfigPtr and BareMetalClusterStorageLvpNodeMountsConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterStorageLvpNodeMountsConfigPtrInput` via:
//
//	        BareMetalClusterStorageLvpNodeMountsConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterStorageLvpNodeMountsConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalClusterStorageLvpNodeMountsConfigPtrOutput
	ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(context.Context) BareMetalClusterStorageLvpNodeMountsConfigPtrOutput
}

type bareMetalClusterStorageLvpNodeMountsConfigPtrType BareMetalClusterStorageLvpNodeMountsConfigArgs

func BareMetalClusterStorageLvpNodeMountsConfigPtr(v *BareMetalClusterStorageLvpNodeMountsConfigArgs) BareMetalClusterStorageLvpNodeMountsConfigPtrInput {
	return (*bareMetalClusterStorageLvpNodeMountsConfigPtrType)(v)
}

func (*bareMetalClusterStorageLvpNodeMountsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterStorageLvpNodeMountsConfig)(nil)).Elem()
}

func (i *bareMetalClusterStorageLvpNodeMountsConfigPtrType) ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalClusterStorageLvpNodeMountsConfigPtrOutput {
	return i.ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterStorageLvpNodeMountsConfigPtrType) ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpNodeMountsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageLvpNodeMountsConfigPtrOutput)
}

func (i *bareMetalClusterStorageLvpNodeMountsConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterStorageLvpNodeMountsConfig] {
	return pulumix.Output[*BareMetalClusterStorageLvpNodeMountsConfig]{
		OutputState: i.ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterStorageLvpNodeMountsConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStorageLvpNodeMountsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStorageLvpNodeMountsConfig)(nil)).Elem()
}

func (o BareMetalClusterStorageLvpNodeMountsConfigOutput) ToBareMetalClusterStorageLvpNodeMountsConfigOutput() BareMetalClusterStorageLvpNodeMountsConfigOutput {
	return o
}

func (o BareMetalClusterStorageLvpNodeMountsConfigOutput) ToBareMetalClusterStorageLvpNodeMountsConfigOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpNodeMountsConfigOutput {
	return o
}

func (o BareMetalClusterStorageLvpNodeMountsConfigOutput) ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalClusterStorageLvpNodeMountsConfigPtrOutput {
	return o.ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterStorageLvpNodeMountsConfigOutput) ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpNodeMountsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterStorageLvpNodeMountsConfig) *BareMetalClusterStorageLvpNodeMountsConfig {
		return &v
	}).(BareMetalClusterStorageLvpNodeMountsConfigPtrOutput)
}

func (o BareMetalClusterStorageLvpNodeMountsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStorageLvpNodeMountsConfig] {
	return pulumix.Output[BareMetalClusterStorageLvpNodeMountsConfig]{
		OutputState: o.OutputState,
	}
}

// The host machine path.
func (o BareMetalClusterStorageLvpNodeMountsConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterStorageLvpNodeMountsConfig) string { return v.Path }).(pulumi.StringOutput)
}

// The StorageClass name that PVs will be created with.
//
// ***
func (o BareMetalClusterStorageLvpNodeMountsConfigOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterStorageLvpNodeMountsConfig) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BareMetalClusterStorageLvpNodeMountsConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStorageLvpNodeMountsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterStorageLvpNodeMountsConfig)(nil)).Elem()
}

func (o BareMetalClusterStorageLvpNodeMountsConfigPtrOutput) ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutput() BareMetalClusterStorageLvpNodeMountsConfigPtrOutput {
	return o
}

func (o BareMetalClusterStorageLvpNodeMountsConfigPtrOutput) ToBareMetalClusterStorageLvpNodeMountsConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpNodeMountsConfigPtrOutput {
	return o
}

func (o BareMetalClusterStorageLvpNodeMountsConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterStorageLvpNodeMountsConfig] {
	return pulumix.Output[*BareMetalClusterStorageLvpNodeMountsConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterStorageLvpNodeMountsConfigPtrOutput) Elem() BareMetalClusterStorageLvpNodeMountsConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterStorageLvpNodeMountsConfig) BareMetalClusterStorageLvpNodeMountsConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterStorageLvpNodeMountsConfig
		return ret
	}).(BareMetalClusterStorageLvpNodeMountsConfigOutput)
}

// The host machine path.
func (o BareMetalClusterStorageLvpNodeMountsConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterStorageLvpNodeMountsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The StorageClass name that PVs will be created with.
//
// ***
func (o BareMetalClusterStorageLvpNodeMountsConfigPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterStorageLvpNodeMountsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterStorageLvpShareConfig struct {
	// Defines the machine path and storage class for the LVP Share.
	// Structure is documented below.
	LvpConfig BareMetalClusterStorageLvpShareConfigLvpConfig `pulumi:"lvpConfig"`
	// The number of subdirectories to create under path.
	SharedPathPvCount *int `pulumi:"sharedPathPvCount"`
}

// BareMetalClusterStorageLvpShareConfigInput is an input type that accepts BareMetalClusterStorageLvpShareConfigArgs and BareMetalClusterStorageLvpShareConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterStorageLvpShareConfigInput` via:
//
//	BareMetalClusterStorageLvpShareConfigArgs{...}
type BareMetalClusterStorageLvpShareConfigInput interface {
	pulumi.Input

	ToBareMetalClusterStorageLvpShareConfigOutput() BareMetalClusterStorageLvpShareConfigOutput
	ToBareMetalClusterStorageLvpShareConfigOutputWithContext(context.Context) BareMetalClusterStorageLvpShareConfigOutput
}

type BareMetalClusterStorageLvpShareConfigArgs struct {
	// Defines the machine path and storage class for the LVP Share.
	// Structure is documented below.
	LvpConfig BareMetalClusterStorageLvpShareConfigLvpConfigInput `pulumi:"lvpConfig"`
	// The number of subdirectories to create under path.
	SharedPathPvCount pulumi.IntPtrInput `pulumi:"sharedPathPvCount"`
}

func (BareMetalClusterStorageLvpShareConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStorageLvpShareConfig)(nil)).Elem()
}

func (i BareMetalClusterStorageLvpShareConfigArgs) ToBareMetalClusterStorageLvpShareConfigOutput() BareMetalClusterStorageLvpShareConfigOutput {
	return i.ToBareMetalClusterStorageLvpShareConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterStorageLvpShareConfigArgs) ToBareMetalClusterStorageLvpShareConfigOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageLvpShareConfigOutput)
}

func (i BareMetalClusterStorageLvpShareConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStorageLvpShareConfig] {
	return pulumix.Output[BareMetalClusterStorageLvpShareConfig]{
		OutputState: i.ToBareMetalClusterStorageLvpShareConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterStorageLvpShareConfigArgs) ToBareMetalClusterStorageLvpShareConfigPtrOutput() BareMetalClusterStorageLvpShareConfigPtrOutput {
	return i.ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterStorageLvpShareConfigArgs) ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageLvpShareConfigOutput).ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterStorageLvpShareConfigPtrInput is an input type that accepts BareMetalClusterStorageLvpShareConfigArgs, BareMetalClusterStorageLvpShareConfigPtr and BareMetalClusterStorageLvpShareConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterStorageLvpShareConfigPtrInput` via:
//
//	        BareMetalClusterStorageLvpShareConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterStorageLvpShareConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterStorageLvpShareConfigPtrOutput() BareMetalClusterStorageLvpShareConfigPtrOutput
	ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(context.Context) BareMetalClusterStorageLvpShareConfigPtrOutput
}

type bareMetalClusterStorageLvpShareConfigPtrType BareMetalClusterStorageLvpShareConfigArgs

func BareMetalClusterStorageLvpShareConfigPtr(v *BareMetalClusterStorageLvpShareConfigArgs) BareMetalClusterStorageLvpShareConfigPtrInput {
	return (*bareMetalClusterStorageLvpShareConfigPtrType)(v)
}

func (*bareMetalClusterStorageLvpShareConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterStorageLvpShareConfig)(nil)).Elem()
}

func (i *bareMetalClusterStorageLvpShareConfigPtrType) ToBareMetalClusterStorageLvpShareConfigPtrOutput() BareMetalClusterStorageLvpShareConfigPtrOutput {
	return i.ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterStorageLvpShareConfigPtrType) ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageLvpShareConfigPtrOutput)
}

func (i *bareMetalClusterStorageLvpShareConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterStorageLvpShareConfig] {
	return pulumix.Output[*BareMetalClusterStorageLvpShareConfig]{
		OutputState: i.ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterStorageLvpShareConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStorageLvpShareConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStorageLvpShareConfig)(nil)).Elem()
}

func (o BareMetalClusterStorageLvpShareConfigOutput) ToBareMetalClusterStorageLvpShareConfigOutput() BareMetalClusterStorageLvpShareConfigOutput {
	return o
}

func (o BareMetalClusterStorageLvpShareConfigOutput) ToBareMetalClusterStorageLvpShareConfigOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigOutput {
	return o
}

func (o BareMetalClusterStorageLvpShareConfigOutput) ToBareMetalClusterStorageLvpShareConfigPtrOutput() BareMetalClusterStorageLvpShareConfigPtrOutput {
	return o.ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterStorageLvpShareConfigOutput) ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterStorageLvpShareConfig) *BareMetalClusterStorageLvpShareConfig {
		return &v
	}).(BareMetalClusterStorageLvpShareConfigPtrOutput)
}

func (o BareMetalClusterStorageLvpShareConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStorageLvpShareConfig] {
	return pulumix.Output[BareMetalClusterStorageLvpShareConfig]{
		OutputState: o.OutputState,
	}
}

// Defines the machine path and storage class for the LVP Share.
// Structure is documented below.
func (o BareMetalClusterStorageLvpShareConfigOutput) LvpConfig() BareMetalClusterStorageLvpShareConfigLvpConfigOutput {
	return o.ApplyT(func(v BareMetalClusterStorageLvpShareConfig) BareMetalClusterStorageLvpShareConfigLvpConfig {
		return v.LvpConfig
	}).(BareMetalClusterStorageLvpShareConfigLvpConfigOutput)
}

// The number of subdirectories to create under path.
func (o BareMetalClusterStorageLvpShareConfigOutput) SharedPathPvCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BareMetalClusterStorageLvpShareConfig) *int { return v.SharedPathPvCount }).(pulumi.IntPtrOutput)
}

type BareMetalClusterStorageLvpShareConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStorageLvpShareConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterStorageLvpShareConfig)(nil)).Elem()
}

func (o BareMetalClusterStorageLvpShareConfigPtrOutput) ToBareMetalClusterStorageLvpShareConfigPtrOutput() BareMetalClusterStorageLvpShareConfigPtrOutput {
	return o
}

func (o BareMetalClusterStorageLvpShareConfigPtrOutput) ToBareMetalClusterStorageLvpShareConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigPtrOutput {
	return o
}

func (o BareMetalClusterStorageLvpShareConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterStorageLvpShareConfig] {
	return pulumix.Output[*BareMetalClusterStorageLvpShareConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterStorageLvpShareConfigPtrOutput) Elem() BareMetalClusterStorageLvpShareConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterStorageLvpShareConfig) BareMetalClusterStorageLvpShareConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterStorageLvpShareConfig
		return ret
	}).(BareMetalClusterStorageLvpShareConfigOutput)
}

// Defines the machine path and storage class for the LVP Share.
// Structure is documented below.
func (o BareMetalClusterStorageLvpShareConfigPtrOutput) LvpConfig() BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterStorageLvpShareConfig) *BareMetalClusterStorageLvpShareConfigLvpConfig {
		if v == nil {
			return nil
		}
		return &v.LvpConfig
	}).(BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput)
}

// The number of subdirectories to create under path.
func (o BareMetalClusterStorageLvpShareConfigPtrOutput) SharedPathPvCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterStorageLvpShareConfig) *int {
		if v == nil {
			return nil
		}
		return v.SharedPathPvCount
	}).(pulumi.IntPtrOutput)
}

type BareMetalClusterStorageLvpShareConfigLvpConfig struct {
	// The host machine path.
	Path string `pulumi:"path"`
	// The StorageClass name that PVs will be created with.
	StorageClass string `pulumi:"storageClass"`
}

// BareMetalClusterStorageLvpShareConfigLvpConfigInput is an input type that accepts BareMetalClusterStorageLvpShareConfigLvpConfigArgs and BareMetalClusterStorageLvpShareConfigLvpConfigOutput values.
// You can construct a concrete instance of `BareMetalClusterStorageLvpShareConfigLvpConfigInput` via:
//
//	BareMetalClusterStorageLvpShareConfigLvpConfigArgs{...}
type BareMetalClusterStorageLvpShareConfigLvpConfigInput interface {
	pulumi.Input

	ToBareMetalClusterStorageLvpShareConfigLvpConfigOutput() BareMetalClusterStorageLvpShareConfigLvpConfigOutput
	ToBareMetalClusterStorageLvpShareConfigLvpConfigOutputWithContext(context.Context) BareMetalClusterStorageLvpShareConfigLvpConfigOutput
}

type BareMetalClusterStorageLvpShareConfigLvpConfigArgs struct {
	// The host machine path.
	Path pulumi.StringInput `pulumi:"path"`
	// The StorageClass name that PVs will be created with.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BareMetalClusterStorageLvpShareConfigLvpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStorageLvpShareConfigLvpConfig)(nil)).Elem()
}

func (i BareMetalClusterStorageLvpShareConfigLvpConfigArgs) ToBareMetalClusterStorageLvpShareConfigLvpConfigOutput() BareMetalClusterStorageLvpShareConfigLvpConfigOutput {
	return i.ToBareMetalClusterStorageLvpShareConfigLvpConfigOutputWithContext(context.Background())
}

func (i BareMetalClusterStorageLvpShareConfigLvpConfigArgs) ToBareMetalClusterStorageLvpShareConfigLvpConfigOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigLvpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageLvpShareConfigLvpConfigOutput)
}

func (i BareMetalClusterStorageLvpShareConfigLvpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStorageLvpShareConfigLvpConfig] {
	return pulumix.Output[BareMetalClusterStorageLvpShareConfigLvpConfig]{
		OutputState: i.ToBareMetalClusterStorageLvpShareConfigLvpConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalClusterStorageLvpShareConfigLvpConfigArgs) ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return i.ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalClusterStorageLvpShareConfigLvpConfigArgs) ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageLvpShareConfigLvpConfigOutput).ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx)
}

// BareMetalClusterStorageLvpShareConfigLvpConfigPtrInput is an input type that accepts BareMetalClusterStorageLvpShareConfigLvpConfigArgs, BareMetalClusterStorageLvpShareConfigLvpConfigPtr and BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalClusterStorageLvpShareConfigLvpConfigPtrInput` via:
//
//	        BareMetalClusterStorageLvpShareConfigLvpConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalClusterStorageLvpShareConfigLvpConfigPtrInput interface {
	pulumi.Input

	ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput
	ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(context.Context) BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput
}

type bareMetalClusterStorageLvpShareConfigLvpConfigPtrType BareMetalClusterStorageLvpShareConfigLvpConfigArgs

func BareMetalClusterStorageLvpShareConfigLvpConfigPtr(v *BareMetalClusterStorageLvpShareConfigLvpConfigArgs) BareMetalClusterStorageLvpShareConfigLvpConfigPtrInput {
	return (*bareMetalClusterStorageLvpShareConfigLvpConfigPtrType)(v)
}

func (*bareMetalClusterStorageLvpShareConfigLvpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterStorageLvpShareConfigLvpConfig)(nil)).Elem()
}

func (i *bareMetalClusterStorageLvpShareConfigLvpConfigPtrType) ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return i.ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalClusterStorageLvpShareConfigLvpConfigPtrType) ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput)
}

func (i *bareMetalClusterStorageLvpShareConfigLvpConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterStorageLvpShareConfigLvpConfig] {
	return pulumix.Output[*BareMetalClusterStorageLvpShareConfigLvpConfig]{
		OutputState: i.ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterStorageLvpShareConfigLvpConfigOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStorageLvpShareConfigLvpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterStorageLvpShareConfigLvpConfig)(nil)).Elem()
}

func (o BareMetalClusterStorageLvpShareConfigLvpConfigOutput) ToBareMetalClusterStorageLvpShareConfigLvpConfigOutput() BareMetalClusterStorageLvpShareConfigLvpConfigOutput {
	return o
}

func (o BareMetalClusterStorageLvpShareConfigLvpConfigOutput) ToBareMetalClusterStorageLvpShareConfigLvpConfigOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigLvpConfigOutput {
	return o
}

func (o BareMetalClusterStorageLvpShareConfigLvpConfigOutput) ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o.ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalClusterStorageLvpShareConfigLvpConfigOutput) ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalClusterStorageLvpShareConfigLvpConfig) *BareMetalClusterStorageLvpShareConfigLvpConfig {
		return &v
	}).(BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput)
}

func (o BareMetalClusterStorageLvpShareConfigLvpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterStorageLvpShareConfigLvpConfig] {
	return pulumix.Output[BareMetalClusterStorageLvpShareConfigLvpConfig]{
		OutputState: o.OutputState,
	}
}

// The host machine path.
func (o BareMetalClusterStorageLvpShareConfigLvpConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterStorageLvpShareConfigLvpConfig) string { return v.Path }).(pulumi.StringOutput)
}

// The StorageClass name that PVs will be created with.
func (o BareMetalClusterStorageLvpShareConfigLvpConfigOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BareMetalClusterStorageLvpShareConfigLvpConfig) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalClusterStorageLvpShareConfigLvpConfig)(nil)).Elem()
}

func (o BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput) ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput() BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o
}

func (o BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput) ToBareMetalClusterStorageLvpShareConfigLvpConfigPtrOutputWithContext(ctx context.Context) BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput {
	return o
}

func (o BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalClusterStorageLvpShareConfigLvpConfig] {
	return pulumix.Output[*BareMetalClusterStorageLvpShareConfigLvpConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput) Elem() BareMetalClusterStorageLvpShareConfigLvpConfigOutput {
	return o.ApplyT(func(v *BareMetalClusterStorageLvpShareConfigLvpConfig) BareMetalClusterStorageLvpShareConfigLvpConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalClusterStorageLvpShareConfigLvpConfig
		return ret
	}).(BareMetalClusterStorageLvpShareConfigLvpConfigOutput)
}

// The host machine path.
func (o BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterStorageLvpShareConfigLvpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The StorageClass name that PVs will be created with.
func (o BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalClusterStorageLvpShareConfigLvpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type BareMetalClusterValidationCheck struct {
	// (Output)
	// Options used for the validation check.
	Options *string `pulumi:"options"`
	// (Output)
	// The scenario when the preflight checks were run..
	Scenario *string `pulumi:"scenario"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses []BareMetalClusterValidationCheckStatus `pulumi:"statuses"`
}

// BareMetalClusterValidationCheckInput is an input type that accepts BareMetalClusterValidationCheckArgs and BareMetalClusterValidationCheckOutput values.
// You can construct a concrete instance of `BareMetalClusterValidationCheckInput` via:
//
//	BareMetalClusterValidationCheckArgs{...}
type BareMetalClusterValidationCheckInput interface {
	pulumi.Input

	ToBareMetalClusterValidationCheckOutput() BareMetalClusterValidationCheckOutput
	ToBareMetalClusterValidationCheckOutputWithContext(context.Context) BareMetalClusterValidationCheckOutput
}

type BareMetalClusterValidationCheckArgs struct {
	// (Output)
	// Options used for the validation check.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// (Output)
	// The scenario when the preflight checks were run..
	Scenario pulumi.StringPtrInput `pulumi:"scenario"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses BareMetalClusterValidationCheckStatusArrayInput `pulumi:"statuses"`
}

func (BareMetalClusterValidationCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterValidationCheck)(nil)).Elem()
}

func (i BareMetalClusterValidationCheckArgs) ToBareMetalClusterValidationCheckOutput() BareMetalClusterValidationCheckOutput {
	return i.ToBareMetalClusterValidationCheckOutputWithContext(context.Background())
}

func (i BareMetalClusterValidationCheckArgs) ToBareMetalClusterValidationCheckOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterValidationCheckOutput)
}

func (i BareMetalClusterValidationCheckArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterValidationCheck] {
	return pulumix.Output[BareMetalClusterValidationCheck]{
		OutputState: i.ToBareMetalClusterValidationCheckOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterValidationCheckArrayInput is an input type that accepts BareMetalClusterValidationCheckArray and BareMetalClusterValidationCheckArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterValidationCheckArrayInput` via:
//
//	BareMetalClusterValidationCheckArray{ BareMetalClusterValidationCheckArgs{...} }
type BareMetalClusterValidationCheckArrayInput interface {
	pulumi.Input

	ToBareMetalClusterValidationCheckArrayOutput() BareMetalClusterValidationCheckArrayOutput
	ToBareMetalClusterValidationCheckArrayOutputWithContext(context.Context) BareMetalClusterValidationCheckArrayOutput
}

type BareMetalClusterValidationCheckArray []BareMetalClusterValidationCheckInput

func (BareMetalClusterValidationCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterValidationCheck)(nil)).Elem()
}

func (i BareMetalClusterValidationCheckArray) ToBareMetalClusterValidationCheckArrayOutput() BareMetalClusterValidationCheckArrayOutput {
	return i.ToBareMetalClusterValidationCheckArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterValidationCheckArray) ToBareMetalClusterValidationCheckArrayOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterValidationCheckArrayOutput)
}

func (i BareMetalClusterValidationCheckArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterValidationCheck] {
	return pulumix.Output[[]BareMetalClusterValidationCheck]{
		OutputState: i.ToBareMetalClusterValidationCheckArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterValidationCheckOutput struct{ *pulumi.OutputState }

func (BareMetalClusterValidationCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterValidationCheck)(nil)).Elem()
}

func (o BareMetalClusterValidationCheckOutput) ToBareMetalClusterValidationCheckOutput() BareMetalClusterValidationCheckOutput {
	return o
}

func (o BareMetalClusterValidationCheckOutput) ToBareMetalClusterValidationCheckOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckOutput {
	return o
}

func (o BareMetalClusterValidationCheckOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterValidationCheck] {
	return pulumix.Output[BareMetalClusterValidationCheck]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Options used for the validation check.
func (o BareMetalClusterValidationCheckOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterValidationCheck) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// (Output)
// The scenario when the preflight checks were run..
func (o BareMetalClusterValidationCheckOutput) Scenario() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterValidationCheck) *string { return v.Scenario }).(pulumi.StringPtrOutput)
}

// (Output)
// Specifies the detailed validation check status
// Structure is documented below.
func (o BareMetalClusterValidationCheckOutput) Statuses() BareMetalClusterValidationCheckStatusArrayOutput {
	return o.ApplyT(func(v BareMetalClusterValidationCheck) []BareMetalClusterValidationCheckStatus { return v.Statuses }).(BareMetalClusterValidationCheckStatusArrayOutput)
}

type BareMetalClusterValidationCheckArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterValidationCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterValidationCheck)(nil)).Elem()
}

func (o BareMetalClusterValidationCheckArrayOutput) ToBareMetalClusterValidationCheckArrayOutput() BareMetalClusterValidationCheckArrayOutput {
	return o
}

func (o BareMetalClusterValidationCheckArrayOutput) ToBareMetalClusterValidationCheckArrayOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckArrayOutput {
	return o
}

func (o BareMetalClusterValidationCheckArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterValidationCheck] {
	return pulumix.Output[[]BareMetalClusterValidationCheck]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterValidationCheckArrayOutput) Index(i pulumi.IntInput) BareMetalClusterValidationCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterValidationCheck {
		return vs[0].([]BareMetalClusterValidationCheck)[vs[1].(int)]
	}).(BareMetalClusterValidationCheckOutput)
}

type BareMetalClusterValidationCheckStatus struct {
	// (Output)
	// Individual checks which failed as part of the Preflight check execution.
	// Structure is documented below.
	Results []BareMetalClusterValidationCheckStatusResult `pulumi:"results"`
}

// BareMetalClusterValidationCheckStatusInput is an input type that accepts BareMetalClusterValidationCheckStatusArgs and BareMetalClusterValidationCheckStatusOutput values.
// You can construct a concrete instance of `BareMetalClusterValidationCheckStatusInput` via:
//
//	BareMetalClusterValidationCheckStatusArgs{...}
type BareMetalClusterValidationCheckStatusInput interface {
	pulumi.Input

	ToBareMetalClusterValidationCheckStatusOutput() BareMetalClusterValidationCheckStatusOutput
	ToBareMetalClusterValidationCheckStatusOutputWithContext(context.Context) BareMetalClusterValidationCheckStatusOutput
}

type BareMetalClusterValidationCheckStatusArgs struct {
	// (Output)
	// Individual checks which failed as part of the Preflight check execution.
	// Structure is documented below.
	Results BareMetalClusterValidationCheckStatusResultArrayInput `pulumi:"results"`
}

func (BareMetalClusterValidationCheckStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterValidationCheckStatus)(nil)).Elem()
}

func (i BareMetalClusterValidationCheckStatusArgs) ToBareMetalClusterValidationCheckStatusOutput() BareMetalClusterValidationCheckStatusOutput {
	return i.ToBareMetalClusterValidationCheckStatusOutputWithContext(context.Background())
}

func (i BareMetalClusterValidationCheckStatusArgs) ToBareMetalClusterValidationCheckStatusOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterValidationCheckStatusOutput)
}

func (i BareMetalClusterValidationCheckStatusArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterValidationCheckStatus] {
	return pulumix.Output[BareMetalClusterValidationCheckStatus]{
		OutputState: i.ToBareMetalClusterValidationCheckStatusOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterValidationCheckStatusArrayInput is an input type that accepts BareMetalClusterValidationCheckStatusArray and BareMetalClusterValidationCheckStatusArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterValidationCheckStatusArrayInput` via:
//
//	BareMetalClusterValidationCheckStatusArray{ BareMetalClusterValidationCheckStatusArgs{...} }
type BareMetalClusterValidationCheckStatusArrayInput interface {
	pulumi.Input

	ToBareMetalClusterValidationCheckStatusArrayOutput() BareMetalClusterValidationCheckStatusArrayOutput
	ToBareMetalClusterValidationCheckStatusArrayOutputWithContext(context.Context) BareMetalClusterValidationCheckStatusArrayOutput
}

type BareMetalClusterValidationCheckStatusArray []BareMetalClusterValidationCheckStatusInput

func (BareMetalClusterValidationCheckStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterValidationCheckStatus)(nil)).Elem()
}

func (i BareMetalClusterValidationCheckStatusArray) ToBareMetalClusterValidationCheckStatusArrayOutput() BareMetalClusterValidationCheckStatusArrayOutput {
	return i.ToBareMetalClusterValidationCheckStatusArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterValidationCheckStatusArray) ToBareMetalClusterValidationCheckStatusArrayOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterValidationCheckStatusArrayOutput)
}

func (i BareMetalClusterValidationCheckStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterValidationCheckStatus] {
	return pulumix.Output[[]BareMetalClusterValidationCheckStatus]{
		OutputState: i.ToBareMetalClusterValidationCheckStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterValidationCheckStatusOutput struct{ *pulumi.OutputState }

func (BareMetalClusterValidationCheckStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterValidationCheckStatus)(nil)).Elem()
}

func (o BareMetalClusterValidationCheckStatusOutput) ToBareMetalClusterValidationCheckStatusOutput() BareMetalClusterValidationCheckStatusOutput {
	return o
}

func (o BareMetalClusterValidationCheckStatusOutput) ToBareMetalClusterValidationCheckStatusOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckStatusOutput {
	return o
}

func (o BareMetalClusterValidationCheckStatusOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterValidationCheckStatus] {
	return pulumix.Output[BareMetalClusterValidationCheckStatus]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Individual checks which failed as part of the Preflight check execution.
// Structure is documented below.
func (o BareMetalClusterValidationCheckStatusOutput) Results() BareMetalClusterValidationCheckStatusResultArrayOutput {
	return o.ApplyT(func(v BareMetalClusterValidationCheckStatus) []BareMetalClusterValidationCheckStatusResult {
		return v.Results
	}).(BareMetalClusterValidationCheckStatusResultArrayOutput)
}

type BareMetalClusterValidationCheckStatusArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterValidationCheckStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterValidationCheckStatus)(nil)).Elem()
}

func (o BareMetalClusterValidationCheckStatusArrayOutput) ToBareMetalClusterValidationCheckStatusArrayOutput() BareMetalClusterValidationCheckStatusArrayOutput {
	return o
}

func (o BareMetalClusterValidationCheckStatusArrayOutput) ToBareMetalClusterValidationCheckStatusArrayOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckStatusArrayOutput {
	return o
}

func (o BareMetalClusterValidationCheckStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterValidationCheckStatus] {
	return pulumix.Output[[]BareMetalClusterValidationCheckStatus]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterValidationCheckStatusArrayOutput) Index(i pulumi.IntInput) BareMetalClusterValidationCheckStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterValidationCheckStatus {
		return vs[0].([]BareMetalClusterValidationCheckStatus)[vs[1].(int)]
	}).(BareMetalClusterValidationCheckStatusOutput)
}

type BareMetalClusterValidationCheckStatusResult struct {
	// (Output)
	// The category of the validation.
	Category *string `pulumi:"category"`
	// A human readable description of this Bare Metal User Cluster.
	Description *string `pulumi:"description"`
	// (Output)
	// Detailed failure information, which might be unformatted.
	Details *string `pulumi:"details"`
	// (Output)
	// Options used for the validation check.
	Options *string `pulumi:"options"`
	// (Output)
	// A human-readable message of the check failure.
	Reason *string `pulumi:"reason"`
}

// BareMetalClusterValidationCheckStatusResultInput is an input type that accepts BareMetalClusterValidationCheckStatusResultArgs and BareMetalClusterValidationCheckStatusResultOutput values.
// You can construct a concrete instance of `BareMetalClusterValidationCheckStatusResultInput` via:
//
//	BareMetalClusterValidationCheckStatusResultArgs{...}
type BareMetalClusterValidationCheckStatusResultInput interface {
	pulumi.Input

	ToBareMetalClusterValidationCheckStatusResultOutput() BareMetalClusterValidationCheckStatusResultOutput
	ToBareMetalClusterValidationCheckStatusResultOutputWithContext(context.Context) BareMetalClusterValidationCheckStatusResultOutput
}

type BareMetalClusterValidationCheckStatusResultArgs struct {
	// (Output)
	// The category of the validation.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// A human readable description of this Bare Metal User Cluster.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Output)
	// Detailed failure information, which might be unformatted.
	Details pulumi.StringPtrInput `pulumi:"details"`
	// (Output)
	// Options used for the validation check.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// (Output)
	// A human-readable message of the check failure.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (BareMetalClusterValidationCheckStatusResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterValidationCheckStatusResult)(nil)).Elem()
}

func (i BareMetalClusterValidationCheckStatusResultArgs) ToBareMetalClusterValidationCheckStatusResultOutput() BareMetalClusterValidationCheckStatusResultOutput {
	return i.ToBareMetalClusterValidationCheckStatusResultOutputWithContext(context.Background())
}

func (i BareMetalClusterValidationCheckStatusResultArgs) ToBareMetalClusterValidationCheckStatusResultOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckStatusResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterValidationCheckStatusResultOutput)
}

func (i BareMetalClusterValidationCheckStatusResultArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterValidationCheckStatusResult] {
	return pulumix.Output[BareMetalClusterValidationCheckStatusResult]{
		OutputState: i.ToBareMetalClusterValidationCheckStatusResultOutputWithContext(ctx).OutputState,
	}
}

// BareMetalClusterValidationCheckStatusResultArrayInput is an input type that accepts BareMetalClusterValidationCheckStatusResultArray and BareMetalClusterValidationCheckStatusResultArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterValidationCheckStatusResultArrayInput` via:
//
//	BareMetalClusterValidationCheckStatusResultArray{ BareMetalClusterValidationCheckStatusResultArgs{...} }
type BareMetalClusterValidationCheckStatusResultArrayInput interface {
	pulumi.Input

	ToBareMetalClusterValidationCheckStatusResultArrayOutput() BareMetalClusterValidationCheckStatusResultArrayOutput
	ToBareMetalClusterValidationCheckStatusResultArrayOutputWithContext(context.Context) BareMetalClusterValidationCheckStatusResultArrayOutput
}

type BareMetalClusterValidationCheckStatusResultArray []BareMetalClusterValidationCheckStatusResultInput

func (BareMetalClusterValidationCheckStatusResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterValidationCheckStatusResult)(nil)).Elem()
}

func (i BareMetalClusterValidationCheckStatusResultArray) ToBareMetalClusterValidationCheckStatusResultArrayOutput() BareMetalClusterValidationCheckStatusResultArrayOutput {
	return i.ToBareMetalClusterValidationCheckStatusResultArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterValidationCheckStatusResultArray) ToBareMetalClusterValidationCheckStatusResultArrayOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckStatusResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterValidationCheckStatusResultArrayOutput)
}

func (i BareMetalClusterValidationCheckStatusResultArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterValidationCheckStatusResult] {
	return pulumix.Output[[]BareMetalClusterValidationCheckStatusResult]{
		OutputState: i.ToBareMetalClusterValidationCheckStatusResultArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalClusterValidationCheckStatusResultOutput struct{ *pulumi.OutputState }

func (BareMetalClusterValidationCheckStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalClusterValidationCheckStatusResult)(nil)).Elem()
}

func (o BareMetalClusterValidationCheckStatusResultOutput) ToBareMetalClusterValidationCheckStatusResultOutput() BareMetalClusterValidationCheckStatusResultOutput {
	return o
}

func (o BareMetalClusterValidationCheckStatusResultOutput) ToBareMetalClusterValidationCheckStatusResultOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckStatusResultOutput {
	return o
}

func (o BareMetalClusterValidationCheckStatusResultOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalClusterValidationCheckStatusResult] {
	return pulumix.Output[BareMetalClusterValidationCheckStatusResult]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The category of the validation.
func (o BareMetalClusterValidationCheckStatusResultOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterValidationCheckStatusResult) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// A human readable description of this Bare Metal User Cluster.
func (o BareMetalClusterValidationCheckStatusResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterValidationCheckStatusResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Output)
// Detailed failure information, which might be unformatted.
func (o BareMetalClusterValidationCheckStatusResultOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterValidationCheckStatusResult) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// (Output)
// Options used for the validation check.
func (o BareMetalClusterValidationCheckStatusResultOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterValidationCheckStatusResult) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// (Output)
// A human-readable message of the check failure.
func (o BareMetalClusterValidationCheckStatusResultOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalClusterValidationCheckStatusResult) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

type BareMetalClusterValidationCheckStatusResultArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterValidationCheckStatusResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalClusterValidationCheckStatusResult)(nil)).Elem()
}

func (o BareMetalClusterValidationCheckStatusResultArrayOutput) ToBareMetalClusterValidationCheckStatusResultArrayOutput() BareMetalClusterValidationCheckStatusResultArrayOutput {
	return o
}

func (o BareMetalClusterValidationCheckStatusResultArrayOutput) ToBareMetalClusterValidationCheckStatusResultArrayOutputWithContext(ctx context.Context) BareMetalClusterValidationCheckStatusResultArrayOutput {
	return o
}

func (o BareMetalClusterValidationCheckStatusResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalClusterValidationCheckStatusResult] {
	return pulumix.Output[[]BareMetalClusterValidationCheckStatusResult]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalClusterValidationCheckStatusResultArrayOutput) Index(i pulumi.IntInput) BareMetalClusterValidationCheckStatusResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalClusterValidationCheckStatusResult {
		return vs[0].([]BareMetalClusterValidationCheckStatusResult)[vs[1].(int)]
	}).(BareMetalClusterValidationCheckStatusResultOutput)
}

type BareMetalNodePoolNodePoolConfig struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs []BareMetalNodePoolNodePoolConfigNodeConfig `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem *string `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints []BareMetalNodePoolNodePoolConfigTaint `pulumi:"taints"`
}

// BareMetalNodePoolNodePoolConfigInput is an input type that accepts BareMetalNodePoolNodePoolConfigArgs and BareMetalNodePoolNodePoolConfigOutput values.
// You can construct a concrete instance of `BareMetalNodePoolNodePoolConfigInput` via:
//
//	BareMetalNodePoolNodePoolConfigArgs{...}
type BareMetalNodePoolNodePoolConfigInput interface {
	pulumi.Input

	ToBareMetalNodePoolNodePoolConfigOutput() BareMetalNodePoolNodePoolConfigOutput
	ToBareMetalNodePoolNodePoolConfigOutputWithContext(context.Context) BareMetalNodePoolNodePoolConfigOutput
}

type BareMetalNodePoolNodePoolConfigArgs struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The list of machine addresses in the Bare Metal Node Pool.
	// Structure is documented below.
	NodeConfigs BareMetalNodePoolNodePoolConfigNodeConfigArrayInput `pulumi:"nodeConfigs"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem pulumi.StringPtrInput `pulumi:"operatingSystem"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints BareMetalNodePoolNodePoolConfigTaintArrayInput `pulumi:"taints"`
}

func (BareMetalNodePoolNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolNodePoolConfig)(nil)).Elem()
}

func (i BareMetalNodePoolNodePoolConfigArgs) ToBareMetalNodePoolNodePoolConfigOutput() BareMetalNodePoolNodePoolConfigOutput {
	return i.ToBareMetalNodePoolNodePoolConfigOutputWithContext(context.Background())
}

func (i BareMetalNodePoolNodePoolConfigArgs) ToBareMetalNodePoolNodePoolConfigOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolNodePoolConfigOutput)
}

func (i BareMetalNodePoolNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolNodePoolConfig] {
	return pulumix.Output[BareMetalNodePoolNodePoolConfig]{
		OutputState: i.ToBareMetalNodePoolNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i BareMetalNodePoolNodePoolConfigArgs) ToBareMetalNodePoolNodePoolConfigPtrOutput() BareMetalNodePoolNodePoolConfigPtrOutput {
	return i.ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i BareMetalNodePoolNodePoolConfigArgs) ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolNodePoolConfigOutput).ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(ctx)
}

// BareMetalNodePoolNodePoolConfigPtrInput is an input type that accepts BareMetalNodePoolNodePoolConfigArgs, BareMetalNodePoolNodePoolConfigPtr and BareMetalNodePoolNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `BareMetalNodePoolNodePoolConfigPtrInput` via:
//
//	        BareMetalNodePoolNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type BareMetalNodePoolNodePoolConfigPtrInput interface {
	pulumi.Input

	ToBareMetalNodePoolNodePoolConfigPtrOutput() BareMetalNodePoolNodePoolConfigPtrOutput
	ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(context.Context) BareMetalNodePoolNodePoolConfigPtrOutput
}

type bareMetalNodePoolNodePoolConfigPtrType BareMetalNodePoolNodePoolConfigArgs

func BareMetalNodePoolNodePoolConfigPtr(v *BareMetalNodePoolNodePoolConfigArgs) BareMetalNodePoolNodePoolConfigPtrInput {
	return (*bareMetalNodePoolNodePoolConfigPtrType)(v)
}

func (*bareMetalNodePoolNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalNodePoolNodePoolConfig)(nil)).Elem()
}

func (i *bareMetalNodePoolNodePoolConfigPtrType) ToBareMetalNodePoolNodePoolConfigPtrOutput() BareMetalNodePoolNodePoolConfigPtrOutput {
	return i.ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *bareMetalNodePoolNodePoolConfigPtrType) ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolNodePoolConfigPtrOutput)
}

func (i *bareMetalNodePoolNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*BareMetalNodePoolNodePoolConfig] {
	return pulumix.Output[*BareMetalNodePoolNodePoolConfig]{
		OutputState: i.ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type BareMetalNodePoolNodePoolConfigOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolNodePoolConfig)(nil)).Elem()
}

func (o BareMetalNodePoolNodePoolConfigOutput) ToBareMetalNodePoolNodePoolConfigOutput() BareMetalNodePoolNodePoolConfigOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigOutput) ToBareMetalNodePoolNodePoolConfigOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigOutput) ToBareMetalNodePoolNodePoolConfigPtrOutput() BareMetalNodePoolNodePoolConfigPtrOutput {
	return o.ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o BareMetalNodePoolNodePoolConfigOutput) ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BareMetalNodePoolNodePoolConfig) *BareMetalNodePoolNodePoolConfig {
		return &v
	}).(BareMetalNodePoolNodePoolConfigPtrOutput)
}

func (o BareMetalNodePoolNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolNodePoolConfig] {
	return pulumix.Output[BareMetalNodePoolNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalNodePoolNodePoolConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalNodePoolNodePoolConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalNodePoolNodePoolConfigOutput) NodeConfigs() BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v BareMetalNodePoolNodePoolConfig) []BareMetalNodePoolNodePoolConfigNodeConfig {
		return v.NodeConfigs
	}).(BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalNodePoolNodePoolConfigOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolNodePoolConfig) *string { return v.OperatingSystem }).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalNodePoolNodePoolConfigOutput) Taints() BareMetalNodePoolNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v BareMetalNodePoolNodePoolConfig) []BareMetalNodePoolNodePoolConfigTaint { return v.Taints }).(BareMetalNodePoolNodePoolConfigTaintArrayOutput)
}

type BareMetalNodePoolNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalNodePoolNodePoolConfig)(nil)).Elem()
}

func (o BareMetalNodePoolNodePoolConfigPtrOutput) ToBareMetalNodePoolNodePoolConfigPtrOutput() BareMetalNodePoolNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigPtrOutput) ToBareMetalNodePoolNodePoolConfigPtrOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigPtrOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalNodePoolNodePoolConfig] {
	return pulumix.Output[*BareMetalNodePoolNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalNodePoolNodePoolConfigPtrOutput) Elem() BareMetalNodePoolNodePoolConfigOutput {
	return o.ApplyT(func(v *BareMetalNodePoolNodePoolConfig) BareMetalNodePoolNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret BareMetalNodePoolNodePoolConfig
		return ret
	}).(BareMetalNodePoolNodePoolConfigOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalNodePoolNodePoolConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalNodePoolNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The list of machine addresses in the Bare Metal Node Pool.
// Structure is documented below.
func (o BareMetalNodePoolNodePoolConfigPtrOutput) NodeConfigs() BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput {
	return o.ApplyT(func(v *BareMetalNodePoolNodePoolConfig) []BareMetalNodePoolNodePoolConfigNodeConfig {
		if v == nil {
			return nil
		}
		return v.NodeConfigs
	}).(BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput)
}

// Specifies the nodes operating system (default: LINUX).
func (o BareMetalNodePoolNodePoolConfigPtrOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalNodePoolNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o BareMetalNodePoolNodePoolConfigPtrOutput) Taints() BareMetalNodePoolNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v *BareMetalNodePoolNodePoolConfig) []BareMetalNodePoolNodePoolConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(BareMetalNodePoolNodePoolConfigTaintArrayOutput)
}

type BareMetalNodePoolNodePoolConfigNodeConfig struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp *string `pulumi:"nodeIp"`
}

// BareMetalNodePoolNodePoolConfigNodeConfigInput is an input type that accepts BareMetalNodePoolNodePoolConfigNodeConfigArgs and BareMetalNodePoolNodePoolConfigNodeConfigOutput values.
// You can construct a concrete instance of `BareMetalNodePoolNodePoolConfigNodeConfigInput` via:
//
//	BareMetalNodePoolNodePoolConfigNodeConfigArgs{...}
type BareMetalNodePoolNodePoolConfigNodeConfigInput interface {
	pulumi.Input

	ToBareMetalNodePoolNodePoolConfigNodeConfigOutput() BareMetalNodePoolNodePoolConfigNodeConfigOutput
	ToBareMetalNodePoolNodePoolConfigNodeConfigOutputWithContext(context.Context) BareMetalNodePoolNodePoolConfigNodeConfigOutput
}

type BareMetalNodePoolNodePoolConfigNodeConfigArgs struct {
	// The map of Kubernetes labels (key/value pairs) to be applied to
	// each node. These will added in addition to any default label(s)
	// that Kubernetes may apply to the node. In case of conflict in
	// label keys, the applied set may differ depending on the Kubernetes
	// version -- it's best to assume the behavior is undefined and
	// conflicts should be avoided. For more information, including usage
	// and the valid values, see:
	// http://kubernetes.io/v1.1/docs/user-guide/labels.html
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The default IPv4 address for SSH access and Kubernetes node.
	// Example: 192.168.0.1
	NodeIp pulumi.StringPtrInput `pulumi:"nodeIp"`
}

func (BareMetalNodePoolNodePoolConfigNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalNodePoolNodePoolConfigNodeConfigArgs) ToBareMetalNodePoolNodePoolConfigNodeConfigOutput() BareMetalNodePoolNodePoolConfigNodeConfigOutput {
	return i.ToBareMetalNodePoolNodePoolConfigNodeConfigOutputWithContext(context.Background())
}

func (i BareMetalNodePoolNodePoolConfigNodeConfigArgs) ToBareMetalNodePoolNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolNodePoolConfigNodeConfigOutput)
}

func (i BareMetalNodePoolNodePoolConfigNodeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalNodePoolNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalNodePoolNodePoolConfigNodeConfigOutputWithContext(ctx).OutputState,
	}
}

// BareMetalNodePoolNodePoolConfigNodeConfigArrayInput is an input type that accepts BareMetalNodePoolNodePoolConfigNodeConfigArray and BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput values.
// You can construct a concrete instance of `BareMetalNodePoolNodePoolConfigNodeConfigArrayInput` via:
//
//	BareMetalNodePoolNodePoolConfigNodeConfigArray{ BareMetalNodePoolNodePoolConfigNodeConfigArgs{...} }
type BareMetalNodePoolNodePoolConfigNodeConfigArrayInput interface {
	pulumi.Input

	ToBareMetalNodePoolNodePoolConfigNodeConfigArrayOutput() BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput
	ToBareMetalNodePoolNodePoolConfigNodeConfigArrayOutputWithContext(context.Context) BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput
}

type BareMetalNodePoolNodePoolConfigNodeConfigArray []BareMetalNodePoolNodePoolConfigNodeConfigInput

func (BareMetalNodePoolNodePoolConfigNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalNodePoolNodePoolConfigNodeConfig)(nil)).Elem()
}

func (i BareMetalNodePoolNodePoolConfigNodeConfigArray) ToBareMetalNodePoolNodePoolConfigNodeConfigArrayOutput() BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput {
	return i.ToBareMetalNodePoolNodePoolConfigNodeConfigArrayOutputWithContext(context.Background())
}

func (i BareMetalNodePoolNodePoolConfigNodeConfigArray) ToBareMetalNodePoolNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput)
}

func (i BareMetalNodePoolNodePoolConfigNodeConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalNodePoolNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalNodePoolNodePoolConfigNodeConfig]{
		OutputState: i.ToBareMetalNodePoolNodePoolConfigNodeConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalNodePoolNodePoolConfigNodeConfigOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolNodePoolConfigNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalNodePoolNodePoolConfigNodeConfigOutput) ToBareMetalNodePoolNodePoolConfigNodeConfigOutput() BareMetalNodePoolNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigNodeConfigOutput) ToBareMetalNodePoolNodePoolConfigNodeConfigOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigNodeConfigOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigNodeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolNodePoolConfigNodeConfig] {
	return pulumix.Output[BareMetalNodePoolNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

// The map of Kubernetes labels (key/value pairs) to be applied to
// each node. These will added in addition to any default label(s)
// that Kubernetes may apply to the node. In case of conflict in
// label keys, the applied set may differ depending on the Kubernetes
// version -- it's best to assume the behavior is undefined and
// conflicts should be avoided. For more information, including usage
// and the valid values, see:
// http://kubernetes.io/v1.1/docs/user-guide/labels.html
// An object containing a list of "key": value pairs.
// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o BareMetalNodePoolNodePoolConfigNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BareMetalNodePoolNodePoolConfigNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The default IPv4 address for SSH access and Kubernetes node.
// Example: 192.168.0.1
func (o BareMetalNodePoolNodePoolConfigNodeConfigOutput) NodeIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolNodePoolConfigNodeConfig) *string { return v.NodeIp }).(pulumi.StringPtrOutput)
}

type BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalNodePoolNodePoolConfigNodeConfig)(nil)).Elem()
}

func (o BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput) ToBareMetalNodePoolNodePoolConfigNodeConfigArrayOutput() BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput) ToBareMetalNodePoolNodePoolConfigNodeConfigArrayOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalNodePoolNodePoolConfigNodeConfig] {
	return pulumix.Output[[]BareMetalNodePoolNodePoolConfigNodeConfig]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput) Index(i pulumi.IntInput) BareMetalNodePoolNodePoolConfigNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalNodePoolNodePoolConfigNodeConfig {
		return vs[0].([]BareMetalNodePoolNodePoolConfigNodeConfig)[vs[1].(int)]
	}).(BareMetalNodePoolNodePoolConfigNodeConfigOutput)
}

type BareMetalNodePoolNodePoolConfigTaint struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	//
	// ***
	Effect *string `pulumi:"effect"`
	// Key associated with the effect.
	Key *string `pulumi:"key"`
	// Value associated with the effect.
	Value *string `pulumi:"value"`
}

// BareMetalNodePoolNodePoolConfigTaintInput is an input type that accepts BareMetalNodePoolNodePoolConfigTaintArgs and BareMetalNodePoolNodePoolConfigTaintOutput values.
// You can construct a concrete instance of `BareMetalNodePoolNodePoolConfigTaintInput` via:
//
//	BareMetalNodePoolNodePoolConfigTaintArgs{...}
type BareMetalNodePoolNodePoolConfigTaintInput interface {
	pulumi.Input

	ToBareMetalNodePoolNodePoolConfigTaintOutput() BareMetalNodePoolNodePoolConfigTaintOutput
	ToBareMetalNodePoolNodePoolConfigTaintOutputWithContext(context.Context) BareMetalNodePoolNodePoolConfigTaintOutput
}

type BareMetalNodePoolNodePoolConfigTaintArgs struct {
	// Specifies the nodes operating system (default: LINUX).
	// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	//
	// ***
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key associated with the effect.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value associated with the effect.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BareMetalNodePoolNodePoolConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalNodePoolNodePoolConfigTaintArgs) ToBareMetalNodePoolNodePoolConfigTaintOutput() BareMetalNodePoolNodePoolConfigTaintOutput {
	return i.ToBareMetalNodePoolNodePoolConfigTaintOutputWithContext(context.Background())
}

func (i BareMetalNodePoolNodePoolConfigTaintArgs) ToBareMetalNodePoolNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolNodePoolConfigTaintOutput)
}

func (i BareMetalNodePoolNodePoolConfigTaintArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolNodePoolConfigTaint] {
	return pulumix.Output[BareMetalNodePoolNodePoolConfigTaint]{
		OutputState: i.ToBareMetalNodePoolNodePoolConfigTaintOutputWithContext(ctx).OutputState,
	}
}

// BareMetalNodePoolNodePoolConfigTaintArrayInput is an input type that accepts BareMetalNodePoolNodePoolConfigTaintArray and BareMetalNodePoolNodePoolConfigTaintArrayOutput values.
// You can construct a concrete instance of `BareMetalNodePoolNodePoolConfigTaintArrayInput` via:
//
//	BareMetalNodePoolNodePoolConfigTaintArray{ BareMetalNodePoolNodePoolConfigTaintArgs{...} }
type BareMetalNodePoolNodePoolConfigTaintArrayInput interface {
	pulumi.Input

	ToBareMetalNodePoolNodePoolConfigTaintArrayOutput() BareMetalNodePoolNodePoolConfigTaintArrayOutput
	ToBareMetalNodePoolNodePoolConfigTaintArrayOutputWithContext(context.Context) BareMetalNodePoolNodePoolConfigTaintArrayOutput
}

type BareMetalNodePoolNodePoolConfigTaintArray []BareMetalNodePoolNodePoolConfigTaintInput

func (BareMetalNodePoolNodePoolConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalNodePoolNodePoolConfigTaint)(nil)).Elem()
}

func (i BareMetalNodePoolNodePoolConfigTaintArray) ToBareMetalNodePoolNodePoolConfigTaintArrayOutput() BareMetalNodePoolNodePoolConfigTaintArrayOutput {
	return i.ToBareMetalNodePoolNodePoolConfigTaintArrayOutputWithContext(context.Background())
}

func (i BareMetalNodePoolNodePoolConfigTaintArray) ToBareMetalNodePoolNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolNodePoolConfigTaintArrayOutput)
}

func (i BareMetalNodePoolNodePoolConfigTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalNodePoolNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalNodePoolNodePoolConfigTaint]{
		OutputState: i.ToBareMetalNodePoolNodePoolConfigTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalNodePoolNodePoolConfigTaintOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolNodePoolConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalNodePoolNodePoolConfigTaintOutput) ToBareMetalNodePoolNodePoolConfigTaintOutput() BareMetalNodePoolNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigTaintOutput) ToBareMetalNodePoolNodePoolConfigTaintOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigTaintOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigTaintOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolNodePoolConfigTaint] {
	return pulumix.Output[BareMetalNodePoolNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

// Specifies the nodes operating system (default: LINUX).
// Possible values are: `EFFECT_UNSPECIFIED`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
//
// ***
func (o BareMetalNodePoolNodePoolConfigTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolNodePoolConfigTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key associated with the effect.
func (o BareMetalNodePoolNodePoolConfigTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolNodePoolConfigTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value associated with the effect.
func (o BareMetalNodePoolNodePoolConfigTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolNodePoolConfigTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type BareMetalNodePoolNodePoolConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolNodePoolConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalNodePoolNodePoolConfigTaint)(nil)).Elem()
}

func (o BareMetalNodePoolNodePoolConfigTaintArrayOutput) ToBareMetalNodePoolNodePoolConfigTaintArrayOutput() BareMetalNodePoolNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigTaintArrayOutput) ToBareMetalNodePoolNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) BareMetalNodePoolNodePoolConfigTaintArrayOutput {
	return o
}

func (o BareMetalNodePoolNodePoolConfigTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalNodePoolNodePoolConfigTaint] {
	return pulumix.Output[[]BareMetalNodePoolNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalNodePoolNodePoolConfigTaintArrayOutput) Index(i pulumi.IntInput) BareMetalNodePoolNodePoolConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalNodePoolNodePoolConfigTaint {
		return vs[0].([]BareMetalNodePoolNodePoolConfigTaint)[vs[1].(int)]
	}).(BareMetalNodePoolNodePoolConfigTaintOutput)
}

type BareMetalNodePoolStatus struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
	// Structure is documented below.
	Conditions []BareMetalNodePoolStatusCondition `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the user cluster
	// controller. The error message can be temporary as the user cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage *string `pulumi:"errorMessage"`
}

// BareMetalNodePoolStatusInput is an input type that accepts BareMetalNodePoolStatusArgs and BareMetalNodePoolStatusOutput values.
// You can construct a concrete instance of `BareMetalNodePoolStatusInput` via:
//
//	BareMetalNodePoolStatusArgs{...}
type BareMetalNodePoolStatusInput interface {
	pulumi.Input

	ToBareMetalNodePoolStatusOutput() BareMetalNodePoolStatusOutput
	ToBareMetalNodePoolStatusOutputWithContext(context.Context) BareMetalNodePoolStatusOutput
}

type BareMetalNodePoolStatusArgs struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
	// Structure is documented below.
	Conditions BareMetalNodePoolStatusConditionArrayInput `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the user cluster
	// controller. The error message can be temporary as the user cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
}

func (BareMetalNodePoolStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolStatus)(nil)).Elem()
}

func (i BareMetalNodePoolStatusArgs) ToBareMetalNodePoolStatusOutput() BareMetalNodePoolStatusOutput {
	return i.ToBareMetalNodePoolStatusOutputWithContext(context.Background())
}

func (i BareMetalNodePoolStatusArgs) ToBareMetalNodePoolStatusOutputWithContext(ctx context.Context) BareMetalNodePoolStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolStatusOutput)
}

func (i BareMetalNodePoolStatusArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolStatus] {
	return pulumix.Output[BareMetalNodePoolStatus]{
		OutputState: i.ToBareMetalNodePoolStatusOutputWithContext(ctx).OutputState,
	}
}

// BareMetalNodePoolStatusArrayInput is an input type that accepts BareMetalNodePoolStatusArray and BareMetalNodePoolStatusArrayOutput values.
// You can construct a concrete instance of `BareMetalNodePoolStatusArrayInput` via:
//
//	BareMetalNodePoolStatusArray{ BareMetalNodePoolStatusArgs{...} }
type BareMetalNodePoolStatusArrayInput interface {
	pulumi.Input

	ToBareMetalNodePoolStatusArrayOutput() BareMetalNodePoolStatusArrayOutput
	ToBareMetalNodePoolStatusArrayOutputWithContext(context.Context) BareMetalNodePoolStatusArrayOutput
}

type BareMetalNodePoolStatusArray []BareMetalNodePoolStatusInput

func (BareMetalNodePoolStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalNodePoolStatus)(nil)).Elem()
}

func (i BareMetalNodePoolStatusArray) ToBareMetalNodePoolStatusArrayOutput() BareMetalNodePoolStatusArrayOutput {
	return i.ToBareMetalNodePoolStatusArrayOutputWithContext(context.Background())
}

func (i BareMetalNodePoolStatusArray) ToBareMetalNodePoolStatusArrayOutputWithContext(ctx context.Context) BareMetalNodePoolStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolStatusArrayOutput)
}

func (i BareMetalNodePoolStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalNodePoolStatus] {
	return pulumix.Output[[]BareMetalNodePoolStatus]{
		OutputState: i.ToBareMetalNodePoolStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalNodePoolStatusOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolStatus)(nil)).Elem()
}

func (o BareMetalNodePoolStatusOutput) ToBareMetalNodePoolStatusOutput() BareMetalNodePoolStatusOutput {
	return o
}

func (o BareMetalNodePoolStatusOutput) ToBareMetalNodePoolStatusOutputWithContext(ctx context.Context) BareMetalNodePoolStatusOutput {
	return o
}

func (o BareMetalNodePoolStatusOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolStatus] {
	return pulumix.Output[BareMetalNodePoolStatus]{
		OutputState: o.OutputState,
	}
}

// (Output)
// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
// Structure is documented below.
func (o BareMetalNodePoolStatusOutput) Conditions() BareMetalNodePoolStatusConditionArrayOutput {
	return o.ApplyT(func(v BareMetalNodePoolStatus) []BareMetalNodePoolStatusCondition { return v.Conditions }).(BareMetalNodePoolStatusConditionArrayOutput)
}

// (Output)
// Human-friendly representation of the error message from the user cluster
// controller. The error message can be temporary as the user cluster
// controller creates a cluster or node pool. If the error message persists
// for a longer period of time, it can be used to surface error message to
// indicate real problems requiring user intervention.
func (o BareMetalNodePoolStatusOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolStatus) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

type BareMetalNodePoolStatusArrayOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalNodePoolStatus)(nil)).Elem()
}

func (o BareMetalNodePoolStatusArrayOutput) ToBareMetalNodePoolStatusArrayOutput() BareMetalNodePoolStatusArrayOutput {
	return o
}

func (o BareMetalNodePoolStatusArrayOutput) ToBareMetalNodePoolStatusArrayOutputWithContext(ctx context.Context) BareMetalNodePoolStatusArrayOutput {
	return o
}

func (o BareMetalNodePoolStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalNodePoolStatus] {
	return pulumix.Output[[]BareMetalNodePoolStatus]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalNodePoolStatusArrayOutput) Index(i pulumi.IntInput) BareMetalNodePoolStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalNodePoolStatus {
		return vs[0].([]BareMetalNodePoolStatus)[vs[1].(int)]
	}).(BareMetalNodePoolStatusOutput)
}

type BareMetalNodePoolStatusCondition struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`
	// Machine-readable message indicating details about last transition.
	Reason *string `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State *string `pulumi:"state"`
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type *string `pulumi:"type"`
}

// BareMetalNodePoolStatusConditionInput is an input type that accepts BareMetalNodePoolStatusConditionArgs and BareMetalNodePoolStatusConditionOutput values.
// You can construct a concrete instance of `BareMetalNodePoolStatusConditionInput` via:
//
//	BareMetalNodePoolStatusConditionArgs{...}
type BareMetalNodePoolStatusConditionInput interface {
	pulumi.Input

	ToBareMetalNodePoolStatusConditionOutput() BareMetalNodePoolStatusConditionOutput
	ToBareMetalNodePoolStatusConditionOutputWithContext(context.Context) BareMetalNodePoolStatusConditionOutput
}

type BareMetalNodePoolStatusConditionArgs struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Machine-readable message indicating details about last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BareMetalNodePoolStatusConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolStatusCondition)(nil)).Elem()
}

func (i BareMetalNodePoolStatusConditionArgs) ToBareMetalNodePoolStatusConditionOutput() BareMetalNodePoolStatusConditionOutput {
	return i.ToBareMetalNodePoolStatusConditionOutputWithContext(context.Background())
}

func (i BareMetalNodePoolStatusConditionArgs) ToBareMetalNodePoolStatusConditionOutputWithContext(ctx context.Context) BareMetalNodePoolStatusConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolStatusConditionOutput)
}

func (i BareMetalNodePoolStatusConditionArgs) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolStatusCondition] {
	return pulumix.Output[BareMetalNodePoolStatusCondition]{
		OutputState: i.ToBareMetalNodePoolStatusConditionOutputWithContext(ctx).OutputState,
	}
}

// BareMetalNodePoolStatusConditionArrayInput is an input type that accepts BareMetalNodePoolStatusConditionArray and BareMetalNodePoolStatusConditionArrayOutput values.
// You can construct a concrete instance of `BareMetalNodePoolStatusConditionArrayInput` via:
//
//	BareMetalNodePoolStatusConditionArray{ BareMetalNodePoolStatusConditionArgs{...} }
type BareMetalNodePoolStatusConditionArrayInput interface {
	pulumi.Input

	ToBareMetalNodePoolStatusConditionArrayOutput() BareMetalNodePoolStatusConditionArrayOutput
	ToBareMetalNodePoolStatusConditionArrayOutputWithContext(context.Context) BareMetalNodePoolStatusConditionArrayOutput
}

type BareMetalNodePoolStatusConditionArray []BareMetalNodePoolStatusConditionInput

func (BareMetalNodePoolStatusConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalNodePoolStatusCondition)(nil)).Elem()
}

func (i BareMetalNodePoolStatusConditionArray) ToBareMetalNodePoolStatusConditionArrayOutput() BareMetalNodePoolStatusConditionArrayOutput {
	return i.ToBareMetalNodePoolStatusConditionArrayOutputWithContext(context.Background())
}

func (i BareMetalNodePoolStatusConditionArray) ToBareMetalNodePoolStatusConditionArrayOutputWithContext(ctx context.Context) BareMetalNodePoolStatusConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolStatusConditionArrayOutput)
}

func (i BareMetalNodePoolStatusConditionArray) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalNodePoolStatusCondition] {
	return pulumix.Output[[]BareMetalNodePoolStatusCondition]{
		OutputState: i.ToBareMetalNodePoolStatusConditionArrayOutputWithContext(ctx).OutputState,
	}
}

type BareMetalNodePoolStatusConditionOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolStatusConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BareMetalNodePoolStatusCondition)(nil)).Elem()
}

func (o BareMetalNodePoolStatusConditionOutput) ToBareMetalNodePoolStatusConditionOutput() BareMetalNodePoolStatusConditionOutput {
	return o
}

func (o BareMetalNodePoolStatusConditionOutput) ToBareMetalNodePoolStatusConditionOutputWithContext(ctx context.Context) BareMetalNodePoolStatusConditionOutput {
	return o
}

func (o BareMetalNodePoolStatusConditionOutput) ToOutput(ctx context.Context) pulumix.Output[BareMetalNodePoolStatusCondition] {
	return pulumix.Output[BareMetalNodePoolStatusCondition]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Last time the condition transit from one status to another.
func (o BareMetalNodePoolStatusConditionOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolStatusCondition) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about last transition.
func (o BareMetalNodePoolStatusConditionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolStatusCondition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Machine-readable message indicating details about last transition.
func (o BareMetalNodePoolStatusConditionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolStatusCondition) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// (Output)
// The lifecycle state of the condition.
func (o BareMetalNodePoolStatusConditionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolStatusCondition) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Type of the condition.
// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
func (o BareMetalNodePoolStatusConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BareMetalNodePoolStatusCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BareMetalNodePoolStatusConditionArrayOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolStatusConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BareMetalNodePoolStatusCondition)(nil)).Elem()
}

func (o BareMetalNodePoolStatusConditionArrayOutput) ToBareMetalNodePoolStatusConditionArrayOutput() BareMetalNodePoolStatusConditionArrayOutput {
	return o
}

func (o BareMetalNodePoolStatusConditionArrayOutput) ToBareMetalNodePoolStatusConditionArrayOutputWithContext(ctx context.Context) BareMetalNodePoolStatusConditionArrayOutput {
	return o
}

func (o BareMetalNodePoolStatusConditionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]BareMetalNodePoolStatusCondition] {
	return pulumix.Output[[]BareMetalNodePoolStatusCondition]{
		OutputState: o.OutputState,
	}
}

func (o BareMetalNodePoolStatusConditionArrayOutput) Index(i pulumi.IntInput) BareMetalNodePoolStatusConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BareMetalNodePoolStatusCondition {
		return vs[0].([]BareMetalNodePoolStatusCondition)[vs[1].(int)]
	}).(BareMetalNodePoolStatusConditionOutput)
}

type VMwareClusterAntiAffinityGroups struct {
	// Spread nodes across at least three physical hosts (requires at least three
	// hosts).
	// Enabled by default.
	AagConfigDisabled bool `pulumi:"aagConfigDisabled"`
}

// VMwareClusterAntiAffinityGroupsInput is an input type that accepts VMwareClusterAntiAffinityGroupsArgs and VMwareClusterAntiAffinityGroupsOutput values.
// You can construct a concrete instance of `VMwareClusterAntiAffinityGroupsInput` via:
//
//	VMwareClusterAntiAffinityGroupsArgs{...}
type VMwareClusterAntiAffinityGroupsInput interface {
	pulumi.Input

	ToVMwareClusterAntiAffinityGroupsOutput() VMwareClusterAntiAffinityGroupsOutput
	ToVMwareClusterAntiAffinityGroupsOutputWithContext(context.Context) VMwareClusterAntiAffinityGroupsOutput
}

type VMwareClusterAntiAffinityGroupsArgs struct {
	// Spread nodes across at least three physical hosts (requires at least three
	// hosts).
	// Enabled by default.
	AagConfigDisabled pulumi.BoolInput `pulumi:"aagConfigDisabled"`
}

func (VMwareClusterAntiAffinityGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterAntiAffinityGroups)(nil)).Elem()
}

func (i VMwareClusterAntiAffinityGroupsArgs) ToVMwareClusterAntiAffinityGroupsOutput() VMwareClusterAntiAffinityGroupsOutput {
	return i.ToVMwareClusterAntiAffinityGroupsOutputWithContext(context.Background())
}

func (i VMwareClusterAntiAffinityGroupsArgs) ToVMwareClusterAntiAffinityGroupsOutputWithContext(ctx context.Context) VMwareClusterAntiAffinityGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAntiAffinityGroupsOutput)
}

func (i VMwareClusterAntiAffinityGroupsArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterAntiAffinityGroups] {
	return pulumix.Output[VMwareClusterAntiAffinityGroups]{
		OutputState: i.ToVMwareClusterAntiAffinityGroupsOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterAntiAffinityGroupsArgs) ToVMwareClusterAntiAffinityGroupsPtrOutput() VMwareClusterAntiAffinityGroupsPtrOutput {
	return i.ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(context.Background())
}

func (i VMwareClusterAntiAffinityGroupsArgs) ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(ctx context.Context) VMwareClusterAntiAffinityGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAntiAffinityGroupsOutput).ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(ctx)
}

// VMwareClusterAntiAffinityGroupsPtrInput is an input type that accepts VMwareClusterAntiAffinityGroupsArgs, VMwareClusterAntiAffinityGroupsPtr and VMwareClusterAntiAffinityGroupsPtrOutput values.
// You can construct a concrete instance of `VMwareClusterAntiAffinityGroupsPtrInput` via:
//
//	        VMwareClusterAntiAffinityGroupsArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterAntiAffinityGroupsPtrInput interface {
	pulumi.Input

	ToVMwareClusterAntiAffinityGroupsPtrOutput() VMwareClusterAntiAffinityGroupsPtrOutput
	ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(context.Context) VMwareClusterAntiAffinityGroupsPtrOutput
}

type vmwareClusterAntiAffinityGroupsPtrType VMwareClusterAntiAffinityGroupsArgs

func VMwareClusterAntiAffinityGroupsPtr(v *VMwareClusterAntiAffinityGroupsArgs) VMwareClusterAntiAffinityGroupsPtrInput {
	return (*vmwareClusterAntiAffinityGroupsPtrType)(v)
}

func (*vmwareClusterAntiAffinityGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterAntiAffinityGroups)(nil)).Elem()
}

func (i *vmwareClusterAntiAffinityGroupsPtrType) ToVMwareClusterAntiAffinityGroupsPtrOutput() VMwareClusterAntiAffinityGroupsPtrOutput {
	return i.ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterAntiAffinityGroupsPtrType) ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(ctx context.Context) VMwareClusterAntiAffinityGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAntiAffinityGroupsPtrOutput)
}

func (i *vmwareClusterAntiAffinityGroupsPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterAntiAffinityGroups] {
	return pulumix.Output[*VMwareClusterAntiAffinityGroups]{
		OutputState: i.ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterAntiAffinityGroupsOutput struct{ *pulumi.OutputState }

func (VMwareClusterAntiAffinityGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterAntiAffinityGroups)(nil)).Elem()
}

func (o VMwareClusterAntiAffinityGroupsOutput) ToVMwareClusterAntiAffinityGroupsOutput() VMwareClusterAntiAffinityGroupsOutput {
	return o
}

func (o VMwareClusterAntiAffinityGroupsOutput) ToVMwareClusterAntiAffinityGroupsOutputWithContext(ctx context.Context) VMwareClusterAntiAffinityGroupsOutput {
	return o
}

func (o VMwareClusterAntiAffinityGroupsOutput) ToVMwareClusterAntiAffinityGroupsPtrOutput() VMwareClusterAntiAffinityGroupsPtrOutput {
	return o.ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(context.Background())
}

func (o VMwareClusterAntiAffinityGroupsOutput) ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(ctx context.Context) VMwareClusterAntiAffinityGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterAntiAffinityGroups) *VMwareClusterAntiAffinityGroups {
		return &v
	}).(VMwareClusterAntiAffinityGroupsPtrOutput)
}

func (o VMwareClusterAntiAffinityGroupsOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterAntiAffinityGroups] {
	return pulumix.Output[VMwareClusterAntiAffinityGroups]{
		OutputState: o.OutputState,
	}
}

// Spread nodes across at least three physical hosts (requires at least three
// hosts).
// Enabled by default.
func (o VMwareClusterAntiAffinityGroupsOutput) AagConfigDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VMwareClusterAntiAffinityGroups) bool { return v.AagConfigDisabled }).(pulumi.BoolOutput)
}

type VMwareClusterAntiAffinityGroupsPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterAntiAffinityGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterAntiAffinityGroups)(nil)).Elem()
}

func (o VMwareClusterAntiAffinityGroupsPtrOutput) ToVMwareClusterAntiAffinityGroupsPtrOutput() VMwareClusterAntiAffinityGroupsPtrOutput {
	return o
}

func (o VMwareClusterAntiAffinityGroupsPtrOutput) ToVMwareClusterAntiAffinityGroupsPtrOutputWithContext(ctx context.Context) VMwareClusterAntiAffinityGroupsPtrOutput {
	return o
}

func (o VMwareClusterAntiAffinityGroupsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterAntiAffinityGroups] {
	return pulumix.Output[*VMwareClusterAntiAffinityGroups]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterAntiAffinityGroupsPtrOutput) Elem() VMwareClusterAntiAffinityGroupsOutput {
	return o.ApplyT(func(v *VMwareClusterAntiAffinityGroups) VMwareClusterAntiAffinityGroups {
		if v != nil {
			return *v
		}
		var ret VMwareClusterAntiAffinityGroups
		return ret
	}).(VMwareClusterAntiAffinityGroupsOutput)
}

// Spread nodes across at least three physical hosts (requires at least three
// hosts).
// Enabled by default.
func (o VMwareClusterAntiAffinityGroupsPtrOutput) AagConfigDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMwareClusterAntiAffinityGroups) *bool {
		if v == nil {
			return nil
		}
		return &v.AagConfigDisabled
	}).(pulumi.BoolPtrOutput)
}

type VMwareClusterAuthorization struct {
	// Users that will be granted the cluster-admin role on the cluster, providing
	// full access to the cluster.
	// Structure is documented below.
	AdminUsers []VMwareClusterAuthorizationAdminUser `pulumi:"adminUsers"`
}

// VMwareClusterAuthorizationInput is an input type that accepts VMwareClusterAuthorizationArgs and VMwareClusterAuthorizationOutput values.
// You can construct a concrete instance of `VMwareClusterAuthorizationInput` via:
//
//	VMwareClusterAuthorizationArgs{...}
type VMwareClusterAuthorizationInput interface {
	pulumi.Input

	ToVMwareClusterAuthorizationOutput() VMwareClusterAuthorizationOutput
	ToVMwareClusterAuthorizationOutputWithContext(context.Context) VMwareClusterAuthorizationOutput
}

type VMwareClusterAuthorizationArgs struct {
	// Users that will be granted the cluster-admin role on the cluster, providing
	// full access to the cluster.
	// Structure is documented below.
	AdminUsers VMwareClusterAuthorizationAdminUserArrayInput `pulumi:"adminUsers"`
}

func (VMwareClusterAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterAuthorization)(nil)).Elem()
}

func (i VMwareClusterAuthorizationArgs) ToVMwareClusterAuthorizationOutput() VMwareClusterAuthorizationOutput {
	return i.ToVMwareClusterAuthorizationOutputWithContext(context.Background())
}

func (i VMwareClusterAuthorizationArgs) ToVMwareClusterAuthorizationOutputWithContext(ctx context.Context) VMwareClusterAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAuthorizationOutput)
}

func (i VMwareClusterAuthorizationArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterAuthorization] {
	return pulumix.Output[VMwareClusterAuthorization]{
		OutputState: i.ToVMwareClusterAuthorizationOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterAuthorizationArgs) ToVMwareClusterAuthorizationPtrOutput() VMwareClusterAuthorizationPtrOutput {
	return i.ToVMwareClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i VMwareClusterAuthorizationArgs) ToVMwareClusterAuthorizationPtrOutputWithContext(ctx context.Context) VMwareClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAuthorizationOutput).ToVMwareClusterAuthorizationPtrOutputWithContext(ctx)
}

// VMwareClusterAuthorizationPtrInput is an input type that accepts VMwareClusterAuthorizationArgs, VMwareClusterAuthorizationPtr and VMwareClusterAuthorizationPtrOutput values.
// You can construct a concrete instance of `VMwareClusterAuthorizationPtrInput` via:
//
//	        VMwareClusterAuthorizationArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterAuthorizationPtrInput interface {
	pulumi.Input

	ToVMwareClusterAuthorizationPtrOutput() VMwareClusterAuthorizationPtrOutput
	ToVMwareClusterAuthorizationPtrOutputWithContext(context.Context) VMwareClusterAuthorizationPtrOutput
}

type vmwareClusterAuthorizationPtrType VMwareClusterAuthorizationArgs

func VMwareClusterAuthorizationPtr(v *VMwareClusterAuthorizationArgs) VMwareClusterAuthorizationPtrInput {
	return (*vmwareClusterAuthorizationPtrType)(v)
}

func (*vmwareClusterAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterAuthorization)(nil)).Elem()
}

func (i *vmwareClusterAuthorizationPtrType) ToVMwareClusterAuthorizationPtrOutput() VMwareClusterAuthorizationPtrOutput {
	return i.ToVMwareClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterAuthorizationPtrType) ToVMwareClusterAuthorizationPtrOutputWithContext(ctx context.Context) VMwareClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAuthorizationPtrOutput)
}

func (i *vmwareClusterAuthorizationPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterAuthorization] {
	return pulumix.Output[*VMwareClusterAuthorization]{
		OutputState: i.ToVMwareClusterAuthorizationPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterAuthorizationOutput struct{ *pulumi.OutputState }

func (VMwareClusterAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterAuthorization)(nil)).Elem()
}

func (o VMwareClusterAuthorizationOutput) ToVMwareClusterAuthorizationOutput() VMwareClusterAuthorizationOutput {
	return o
}

func (o VMwareClusterAuthorizationOutput) ToVMwareClusterAuthorizationOutputWithContext(ctx context.Context) VMwareClusterAuthorizationOutput {
	return o
}

func (o VMwareClusterAuthorizationOutput) ToVMwareClusterAuthorizationPtrOutput() VMwareClusterAuthorizationPtrOutput {
	return o.ToVMwareClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (o VMwareClusterAuthorizationOutput) ToVMwareClusterAuthorizationPtrOutputWithContext(ctx context.Context) VMwareClusterAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterAuthorization) *VMwareClusterAuthorization {
		return &v
	}).(VMwareClusterAuthorizationPtrOutput)
}

func (o VMwareClusterAuthorizationOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterAuthorization] {
	return pulumix.Output[VMwareClusterAuthorization]{
		OutputState: o.OutputState,
	}
}

// Users that will be granted the cluster-admin role on the cluster, providing
// full access to the cluster.
// Structure is documented below.
func (o VMwareClusterAuthorizationOutput) AdminUsers() VMwareClusterAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v VMwareClusterAuthorization) []VMwareClusterAuthorizationAdminUser { return v.AdminUsers }).(VMwareClusterAuthorizationAdminUserArrayOutput)
}

type VMwareClusterAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterAuthorization)(nil)).Elem()
}

func (o VMwareClusterAuthorizationPtrOutput) ToVMwareClusterAuthorizationPtrOutput() VMwareClusterAuthorizationPtrOutput {
	return o
}

func (o VMwareClusterAuthorizationPtrOutput) ToVMwareClusterAuthorizationPtrOutputWithContext(ctx context.Context) VMwareClusterAuthorizationPtrOutput {
	return o
}

func (o VMwareClusterAuthorizationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterAuthorization] {
	return pulumix.Output[*VMwareClusterAuthorization]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterAuthorizationPtrOutput) Elem() VMwareClusterAuthorizationOutput {
	return o.ApplyT(func(v *VMwareClusterAuthorization) VMwareClusterAuthorization {
		if v != nil {
			return *v
		}
		var ret VMwareClusterAuthorization
		return ret
	}).(VMwareClusterAuthorizationOutput)
}

// Users that will be granted the cluster-admin role on the cluster, providing
// full access to the cluster.
// Structure is documented below.
func (o VMwareClusterAuthorizationPtrOutput) AdminUsers() VMwareClusterAuthorizationAdminUserArrayOutput {
	return o.ApplyT(func(v *VMwareClusterAuthorization) []VMwareClusterAuthorizationAdminUser {
		if v == nil {
			return nil
		}
		return v.AdminUsers
	}).(VMwareClusterAuthorizationAdminUserArrayOutput)
}

type VMwareClusterAuthorizationAdminUser struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username string `pulumi:"username"`
}

// VMwareClusterAuthorizationAdminUserInput is an input type that accepts VMwareClusterAuthorizationAdminUserArgs and VMwareClusterAuthorizationAdminUserOutput values.
// You can construct a concrete instance of `VMwareClusterAuthorizationAdminUserInput` via:
//
//	VMwareClusterAuthorizationAdminUserArgs{...}
type VMwareClusterAuthorizationAdminUserInput interface {
	pulumi.Input

	ToVMwareClusterAuthorizationAdminUserOutput() VMwareClusterAuthorizationAdminUserOutput
	ToVMwareClusterAuthorizationAdminUserOutputWithContext(context.Context) VMwareClusterAuthorizationAdminUserOutput
}

type VMwareClusterAuthorizationAdminUserArgs struct {
	// The name of the user, e.g. `my-gcp-id@gmail.com`.
	Username pulumi.StringInput `pulumi:"username"`
}

func (VMwareClusterAuthorizationAdminUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterAuthorizationAdminUser)(nil)).Elem()
}

func (i VMwareClusterAuthorizationAdminUserArgs) ToVMwareClusterAuthorizationAdminUserOutput() VMwareClusterAuthorizationAdminUserOutput {
	return i.ToVMwareClusterAuthorizationAdminUserOutputWithContext(context.Background())
}

func (i VMwareClusterAuthorizationAdminUserArgs) ToVMwareClusterAuthorizationAdminUserOutputWithContext(ctx context.Context) VMwareClusterAuthorizationAdminUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAuthorizationAdminUserOutput)
}

func (i VMwareClusterAuthorizationAdminUserArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterAuthorizationAdminUser] {
	return pulumix.Output[VMwareClusterAuthorizationAdminUser]{
		OutputState: i.ToVMwareClusterAuthorizationAdminUserOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterAuthorizationAdminUserArrayInput is an input type that accepts VMwareClusterAuthorizationAdminUserArray and VMwareClusterAuthorizationAdminUserArrayOutput values.
// You can construct a concrete instance of `VMwareClusterAuthorizationAdminUserArrayInput` via:
//
//	VMwareClusterAuthorizationAdminUserArray{ VMwareClusterAuthorizationAdminUserArgs{...} }
type VMwareClusterAuthorizationAdminUserArrayInput interface {
	pulumi.Input

	ToVMwareClusterAuthorizationAdminUserArrayOutput() VMwareClusterAuthorizationAdminUserArrayOutput
	ToVMwareClusterAuthorizationAdminUserArrayOutputWithContext(context.Context) VMwareClusterAuthorizationAdminUserArrayOutput
}

type VMwareClusterAuthorizationAdminUserArray []VMwareClusterAuthorizationAdminUserInput

func (VMwareClusterAuthorizationAdminUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterAuthorizationAdminUser)(nil)).Elem()
}

func (i VMwareClusterAuthorizationAdminUserArray) ToVMwareClusterAuthorizationAdminUserArrayOutput() VMwareClusterAuthorizationAdminUserArrayOutput {
	return i.ToVMwareClusterAuthorizationAdminUserArrayOutputWithContext(context.Background())
}

func (i VMwareClusterAuthorizationAdminUserArray) ToVMwareClusterAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) VMwareClusterAuthorizationAdminUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAuthorizationAdminUserArrayOutput)
}

func (i VMwareClusterAuthorizationAdminUserArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterAuthorizationAdminUser] {
	return pulumix.Output[[]VMwareClusterAuthorizationAdminUser]{
		OutputState: i.ToVMwareClusterAuthorizationAdminUserArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterAuthorizationAdminUserOutput struct{ *pulumi.OutputState }

func (VMwareClusterAuthorizationAdminUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterAuthorizationAdminUser)(nil)).Elem()
}

func (o VMwareClusterAuthorizationAdminUserOutput) ToVMwareClusterAuthorizationAdminUserOutput() VMwareClusterAuthorizationAdminUserOutput {
	return o
}

func (o VMwareClusterAuthorizationAdminUserOutput) ToVMwareClusterAuthorizationAdminUserOutputWithContext(ctx context.Context) VMwareClusterAuthorizationAdminUserOutput {
	return o
}

func (o VMwareClusterAuthorizationAdminUserOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterAuthorizationAdminUser] {
	return pulumix.Output[VMwareClusterAuthorizationAdminUser]{
		OutputState: o.OutputState,
	}
}

// The name of the user, e.g. `my-gcp-id@gmail.com`.
func (o VMwareClusterAuthorizationAdminUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareClusterAuthorizationAdminUser) string { return v.Username }).(pulumi.StringOutput)
}

type VMwareClusterAuthorizationAdminUserArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterAuthorizationAdminUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterAuthorizationAdminUser)(nil)).Elem()
}

func (o VMwareClusterAuthorizationAdminUserArrayOutput) ToVMwareClusterAuthorizationAdminUserArrayOutput() VMwareClusterAuthorizationAdminUserArrayOutput {
	return o
}

func (o VMwareClusterAuthorizationAdminUserArrayOutput) ToVMwareClusterAuthorizationAdminUserArrayOutputWithContext(ctx context.Context) VMwareClusterAuthorizationAdminUserArrayOutput {
	return o
}

func (o VMwareClusterAuthorizationAdminUserArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterAuthorizationAdminUser] {
	return pulumix.Output[[]VMwareClusterAuthorizationAdminUser]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterAuthorizationAdminUserArrayOutput) Index(i pulumi.IntInput) VMwareClusterAuthorizationAdminUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterAuthorizationAdminUser {
		return vs[0].([]VMwareClusterAuthorizationAdminUser)[vs[1].(int)]
	}).(VMwareClusterAuthorizationAdminUserOutput)
}

type VMwareClusterAutoRepairConfig struct {
	// Whether auto repair is enabled.
	Enabled bool `pulumi:"enabled"`
}

// VMwareClusterAutoRepairConfigInput is an input type that accepts VMwareClusterAutoRepairConfigArgs and VMwareClusterAutoRepairConfigOutput values.
// You can construct a concrete instance of `VMwareClusterAutoRepairConfigInput` via:
//
//	VMwareClusterAutoRepairConfigArgs{...}
type VMwareClusterAutoRepairConfigInput interface {
	pulumi.Input

	ToVMwareClusterAutoRepairConfigOutput() VMwareClusterAutoRepairConfigOutput
	ToVMwareClusterAutoRepairConfigOutputWithContext(context.Context) VMwareClusterAutoRepairConfigOutput
}

type VMwareClusterAutoRepairConfigArgs struct {
	// Whether auto repair is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VMwareClusterAutoRepairConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterAutoRepairConfig)(nil)).Elem()
}

func (i VMwareClusterAutoRepairConfigArgs) ToVMwareClusterAutoRepairConfigOutput() VMwareClusterAutoRepairConfigOutput {
	return i.ToVMwareClusterAutoRepairConfigOutputWithContext(context.Background())
}

func (i VMwareClusterAutoRepairConfigArgs) ToVMwareClusterAutoRepairConfigOutputWithContext(ctx context.Context) VMwareClusterAutoRepairConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAutoRepairConfigOutput)
}

func (i VMwareClusterAutoRepairConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterAutoRepairConfig] {
	return pulumix.Output[VMwareClusterAutoRepairConfig]{
		OutputState: i.ToVMwareClusterAutoRepairConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterAutoRepairConfigArgs) ToVMwareClusterAutoRepairConfigPtrOutput() VMwareClusterAutoRepairConfigPtrOutput {
	return i.ToVMwareClusterAutoRepairConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterAutoRepairConfigArgs) ToVMwareClusterAutoRepairConfigPtrOutputWithContext(ctx context.Context) VMwareClusterAutoRepairConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAutoRepairConfigOutput).ToVMwareClusterAutoRepairConfigPtrOutputWithContext(ctx)
}

// VMwareClusterAutoRepairConfigPtrInput is an input type that accepts VMwareClusterAutoRepairConfigArgs, VMwareClusterAutoRepairConfigPtr and VMwareClusterAutoRepairConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterAutoRepairConfigPtrInput` via:
//
//	        VMwareClusterAutoRepairConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterAutoRepairConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterAutoRepairConfigPtrOutput() VMwareClusterAutoRepairConfigPtrOutput
	ToVMwareClusterAutoRepairConfigPtrOutputWithContext(context.Context) VMwareClusterAutoRepairConfigPtrOutput
}

type vmwareClusterAutoRepairConfigPtrType VMwareClusterAutoRepairConfigArgs

func VMwareClusterAutoRepairConfigPtr(v *VMwareClusterAutoRepairConfigArgs) VMwareClusterAutoRepairConfigPtrInput {
	return (*vmwareClusterAutoRepairConfigPtrType)(v)
}

func (*vmwareClusterAutoRepairConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterAutoRepairConfig)(nil)).Elem()
}

func (i *vmwareClusterAutoRepairConfigPtrType) ToVMwareClusterAutoRepairConfigPtrOutput() VMwareClusterAutoRepairConfigPtrOutput {
	return i.ToVMwareClusterAutoRepairConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterAutoRepairConfigPtrType) ToVMwareClusterAutoRepairConfigPtrOutputWithContext(ctx context.Context) VMwareClusterAutoRepairConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterAutoRepairConfigPtrOutput)
}

func (i *vmwareClusterAutoRepairConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterAutoRepairConfig] {
	return pulumix.Output[*VMwareClusterAutoRepairConfig]{
		OutputState: i.ToVMwareClusterAutoRepairConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterAutoRepairConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterAutoRepairConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterAutoRepairConfig)(nil)).Elem()
}

func (o VMwareClusterAutoRepairConfigOutput) ToVMwareClusterAutoRepairConfigOutput() VMwareClusterAutoRepairConfigOutput {
	return o
}

func (o VMwareClusterAutoRepairConfigOutput) ToVMwareClusterAutoRepairConfigOutputWithContext(ctx context.Context) VMwareClusterAutoRepairConfigOutput {
	return o
}

func (o VMwareClusterAutoRepairConfigOutput) ToVMwareClusterAutoRepairConfigPtrOutput() VMwareClusterAutoRepairConfigPtrOutput {
	return o.ToVMwareClusterAutoRepairConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterAutoRepairConfigOutput) ToVMwareClusterAutoRepairConfigPtrOutputWithContext(ctx context.Context) VMwareClusterAutoRepairConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterAutoRepairConfig) *VMwareClusterAutoRepairConfig {
		return &v
	}).(VMwareClusterAutoRepairConfigPtrOutput)
}

func (o VMwareClusterAutoRepairConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterAutoRepairConfig] {
	return pulumix.Output[VMwareClusterAutoRepairConfig]{
		OutputState: o.OutputState,
	}
}

// Whether auto repair is enabled.
func (o VMwareClusterAutoRepairConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VMwareClusterAutoRepairConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VMwareClusterAutoRepairConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterAutoRepairConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterAutoRepairConfig)(nil)).Elem()
}

func (o VMwareClusterAutoRepairConfigPtrOutput) ToVMwareClusterAutoRepairConfigPtrOutput() VMwareClusterAutoRepairConfigPtrOutput {
	return o
}

func (o VMwareClusterAutoRepairConfigPtrOutput) ToVMwareClusterAutoRepairConfigPtrOutputWithContext(ctx context.Context) VMwareClusterAutoRepairConfigPtrOutput {
	return o
}

func (o VMwareClusterAutoRepairConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterAutoRepairConfig] {
	return pulumix.Output[*VMwareClusterAutoRepairConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterAutoRepairConfigPtrOutput) Elem() VMwareClusterAutoRepairConfigOutput {
	return o.ApplyT(func(v *VMwareClusterAutoRepairConfig) VMwareClusterAutoRepairConfig {
		if v != nil {
			return *v
		}
		var ret VMwareClusterAutoRepairConfig
		return ret
	}).(VMwareClusterAutoRepairConfigOutput)
}

// Whether auto repair is enabled.
func (o VMwareClusterAutoRepairConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMwareClusterAutoRepairConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VMwareClusterControlPlaneNode struct {
	// AutoResizeConfig provides auto resizing configurations.
	// Structure is documented below.
	AutoResizeConfig *VMwareClusterControlPlaneNodeAutoResizeConfig `pulumi:"autoResizeConfig"`
	// The number of CPUs for each admin cluster node that serve as control planes
	// for this VMware User Cluster. (default: 4 CPUs)
	Cpus *int `pulumi:"cpus"`
	// The megabytes of memory for each admin cluster node that serves as a
	// control plane for this VMware User Cluster (default: 8192 MB memory).
	Memory *int `pulumi:"memory"`
	// The number of control plane nodes for this VMware User Cluster.
	// (default: 1 replica).
	Replicas *int `pulumi:"replicas"`
	// (Output)
	// Vsphere-specific config.
	// Structure is documented below.
	VsphereConfigs []VMwareClusterControlPlaneNodeVsphereConfig `pulumi:"vsphereConfigs"`
}

// VMwareClusterControlPlaneNodeInput is an input type that accepts VMwareClusterControlPlaneNodeArgs and VMwareClusterControlPlaneNodeOutput values.
// You can construct a concrete instance of `VMwareClusterControlPlaneNodeInput` via:
//
//	VMwareClusterControlPlaneNodeArgs{...}
type VMwareClusterControlPlaneNodeInput interface {
	pulumi.Input

	ToVMwareClusterControlPlaneNodeOutput() VMwareClusterControlPlaneNodeOutput
	ToVMwareClusterControlPlaneNodeOutputWithContext(context.Context) VMwareClusterControlPlaneNodeOutput
}

type VMwareClusterControlPlaneNodeArgs struct {
	// AutoResizeConfig provides auto resizing configurations.
	// Structure is documented below.
	AutoResizeConfig VMwareClusterControlPlaneNodeAutoResizeConfigPtrInput `pulumi:"autoResizeConfig"`
	// The number of CPUs for each admin cluster node that serve as control planes
	// for this VMware User Cluster. (default: 4 CPUs)
	Cpus pulumi.IntPtrInput `pulumi:"cpus"`
	// The megabytes of memory for each admin cluster node that serves as a
	// control plane for this VMware User Cluster (default: 8192 MB memory).
	Memory pulumi.IntPtrInput `pulumi:"memory"`
	// The number of control plane nodes for this VMware User Cluster.
	// (default: 1 replica).
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// (Output)
	// Vsphere-specific config.
	// Structure is documented below.
	VsphereConfigs VMwareClusterControlPlaneNodeVsphereConfigArrayInput `pulumi:"vsphereConfigs"`
}

func (VMwareClusterControlPlaneNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterControlPlaneNode)(nil)).Elem()
}

func (i VMwareClusterControlPlaneNodeArgs) ToVMwareClusterControlPlaneNodeOutput() VMwareClusterControlPlaneNodeOutput {
	return i.ToVMwareClusterControlPlaneNodeOutputWithContext(context.Background())
}

func (i VMwareClusterControlPlaneNodeArgs) ToVMwareClusterControlPlaneNodeOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterControlPlaneNodeOutput)
}

func (i VMwareClusterControlPlaneNodeArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterControlPlaneNode] {
	return pulumix.Output[VMwareClusterControlPlaneNode]{
		OutputState: i.ToVMwareClusterControlPlaneNodeOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterControlPlaneNodeArgs) ToVMwareClusterControlPlaneNodePtrOutput() VMwareClusterControlPlaneNodePtrOutput {
	return i.ToVMwareClusterControlPlaneNodePtrOutputWithContext(context.Background())
}

func (i VMwareClusterControlPlaneNodeArgs) ToVMwareClusterControlPlaneNodePtrOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterControlPlaneNodeOutput).ToVMwareClusterControlPlaneNodePtrOutputWithContext(ctx)
}

// VMwareClusterControlPlaneNodePtrInput is an input type that accepts VMwareClusterControlPlaneNodeArgs, VMwareClusterControlPlaneNodePtr and VMwareClusterControlPlaneNodePtrOutput values.
// You can construct a concrete instance of `VMwareClusterControlPlaneNodePtrInput` via:
//
//	        VMwareClusterControlPlaneNodeArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterControlPlaneNodePtrInput interface {
	pulumi.Input

	ToVMwareClusterControlPlaneNodePtrOutput() VMwareClusterControlPlaneNodePtrOutput
	ToVMwareClusterControlPlaneNodePtrOutputWithContext(context.Context) VMwareClusterControlPlaneNodePtrOutput
}

type vmwareClusterControlPlaneNodePtrType VMwareClusterControlPlaneNodeArgs

func VMwareClusterControlPlaneNodePtr(v *VMwareClusterControlPlaneNodeArgs) VMwareClusterControlPlaneNodePtrInput {
	return (*vmwareClusterControlPlaneNodePtrType)(v)
}

func (*vmwareClusterControlPlaneNodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterControlPlaneNode)(nil)).Elem()
}

func (i *vmwareClusterControlPlaneNodePtrType) ToVMwareClusterControlPlaneNodePtrOutput() VMwareClusterControlPlaneNodePtrOutput {
	return i.ToVMwareClusterControlPlaneNodePtrOutputWithContext(context.Background())
}

func (i *vmwareClusterControlPlaneNodePtrType) ToVMwareClusterControlPlaneNodePtrOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterControlPlaneNodePtrOutput)
}

func (i *vmwareClusterControlPlaneNodePtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterControlPlaneNode] {
	return pulumix.Output[*VMwareClusterControlPlaneNode]{
		OutputState: i.ToVMwareClusterControlPlaneNodePtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterControlPlaneNodeOutput struct{ *pulumi.OutputState }

func (VMwareClusterControlPlaneNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterControlPlaneNode)(nil)).Elem()
}

func (o VMwareClusterControlPlaneNodeOutput) ToVMwareClusterControlPlaneNodeOutput() VMwareClusterControlPlaneNodeOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeOutput) ToVMwareClusterControlPlaneNodeOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeOutput) ToVMwareClusterControlPlaneNodePtrOutput() VMwareClusterControlPlaneNodePtrOutput {
	return o.ToVMwareClusterControlPlaneNodePtrOutputWithContext(context.Background())
}

func (o VMwareClusterControlPlaneNodeOutput) ToVMwareClusterControlPlaneNodePtrOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterControlPlaneNode) *VMwareClusterControlPlaneNode {
		return &v
	}).(VMwareClusterControlPlaneNodePtrOutput)
}

func (o VMwareClusterControlPlaneNodeOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterControlPlaneNode] {
	return pulumix.Output[VMwareClusterControlPlaneNode]{
		OutputState: o.OutputState,
	}
}

// AutoResizeConfig provides auto resizing configurations.
// Structure is documented below.
func (o VMwareClusterControlPlaneNodeOutput) AutoResizeConfig() VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return o.ApplyT(func(v VMwareClusterControlPlaneNode) *VMwareClusterControlPlaneNodeAutoResizeConfig {
		return v.AutoResizeConfig
	}).(VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput)
}

// The number of CPUs for each admin cluster node that serve as control planes
// for this VMware User Cluster. (default: 4 CPUs)
func (o VMwareClusterControlPlaneNodeOutput) Cpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareClusterControlPlaneNode) *int { return v.Cpus }).(pulumi.IntPtrOutput)
}

// The megabytes of memory for each admin cluster node that serves as a
// control plane for this VMware User Cluster (default: 8192 MB memory).
func (o VMwareClusterControlPlaneNodeOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareClusterControlPlaneNode) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

// The number of control plane nodes for this VMware User Cluster.
// (default: 1 replica).
func (o VMwareClusterControlPlaneNodeOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareClusterControlPlaneNode) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// (Output)
// Vsphere-specific config.
// Structure is documented below.
func (o VMwareClusterControlPlaneNodeOutput) VsphereConfigs() VMwareClusterControlPlaneNodeVsphereConfigArrayOutput {
	return o.ApplyT(func(v VMwareClusterControlPlaneNode) []VMwareClusterControlPlaneNodeVsphereConfig {
		return v.VsphereConfigs
	}).(VMwareClusterControlPlaneNodeVsphereConfigArrayOutput)
}

type VMwareClusterControlPlaneNodePtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterControlPlaneNodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterControlPlaneNode)(nil)).Elem()
}

func (o VMwareClusterControlPlaneNodePtrOutput) ToVMwareClusterControlPlaneNodePtrOutput() VMwareClusterControlPlaneNodePtrOutput {
	return o
}

func (o VMwareClusterControlPlaneNodePtrOutput) ToVMwareClusterControlPlaneNodePtrOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodePtrOutput {
	return o
}

func (o VMwareClusterControlPlaneNodePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterControlPlaneNode] {
	return pulumix.Output[*VMwareClusterControlPlaneNode]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterControlPlaneNodePtrOutput) Elem() VMwareClusterControlPlaneNodeOutput {
	return o.ApplyT(func(v *VMwareClusterControlPlaneNode) VMwareClusterControlPlaneNode {
		if v != nil {
			return *v
		}
		var ret VMwareClusterControlPlaneNode
		return ret
	}).(VMwareClusterControlPlaneNodeOutput)
}

// AutoResizeConfig provides auto resizing configurations.
// Structure is documented below.
func (o VMwareClusterControlPlaneNodePtrOutput) AutoResizeConfig() VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return o.ApplyT(func(v *VMwareClusterControlPlaneNode) *VMwareClusterControlPlaneNodeAutoResizeConfig {
		if v == nil {
			return nil
		}
		return v.AutoResizeConfig
	}).(VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput)
}

// The number of CPUs for each admin cluster node that serve as control planes
// for this VMware User Cluster. (default: 4 CPUs)
func (o VMwareClusterControlPlaneNodePtrOutput) Cpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareClusterControlPlaneNode) *int {
		if v == nil {
			return nil
		}
		return v.Cpus
	}).(pulumi.IntPtrOutput)
}

// The megabytes of memory for each admin cluster node that serves as a
// control plane for this VMware User Cluster (default: 8192 MB memory).
func (o VMwareClusterControlPlaneNodePtrOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareClusterControlPlaneNode) *int {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.IntPtrOutput)
}

// The number of control plane nodes for this VMware User Cluster.
// (default: 1 replica).
func (o VMwareClusterControlPlaneNodePtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareClusterControlPlaneNode) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// (Output)
// Vsphere-specific config.
// Structure is documented below.
func (o VMwareClusterControlPlaneNodePtrOutput) VsphereConfigs() VMwareClusterControlPlaneNodeVsphereConfigArrayOutput {
	return o.ApplyT(func(v *VMwareClusterControlPlaneNode) []VMwareClusterControlPlaneNodeVsphereConfig {
		if v == nil {
			return nil
		}
		return v.VsphereConfigs
	}).(VMwareClusterControlPlaneNodeVsphereConfigArrayOutput)
}

type VMwareClusterControlPlaneNodeAutoResizeConfig struct {
	// Whether to enable control plane node auto resizing.
	//
	// <a name="nestedVsphereConfig"></a>The `vsphereConfig` block contains:
	Enabled bool `pulumi:"enabled"`
}

// VMwareClusterControlPlaneNodeAutoResizeConfigInput is an input type that accepts VMwareClusterControlPlaneNodeAutoResizeConfigArgs and VMwareClusterControlPlaneNodeAutoResizeConfigOutput values.
// You can construct a concrete instance of `VMwareClusterControlPlaneNodeAutoResizeConfigInput` via:
//
//	VMwareClusterControlPlaneNodeAutoResizeConfigArgs{...}
type VMwareClusterControlPlaneNodeAutoResizeConfigInput interface {
	pulumi.Input

	ToVMwareClusterControlPlaneNodeAutoResizeConfigOutput() VMwareClusterControlPlaneNodeAutoResizeConfigOutput
	ToVMwareClusterControlPlaneNodeAutoResizeConfigOutputWithContext(context.Context) VMwareClusterControlPlaneNodeAutoResizeConfigOutput
}

type VMwareClusterControlPlaneNodeAutoResizeConfigArgs struct {
	// Whether to enable control plane node auto resizing.
	//
	// <a name="nestedVsphereConfig"></a>The `vsphereConfig` block contains:
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VMwareClusterControlPlaneNodeAutoResizeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterControlPlaneNodeAutoResizeConfig)(nil)).Elem()
}

func (i VMwareClusterControlPlaneNodeAutoResizeConfigArgs) ToVMwareClusterControlPlaneNodeAutoResizeConfigOutput() VMwareClusterControlPlaneNodeAutoResizeConfigOutput {
	return i.ToVMwareClusterControlPlaneNodeAutoResizeConfigOutputWithContext(context.Background())
}

func (i VMwareClusterControlPlaneNodeAutoResizeConfigArgs) ToVMwareClusterControlPlaneNodeAutoResizeConfigOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeAutoResizeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterControlPlaneNodeAutoResizeConfigOutput)
}

func (i VMwareClusterControlPlaneNodeAutoResizeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterControlPlaneNodeAutoResizeConfig] {
	return pulumix.Output[VMwareClusterControlPlaneNodeAutoResizeConfig]{
		OutputState: i.ToVMwareClusterControlPlaneNodeAutoResizeConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterControlPlaneNodeAutoResizeConfigArgs) ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput() VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return i.ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterControlPlaneNodeAutoResizeConfigArgs) ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterControlPlaneNodeAutoResizeConfigOutput).ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(ctx)
}

// VMwareClusterControlPlaneNodeAutoResizeConfigPtrInput is an input type that accepts VMwareClusterControlPlaneNodeAutoResizeConfigArgs, VMwareClusterControlPlaneNodeAutoResizeConfigPtr and VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterControlPlaneNodeAutoResizeConfigPtrInput` via:
//
//	        VMwareClusterControlPlaneNodeAutoResizeConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterControlPlaneNodeAutoResizeConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput() VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput
	ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(context.Context) VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput
}

type vmwareClusterControlPlaneNodeAutoResizeConfigPtrType VMwareClusterControlPlaneNodeAutoResizeConfigArgs

func VMwareClusterControlPlaneNodeAutoResizeConfigPtr(v *VMwareClusterControlPlaneNodeAutoResizeConfigArgs) VMwareClusterControlPlaneNodeAutoResizeConfigPtrInput {
	return (*vmwareClusterControlPlaneNodeAutoResizeConfigPtrType)(v)
}

func (*vmwareClusterControlPlaneNodeAutoResizeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterControlPlaneNodeAutoResizeConfig)(nil)).Elem()
}

func (i *vmwareClusterControlPlaneNodeAutoResizeConfigPtrType) ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput() VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return i.ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterControlPlaneNodeAutoResizeConfigPtrType) ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput)
}

func (i *vmwareClusterControlPlaneNodeAutoResizeConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterControlPlaneNodeAutoResizeConfig] {
	return pulumix.Output[*VMwareClusterControlPlaneNodeAutoResizeConfig]{
		OutputState: i.ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterControlPlaneNodeAutoResizeConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterControlPlaneNodeAutoResizeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterControlPlaneNodeAutoResizeConfig)(nil)).Elem()
}

func (o VMwareClusterControlPlaneNodeAutoResizeConfigOutput) ToVMwareClusterControlPlaneNodeAutoResizeConfigOutput() VMwareClusterControlPlaneNodeAutoResizeConfigOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeAutoResizeConfigOutput) ToVMwareClusterControlPlaneNodeAutoResizeConfigOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeAutoResizeConfigOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeAutoResizeConfigOutput) ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput() VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return o.ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterControlPlaneNodeAutoResizeConfigOutput) ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterControlPlaneNodeAutoResizeConfig) *VMwareClusterControlPlaneNodeAutoResizeConfig {
		return &v
	}).(VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput)
}

func (o VMwareClusterControlPlaneNodeAutoResizeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterControlPlaneNodeAutoResizeConfig] {
	return pulumix.Output[VMwareClusterControlPlaneNodeAutoResizeConfig]{
		OutputState: o.OutputState,
	}
}

// Whether to enable control plane node auto resizing.
//
// <a name="nestedVsphereConfig"></a>The `vsphereConfig` block contains:
func (o VMwareClusterControlPlaneNodeAutoResizeConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VMwareClusterControlPlaneNodeAutoResizeConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterControlPlaneNodeAutoResizeConfig)(nil)).Elem()
}

func (o VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput) ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput() VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput) ToVMwareClusterControlPlaneNodeAutoResizeConfigPtrOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterControlPlaneNodeAutoResizeConfig] {
	return pulumix.Output[*VMwareClusterControlPlaneNodeAutoResizeConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput) Elem() VMwareClusterControlPlaneNodeAutoResizeConfigOutput {
	return o.ApplyT(func(v *VMwareClusterControlPlaneNodeAutoResizeConfig) VMwareClusterControlPlaneNodeAutoResizeConfig {
		if v != nil {
			return *v
		}
		var ret VMwareClusterControlPlaneNodeAutoResizeConfig
		return ret
	}).(VMwareClusterControlPlaneNodeAutoResizeConfigOutput)
}

// Whether to enable control plane node auto resizing.
//
// <a name="nestedVsphereConfig"></a>The `vsphereConfig` block contains:
func (o VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMwareClusterControlPlaneNodeAutoResizeConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VMwareClusterControlPlaneNodeVsphereConfig struct {
	// (Output)
	// The Vsphere datastore used by the Control Plane Node.
	Datastore *string `pulumi:"datastore"`
	// (Output)
	// The Vsphere storage policy used by the control plane Node.
	//
	// ***
	StoragePolicyName *string `pulumi:"storagePolicyName"`
}

// VMwareClusterControlPlaneNodeVsphereConfigInput is an input type that accepts VMwareClusterControlPlaneNodeVsphereConfigArgs and VMwareClusterControlPlaneNodeVsphereConfigOutput values.
// You can construct a concrete instance of `VMwareClusterControlPlaneNodeVsphereConfigInput` via:
//
//	VMwareClusterControlPlaneNodeVsphereConfigArgs{...}
type VMwareClusterControlPlaneNodeVsphereConfigInput interface {
	pulumi.Input

	ToVMwareClusterControlPlaneNodeVsphereConfigOutput() VMwareClusterControlPlaneNodeVsphereConfigOutput
	ToVMwareClusterControlPlaneNodeVsphereConfigOutputWithContext(context.Context) VMwareClusterControlPlaneNodeVsphereConfigOutput
}

type VMwareClusterControlPlaneNodeVsphereConfigArgs struct {
	// (Output)
	// The Vsphere datastore used by the Control Plane Node.
	Datastore pulumi.StringPtrInput `pulumi:"datastore"`
	// (Output)
	// The Vsphere storage policy used by the control plane Node.
	//
	// ***
	StoragePolicyName pulumi.StringPtrInput `pulumi:"storagePolicyName"`
}

func (VMwareClusterControlPlaneNodeVsphereConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterControlPlaneNodeVsphereConfig)(nil)).Elem()
}

func (i VMwareClusterControlPlaneNodeVsphereConfigArgs) ToVMwareClusterControlPlaneNodeVsphereConfigOutput() VMwareClusterControlPlaneNodeVsphereConfigOutput {
	return i.ToVMwareClusterControlPlaneNodeVsphereConfigOutputWithContext(context.Background())
}

func (i VMwareClusterControlPlaneNodeVsphereConfigArgs) ToVMwareClusterControlPlaneNodeVsphereConfigOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeVsphereConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterControlPlaneNodeVsphereConfigOutput)
}

func (i VMwareClusterControlPlaneNodeVsphereConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterControlPlaneNodeVsphereConfig] {
	return pulumix.Output[VMwareClusterControlPlaneNodeVsphereConfig]{
		OutputState: i.ToVMwareClusterControlPlaneNodeVsphereConfigOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterControlPlaneNodeVsphereConfigArrayInput is an input type that accepts VMwareClusterControlPlaneNodeVsphereConfigArray and VMwareClusterControlPlaneNodeVsphereConfigArrayOutput values.
// You can construct a concrete instance of `VMwareClusterControlPlaneNodeVsphereConfigArrayInput` via:
//
//	VMwareClusterControlPlaneNodeVsphereConfigArray{ VMwareClusterControlPlaneNodeVsphereConfigArgs{...} }
type VMwareClusterControlPlaneNodeVsphereConfigArrayInput interface {
	pulumi.Input

	ToVMwareClusterControlPlaneNodeVsphereConfigArrayOutput() VMwareClusterControlPlaneNodeVsphereConfigArrayOutput
	ToVMwareClusterControlPlaneNodeVsphereConfigArrayOutputWithContext(context.Context) VMwareClusterControlPlaneNodeVsphereConfigArrayOutput
}

type VMwareClusterControlPlaneNodeVsphereConfigArray []VMwareClusterControlPlaneNodeVsphereConfigInput

func (VMwareClusterControlPlaneNodeVsphereConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterControlPlaneNodeVsphereConfig)(nil)).Elem()
}

func (i VMwareClusterControlPlaneNodeVsphereConfigArray) ToVMwareClusterControlPlaneNodeVsphereConfigArrayOutput() VMwareClusterControlPlaneNodeVsphereConfigArrayOutput {
	return i.ToVMwareClusterControlPlaneNodeVsphereConfigArrayOutputWithContext(context.Background())
}

func (i VMwareClusterControlPlaneNodeVsphereConfigArray) ToVMwareClusterControlPlaneNodeVsphereConfigArrayOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeVsphereConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterControlPlaneNodeVsphereConfigArrayOutput)
}

func (i VMwareClusterControlPlaneNodeVsphereConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterControlPlaneNodeVsphereConfig] {
	return pulumix.Output[[]VMwareClusterControlPlaneNodeVsphereConfig]{
		OutputState: i.ToVMwareClusterControlPlaneNodeVsphereConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterControlPlaneNodeVsphereConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterControlPlaneNodeVsphereConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterControlPlaneNodeVsphereConfig)(nil)).Elem()
}

func (o VMwareClusterControlPlaneNodeVsphereConfigOutput) ToVMwareClusterControlPlaneNodeVsphereConfigOutput() VMwareClusterControlPlaneNodeVsphereConfigOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeVsphereConfigOutput) ToVMwareClusterControlPlaneNodeVsphereConfigOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeVsphereConfigOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeVsphereConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterControlPlaneNodeVsphereConfig] {
	return pulumix.Output[VMwareClusterControlPlaneNodeVsphereConfig]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The Vsphere datastore used by the Control Plane Node.
func (o VMwareClusterControlPlaneNodeVsphereConfigOutput) Datastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterControlPlaneNodeVsphereConfig) *string { return v.Datastore }).(pulumi.StringPtrOutput)
}

// (Output)
// The Vsphere storage policy used by the control plane Node.
//
// ***
func (o VMwareClusterControlPlaneNodeVsphereConfigOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterControlPlaneNodeVsphereConfig) *string { return v.StoragePolicyName }).(pulumi.StringPtrOutput)
}

type VMwareClusterControlPlaneNodeVsphereConfigArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterControlPlaneNodeVsphereConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterControlPlaneNodeVsphereConfig)(nil)).Elem()
}

func (o VMwareClusterControlPlaneNodeVsphereConfigArrayOutput) ToVMwareClusterControlPlaneNodeVsphereConfigArrayOutput() VMwareClusterControlPlaneNodeVsphereConfigArrayOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeVsphereConfigArrayOutput) ToVMwareClusterControlPlaneNodeVsphereConfigArrayOutputWithContext(ctx context.Context) VMwareClusterControlPlaneNodeVsphereConfigArrayOutput {
	return o
}

func (o VMwareClusterControlPlaneNodeVsphereConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterControlPlaneNodeVsphereConfig] {
	return pulumix.Output[[]VMwareClusterControlPlaneNodeVsphereConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterControlPlaneNodeVsphereConfigArrayOutput) Index(i pulumi.IntInput) VMwareClusterControlPlaneNodeVsphereConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterControlPlaneNodeVsphereConfig {
		return vs[0].([]VMwareClusterControlPlaneNodeVsphereConfig)[vs[1].(int)]
	}).(VMwareClusterControlPlaneNodeVsphereConfigOutput)
}

type VMwareClusterDataplaneV2 struct {
	// Enable advanced networking which requires dataplaneV2Enabled to be set true.
	AdvancedNetworking *bool `pulumi:"advancedNetworking"`
	// Enables Dataplane V2.
	DataplaneV2Enabled *bool `pulumi:"dataplaneV2Enabled"`
	// Enable Dataplane V2 for clusters with Windows nodes.
	WindowsDataplaneV2Enabled *bool `pulumi:"windowsDataplaneV2Enabled"`
}

// VMwareClusterDataplaneV2Input is an input type that accepts VMwareClusterDataplaneV2Args and VMwareClusterDataplaneV2Output values.
// You can construct a concrete instance of `VMwareClusterDataplaneV2Input` via:
//
//	VMwareClusterDataplaneV2Args{...}
type VMwareClusterDataplaneV2Input interface {
	pulumi.Input

	ToVMwareClusterDataplaneV2Output() VMwareClusterDataplaneV2Output
	ToVMwareClusterDataplaneV2OutputWithContext(context.Context) VMwareClusterDataplaneV2Output
}

type VMwareClusterDataplaneV2Args struct {
	// Enable advanced networking which requires dataplaneV2Enabled to be set true.
	AdvancedNetworking pulumi.BoolPtrInput `pulumi:"advancedNetworking"`
	// Enables Dataplane V2.
	DataplaneV2Enabled pulumi.BoolPtrInput `pulumi:"dataplaneV2Enabled"`
	// Enable Dataplane V2 for clusters with Windows nodes.
	WindowsDataplaneV2Enabled pulumi.BoolPtrInput `pulumi:"windowsDataplaneV2Enabled"`
}

func (VMwareClusterDataplaneV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterDataplaneV2)(nil)).Elem()
}

func (i VMwareClusterDataplaneV2Args) ToVMwareClusterDataplaneV2Output() VMwareClusterDataplaneV2Output {
	return i.ToVMwareClusterDataplaneV2OutputWithContext(context.Background())
}

func (i VMwareClusterDataplaneV2Args) ToVMwareClusterDataplaneV2OutputWithContext(ctx context.Context) VMwareClusterDataplaneV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterDataplaneV2Output)
}

func (i VMwareClusterDataplaneV2Args) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterDataplaneV2] {
	return pulumix.Output[VMwareClusterDataplaneV2]{
		OutputState: i.ToVMwareClusterDataplaneV2OutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterDataplaneV2Args) ToVMwareClusterDataplaneV2PtrOutput() VMwareClusterDataplaneV2PtrOutput {
	return i.ToVMwareClusterDataplaneV2PtrOutputWithContext(context.Background())
}

func (i VMwareClusterDataplaneV2Args) ToVMwareClusterDataplaneV2PtrOutputWithContext(ctx context.Context) VMwareClusterDataplaneV2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterDataplaneV2Output).ToVMwareClusterDataplaneV2PtrOutputWithContext(ctx)
}

// VMwareClusterDataplaneV2PtrInput is an input type that accepts VMwareClusterDataplaneV2Args, VMwareClusterDataplaneV2Ptr and VMwareClusterDataplaneV2PtrOutput values.
// You can construct a concrete instance of `VMwareClusterDataplaneV2PtrInput` via:
//
//	        VMwareClusterDataplaneV2Args{...}
//
//	or:
//
//	        nil
type VMwareClusterDataplaneV2PtrInput interface {
	pulumi.Input

	ToVMwareClusterDataplaneV2PtrOutput() VMwareClusterDataplaneV2PtrOutput
	ToVMwareClusterDataplaneV2PtrOutputWithContext(context.Context) VMwareClusterDataplaneV2PtrOutput
}

type vmwareClusterDataplaneV2PtrType VMwareClusterDataplaneV2Args

func VMwareClusterDataplaneV2Ptr(v *VMwareClusterDataplaneV2Args) VMwareClusterDataplaneV2PtrInput {
	return (*vmwareClusterDataplaneV2PtrType)(v)
}

func (*vmwareClusterDataplaneV2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterDataplaneV2)(nil)).Elem()
}

func (i *vmwareClusterDataplaneV2PtrType) ToVMwareClusterDataplaneV2PtrOutput() VMwareClusterDataplaneV2PtrOutput {
	return i.ToVMwareClusterDataplaneV2PtrOutputWithContext(context.Background())
}

func (i *vmwareClusterDataplaneV2PtrType) ToVMwareClusterDataplaneV2PtrOutputWithContext(ctx context.Context) VMwareClusterDataplaneV2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterDataplaneV2PtrOutput)
}

func (i *vmwareClusterDataplaneV2PtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterDataplaneV2] {
	return pulumix.Output[*VMwareClusterDataplaneV2]{
		OutputState: i.ToVMwareClusterDataplaneV2PtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterDataplaneV2Output struct{ *pulumi.OutputState }

func (VMwareClusterDataplaneV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterDataplaneV2)(nil)).Elem()
}

func (o VMwareClusterDataplaneV2Output) ToVMwareClusterDataplaneV2Output() VMwareClusterDataplaneV2Output {
	return o
}

func (o VMwareClusterDataplaneV2Output) ToVMwareClusterDataplaneV2OutputWithContext(ctx context.Context) VMwareClusterDataplaneV2Output {
	return o
}

func (o VMwareClusterDataplaneV2Output) ToVMwareClusterDataplaneV2PtrOutput() VMwareClusterDataplaneV2PtrOutput {
	return o.ToVMwareClusterDataplaneV2PtrOutputWithContext(context.Background())
}

func (o VMwareClusterDataplaneV2Output) ToVMwareClusterDataplaneV2PtrOutputWithContext(ctx context.Context) VMwareClusterDataplaneV2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterDataplaneV2) *VMwareClusterDataplaneV2 {
		return &v
	}).(VMwareClusterDataplaneV2PtrOutput)
}

func (o VMwareClusterDataplaneV2Output) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterDataplaneV2] {
	return pulumix.Output[VMwareClusterDataplaneV2]{
		OutputState: o.OutputState,
	}
}

// Enable advanced networking which requires dataplaneV2Enabled to be set true.
func (o VMwareClusterDataplaneV2Output) AdvancedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMwareClusterDataplaneV2) *bool { return v.AdvancedNetworking }).(pulumi.BoolPtrOutput)
}

// Enables Dataplane V2.
func (o VMwareClusterDataplaneV2Output) DataplaneV2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMwareClusterDataplaneV2) *bool { return v.DataplaneV2Enabled }).(pulumi.BoolPtrOutput)
}

// Enable Dataplane V2 for clusters with Windows nodes.
func (o VMwareClusterDataplaneV2Output) WindowsDataplaneV2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMwareClusterDataplaneV2) *bool { return v.WindowsDataplaneV2Enabled }).(pulumi.BoolPtrOutput)
}

type VMwareClusterDataplaneV2PtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterDataplaneV2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterDataplaneV2)(nil)).Elem()
}

func (o VMwareClusterDataplaneV2PtrOutput) ToVMwareClusterDataplaneV2PtrOutput() VMwareClusterDataplaneV2PtrOutput {
	return o
}

func (o VMwareClusterDataplaneV2PtrOutput) ToVMwareClusterDataplaneV2PtrOutputWithContext(ctx context.Context) VMwareClusterDataplaneV2PtrOutput {
	return o
}

func (o VMwareClusterDataplaneV2PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterDataplaneV2] {
	return pulumix.Output[*VMwareClusterDataplaneV2]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterDataplaneV2PtrOutput) Elem() VMwareClusterDataplaneV2Output {
	return o.ApplyT(func(v *VMwareClusterDataplaneV2) VMwareClusterDataplaneV2 {
		if v != nil {
			return *v
		}
		var ret VMwareClusterDataplaneV2
		return ret
	}).(VMwareClusterDataplaneV2Output)
}

// Enable advanced networking which requires dataplaneV2Enabled to be set true.
func (o VMwareClusterDataplaneV2PtrOutput) AdvancedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMwareClusterDataplaneV2) *bool {
		if v == nil {
			return nil
		}
		return v.AdvancedNetworking
	}).(pulumi.BoolPtrOutput)
}

// Enables Dataplane V2.
func (o VMwareClusterDataplaneV2PtrOutput) DataplaneV2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMwareClusterDataplaneV2) *bool {
		if v == nil {
			return nil
		}
		return v.DataplaneV2Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enable Dataplane V2 for clusters with Windows nodes.
func (o VMwareClusterDataplaneV2PtrOutput) WindowsDataplaneV2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMwareClusterDataplaneV2) *bool {
		if v == nil {
			return nil
		}
		return v.WindowsDataplaneV2Enabled
	}).(pulumi.BoolPtrOutput)
}

type VMwareClusterFleet struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this cluster.
	// Membership names are formatted as
	// `projects/<project-number>/locations/<location>/memberships/<cluster-id>`.
	Membership *string `pulumi:"membership"`
}

// VMwareClusterFleetInput is an input type that accepts VMwareClusterFleetArgs and VMwareClusterFleetOutput values.
// You can construct a concrete instance of `VMwareClusterFleetInput` via:
//
//	VMwareClusterFleetArgs{...}
type VMwareClusterFleetInput interface {
	pulumi.Input

	ToVMwareClusterFleetOutput() VMwareClusterFleetOutput
	ToVMwareClusterFleetOutputWithContext(context.Context) VMwareClusterFleetOutput
}

type VMwareClusterFleetArgs struct {
	// (Output)
	// The name of the managed Hub Membership resource associated to this cluster.
	// Membership names are formatted as
	// `projects/<project-number>/locations/<location>/memberships/<cluster-id>`.
	Membership pulumi.StringPtrInput `pulumi:"membership"`
}

func (VMwareClusterFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterFleet)(nil)).Elem()
}

func (i VMwareClusterFleetArgs) ToVMwareClusterFleetOutput() VMwareClusterFleetOutput {
	return i.ToVMwareClusterFleetOutputWithContext(context.Background())
}

func (i VMwareClusterFleetArgs) ToVMwareClusterFleetOutputWithContext(ctx context.Context) VMwareClusterFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterFleetOutput)
}

func (i VMwareClusterFleetArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterFleet] {
	return pulumix.Output[VMwareClusterFleet]{
		OutputState: i.ToVMwareClusterFleetOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterFleetArrayInput is an input type that accepts VMwareClusterFleetArray and VMwareClusterFleetArrayOutput values.
// You can construct a concrete instance of `VMwareClusterFleetArrayInput` via:
//
//	VMwareClusterFleetArray{ VMwareClusterFleetArgs{...} }
type VMwareClusterFleetArrayInput interface {
	pulumi.Input

	ToVMwareClusterFleetArrayOutput() VMwareClusterFleetArrayOutput
	ToVMwareClusterFleetArrayOutputWithContext(context.Context) VMwareClusterFleetArrayOutput
}

type VMwareClusterFleetArray []VMwareClusterFleetInput

func (VMwareClusterFleetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterFleet)(nil)).Elem()
}

func (i VMwareClusterFleetArray) ToVMwareClusterFleetArrayOutput() VMwareClusterFleetArrayOutput {
	return i.ToVMwareClusterFleetArrayOutputWithContext(context.Background())
}

func (i VMwareClusterFleetArray) ToVMwareClusterFleetArrayOutputWithContext(ctx context.Context) VMwareClusterFleetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterFleetArrayOutput)
}

func (i VMwareClusterFleetArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterFleet] {
	return pulumix.Output[[]VMwareClusterFleet]{
		OutputState: i.ToVMwareClusterFleetArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterFleetOutput struct{ *pulumi.OutputState }

func (VMwareClusterFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterFleet)(nil)).Elem()
}

func (o VMwareClusterFleetOutput) ToVMwareClusterFleetOutput() VMwareClusterFleetOutput {
	return o
}

func (o VMwareClusterFleetOutput) ToVMwareClusterFleetOutputWithContext(ctx context.Context) VMwareClusterFleetOutput {
	return o
}

func (o VMwareClusterFleetOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterFleet] {
	return pulumix.Output[VMwareClusterFleet]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The name of the managed Hub Membership resource associated to this cluster.
// Membership names are formatted as
// `projects/<project-number>/locations/<location>/memberships/<cluster-id>`.
func (o VMwareClusterFleetOutput) Membership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterFleet) *string { return v.Membership }).(pulumi.StringPtrOutput)
}

type VMwareClusterFleetArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterFleetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterFleet)(nil)).Elem()
}

func (o VMwareClusterFleetArrayOutput) ToVMwareClusterFleetArrayOutput() VMwareClusterFleetArrayOutput {
	return o
}

func (o VMwareClusterFleetArrayOutput) ToVMwareClusterFleetArrayOutputWithContext(ctx context.Context) VMwareClusterFleetArrayOutput {
	return o
}

func (o VMwareClusterFleetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterFleet] {
	return pulumix.Output[[]VMwareClusterFleet]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterFleetArrayOutput) Index(i pulumi.IntInput) VMwareClusterFleetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterFleet {
		return vs[0].([]VMwareClusterFleet)[vs[1].(int)]
	}).(VMwareClusterFleetOutput)
}

type VMwareClusterLoadBalancer struct {
	// Configuration for F5 Big IP typed load balancers.
	// Structure is documented below.
	F5Config *VMwareClusterLoadBalancerF5Config `pulumi:"f5Config"`
	// Manually configured load balancers.
	// Structure is documented below.
	ManualLbConfig *VMwareClusterLoadBalancerManualLbConfig `pulumi:"manualLbConfig"`
	// Configuration for MetalLB typed load balancers.
	// Structure is documented below.
	MetalLbConfig *VMwareClusterLoadBalancerMetalLbConfig `pulumi:"metalLbConfig"`
	// The VIPs used by the load balancer.
	// Structure is documented below.
	VipConfig *VMwareClusterLoadBalancerVipConfig `pulumi:"vipConfig"`
}

// VMwareClusterLoadBalancerInput is an input type that accepts VMwareClusterLoadBalancerArgs and VMwareClusterLoadBalancerOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerInput` via:
//
//	VMwareClusterLoadBalancerArgs{...}
type VMwareClusterLoadBalancerInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerOutput() VMwareClusterLoadBalancerOutput
	ToVMwareClusterLoadBalancerOutputWithContext(context.Context) VMwareClusterLoadBalancerOutput
}

type VMwareClusterLoadBalancerArgs struct {
	// Configuration for F5 Big IP typed load balancers.
	// Structure is documented below.
	F5Config VMwareClusterLoadBalancerF5ConfigPtrInput `pulumi:"f5Config"`
	// Manually configured load balancers.
	// Structure is documented below.
	ManualLbConfig VMwareClusterLoadBalancerManualLbConfigPtrInput `pulumi:"manualLbConfig"`
	// Configuration for MetalLB typed load balancers.
	// Structure is documented below.
	MetalLbConfig VMwareClusterLoadBalancerMetalLbConfigPtrInput `pulumi:"metalLbConfig"`
	// The VIPs used by the load balancer.
	// Structure is documented below.
	VipConfig VMwareClusterLoadBalancerVipConfigPtrInput `pulumi:"vipConfig"`
}

func (VMwareClusterLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancer)(nil)).Elem()
}

func (i VMwareClusterLoadBalancerArgs) ToVMwareClusterLoadBalancerOutput() VMwareClusterLoadBalancerOutput {
	return i.ToVMwareClusterLoadBalancerOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerArgs) ToVMwareClusterLoadBalancerOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerOutput)
}

func (i VMwareClusterLoadBalancerArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancer] {
	return pulumix.Output[VMwareClusterLoadBalancer]{
		OutputState: i.ToVMwareClusterLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterLoadBalancerArgs) ToVMwareClusterLoadBalancerPtrOutput() VMwareClusterLoadBalancerPtrOutput {
	return i.ToVMwareClusterLoadBalancerPtrOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerArgs) ToVMwareClusterLoadBalancerPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerOutput).ToVMwareClusterLoadBalancerPtrOutputWithContext(ctx)
}

// VMwareClusterLoadBalancerPtrInput is an input type that accepts VMwareClusterLoadBalancerArgs, VMwareClusterLoadBalancerPtr and VMwareClusterLoadBalancerPtrOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerPtrInput` via:
//
//	        VMwareClusterLoadBalancerArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterLoadBalancerPtrInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerPtrOutput() VMwareClusterLoadBalancerPtrOutput
	ToVMwareClusterLoadBalancerPtrOutputWithContext(context.Context) VMwareClusterLoadBalancerPtrOutput
}

type vmwareClusterLoadBalancerPtrType VMwareClusterLoadBalancerArgs

func VMwareClusterLoadBalancerPtr(v *VMwareClusterLoadBalancerArgs) VMwareClusterLoadBalancerPtrInput {
	return (*vmwareClusterLoadBalancerPtrType)(v)
}

func (*vmwareClusterLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancer)(nil)).Elem()
}

func (i *vmwareClusterLoadBalancerPtrType) ToVMwareClusterLoadBalancerPtrOutput() VMwareClusterLoadBalancerPtrOutput {
	return i.ToVMwareClusterLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterLoadBalancerPtrType) ToVMwareClusterLoadBalancerPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerPtrOutput)
}

func (i *vmwareClusterLoadBalancerPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancer] {
	return pulumix.Output[*VMwareClusterLoadBalancer]{
		OutputState: i.ToVMwareClusterLoadBalancerPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterLoadBalancerOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancer)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerOutput) ToVMwareClusterLoadBalancerOutput() VMwareClusterLoadBalancerOutput {
	return o
}

func (o VMwareClusterLoadBalancerOutput) ToVMwareClusterLoadBalancerOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerOutput {
	return o
}

func (o VMwareClusterLoadBalancerOutput) ToVMwareClusterLoadBalancerPtrOutput() VMwareClusterLoadBalancerPtrOutput {
	return o.ToVMwareClusterLoadBalancerPtrOutputWithContext(context.Background())
}

func (o VMwareClusterLoadBalancerOutput) ToVMwareClusterLoadBalancerPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterLoadBalancer) *VMwareClusterLoadBalancer {
		return &v
	}).(VMwareClusterLoadBalancerPtrOutput)
}

func (o VMwareClusterLoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancer] {
	return pulumix.Output[VMwareClusterLoadBalancer]{
		OutputState: o.OutputState,
	}
}

// Configuration for F5 Big IP typed load balancers.
// Structure is documented below.
func (o VMwareClusterLoadBalancerOutput) F5Config() VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancer) *VMwareClusterLoadBalancerF5Config { return v.F5Config }).(VMwareClusterLoadBalancerF5ConfigPtrOutput)
}

// Manually configured load balancers.
// Structure is documented below.
func (o VMwareClusterLoadBalancerOutput) ManualLbConfig() VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancer) *VMwareClusterLoadBalancerManualLbConfig { return v.ManualLbConfig }).(VMwareClusterLoadBalancerManualLbConfigPtrOutput)
}

// Configuration for MetalLB typed load balancers.
// Structure is documented below.
func (o VMwareClusterLoadBalancerOutput) MetalLbConfig() VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancer) *VMwareClusterLoadBalancerMetalLbConfig { return v.MetalLbConfig }).(VMwareClusterLoadBalancerMetalLbConfigPtrOutput)
}

// The VIPs used by the load balancer.
// Structure is documented below.
func (o VMwareClusterLoadBalancerOutput) VipConfig() VMwareClusterLoadBalancerVipConfigPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancer) *VMwareClusterLoadBalancerVipConfig { return v.VipConfig }).(VMwareClusterLoadBalancerVipConfigPtrOutput)
}

type VMwareClusterLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancer)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerPtrOutput) ToVMwareClusterLoadBalancerPtrOutput() VMwareClusterLoadBalancerPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerPtrOutput) ToVMwareClusterLoadBalancerPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancer] {
	return pulumix.Output[*VMwareClusterLoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterLoadBalancerPtrOutput) Elem() VMwareClusterLoadBalancerOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancer) VMwareClusterLoadBalancer {
		if v != nil {
			return *v
		}
		var ret VMwareClusterLoadBalancer
		return ret
	}).(VMwareClusterLoadBalancerOutput)
}

// Configuration for F5 Big IP typed load balancers.
// Structure is documented below.
func (o VMwareClusterLoadBalancerPtrOutput) F5Config() VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancer) *VMwareClusterLoadBalancerF5Config {
		if v == nil {
			return nil
		}
		return v.F5Config
	}).(VMwareClusterLoadBalancerF5ConfigPtrOutput)
}

// Manually configured load balancers.
// Structure is documented below.
func (o VMwareClusterLoadBalancerPtrOutput) ManualLbConfig() VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancer) *VMwareClusterLoadBalancerManualLbConfig {
		if v == nil {
			return nil
		}
		return v.ManualLbConfig
	}).(VMwareClusterLoadBalancerManualLbConfigPtrOutput)
}

// Configuration for MetalLB typed load balancers.
// Structure is documented below.
func (o VMwareClusterLoadBalancerPtrOutput) MetalLbConfig() VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancer) *VMwareClusterLoadBalancerMetalLbConfig {
		if v == nil {
			return nil
		}
		return v.MetalLbConfig
	}).(VMwareClusterLoadBalancerMetalLbConfigPtrOutput)
}

// The VIPs used by the load balancer.
// Structure is documented below.
func (o VMwareClusterLoadBalancerPtrOutput) VipConfig() VMwareClusterLoadBalancerVipConfigPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancer) *VMwareClusterLoadBalancerVipConfig {
		if v == nil {
			return nil
		}
		return v.VipConfig
	}).(VMwareClusterLoadBalancerVipConfigPtrOutput)
}

type VMwareClusterLoadBalancerF5Config struct {
	// The load balancer's IP address.
	Address *string `pulumi:"address"`
	// he preexisting partition to be used by the load balancer. T
	// his partition is usually created for the admin cluster for example:
	// 'my-f5-admin-partition'.
	Partition *string `pulumi:"partition"`
	// The pool name. Only necessary, if using SNAT.
	SnatPool *string `pulumi:"snatPool"`
}

// VMwareClusterLoadBalancerF5ConfigInput is an input type that accepts VMwareClusterLoadBalancerF5ConfigArgs and VMwareClusterLoadBalancerF5ConfigOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerF5ConfigInput` via:
//
//	VMwareClusterLoadBalancerF5ConfigArgs{...}
type VMwareClusterLoadBalancerF5ConfigInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerF5ConfigOutput() VMwareClusterLoadBalancerF5ConfigOutput
	ToVMwareClusterLoadBalancerF5ConfigOutputWithContext(context.Context) VMwareClusterLoadBalancerF5ConfigOutput
}

type VMwareClusterLoadBalancerF5ConfigArgs struct {
	// The load balancer's IP address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// he preexisting partition to be used by the load balancer. T
	// his partition is usually created for the admin cluster for example:
	// 'my-f5-admin-partition'.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// The pool name. Only necessary, if using SNAT.
	SnatPool pulumi.StringPtrInput `pulumi:"snatPool"`
}

func (VMwareClusterLoadBalancerF5ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerF5Config)(nil)).Elem()
}

func (i VMwareClusterLoadBalancerF5ConfigArgs) ToVMwareClusterLoadBalancerF5ConfigOutput() VMwareClusterLoadBalancerF5ConfigOutput {
	return i.ToVMwareClusterLoadBalancerF5ConfigOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerF5ConfigArgs) ToVMwareClusterLoadBalancerF5ConfigOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerF5ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerF5ConfigOutput)
}

func (i VMwareClusterLoadBalancerF5ConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerF5Config] {
	return pulumix.Output[VMwareClusterLoadBalancerF5Config]{
		OutputState: i.ToVMwareClusterLoadBalancerF5ConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterLoadBalancerF5ConfigArgs) ToVMwareClusterLoadBalancerF5ConfigPtrOutput() VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return i.ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerF5ConfigArgs) ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerF5ConfigOutput).ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(ctx)
}

// VMwareClusterLoadBalancerF5ConfigPtrInput is an input type that accepts VMwareClusterLoadBalancerF5ConfigArgs, VMwareClusterLoadBalancerF5ConfigPtr and VMwareClusterLoadBalancerF5ConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerF5ConfigPtrInput` via:
//
//	        VMwareClusterLoadBalancerF5ConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterLoadBalancerF5ConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerF5ConfigPtrOutput() VMwareClusterLoadBalancerF5ConfigPtrOutput
	ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(context.Context) VMwareClusterLoadBalancerF5ConfigPtrOutput
}

type vmwareClusterLoadBalancerF5ConfigPtrType VMwareClusterLoadBalancerF5ConfigArgs

func VMwareClusterLoadBalancerF5ConfigPtr(v *VMwareClusterLoadBalancerF5ConfigArgs) VMwareClusterLoadBalancerF5ConfigPtrInput {
	return (*vmwareClusterLoadBalancerF5ConfigPtrType)(v)
}

func (*vmwareClusterLoadBalancerF5ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancerF5Config)(nil)).Elem()
}

func (i *vmwareClusterLoadBalancerF5ConfigPtrType) ToVMwareClusterLoadBalancerF5ConfigPtrOutput() VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return i.ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterLoadBalancerF5ConfigPtrType) ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerF5ConfigPtrOutput)
}

func (i *vmwareClusterLoadBalancerF5ConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancerF5Config] {
	return pulumix.Output[*VMwareClusterLoadBalancerF5Config]{
		OutputState: i.ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterLoadBalancerF5ConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerF5ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerF5Config)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerF5ConfigOutput) ToVMwareClusterLoadBalancerF5ConfigOutput() VMwareClusterLoadBalancerF5ConfigOutput {
	return o
}

func (o VMwareClusterLoadBalancerF5ConfigOutput) ToVMwareClusterLoadBalancerF5ConfigOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerF5ConfigOutput {
	return o
}

func (o VMwareClusterLoadBalancerF5ConfigOutput) ToVMwareClusterLoadBalancerF5ConfigPtrOutput() VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return o.ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterLoadBalancerF5ConfigOutput) ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterLoadBalancerF5Config) *VMwareClusterLoadBalancerF5Config {
		return &v
	}).(VMwareClusterLoadBalancerF5ConfigPtrOutput)
}

func (o VMwareClusterLoadBalancerF5ConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerF5Config] {
	return pulumix.Output[VMwareClusterLoadBalancerF5Config]{
		OutputState: o.OutputState,
	}
}

// The load balancer's IP address.
func (o VMwareClusterLoadBalancerF5ConfigOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerF5Config) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// he preexisting partition to be used by the load balancer. T
// his partition is usually created for the admin cluster for example:
// 'my-f5-admin-partition'.
func (o VMwareClusterLoadBalancerF5ConfigOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerF5Config) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// The pool name. Only necessary, if using SNAT.
func (o VMwareClusterLoadBalancerF5ConfigOutput) SnatPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerF5Config) *string { return v.SnatPool }).(pulumi.StringPtrOutput)
}

type VMwareClusterLoadBalancerF5ConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerF5ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancerF5Config)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerF5ConfigPtrOutput) ToVMwareClusterLoadBalancerF5ConfigPtrOutput() VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerF5ConfigPtrOutput) ToVMwareClusterLoadBalancerF5ConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerF5ConfigPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerF5ConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancerF5Config] {
	return pulumix.Output[*VMwareClusterLoadBalancerF5Config]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterLoadBalancerF5ConfigPtrOutput) Elem() VMwareClusterLoadBalancerF5ConfigOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerF5Config) VMwareClusterLoadBalancerF5Config {
		if v != nil {
			return *v
		}
		var ret VMwareClusterLoadBalancerF5Config
		return ret
	}).(VMwareClusterLoadBalancerF5ConfigOutput)
}

// The load balancer's IP address.
func (o VMwareClusterLoadBalancerF5ConfigPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerF5Config) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// he preexisting partition to be used by the load balancer. T
// his partition is usually created for the admin cluster for example:
// 'my-f5-admin-partition'.
func (o VMwareClusterLoadBalancerF5ConfigPtrOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerF5Config) *string {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.StringPtrOutput)
}

// The pool name. Only necessary, if using SNAT.
func (o VMwareClusterLoadBalancerF5ConfigPtrOutput) SnatPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerF5Config) *string {
		if v == nil {
			return nil
		}
		return v.SnatPool
	}).(pulumi.StringPtrOutput)
}

type VMwareClusterLoadBalancerManualLbConfig struct {
	// NodePort for control plane service. The Kubernetes API server in the admin
	// cluster is implemented as a Service of type NodePort (ex. 30968).
	ControlPlaneNodePort *int `pulumi:"controlPlaneNodePort"`
	// NodePort for ingress service's http. The ingress service in the admin
	// cluster is implemented as a Service of type NodePort (ex. 32527).
	IngressHttpNodePort *int `pulumi:"ingressHttpNodePort"`
	// NodePort for ingress service's https. The ingress service in the admin
	// cluster is implemented as a Service of type NodePort (ex. 30139).
	IngressHttpsNodePort *int `pulumi:"ingressHttpsNodePort"`
	// NodePort for konnectivity server service running as a sidecar in each
	// kube-apiserver pod (ex. 30564).
	KonnectivityServerNodePort *int `pulumi:"konnectivityServerNodePort"`
}

// VMwareClusterLoadBalancerManualLbConfigInput is an input type that accepts VMwareClusterLoadBalancerManualLbConfigArgs and VMwareClusterLoadBalancerManualLbConfigOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerManualLbConfigInput` via:
//
//	VMwareClusterLoadBalancerManualLbConfigArgs{...}
type VMwareClusterLoadBalancerManualLbConfigInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerManualLbConfigOutput() VMwareClusterLoadBalancerManualLbConfigOutput
	ToVMwareClusterLoadBalancerManualLbConfigOutputWithContext(context.Context) VMwareClusterLoadBalancerManualLbConfigOutput
}

type VMwareClusterLoadBalancerManualLbConfigArgs struct {
	// NodePort for control plane service. The Kubernetes API server in the admin
	// cluster is implemented as a Service of type NodePort (ex. 30968).
	ControlPlaneNodePort pulumi.IntPtrInput `pulumi:"controlPlaneNodePort"`
	// NodePort for ingress service's http. The ingress service in the admin
	// cluster is implemented as a Service of type NodePort (ex. 32527).
	IngressHttpNodePort pulumi.IntPtrInput `pulumi:"ingressHttpNodePort"`
	// NodePort for ingress service's https. The ingress service in the admin
	// cluster is implemented as a Service of type NodePort (ex. 30139).
	IngressHttpsNodePort pulumi.IntPtrInput `pulumi:"ingressHttpsNodePort"`
	// NodePort for konnectivity server service running as a sidecar in each
	// kube-apiserver pod (ex. 30564).
	KonnectivityServerNodePort pulumi.IntPtrInput `pulumi:"konnectivityServerNodePort"`
}

func (VMwareClusterLoadBalancerManualLbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (i VMwareClusterLoadBalancerManualLbConfigArgs) ToVMwareClusterLoadBalancerManualLbConfigOutput() VMwareClusterLoadBalancerManualLbConfigOutput {
	return i.ToVMwareClusterLoadBalancerManualLbConfigOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerManualLbConfigArgs) ToVMwareClusterLoadBalancerManualLbConfigOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerManualLbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerManualLbConfigOutput)
}

func (i VMwareClusterLoadBalancerManualLbConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[VMwareClusterLoadBalancerManualLbConfig]{
		OutputState: i.ToVMwareClusterLoadBalancerManualLbConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterLoadBalancerManualLbConfigArgs) ToVMwareClusterLoadBalancerManualLbConfigPtrOutput() VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return i.ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerManualLbConfigArgs) ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerManualLbConfigOutput).ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx)
}

// VMwareClusterLoadBalancerManualLbConfigPtrInput is an input type that accepts VMwareClusterLoadBalancerManualLbConfigArgs, VMwareClusterLoadBalancerManualLbConfigPtr and VMwareClusterLoadBalancerManualLbConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerManualLbConfigPtrInput` via:
//
//	        VMwareClusterLoadBalancerManualLbConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterLoadBalancerManualLbConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerManualLbConfigPtrOutput() VMwareClusterLoadBalancerManualLbConfigPtrOutput
	ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Context) VMwareClusterLoadBalancerManualLbConfigPtrOutput
}

type vmwareClusterLoadBalancerManualLbConfigPtrType VMwareClusterLoadBalancerManualLbConfigArgs

func VMwareClusterLoadBalancerManualLbConfigPtr(v *VMwareClusterLoadBalancerManualLbConfigArgs) VMwareClusterLoadBalancerManualLbConfigPtrInput {
	return (*vmwareClusterLoadBalancerManualLbConfigPtrType)(v)
}

func (*vmwareClusterLoadBalancerManualLbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (i *vmwareClusterLoadBalancerManualLbConfigPtrType) ToVMwareClusterLoadBalancerManualLbConfigPtrOutput() VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return i.ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterLoadBalancerManualLbConfigPtrType) ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerManualLbConfigPtrOutput)
}

func (i *vmwareClusterLoadBalancerManualLbConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[*VMwareClusterLoadBalancerManualLbConfig]{
		OutputState: i.ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterLoadBalancerManualLbConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerManualLbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerManualLbConfigOutput) ToVMwareClusterLoadBalancerManualLbConfigOutput() VMwareClusterLoadBalancerManualLbConfigOutput {
	return o
}

func (o VMwareClusterLoadBalancerManualLbConfigOutput) ToVMwareClusterLoadBalancerManualLbConfigOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerManualLbConfigOutput {
	return o
}

func (o VMwareClusterLoadBalancerManualLbConfigOutput) ToVMwareClusterLoadBalancerManualLbConfigPtrOutput() VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterLoadBalancerManualLbConfigOutput) ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterLoadBalancerManualLbConfig) *VMwareClusterLoadBalancerManualLbConfig {
		return &v
	}).(VMwareClusterLoadBalancerManualLbConfigPtrOutput)
}

func (o VMwareClusterLoadBalancerManualLbConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[VMwareClusterLoadBalancerManualLbConfig]{
		OutputState: o.OutputState,
	}
}

// NodePort for control plane service. The Kubernetes API server in the admin
// cluster is implemented as a Service of type NodePort (ex. 30968).
func (o VMwareClusterLoadBalancerManualLbConfigOutput) ControlPlaneNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerManualLbConfig) *int { return v.ControlPlaneNodePort }).(pulumi.IntPtrOutput)
}

// NodePort for ingress service's http. The ingress service in the admin
// cluster is implemented as a Service of type NodePort (ex. 32527).
func (o VMwareClusterLoadBalancerManualLbConfigOutput) IngressHttpNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerManualLbConfig) *int { return v.IngressHttpNodePort }).(pulumi.IntPtrOutput)
}

// NodePort for ingress service's https. The ingress service in the admin
// cluster is implemented as a Service of type NodePort (ex. 30139).
func (o VMwareClusterLoadBalancerManualLbConfigOutput) IngressHttpsNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerManualLbConfig) *int { return v.IngressHttpsNodePort }).(pulumi.IntPtrOutput)
}

// NodePort for konnectivity server service running as a sidecar in each
// kube-apiserver pod (ex. 30564).
func (o VMwareClusterLoadBalancerManualLbConfigOutput) KonnectivityServerNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerManualLbConfig) *int { return v.KonnectivityServerNodePort }).(pulumi.IntPtrOutput)
}

type VMwareClusterLoadBalancerManualLbConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerManualLbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancerManualLbConfig)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerManualLbConfigPtrOutput) ToVMwareClusterLoadBalancerManualLbConfigPtrOutput() VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerManualLbConfigPtrOutput) ToVMwareClusterLoadBalancerManualLbConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerManualLbConfigPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerManualLbConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancerManualLbConfig] {
	return pulumix.Output[*VMwareClusterLoadBalancerManualLbConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterLoadBalancerManualLbConfigPtrOutput) Elem() VMwareClusterLoadBalancerManualLbConfigOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerManualLbConfig) VMwareClusterLoadBalancerManualLbConfig {
		if v != nil {
			return *v
		}
		var ret VMwareClusterLoadBalancerManualLbConfig
		return ret
	}).(VMwareClusterLoadBalancerManualLbConfigOutput)
}

// NodePort for control plane service. The Kubernetes API server in the admin
// cluster is implemented as a Service of type NodePort (ex. 30968).
func (o VMwareClusterLoadBalancerManualLbConfigPtrOutput) ControlPlaneNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerManualLbConfig) *int {
		if v == nil {
			return nil
		}
		return v.ControlPlaneNodePort
	}).(pulumi.IntPtrOutput)
}

// NodePort for ingress service's http. The ingress service in the admin
// cluster is implemented as a Service of type NodePort (ex. 32527).
func (o VMwareClusterLoadBalancerManualLbConfigPtrOutput) IngressHttpNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerManualLbConfig) *int {
		if v == nil {
			return nil
		}
		return v.IngressHttpNodePort
	}).(pulumi.IntPtrOutput)
}

// NodePort for ingress service's https. The ingress service in the admin
// cluster is implemented as a Service of type NodePort (ex. 30139).
func (o VMwareClusterLoadBalancerManualLbConfigPtrOutput) IngressHttpsNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerManualLbConfig) *int {
		if v == nil {
			return nil
		}
		return v.IngressHttpsNodePort
	}).(pulumi.IntPtrOutput)
}

// NodePort for konnectivity server service running as a sidecar in each
// kube-apiserver pod (ex. 30564).
func (o VMwareClusterLoadBalancerManualLbConfigPtrOutput) KonnectivityServerNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerManualLbConfig) *int {
		if v == nil {
			return nil
		}
		return v.KonnectivityServerNodePort
	}).(pulumi.IntPtrOutput)
}

type VMwareClusterLoadBalancerMetalLbConfig struct {
	// AddressPools is a list of non-overlapping IP pools used by load balancer
	// typed services. All addresses must be routable to load balancer nodes.
	// IngressVIP must be included in the pools.
	// Structure is documented below.
	AddressPools []VMwareClusterLoadBalancerMetalLbConfigAddressPool `pulumi:"addressPools"`
}

// VMwareClusterLoadBalancerMetalLbConfigInput is an input type that accepts VMwareClusterLoadBalancerMetalLbConfigArgs and VMwareClusterLoadBalancerMetalLbConfigOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerMetalLbConfigInput` via:
//
//	VMwareClusterLoadBalancerMetalLbConfigArgs{...}
type VMwareClusterLoadBalancerMetalLbConfigInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerMetalLbConfigOutput() VMwareClusterLoadBalancerMetalLbConfigOutput
	ToVMwareClusterLoadBalancerMetalLbConfigOutputWithContext(context.Context) VMwareClusterLoadBalancerMetalLbConfigOutput
}

type VMwareClusterLoadBalancerMetalLbConfigArgs struct {
	// AddressPools is a list of non-overlapping IP pools used by load balancer
	// typed services. All addresses must be routable to load balancer nodes.
	// IngressVIP must be included in the pools.
	// Structure is documented below.
	AddressPools VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayInput `pulumi:"addressPools"`
}

func (VMwareClusterLoadBalancerMetalLbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerMetalLbConfig)(nil)).Elem()
}

func (i VMwareClusterLoadBalancerMetalLbConfigArgs) ToVMwareClusterLoadBalancerMetalLbConfigOutput() VMwareClusterLoadBalancerMetalLbConfigOutput {
	return i.ToVMwareClusterLoadBalancerMetalLbConfigOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerMetalLbConfigArgs) ToVMwareClusterLoadBalancerMetalLbConfigOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerMetalLbConfigOutput)
}

func (i VMwareClusterLoadBalancerMetalLbConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerMetalLbConfig] {
	return pulumix.Output[VMwareClusterLoadBalancerMetalLbConfig]{
		OutputState: i.ToVMwareClusterLoadBalancerMetalLbConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterLoadBalancerMetalLbConfigArgs) ToVMwareClusterLoadBalancerMetalLbConfigPtrOutput() VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return i.ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerMetalLbConfigArgs) ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerMetalLbConfigOutput).ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx)
}

// VMwareClusterLoadBalancerMetalLbConfigPtrInput is an input type that accepts VMwareClusterLoadBalancerMetalLbConfigArgs, VMwareClusterLoadBalancerMetalLbConfigPtr and VMwareClusterLoadBalancerMetalLbConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerMetalLbConfigPtrInput` via:
//
//	        VMwareClusterLoadBalancerMetalLbConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterLoadBalancerMetalLbConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerMetalLbConfigPtrOutput() VMwareClusterLoadBalancerMetalLbConfigPtrOutput
	ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(context.Context) VMwareClusterLoadBalancerMetalLbConfigPtrOutput
}

type vmwareClusterLoadBalancerMetalLbConfigPtrType VMwareClusterLoadBalancerMetalLbConfigArgs

func VMwareClusterLoadBalancerMetalLbConfigPtr(v *VMwareClusterLoadBalancerMetalLbConfigArgs) VMwareClusterLoadBalancerMetalLbConfigPtrInput {
	return (*vmwareClusterLoadBalancerMetalLbConfigPtrType)(v)
}

func (*vmwareClusterLoadBalancerMetalLbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancerMetalLbConfig)(nil)).Elem()
}

func (i *vmwareClusterLoadBalancerMetalLbConfigPtrType) ToVMwareClusterLoadBalancerMetalLbConfigPtrOutput() VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return i.ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterLoadBalancerMetalLbConfigPtrType) ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerMetalLbConfigPtrOutput)
}

func (i *vmwareClusterLoadBalancerMetalLbConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancerMetalLbConfig] {
	return pulumix.Output[*VMwareClusterLoadBalancerMetalLbConfig]{
		OutputState: i.ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterLoadBalancerMetalLbConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerMetalLbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerMetalLbConfig)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerMetalLbConfigOutput) ToVMwareClusterLoadBalancerMetalLbConfigOutput() VMwareClusterLoadBalancerMetalLbConfigOutput {
	return o
}

func (o VMwareClusterLoadBalancerMetalLbConfigOutput) ToVMwareClusterLoadBalancerMetalLbConfigOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigOutput {
	return o
}

func (o VMwareClusterLoadBalancerMetalLbConfigOutput) ToVMwareClusterLoadBalancerMetalLbConfigPtrOutput() VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return o.ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterLoadBalancerMetalLbConfigOutput) ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterLoadBalancerMetalLbConfig) *VMwareClusterLoadBalancerMetalLbConfig {
		return &v
	}).(VMwareClusterLoadBalancerMetalLbConfigPtrOutput)
}

func (o VMwareClusterLoadBalancerMetalLbConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerMetalLbConfig] {
	return pulumix.Output[VMwareClusterLoadBalancerMetalLbConfig]{
		OutputState: o.OutputState,
	}
}

// AddressPools is a list of non-overlapping IP pools used by load balancer
// typed services. All addresses must be routable to load balancer nodes.
// IngressVIP must be included in the pools.
// Structure is documented below.
func (o VMwareClusterLoadBalancerMetalLbConfigOutput) AddressPools() VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerMetalLbConfig) []VMwareClusterLoadBalancerMetalLbConfigAddressPool {
		return v.AddressPools
	}).(VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput)
}

type VMwareClusterLoadBalancerMetalLbConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerMetalLbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancerMetalLbConfig)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerMetalLbConfigPtrOutput) ToVMwareClusterLoadBalancerMetalLbConfigPtrOutput() VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerMetalLbConfigPtrOutput) ToVMwareClusterLoadBalancerMetalLbConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerMetalLbConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancerMetalLbConfig] {
	return pulumix.Output[*VMwareClusterLoadBalancerMetalLbConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterLoadBalancerMetalLbConfigPtrOutput) Elem() VMwareClusterLoadBalancerMetalLbConfigOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerMetalLbConfig) VMwareClusterLoadBalancerMetalLbConfig {
		if v != nil {
			return *v
		}
		var ret VMwareClusterLoadBalancerMetalLbConfig
		return ret
	}).(VMwareClusterLoadBalancerMetalLbConfigOutput)
}

// AddressPools is a list of non-overlapping IP pools used by load balancer
// typed services. All addresses must be routable to load balancer nodes.
// IngressVIP must be included in the pools.
// Structure is documented below.
func (o VMwareClusterLoadBalancerMetalLbConfigPtrOutput) AddressPools() VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerMetalLbConfig) []VMwareClusterLoadBalancerMetalLbConfigAddressPool {
		if v == nil {
			return nil
		}
		return v.AddressPools
	}).(VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput)
}

type VMwareClusterLoadBalancerMetalLbConfigAddressPool struct {
	// The addresses that are part of this pool. Each address
	// must be either in the CIDR form (1.2.3.0/24) or range
	// form (1.2.3.1-1.2.3.5).
	Addresses []string `pulumi:"addresses"`
	// If true, avoid using IPs ending in .0 or .255.
	// This avoids buggy consumer devices mistakenly dropping IPv4 traffic for
	// those special IP addresses.
	AvoidBuggyIps *bool `pulumi:"avoidBuggyIps"`
	// If true, prevent IP addresses from being automatically assigned.
	//
	// <a name="nestedDataplaneV2"></a>The `dataplaneV2` block supports:
	ManualAssign *bool `pulumi:"manualAssign"`
	// The name of the address pool.
	Pool string `pulumi:"pool"`
}

// VMwareClusterLoadBalancerMetalLbConfigAddressPoolInput is an input type that accepts VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs and VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerMetalLbConfigAddressPoolInput` via:
//
//	VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs{...}
type VMwareClusterLoadBalancerMetalLbConfigAddressPoolInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput() VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput
	ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(context.Context) VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput
}

type VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs struct {
	// The addresses that are part of this pool. Each address
	// must be either in the CIDR form (1.2.3.0/24) or range
	// form (1.2.3.1-1.2.3.5).
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// If true, avoid using IPs ending in .0 or .255.
	// This avoids buggy consumer devices mistakenly dropping IPv4 traffic for
	// those special IP addresses.
	AvoidBuggyIps pulumi.BoolPtrInput `pulumi:"avoidBuggyIps"`
	// If true, prevent IP addresses from being automatically assigned.
	//
	// <a name="nestedDataplaneV2"></a>The `dataplaneV2` block supports:
	ManualAssign pulumi.BoolPtrInput `pulumi:"manualAssign"`
	// The name of the address pool.
	Pool pulumi.StringInput `pulumi:"pool"`
}

func (VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerMetalLbConfigAddressPool)(nil)).Elem()
}

func (i VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs) ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput() VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return i.ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs) ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput)
}

func (i VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerMetalLbConfigAddressPool] {
	return pulumix.Output[VMwareClusterLoadBalancerMetalLbConfigAddressPool]{
		OutputState: i.ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayInput is an input type that accepts VMwareClusterLoadBalancerMetalLbConfigAddressPoolArray and VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayInput` via:
//
//	VMwareClusterLoadBalancerMetalLbConfigAddressPoolArray{ VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs{...} }
type VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput() VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput
	ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(context.Context) VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput
}

type VMwareClusterLoadBalancerMetalLbConfigAddressPoolArray []VMwareClusterLoadBalancerMetalLbConfigAddressPoolInput

func (VMwareClusterLoadBalancerMetalLbConfigAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterLoadBalancerMetalLbConfigAddressPool)(nil)).Elem()
}

func (i VMwareClusterLoadBalancerMetalLbConfigAddressPoolArray) ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput() VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return i.ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerMetalLbConfigAddressPoolArray) ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput)
}

func (i VMwareClusterLoadBalancerMetalLbConfigAddressPoolArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterLoadBalancerMetalLbConfigAddressPool] {
	return pulumix.Output[[]VMwareClusterLoadBalancerMetalLbConfigAddressPool]{
		OutputState: i.ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerMetalLbConfigAddressPool)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput) ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput() VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return o
}

func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput) ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return o
}

func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerMetalLbConfigAddressPool] {
	return pulumix.Output[VMwareClusterLoadBalancerMetalLbConfigAddressPool]{
		OutputState: o.OutputState,
	}
}

// The addresses that are part of this pool. Each address
// must be either in the CIDR form (1.2.3.0/24) or range
// form (1.2.3.1-1.2.3.5).
func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerMetalLbConfigAddressPool) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// If true, avoid using IPs ending in .0 or .255.
// This avoids buggy consumer devices mistakenly dropping IPv4 traffic for
// those special IP addresses.
func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput) AvoidBuggyIps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerMetalLbConfigAddressPool) *bool { return v.AvoidBuggyIps }).(pulumi.BoolPtrOutput)
}

// If true, prevent IP addresses from being automatically assigned.
//
// <a name="nestedDataplaneV2"></a>The `dataplaneV2` block supports:
func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput) ManualAssign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerMetalLbConfigAddressPool) *bool { return v.ManualAssign }).(pulumi.BoolPtrOutput)
}

// The name of the address pool.
func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput) Pool() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerMetalLbConfigAddressPool) string { return v.Pool }).(pulumi.StringOutput)
}

type VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterLoadBalancerMetalLbConfigAddressPool)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput() VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return o
}

func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) ToVMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput {
	return o
}

func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterLoadBalancerMetalLbConfigAddressPool] {
	return pulumix.Output[[]VMwareClusterLoadBalancerMetalLbConfigAddressPool]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput) Index(i pulumi.IntInput) VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterLoadBalancerMetalLbConfigAddressPool {
		return vs[0].([]VMwareClusterLoadBalancerMetalLbConfigAddressPool)[vs[1].(int)]
	}).(VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput)
}

type VMwareClusterLoadBalancerVipConfig struct {
	// The VIP which you previously set aside for the Kubernetes API of this cluster.
	ControlPlaneVip *string `pulumi:"controlPlaneVip"`
	// The VIP which you previously set aside for ingress traffic into this cluster.
	//
	// <a name="nestedF5Config"></a>The `f5Config` block supports:
	IngressVip *string `pulumi:"ingressVip"`
}

// VMwareClusterLoadBalancerVipConfigInput is an input type that accepts VMwareClusterLoadBalancerVipConfigArgs and VMwareClusterLoadBalancerVipConfigOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerVipConfigInput` via:
//
//	VMwareClusterLoadBalancerVipConfigArgs{...}
type VMwareClusterLoadBalancerVipConfigInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerVipConfigOutput() VMwareClusterLoadBalancerVipConfigOutput
	ToVMwareClusterLoadBalancerVipConfigOutputWithContext(context.Context) VMwareClusterLoadBalancerVipConfigOutput
}

type VMwareClusterLoadBalancerVipConfigArgs struct {
	// The VIP which you previously set aside for the Kubernetes API of this cluster.
	ControlPlaneVip pulumi.StringPtrInput `pulumi:"controlPlaneVip"`
	// The VIP which you previously set aside for ingress traffic into this cluster.
	//
	// <a name="nestedF5Config"></a>The `f5Config` block supports:
	IngressVip pulumi.StringPtrInput `pulumi:"ingressVip"`
}

func (VMwareClusterLoadBalancerVipConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (i VMwareClusterLoadBalancerVipConfigArgs) ToVMwareClusterLoadBalancerVipConfigOutput() VMwareClusterLoadBalancerVipConfigOutput {
	return i.ToVMwareClusterLoadBalancerVipConfigOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerVipConfigArgs) ToVMwareClusterLoadBalancerVipConfigOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerVipConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerVipConfigOutput)
}

func (i VMwareClusterLoadBalancerVipConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerVipConfig] {
	return pulumix.Output[VMwareClusterLoadBalancerVipConfig]{
		OutputState: i.ToVMwareClusterLoadBalancerVipConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterLoadBalancerVipConfigArgs) ToVMwareClusterLoadBalancerVipConfigPtrOutput() VMwareClusterLoadBalancerVipConfigPtrOutput {
	return i.ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterLoadBalancerVipConfigArgs) ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerVipConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerVipConfigOutput).ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(ctx)
}

// VMwareClusterLoadBalancerVipConfigPtrInput is an input type that accepts VMwareClusterLoadBalancerVipConfigArgs, VMwareClusterLoadBalancerVipConfigPtr and VMwareClusterLoadBalancerVipConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterLoadBalancerVipConfigPtrInput` via:
//
//	        VMwareClusterLoadBalancerVipConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterLoadBalancerVipConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterLoadBalancerVipConfigPtrOutput() VMwareClusterLoadBalancerVipConfigPtrOutput
	ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(context.Context) VMwareClusterLoadBalancerVipConfigPtrOutput
}

type vmwareClusterLoadBalancerVipConfigPtrType VMwareClusterLoadBalancerVipConfigArgs

func VMwareClusterLoadBalancerVipConfigPtr(v *VMwareClusterLoadBalancerVipConfigArgs) VMwareClusterLoadBalancerVipConfigPtrInput {
	return (*vmwareClusterLoadBalancerVipConfigPtrType)(v)
}

func (*vmwareClusterLoadBalancerVipConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (i *vmwareClusterLoadBalancerVipConfigPtrType) ToVMwareClusterLoadBalancerVipConfigPtrOutput() VMwareClusterLoadBalancerVipConfigPtrOutput {
	return i.ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterLoadBalancerVipConfigPtrType) ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerVipConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterLoadBalancerVipConfigPtrOutput)
}

func (i *vmwareClusterLoadBalancerVipConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancerVipConfig] {
	return pulumix.Output[*VMwareClusterLoadBalancerVipConfig]{
		OutputState: i.ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterLoadBalancerVipConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerVipConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerVipConfigOutput) ToVMwareClusterLoadBalancerVipConfigOutput() VMwareClusterLoadBalancerVipConfigOutput {
	return o
}

func (o VMwareClusterLoadBalancerVipConfigOutput) ToVMwareClusterLoadBalancerVipConfigOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerVipConfigOutput {
	return o
}

func (o VMwareClusterLoadBalancerVipConfigOutput) ToVMwareClusterLoadBalancerVipConfigPtrOutput() VMwareClusterLoadBalancerVipConfigPtrOutput {
	return o.ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterLoadBalancerVipConfigOutput) ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerVipConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterLoadBalancerVipConfig) *VMwareClusterLoadBalancerVipConfig {
		return &v
	}).(VMwareClusterLoadBalancerVipConfigPtrOutput)
}

func (o VMwareClusterLoadBalancerVipConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterLoadBalancerVipConfig] {
	return pulumix.Output[VMwareClusterLoadBalancerVipConfig]{
		OutputState: o.OutputState,
	}
}

// The VIP which you previously set aside for the Kubernetes API of this cluster.
func (o VMwareClusterLoadBalancerVipConfigOutput) ControlPlaneVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerVipConfig) *string { return v.ControlPlaneVip }).(pulumi.StringPtrOutput)
}

// The VIP which you previously set aside for ingress traffic into this cluster.
//
// <a name="nestedF5Config"></a>The `f5Config` block supports:
func (o VMwareClusterLoadBalancerVipConfigOutput) IngressVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterLoadBalancerVipConfig) *string { return v.IngressVip }).(pulumi.StringPtrOutput)
}

type VMwareClusterLoadBalancerVipConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterLoadBalancerVipConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterLoadBalancerVipConfig)(nil)).Elem()
}

func (o VMwareClusterLoadBalancerVipConfigPtrOutput) ToVMwareClusterLoadBalancerVipConfigPtrOutput() VMwareClusterLoadBalancerVipConfigPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerVipConfigPtrOutput) ToVMwareClusterLoadBalancerVipConfigPtrOutputWithContext(ctx context.Context) VMwareClusterLoadBalancerVipConfigPtrOutput {
	return o
}

func (o VMwareClusterLoadBalancerVipConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterLoadBalancerVipConfig] {
	return pulumix.Output[*VMwareClusterLoadBalancerVipConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterLoadBalancerVipConfigPtrOutput) Elem() VMwareClusterLoadBalancerVipConfigOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerVipConfig) VMwareClusterLoadBalancerVipConfig {
		if v != nil {
			return *v
		}
		var ret VMwareClusterLoadBalancerVipConfig
		return ret
	}).(VMwareClusterLoadBalancerVipConfigOutput)
}

// The VIP which you previously set aside for the Kubernetes API of this cluster.
func (o VMwareClusterLoadBalancerVipConfigPtrOutput) ControlPlaneVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerVipConfig) *string {
		if v == nil {
			return nil
		}
		return v.ControlPlaneVip
	}).(pulumi.StringPtrOutput)
}

// The VIP which you previously set aside for ingress traffic into this cluster.
//
// <a name="nestedF5Config"></a>The `f5Config` block supports:
func (o VMwareClusterLoadBalancerVipConfigPtrOutput) IngressVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareClusterLoadBalancerVipConfig) *string {
		if v == nil {
			return nil
		}
		return v.IngressVip
	}).(pulumi.StringPtrOutput)
}

type VMwareClusterNetworkConfig struct {
	// Configuration for control plane V2 mode.
	// Structure is documented below.
	ControlPlaneV2Config *VMwareClusterNetworkConfigControlPlaneV2Config `pulumi:"controlPlaneV2Config"`
	// Configuration settings for a DHCP IP configuration.
	// Structure is documented below.
	DhcpIpConfig *VMwareClusterNetworkConfigDhcpIpConfig `pulumi:"dhcpIpConfig"`
	// Represents common network settings irrespective of the host's IP address.
	// Structure is documented below.
	HostConfig *VMwareClusterNetworkConfigHostConfig `pulumi:"hostConfig"`
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
	// Only a single range is supported. This field cannot be changed after creation.
	PodAddressCidrBlocks []string `pulumi:"podAddressCidrBlocks"`
	// All services in the cluster are assigned an RFC1918 IPv4 address
	// from these ranges. Only a single range is supported.. This field
	// cannot be changed after creation.
	ServiceAddressCidrBlocks []string `pulumi:"serviceAddressCidrBlocks"`
	// Configuration settings for a static IP configuration.
	// Structure is documented below.
	StaticIpConfig *VMwareClusterNetworkConfigStaticIpConfig `pulumi:"staticIpConfig"`
	// (Output)
	// vcenterNetwork specifies vCenter network name. Inherited from the admin cluster.
	VcenterNetwork *string `pulumi:"vcenterNetwork"`
}

// VMwareClusterNetworkConfigInput is an input type that accepts VMwareClusterNetworkConfigArgs and VMwareClusterNetworkConfigOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigInput` via:
//
//	VMwareClusterNetworkConfigArgs{...}
type VMwareClusterNetworkConfigInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigOutput() VMwareClusterNetworkConfigOutput
	ToVMwareClusterNetworkConfigOutputWithContext(context.Context) VMwareClusterNetworkConfigOutput
}

type VMwareClusterNetworkConfigArgs struct {
	// Configuration for control plane V2 mode.
	// Structure is documented below.
	ControlPlaneV2Config VMwareClusterNetworkConfigControlPlaneV2ConfigPtrInput `pulumi:"controlPlaneV2Config"`
	// Configuration settings for a DHCP IP configuration.
	// Structure is documented below.
	DhcpIpConfig VMwareClusterNetworkConfigDhcpIpConfigPtrInput `pulumi:"dhcpIpConfig"`
	// Represents common network settings irrespective of the host's IP address.
	// Structure is documented below.
	HostConfig VMwareClusterNetworkConfigHostConfigPtrInput `pulumi:"hostConfig"`
	// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
	// Only a single range is supported. This field cannot be changed after creation.
	PodAddressCidrBlocks pulumi.StringArrayInput `pulumi:"podAddressCidrBlocks"`
	// All services in the cluster are assigned an RFC1918 IPv4 address
	// from these ranges. Only a single range is supported.. This field
	// cannot be changed after creation.
	ServiceAddressCidrBlocks pulumi.StringArrayInput `pulumi:"serviceAddressCidrBlocks"`
	// Configuration settings for a static IP configuration.
	// Structure is documented below.
	StaticIpConfig VMwareClusterNetworkConfigStaticIpConfigPtrInput `pulumi:"staticIpConfig"`
	// (Output)
	// vcenterNetwork specifies vCenter network name. Inherited from the admin cluster.
	VcenterNetwork pulumi.StringPtrInput `pulumi:"vcenterNetwork"`
}

func (VMwareClusterNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfig)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigArgs) ToVMwareClusterNetworkConfigOutput() VMwareClusterNetworkConfigOutput {
	return i.ToVMwareClusterNetworkConfigOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigArgs) ToVMwareClusterNetworkConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigOutput)
}

func (i VMwareClusterNetworkConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfig] {
	return pulumix.Output[VMwareClusterNetworkConfig]{
		OutputState: i.ToVMwareClusterNetworkConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterNetworkConfigArgs) ToVMwareClusterNetworkConfigPtrOutput() VMwareClusterNetworkConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigArgs) ToVMwareClusterNetworkConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigOutput).ToVMwareClusterNetworkConfigPtrOutputWithContext(ctx)
}

// VMwareClusterNetworkConfigPtrInput is an input type that accepts VMwareClusterNetworkConfigArgs, VMwareClusterNetworkConfigPtr and VMwareClusterNetworkConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigPtrInput` via:
//
//	        VMwareClusterNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterNetworkConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigPtrOutput() VMwareClusterNetworkConfigPtrOutput
	ToVMwareClusterNetworkConfigPtrOutputWithContext(context.Context) VMwareClusterNetworkConfigPtrOutput
}

type vmwareClusterNetworkConfigPtrType VMwareClusterNetworkConfigArgs

func VMwareClusterNetworkConfigPtr(v *VMwareClusterNetworkConfigArgs) VMwareClusterNetworkConfigPtrInput {
	return (*vmwareClusterNetworkConfigPtrType)(v)
}

func (*vmwareClusterNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfig)(nil)).Elem()
}

func (i *vmwareClusterNetworkConfigPtrType) ToVMwareClusterNetworkConfigPtrOutput() VMwareClusterNetworkConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterNetworkConfigPtrType) ToVMwareClusterNetworkConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigPtrOutput)
}

func (i *vmwareClusterNetworkConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfig] {
	return pulumix.Output[*VMwareClusterNetworkConfig]{
		OutputState: i.ToVMwareClusterNetworkConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterNetworkConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfig)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigOutput) ToVMwareClusterNetworkConfigOutput() VMwareClusterNetworkConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigOutput) ToVMwareClusterNetworkConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigOutput) ToVMwareClusterNetworkConfigPtrOutput() VMwareClusterNetworkConfigPtrOutput {
	return o.ToVMwareClusterNetworkConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterNetworkConfigOutput) ToVMwareClusterNetworkConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterNetworkConfig) *VMwareClusterNetworkConfig {
		return &v
	}).(VMwareClusterNetworkConfigPtrOutput)
}

func (o VMwareClusterNetworkConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfig] {
	return pulumix.Output[VMwareClusterNetworkConfig]{
		OutputState: o.OutputState,
	}
}

// Configuration for control plane V2 mode.
// Structure is documented below.
func (o VMwareClusterNetworkConfigOutput) ControlPlaneV2Config() VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfig) *VMwareClusterNetworkConfigControlPlaneV2Config {
		return v.ControlPlaneV2Config
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput)
}

// Configuration settings for a DHCP IP configuration.
// Structure is documented below.
func (o VMwareClusterNetworkConfigOutput) DhcpIpConfig() VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfig) *VMwareClusterNetworkConfigDhcpIpConfig { return v.DhcpIpConfig }).(VMwareClusterNetworkConfigDhcpIpConfigPtrOutput)
}

// Represents common network settings irrespective of the host's IP address.
// Structure is documented below.
func (o VMwareClusterNetworkConfigOutput) HostConfig() VMwareClusterNetworkConfigHostConfigPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfig) *VMwareClusterNetworkConfigHostConfig { return v.HostConfig }).(VMwareClusterNetworkConfigHostConfigPtrOutput)
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
// Only a single range is supported. This field cannot be changed after creation.
func (o VMwareClusterNetworkConfigOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfig) []string { return v.PodAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address
// from these ranges. Only a single range is supported.. This field
// cannot be changed after creation.
func (o VMwareClusterNetworkConfigOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfig) []string { return v.ServiceAddressCidrBlocks }).(pulumi.StringArrayOutput)
}

// Configuration settings for a static IP configuration.
// Structure is documented below.
func (o VMwareClusterNetworkConfigOutput) StaticIpConfig() VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfig) *VMwareClusterNetworkConfigStaticIpConfig { return v.StaticIpConfig }).(VMwareClusterNetworkConfigStaticIpConfigPtrOutput)
}

// (Output)
// vcenterNetwork specifies vCenter network name. Inherited from the admin cluster.
func (o VMwareClusterNetworkConfigOutput) VcenterNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfig) *string { return v.VcenterNetwork }).(pulumi.StringPtrOutput)
}

type VMwareClusterNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfig)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigPtrOutput) ToVMwareClusterNetworkConfigPtrOutput() VMwareClusterNetworkConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigPtrOutput) ToVMwareClusterNetworkConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfig] {
	return pulumix.Output[*VMwareClusterNetworkConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterNetworkConfigPtrOutput) Elem() VMwareClusterNetworkConfigOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfig) VMwareClusterNetworkConfig {
		if v != nil {
			return *v
		}
		var ret VMwareClusterNetworkConfig
		return ret
	}).(VMwareClusterNetworkConfigOutput)
}

// Configuration for control plane V2 mode.
// Structure is documented below.
func (o VMwareClusterNetworkConfigPtrOutput) ControlPlaneV2Config() VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfig) *VMwareClusterNetworkConfigControlPlaneV2Config {
		if v == nil {
			return nil
		}
		return v.ControlPlaneV2Config
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput)
}

// Configuration settings for a DHCP IP configuration.
// Structure is documented below.
func (o VMwareClusterNetworkConfigPtrOutput) DhcpIpConfig() VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfig) *VMwareClusterNetworkConfigDhcpIpConfig {
		if v == nil {
			return nil
		}
		return v.DhcpIpConfig
	}).(VMwareClusterNetworkConfigDhcpIpConfigPtrOutput)
}

// Represents common network settings irrespective of the host's IP address.
// Structure is documented below.
func (o VMwareClusterNetworkConfigPtrOutput) HostConfig() VMwareClusterNetworkConfigHostConfigPtrOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfig) *VMwareClusterNetworkConfigHostConfig {
		if v == nil {
			return nil
		}
		return v.HostConfig
	}).(VMwareClusterNetworkConfigHostConfigPtrOutput)
}

// All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
// Only a single range is supported. This field cannot be changed after creation.
func (o VMwareClusterNetworkConfigPtrOutput) PodAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfig) []string {
		if v == nil {
			return nil
		}
		return v.PodAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

// All services in the cluster are assigned an RFC1918 IPv4 address
// from these ranges. Only a single range is supported.. This field
// cannot be changed after creation.
func (o VMwareClusterNetworkConfigPtrOutput) ServiceAddressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfig) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAddressCidrBlocks
	}).(pulumi.StringArrayOutput)
}

// Configuration settings for a static IP configuration.
// Structure is documented below.
func (o VMwareClusterNetworkConfigPtrOutput) StaticIpConfig() VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfig) *VMwareClusterNetworkConfigStaticIpConfig {
		if v == nil {
			return nil
		}
		return v.StaticIpConfig
	}).(VMwareClusterNetworkConfigStaticIpConfigPtrOutput)
}

// (Output)
// vcenterNetwork specifies vCenter network name. Inherited from the admin cluster.
func (o VMwareClusterNetworkConfigPtrOutput) VcenterNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.VcenterNetwork
	}).(pulumi.StringPtrOutput)
}

type VMwareClusterNetworkConfigControlPlaneV2Config struct {
	// Static IP addresses for the control plane nodes.
	// Structure is documented below.
	ControlPlaneIpBlock *VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock `pulumi:"controlPlaneIpBlock"`
}

// VMwareClusterNetworkConfigControlPlaneV2ConfigInput is an input type that accepts VMwareClusterNetworkConfigControlPlaneV2ConfigArgs and VMwareClusterNetworkConfigControlPlaneV2ConfigOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigControlPlaneV2ConfigInput` via:
//
//	VMwareClusterNetworkConfigControlPlaneV2ConfigArgs{...}
type VMwareClusterNetworkConfigControlPlaneV2ConfigInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigControlPlaneV2ConfigOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigOutput
	ToVMwareClusterNetworkConfigControlPlaneV2ConfigOutputWithContext(context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigOutput
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigArgs struct {
	// Static IP addresses for the control plane nodes.
	// Structure is documented below.
	ControlPlaneIpBlock VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrInput `pulumi:"controlPlaneIpBlock"`
}

func (VMwareClusterNetworkConfigControlPlaneV2ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2Config)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigOutput {
	return i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigControlPlaneV2ConfigOutput)
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2Config] {
	return pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2Config]{
		OutputState: i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigControlPlaneV2ConfigOutput).ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(ctx)
}

// VMwareClusterNetworkConfigControlPlaneV2ConfigPtrInput is an input type that accepts VMwareClusterNetworkConfigControlPlaneV2ConfigArgs, VMwareClusterNetworkConfigControlPlaneV2ConfigPtr and VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigControlPlaneV2ConfigPtrInput` via:
//
//	        VMwareClusterNetworkConfigControlPlaneV2ConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterNetworkConfigControlPlaneV2ConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput
	ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput
}

type vmwareClusterNetworkConfigControlPlaneV2ConfigPtrType VMwareClusterNetworkConfigControlPlaneV2ConfigArgs

func VMwareClusterNetworkConfigControlPlaneV2ConfigPtr(v *VMwareClusterNetworkConfigControlPlaneV2ConfigArgs) VMwareClusterNetworkConfigControlPlaneV2ConfigPtrInput {
	return (*vmwareClusterNetworkConfigControlPlaneV2ConfigPtrType)(v)
}

func (*vmwareClusterNetworkConfigControlPlaneV2ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigControlPlaneV2Config)(nil)).Elem()
}

func (i *vmwareClusterNetworkConfigControlPlaneV2ConfigPtrType) ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterNetworkConfigControlPlaneV2ConfigPtrType) ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput)
}

func (i *vmwareClusterNetworkConfigControlPlaneV2ConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigControlPlaneV2Config] {
	return pulumix.Output[*VMwareClusterNetworkConfigControlPlaneV2Config]{
		OutputState: i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigControlPlaneV2ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2Config)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return o.ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterNetworkConfigControlPlaneV2Config) *VMwareClusterNetworkConfigControlPlaneV2Config {
		return &v
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput)
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2Config] {
	return pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2Config]{
		OutputState: o.OutputState,
	}
}

// Static IP addresses for the control plane nodes.
// Structure is documented below.
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigOutput) ControlPlaneIpBlock() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigControlPlaneV2Config) *VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock {
		return v.ControlPlaneIpBlock
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput)
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigControlPlaneV2Config)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigControlPlaneV2Config] {
	return pulumix.Output[*VMwareClusterNetworkConfigControlPlaneV2Config]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput) Elem() VMwareClusterNetworkConfigControlPlaneV2ConfigOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigControlPlaneV2Config) VMwareClusterNetworkConfigControlPlaneV2Config {
		if v != nil {
			return *v
		}
		var ret VMwareClusterNetworkConfigControlPlaneV2Config
		return ret
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigOutput)
}

// Static IP addresses for the control plane nodes.
// Structure is documented below.
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput) ControlPlaneIpBlock() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigControlPlaneV2Config) *VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock {
		if v == nil {
			return nil
		}
		return v.ControlPlaneIpBlock
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput)
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock struct {
	// The network gateway used by the VMware User Cluster.
	Gateway *string `pulumi:"gateway"`
	// The node's network configurations used by the VMware User Cluster.
	// Structure is documented below.
	Ips []VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp `pulumi:"ips"`
	// The netmask used by the VMware User Cluster.
	Netmask *string `pulumi:"netmask"`
}

// VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockInput is an input type that accepts VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs and VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockInput` via:
//
//	VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs{...}
type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput
	ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutputWithContext(context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs struct {
	// The network gateway used by the VMware User Cluster.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// The node's network configurations used by the VMware User Cluster.
	// Structure is documented below.
	Ips VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayInput `pulumi:"ips"`
	// The netmask used by the VMware User Cluster.
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
}

func (VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput {
	return i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput)
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock] {
	return pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock]{
		OutputState: i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput).ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(ctx)
}

// VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrInput is an input type that accepts VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs, VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtr and VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrInput` via:
//
//	        VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput
	ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput
}

type vmwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrType VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs

func VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtr(v *VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrInput {
	return (*vmwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrType)(v)
}

func (*vmwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock)(nil)).Elem()
}

func (i *vmwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrType) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrType) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput)
}

func (i *vmwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock] {
	return pulumix.Output[*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock]{
		OutputState: i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return o.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(context.Background())
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock) *VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock {
		return &v
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput)
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock] {
	return pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock]{
		OutputState: o.OutputState,
	}
}

// The network gateway used by the VMware User Cluster.
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// The node's network configurations used by the VMware User Cluster.
// Structure is documented below.
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput) Ips() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock) []VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp {
		return v.Ips
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput)
}

// The netmask used by the VMware User Cluster.
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock] {
	return pulumix.Output[*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput) Elem() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock {
		if v != nil {
			return *v
		}
		var ret VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock
		return ret
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput)
}

// The network gateway used by the VMware User Cluster.
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

// The node's network configurations used by the VMware User Cluster.
// Structure is documented below.
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput) Ips() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock) []VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput)
}

// The netmask used by the VMware User Cluster.
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlock) *string {
		if v == nil {
			return nil
		}
		return v.Netmask
	}).(pulumi.StringPtrOutput)
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp struct {
	// Hostname of the machine. VM's name will be used if this field is empty.
	Hostname *string `pulumi:"hostname"`
	// IP could be an IP address (like 1.2.3.4) or a CIDR (like 1.2.3.0/24).
	Ip *string `pulumi:"ip"`
}

// VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpInput is an input type that accepts VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs and VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpInput` via:
//
//	VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs{...}
type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput
	ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutputWithContext(context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs struct {
	// Hostname of the machine. VM's name will be used if this field is empty.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// IP could be an IP address (like 1.2.3.4) or a CIDR (like 1.2.3.0/24).
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput {
	return i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput)
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp] {
	return pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp]{
		OutputState: i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayInput is an input type that accepts VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArray and VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayInput` via:
//
//	VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArray{ VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs{...} }
type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput
	ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutputWithContext(context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArray []VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpInput

func (VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArray) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput {
	return i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArray) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput)
}

func (i VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp] {
	return pulumix.Output[[]VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp]{
		OutputState: i.ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp] {
	return pulumix.Output[VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp]{
		OutputState: o.OutputState,
	}
}

// Hostname of the machine. VM's name will be used if this field is empty.
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IP could be an IP address (like 1.2.3.4) or a CIDR (like 1.2.3.0/24).
func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput() VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput) ToVMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput {
	return o
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp] {
	return pulumix.Output[[]VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput) Index(i pulumi.IntInput) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp {
		return vs[0].([]VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIp)[vs[1].(int)]
	}).(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput)
}

type VMwareClusterNetworkConfigDhcpIpConfig struct {
	// enabled is a flag to mark if DHCP IP allocation is
	// used for VMware user clusters.
	Enabled bool `pulumi:"enabled"`
}

// VMwareClusterNetworkConfigDhcpIpConfigInput is an input type that accepts VMwareClusterNetworkConfigDhcpIpConfigArgs and VMwareClusterNetworkConfigDhcpIpConfigOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigDhcpIpConfigInput` via:
//
//	VMwareClusterNetworkConfigDhcpIpConfigArgs{...}
type VMwareClusterNetworkConfigDhcpIpConfigInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigDhcpIpConfigOutput() VMwareClusterNetworkConfigDhcpIpConfigOutput
	ToVMwareClusterNetworkConfigDhcpIpConfigOutputWithContext(context.Context) VMwareClusterNetworkConfigDhcpIpConfigOutput
}

type VMwareClusterNetworkConfigDhcpIpConfigArgs struct {
	// enabled is a flag to mark if DHCP IP allocation is
	// used for VMware user clusters.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VMwareClusterNetworkConfigDhcpIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigDhcpIpConfig)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigDhcpIpConfigArgs) ToVMwareClusterNetworkConfigDhcpIpConfigOutput() VMwareClusterNetworkConfigDhcpIpConfigOutput {
	return i.ToVMwareClusterNetworkConfigDhcpIpConfigOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigDhcpIpConfigArgs) ToVMwareClusterNetworkConfigDhcpIpConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigDhcpIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigDhcpIpConfigOutput)
}

func (i VMwareClusterNetworkConfigDhcpIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigDhcpIpConfig] {
	return pulumix.Output[VMwareClusterNetworkConfigDhcpIpConfig]{
		OutputState: i.ToVMwareClusterNetworkConfigDhcpIpConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterNetworkConfigDhcpIpConfigArgs) ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutput() VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigDhcpIpConfigArgs) ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigDhcpIpConfigOutput).ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(ctx)
}

// VMwareClusterNetworkConfigDhcpIpConfigPtrInput is an input type that accepts VMwareClusterNetworkConfigDhcpIpConfigArgs, VMwareClusterNetworkConfigDhcpIpConfigPtr and VMwareClusterNetworkConfigDhcpIpConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigDhcpIpConfigPtrInput` via:
//
//	        VMwareClusterNetworkConfigDhcpIpConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterNetworkConfigDhcpIpConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutput() VMwareClusterNetworkConfigDhcpIpConfigPtrOutput
	ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(context.Context) VMwareClusterNetworkConfigDhcpIpConfigPtrOutput
}

type vmwareClusterNetworkConfigDhcpIpConfigPtrType VMwareClusterNetworkConfigDhcpIpConfigArgs

func VMwareClusterNetworkConfigDhcpIpConfigPtr(v *VMwareClusterNetworkConfigDhcpIpConfigArgs) VMwareClusterNetworkConfigDhcpIpConfigPtrInput {
	return (*vmwareClusterNetworkConfigDhcpIpConfigPtrType)(v)
}

func (*vmwareClusterNetworkConfigDhcpIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigDhcpIpConfig)(nil)).Elem()
}

func (i *vmwareClusterNetworkConfigDhcpIpConfigPtrType) ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutput() VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterNetworkConfigDhcpIpConfigPtrType) ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigDhcpIpConfigPtrOutput)
}

func (i *vmwareClusterNetworkConfigDhcpIpConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigDhcpIpConfig] {
	return pulumix.Output[*VMwareClusterNetworkConfigDhcpIpConfig]{
		OutputState: i.ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterNetworkConfigDhcpIpConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigDhcpIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigDhcpIpConfig)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigDhcpIpConfigOutput) ToVMwareClusterNetworkConfigDhcpIpConfigOutput() VMwareClusterNetworkConfigDhcpIpConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigDhcpIpConfigOutput) ToVMwareClusterNetworkConfigDhcpIpConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigDhcpIpConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigDhcpIpConfigOutput) ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutput() VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return o.ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterNetworkConfigDhcpIpConfigOutput) ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterNetworkConfigDhcpIpConfig) *VMwareClusterNetworkConfigDhcpIpConfig {
		return &v
	}).(VMwareClusterNetworkConfigDhcpIpConfigPtrOutput)
}

func (o VMwareClusterNetworkConfigDhcpIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigDhcpIpConfig] {
	return pulumix.Output[VMwareClusterNetworkConfigDhcpIpConfig]{
		OutputState: o.OutputState,
	}
}

// enabled is a flag to mark if DHCP IP allocation is
// used for VMware user clusters.
func (o VMwareClusterNetworkConfigDhcpIpConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigDhcpIpConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VMwareClusterNetworkConfigDhcpIpConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigDhcpIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigDhcpIpConfig)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigDhcpIpConfigPtrOutput) ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutput() VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigDhcpIpConfigPtrOutput) ToVMwareClusterNetworkConfigDhcpIpConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigDhcpIpConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigDhcpIpConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigDhcpIpConfig] {
	return pulumix.Output[*VMwareClusterNetworkConfigDhcpIpConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterNetworkConfigDhcpIpConfigPtrOutput) Elem() VMwareClusterNetworkConfigDhcpIpConfigOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigDhcpIpConfig) VMwareClusterNetworkConfigDhcpIpConfig {
		if v != nil {
			return *v
		}
		var ret VMwareClusterNetworkConfigDhcpIpConfig
		return ret
	}).(VMwareClusterNetworkConfigDhcpIpConfigOutput)
}

// enabled is a flag to mark if DHCP IP allocation is
// used for VMware user clusters.
func (o VMwareClusterNetworkConfigDhcpIpConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigDhcpIpConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VMwareClusterNetworkConfigHostConfig struct {
	// DNS search domains.
	//
	// <a name="nestedControlPlaneV2Config"></a>The `controlPlaneV2Config` block supports:
	DnsSearchDomains []string `pulumi:"dnsSearchDomains"`
	// DNS servers.
	DnsServers []string `pulumi:"dnsServers"`
	// NTP servers.
	NtpServers []string `pulumi:"ntpServers"`
}

// VMwareClusterNetworkConfigHostConfigInput is an input type that accepts VMwareClusterNetworkConfigHostConfigArgs and VMwareClusterNetworkConfigHostConfigOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigHostConfigInput` via:
//
//	VMwareClusterNetworkConfigHostConfigArgs{...}
type VMwareClusterNetworkConfigHostConfigInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigHostConfigOutput() VMwareClusterNetworkConfigHostConfigOutput
	ToVMwareClusterNetworkConfigHostConfigOutputWithContext(context.Context) VMwareClusterNetworkConfigHostConfigOutput
}

type VMwareClusterNetworkConfigHostConfigArgs struct {
	// DNS search domains.
	//
	// <a name="nestedControlPlaneV2Config"></a>The `controlPlaneV2Config` block supports:
	DnsSearchDomains pulumi.StringArrayInput `pulumi:"dnsSearchDomains"`
	// DNS servers.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// NTP servers.
	NtpServers pulumi.StringArrayInput `pulumi:"ntpServers"`
}

func (VMwareClusterNetworkConfigHostConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigHostConfig)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigHostConfigArgs) ToVMwareClusterNetworkConfigHostConfigOutput() VMwareClusterNetworkConfigHostConfigOutput {
	return i.ToVMwareClusterNetworkConfigHostConfigOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigHostConfigArgs) ToVMwareClusterNetworkConfigHostConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigHostConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigHostConfigOutput)
}

func (i VMwareClusterNetworkConfigHostConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigHostConfig] {
	return pulumix.Output[VMwareClusterNetworkConfigHostConfig]{
		OutputState: i.ToVMwareClusterNetworkConfigHostConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterNetworkConfigHostConfigArgs) ToVMwareClusterNetworkConfigHostConfigPtrOutput() VMwareClusterNetworkConfigHostConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigHostConfigArgs) ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigHostConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigHostConfigOutput).ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(ctx)
}

// VMwareClusterNetworkConfigHostConfigPtrInput is an input type that accepts VMwareClusterNetworkConfigHostConfigArgs, VMwareClusterNetworkConfigHostConfigPtr and VMwareClusterNetworkConfigHostConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigHostConfigPtrInput` via:
//
//	        VMwareClusterNetworkConfigHostConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterNetworkConfigHostConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigHostConfigPtrOutput() VMwareClusterNetworkConfigHostConfigPtrOutput
	ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(context.Context) VMwareClusterNetworkConfigHostConfigPtrOutput
}

type vmwareClusterNetworkConfigHostConfigPtrType VMwareClusterNetworkConfigHostConfigArgs

func VMwareClusterNetworkConfigHostConfigPtr(v *VMwareClusterNetworkConfigHostConfigArgs) VMwareClusterNetworkConfigHostConfigPtrInput {
	return (*vmwareClusterNetworkConfigHostConfigPtrType)(v)
}

func (*vmwareClusterNetworkConfigHostConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigHostConfig)(nil)).Elem()
}

func (i *vmwareClusterNetworkConfigHostConfigPtrType) ToVMwareClusterNetworkConfigHostConfigPtrOutput() VMwareClusterNetworkConfigHostConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterNetworkConfigHostConfigPtrType) ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigHostConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigHostConfigPtrOutput)
}

func (i *vmwareClusterNetworkConfigHostConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigHostConfig] {
	return pulumix.Output[*VMwareClusterNetworkConfigHostConfig]{
		OutputState: i.ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterNetworkConfigHostConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigHostConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigHostConfig)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigHostConfigOutput) ToVMwareClusterNetworkConfigHostConfigOutput() VMwareClusterNetworkConfigHostConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigHostConfigOutput) ToVMwareClusterNetworkConfigHostConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigHostConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigHostConfigOutput) ToVMwareClusterNetworkConfigHostConfigPtrOutput() VMwareClusterNetworkConfigHostConfigPtrOutput {
	return o.ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterNetworkConfigHostConfigOutput) ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigHostConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterNetworkConfigHostConfig) *VMwareClusterNetworkConfigHostConfig {
		return &v
	}).(VMwareClusterNetworkConfigHostConfigPtrOutput)
}

func (o VMwareClusterNetworkConfigHostConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigHostConfig] {
	return pulumix.Output[VMwareClusterNetworkConfigHostConfig]{
		OutputState: o.OutputState,
	}
}

// DNS search domains.
//
// <a name="nestedControlPlaneV2Config"></a>The `controlPlaneV2Config` block supports:
func (o VMwareClusterNetworkConfigHostConfigOutput) DnsSearchDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigHostConfig) []string { return v.DnsSearchDomains }).(pulumi.StringArrayOutput)
}

// DNS servers.
func (o VMwareClusterNetworkConfigHostConfigOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigHostConfig) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// NTP servers.
func (o VMwareClusterNetworkConfigHostConfigOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigHostConfig) []string { return v.NtpServers }).(pulumi.StringArrayOutput)
}

type VMwareClusterNetworkConfigHostConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigHostConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigHostConfig)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigHostConfigPtrOutput) ToVMwareClusterNetworkConfigHostConfigPtrOutput() VMwareClusterNetworkConfigHostConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigHostConfigPtrOutput) ToVMwareClusterNetworkConfigHostConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigHostConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigHostConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigHostConfig] {
	return pulumix.Output[*VMwareClusterNetworkConfigHostConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterNetworkConfigHostConfigPtrOutput) Elem() VMwareClusterNetworkConfigHostConfigOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigHostConfig) VMwareClusterNetworkConfigHostConfig {
		if v != nil {
			return *v
		}
		var ret VMwareClusterNetworkConfigHostConfig
		return ret
	}).(VMwareClusterNetworkConfigHostConfigOutput)
}

// DNS search domains.
//
// <a name="nestedControlPlaneV2Config"></a>The `controlPlaneV2Config` block supports:
func (o VMwareClusterNetworkConfigHostConfigPtrOutput) DnsSearchDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigHostConfig) []string {
		if v == nil {
			return nil
		}
		return v.DnsSearchDomains
	}).(pulumi.StringArrayOutput)
}

// DNS servers.
func (o VMwareClusterNetworkConfigHostConfigPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigHostConfig) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// NTP servers.
func (o VMwareClusterNetworkConfigHostConfigPtrOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigHostConfig) []string {
		if v == nil {
			return nil
		}
		return v.NtpServers
	}).(pulumi.StringArrayOutput)
}

type VMwareClusterNetworkConfigStaticIpConfig struct {
	// Represents the configuration values for static IP allocation to nodes.
	// Structure is documented below.
	IpBlocks []VMwareClusterNetworkConfigStaticIpConfigIpBlock `pulumi:"ipBlocks"`
}

// VMwareClusterNetworkConfigStaticIpConfigInput is an input type that accepts VMwareClusterNetworkConfigStaticIpConfigArgs and VMwareClusterNetworkConfigStaticIpConfigOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigStaticIpConfigInput` via:
//
//	VMwareClusterNetworkConfigStaticIpConfigArgs{...}
type VMwareClusterNetworkConfigStaticIpConfigInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigStaticIpConfigOutput() VMwareClusterNetworkConfigStaticIpConfigOutput
	ToVMwareClusterNetworkConfigStaticIpConfigOutputWithContext(context.Context) VMwareClusterNetworkConfigStaticIpConfigOutput
}

type VMwareClusterNetworkConfigStaticIpConfigArgs struct {
	// Represents the configuration values for static IP allocation to nodes.
	// Structure is documented below.
	IpBlocks VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayInput `pulumi:"ipBlocks"`
}

func (VMwareClusterNetworkConfigStaticIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfig)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigStaticIpConfigArgs) ToVMwareClusterNetworkConfigStaticIpConfigOutput() VMwareClusterNetworkConfigStaticIpConfigOutput {
	return i.ToVMwareClusterNetworkConfigStaticIpConfigOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigStaticIpConfigArgs) ToVMwareClusterNetworkConfigStaticIpConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigStaticIpConfigOutput)
}

func (i VMwareClusterNetworkConfigStaticIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigStaticIpConfig] {
	return pulumix.Output[VMwareClusterNetworkConfigStaticIpConfig]{
		OutputState: i.ToVMwareClusterNetworkConfigStaticIpConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterNetworkConfigStaticIpConfigArgs) ToVMwareClusterNetworkConfigStaticIpConfigPtrOutput() VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigStaticIpConfigArgs) ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigStaticIpConfigOutput).ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(ctx)
}

// VMwareClusterNetworkConfigStaticIpConfigPtrInput is an input type that accepts VMwareClusterNetworkConfigStaticIpConfigArgs, VMwareClusterNetworkConfigStaticIpConfigPtr and VMwareClusterNetworkConfigStaticIpConfigPtrOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigStaticIpConfigPtrInput` via:
//
//	        VMwareClusterNetworkConfigStaticIpConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterNetworkConfigStaticIpConfigPtrInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigStaticIpConfigPtrOutput() VMwareClusterNetworkConfigStaticIpConfigPtrOutput
	ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(context.Context) VMwareClusterNetworkConfigStaticIpConfigPtrOutput
}

type vmwareClusterNetworkConfigStaticIpConfigPtrType VMwareClusterNetworkConfigStaticIpConfigArgs

func VMwareClusterNetworkConfigStaticIpConfigPtr(v *VMwareClusterNetworkConfigStaticIpConfigArgs) VMwareClusterNetworkConfigStaticIpConfigPtrInput {
	return (*vmwareClusterNetworkConfigStaticIpConfigPtrType)(v)
}

func (*vmwareClusterNetworkConfigStaticIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigStaticIpConfig)(nil)).Elem()
}

func (i *vmwareClusterNetworkConfigStaticIpConfigPtrType) ToVMwareClusterNetworkConfigStaticIpConfigPtrOutput() VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return i.ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareClusterNetworkConfigStaticIpConfigPtrType) ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigStaticIpConfigPtrOutput)
}

func (i *vmwareClusterNetworkConfigStaticIpConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigStaticIpConfig] {
	return pulumix.Output[*VMwareClusterNetworkConfigStaticIpConfig]{
		OutputState: i.ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterNetworkConfigStaticIpConfigOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigStaticIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfig)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigStaticIpConfigOutput) ToVMwareClusterNetworkConfigStaticIpConfigOutput() VMwareClusterNetworkConfigStaticIpConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigOutput) ToVMwareClusterNetworkConfigStaticIpConfigOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigOutput) ToVMwareClusterNetworkConfigStaticIpConfigPtrOutput() VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return o.ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(context.Background())
}

func (o VMwareClusterNetworkConfigStaticIpConfigOutput) ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterNetworkConfigStaticIpConfig) *VMwareClusterNetworkConfigStaticIpConfig {
		return &v
	}).(VMwareClusterNetworkConfigStaticIpConfigPtrOutput)
}

func (o VMwareClusterNetworkConfigStaticIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigStaticIpConfig] {
	return pulumix.Output[VMwareClusterNetworkConfigStaticIpConfig]{
		OutputState: o.OutputState,
	}
}

// Represents the configuration values for static IP allocation to nodes.
// Structure is documented below.
func (o VMwareClusterNetworkConfigStaticIpConfigOutput) IpBlocks() VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigStaticIpConfig) []VMwareClusterNetworkConfigStaticIpConfigIpBlock {
		return v.IpBlocks
	}).(VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput)
}

type VMwareClusterNetworkConfigStaticIpConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigStaticIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterNetworkConfigStaticIpConfig)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigStaticIpConfigPtrOutput) ToVMwareClusterNetworkConfigStaticIpConfigPtrOutput() VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigPtrOutput) ToVMwareClusterNetworkConfigStaticIpConfigPtrOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigPtrOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterNetworkConfigStaticIpConfig] {
	return pulumix.Output[*VMwareClusterNetworkConfigStaticIpConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterNetworkConfigStaticIpConfigPtrOutput) Elem() VMwareClusterNetworkConfigStaticIpConfigOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigStaticIpConfig) VMwareClusterNetworkConfigStaticIpConfig {
		if v != nil {
			return *v
		}
		var ret VMwareClusterNetworkConfigStaticIpConfig
		return ret
	}).(VMwareClusterNetworkConfigStaticIpConfigOutput)
}

// Represents the configuration values for static IP allocation to nodes.
// Structure is documented below.
func (o VMwareClusterNetworkConfigStaticIpConfigPtrOutput) IpBlocks() VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput {
	return o.ApplyT(func(v *VMwareClusterNetworkConfigStaticIpConfig) []VMwareClusterNetworkConfigStaticIpConfigIpBlock {
		if v == nil {
			return nil
		}
		return v.IpBlocks
	}).(VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput)
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlock struct {
	// The network gateway used by the VMware User Cluster.
	Gateway string `pulumi:"gateway"`
	// The node's network configurations used by the VMware User Cluster.
	// Structure is documented below.
	Ips []VMwareClusterNetworkConfigStaticIpConfigIpBlockIp `pulumi:"ips"`
	// The netmask used by the VMware User Cluster.
	Netmask string `pulumi:"netmask"`
}

// VMwareClusterNetworkConfigStaticIpConfigIpBlockInput is an input type that accepts VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs and VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigStaticIpConfigIpBlockInput` via:
//
//	VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs{...}
type VMwareClusterNetworkConfigStaticIpConfigIpBlockInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigStaticIpConfigIpBlockOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput
	ToVMwareClusterNetworkConfigStaticIpConfigIpBlockOutputWithContext(context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs struct {
	// The network gateway used by the VMware User Cluster.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// The node's network configurations used by the VMware User Cluster.
	// Structure is documented below.
	Ips VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayInput `pulumi:"ips"`
	// The netmask used by the VMware User Cluster.
	Netmask pulumi.StringInput `pulumi:"netmask"`
}

func (VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigIpBlock)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput {
	return i.ToVMwareClusterNetworkConfigStaticIpConfigIpBlockOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput)
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigStaticIpConfigIpBlock] {
	return pulumix.Output[VMwareClusterNetworkConfigStaticIpConfigIpBlock]{
		OutputState: i.ToVMwareClusterNetworkConfigStaticIpConfigIpBlockOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayInput is an input type that accepts VMwareClusterNetworkConfigStaticIpConfigIpBlockArray and VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayInput` via:
//
//	VMwareClusterNetworkConfigStaticIpConfigIpBlockArray{ VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs{...} }
type VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput
	ToVMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutputWithContext(context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlockArray []VMwareClusterNetworkConfigStaticIpConfigIpBlockInput

func (VMwareClusterNetworkConfigStaticIpConfigIpBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterNetworkConfigStaticIpConfigIpBlock)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockArray) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput {
	return i.ToVMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockArray) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput)
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterNetworkConfigStaticIpConfigIpBlock] {
	return pulumix.Output[[]VMwareClusterNetworkConfigStaticIpConfigIpBlock]{
		OutputState: i.ToVMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigIpBlock)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigStaticIpConfigIpBlock] {
	return pulumix.Output[VMwareClusterNetworkConfigStaticIpConfigIpBlock]{
		OutputState: o.OutputState,
	}
}

// The network gateway used by the VMware User Cluster.
func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigStaticIpConfigIpBlock) string { return v.Gateway }).(pulumi.StringOutput)
}

// The node's network configurations used by the VMware User Cluster.
// Structure is documented below.
func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput) Ips() VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigStaticIpConfigIpBlock) []VMwareClusterNetworkConfigStaticIpConfigIpBlockIp {
		return v.Ips
	}).(VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput)
}

// The netmask used by the VMware User Cluster.
func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigStaticIpConfigIpBlock) string { return v.Netmask }).(pulumi.StringOutput)
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterNetworkConfigStaticIpConfigIpBlock)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterNetworkConfigStaticIpConfigIpBlock] {
	return pulumix.Output[[]VMwareClusterNetworkConfigStaticIpConfigIpBlock]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput) Index(i pulumi.IntInput) VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterNetworkConfigStaticIpConfigIpBlock {
		return vs[0].([]VMwareClusterNetworkConfigStaticIpConfigIpBlock)[vs[1].(int)]
	}).(VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput)
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlockIp struct {
	// Hostname of the machine. VM's name will be used if this field is empty.
	Hostname *string `pulumi:"hostname"`
	// IP could be an IP address (like 1.2.3.4) or a CIDR (like 1.2.3.0/24).
	Ip string `pulumi:"ip"`
}

// VMwareClusterNetworkConfigStaticIpConfigIpBlockIpInput is an input type that accepts VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs and VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigStaticIpConfigIpBlockIpInput` via:
//
//	VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs{...}
type VMwareClusterNetworkConfigStaticIpConfigIpBlockIpInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput
	ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutputWithContext(context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs struct {
	// Hostname of the machine. VM's name will be used if this field is empty.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// IP could be an IP address (like 1.2.3.4) or a CIDR (like 1.2.3.0/24).
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigIpBlockIp)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput {
	return i.ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput)
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigStaticIpConfigIpBlockIp] {
	return pulumix.Output[VMwareClusterNetworkConfigStaticIpConfigIpBlockIp]{
		OutputState: i.ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayInput is an input type that accepts VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArray and VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput values.
// You can construct a concrete instance of `VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayInput` via:
//
//	VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArray{ VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs{...} }
type VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayInput interface {
	pulumi.Input

	ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput
	ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutputWithContext(context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArray []VMwareClusterNetworkConfigStaticIpConfigIpBlockIpInput

func (VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterNetworkConfigStaticIpConfigIpBlockIp)(nil)).Elem()
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArray) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput {
	return i.ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutputWithContext(context.Background())
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArray) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput)
}

func (i VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterNetworkConfigStaticIpConfigIpBlockIp] {
	return pulumix.Output[[]VMwareClusterNetworkConfigStaticIpConfigIpBlockIp]{
		OutputState: i.ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigIpBlockIp)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterNetworkConfigStaticIpConfigIpBlockIp] {
	return pulumix.Output[VMwareClusterNetworkConfigStaticIpConfigIpBlockIp]{
		OutputState: o.OutputState,
	}
}

// Hostname of the machine. VM's name will be used if this field is empty.
func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigStaticIpConfigIpBlockIp) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IP could be an IP address (like 1.2.3.4) or a CIDR (like 1.2.3.0/24).
func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareClusterNetworkConfigStaticIpConfigIpBlockIp) string { return v.Ip }).(pulumi.StringOutput)
}

type VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterNetworkConfigStaticIpConfigIpBlockIp)(nil)).Elem()
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput() VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput) ToVMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutputWithContext(ctx context.Context) VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput {
	return o
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterNetworkConfigStaticIpConfigIpBlockIp] {
	return pulumix.Output[[]VMwareClusterNetworkConfigStaticIpConfigIpBlockIp]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput) Index(i pulumi.IntInput) VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterNetworkConfigStaticIpConfigIpBlockIp {
		return vs[0].([]VMwareClusterNetworkConfigStaticIpConfigIpBlockIp)[vs[1].(int)]
	}).(VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput)
}

type VMwareClusterStatus struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
	// Structure is documented below.
	Conditions []VMwareClusterStatusCondition `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the user cluster
	// controller. The error message can be temporary as the user cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage *string `pulumi:"errorMessage"`
}

// VMwareClusterStatusInput is an input type that accepts VMwareClusterStatusArgs and VMwareClusterStatusOutput values.
// You can construct a concrete instance of `VMwareClusterStatusInput` via:
//
//	VMwareClusterStatusArgs{...}
type VMwareClusterStatusInput interface {
	pulumi.Input

	ToVMwareClusterStatusOutput() VMwareClusterStatusOutput
	ToVMwareClusterStatusOutputWithContext(context.Context) VMwareClusterStatusOutput
}

type VMwareClusterStatusArgs struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
	// Structure is documented below.
	Conditions VMwareClusterStatusConditionArrayInput `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the user cluster
	// controller. The error message can be temporary as the user cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
}

func (VMwareClusterStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterStatus)(nil)).Elem()
}

func (i VMwareClusterStatusArgs) ToVMwareClusterStatusOutput() VMwareClusterStatusOutput {
	return i.ToVMwareClusterStatusOutputWithContext(context.Background())
}

func (i VMwareClusterStatusArgs) ToVMwareClusterStatusOutputWithContext(ctx context.Context) VMwareClusterStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterStatusOutput)
}

func (i VMwareClusterStatusArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterStatus] {
	return pulumix.Output[VMwareClusterStatus]{
		OutputState: i.ToVMwareClusterStatusOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterStatusArrayInput is an input type that accepts VMwareClusterStatusArray and VMwareClusterStatusArrayOutput values.
// You can construct a concrete instance of `VMwareClusterStatusArrayInput` via:
//
//	VMwareClusterStatusArray{ VMwareClusterStatusArgs{...} }
type VMwareClusterStatusArrayInput interface {
	pulumi.Input

	ToVMwareClusterStatusArrayOutput() VMwareClusterStatusArrayOutput
	ToVMwareClusterStatusArrayOutputWithContext(context.Context) VMwareClusterStatusArrayOutput
}

type VMwareClusterStatusArray []VMwareClusterStatusInput

func (VMwareClusterStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterStatus)(nil)).Elem()
}

func (i VMwareClusterStatusArray) ToVMwareClusterStatusArrayOutput() VMwareClusterStatusArrayOutput {
	return i.ToVMwareClusterStatusArrayOutputWithContext(context.Background())
}

func (i VMwareClusterStatusArray) ToVMwareClusterStatusArrayOutputWithContext(ctx context.Context) VMwareClusterStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterStatusArrayOutput)
}

func (i VMwareClusterStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterStatus] {
	return pulumix.Output[[]VMwareClusterStatus]{
		OutputState: i.ToVMwareClusterStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterStatusOutput struct{ *pulumi.OutputState }

func (VMwareClusterStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterStatus)(nil)).Elem()
}

func (o VMwareClusterStatusOutput) ToVMwareClusterStatusOutput() VMwareClusterStatusOutput {
	return o
}

func (o VMwareClusterStatusOutput) ToVMwareClusterStatusOutputWithContext(ctx context.Context) VMwareClusterStatusOutput {
	return o
}

func (o VMwareClusterStatusOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterStatus] {
	return pulumix.Output[VMwareClusterStatus]{
		OutputState: o.OutputState,
	}
}

// (Output)
// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
// Structure is documented below.
func (o VMwareClusterStatusOutput) Conditions() VMwareClusterStatusConditionArrayOutput {
	return o.ApplyT(func(v VMwareClusterStatus) []VMwareClusterStatusCondition { return v.Conditions }).(VMwareClusterStatusConditionArrayOutput)
}

// (Output)
// Human-friendly representation of the error message from the user cluster
// controller. The error message can be temporary as the user cluster
// controller creates a cluster or node pool. If the error message persists
// for a longer period of time, it can be used to surface error message to
// indicate real problems requiring user intervention.
func (o VMwareClusterStatusOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterStatus) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

type VMwareClusterStatusArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterStatus)(nil)).Elem()
}

func (o VMwareClusterStatusArrayOutput) ToVMwareClusterStatusArrayOutput() VMwareClusterStatusArrayOutput {
	return o
}

func (o VMwareClusterStatusArrayOutput) ToVMwareClusterStatusArrayOutputWithContext(ctx context.Context) VMwareClusterStatusArrayOutput {
	return o
}

func (o VMwareClusterStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterStatus] {
	return pulumix.Output[[]VMwareClusterStatus]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterStatusArrayOutput) Index(i pulumi.IntInput) VMwareClusterStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterStatus {
		return vs[0].([]VMwareClusterStatus)[vs[1].(int)]
	}).(VMwareClusterStatusOutput)
}

type VMwareClusterStatusCondition struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// (Output)
	// Human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`
	// (Output)
	// Machine-readable message indicating details about last transition.
	Reason *string `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State *string `pulumi:"state"`
	// (Output)
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type *string `pulumi:"type"`
}

// VMwareClusterStatusConditionInput is an input type that accepts VMwareClusterStatusConditionArgs and VMwareClusterStatusConditionOutput values.
// You can construct a concrete instance of `VMwareClusterStatusConditionInput` via:
//
//	VMwareClusterStatusConditionArgs{...}
type VMwareClusterStatusConditionInput interface {
	pulumi.Input

	ToVMwareClusterStatusConditionOutput() VMwareClusterStatusConditionOutput
	ToVMwareClusterStatusConditionOutputWithContext(context.Context) VMwareClusterStatusConditionOutput
}

type VMwareClusterStatusConditionArgs struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// (Output)
	// Human-readable message indicating details about last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (Output)
	// Machine-readable message indicating details about last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State pulumi.StringPtrInput `pulumi:"state"`
	// (Output)
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VMwareClusterStatusConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterStatusCondition)(nil)).Elem()
}

func (i VMwareClusterStatusConditionArgs) ToVMwareClusterStatusConditionOutput() VMwareClusterStatusConditionOutput {
	return i.ToVMwareClusterStatusConditionOutputWithContext(context.Background())
}

func (i VMwareClusterStatusConditionArgs) ToVMwareClusterStatusConditionOutputWithContext(ctx context.Context) VMwareClusterStatusConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterStatusConditionOutput)
}

func (i VMwareClusterStatusConditionArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterStatusCondition] {
	return pulumix.Output[VMwareClusterStatusCondition]{
		OutputState: i.ToVMwareClusterStatusConditionOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterStatusConditionArrayInput is an input type that accepts VMwareClusterStatusConditionArray and VMwareClusterStatusConditionArrayOutput values.
// You can construct a concrete instance of `VMwareClusterStatusConditionArrayInput` via:
//
//	VMwareClusterStatusConditionArray{ VMwareClusterStatusConditionArgs{...} }
type VMwareClusterStatusConditionArrayInput interface {
	pulumi.Input

	ToVMwareClusterStatusConditionArrayOutput() VMwareClusterStatusConditionArrayOutput
	ToVMwareClusterStatusConditionArrayOutputWithContext(context.Context) VMwareClusterStatusConditionArrayOutput
}

type VMwareClusterStatusConditionArray []VMwareClusterStatusConditionInput

func (VMwareClusterStatusConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterStatusCondition)(nil)).Elem()
}

func (i VMwareClusterStatusConditionArray) ToVMwareClusterStatusConditionArrayOutput() VMwareClusterStatusConditionArrayOutput {
	return i.ToVMwareClusterStatusConditionArrayOutputWithContext(context.Background())
}

func (i VMwareClusterStatusConditionArray) ToVMwareClusterStatusConditionArrayOutputWithContext(ctx context.Context) VMwareClusterStatusConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterStatusConditionArrayOutput)
}

func (i VMwareClusterStatusConditionArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterStatusCondition] {
	return pulumix.Output[[]VMwareClusterStatusCondition]{
		OutputState: i.ToVMwareClusterStatusConditionArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterStatusConditionOutput struct{ *pulumi.OutputState }

func (VMwareClusterStatusConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterStatusCondition)(nil)).Elem()
}

func (o VMwareClusterStatusConditionOutput) ToVMwareClusterStatusConditionOutput() VMwareClusterStatusConditionOutput {
	return o
}

func (o VMwareClusterStatusConditionOutput) ToVMwareClusterStatusConditionOutputWithContext(ctx context.Context) VMwareClusterStatusConditionOutput {
	return o
}

func (o VMwareClusterStatusConditionOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterStatusCondition] {
	return pulumix.Output[VMwareClusterStatusCondition]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Last time the condition transit from one status to another.
func (o VMwareClusterStatusConditionOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterStatusCondition) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Human-readable message indicating details about last transition.
func (o VMwareClusterStatusConditionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterStatusCondition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// (Output)
// Machine-readable message indicating details about last transition.
func (o VMwareClusterStatusConditionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterStatusCondition) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// (Output)
// The lifecycle state of the condition.
func (o VMwareClusterStatusConditionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterStatusCondition) *string { return v.State }).(pulumi.StringPtrOutput)
}

// (Output)
// Type of the condition.
// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
func (o VMwareClusterStatusConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterStatusCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VMwareClusterStatusConditionArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterStatusConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterStatusCondition)(nil)).Elem()
}

func (o VMwareClusterStatusConditionArrayOutput) ToVMwareClusterStatusConditionArrayOutput() VMwareClusterStatusConditionArrayOutput {
	return o
}

func (o VMwareClusterStatusConditionArrayOutput) ToVMwareClusterStatusConditionArrayOutputWithContext(ctx context.Context) VMwareClusterStatusConditionArrayOutput {
	return o
}

func (o VMwareClusterStatusConditionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterStatusCondition] {
	return pulumix.Output[[]VMwareClusterStatusCondition]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterStatusConditionArrayOutput) Index(i pulumi.IntInput) VMwareClusterStatusConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterStatusCondition {
		return vs[0].([]VMwareClusterStatusCondition)[vs[1].(int)]
	}).(VMwareClusterStatusConditionOutput)
}

type VMwareClusterStorage struct {
	// Whether or not to deploy vSphere CSI components in the VMware User Cluster.
	// Enabled by default.
	VsphereCsiDisabled bool `pulumi:"vsphereCsiDisabled"`
}

// VMwareClusterStorageInput is an input type that accepts VMwareClusterStorageArgs and VMwareClusterStorageOutput values.
// You can construct a concrete instance of `VMwareClusterStorageInput` via:
//
//	VMwareClusterStorageArgs{...}
type VMwareClusterStorageInput interface {
	pulumi.Input

	ToVMwareClusterStorageOutput() VMwareClusterStorageOutput
	ToVMwareClusterStorageOutputWithContext(context.Context) VMwareClusterStorageOutput
}

type VMwareClusterStorageArgs struct {
	// Whether or not to deploy vSphere CSI components in the VMware User Cluster.
	// Enabled by default.
	VsphereCsiDisabled pulumi.BoolInput `pulumi:"vsphereCsiDisabled"`
}

func (VMwareClusterStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterStorage)(nil)).Elem()
}

func (i VMwareClusterStorageArgs) ToVMwareClusterStorageOutput() VMwareClusterStorageOutput {
	return i.ToVMwareClusterStorageOutputWithContext(context.Background())
}

func (i VMwareClusterStorageArgs) ToVMwareClusterStorageOutputWithContext(ctx context.Context) VMwareClusterStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterStorageOutput)
}

func (i VMwareClusterStorageArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterStorage] {
	return pulumix.Output[VMwareClusterStorage]{
		OutputState: i.ToVMwareClusterStorageOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareClusterStorageArgs) ToVMwareClusterStoragePtrOutput() VMwareClusterStoragePtrOutput {
	return i.ToVMwareClusterStoragePtrOutputWithContext(context.Background())
}

func (i VMwareClusterStorageArgs) ToVMwareClusterStoragePtrOutputWithContext(ctx context.Context) VMwareClusterStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterStorageOutput).ToVMwareClusterStoragePtrOutputWithContext(ctx)
}

// VMwareClusterStoragePtrInput is an input type that accepts VMwareClusterStorageArgs, VMwareClusterStoragePtr and VMwareClusterStoragePtrOutput values.
// You can construct a concrete instance of `VMwareClusterStoragePtrInput` via:
//
//	        VMwareClusterStorageArgs{...}
//
//	or:
//
//	        nil
type VMwareClusterStoragePtrInput interface {
	pulumi.Input

	ToVMwareClusterStoragePtrOutput() VMwareClusterStoragePtrOutput
	ToVMwareClusterStoragePtrOutputWithContext(context.Context) VMwareClusterStoragePtrOutput
}

type vmwareClusterStoragePtrType VMwareClusterStorageArgs

func VMwareClusterStoragePtr(v *VMwareClusterStorageArgs) VMwareClusterStoragePtrInput {
	return (*vmwareClusterStoragePtrType)(v)
}

func (*vmwareClusterStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterStorage)(nil)).Elem()
}

func (i *vmwareClusterStoragePtrType) ToVMwareClusterStoragePtrOutput() VMwareClusterStoragePtrOutput {
	return i.ToVMwareClusterStoragePtrOutputWithContext(context.Background())
}

func (i *vmwareClusterStoragePtrType) ToVMwareClusterStoragePtrOutputWithContext(ctx context.Context) VMwareClusterStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterStoragePtrOutput)
}

func (i *vmwareClusterStoragePtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterStorage] {
	return pulumix.Output[*VMwareClusterStorage]{
		OutputState: i.ToVMwareClusterStoragePtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterStorageOutput struct{ *pulumi.OutputState }

func (VMwareClusterStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterStorage)(nil)).Elem()
}

func (o VMwareClusterStorageOutput) ToVMwareClusterStorageOutput() VMwareClusterStorageOutput {
	return o
}

func (o VMwareClusterStorageOutput) ToVMwareClusterStorageOutputWithContext(ctx context.Context) VMwareClusterStorageOutput {
	return o
}

func (o VMwareClusterStorageOutput) ToVMwareClusterStoragePtrOutput() VMwareClusterStoragePtrOutput {
	return o.ToVMwareClusterStoragePtrOutputWithContext(context.Background())
}

func (o VMwareClusterStorageOutput) ToVMwareClusterStoragePtrOutputWithContext(ctx context.Context) VMwareClusterStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareClusterStorage) *VMwareClusterStorage {
		return &v
	}).(VMwareClusterStoragePtrOutput)
}

func (o VMwareClusterStorageOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterStorage] {
	return pulumix.Output[VMwareClusterStorage]{
		OutputState: o.OutputState,
	}
}

// Whether or not to deploy vSphere CSI components in the VMware User Cluster.
// Enabled by default.
func (o VMwareClusterStorageOutput) VsphereCsiDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VMwareClusterStorage) bool { return v.VsphereCsiDisabled }).(pulumi.BoolOutput)
}

type VMwareClusterStoragePtrOutput struct{ *pulumi.OutputState }

func (VMwareClusterStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareClusterStorage)(nil)).Elem()
}

func (o VMwareClusterStoragePtrOutput) ToVMwareClusterStoragePtrOutput() VMwareClusterStoragePtrOutput {
	return o
}

func (o VMwareClusterStoragePtrOutput) ToVMwareClusterStoragePtrOutputWithContext(ctx context.Context) VMwareClusterStoragePtrOutput {
	return o
}

func (o VMwareClusterStoragePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareClusterStorage] {
	return pulumix.Output[*VMwareClusterStorage]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterStoragePtrOutput) Elem() VMwareClusterStorageOutput {
	return o.ApplyT(func(v *VMwareClusterStorage) VMwareClusterStorage {
		if v != nil {
			return *v
		}
		var ret VMwareClusterStorage
		return ret
	}).(VMwareClusterStorageOutput)
}

// Whether or not to deploy vSphere CSI components in the VMware User Cluster.
// Enabled by default.
func (o VMwareClusterStoragePtrOutput) VsphereCsiDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMwareClusterStorage) *bool {
		if v == nil {
			return nil
		}
		return &v.VsphereCsiDisabled
	}).(pulumi.BoolPtrOutput)
}

type VMwareClusterValidationCheck struct {
	// (Output)
	// Options used for the validation check.
	Options *string `pulumi:"options"`
	// (Output)
	// The scenario when the preflight checks were run..
	Scenario *string `pulumi:"scenario"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses []VMwareClusterValidationCheckStatus `pulumi:"statuses"`
}

// VMwareClusterValidationCheckInput is an input type that accepts VMwareClusterValidationCheckArgs and VMwareClusterValidationCheckOutput values.
// You can construct a concrete instance of `VMwareClusterValidationCheckInput` via:
//
//	VMwareClusterValidationCheckArgs{...}
type VMwareClusterValidationCheckInput interface {
	pulumi.Input

	ToVMwareClusterValidationCheckOutput() VMwareClusterValidationCheckOutput
	ToVMwareClusterValidationCheckOutputWithContext(context.Context) VMwareClusterValidationCheckOutput
}

type VMwareClusterValidationCheckArgs struct {
	// (Output)
	// Options used for the validation check.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// (Output)
	// The scenario when the preflight checks were run..
	Scenario pulumi.StringPtrInput `pulumi:"scenario"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses VMwareClusterValidationCheckStatusArrayInput `pulumi:"statuses"`
}

func (VMwareClusterValidationCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterValidationCheck)(nil)).Elem()
}

func (i VMwareClusterValidationCheckArgs) ToVMwareClusterValidationCheckOutput() VMwareClusterValidationCheckOutput {
	return i.ToVMwareClusterValidationCheckOutputWithContext(context.Background())
}

func (i VMwareClusterValidationCheckArgs) ToVMwareClusterValidationCheckOutputWithContext(ctx context.Context) VMwareClusterValidationCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterValidationCheckOutput)
}

func (i VMwareClusterValidationCheckArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterValidationCheck] {
	return pulumix.Output[VMwareClusterValidationCheck]{
		OutputState: i.ToVMwareClusterValidationCheckOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterValidationCheckArrayInput is an input type that accepts VMwareClusterValidationCheckArray and VMwareClusterValidationCheckArrayOutput values.
// You can construct a concrete instance of `VMwareClusterValidationCheckArrayInput` via:
//
//	VMwareClusterValidationCheckArray{ VMwareClusterValidationCheckArgs{...} }
type VMwareClusterValidationCheckArrayInput interface {
	pulumi.Input

	ToVMwareClusterValidationCheckArrayOutput() VMwareClusterValidationCheckArrayOutput
	ToVMwareClusterValidationCheckArrayOutputWithContext(context.Context) VMwareClusterValidationCheckArrayOutput
}

type VMwareClusterValidationCheckArray []VMwareClusterValidationCheckInput

func (VMwareClusterValidationCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterValidationCheck)(nil)).Elem()
}

func (i VMwareClusterValidationCheckArray) ToVMwareClusterValidationCheckArrayOutput() VMwareClusterValidationCheckArrayOutput {
	return i.ToVMwareClusterValidationCheckArrayOutputWithContext(context.Background())
}

func (i VMwareClusterValidationCheckArray) ToVMwareClusterValidationCheckArrayOutputWithContext(ctx context.Context) VMwareClusterValidationCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterValidationCheckArrayOutput)
}

func (i VMwareClusterValidationCheckArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterValidationCheck] {
	return pulumix.Output[[]VMwareClusterValidationCheck]{
		OutputState: i.ToVMwareClusterValidationCheckArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterValidationCheckOutput struct{ *pulumi.OutputState }

func (VMwareClusterValidationCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterValidationCheck)(nil)).Elem()
}

func (o VMwareClusterValidationCheckOutput) ToVMwareClusterValidationCheckOutput() VMwareClusterValidationCheckOutput {
	return o
}

func (o VMwareClusterValidationCheckOutput) ToVMwareClusterValidationCheckOutputWithContext(ctx context.Context) VMwareClusterValidationCheckOutput {
	return o
}

func (o VMwareClusterValidationCheckOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterValidationCheck] {
	return pulumix.Output[VMwareClusterValidationCheck]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Options used for the validation check.
func (o VMwareClusterValidationCheckOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterValidationCheck) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// (Output)
// The scenario when the preflight checks were run..
func (o VMwareClusterValidationCheckOutput) Scenario() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterValidationCheck) *string { return v.Scenario }).(pulumi.StringPtrOutput)
}

// (Output)
// Specifies the detailed validation check status
// Structure is documented below.
func (o VMwareClusterValidationCheckOutput) Statuses() VMwareClusterValidationCheckStatusArrayOutput {
	return o.ApplyT(func(v VMwareClusterValidationCheck) []VMwareClusterValidationCheckStatus { return v.Statuses }).(VMwareClusterValidationCheckStatusArrayOutput)
}

type VMwareClusterValidationCheckArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterValidationCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterValidationCheck)(nil)).Elem()
}

func (o VMwareClusterValidationCheckArrayOutput) ToVMwareClusterValidationCheckArrayOutput() VMwareClusterValidationCheckArrayOutput {
	return o
}

func (o VMwareClusterValidationCheckArrayOutput) ToVMwareClusterValidationCheckArrayOutputWithContext(ctx context.Context) VMwareClusterValidationCheckArrayOutput {
	return o
}

func (o VMwareClusterValidationCheckArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterValidationCheck] {
	return pulumix.Output[[]VMwareClusterValidationCheck]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterValidationCheckArrayOutput) Index(i pulumi.IntInput) VMwareClusterValidationCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterValidationCheck {
		return vs[0].([]VMwareClusterValidationCheck)[vs[1].(int)]
	}).(VMwareClusterValidationCheckOutput)
}

type VMwareClusterValidationCheckStatus struct {
	// (Output)
	// Individual checks which failed as part of the Preflight check execution.
	// Structure is documented below.
	Results []VMwareClusterValidationCheckStatusResult `pulumi:"results"`
}

// VMwareClusterValidationCheckStatusInput is an input type that accepts VMwareClusterValidationCheckStatusArgs and VMwareClusterValidationCheckStatusOutput values.
// You can construct a concrete instance of `VMwareClusterValidationCheckStatusInput` via:
//
//	VMwareClusterValidationCheckStatusArgs{...}
type VMwareClusterValidationCheckStatusInput interface {
	pulumi.Input

	ToVMwareClusterValidationCheckStatusOutput() VMwareClusterValidationCheckStatusOutput
	ToVMwareClusterValidationCheckStatusOutputWithContext(context.Context) VMwareClusterValidationCheckStatusOutput
}

type VMwareClusterValidationCheckStatusArgs struct {
	// (Output)
	// Individual checks which failed as part of the Preflight check execution.
	// Structure is documented below.
	Results VMwareClusterValidationCheckStatusResultArrayInput `pulumi:"results"`
}

func (VMwareClusterValidationCheckStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterValidationCheckStatus)(nil)).Elem()
}

func (i VMwareClusterValidationCheckStatusArgs) ToVMwareClusterValidationCheckStatusOutput() VMwareClusterValidationCheckStatusOutput {
	return i.ToVMwareClusterValidationCheckStatusOutputWithContext(context.Background())
}

func (i VMwareClusterValidationCheckStatusArgs) ToVMwareClusterValidationCheckStatusOutputWithContext(ctx context.Context) VMwareClusterValidationCheckStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterValidationCheckStatusOutput)
}

func (i VMwareClusterValidationCheckStatusArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterValidationCheckStatus] {
	return pulumix.Output[VMwareClusterValidationCheckStatus]{
		OutputState: i.ToVMwareClusterValidationCheckStatusOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterValidationCheckStatusArrayInput is an input type that accepts VMwareClusterValidationCheckStatusArray and VMwareClusterValidationCheckStatusArrayOutput values.
// You can construct a concrete instance of `VMwareClusterValidationCheckStatusArrayInput` via:
//
//	VMwareClusterValidationCheckStatusArray{ VMwareClusterValidationCheckStatusArgs{...} }
type VMwareClusterValidationCheckStatusArrayInput interface {
	pulumi.Input

	ToVMwareClusterValidationCheckStatusArrayOutput() VMwareClusterValidationCheckStatusArrayOutput
	ToVMwareClusterValidationCheckStatusArrayOutputWithContext(context.Context) VMwareClusterValidationCheckStatusArrayOutput
}

type VMwareClusterValidationCheckStatusArray []VMwareClusterValidationCheckStatusInput

func (VMwareClusterValidationCheckStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterValidationCheckStatus)(nil)).Elem()
}

func (i VMwareClusterValidationCheckStatusArray) ToVMwareClusterValidationCheckStatusArrayOutput() VMwareClusterValidationCheckStatusArrayOutput {
	return i.ToVMwareClusterValidationCheckStatusArrayOutputWithContext(context.Background())
}

func (i VMwareClusterValidationCheckStatusArray) ToVMwareClusterValidationCheckStatusArrayOutputWithContext(ctx context.Context) VMwareClusterValidationCheckStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterValidationCheckStatusArrayOutput)
}

func (i VMwareClusterValidationCheckStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterValidationCheckStatus] {
	return pulumix.Output[[]VMwareClusterValidationCheckStatus]{
		OutputState: i.ToVMwareClusterValidationCheckStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterValidationCheckStatusOutput struct{ *pulumi.OutputState }

func (VMwareClusterValidationCheckStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterValidationCheckStatus)(nil)).Elem()
}

func (o VMwareClusterValidationCheckStatusOutput) ToVMwareClusterValidationCheckStatusOutput() VMwareClusterValidationCheckStatusOutput {
	return o
}

func (o VMwareClusterValidationCheckStatusOutput) ToVMwareClusterValidationCheckStatusOutputWithContext(ctx context.Context) VMwareClusterValidationCheckStatusOutput {
	return o
}

func (o VMwareClusterValidationCheckStatusOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterValidationCheckStatus] {
	return pulumix.Output[VMwareClusterValidationCheckStatus]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Individual checks which failed as part of the Preflight check execution.
// Structure is documented below.
func (o VMwareClusterValidationCheckStatusOutput) Results() VMwareClusterValidationCheckStatusResultArrayOutput {
	return o.ApplyT(func(v VMwareClusterValidationCheckStatus) []VMwareClusterValidationCheckStatusResult {
		return v.Results
	}).(VMwareClusterValidationCheckStatusResultArrayOutput)
}

type VMwareClusterValidationCheckStatusArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterValidationCheckStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterValidationCheckStatus)(nil)).Elem()
}

func (o VMwareClusterValidationCheckStatusArrayOutput) ToVMwareClusterValidationCheckStatusArrayOutput() VMwareClusterValidationCheckStatusArrayOutput {
	return o
}

func (o VMwareClusterValidationCheckStatusArrayOutput) ToVMwareClusterValidationCheckStatusArrayOutputWithContext(ctx context.Context) VMwareClusterValidationCheckStatusArrayOutput {
	return o
}

func (o VMwareClusterValidationCheckStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterValidationCheckStatus] {
	return pulumix.Output[[]VMwareClusterValidationCheckStatus]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterValidationCheckStatusArrayOutput) Index(i pulumi.IntInput) VMwareClusterValidationCheckStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterValidationCheckStatus {
		return vs[0].([]VMwareClusterValidationCheckStatus)[vs[1].(int)]
	}).(VMwareClusterValidationCheckStatusOutput)
}

type VMwareClusterValidationCheckStatusResult struct {
	// (Output)
	// The category of the validation.
	Category *string `pulumi:"category"`
	// A human readable description of this VMware User Cluster.
	Description *string `pulumi:"description"`
	// (Output)
	// Detailed failure information, which might be unformatted.
	Details *string `pulumi:"details"`
	// (Output)
	// Options used for the validation check.
	Options *string `pulumi:"options"`
	// (Output)
	// Machine-readable message indicating details about last transition.
	Reason *string `pulumi:"reason"`
}

// VMwareClusterValidationCheckStatusResultInput is an input type that accepts VMwareClusterValidationCheckStatusResultArgs and VMwareClusterValidationCheckStatusResultOutput values.
// You can construct a concrete instance of `VMwareClusterValidationCheckStatusResultInput` via:
//
//	VMwareClusterValidationCheckStatusResultArgs{...}
type VMwareClusterValidationCheckStatusResultInput interface {
	pulumi.Input

	ToVMwareClusterValidationCheckStatusResultOutput() VMwareClusterValidationCheckStatusResultOutput
	ToVMwareClusterValidationCheckStatusResultOutputWithContext(context.Context) VMwareClusterValidationCheckStatusResultOutput
}

type VMwareClusterValidationCheckStatusResultArgs struct {
	// (Output)
	// The category of the validation.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// A human readable description of this VMware User Cluster.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Output)
	// Detailed failure information, which might be unformatted.
	Details pulumi.StringPtrInput `pulumi:"details"`
	// (Output)
	// Options used for the validation check.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// (Output)
	// Machine-readable message indicating details about last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
}

func (VMwareClusterValidationCheckStatusResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterValidationCheckStatusResult)(nil)).Elem()
}

func (i VMwareClusterValidationCheckStatusResultArgs) ToVMwareClusterValidationCheckStatusResultOutput() VMwareClusterValidationCheckStatusResultOutput {
	return i.ToVMwareClusterValidationCheckStatusResultOutputWithContext(context.Background())
}

func (i VMwareClusterValidationCheckStatusResultArgs) ToVMwareClusterValidationCheckStatusResultOutputWithContext(ctx context.Context) VMwareClusterValidationCheckStatusResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterValidationCheckStatusResultOutput)
}

func (i VMwareClusterValidationCheckStatusResultArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterValidationCheckStatusResult] {
	return pulumix.Output[VMwareClusterValidationCheckStatusResult]{
		OutputState: i.ToVMwareClusterValidationCheckStatusResultOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterValidationCheckStatusResultArrayInput is an input type that accepts VMwareClusterValidationCheckStatusResultArray and VMwareClusterValidationCheckStatusResultArrayOutput values.
// You can construct a concrete instance of `VMwareClusterValidationCheckStatusResultArrayInput` via:
//
//	VMwareClusterValidationCheckStatusResultArray{ VMwareClusterValidationCheckStatusResultArgs{...} }
type VMwareClusterValidationCheckStatusResultArrayInput interface {
	pulumi.Input

	ToVMwareClusterValidationCheckStatusResultArrayOutput() VMwareClusterValidationCheckStatusResultArrayOutput
	ToVMwareClusterValidationCheckStatusResultArrayOutputWithContext(context.Context) VMwareClusterValidationCheckStatusResultArrayOutput
}

type VMwareClusterValidationCheckStatusResultArray []VMwareClusterValidationCheckStatusResultInput

func (VMwareClusterValidationCheckStatusResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterValidationCheckStatusResult)(nil)).Elem()
}

func (i VMwareClusterValidationCheckStatusResultArray) ToVMwareClusterValidationCheckStatusResultArrayOutput() VMwareClusterValidationCheckStatusResultArrayOutput {
	return i.ToVMwareClusterValidationCheckStatusResultArrayOutputWithContext(context.Background())
}

func (i VMwareClusterValidationCheckStatusResultArray) ToVMwareClusterValidationCheckStatusResultArrayOutputWithContext(ctx context.Context) VMwareClusterValidationCheckStatusResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterValidationCheckStatusResultArrayOutput)
}

func (i VMwareClusterValidationCheckStatusResultArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterValidationCheckStatusResult] {
	return pulumix.Output[[]VMwareClusterValidationCheckStatusResult]{
		OutputState: i.ToVMwareClusterValidationCheckStatusResultArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterValidationCheckStatusResultOutput struct{ *pulumi.OutputState }

func (VMwareClusterValidationCheckStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterValidationCheckStatusResult)(nil)).Elem()
}

func (o VMwareClusterValidationCheckStatusResultOutput) ToVMwareClusterValidationCheckStatusResultOutput() VMwareClusterValidationCheckStatusResultOutput {
	return o
}

func (o VMwareClusterValidationCheckStatusResultOutput) ToVMwareClusterValidationCheckStatusResultOutputWithContext(ctx context.Context) VMwareClusterValidationCheckStatusResultOutput {
	return o
}

func (o VMwareClusterValidationCheckStatusResultOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterValidationCheckStatusResult] {
	return pulumix.Output[VMwareClusterValidationCheckStatusResult]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The category of the validation.
func (o VMwareClusterValidationCheckStatusResultOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterValidationCheckStatusResult) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// A human readable description of this VMware User Cluster.
func (o VMwareClusterValidationCheckStatusResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterValidationCheckStatusResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Output)
// Detailed failure information, which might be unformatted.
func (o VMwareClusterValidationCheckStatusResultOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterValidationCheckStatusResult) *string { return v.Details }).(pulumi.StringPtrOutput)
}

// (Output)
// Options used for the validation check.
func (o VMwareClusterValidationCheckStatusResultOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterValidationCheckStatusResult) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// (Output)
// Machine-readable message indicating details about last transition.
func (o VMwareClusterValidationCheckStatusResultOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterValidationCheckStatusResult) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

type VMwareClusterValidationCheckStatusResultArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterValidationCheckStatusResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterValidationCheckStatusResult)(nil)).Elem()
}

func (o VMwareClusterValidationCheckStatusResultArrayOutput) ToVMwareClusterValidationCheckStatusResultArrayOutput() VMwareClusterValidationCheckStatusResultArrayOutput {
	return o
}

func (o VMwareClusterValidationCheckStatusResultArrayOutput) ToVMwareClusterValidationCheckStatusResultArrayOutputWithContext(ctx context.Context) VMwareClusterValidationCheckStatusResultArrayOutput {
	return o
}

func (o VMwareClusterValidationCheckStatusResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterValidationCheckStatusResult] {
	return pulumix.Output[[]VMwareClusterValidationCheckStatusResult]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterValidationCheckStatusResultArrayOutput) Index(i pulumi.IntInput) VMwareClusterValidationCheckStatusResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterValidationCheckStatusResult {
		return vs[0].([]VMwareClusterValidationCheckStatusResult)[vs[1].(int)]
	}).(VMwareClusterValidationCheckStatusResultOutput)
}

type VMwareClusterVcenter struct {
	// The load balancer's IP address.
	Address *string `pulumi:"address"`
	// (Output)
	// Contains the vCenter CA certificate public key for SSL verification.
	CaCertData *string `pulumi:"caCertData"`
	// (Output)
	// The name of the vCenter cluster for the user cluster.
	Cluster *string `pulumi:"cluster"`
	// (Output)
	// The name of the vCenter datacenter for the user cluster.
	Datacenter *string `pulumi:"datacenter"`
	// (Output)
	// The Vsphere datastore used by the Control Plane Node.
	Datastore *string `pulumi:"datastore"`
	// (Output)
	// The name of the vCenter folder for the user cluster.
	Folder *string `pulumi:"folder"`
	// (Output)
	// The name of the vCenter resource pool for the user cluster.
	ResourcePool *string `pulumi:"resourcePool"`
	// (Output)
	// The Vsphere storage policy used by the control plane Node.
	//
	// ***
	StoragePolicyName *string `pulumi:"storagePolicyName"`
}

// VMwareClusterVcenterInput is an input type that accepts VMwareClusterVcenterArgs and VMwareClusterVcenterOutput values.
// You can construct a concrete instance of `VMwareClusterVcenterInput` via:
//
//	VMwareClusterVcenterArgs{...}
type VMwareClusterVcenterInput interface {
	pulumi.Input

	ToVMwareClusterVcenterOutput() VMwareClusterVcenterOutput
	ToVMwareClusterVcenterOutputWithContext(context.Context) VMwareClusterVcenterOutput
}

type VMwareClusterVcenterArgs struct {
	// The load balancer's IP address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// (Output)
	// Contains the vCenter CA certificate public key for SSL verification.
	CaCertData pulumi.StringPtrInput `pulumi:"caCertData"`
	// (Output)
	// The name of the vCenter cluster for the user cluster.
	Cluster pulumi.StringPtrInput `pulumi:"cluster"`
	// (Output)
	// The name of the vCenter datacenter for the user cluster.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// (Output)
	// The Vsphere datastore used by the Control Plane Node.
	Datastore pulumi.StringPtrInput `pulumi:"datastore"`
	// (Output)
	// The name of the vCenter folder for the user cluster.
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// (Output)
	// The name of the vCenter resource pool for the user cluster.
	ResourcePool pulumi.StringPtrInput `pulumi:"resourcePool"`
	// (Output)
	// The Vsphere storage policy used by the control plane Node.
	//
	// ***
	StoragePolicyName pulumi.StringPtrInput `pulumi:"storagePolicyName"`
}

func (VMwareClusterVcenterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterVcenter)(nil)).Elem()
}

func (i VMwareClusterVcenterArgs) ToVMwareClusterVcenterOutput() VMwareClusterVcenterOutput {
	return i.ToVMwareClusterVcenterOutputWithContext(context.Background())
}

func (i VMwareClusterVcenterArgs) ToVMwareClusterVcenterOutputWithContext(ctx context.Context) VMwareClusterVcenterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterVcenterOutput)
}

func (i VMwareClusterVcenterArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterVcenter] {
	return pulumix.Output[VMwareClusterVcenter]{
		OutputState: i.ToVMwareClusterVcenterOutputWithContext(ctx).OutputState,
	}
}

// VMwareClusterVcenterArrayInput is an input type that accepts VMwareClusterVcenterArray and VMwareClusterVcenterArrayOutput values.
// You can construct a concrete instance of `VMwareClusterVcenterArrayInput` via:
//
//	VMwareClusterVcenterArray{ VMwareClusterVcenterArgs{...} }
type VMwareClusterVcenterArrayInput interface {
	pulumi.Input

	ToVMwareClusterVcenterArrayOutput() VMwareClusterVcenterArrayOutput
	ToVMwareClusterVcenterArrayOutputWithContext(context.Context) VMwareClusterVcenterArrayOutput
}

type VMwareClusterVcenterArray []VMwareClusterVcenterInput

func (VMwareClusterVcenterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterVcenter)(nil)).Elem()
}

func (i VMwareClusterVcenterArray) ToVMwareClusterVcenterArrayOutput() VMwareClusterVcenterArrayOutput {
	return i.ToVMwareClusterVcenterArrayOutputWithContext(context.Background())
}

func (i VMwareClusterVcenterArray) ToVMwareClusterVcenterArrayOutputWithContext(ctx context.Context) VMwareClusterVcenterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareClusterVcenterArrayOutput)
}

func (i VMwareClusterVcenterArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterVcenter] {
	return pulumix.Output[[]VMwareClusterVcenter]{
		OutputState: i.ToVMwareClusterVcenterArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareClusterVcenterOutput struct{ *pulumi.OutputState }

func (VMwareClusterVcenterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareClusterVcenter)(nil)).Elem()
}

func (o VMwareClusterVcenterOutput) ToVMwareClusterVcenterOutput() VMwareClusterVcenterOutput {
	return o
}

func (o VMwareClusterVcenterOutput) ToVMwareClusterVcenterOutputWithContext(ctx context.Context) VMwareClusterVcenterOutput {
	return o
}

func (o VMwareClusterVcenterOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareClusterVcenter] {
	return pulumix.Output[VMwareClusterVcenter]{
		OutputState: o.OutputState,
	}
}

// The load balancer's IP address.
func (o VMwareClusterVcenterOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterVcenter) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// (Output)
// Contains the vCenter CA certificate public key for SSL verification.
func (o VMwareClusterVcenterOutput) CaCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterVcenter) *string { return v.CaCertData }).(pulumi.StringPtrOutput)
}

// (Output)
// The name of the vCenter cluster for the user cluster.
func (o VMwareClusterVcenterOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterVcenter) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

// (Output)
// The name of the vCenter datacenter for the user cluster.
func (o VMwareClusterVcenterOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterVcenter) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// (Output)
// The Vsphere datastore used by the Control Plane Node.
func (o VMwareClusterVcenterOutput) Datastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterVcenter) *string { return v.Datastore }).(pulumi.StringPtrOutput)
}

// (Output)
// The name of the vCenter folder for the user cluster.
func (o VMwareClusterVcenterOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterVcenter) *string { return v.Folder }).(pulumi.StringPtrOutput)
}

// (Output)
// The name of the vCenter resource pool for the user cluster.
func (o VMwareClusterVcenterOutput) ResourcePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterVcenter) *string { return v.ResourcePool }).(pulumi.StringPtrOutput)
}

// (Output)
// The Vsphere storage policy used by the control plane Node.
//
// ***
func (o VMwareClusterVcenterOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareClusterVcenter) *string { return v.StoragePolicyName }).(pulumi.StringPtrOutput)
}

type VMwareClusterVcenterArrayOutput struct{ *pulumi.OutputState }

func (VMwareClusterVcenterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareClusterVcenter)(nil)).Elem()
}

func (o VMwareClusterVcenterArrayOutput) ToVMwareClusterVcenterArrayOutput() VMwareClusterVcenterArrayOutput {
	return o
}

func (o VMwareClusterVcenterArrayOutput) ToVMwareClusterVcenterArrayOutputWithContext(ctx context.Context) VMwareClusterVcenterArrayOutput {
	return o
}

func (o VMwareClusterVcenterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareClusterVcenter] {
	return pulumix.Output[[]VMwareClusterVcenter]{
		OutputState: o.OutputState,
	}
}

func (o VMwareClusterVcenterArrayOutput) Index(i pulumi.IntInput) VMwareClusterVcenterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareClusterVcenter {
		return vs[0].([]VMwareClusterVcenter)[vs[1].(int)]
	}).(VMwareClusterVcenterOutput)
}

type VMwareNodePoolConfig struct {
	// VMware disk size to be used during creation.
	BootDiskSizeGb *int `pulumi:"bootDiskSizeGb"`
	// The number of CPUs for each node in the node pool.
	Cpus *int `pulumi:"cpus"`
	// Allow node pool traffic to be load balanced. Only works for clusters with
	// MetalLB load balancers.
	EnableLoadBalancer *bool `pulumi:"enableLoadBalancer"`
	// The OS image name in vCenter, only valid when using Windows.
	Image *string `pulumi:"image"`
	// The OS image to be used for each node in a node pool.
	// Currently `cos`, `ubuntu`, `ubuntuContainerd` and `windows` are supported.
	ImageType string `pulumi:"imageType"`
	// The map of Kubernetes labels (key/value pairs) to be applied to each node.
	// These will added in addition to any default label(s) that
	// Kubernetes may apply to the node.
	// In case of conflict in label keys, the applied set may differ depending on
	// the Kubernetes version -- it's best to assume the behavior is undefined
	// and conflicts should be avoided.
	Labels map[string]string `pulumi:"labels"`
	// The megabytes of memory for each node in the node pool.
	MemoryMb *int `pulumi:"memoryMb"`
	// The number of nodes in the node pool.
	Replicas *int `pulumi:"replicas"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints []VMwareNodePoolConfigTaint `pulumi:"taints"`
	// (Output)
	// Specifies the vSphere config for node pool.
	// Structure is documented below.
	VsphereConfigs []VMwareNodePoolConfigVsphereConfig `pulumi:"vsphereConfigs"`
}

// VMwareNodePoolConfigInput is an input type that accepts VMwareNodePoolConfigArgs and VMwareNodePoolConfigOutput values.
// You can construct a concrete instance of `VMwareNodePoolConfigInput` via:
//
//	VMwareNodePoolConfigArgs{...}
type VMwareNodePoolConfigInput interface {
	pulumi.Input

	ToVMwareNodePoolConfigOutput() VMwareNodePoolConfigOutput
	ToVMwareNodePoolConfigOutputWithContext(context.Context) VMwareNodePoolConfigOutput
}

type VMwareNodePoolConfigArgs struct {
	// VMware disk size to be used during creation.
	BootDiskSizeGb pulumi.IntPtrInput `pulumi:"bootDiskSizeGb"`
	// The number of CPUs for each node in the node pool.
	Cpus pulumi.IntPtrInput `pulumi:"cpus"`
	// Allow node pool traffic to be load balanced. Only works for clusters with
	// MetalLB load balancers.
	EnableLoadBalancer pulumi.BoolPtrInput `pulumi:"enableLoadBalancer"`
	// The OS image name in vCenter, only valid when using Windows.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// The OS image to be used for each node in a node pool.
	// Currently `cos`, `ubuntu`, `ubuntuContainerd` and `windows` are supported.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// The map of Kubernetes labels (key/value pairs) to be applied to each node.
	// These will added in addition to any default label(s) that
	// Kubernetes may apply to the node.
	// In case of conflict in label keys, the applied set may differ depending on
	// the Kubernetes version -- it's best to assume the behavior is undefined
	// and conflicts should be avoided.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The megabytes of memory for each node in the node pool.
	MemoryMb pulumi.IntPtrInput `pulumi:"memoryMb"`
	// The number of nodes in the node pool.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// The initial taints assigned to nodes of this node pool.
	// Structure is documented below.
	Taints VMwareNodePoolConfigTaintArrayInput `pulumi:"taints"`
	// (Output)
	// Specifies the vSphere config for node pool.
	// Structure is documented below.
	VsphereConfigs VMwareNodePoolConfigVsphereConfigArrayInput `pulumi:"vsphereConfigs"`
}

func (VMwareNodePoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolConfig)(nil)).Elem()
}

func (i VMwareNodePoolConfigArgs) ToVMwareNodePoolConfigOutput() VMwareNodePoolConfigOutput {
	return i.ToVMwareNodePoolConfigOutputWithContext(context.Background())
}

func (i VMwareNodePoolConfigArgs) ToVMwareNodePoolConfigOutputWithContext(ctx context.Context) VMwareNodePoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolConfigOutput)
}

func (i VMwareNodePoolConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolConfig] {
	return pulumix.Output[VMwareNodePoolConfig]{
		OutputState: i.ToVMwareNodePoolConfigOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareNodePoolConfigArgs) ToVMwareNodePoolConfigPtrOutput() VMwareNodePoolConfigPtrOutput {
	return i.ToVMwareNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i VMwareNodePoolConfigArgs) ToVMwareNodePoolConfigPtrOutputWithContext(ctx context.Context) VMwareNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolConfigOutput).ToVMwareNodePoolConfigPtrOutputWithContext(ctx)
}

// VMwareNodePoolConfigPtrInput is an input type that accepts VMwareNodePoolConfigArgs, VMwareNodePoolConfigPtr and VMwareNodePoolConfigPtrOutput values.
// You can construct a concrete instance of `VMwareNodePoolConfigPtrInput` via:
//
//	        VMwareNodePoolConfigArgs{...}
//
//	or:
//
//	        nil
type VMwareNodePoolConfigPtrInput interface {
	pulumi.Input

	ToVMwareNodePoolConfigPtrOutput() VMwareNodePoolConfigPtrOutput
	ToVMwareNodePoolConfigPtrOutputWithContext(context.Context) VMwareNodePoolConfigPtrOutput
}

type vmwareNodePoolConfigPtrType VMwareNodePoolConfigArgs

func VMwareNodePoolConfigPtr(v *VMwareNodePoolConfigArgs) VMwareNodePoolConfigPtrInput {
	return (*vmwareNodePoolConfigPtrType)(v)
}

func (*vmwareNodePoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareNodePoolConfig)(nil)).Elem()
}

func (i *vmwareNodePoolConfigPtrType) ToVMwareNodePoolConfigPtrOutput() VMwareNodePoolConfigPtrOutput {
	return i.ToVMwareNodePoolConfigPtrOutputWithContext(context.Background())
}

func (i *vmwareNodePoolConfigPtrType) ToVMwareNodePoolConfigPtrOutputWithContext(ctx context.Context) VMwareNodePoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolConfigPtrOutput)
}

func (i *vmwareNodePoolConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareNodePoolConfig] {
	return pulumix.Output[*VMwareNodePoolConfig]{
		OutputState: i.ToVMwareNodePoolConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareNodePoolConfigOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolConfig)(nil)).Elem()
}

func (o VMwareNodePoolConfigOutput) ToVMwareNodePoolConfigOutput() VMwareNodePoolConfigOutput {
	return o
}

func (o VMwareNodePoolConfigOutput) ToVMwareNodePoolConfigOutputWithContext(ctx context.Context) VMwareNodePoolConfigOutput {
	return o
}

func (o VMwareNodePoolConfigOutput) ToVMwareNodePoolConfigPtrOutput() VMwareNodePoolConfigPtrOutput {
	return o.ToVMwareNodePoolConfigPtrOutputWithContext(context.Background())
}

func (o VMwareNodePoolConfigOutput) ToVMwareNodePoolConfigPtrOutputWithContext(ctx context.Context) VMwareNodePoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareNodePoolConfig) *VMwareNodePoolConfig {
		return &v
	}).(VMwareNodePoolConfigPtrOutput)
}

func (o VMwareNodePoolConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolConfig] {
	return pulumix.Output[VMwareNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

// VMware disk size to be used during creation.
func (o VMwareNodePoolConfigOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The number of CPUs for each node in the node pool.
func (o VMwareNodePoolConfigOutput) Cpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) *int { return v.Cpus }).(pulumi.IntPtrOutput)
}

// Allow node pool traffic to be load balanced. Only works for clusters with
// MetalLB load balancers.
func (o VMwareNodePoolConfigOutput) EnableLoadBalancer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) *bool { return v.EnableLoadBalancer }).(pulumi.BoolPtrOutput)
}

// The OS image name in vCenter, only valid when using Windows.
func (o VMwareNodePoolConfigOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// The OS image to be used for each node in a node pool.
// Currently `cos`, `ubuntu`, `ubuntuContainerd` and `windows` are supported.
func (o VMwareNodePoolConfigOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to each node.
// These will added in addition to any default label(s) that
// Kubernetes may apply to the node.
// In case of conflict in label keys, the applied set may differ depending on
// the Kubernetes version -- it's best to assume the behavior is undefined
// and conflicts should be avoided.
func (o VMwareNodePoolConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The megabytes of memory for each node in the node pool.
func (o VMwareNodePoolConfigOutput) MemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) *int { return v.MemoryMb }).(pulumi.IntPtrOutput)
}

// The number of nodes in the node pool.
func (o VMwareNodePoolConfigOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o VMwareNodePoolConfigOutput) Taints() VMwareNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) []VMwareNodePoolConfigTaint { return v.Taints }).(VMwareNodePoolConfigTaintArrayOutput)
}

// (Output)
// Specifies the vSphere config for node pool.
// Structure is documented below.
func (o VMwareNodePoolConfigOutput) VsphereConfigs() VMwareNodePoolConfigVsphereConfigArrayOutput {
	return o.ApplyT(func(v VMwareNodePoolConfig) []VMwareNodePoolConfigVsphereConfig { return v.VsphereConfigs }).(VMwareNodePoolConfigVsphereConfigArrayOutput)
}

type VMwareNodePoolConfigPtrOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareNodePoolConfig)(nil)).Elem()
}

func (o VMwareNodePoolConfigPtrOutput) ToVMwareNodePoolConfigPtrOutput() VMwareNodePoolConfigPtrOutput {
	return o
}

func (o VMwareNodePoolConfigPtrOutput) ToVMwareNodePoolConfigPtrOutputWithContext(ctx context.Context) VMwareNodePoolConfigPtrOutput {
	return o
}

func (o VMwareNodePoolConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareNodePoolConfig] {
	return pulumix.Output[*VMwareNodePoolConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareNodePoolConfigPtrOutput) Elem() VMwareNodePoolConfigOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) VMwareNodePoolConfig {
		if v != nil {
			return *v
		}
		var ret VMwareNodePoolConfig
		return ret
	}).(VMwareNodePoolConfigOutput)
}

// VMware disk size to be used during creation.
func (o VMwareNodePoolConfigPtrOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) *int {
		if v == nil {
			return nil
		}
		return v.BootDiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// The number of CPUs for each node in the node pool.
func (o VMwareNodePoolConfigPtrOutput) Cpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) *int {
		if v == nil {
			return nil
		}
		return v.Cpus
	}).(pulumi.IntPtrOutput)
}

// Allow node pool traffic to be load balanced. Only works for clusters with
// MetalLB load balancers.
func (o VMwareNodePoolConfigPtrOutput) EnableLoadBalancer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableLoadBalancer
	}).(pulumi.BoolPtrOutput)
}

// The OS image name in vCenter, only valid when using Windows.
func (o VMwareNodePoolConfigPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// The OS image to be used for each node in a node pool.
// Currently `cos`, `ubuntu`, `ubuntuContainerd` and `windows` are supported.
func (o VMwareNodePoolConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ImageType
	}).(pulumi.StringPtrOutput)
}

// The map of Kubernetes labels (key/value pairs) to be applied to each node.
// These will added in addition to any default label(s) that
// Kubernetes may apply to the node.
// In case of conflict in label keys, the applied set may differ depending on
// the Kubernetes version -- it's best to assume the behavior is undefined
// and conflicts should be avoided.
func (o VMwareNodePoolConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The megabytes of memory for each node in the node pool.
func (o VMwareNodePoolConfigPtrOutput) MemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) *int {
		if v == nil {
			return nil
		}
		return v.MemoryMb
	}).(pulumi.IntPtrOutput)
}

// The number of nodes in the node pool.
func (o VMwareNodePoolConfigPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// The initial taints assigned to nodes of this node pool.
// Structure is documented below.
func (o VMwareNodePoolConfigPtrOutput) Taints() VMwareNodePoolConfigTaintArrayOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) []VMwareNodePoolConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(VMwareNodePoolConfigTaintArrayOutput)
}

// (Output)
// Specifies the vSphere config for node pool.
// Structure is documented below.
func (o VMwareNodePoolConfigPtrOutput) VsphereConfigs() VMwareNodePoolConfigVsphereConfigArrayOutput {
	return o.ApplyT(func(v *VMwareNodePoolConfig) []VMwareNodePoolConfigVsphereConfig {
		if v == nil {
			return nil
		}
		return v.VsphereConfigs
	}).(VMwareNodePoolConfigVsphereConfigArrayOutput)
}

type VMwareNodePoolConfigTaint struct {
	// Available taint effects.
	// Possible values are: `EFFECT_UNSPECIFIED`, `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	//
	// <a name="nestedVsphereConfig"></a>The `vsphereConfig` block contains:
	Effect *string `pulumi:"effect"`
	// Key associated with the effect.
	Key string `pulumi:"key"`
	// Value associated with the effect.
	Value string `pulumi:"value"`
}

// VMwareNodePoolConfigTaintInput is an input type that accepts VMwareNodePoolConfigTaintArgs and VMwareNodePoolConfigTaintOutput values.
// You can construct a concrete instance of `VMwareNodePoolConfigTaintInput` via:
//
//	VMwareNodePoolConfigTaintArgs{...}
type VMwareNodePoolConfigTaintInput interface {
	pulumi.Input

	ToVMwareNodePoolConfigTaintOutput() VMwareNodePoolConfigTaintOutput
	ToVMwareNodePoolConfigTaintOutputWithContext(context.Context) VMwareNodePoolConfigTaintOutput
}

type VMwareNodePoolConfigTaintArgs struct {
	// Available taint effects.
	// Possible values are: `EFFECT_UNSPECIFIED`, `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
	//
	// <a name="nestedVsphereConfig"></a>The `vsphereConfig` block contains:
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key associated with the effect.
	Key pulumi.StringInput `pulumi:"key"`
	// Value associated with the effect.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VMwareNodePoolConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolConfigTaint)(nil)).Elem()
}

func (i VMwareNodePoolConfigTaintArgs) ToVMwareNodePoolConfigTaintOutput() VMwareNodePoolConfigTaintOutput {
	return i.ToVMwareNodePoolConfigTaintOutputWithContext(context.Background())
}

func (i VMwareNodePoolConfigTaintArgs) ToVMwareNodePoolConfigTaintOutputWithContext(ctx context.Context) VMwareNodePoolConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolConfigTaintOutput)
}

func (i VMwareNodePoolConfigTaintArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolConfigTaint] {
	return pulumix.Output[VMwareNodePoolConfigTaint]{
		OutputState: i.ToVMwareNodePoolConfigTaintOutputWithContext(ctx).OutputState,
	}
}

// VMwareNodePoolConfigTaintArrayInput is an input type that accepts VMwareNodePoolConfigTaintArray and VMwareNodePoolConfigTaintArrayOutput values.
// You can construct a concrete instance of `VMwareNodePoolConfigTaintArrayInput` via:
//
//	VMwareNodePoolConfigTaintArray{ VMwareNodePoolConfigTaintArgs{...} }
type VMwareNodePoolConfigTaintArrayInput interface {
	pulumi.Input

	ToVMwareNodePoolConfigTaintArrayOutput() VMwareNodePoolConfigTaintArrayOutput
	ToVMwareNodePoolConfigTaintArrayOutputWithContext(context.Context) VMwareNodePoolConfigTaintArrayOutput
}

type VMwareNodePoolConfigTaintArray []VMwareNodePoolConfigTaintInput

func (VMwareNodePoolConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolConfigTaint)(nil)).Elem()
}

func (i VMwareNodePoolConfigTaintArray) ToVMwareNodePoolConfigTaintArrayOutput() VMwareNodePoolConfigTaintArrayOutput {
	return i.ToVMwareNodePoolConfigTaintArrayOutputWithContext(context.Background())
}

func (i VMwareNodePoolConfigTaintArray) ToVMwareNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) VMwareNodePoolConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolConfigTaintArrayOutput)
}

func (i VMwareNodePoolConfigTaintArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolConfigTaint] {
	return pulumix.Output[[]VMwareNodePoolConfigTaint]{
		OutputState: i.ToVMwareNodePoolConfigTaintArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareNodePoolConfigTaintOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolConfigTaint)(nil)).Elem()
}

func (o VMwareNodePoolConfigTaintOutput) ToVMwareNodePoolConfigTaintOutput() VMwareNodePoolConfigTaintOutput {
	return o
}

func (o VMwareNodePoolConfigTaintOutput) ToVMwareNodePoolConfigTaintOutputWithContext(ctx context.Context) VMwareNodePoolConfigTaintOutput {
	return o
}

func (o VMwareNodePoolConfigTaintOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolConfigTaint] {
	return pulumix.Output[VMwareNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

// Available taint effects.
// Possible values are: `EFFECT_UNSPECIFIED`, `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, `NO_EXECUTE`.
//
// <a name="nestedVsphereConfig"></a>The `vsphereConfig` block contains:
func (o VMwareNodePoolConfigTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfigTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key associated with the effect.
func (o VMwareNodePoolConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareNodePoolConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value associated with the effect.
func (o VMwareNodePoolConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareNodePoolConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type VMwareNodePoolConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolConfigTaint)(nil)).Elem()
}

func (o VMwareNodePoolConfigTaintArrayOutput) ToVMwareNodePoolConfigTaintArrayOutput() VMwareNodePoolConfigTaintArrayOutput {
	return o
}

func (o VMwareNodePoolConfigTaintArrayOutput) ToVMwareNodePoolConfigTaintArrayOutputWithContext(ctx context.Context) VMwareNodePoolConfigTaintArrayOutput {
	return o
}

func (o VMwareNodePoolConfigTaintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolConfigTaint] {
	return pulumix.Output[[]VMwareNodePoolConfigTaint]{
		OutputState: o.OutputState,
	}
}

func (o VMwareNodePoolConfigTaintArrayOutput) Index(i pulumi.IntInput) VMwareNodePoolConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareNodePoolConfigTaint {
		return vs[0].([]VMwareNodePoolConfigTaint)[vs[1].(int)]
	}).(VMwareNodePoolConfigTaintOutput)
}

type VMwareNodePoolConfigVsphereConfig struct {
	// (Output)
	// The name of the vCenter datastore. Inherited from the user cluster.
	Datastore *string `pulumi:"datastore"`
	// (Output)
	// Tags to apply to VMs.
	// Structure is documented below.
	//
	// <a name="nestedTags"></a>The `tags` block contains:
	Tags []VMwareNodePoolConfigVsphereConfigTag `pulumi:"tags"`
}

// VMwareNodePoolConfigVsphereConfigInput is an input type that accepts VMwareNodePoolConfigVsphereConfigArgs and VMwareNodePoolConfigVsphereConfigOutput values.
// You can construct a concrete instance of `VMwareNodePoolConfigVsphereConfigInput` via:
//
//	VMwareNodePoolConfigVsphereConfigArgs{...}
type VMwareNodePoolConfigVsphereConfigInput interface {
	pulumi.Input

	ToVMwareNodePoolConfigVsphereConfigOutput() VMwareNodePoolConfigVsphereConfigOutput
	ToVMwareNodePoolConfigVsphereConfigOutputWithContext(context.Context) VMwareNodePoolConfigVsphereConfigOutput
}

type VMwareNodePoolConfigVsphereConfigArgs struct {
	// (Output)
	// The name of the vCenter datastore. Inherited from the user cluster.
	Datastore pulumi.StringPtrInput `pulumi:"datastore"`
	// (Output)
	// Tags to apply to VMs.
	// Structure is documented below.
	//
	// <a name="nestedTags"></a>The `tags` block contains:
	Tags VMwareNodePoolConfigVsphereConfigTagArrayInput `pulumi:"tags"`
}

func (VMwareNodePoolConfigVsphereConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolConfigVsphereConfig)(nil)).Elem()
}

func (i VMwareNodePoolConfigVsphereConfigArgs) ToVMwareNodePoolConfigVsphereConfigOutput() VMwareNodePoolConfigVsphereConfigOutput {
	return i.ToVMwareNodePoolConfigVsphereConfigOutputWithContext(context.Background())
}

func (i VMwareNodePoolConfigVsphereConfigArgs) ToVMwareNodePoolConfigVsphereConfigOutputWithContext(ctx context.Context) VMwareNodePoolConfigVsphereConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolConfigVsphereConfigOutput)
}

func (i VMwareNodePoolConfigVsphereConfigArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolConfigVsphereConfig] {
	return pulumix.Output[VMwareNodePoolConfigVsphereConfig]{
		OutputState: i.ToVMwareNodePoolConfigVsphereConfigOutputWithContext(ctx).OutputState,
	}
}

// VMwareNodePoolConfigVsphereConfigArrayInput is an input type that accepts VMwareNodePoolConfigVsphereConfigArray and VMwareNodePoolConfigVsphereConfigArrayOutput values.
// You can construct a concrete instance of `VMwareNodePoolConfigVsphereConfigArrayInput` via:
//
//	VMwareNodePoolConfigVsphereConfigArray{ VMwareNodePoolConfigVsphereConfigArgs{...} }
type VMwareNodePoolConfigVsphereConfigArrayInput interface {
	pulumi.Input

	ToVMwareNodePoolConfigVsphereConfigArrayOutput() VMwareNodePoolConfigVsphereConfigArrayOutput
	ToVMwareNodePoolConfigVsphereConfigArrayOutputWithContext(context.Context) VMwareNodePoolConfigVsphereConfigArrayOutput
}

type VMwareNodePoolConfigVsphereConfigArray []VMwareNodePoolConfigVsphereConfigInput

func (VMwareNodePoolConfigVsphereConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolConfigVsphereConfig)(nil)).Elem()
}

func (i VMwareNodePoolConfigVsphereConfigArray) ToVMwareNodePoolConfigVsphereConfigArrayOutput() VMwareNodePoolConfigVsphereConfigArrayOutput {
	return i.ToVMwareNodePoolConfigVsphereConfigArrayOutputWithContext(context.Background())
}

func (i VMwareNodePoolConfigVsphereConfigArray) ToVMwareNodePoolConfigVsphereConfigArrayOutputWithContext(ctx context.Context) VMwareNodePoolConfigVsphereConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolConfigVsphereConfigArrayOutput)
}

func (i VMwareNodePoolConfigVsphereConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolConfigVsphereConfig] {
	return pulumix.Output[[]VMwareNodePoolConfigVsphereConfig]{
		OutputState: i.ToVMwareNodePoolConfigVsphereConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareNodePoolConfigVsphereConfigOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolConfigVsphereConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolConfigVsphereConfig)(nil)).Elem()
}

func (o VMwareNodePoolConfigVsphereConfigOutput) ToVMwareNodePoolConfigVsphereConfigOutput() VMwareNodePoolConfigVsphereConfigOutput {
	return o
}

func (o VMwareNodePoolConfigVsphereConfigOutput) ToVMwareNodePoolConfigVsphereConfigOutputWithContext(ctx context.Context) VMwareNodePoolConfigVsphereConfigOutput {
	return o
}

func (o VMwareNodePoolConfigVsphereConfigOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolConfigVsphereConfig] {
	return pulumix.Output[VMwareNodePoolConfigVsphereConfig]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The name of the vCenter datastore. Inherited from the user cluster.
func (o VMwareNodePoolConfigVsphereConfigOutput) Datastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfigVsphereConfig) *string { return v.Datastore }).(pulumi.StringPtrOutput)
}

// (Output)
// Tags to apply to VMs.
// Structure is documented below.
//
// <a name="nestedTags"></a>The `tags` block contains:
func (o VMwareNodePoolConfigVsphereConfigOutput) Tags() VMwareNodePoolConfigVsphereConfigTagArrayOutput {
	return o.ApplyT(func(v VMwareNodePoolConfigVsphereConfig) []VMwareNodePoolConfigVsphereConfigTag { return v.Tags }).(VMwareNodePoolConfigVsphereConfigTagArrayOutput)
}

type VMwareNodePoolConfigVsphereConfigArrayOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolConfigVsphereConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolConfigVsphereConfig)(nil)).Elem()
}

func (o VMwareNodePoolConfigVsphereConfigArrayOutput) ToVMwareNodePoolConfigVsphereConfigArrayOutput() VMwareNodePoolConfigVsphereConfigArrayOutput {
	return o
}

func (o VMwareNodePoolConfigVsphereConfigArrayOutput) ToVMwareNodePoolConfigVsphereConfigArrayOutputWithContext(ctx context.Context) VMwareNodePoolConfigVsphereConfigArrayOutput {
	return o
}

func (o VMwareNodePoolConfigVsphereConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolConfigVsphereConfig] {
	return pulumix.Output[[]VMwareNodePoolConfigVsphereConfig]{
		OutputState: o.OutputState,
	}
}

func (o VMwareNodePoolConfigVsphereConfigArrayOutput) Index(i pulumi.IntInput) VMwareNodePoolConfigVsphereConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareNodePoolConfigVsphereConfig {
		return vs[0].([]VMwareNodePoolConfigVsphereConfig)[vs[1].(int)]
	}).(VMwareNodePoolConfigVsphereConfigOutput)
}

type VMwareNodePoolConfigVsphereConfigTag struct {
	// (Output)
	// The Vsphere tag category.
	Category *string `pulumi:"category"`
	// (Output)
	// The Vsphere tag name.
	//
	// ***
	Tag *string `pulumi:"tag"`
}

// VMwareNodePoolConfigVsphereConfigTagInput is an input type that accepts VMwareNodePoolConfigVsphereConfigTagArgs and VMwareNodePoolConfigVsphereConfigTagOutput values.
// You can construct a concrete instance of `VMwareNodePoolConfigVsphereConfigTagInput` via:
//
//	VMwareNodePoolConfigVsphereConfigTagArgs{...}
type VMwareNodePoolConfigVsphereConfigTagInput interface {
	pulumi.Input

	ToVMwareNodePoolConfigVsphereConfigTagOutput() VMwareNodePoolConfigVsphereConfigTagOutput
	ToVMwareNodePoolConfigVsphereConfigTagOutputWithContext(context.Context) VMwareNodePoolConfigVsphereConfigTagOutput
}

type VMwareNodePoolConfigVsphereConfigTagArgs struct {
	// (Output)
	// The Vsphere tag category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// (Output)
	// The Vsphere tag name.
	//
	// ***
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (VMwareNodePoolConfigVsphereConfigTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolConfigVsphereConfigTag)(nil)).Elem()
}

func (i VMwareNodePoolConfigVsphereConfigTagArgs) ToVMwareNodePoolConfigVsphereConfigTagOutput() VMwareNodePoolConfigVsphereConfigTagOutput {
	return i.ToVMwareNodePoolConfigVsphereConfigTagOutputWithContext(context.Background())
}

func (i VMwareNodePoolConfigVsphereConfigTagArgs) ToVMwareNodePoolConfigVsphereConfigTagOutputWithContext(ctx context.Context) VMwareNodePoolConfigVsphereConfigTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolConfigVsphereConfigTagOutput)
}

func (i VMwareNodePoolConfigVsphereConfigTagArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolConfigVsphereConfigTag] {
	return pulumix.Output[VMwareNodePoolConfigVsphereConfigTag]{
		OutputState: i.ToVMwareNodePoolConfigVsphereConfigTagOutputWithContext(ctx).OutputState,
	}
}

// VMwareNodePoolConfigVsphereConfigTagArrayInput is an input type that accepts VMwareNodePoolConfigVsphereConfigTagArray and VMwareNodePoolConfigVsphereConfigTagArrayOutput values.
// You can construct a concrete instance of `VMwareNodePoolConfigVsphereConfigTagArrayInput` via:
//
//	VMwareNodePoolConfigVsphereConfigTagArray{ VMwareNodePoolConfigVsphereConfigTagArgs{...} }
type VMwareNodePoolConfigVsphereConfigTagArrayInput interface {
	pulumi.Input

	ToVMwareNodePoolConfigVsphereConfigTagArrayOutput() VMwareNodePoolConfigVsphereConfigTagArrayOutput
	ToVMwareNodePoolConfigVsphereConfigTagArrayOutputWithContext(context.Context) VMwareNodePoolConfigVsphereConfigTagArrayOutput
}

type VMwareNodePoolConfigVsphereConfigTagArray []VMwareNodePoolConfigVsphereConfigTagInput

func (VMwareNodePoolConfigVsphereConfigTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolConfigVsphereConfigTag)(nil)).Elem()
}

func (i VMwareNodePoolConfigVsphereConfigTagArray) ToVMwareNodePoolConfigVsphereConfigTagArrayOutput() VMwareNodePoolConfigVsphereConfigTagArrayOutput {
	return i.ToVMwareNodePoolConfigVsphereConfigTagArrayOutputWithContext(context.Background())
}

func (i VMwareNodePoolConfigVsphereConfigTagArray) ToVMwareNodePoolConfigVsphereConfigTagArrayOutputWithContext(ctx context.Context) VMwareNodePoolConfigVsphereConfigTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolConfigVsphereConfigTagArrayOutput)
}

func (i VMwareNodePoolConfigVsphereConfigTagArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolConfigVsphereConfigTag] {
	return pulumix.Output[[]VMwareNodePoolConfigVsphereConfigTag]{
		OutputState: i.ToVMwareNodePoolConfigVsphereConfigTagArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareNodePoolConfigVsphereConfigTagOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolConfigVsphereConfigTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolConfigVsphereConfigTag)(nil)).Elem()
}

func (o VMwareNodePoolConfigVsphereConfigTagOutput) ToVMwareNodePoolConfigVsphereConfigTagOutput() VMwareNodePoolConfigVsphereConfigTagOutput {
	return o
}

func (o VMwareNodePoolConfigVsphereConfigTagOutput) ToVMwareNodePoolConfigVsphereConfigTagOutputWithContext(ctx context.Context) VMwareNodePoolConfigVsphereConfigTagOutput {
	return o
}

func (o VMwareNodePoolConfigVsphereConfigTagOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolConfigVsphereConfigTag] {
	return pulumix.Output[VMwareNodePoolConfigVsphereConfigTag]{
		OutputState: o.OutputState,
	}
}

// (Output)
// The Vsphere tag category.
func (o VMwareNodePoolConfigVsphereConfigTagOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfigVsphereConfigTag) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// (Output)
// The Vsphere tag name.
//
// ***
func (o VMwareNodePoolConfigVsphereConfigTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolConfigVsphereConfigTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type VMwareNodePoolConfigVsphereConfigTagArrayOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolConfigVsphereConfigTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolConfigVsphereConfigTag)(nil)).Elem()
}

func (o VMwareNodePoolConfigVsphereConfigTagArrayOutput) ToVMwareNodePoolConfigVsphereConfigTagArrayOutput() VMwareNodePoolConfigVsphereConfigTagArrayOutput {
	return o
}

func (o VMwareNodePoolConfigVsphereConfigTagArrayOutput) ToVMwareNodePoolConfigVsphereConfigTagArrayOutputWithContext(ctx context.Context) VMwareNodePoolConfigVsphereConfigTagArrayOutput {
	return o
}

func (o VMwareNodePoolConfigVsphereConfigTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolConfigVsphereConfigTag] {
	return pulumix.Output[[]VMwareNodePoolConfigVsphereConfigTag]{
		OutputState: o.OutputState,
	}
}

func (o VMwareNodePoolConfigVsphereConfigTagArrayOutput) Index(i pulumi.IntInput) VMwareNodePoolConfigVsphereConfigTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareNodePoolConfigVsphereConfigTag {
		return vs[0].([]VMwareNodePoolConfigVsphereConfigTag)[vs[1].(int)]
	}).(VMwareNodePoolConfigVsphereConfigTagOutput)
}

type VMwareNodePoolNodePoolAutoscaling struct {
	// Maximum number of replicas in the NodePool.
	MaxReplicas int `pulumi:"maxReplicas"`
	// Minimum number of replicas in the NodePool.
	MinReplicas int `pulumi:"minReplicas"`
}

// VMwareNodePoolNodePoolAutoscalingInput is an input type that accepts VMwareNodePoolNodePoolAutoscalingArgs and VMwareNodePoolNodePoolAutoscalingOutput values.
// You can construct a concrete instance of `VMwareNodePoolNodePoolAutoscalingInput` via:
//
//	VMwareNodePoolNodePoolAutoscalingArgs{...}
type VMwareNodePoolNodePoolAutoscalingInput interface {
	pulumi.Input

	ToVMwareNodePoolNodePoolAutoscalingOutput() VMwareNodePoolNodePoolAutoscalingOutput
	ToVMwareNodePoolNodePoolAutoscalingOutputWithContext(context.Context) VMwareNodePoolNodePoolAutoscalingOutput
}

type VMwareNodePoolNodePoolAutoscalingArgs struct {
	// Maximum number of replicas in the NodePool.
	MaxReplicas pulumi.IntInput `pulumi:"maxReplicas"`
	// Minimum number of replicas in the NodePool.
	MinReplicas pulumi.IntInput `pulumi:"minReplicas"`
}

func (VMwareNodePoolNodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolNodePoolAutoscaling)(nil)).Elem()
}

func (i VMwareNodePoolNodePoolAutoscalingArgs) ToVMwareNodePoolNodePoolAutoscalingOutput() VMwareNodePoolNodePoolAutoscalingOutput {
	return i.ToVMwareNodePoolNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i VMwareNodePoolNodePoolAutoscalingArgs) ToVMwareNodePoolNodePoolAutoscalingOutputWithContext(ctx context.Context) VMwareNodePoolNodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolNodePoolAutoscalingOutput)
}

func (i VMwareNodePoolNodePoolAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolNodePoolAutoscaling] {
	return pulumix.Output[VMwareNodePoolNodePoolAutoscaling]{
		OutputState: i.ToVMwareNodePoolNodePoolAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i VMwareNodePoolNodePoolAutoscalingArgs) ToVMwareNodePoolNodePoolAutoscalingPtrOutput() VMwareNodePoolNodePoolAutoscalingPtrOutput {
	return i.ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i VMwareNodePoolNodePoolAutoscalingArgs) ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) VMwareNodePoolNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolNodePoolAutoscalingOutput).ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(ctx)
}

// VMwareNodePoolNodePoolAutoscalingPtrInput is an input type that accepts VMwareNodePoolNodePoolAutoscalingArgs, VMwareNodePoolNodePoolAutoscalingPtr and VMwareNodePoolNodePoolAutoscalingPtrOutput values.
// You can construct a concrete instance of `VMwareNodePoolNodePoolAutoscalingPtrInput` via:
//
//	        VMwareNodePoolNodePoolAutoscalingArgs{...}
//
//	or:
//
//	        nil
type VMwareNodePoolNodePoolAutoscalingPtrInput interface {
	pulumi.Input

	ToVMwareNodePoolNodePoolAutoscalingPtrOutput() VMwareNodePoolNodePoolAutoscalingPtrOutput
	ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(context.Context) VMwareNodePoolNodePoolAutoscalingPtrOutput
}

type vmwareNodePoolNodePoolAutoscalingPtrType VMwareNodePoolNodePoolAutoscalingArgs

func VMwareNodePoolNodePoolAutoscalingPtr(v *VMwareNodePoolNodePoolAutoscalingArgs) VMwareNodePoolNodePoolAutoscalingPtrInput {
	return (*vmwareNodePoolNodePoolAutoscalingPtrType)(v)
}

func (*vmwareNodePoolNodePoolAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareNodePoolNodePoolAutoscaling)(nil)).Elem()
}

func (i *vmwareNodePoolNodePoolAutoscalingPtrType) ToVMwareNodePoolNodePoolAutoscalingPtrOutput() VMwareNodePoolNodePoolAutoscalingPtrOutput {
	return i.ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i *vmwareNodePoolNodePoolAutoscalingPtrType) ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) VMwareNodePoolNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolNodePoolAutoscalingPtrOutput)
}

func (i *vmwareNodePoolNodePoolAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*VMwareNodePoolNodePoolAutoscaling] {
	return pulumix.Output[*VMwareNodePoolNodePoolAutoscaling]{
		OutputState: i.ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type VMwareNodePoolNodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolNodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolNodePoolAutoscaling)(nil)).Elem()
}

func (o VMwareNodePoolNodePoolAutoscalingOutput) ToVMwareNodePoolNodePoolAutoscalingOutput() VMwareNodePoolNodePoolAutoscalingOutput {
	return o
}

func (o VMwareNodePoolNodePoolAutoscalingOutput) ToVMwareNodePoolNodePoolAutoscalingOutputWithContext(ctx context.Context) VMwareNodePoolNodePoolAutoscalingOutput {
	return o
}

func (o VMwareNodePoolNodePoolAutoscalingOutput) ToVMwareNodePoolNodePoolAutoscalingPtrOutput() VMwareNodePoolNodePoolAutoscalingPtrOutput {
	return o.ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (o VMwareNodePoolNodePoolAutoscalingOutput) ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) VMwareNodePoolNodePoolAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareNodePoolNodePoolAutoscaling) *VMwareNodePoolNodePoolAutoscaling {
		return &v
	}).(VMwareNodePoolNodePoolAutoscalingPtrOutput)
}

func (o VMwareNodePoolNodePoolAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolNodePoolAutoscaling] {
	return pulumix.Output[VMwareNodePoolNodePoolAutoscaling]{
		OutputState: o.OutputState,
	}
}

// Maximum number of replicas in the NodePool.
func (o VMwareNodePoolNodePoolAutoscalingOutput) MaxReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareNodePoolNodePoolAutoscaling) int { return v.MaxReplicas }).(pulumi.IntOutput)
}

// Minimum number of replicas in the NodePool.
func (o VMwareNodePoolNodePoolAutoscalingOutput) MinReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareNodePoolNodePoolAutoscaling) int { return v.MinReplicas }).(pulumi.IntOutput)
}

type VMwareNodePoolNodePoolAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolNodePoolAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareNodePoolNodePoolAutoscaling)(nil)).Elem()
}

func (o VMwareNodePoolNodePoolAutoscalingPtrOutput) ToVMwareNodePoolNodePoolAutoscalingPtrOutput() VMwareNodePoolNodePoolAutoscalingPtrOutput {
	return o
}

func (o VMwareNodePoolNodePoolAutoscalingPtrOutput) ToVMwareNodePoolNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) VMwareNodePoolNodePoolAutoscalingPtrOutput {
	return o
}

func (o VMwareNodePoolNodePoolAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VMwareNodePoolNodePoolAutoscaling] {
	return pulumix.Output[*VMwareNodePoolNodePoolAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o VMwareNodePoolNodePoolAutoscalingPtrOutput) Elem() VMwareNodePoolNodePoolAutoscalingOutput {
	return o.ApplyT(func(v *VMwareNodePoolNodePoolAutoscaling) VMwareNodePoolNodePoolAutoscaling {
		if v != nil {
			return *v
		}
		var ret VMwareNodePoolNodePoolAutoscaling
		return ret
	}).(VMwareNodePoolNodePoolAutoscalingOutput)
}

// Maximum number of replicas in the NodePool.
func (o VMwareNodePoolNodePoolAutoscalingPtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareNodePoolNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// Minimum number of replicas in the NodePool.
func (o VMwareNodePoolNodePoolAutoscalingPtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareNodePoolNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

type VMwareNodePoolStatus struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
	// Structure is documented below.
	Conditions []VMwareNodePoolStatusCondition `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the user cluster
	// controller. The error message can be temporary as the user cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage *string `pulumi:"errorMessage"`
}

// VMwareNodePoolStatusInput is an input type that accepts VMwareNodePoolStatusArgs and VMwareNodePoolStatusOutput values.
// You can construct a concrete instance of `VMwareNodePoolStatusInput` via:
//
//	VMwareNodePoolStatusArgs{...}
type VMwareNodePoolStatusInput interface {
	pulumi.Input

	ToVMwareNodePoolStatusOutput() VMwareNodePoolStatusOutput
	ToVMwareNodePoolStatusOutputWithContext(context.Context) VMwareNodePoolStatusOutput
}

type VMwareNodePoolStatusArgs struct {
	// (Output)
	// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
	// Structure is documented below.
	Conditions VMwareNodePoolStatusConditionArrayInput `pulumi:"conditions"`
	// (Output)
	// Human-friendly representation of the error message from the user cluster
	// controller. The error message can be temporary as the user cluster
	// controller creates a cluster or node pool. If the error message persists
	// for a longer period of time, it can be used to surface error message to
	// indicate real problems requiring user intervention.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
}

func (VMwareNodePoolStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolStatus)(nil)).Elem()
}

func (i VMwareNodePoolStatusArgs) ToVMwareNodePoolStatusOutput() VMwareNodePoolStatusOutput {
	return i.ToVMwareNodePoolStatusOutputWithContext(context.Background())
}

func (i VMwareNodePoolStatusArgs) ToVMwareNodePoolStatusOutputWithContext(ctx context.Context) VMwareNodePoolStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolStatusOutput)
}

func (i VMwareNodePoolStatusArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolStatus] {
	return pulumix.Output[VMwareNodePoolStatus]{
		OutputState: i.ToVMwareNodePoolStatusOutputWithContext(ctx).OutputState,
	}
}

// VMwareNodePoolStatusArrayInput is an input type that accepts VMwareNodePoolStatusArray and VMwareNodePoolStatusArrayOutput values.
// You can construct a concrete instance of `VMwareNodePoolStatusArrayInput` via:
//
//	VMwareNodePoolStatusArray{ VMwareNodePoolStatusArgs{...} }
type VMwareNodePoolStatusArrayInput interface {
	pulumi.Input

	ToVMwareNodePoolStatusArrayOutput() VMwareNodePoolStatusArrayOutput
	ToVMwareNodePoolStatusArrayOutputWithContext(context.Context) VMwareNodePoolStatusArrayOutput
}

type VMwareNodePoolStatusArray []VMwareNodePoolStatusInput

func (VMwareNodePoolStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolStatus)(nil)).Elem()
}

func (i VMwareNodePoolStatusArray) ToVMwareNodePoolStatusArrayOutput() VMwareNodePoolStatusArrayOutput {
	return i.ToVMwareNodePoolStatusArrayOutputWithContext(context.Background())
}

func (i VMwareNodePoolStatusArray) ToVMwareNodePoolStatusArrayOutputWithContext(ctx context.Context) VMwareNodePoolStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolStatusArrayOutput)
}

func (i VMwareNodePoolStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolStatus] {
	return pulumix.Output[[]VMwareNodePoolStatus]{
		OutputState: i.ToVMwareNodePoolStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareNodePoolStatusOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolStatus)(nil)).Elem()
}

func (o VMwareNodePoolStatusOutput) ToVMwareNodePoolStatusOutput() VMwareNodePoolStatusOutput {
	return o
}

func (o VMwareNodePoolStatusOutput) ToVMwareNodePoolStatusOutputWithContext(ctx context.Context) VMwareNodePoolStatusOutput {
	return o
}

func (o VMwareNodePoolStatusOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolStatus] {
	return pulumix.Output[VMwareNodePoolStatus]{
		OutputState: o.OutputState,
	}
}

// (Output)
// ResourceConditions provide a standard mechanism for higher-level status reporting from user cluster controller.
// Structure is documented below.
func (o VMwareNodePoolStatusOutput) Conditions() VMwareNodePoolStatusConditionArrayOutput {
	return o.ApplyT(func(v VMwareNodePoolStatus) []VMwareNodePoolStatusCondition { return v.Conditions }).(VMwareNodePoolStatusConditionArrayOutput)
}

// (Output)
// Human-friendly representation of the error message from the user cluster
// controller. The error message can be temporary as the user cluster
// controller creates a cluster or node pool. If the error message persists
// for a longer period of time, it can be used to surface error message to
// indicate real problems requiring user intervention.
func (o VMwareNodePoolStatusOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolStatus) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

type VMwareNodePoolStatusArrayOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolStatus)(nil)).Elem()
}

func (o VMwareNodePoolStatusArrayOutput) ToVMwareNodePoolStatusArrayOutput() VMwareNodePoolStatusArrayOutput {
	return o
}

func (o VMwareNodePoolStatusArrayOutput) ToVMwareNodePoolStatusArrayOutputWithContext(ctx context.Context) VMwareNodePoolStatusArrayOutput {
	return o
}

func (o VMwareNodePoolStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolStatus] {
	return pulumix.Output[[]VMwareNodePoolStatus]{
		OutputState: o.OutputState,
	}
}

func (o VMwareNodePoolStatusArrayOutput) Index(i pulumi.IntInput) VMwareNodePoolStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareNodePoolStatus {
		return vs[0].([]VMwareNodePoolStatus)[vs[1].(int)]
	}).(VMwareNodePoolStatusOutput)
}

type VMwareNodePoolStatusCondition struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// (Output)
	// Human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`
	// (Output)
	// Machine-readable message indicating details about last transition.
	Reason *string `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State *string `pulumi:"state"`
	// (Output)
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type *string `pulumi:"type"`
}

// VMwareNodePoolStatusConditionInput is an input type that accepts VMwareNodePoolStatusConditionArgs and VMwareNodePoolStatusConditionOutput values.
// You can construct a concrete instance of `VMwareNodePoolStatusConditionInput` via:
//
//	VMwareNodePoolStatusConditionArgs{...}
type VMwareNodePoolStatusConditionInput interface {
	pulumi.Input

	ToVMwareNodePoolStatusConditionOutput() VMwareNodePoolStatusConditionOutput
	ToVMwareNodePoolStatusConditionOutputWithContext(context.Context) VMwareNodePoolStatusConditionOutput
}

type VMwareNodePoolStatusConditionArgs struct {
	// (Output)
	// Last time the condition transit from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// (Output)
	// Human-readable message indicating details about last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// (Output)
	// Machine-readable message indicating details about last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// (Output)
	// The lifecycle state of the condition.
	State pulumi.StringPtrInput `pulumi:"state"`
	// (Output)
	// Type of the condition.
	// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VMwareNodePoolStatusConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolStatusCondition)(nil)).Elem()
}

func (i VMwareNodePoolStatusConditionArgs) ToVMwareNodePoolStatusConditionOutput() VMwareNodePoolStatusConditionOutput {
	return i.ToVMwareNodePoolStatusConditionOutputWithContext(context.Background())
}

func (i VMwareNodePoolStatusConditionArgs) ToVMwareNodePoolStatusConditionOutputWithContext(ctx context.Context) VMwareNodePoolStatusConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolStatusConditionOutput)
}

func (i VMwareNodePoolStatusConditionArgs) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolStatusCondition] {
	return pulumix.Output[VMwareNodePoolStatusCondition]{
		OutputState: i.ToVMwareNodePoolStatusConditionOutputWithContext(ctx).OutputState,
	}
}

// VMwareNodePoolStatusConditionArrayInput is an input type that accepts VMwareNodePoolStatusConditionArray and VMwareNodePoolStatusConditionArrayOutput values.
// You can construct a concrete instance of `VMwareNodePoolStatusConditionArrayInput` via:
//
//	VMwareNodePoolStatusConditionArray{ VMwareNodePoolStatusConditionArgs{...} }
type VMwareNodePoolStatusConditionArrayInput interface {
	pulumi.Input

	ToVMwareNodePoolStatusConditionArrayOutput() VMwareNodePoolStatusConditionArrayOutput
	ToVMwareNodePoolStatusConditionArrayOutputWithContext(context.Context) VMwareNodePoolStatusConditionArrayOutput
}

type VMwareNodePoolStatusConditionArray []VMwareNodePoolStatusConditionInput

func (VMwareNodePoolStatusConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolStatusCondition)(nil)).Elem()
}

func (i VMwareNodePoolStatusConditionArray) ToVMwareNodePoolStatusConditionArrayOutput() VMwareNodePoolStatusConditionArrayOutput {
	return i.ToVMwareNodePoolStatusConditionArrayOutputWithContext(context.Background())
}

func (i VMwareNodePoolStatusConditionArray) ToVMwareNodePoolStatusConditionArrayOutputWithContext(ctx context.Context) VMwareNodePoolStatusConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareNodePoolStatusConditionArrayOutput)
}

func (i VMwareNodePoolStatusConditionArray) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolStatusCondition] {
	return pulumix.Output[[]VMwareNodePoolStatusCondition]{
		OutputState: i.ToVMwareNodePoolStatusConditionArrayOutputWithContext(ctx).OutputState,
	}
}

type VMwareNodePoolStatusConditionOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolStatusConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareNodePoolStatusCondition)(nil)).Elem()
}

func (o VMwareNodePoolStatusConditionOutput) ToVMwareNodePoolStatusConditionOutput() VMwareNodePoolStatusConditionOutput {
	return o
}

func (o VMwareNodePoolStatusConditionOutput) ToVMwareNodePoolStatusConditionOutputWithContext(ctx context.Context) VMwareNodePoolStatusConditionOutput {
	return o
}

func (o VMwareNodePoolStatusConditionOutput) ToOutput(ctx context.Context) pulumix.Output[VMwareNodePoolStatusCondition] {
	return pulumix.Output[VMwareNodePoolStatusCondition]{
		OutputState: o.OutputState,
	}
}

// (Output)
// Last time the condition transit from one status to another.
func (o VMwareNodePoolStatusConditionOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolStatusCondition) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// (Output)
// Human-readable message indicating details about last transition.
func (o VMwareNodePoolStatusConditionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolStatusCondition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// (Output)
// Machine-readable message indicating details about last transition.
func (o VMwareNodePoolStatusConditionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolStatusCondition) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// (Output)
// The lifecycle state of the condition.
func (o VMwareNodePoolStatusConditionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolStatusCondition) *string { return v.State }).(pulumi.StringPtrOutput)
}

// (Output)
// Type of the condition.
// (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
func (o VMwareNodePoolStatusConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareNodePoolStatusCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VMwareNodePoolStatusConditionArrayOutput struct{ *pulumi.OutputState }

func (VMwareNodePoolStatusConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareNodePoolStatusCondition)(nil)).Elem()
}

func (o VMwareNodePoolStatusConditionArrayOutput) ToVMwareNodePoolStatusConditionArrayOutput() VMwareNodePoolStatusConditionArrayOutput {
	return o
}

func (o VMwareNodePoolStatusConditionArrayOutput) ToVMwareNodePoolStatusConditionArrayOutputWithContext(ctx context.Context) VMwareNodePoolStatusConditionArrayOutput {
	return o
}

func (o VMwareNodePoolStatusConditionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VMwareNodePoolStatusCondition] {
	return pulumix.Output[[]VMwareNodePoolStatusCondition]{
		OutputState: o.OutputState,
	}
}

func (o VMwareNodePoolStatusConditionArrayOutput) Index(i pulumi.IntInput) VMwareNodePoolStatusConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareNodePoolStatusCondition {
		return vs[0].([]VMwareNodePoolStatusCondition)[vs[1].(int)]
	}).(VMwareNodePoolStatusConditionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterClusterOperationsInput)(nil)).Elem(), BareMetalAdminClusterClusterOperationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterClusterOperationsPtrInput)(nil)).Elem(), BareMetalAdminClusterClusterOperationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlanePtrInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneApiServerArgInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneApiServerArgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneApiServerArgArrayInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneApiServerArgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput)(nil)).Elem(), BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterFleetInput)(nil)).Elem(), BareMetalAdminClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterFleetArrayInput)(nil)).Elem(), BareMetalAdminClusterFleetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterLoadBalancerInput)(nil)).Elem(), BareMetalAdminClusterLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterLoadBalancerPtrInput)(nil)).Elem(), BareMetalAdminClusterLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterLoadBalancerManualLbConfigInput)(nil)).Elem(), BareMetalAdminClusterLoadBalancerManualLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterLoadBalancerManualLbConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterLoadBalancerManualLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterLoadBalancerPortConfigInput)(nil)).Elem(), BareMetalAdminClusterLoadBalancerPortConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterLoadBalancerPortConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterLoadBalancerPortConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterLoadBalancerVipConfigInput)(nil)).Elem(), BareMetalAdminClusterLoadBalancerVipConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterLoadBalancerVipConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterLoadBalancerVipConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterMaintenanceConfigInput)(nil)).Elem(), BareMetalAdminClusterMaintenanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterMaintenanceConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterMaintenanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterNetworkConfigInput)(nil)).Elem(), BareMetalAdminClusterNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterNetworkConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterNetworkConfigIslandModeCidrInput)(nil)).Elem(), BareMetalAdminClusterNetworkConfigIslandModeCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterNetworkConfigIslandModeCidrPtrInput)(nil)).Elem(), BareMetalAdminClusterNetworkConfigIslandModeCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterNodeAccessConfigInput)(nil)).Elem(), BareMetalAdminClusterNodeAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterNodeAccessConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterNodeAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterNodeConfigInput)(nil)).Elem(), BareMetalAdminClusterNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterNodeConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterProxyInput)(nil)).Elem(), BareMetalAdminClusterProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterProxyPtrInput)(nil)).Elem(), BareMetalAdminClusterProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterSecurityConfigInput)(nil)).Elem(), BareMetalAdminClusterSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterSecurityConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterSecurityConfigAuthorizationInput)(nil)).Elem(), BareMetalAdminClusterSecurityConfigAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterSecurityConfigAuthorizationPtrInput)(nil)).Elem(), BareMetalAdminClusterSecurityConfigAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterSecurityConfigAuthorizationAdminUserInput)(nil)).Elem(), BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayInput)(nil)).Elem(), BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStatusInput)(nil)).Elem(), BareMetalAdminClusterStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStatusArrayInput)(nil)).Elem(), BareMetalAdminClusterStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStatusConditionInput)(nil)).Elem(), BareMetalAdminClusterStatusConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStatusConditionArrayInput)(nil)).Elem(), BareMetalAdminClusterStatusConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStorageInput)(nil)).Elem(), BareMetalAdminClusterStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStoragePtrInput)(nil)).Elem(), BareMetalAdminClusterStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStorageLvpNodeMountsConfigInput)(nil)).Elem(), BareMetalAdminClusterStorageLvpNodeMountsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStorageLvpNodeMountsConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterStorageLvpNodeMountsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStorageLvpShareConfigInput)(nil)).Elem(), BareMetalAdminClusterStorageLvpShareConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStorageLvpShareConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterStorageLvpShareConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStorageLvpShareConfigLvpConfigInput)(nil)).Elem(), BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrInput)(nil)).Elem(), BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterValidationCheckInput)(nil)).Elem(), BareMetalAdminClusterValidationCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterValidationCheckArrayInput)(nil)).Elem(), BareMetalAdminClusterValidationCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterValidationCheckStatusInput)(nil)).Elem(), BareMetalAdminClusterValidationCheckStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterValidationCheckStatusArrayInput)(nil)).Elem(), BareMetalAdminClusterValidationCheckStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterValidationCheckStatusResultInput)(nil)).Elem(), BareMetalAdminClusterValidationCheckStatusResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterValidationCheckStatusResultArrayInput)(nil)).Elem(), BareMetalAdminClusterValidationCheckStatusResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterClusterOperationsInput)(nil)).Elem(), BareMetalClusterClusterOperationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterClusterOperationsPtrInput)(nil)).Elem(), BareMetalClusterClusterOperationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneInput)(nil)).Elem(), BareMetalClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlanePtrInput)(nil)).Elem(), BareMetalClusterControlPlaneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneApiServerArgInput)(nil)).Elem(), BareMetalClusterControlPlaneApiServerArgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneApiServerArgArrayInput)(nil)).Elem(), BareMetalClusterControlPlaneApiServerArgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigInput)(nil)).Elem(), BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrInput)(nil)).Elem(), BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigInput)(nil)).Elem(), BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrInput)(nil)).Elem(), BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigInput)(nil)).Elem(), BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayInput)(nil)).Elem(), BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintInput)(nil)).Elem(), BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayInput)(nil)).Elem(), BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterFleetInput)(nil)).Elem(), BareMetalClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterFleetArrayInput)(nil)).Elem(), BareMetalClusterFleetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerInput)(nil)).Elem(), BareMetalClusterLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigAddressPoolInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput)(nil)).Elem(), BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerManualLbConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerManualLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerManualLbConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerManualLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigAddressPoolInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayInput)(nil)).Elem(), BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerPortConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerPortConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerPortConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerPortConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerVipConfigInput)(nil)).Elem(), BareMetalClusterLoadBalancerVipConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterLoadBalancerVipConfigPtrInput)(nil)).Elem(), BareMetalClusterLoadBalancerVipConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterMaintenanceConfigInput)(nil)).Elem(), BareMetalClusterMaintenanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterMaintenanceConfigPtrInput)(nil)).Elem(), BareMetalClusterMaintenanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNetworkConfigInput)(nil)).Elem(), BareMetalClusterNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNetworkConfigPtrInput)(nil)).Elem(), BareMetalClusterNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNetworkConfigIslandModeCidrInput)(nil)).Elem(), BareMetalClusterNetworkConfigIslandModeCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNetworkConfigIslandModeCidrPtrInput)(nil)).Elem(), BareMetalClusterNetworkConfigIslandModeCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigInput)(nil)).Elem(), BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrInput)(nil)).Elem(), BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNetworkConfigSrIovConfigInput)(nil)).Elem(), BareMetalClusterNetworkConfigSrIovConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNetworkConfigSrIovConfigPtrInput)(nil)).Elem(), BareMetalClusterNetworkConfigSrIovConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNodeAccessConfigInput)(nil)).Elem(), BareMetalClusterNodeAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNodeAccessConfigPtrInput)(nil)).Elem(), BareMetalClusterNodeAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNodeConfigInput)(nil)).Elem(), BareMetalClusterNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterNodeConfigPtrInput)(nil)).Elem(), BareMetalClusterNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterOsEnvironmentConfigInput)(nil)).Elem(), BareMetalClusterOsEnvironmentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterOsEnvironmentConfigPtrInput)(nil)).Elem(), BareMetalClusterOsEnvironmentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterProxyInput)(nil)).Elem(), BareMetalClusterProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterProxyPtrInput)(nil)).Elem(), BareMetalClusterProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterSecurityConfigInput)(nil)).Elem(), BareMetalClusterSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterSecurityConfigPtrInput)(nil)).Elem(), BareMetalClusterSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterSecurityConfigAuthorizationInput)(nil)).Elem(), BareMetalClusterSecurityConfigAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterSecurityConfigAuthorizationPtrInput)(nil)).Elem(), BareMetalClusterSecurityConfigAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterSecurityConfigAuthorizationAdminUserInput)(nil)).Elem(), BareMetalClusterSecurityConfigAuthorizationAdminUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterSecurityConfigAuthorizationAdminUserArrayInput)(nil)).Elem(), BareMetalClusterSecurityConfigAuthorizationAdminUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStatusInput)(nil)).Elem(), BareMetalClusterStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStatusArrayInput)(nil)).Elem(), BareMetalClusterStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStatusConditionInput)(nil)).Elem(), BareMetalClusterStatusConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStatusConditionArrayInput)(nil)).Elem(), BareMetalClusterStatusConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStorageInput)(nil)).Elem(), BareMetalClusterStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStoragePtrInput)(nil)).Elem(), BareMetalClusterStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStorageLvpNodeMountsConfigInput)(nil)).Elem(), BareMetalClusterStorageLvpNodeMountsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStorageLvpNodeMountsConfigPtrInput)(nil)).Elem(), BareMetalClusterStorageLvpNodeMountsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStorageLvpShareConfigInput)(nil)).Elem(), BareMetalClusterStorageLvpShareConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStorageLvpShareConfigPtrInput)(nil)).Elem(), BareMetalClusterStorageLvpShareConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStorageLvpShareConfigLvpConfigInput)(nil)).Elem(), BareMetalClusterStorageLvpShareConfigLvpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterStorageLvpShareConfigLvpConfigPtrInput)(nil)).Elem(), BareMetalClusterStorageLvpShareConfigLvpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterValidationCheckInput)(nil)).Elem(), BareMetalClusterValidationCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterValidationCheckArrayInput)(nil)).Elem(), BareMetalClusterValidationCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterValidationCheckStatusInput)(nil)).Elem(), BareMetalClusterValidationCheckStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterValidationCheckStatusArrayInput)(nil)).Elem(), BareMetalClusterValidationCheckStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterValidationCheckStatusResultInput)(nil)).Elem(), BareMetalClusterValidationCheckStatusResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterValidationCheckStatusResultArrayInput)(nil)).Elem(), BareMetalClusterValidationCheckStatusResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolNodePoolConfigInput)(nil)).Elem(), BareMetalNodePoolNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolNodePoolConfigPtrInput)(nil)).Elem(), BareMetalNodePoolNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolNodePoolConfigNodeConfigInput)(nil)).Elem(), BareMetalNodePoolNodePoolConfigNodeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolNodePoolConfigNodeConfigArrayInput)(nil)).Elem(), BareMetalNodePoolNodePoolConfigNodeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolNodePoolConfigTaintInput)(nil)).Elem(), BareMetalNodePoolNodePoolConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolNodePoolConfigTaintArrayInput)(nil)).Elem(), BareMetalNodePoolNodePoolConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolStatusInput)(nil)).Elem(), BareMetalNodePoolStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolStatusArrayInput)(nil)).Elem(), BareMetalNodePoolStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolStatusConditionInput)(nil)).Elem(), BareMetalNodePoolStatusConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolStatusConditionArrayInput)(nil)).Elem(), BareMetalNodePoolStatusConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterAntiAffinityGroupsInput)(nil)).Elem(), VMwareClusterAntiAffinityGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterAntiAffinityGroupsPtrInput)(nil)).Elem(), VMwareClusterAntiAffinityGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterAuthorizationInput)(nil)).Elem(), VMwareClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterAuthorizationPtrInput)(nil)).Elem(), VMwareClusterAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterAuthorizationAdminUserInput)(nil)).Elem(), VMwareClusterAuthorizationAdminUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterAuthorizationAdminUserArrayInput)(nil)).Elem(), VMwareClusterAuthorizationAdminUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterAutoRepairConfigInput)(nil)).Elem(), VMwareClusterAutoRepairConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterAutoRepairConfigPtrInput)(nil)).Elem(), VMwareClusterAutoRepairConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterControlPlaneNodeInput)(nil)).Elem(), VMwareClusterControlPlaneNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterControlPlaneNodePtrInput)(nil)).Elem(), VMwareClusterControlPlaneNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterControlPlaneNodeAutoResizeConfigInput)(nil)).Elem(), VMwareClusterControlPlaneNodeAutoResizeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterControlPlaneNodeAutoResizeConfigPtrInput)(nil)).Elem(), VMwareClusterControlPlaneNodeAutoResizeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterControlPlaneNodeVsphereConfigInput)(nil)).Elem(), VMwareClusterControlPlaneNodeVsphereConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterControlPlaneNodeVsphereConfigArrayInput)(nil)).Elem(), VMwareClusterControlPlaneNodeVsphereConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterDataplaneV2Input)(nil)).Elem(), VMwareClusterDataplaneV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterDataplaneV2PtrInput)(nil)).Elem(), VMwareClusterDataplaneV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterFleetInput)(nil)).Elem(), VMwareClusterFleetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterFleetArrayInput)(nil)).Elem(), VMwareClusterFleetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerInput)(nil)).Elem(), VMwareClusterLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerPtrInput)(nil)).Elem(), VMwareClusterLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerF5ConfigInput)(nil)).Elem(), VMwareClusterLoadBalancerF5ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerF5ConfigPtrInput)(nil)).Elem(), VMwareClusterLoadBalancerF5ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerManualLbConfigInput)(nil)).Elem(), VMwareClusterLoadBalancerManualLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerManualLbConfigPtrInput)(nil)).Elem(), VMwareClusterLoadBalancerManualLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerMetalLbConfigInput)(nil)).Elem(), VMwareClusterLoadBalancerMetalLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerMetalLbConfigPtrInput)(nil)).Elem(), VMwareClusterLoadBalancerMetalLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerMetalLbConfigAddressPoolInput)(nil)).Elem(), VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayInput)(nil)).Elem(), VMwareClusterLoadBalancerMetalLbConfigAddressPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerVipConfigInput)(nil)).Elem(), VMwareClusterLoadBalancerVipConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterLoadBalancerVipConfigPtrInput)(nil)).Elem(), VMwareClusterLoadBalancerVipConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigInput)(nil)).Elem(), VMwareClusterNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigPtrInput)(nil)).Elem(), VMwareClusterNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigInput)(nil)).Elem(), VMwareClusterNetworkConfigControlPlaneV2ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigPtrInput)(nil)).Elem(), VMwareClusterNetworkConfigControlPlaneV2ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockInput)(nil)).Elem(), VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrInput)(nil)).Elem(), VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpInput)(nil)).Elem(), VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayInput)(nil)).Elem(), VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigDhcpIpConfigInput)(nil)).Elem(), VMwareClusterNetworkConfigDhcpIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigDhcpIpConfigPtrInput)(nil)).Elem(), VMwareClusterNetworkConfigDhcpIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigHostConfigInput)(nil)).Elem(), VMwareClusterNetworkConfigHostConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigHostConfigPtrInput)(nil)).Elem(), VMwareClusterNetworkConfigHostConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigInput)(nil)).Elem(), VMwareClusterNetworkConfigStaticIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigPtrInput)(nil)).Elem(), VMwareClusterNetworkConfigStaticIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigIpBlockInput)(nil)).Elem(), VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayInput)(nil)).Elem(), VMwareClusterNetworkConfigStaticIpConfigIpBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigIpBlockIpInput)(nil)).Elem(), VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayInput)(nil)).Elem(), VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterStatusInput)(nil)).Elem(), VMwareClusterStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterStatusArrayInput)(nil)).Elem(), VMwareClusterStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterStatusConditionInput)(nil)).Elem(), VMwareClusterStatusConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterStatusConditionArrayInput)(nil)).Elem(), VMwareClusterStatusConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterStorageInput)(nil)).Elem(), VMwareClusterStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterStoragePtrInput)(nil)).Elem(), VMwareClusterStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterValidationCheckInput)(nil)).Elem(), VMwareClusterValidationCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterValidationCheckArrayInput)(nil)).Elem(), VMwareClusterValidationCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterValidationCheckStatusInput)(nil)).Elem(), VMwareClusterValidationCheckStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterValidationCheckStatusArrayInput)(nil)).Elem(), VMwareClusterValidationCheckStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterValidationCheckStatusResultInput)(nil)).Elem(), VMwareClusterValidationCheckStatusResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterValidationCheckStatusResultArrayInput)(nil)).Elem(), VMwareClusterValidationCheckStatusResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterVcenterInput)(nil)).Elem(), VMwareClusterVcenterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareClusterVcenterArrayInput)(nil)).Elem(), VMwareClusterVcenterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolConfigInput)(nil)).Elem(), VMwareNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolConfigPtrInput)(nil)).Elem(), VMwareNodePoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolConfigTaintInput)(nil)).Elem(), VMwareNodePoolConfigTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolConfigTaintArrayInput)(nil)).Elem(), VMwareNodePoolConfigTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolConfigVsphereConfigInput)(nil)).Elem(), VMwareNodePoolConfigVsphereConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolConfigVsphereConfigArrayInput)(nil)).Elem(), VMwareNodePoolConfigVsphereConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolConfigVsphereConfigTagInput)(nil)).Elem(), VMwareNodePoolConfigVsphereConfigTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolConfigVsphereConfigTagArrayInput)(nil)).Elem(), VMwareNodePoolConfigVsphereConfigTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolNodePoolAutoscalingInput)(nil)).Elem(), VMwareNodePoolNodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolNodePoolAutoscalingPtrInput)(nil)).Elem(), VMwareNodePoolNodePoolAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolStatusInput)(nil)).Elem(), VMwareNodePoolStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolStatusArrayInput)(nil)).Elem(), VMwareNodePoolStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolStatusConditionInput)(nil)).Elem(), VMwareNodePoolStatusConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMwareNodePoolStatusConditionArrayInput)(nil)).Elem(), VMwareNodePoolStatusConditionArray{})
	pulumi.RegisterOutputType(BareMetalAdminClusterClusterOperationsOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterClusterOperationsPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlanePtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneApiServerArgOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneApiServerArgArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterFleetOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterFleetArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterLoadBalancerOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterLoadBalancerManualLbConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterLoadBalancerManualLbConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterLoadBalancerPortConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterLoadBalancerPortConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterLoadBalancerVipConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterLoadBalancerVipConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterMaintenanceConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterMaintenanceConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterNetworkConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterNetworkConfigIslandModeCidrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterNetworkConfigIslandModeCidrPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterNodeAccessConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterNodeAccessConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterNodeConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterProxyOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterProxyPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterSecurityConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterSecurityConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterSecurityConfigAuthorizationOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterSecurityConfigAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterSecurityConfigAuthorizationAdminUserOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStatusOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStatusArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStatusConditionOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStatusConditionArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStorageOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStoragePtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStorageLvpNodeMountsConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStorageLvpNodeMountsConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStorageLvpShareConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStorageLvpShareConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStorageLvpShareConfigLvpConfigOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterStorageLvpShareConfigLvpConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterValidationCheckOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterValidationCheckArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterValidationCheckStatusOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterValidationCheckStatusArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterValidationCheckStatusResultOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterValidationCheckStatusResultArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterClusterOperationsOutput{})
	pulumi.RegisterOutputType(BareMetalClusterClusterOperationsPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlanePtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneApiServerArgOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneApiServerArgArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneControlPlaneNodePoolConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneControlPlaneNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintOutput{})
	pulumi.RegisterOutputType(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterFleetOutput{})
	pulumi.RegisterOutputType(BareMetalClusterFleetArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigAddressPoolOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerManualLbConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerManualLbConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigAddressPoolOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerPortConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerPortConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerVipConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterLoadBalancerVipConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterMaintenanceConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterMaintenanceConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNetworkConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNetworkConfigIslandModeCidrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNetworkConfigIslandModeCidrPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNetworkConfigSrIovConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNetworkConfigSrIovConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNodeAccessConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNodeAccessConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNodeConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterOsEnvironmentConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterOsEnvironmentConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterProxyOutput{})
	pulumi.RegisterOutputType(BareMetalClusterProxyPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterSecurityConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterSecurityConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterSecurityConfigAuthorizationOutput{})
	pulumi.RegisterOutputType(BareMetalClusterSecurityConfigAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterSecurityConfigAuthorizationAdminUserOutput{})
	pulumi.RegisterOutputType(BareMetalClusterSecurityConfigAuthorizationAdminUserArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStatusOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStatusArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStatusConditionOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStatusConditionArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStorageOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStoragePtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStorageLvpNodeMountsConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStorageLvpNodeMountsConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStorageLvpShareConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStorageLvpShareConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStorageLvpShareConfigLvpConfigOutput{})
	pulumi.RegisterOutputType(BareMetalClusterStorageLvpShareConfigLvpConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalClusterValidationCheckOutput{})
	pulumi.RegisterOutputType(BareMetalClusterValidationCheckArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterValidationCheckStatusOutput{})
	pulumi.RegisterOutputType(BareMetalClusterValidationCheckStatusArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterValidationCheckStatusResultOutput{})
	pulumi.RegisterOutputType(BareMetalClusterValidationCheckStatusResultArrayOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolNodePoolConfigOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolNodePoolConfigNodeConfigOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolNodePoolConfigNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolNodePoolConfigTaintOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolNodePoolConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolStatusOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolStatusArrayOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolStatusConditionOutput{})
	pulumi.RegisterOutputType(BareMetalNodePoolStatusConditionArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterAntiAffinityGroupsOutput{})
	pulumi.RegisterOutputType(VMwareClusterAntiAffinityGroupsPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterAuthorizationOutput{})
	pulumi.RegisterOutputType(VMwareClusterAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterAuthorizationAdminUserOutput{})
	pulumi.RegisterOutputType(VMwareClusterAuthorizationAdminUserArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterAutoRepairConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterAutoRepairConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterControlPlaneNodeOutput{})
	pulumi.RegisterOutputType(VMwareClusterControlPlaneNodePtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterControlPlaneNodeAutoResizeConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterControlPlaneNodeAutoResizeConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterControlPlaneNodeVsphereConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterControlPlaneNodeVsphereConfigArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterDataplaneV2Output{})
	pulumi.RegisterOutputType(VMwareClusterDataplaneV2PtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterFleetOutput{})
	pulumi.RegisterOutputType(VMwareClusterFleetArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerF5ConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerF5ConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerManualLbConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerManualLbConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerMetalLbConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerMetalLbConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerMetalLbConfigAddressPoolOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerMetalLbConfigAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerVipConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterLoadBalancerVipConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigControlPlaneV2ConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigControlPlaneV2ConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigDhcpIpConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigDhcpIpConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigHostConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigHostConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigStaticIpConfigOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigStaticIpConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigStaticIpConfigIpBlockOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigStaticIpConfigIpBlockArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigStaticIpConfigIpBlockIpOutput{})
	pulumi.RegisterOutputType(VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterStatusOutput{})
	pulumi.RegisterOutputType(VMwareClusterStatusArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterStatusConditionOutput{})
	pulumi.RegisterOutputType(VMwareClusterStatusConditionArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterStorageOutput{})
	pulumi.RegisterOutputType(VMwareClusterStoragePtrOutput{})
	pulumi.RegisterOutputType(VMwareClusterValidationCheckOutput{})
	pulumi.RegisterOutputType(VMwareClusterValidationCheckArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterValidationCheckStatusOutput{})
	pulumi.RegisterOutputType(VMwareClusterValidationCheckStatusArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterValidationCheckStatusResultOutput{})
	pulumi.RegisterOutputType(VMwareClusterValidationCheckStatusResultArrayOutput{})
	pulumi.RegisterOutputType(VMwareClusterVcenterOutput{})
	pulumi.RegisterOutputType(VMwareClusterVcenterArrayOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolConfigOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolConfigPtrOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolConfigTaintOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolConfigVsphereConfigOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolConfigVsphereConfigArrayOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolConfigVsphereConfigTagOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolConfigVsphereConfigTagArrayOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolNodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolNodePoolAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolStatusOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolStatusArrayOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolStatusConditionOutput{})
	pulumi.RegisterOutputType(VMwareNodePoolStatusConditionArrayOutput{})
}
