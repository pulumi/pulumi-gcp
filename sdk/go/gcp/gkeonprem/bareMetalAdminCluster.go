// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkeonprem

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### Gkeonprem Bare Metal Admin Cluster Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkeonprem"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkeonprem.NewBareMetalAdminCluster(ctx, "admin-cluster-basic", &gkeonprem.BareMetalAdminClusterArgs{
//				Location:         pulumi.String("us-west1"),
//				BareMetalVersion: pulumi.String("1.13.4"),
//				NetworkConfig: &gkeonprem.BareMetalAdminClusterNetworkConfigArgs{
//					IslandModeCidr: &gkeonprem.BareMetalAdminClusterNetworkConfigIslandModeCidrArgs{
//						ServiceAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("172.26.0.0/16"),
//						},
//						PodAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("10.240.0.0/13"),
//						},
//					},
//				},
//				NodeConfig: &gkeonprem.BareMetalAdminClusterNodeConfigArgs{
//					MaxPodsPerNode: pulumi.Int(250),
//				},
//				ControlPlane: &gkeonprem.BareMetalAdminClusterControlPlaneArgs{
//					ControlPlaneNodePoolConfig: &gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs{
//						NodePoolConfig: &gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{
//							Labels:          nil,
//							OperatingSystem: pulumi.String("LINUX"),
//							NodeConfigs: gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray{
//								&gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{
//									Labels: nil,
//									NodeIp: pulumi.String("10.200.0.2"),
//								},
//								&gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{
//									Labels: nil,
//									NodeIp: pulumi.String("10.200.0.3"),
//								},
//								&gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{
//									Labels: nil,
//									NodeIp: pulumi.String("10.200.0.4"),
//								},
//							},
//						},
//					},
//				},
//				LoadBalancer: &gkeonprem.BareMetalAdminClusterLoadBalancerArgs{
//					PortConfig: &gkeonprem.BareMetalAdminClusterLoadBalancerPortConfigArgs{
//						ControlPlaneLoadBalancerPort: pulumi.Int(443),
//					},
//					VipConfig: &gkeonprem.BareMetalAdminClusterLoadBalancerVipConfigArgs{
//						ControlPlaneVip: pulumi.String("10.200.0.5"),
//					},
//				},
//				Storage: &gkeonprem.BareMetalAdminClusterStorageArgs{
//					LvpShareConfig: &gkeonprem.BareMetalAdminClusterStorageLvpShareConfigArgs{
//						LvpConfig: &gkeonprem.BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs{
//							Path:         pulumi.String("/mnt/localpv-share"),
//							StorageClass: pulumi.String("local-shared"),
//						},
//						SharedPathPvCount: pulumi.Int(5),
//					},
//					LvpNodeMountsConfig: &gkeonprem.BareMetalAdminClusterStorageLvpNodeMountsConfigArgs{
//						Path:         pulumi.String("/mnt/localpv-disk"),
//						StorageClass: pulumi.String("local-disks"),
//					},
//				},
//				NodeAccessConfig: &gkeonprem.BareMetalAdminClusterNodeAccessConfigArgs{
//					LoginUser: pulumi.String("root"),
//				},
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Gkeonprem Bare Metal Admin Cluster Full
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkeonprem"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkeonprem.NewBareMetalAdminCluster(ctx, "admin-cluster-basic", &gkeonprem.BareMetalAdminClusterArgs{
//				Location:         pulumi.String("us-west1"),
//				Description:      pulumi.String("test description"),
//				BareMetalVersion: pulumi.String("1.13.4"),
//				Annotations: pulumi.StringMap{
//					"env": pulumi.String("test"),
//				},
//				NetworkConfig: &gkeonprem.BareMetalAdminClusterNetworkConfigArgs{
//					IslandModeCidr: &gkeonprem.BareMetalAdminClusterNetworkConfigIslandModeCidrArgs{
//						ServiceAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("172.26.0.0/16"),
//						},
//						PodAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("10.240.0.0/13"),
//						},
//					},
//				},
//				NodeConfig: &gkeonprem.BareMetalAdminClusterNodeConfigArgs{
//					MaxPodsPerNode: pulumi.Int(250),
//				},
//				ControlPlane: &gkeonprem.BareMetalAdminClusterControlPlaneArgs{
//					ControlPlaneNodePoolConfig: &gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigArgs{
//						NodePoolConfig: &gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{
//							Labels:          nil,
//							OperatingSystem: pulumi.String("LINUX"),
//							NodeConfigs: gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray{
//								&gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{
//									Labels: nil,
//									NodeIp: pulumi.String("10.200.0.2"),
//								},
//								&gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{
//									Labels: nil,
//									NodeIp: pulumi.String("10.200.0.3"),
//								},
//								&gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{
//									Labels: nil,
//									NodeIp: pulumi.String("10.200.0.4"),
//								},
//							},
//							Taints: gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray{
//								&gkeonprem.BareMetalAdminClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs{
//									Key:    pulumi.String("test-key"),
//									Value:  pulumi.String("test-value"),
//									Effect: pulumi.String("NO_EXECUTE"),
//								},
//							},
//						},
//					},
//					ApiServerArgs: gkeonprem.BareMetalAdminClusterControlPlaneApiServerArgArray{
//						&gkeonprem.BareMetalAdminClusterControlPlaneApiServerArgArgs{
//							Argument: pulumi.String("test argument"),
//							Value:    pulumi.String("test value"),
//						},
//					},
//				},
//				LoadBalancer: &gkeonprem.BareMetalAdminClusterLoadBalancerArgs{
//					PortConfig: &gkeonprem.BareMetalAdminClusterLoadBalancerPortConfigArgs{
//						ControlPlaneLoadBalancerPort: pulumi.Int(443),
//					},
//					VipConfig: &gkeonprem.BareMetalAdminClusterLoadBalancerVipConfigArgs{
//						ControlPlaneVip: pulumi.String("10.200.0.5"),
//					},
//					ManualLbConfig: &gkeonprem.BareMetalAdminClusterLoadBalancerManualLbConfigArgs{
//						Enabled: pulumi.Bool(true),
//					},
//				},
//				Storage: &gkeonprem.BareMetalAdminClusterStorageArgs{
//					LvpShareConfig: &gkeonprem.BareMetalAdminClusterStorageLvpShareConfigArgs{
//						LvpConfig: &gkeonprem.BareMetalAdminClusterStorageLvpShareConfigLvpConfigArgs{
//							Path:         pulumi.String("/mnt/localpv-share"),
//							StorageClass: pulumi.String("local-shared"),
//						},
//						SharedPathPvCount: pulumi.Int(5),
//					},
//					LvpNodeMountsConfig: &gkeonprem.BareMetalAdminClusterStorageLvpNodeMountsConfigArgs{
//						Path:         pulumi.String("/mnt/localpv-disk"),
//						StorageClass: pulumi.String("local-disks"),
//					},
//				},
//				NodeAccessConfig: &gkeonprem.BareMetalAdminClusterNodeAccessConfigArgs{
//					LoginUser: pulumi.String("root"),
//				},
//				SecurityConfig: &gkeonprem.BareMetalAdminClusterSecurityConfigArgs{
//					Authorization: &gkeonprem.BareMetalAdminClusterSecurityConfigAuthorizationArgs{
//						AdminUsers: gkeonprem.BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArray{
//							&gkeonprem.BareMetalAdminClusterSecurityConfigAuthorizationAdminUserArgs{
//								Username: pulumi.String("admin@hashicorptest.com"),
//							},
//						},
//					},
//				},
//				MaintenanceConfig: &gkeonprem.BareMetalAdminClusterMaintenanceConfigArgs{
//					MaintenanceAddressCidrBlocks: pulumi.StringArray{
//						pulumi.String("10.0.0.1/32"),
//						pulumi.String("10.0.0.2/32"),
//					},
//				},
//				ClusterOperations: &gkeonprem.BareMetalAdminClusterClusterOperationsArgs{
//					EnableApplicationLogs: pulumi.Bool(true),
//				},
//				Proxy: &gkeonprem.BareMetalAdminClusterProxyArgs{
//					Uri: pulumi.String("test proxy uri"),
//					NoProxies: pulumi.StringArray{
//						pulumi.String("127.0.0.1"),
//					},
//				},
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # BareMetalAdminCluster can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:gkeonprem/bareMetalAdminCluster:BareMetalAdminCluster default projects/{{project}}/locations/{{location}}/bareMetalAdminClusters/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkeonprem/bareMetalAdminCluster:BareMetalAdminCluster default {{project}}/{{location}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkeonprem/bareMetalAdminCluster:BareMetalAdminCluster default {{location}}/{{name}}
//
// ```
type BareMetalAdminCluster struct {
	pulumi.CustomResourceState

	// Annotations on the Bare Metal Admin Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// A human readable description of this Bare Metal Admin Cluster.
	BareMetalVersion pulumi.StringPtrOutput `pulumi:"bareMetalVersion"`
	// Specifies the Admin Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations BareMetalAdminClusterClusterOperationsPtrOutput `pulumi:"clusterOperations"`
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane BareMetalAdminClusterControlPlanePtrOutput `pulumi:"controlPlane"`
	// The time the cluster was created, in RFC3339 text format.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The time the cluster was deleted, in RFC3339 text format.
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// A human readable description of this Bare Metal Admin Cluster.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
	// Terraform, other clients and services.
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	// The IP address name of Bare Metal Admin Cluster's API server.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	// Allows clients to perform consistent read-modify-writes
	// through optimistic concurrency control.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Fleet related configuration.
	// Fleets are a Google Cloud concept for logically organizing clusters,
	// letting you use and manage multi-cluster capabilities and apply
	// consistent policies across your systems.
	// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
	// more details on Anthos multi-cluster capabilities using Fleets.
	// Structure is documented below.
	Fleets BareMetalAdminClusterFleetArrayOutput `pulumi:"fleets"`
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer BareMetalAdminClusterLoadBalancerPtrOutput `pulumi:"loadBalancer"`
	// The object name of the Bare Metal Admin Cluster custom resource on the
	// associated admin cluster. This field is used to support conflicting
	// names when enrolling existing clusters to the API. When used as a part of
	// cluster enrollment, this field will differ from the ID in the resource
	// name. For new clusters, this field will match the user provided cluster ID
	// and be visible in the last component of the resource name. It is not
	// modifiable.
	// All users should use this name to access their cluster using gkectl or
	// kubectl and should expect to see the local name when viewing admin
	// cluster controller logs.
	LocalName pulumi.StringOutput `pulumi:"localName"`
	// The location of the resource.
	//
	// ***
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig BareMetalAdminClusterMaintenanceConfigPtrOutput `pulumi:"maintenanceConfig"`
	// The bare metal admin cluster name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Network configuration.
	// Structure is documented below.
	NetworkConfig BareMetalAdminClusterNetworkConfigPtrOutput `pulumi:"networkConfig"`
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig BareMetalAdminClusterNodeAccessConfigPtrOutput `pulumi:"nodeAccessConfig"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig BareMetalAdminClusterNodeConfigPtrOutput `pulumi:"nodeConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy BareMetalAdminClusterProxyPtrOutput `pulumi:"proxy"`
	// If set, there are currently changes in flight to the Bare Metal Admin Cluster.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig BareMetalAdminClusterSecurityConfigPtrOutput `pulumi:"securityConfig"`
	// (Output)
	// The lifecycle state of the condition.
	State pulumi.StringOutput `pulumi:"state"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses BareMetalAdminClusterStatusArrayOutput `pulumi:"statuses"`
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage BareMetalAdminClusterStoragePtrOutput `pulumi:"storage"`
	// The unique identifier of the Bare Metal Admin Cluster.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Specifies the security related settings for the Bare Metal Admin Cluster.
	// Structure is documented below.
	ValidationChecks BareMetalAdminClusterValidationCheckArrayOutput `pulumi:"validationChecks"`
}

// NewBareMetalAdminCluster registers a new resource with the given unique name, arguments, and options.
func NewBareMetalAdminCluster(ctx *pulumi.Context,
	name string, args *BareMetalAdminClusterArgs, opts ...pulumi.ResourceOption) (*BareMetalAdminCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BareMetalAdminCluster
	err := ctx.RegisterResource("gcp:gkeonprem/bareMetalAdminCluster:BareMetalAdminCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBareMetalAdminCluster gets an existing BareMetalAdminCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBareMetalAdminCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BareMetalAdminClusterState, opts ...pulumi.ResourceOption) (*BareMetalAdminCluster, error) {
	var resource BareMetalAdminCluster
	err := ctx.ReadResource("gcp:gkeonprem/bareMetalAdminCluster:BareMetalAdminCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BareMetalAdminCluster resources.
type bareMetalAdminClusterState struct {
	// Annotations on the Bare Metal Admin Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// A human readable description of this Bare Metal Admin Cluster.
	BareMetalVersion *string `pulumi:"bareMetalVersion"`
	// Specifies the Admin Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations *BareMetalAdminClusterClusterOperations `pulumi:"clusterOperations"`
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane *BareMetalAdminClusterControlPlane `pulumi:"controlPlane"`
	// The time the cluster was created, in RFC3339 text format.
	CreateTime *string `pulumi:"createTime"`
	// The time the cluster was deleted, in RFC3339 text format.
	DeleteTime *string `pulumi:"deleteTime"`
	// A human readable description of this Bare Metal Admin Cluster.
	Description *string `pulumi:"description"`
	// All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
	// Terraform, other clients and services.
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	// The IP address name of Bare Metal Admin Cluster's API server.
	Endpoint *string `pulumi:"endpoint"`
	// This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	// Allows clients to perform consistent read-modify-writes
	// through optimistic concurrency control.
	Etag *string `pulumi:"etag"`
	// Fleet related configuration.
	// Fleets are a Google Cloud concept for logically organizing clusters,
	// letting you use and manage multi-cluster capabilities and apply
	// consistent policies across your systems.
	// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
	// more details on Anthos multi-cluster capabilities using Fleets.
	// Structure is documented below.
	Fleets []BareMetalAdminClusterFleet `pulumi:"fleets"`
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer *BareMetalAdminClusterLoadBalancer `pulumi:"loadBalancer"`
	// The object name of the Bare Metal Admin Cluster custom resource on the
	// associated admin cluster. This field is used to support conflicting
	// names when enrolling existing clusters to the API. When used as a part of
	// cluster enrollment, this field will differ from the ID in the resource
	// name. For new clusters, this field will match the user provided cluster ID
	// and be visible in the last component of the resource name. It is not
	// modifiable.
	// All users should use this name to access their cluster using gkectl or
	// kubectl and should expect to see the local name when viewing admin
	// cluster controller logs.
	LocalName *string `pulumi:"localName"`
	// The location of the resource.
	//
	// ***
	Location *string `pulumi:"location"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig *BareMetalAdminClusterMaintenanceConfig `pulumi:"maintenanceConfig"`
	// The bare metal admin cluster name.
	Name *string `pulumi:"name"`
	// Network configuration.
	// Structure is documented below.
	NetworkConfig *BareMetalAdminClusterNetworkConfig `pulumi:"networkConfig"`
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig *BareMetalAdminClusterNodeAccessConfig `pulumi:"nodeAccessConfig"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig *BareMetalAdminClusterNodeConfig `pulumi:"nodeConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy *BareMetalAdminClusterProxy `pulumi:"proxy"`
	// If set, there are currently changes in flight to the Bare Metal Admin Cluster.
	Reconciling *bool `pulumi:"reconciling"`
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig *BareMetalAdminClusterSecurityConfig `pulumi:"securityConfig"`
	// (Output)
	// The lifecycle state of the condition.
	State *string `pulumi:"state"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses []BareMetalAdminClusterStatus `pulumi:"statuses"`
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage *BareMetalAdminClusterStorage `pulumi:"storage"`
	// The unique identifier of the Bare Metal Admin Cluster.
	Uid *string `pulumi:"uid"`
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime *string `pulumi:"updateTime"`
	// Specifies the security related settings for the Bare Metal Admin Cluster.
	// Structure is documented below.
	ValidationChecks []BareMetalAdminClusterValidationCheck `pulumi:"validationChecks"`
}

type BareMetalAdminClusterState struct {
	// Annotations on the Bare Metal Admin Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// A human readable description of this Bare Metal Admin Cluster.
	BareMetalVersion pulumi.StringPtrInput
	// Specifies the Admin Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations BareMetalAdminClusterClusterOperationsPtrInput
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane BareMetalAdminClusterControlPlanePtrInput
	// The time the cluster was created, in RFC3339 text format.
	CreateTime pulumi.StringPtrInput
	// The time the cluster was deleted, in RFC3339 text format.
	DeleteTime pulumi.StringPtrInput
	// A human readable description of this Bare Metal Admin Cluster.
	Description pulumi.StringPtrInput
	// All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
	// Terraform, other clients and services.
	EffectiveAnnotations pulumi.StringMapInput
	// The IP address name of Bare Metal Admin Cluster's API server.
	Endpoint pulumi.StringPtrInput
	// This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	// Allows clients to perform consistent read-modify-writes
	// through optimistic concurrency control.
	Etag pulumi.StringPtrInput
	// Fleet related configuration.
	// Fleets are a Google Cloud concept for logically organizing clusters,
	// letting you use and manage multi-cluster capabilities and apply
	// consistent policies across your systems.
	// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
	// more details on Anthos multi-cluster capabilities using Fleets.
	// Structure is documented below.
	Fleets BareMetalAdminClusterFleetArrayInput
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer BareMetalAdminClusterLoadBalancerPtrInput
	// The object name of the Bare Metal Admin Cluster custom resource on the
	// associated admin cluster. This field is used to support conflicting
	// names when enrolling existing clusters to the API. When used as a part of
	// cluster enrollment, this field will differ from the ID in the resource
	// name. For new clusters, this field will match the user provided cluster ID
	// and be visible in the last component of the resource name. It is not
	// modifiable.
	// All users should use this name to access their cluster using gkectl or
	// kubectl and should expect to see the local name when viewing admin
	// cluster controller logs.
	LocalName pulumi.StringPtrInput
	// The location of the resource.
	//
	// ***
	Location pulumi.StringPtrInput
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig BareMetalAdminClusterMaintenanceConfigPtrInput
	// The bare metal admin cluster name.
	Name pulumi.StringPtrInput
	// Network configuration.
	// Structure is documented below.
	NetworkConfig BareMetalAdminClusterNetworkConfigPtrInput
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig BareMetalAdminClusterNodeAccessConfigPtrInput
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig BareMetalAdminClusterNodeConfigPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy BareMetalAdminClusterProxyPtrInput
	// If set, there are currently changes in flight to the Bare Metal Admin Cluster.
	Reconciling pulumi.BoolPtrInput
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig BareMetalAdminClusterSecurityConfigPtrInput
	// (Output)
	// The lifecycle state of the condition.
	State pulumi.StringPtrInput
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses BareMetalAdminClusterStatusArrayInput
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage BareMetalAdminClusterStoragePtrInput
	// The unique identifier of the Bare Metal Admin Cluster.
	Uid pulumi.StringPtrInput
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringPtrInput
	// Specifies the security related settings for the Bare Metal Admin Cluster.
	// Structure is documented below.
	ValidationChecks BareMetalAdminClusterValidationCheckArrayInput
}

func (BareMetalAdminClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*bareMetalAdminClusterState)(nil)).Elem()
}

type bareMetalAdminClusterArgs struct {
	// Annotations on the Bare Metal Admin Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// A human readable description of this Bare Metal Admin Cluster.
	BareMetalVersion *string `pulumi:"bareMetalVersion"`
	// Specifies the Admin Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations *BareMetalAdminClusterClusterOperations `pulumi:"clusterOperations"`
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane *BareMetalAdminClusterControlPlane `pulumi:"controlPlane"`
	// A human readable description of this Bare Metal Admin Cluster.
	Description *string `pulumi:"description"`
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer *BareMetalAdminClusterLoadBalancer `pulumi:"loadBalancer"`
	// The location of the resource.
	//
	// ***
	Location string `pulumi:"location"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig *BareMetalAdminClusterMaintenanceConfig `pulumi:"maintenanceConfig"`
	// The bare metal admin cluster name.
	Name *string `pulumi:"name"`
	// Network configuration.
	// Structure is documented below.
	NetworkConfig *BareMetalAdminClusterNetworkConfig `pulumi:"networkConfig"`
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig *BareMetalAdminClusterNodeAccessConfig `pulumi:"nodeAccessConfig"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig *BareMetalAdminClusterNodeConfig `pulumi:"nodeConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy *BareMetalAdminClusterProxy `pulumi:"proxy"`
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig *BareMetalAdminClusterSecurityConfig `pulumi:"securityConfig"`
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage *BareMetalAdminClusterStorage `pulumi:"storage"`
}

// The set of arguments for constructing a BareMetalAdminCluster resource.
type BareMetalAdminClusterArgs struct {
	// Annotations on the Bare Metal Admin Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// A human readable description of this Bare Metal Admin Cluster.
	BareMetalVersion pulumi.StringPtrInput
	// Specifies the Admin Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations BareMetalAdminClusterClusterOperationsPtrInput
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane BareMetalAdminClusterControlPlanePtrInput
	// A human readable description of this Bare Metal Admin Cluster.
	Description pulumi.StringPtrInput
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer BareMetalAdminClusterLoadBalancerPtrInput
	// The location of the resource.
	//
	// ***
	Location pulumi.StringInput
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig BareMetalAdminClusterMaintenanceConfigPtrInput
	// The bare metal admin cluster name.
	Name pulumi.StringPtrInput
	// Network configuration.
	// Structure is documented below.
	NetworkConfig BareMetalAdminClusterNetworkConfigPtrInput
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig BareMetalAdminClusterNodeAccessConfigPtrInput
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig BareMetalAdminClusterNodeConfigPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy BareMetalAdminClusterProxyPtrInput
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig BareMetalAdminClusterSecurityConfigPtrInput
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage BareMetalAdminClusterStoragePtrInput
}

func (BareMetalAdminClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bareMetalAdminClusterArgs)(nil)).Elem()
}

type BareMetalAdminClusterInput interface {
	pulumi.Input

	ToBareMetalAdminClusterOutput() BareMetalAdminClusterOutput
	ToBareMetalAdminClusterOutputWithContext(ctx context.Context) BareMetalAdminClusterOutput
}

func (*BareMetalAdminCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminCluster)(nil)).Elem()
}

func (i *BareMetalAdminCluster) ToBareMetalAdminClusterOutput() BareMetalAdminClusterOutput {
	return i.ToBareMetalAdminClusterOutputWithContext(context.Background())
}

func (i *BareMetalAdminCluster) ToBareMetalAdminClusterOutputWithContext(ctx context.Context) BareMetalAdminClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterOutput)
}

// BareMetalAdminClusterArrayInput is an input type that accepts BareMetalAdminClusterArray and BareMetalAdminClusterArrayOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterArrayInput` via:
//
//	BareMetalAdminClusterArray{ BareMetalAdminClusterArgs{...} }
type BareMetalAdminClusterArrayInput interface {
	pulumi.Input

	ToBareMetalAdminClusterArrayOutput() BareMetalAdminClusterArrayOutput
	ToBareMetalAdminClusterArrayOutputWithContext(context.Context) BareMetalAdminClusterArrayOutput
}

type BareMetalAdminClusterArray []BareMetalAdminClusterInput

func (BareMetalAdminClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BareMetalAdminCluster)(nil)).Elem()
}

func (i BareMetalAdminClusterArray) ToBareMetalAdminClusterArrayOutput() BareMetalAdminClusterArrayOutput {
	return i.ToBareMetalAdminClusterArrayOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterArray) ToBareMetalAdminClusterArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterArrayOutput)
}

// BareMetalAdminClusterMapInput is an input type that accepts BareMetalAdminClusterMap and BareMetalAdminClusterMapOutput values.
// You can construct a concrete instance of `BareMetalAdminClusterMapInput` via:
//
//	BareMetalAdminClusterMap{ "key": BareMetalAdminClusterArgs{...} }
type BareMetalAdminClusterMapInput interface {
	pulumi.Input

	ToBareMetalAdminClusterMapOutput() BareMetalAdminClusterMapOutput
	ToBareMetalAdminClusterMapOutputWithContext(context.Context) BareMetalAdminClusterMapOutput
}

type BareMetalAdminClusterMap map[string]BareMetalAdminClusterInput

func (BareMetalAdminClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BareMetalAdminCluster)(nil)).Elem()
}

func (i BareMetalAdminClusterMap) ToBareMetalAdminClusterMapOutput() BareMetalAdminClusterMapOutput {
	return i.ToBareMetalAdminClusterMapOutputWithContext(context.Background())
}

func (i BareMetalAdminClusterMap) ToBareMetalAdminClusterMapOutputWithContext(ctx context.Context) BareMetalAdminClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterMapOutput)
}

type BareMetalAdminClusterOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminCluster)(nil)).Elem()
}

func (o BareMetalAdminClusterOutput) ToBareMetalAdminClusterOutput() BareMetalAdminClusterOutput {
	return o
}

func (o BareMetalAdminClusterOutput) ToBareMetalAdminClusterOutputWithContext(ctx context.Context) BareMetalAdminClusterOutput {
	return o
}

// Annotations on the Bare Metal Admin Cluster.
// This field has the same restrictions as Kubernetes annotations.
// The total size of all keys and values combined is limited to 256k.
// Key can have 2 segments: prefix (optional) and name (required),
// separated by a slash (/).
// Prefix must be a DNS subdomain.
// Name must be 63 characters or less, begin and end with alphanumerics,
// with dashes (-), underscores (_), dots (.), and alphanumerics between.
//
// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
func (o BareMetalAdminClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// A human readable description of this Bare Metal Admin Cluster.
func (o BareMetalAdminClusterOutput) BareMetalVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringPtrOutput { return v.BareMetalVersion }).(pulumi.StringPtrOutput)
}

// Specifies the Admin Cluster's observability infrastructure.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) ClusterOperations() BareMetalAdminClusterClusterOperationsPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterClusterOperationsPtrOutput {
		return v.ClusterOperations
	}).(BareMetalAdminClusterClusterOperationsPtrOutput)
}

// Specifies the control plane configuration.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) ControlPlane() BareMetalAdminClusterControlPlanePtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterControlPlanePtrOutput { return v.ControlPlane }).(BareMetalAdminClusterControlPlanePtrOutput)
}

// The time the cluster was created, in RFC3339 text format.
func (o BareMetalAdminClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The time the cluster was deleted, in RFC3339 text format.
func (o BareMetalAdminClusterOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// A human readable description of this Bare Metal Admin Cluster.
func (o BareMetalAdminClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
// Terraform, other clients and services.
func (o BareMetalAdminClusterOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

// The IP address name of Bare Metal Admin Cluster's API server.
func (o BareMetalAdminClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// This checksum is computed by the server based on the value of other
// fields, and may be sent on update and delete requests to ensure the
// client has an up-to-date value before proceeding.
// Allows clients to perform consistent read-modify-writes
// through optimistic concurrency control.
func (o BareMetalAdminClusterOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Fleet related configuration.
// Fleets are a Google Cloud concept for logically organizing clusters,
// letting you use and manage multi-cluster capabilities and apply
// consistent policies across your systems.
// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
// more details on Anthos multi-cluster capabilities using Fleets.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) Fleets() BareMetalAdminClusterFleetArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterFleetArrayOutput { return v.Fleets }).(BareMetalAdminClusterFleetArrayOutput)
}

// Specifies the load balancer configuration.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) LoadBalancer() BareMetalAdminClusterLoadBalancerPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterLoadBalancerPtrOutput { return v.LoadBalancer }).(BareMetalAdminClusterLoadBalancerPtrOutput)
}

// The object name of the Bare Metal Admin Cluster custom resource on the
// associated admin cluster. This field is used to support conflicting
// names when enrolling existing clusters to the API. When used as a part of
// cluster enrollment, this field will differ from the ID in the resource
// name. For new clusters, this field will match the user provided cluster ID
// and be visible in the last component of the resource name. It is not
// modifiable.
// All users should use this name to access their cluster using gkectl or
// kubectl and should expect to see the local name when viewing admin
// cluster controller logs.
func (o BareMetalAdminClusterOutput) LocalName() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.LocalName }).(pulumi.StringOutput)
}

// The location of the resource.
//
// ***
func (o BareMetalAdminClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the workload node configurations.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) MaintenanceConfig() BareMetalAdminClusterMaintenanceConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterMaintenanceConfigPtrOutput {
		return v.MaintenanceConfig
	}).(BareMetalAdminClusterMaintenanceConfigPtrOutput)
}

// The bare metal admin cluster name.
func (o BareMetalAdminClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network configuration.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) NetworkConfig() BareMetalAdminClusterNetworkConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterNetworkConfigPtrOutput { return v.NetworkConfig }).(BareMetalAdminClusterNetworkConfigPtrOutput)
}

// Specifies the node access related settings for the bare metal user cluster.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) NodeAccessConfig() BareMetalAdminClusterNodeAccessConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterNodeAccessConfigPtrOutput {
		return v.NodeAccessConfig
	}).(BareMetalAdminClusterNodeAccessConfigPtrOutput)
}

// Specifies the workload node configurations.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) NodeConfig() BareMetalAdminClusterNodeConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterNodeConfigPtrOutput { return v.NodeConfig }).(BareMetalAdminClusterNodeConfigPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o BareMetalAdminClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the cluster proxy configuration.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) Proxy() BareMetalAdminClusterProxyPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterProxyPtrOutput { return v.Proxy }).(BareMetalAdminClusterProxyPtrOutput)
}

// If set, there are currently changes in flight to the Bare Metal Admin Cluster.
func (o BareMetalAdminClusterOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Specifies the security related settings for the Bare Metal User Cluster.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) SecurityConfig() BareMetalAdminClusterSecurityConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterSecurityConfigPtrOutput { return v.SecurityConfig }).(BareMetalAdminClusterSecurityConfigPtrOutput)
}

// (Output)
// The lifecycle state of the condition.
func (o BareMetalAdminClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Output)
// Specifies the detailed validation check status
// Structure is documented below.
func (o BareMetalAdminClusterOutput) Statuses() BareMetalAdminClusterStatusArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterStatusArrayOutput { return v.Statuses }).(BareMetalAdminClusterStatusArrayOutput)
}

// Specifies the cluster storage configuration.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) Storage() BareMetalAdminClusterStoragePtrOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterStoragePtrOutput { return v.Storage }).(BareMetalAdminClusterStoragePtrOutput)
}

// The unique identifier of the Bare Metal Admin Cluster.
func (o BareMetalAdminClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time the cluster was last updated, in RFC3339 text format.
func (o BareMetalAdminClusterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Specifies the security related settings for the Bare Metal Admin Cluster.
// Structure is documented below.
func (o BareMetalAdminClusterOutput) ValidationChecks() BareMetalAdminClusterValidationCheckArrayOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterValidationCheckArrayOutput {
		return v.ValidationChecks
	}).(BareMetalAdminClusterValidationCheckArrayOutput)
}

type BareMetalAdminClusterArrayOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BareMetalAdminCluster)(nil)).Elem()
}

func (o BareMetalAdminClusterArrayOutput) ToBareMetalAdminClusterArrayOutput() BareMetalAdminClusterArrayOutput {
	return o
}

func (o BareMetalAdminClusterArrayOutput) ToBareMetalAdminClusterArrayOutputWithContext(ctx context.Context) BareMetalAdminClusterArrayOutput {
	return o
}

func (o BareMetalAdminClusterArrayOutput) Index(i pulumi.IntInput) BareMetalAdminClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BareMetalAdminCluster {
		return vs[0].([]*BareMetalAdminCluster)[vs[1].(int)]
	}).(BareMetalAdminClusterOutput)
}

type BareMetalAdminClusterMapOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BareMetalAdminCluster)(nil)).Elem()
}

func (o BareMetalAdminClusterMapOutput) ToBareMetalAdminClusterMapOutput() BareMetalAdminClusterMapOutput {
	return o
}

func (o BareMetalAdminClusterMapOutput) ToBareMetalAdminClusterMapOutputWithContext(ctx context.Context) BareMetalAdminClusterMapOutput {
	return o
}

func (o BareMetalAdminClusterMapOutput) MapIndex(k pulumi.StringInput) BareMetalAdminClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BareMetalAdminCluster {
		return vs[0].(map[string]*BareMetalAdminCluster)[vs[1].(string)]
	}).(BareMetalAdminClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterInput)(nil)).Elem(), &BareMetalAdminCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterArrayInput)(nil)).Elem(), BareMetalAdminClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterMapInput)(nil)).Elem(), BareMetalAdminClusterMap{})
	pulumi.RegisterOutputType(BareMetalAdminClusterOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterArrayOutput{})
	pulumi.RegisterOutputType(BareMetalAdminClusterMapOutput{})
}
