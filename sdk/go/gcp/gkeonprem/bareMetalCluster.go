// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gkeonprem

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### Gkeonprem Bare Metal Cluster Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkeonprem"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkeonprem.NewBareMetalCluster(ctx, "cluster-basic", &gkeonprem.BareMetalClusterArgs{
//				Location:               pulumi.String("us-west1"),
//				AdminClusterMembership: pulumi.String("projects/870316890899/locations/global/memberships/gkeonprem-terraform-test"),
//				BareMetalVersion:       pulumi.String("1.12.3"),
//				NetworkConfig: &gkeonprem.BareMetalClusterNetworkConfigArgs{
//					IslandModeCidr: &gkeonprem.BareMetalClusterNetworkConfigIslandModeCidrArgs{
//						ServiceAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("172.26.0.0/16"),
//						},
//						PodAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("10.240.0.0/13"),
//						},
//					},
//				},
//				ControlPlane: &gkeonprem.BareMetalClusterControlPlaneArgs{
//					ControlPlaneNodePoolConfig: &gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs{
//						NodePoolConfig: &gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{
//							Labels:          nil,
//							OperatingSystem: pulumi.String("LINUX"),
//							NodeConfigs: gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray{
//								&gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{
//									Labels: nil,
//									NodeIp: pulumi.String("10.200.0.9"),
//								},
//							},
//						},
//					},
//				},
//				LoadBalancer: &gkeonprem.BareMetalClusterLoadBalancerArgs{
//					PortConfig: &gkeonprem.BareMetalClusterLoadBalancerPortConfigArgs{
//						ControlPlaneLoadBalancerPort: pulumi.Int(443),
//					},
//					VipConfig: &gkeonprem.BareMetalClusterLoadBalancerVipConfigArgs{
//						ControlPlaneVip: pulumi.String("10.200.0.13"),
//						IngressVip:      pulumi.String("10.200.0.14"),
//					},
//					MetalLbConfig: &gkeonprem.BareMetalClusterLoadBalancerMetalLbConfigArgs{
//						AddressPools: gkeonprem.BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArray{
//							&gkeonprem.BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs{
//								Pool: pulumi.String("pool1"),
//								Addresses: pulumi.StringArray{
//									pulumi.String("10.200.0.14/32"),
//									pulumi.String("10.200.0.15/32"),
//									pulumi.String("10.200.0.16/32"),
//									pulumi.String("10.200.0.17/32"),
//									pulumi.String("10.200.0.18/32"),
//									pulumi.String("fd00:1::f/128"),
//									pulumi.String("fd00:1::10/128"),
//									pulumi.String("fd00:1::11/128"),
//									pulumi.String("fd00:1::12/128"),
//								},
//								AvoidBuggyIps: pulumi.Bool(true),
//								ManualAssign:  pulumi.Bool(true),
//							},
//						},
//					},
//				},
//				Storage: &gkeonprem.BareMetalClusterStorageArgs{
//					LvpShareConfig: &gkeonprem.BareMetalClusterStorageLvpShareConfigArgs{
//						LvpConfig: &gkeonprem.BareMetalClusterStorageLvpShareConfigLvpConfigArgs{
//							Path:         pulumi.String("/mnt/localpv-share"),
//							StorageClass: pulumi.String("local-shared"),
//						},
//						SharedPathPvCount: pulumi.Int(5),
//					},
//					LvpNodeMountsConfig: &gkeonprem.BareMetalClusterStorageLvpNodeMountsConfigArgs{
//						Path:         pulumi.String("/mnt/localpv-disk"),
//						StorageClass: pulumi.String("local-disks"),
//					},
//				},
//				SecurityConfig: &gkeonprem.BareMetalClusterSecurityConfigArgs{
//					Authorization: &gkeonprem.BareMetalClusterSecurityConfigAuthorizationArgs{
//						AdminUsers: gkeonprem.BareMetalClusterSecurityConfigAuthorizationAdminUserArray{
//							&gkeonprem.BareMetalClusterSecurityConfigAuthorizationAdminUserArgs{
//								Username: pulumi.String("admin@hashicorptest.com"),
//							},
//						},
//					},
//				},
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Gkeonprem Bare Metal Cluster Manuallb
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkeonprem"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkeonprem.NewBareMetalCluster(ctx, "cluster-manuallb", &gkeonprem.BareMetalClusterArgs{
//				Location:               pulumi.String("us-west1"),
//				AdminClusterMembership: pulumi.String("projects/870316890899/locations/global/memberships/gkeonprem-terraform-test"),
//				BareMetalVersion:       pulumi.String("1.12.3"),
//				NetworkConfig: &gkeonprem.BareMetalClusterNetworkConfigArgs{
//					IslandModeCidr: &gkeonprem.BareMetalClusterNetworkConfigIslandModeCidrArgs{
//						ServiceAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("172.26.0.0/16"),
//						},
//						PodAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("10.240.0.0/13"),
//						},
//					},
//				},
//				ControlPlane: &gkeonprem.BareMetalClusterControlPlaneArgs{
//					ControlPlaneNodePoolConfig: &gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs{
//						NodePoolConfig: &gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{
//							Labels:          nil,
//							OperatingSystem: pulumi.String("LINUX"),
//							NodeConfigs: gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray{
//								&gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{
//									Labels: nil,
//									NodeIp: pulumi.String("10.200.0.9"),
//								},
//							},
//						},
//					},
//				},
//				LoadBalancer: &gkeonprem.BareMetalClusterLoadBalancerArgs{
//					PortConfig: &gkeonprem.BareMetalClusterLoadBalancerPortConfigArgs{
//						ControlPlaneLoadBalancerPort: pulumi.Int(443),
//					},
//					VipConfig: &gkeonprem.BareMetalClusterLoadBalancerVipConfigArgs{
//						ControlPlaneVip: pulumi.String("10.200.0.13"),
//						IngressVip:      pulumi.String("10.200.0.14"),
//					},
//					ManualLbConfig: &gkeonprem.BareMetalClusterLoadBalancerManualLbConfigArgs{
//						Enabled: pulumi.Bool(true),
//					},
//				},
//				Storage: &gkeonprem.BareMetalClusterStorageArgs{
//					LvpShareConfig: &gkeonprem.BareMetalClusterStorageLvpShareConfigArgs{
//						LvpConfig: &gkeonprem.BareMetalClusterStorageLvpShareConfigLvpConfigArgs{
//							Path:         pulumi.String("/mnt/localpv-share"),
//							StorageClass: pulumi.String("local-shared"),
//						},
//						SharedPathPvCount: pulumi.Int(5),
//					},
//					LvpNodeMountsConfig: &gkeonprem.BareMetalClusterStorageLvpNodeMountsConfigArgs{
//						Path:         pulumi.String("/mnt/localpv-disk"),
//						StorageClass: pulumi.String("local-disks"),
//					},
//				},
//				SecurityConfig: &gkeonprem.BareMetalClusterSecurityConfigArgs{
//					Authorization: &gkeonprem.BareMetalClusterSecurityConfigAuthorizationArgs{
//						AdminUsers: gkeonprem.BareMetalClusterSecurityConfigAuthorizationAdminUserArray{
//							&gkeonprem.BareMetalClusterSecurityConfigAuthorizationAdminUserArgs{
//								Username: pulumi.String("admin@hashicorptest.com"),
//							},
//						},
//					},
//				},
//				BinaryAuthorization: &gkeonprem.BareMetalClusterBinaryAuthorizationArgs{
//					EvaluationMode: pulumi.String("DISABLED"),
//				},
//				UpgradePolicy: &gkeonprem.BareMetalClusterUpgradePolicyArgs{
//					Policy: pulumi.String("SERIAL"),
//				},
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Gkeonprem Bare Metal Cluster Bgplb
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-gcp/sdk/v7/go/gcp/gkeonprem"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := gkeonprem.NewBareMetalCluster(ctx, "cluster-bgplb", &gkeonprem.BareMetalClusterArgs{
//				Location:               pulumi.String("us-west1"),
//				AdminClusterMembership: pulumi.String("projects/870316890899/locations/global/memberships/gkeonprem-terraform-test"),
//				BareMetalVersion:       pulumi.String("1.12.3"),
//				NetworkConfig: &gkeonprem.BareMetalClusterNetworkConfigArgs{
//					IslandModeCidr: &gkeonprem.BareMetalClusterNetworkConfigIslandModeCidrArgs{
//						ServiceAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("172.26.0.0/16"),
//						},
//						PodAddressCidrBlocks: pulumi.StringArray{
//							pulumi.String("10.240.0.0/13"),
//						},
//					},
//					AdvancedNetworking: pulumi.Bool(true),
//					MultipleNetworkInterfacesConfig: &gkeonprem.BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs{
//						Enabled: pulumi.Bool(true),
//					},
//					SrIovConfig: &gkeonprem.BareMetalClusterNetworkConfigSrIovConfigArgs{
//						Enabled: pulumi.Bool(true),
//					},
//				},
//				ControlPlane: &gkeonprem.BareMetalClusterControlPlaneArgs{
//					ControlPlaneNodePoolConfig: &gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs{
//						NodePoolConfig: &gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs{
//							Labels:          nil,
//							OperatingSystem: pulumi.String("LINUX"),
//							NodeConfigs: gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArray{
//								&gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs{
//									Labels: nil,
//									NodeIp: pulumi.String("10.200.0.9"),
//								},
//							},
//							Taints: gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArray{
//								&gkeonprem.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs{
//									Key:    pulumi.String("test-key"),
//									Value:  pulumi.String("test-value"),
//									Effect: pulumi.String("NO_EXECUTE"),
//								},
//							},
//						},
//					},
//					ApiServerArgs: gkeonprem.BareMetalClusterControlPlaneApiServerArgArray{
//						&gkeonprem.BareMetalClusterControlPlaneApiServerArgArgs{
//							Argument: pulumi.String("test-argument"),
//							Value:    pulumi.String("test-value"),
//						},
//					},
//				},
//				LoadBalancer: &gkeonprem.BareMetalClusterLoadBalancerArgs{
//					PortConfig: &gkeonprem.BareMetalClusterLoadBalancerPortConfigArgs{
//						ControlPlaneLoadBalancerPort: pulumi.Int(443),
//					},
//					VipConfig: &gkeonprem.BareMetalClusterLoadBalancerVipConfigArgs{
//						ControlPlaneVip: pulumi.String("10.200.0.13"),
//						IngressVip:      pulumi.String("10.200.0.14"),
//					},
//					BgpLbConfig: &gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigArgs{
//						Asn: pulumi.Int(123456),
//						BgpPeerConfigs: gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArray{
//							&gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs{
//								Asn:       pulumi.Int(123457),
//								IpAddress: pulumi.String("10.0.0.1"),
//								ControlPlaneNodes: pulumi.StringArray{
//									pulumi.String("test-node"),
//								},
//							},
//						},
//						AddressPools: gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArray{
//							&gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs{
//								Pool: pulumi.String("pool1"),
//								Addresses: pulumi.StringArray{
//									pulumi.String("10.200.0.14/32"),
//									pulumi.String("10.200.0.15/32"),
//									pulumi.String("10.200.0.16/32"),
//									pulumi.String("10.200.0.17/32"),
//									pulumi.String("10.200.0.18/32"),
//									pulumi.String("fd00:1::f/128"),
//									pulumi.String("fd00:1::10/128"),
//									pulumi.String("fd00:1::11/128"),
//									pulumi.String("fd00:1::12/128"),
//								},
//							},
//						},
//						LoadBalancerNodePoolConfig: &gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs{
//							NodePoolConfig: &gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs{
//								Labels:          nil,
//								OperatingSystem: pulumi.String("LINUX"),
//								NodeConfigs: gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArray{
//									&gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs{
//										Labels: nil,
//										NodeIp: pulumi.String("10.200.0.9"),
//									},
//								},
//								Taints: gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArray{
//									&gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs{
//										Key:    pulumi.String("test-key"),
//										Value:  pulumi.String("test-value"),
//										Effect: pulumi.String("NO_EXECUTE"),
//									},
//								},
//								KubeletConfig: &gkeonprem.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs{
//									RegistryPullQps:             pulumi.Int(10),
//									RegistryBurst:               pulumi.Int(12),
//									SerializeImagePullsDisabled: pulumi.Bool(true),
//								},
//							},
//						},
//					},
//				},
//				Storage: &gkeonprem.BareMetalClusterStorageArgs{
//					LvpShareConfig: &gkeonprem.BareMetalClusterStorageLvpShareConfigArgs{
//						LvpConfig: &gkeonprem.BareMetalClusterStorageLvpShareConfigLvpConfigArgs{
//							Path:         pulumi.String("/mnt/localpv-share"),
//							StorageClass: pulumi.String("local-shared"),
//						},
//						SharedPathPvCount: pulumi.Int(5),
//					},
//					LvpNodeMountsConfig: &gkeonprem.BareMetalClusterStorageLvpNodeMountsConfigArgs{
//						Path:         pulumi.String("/mnt/localpv-disk"),
//						StorageClass: pulumi.String("local-disks"),
//					},
//				},
//				SecurityConfig: &gkeonprem.BareMetalClusterSecurityConfigArgs{
//					Authorization: &gkeonprem.BareMetalClusterSecurityConfigAuthorizationArgs{
//						AdminUsers: gkeonprem.BareMetalClusterSecurityConfigAuthorizationAdminUserArray{
//							&gkeonprem.BareMetalClusterSecurityConfigAuthorizationAdminUserArgs{
//								Username: pulumi.String("admin@hashicorptest.com"),
//							},
//						},
//					},
//				},
//				Proxy: &gkeonprem.BareMetalClusterProxyArgs{
//					Uri: pulumi.String("http://test-domain/test"),
//					NoProxies: pulumi.StringArray{
//						pulumi.String("127.0.0.1"),
//					},
//				},
//				ClusterOperations: &gkeonprem.BareMetalClusterClusterOperationsArgs{
//					EnableApplicationLogs: pulumi.Bool(true),
//				},
//				MaintenanceConfig: &gkeonprem.BareMetalClusterMaintenanceConfigArgs{
//					MaintenanceAddressCidrBlocks: pulumi.StringArray{
//						pulumi.String("192.168.0.1/20"),
//					},
//				},
//				NodeConfig: &gkeonprem.BareMetalClusterNodeConfigArgs{
//					MaxPodsPerNode:   pulumi.Int(10),
//					ContainerRuntime: pulumi.String("CONTAINERD"),
//				},
//				NodeAccessConfig: &gkeonprem.BareMetalClusterNodeAccessConfigArgs{
//					LoginUser: pulumi.String("test@example.com"),
//				},
//				OsEnvironmentConfig: &gkeonprem.BareMetalClusterOsEnvironmentConfigArgs{
//					PackageRepoExcluded: pulumi.Bool(true),
//				},
//			}, pulumi.Provider(google_beta))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # BareMetalCluster can be imported using any of these accepted formats
//
// ```sh
//
//	$ pulumi import gcp:gkeonprem/bareMetalCluster:BareMetalCluster default projects/{{project}}/locations/{{location}}/bareMetalClusters/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkeonprem/bareMetalCluster:BareMetalCluster default {{project}}/{{location}}/{{name}}
//
// ```
//
// ```sh
//
//	$ pulumi import gcp:gkeonprem/bareMetalCluster:BareMetalCluster default {{location}}/{{name}}
//
// ```
type BareMetalCluster struct {
	pulumi.CustomResourceState

	// The Admin Cluster this Bare Metal User Cluster belongs to.
	// This is the full resource name of the Admin Cluster's hub membership.
	AdminClusterMembership pulumi.StringOutput `pulumi:"adminClusterMembership"`
	// Annotations on the Bare Metal User Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// A human readable description of this Bare Metal User Cluster.
	BareMetalVersion pulumi.StringOutput `pulumi:"bareMetalVersion"`
	// Binary Authorization related configurations.
	// Structure is documented below.
	BinaryAuthorization BareMetalClusterBinaryAuthorizationPtrOutput `pulumi:"binaryAuthorization"`
	// Specifies the User Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations BareMetalClusterClusterOperationsPtrOutput `pulumi:"clusterOperations"`
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane BareMetalClusterControlPlaneOutput `pulumi:"controlPlane"`
	// The time the cluster was created, in RFC3339 text format.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The time the cluster was deleted, in RFC3339 text format.
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// A human readable description of this Bare Metal User Cluster.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
	// Terraform, other clients and services.
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	// The IP address name of Bare Metal User Cluster's API server.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	// Allows clients to perform consistent read-modify-writes
	// through optimistic concurrency control.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Fleet related configuration.
	// Fleets are a Google Cloud concept for logically organizing clusters,
	// letting you use and manage multi-cluster capabilities and apply
	// consistent policies across your systems.
	// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
	// more details on Anthos multi-cluster capabilities using Fleets.
	// Structure is documented below.
	Fleets BareMetalClusterFleetArrayOutput `pulumi:"fleets"`
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer BareMetalClusterLoadBalancerOutput `pulumi:"loadBalancer"`
	// The object name of the Bare Metal Cluster custom resource on the
	// associated admin cluster. This field is used to support conflicting
	// names when enrolling existing clusters to the API. When used as a part of
	// cluster enrollment, this field will differ from the ID in the resource
	// name. For new clusters, this field will match the user provided cluster ID
	// and be visible in the last component of the resource name. It is not
	// modifiable.
	// All users should use this name to access their cluster using gkectl or
	// kubectl and should expect to see the local name when viewing admin
	// cluster controller logs.
	LocalName pulumi.StringOutput `pulumi:"localName"`
	// The location of the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig BareMetalClusterMaintenanceConfigPtrOutput `pulumi:"maintenanceConfig"`
	// The bare metal cluster name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Network configuration.
	// Structure is documented below.
	NetworkConfig BareMetalClusterNetworkConfigOutput `pulumi:"networkConfig"`
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig BareMetalClusterNodeAccessConfigPtrOutput `pulumi:"nodeAccessConfig"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig BareMetalClusterNodeConfigPtrOutput `pulumi:"nodeConfig"`
	// OS environment related configurations.
	// Structure is documented below.
	OsEnvironmentConfig BareMetalClusterOsEnvironmentConfigPtrOutput `pulumi:"osEnvironmentConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy BareMetalClusterProxyPtrOutput `pulumi:"proxy"`
	// If set, there are currently changes in flight to the Bare Metal User Cluster.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig BareMetalClusterSecurityConfigPtrOutput `pulumi:"securityConfig"`
	// (Output)
	// The lifecycle state of the condition.
	State pulumi.StringOutput `pulumi:"state"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses BareMetalClusterStatusArrayOutput `pulumi:"statuses"`
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage BareMetalClusterStorageOutput `pulumi:"storage"`
	// The unique identifier of the Bare Metal User Cluster.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The cluster upgrade policy.
	// Structure is documented below.
	UpgradePolicy BareMetalClusterUpgradePolicyPtrOutput `pulumi:"upgradePolicy"`
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	ValidationChecks BareMetalClusterValidationCheckArrayOutput `pulumi:"validationChecks"`
}

// NewBareMetalCluster registers a new resource with the given unique name, arguments, and options.
func NewBareMetalCluster(ctx *pulumi.Context,
	name string, args *BareMetalClusterArgs, opts ...pulumi.ResourceOption) (*BareMetalCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminClusterMembership == nil {
		return nil, errors.New("invalid value for required argument 'AdminClusterMembership'")
	}
	if args.BareMetalVersion == nil {
		return nil, errors.New("invalid value for required argument 'BareMetalVersion'")
	}
	if args.ControlPlane == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlane'")
	}
	if args.LoadBalancer == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancer'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.NetworkConfig == nil {
		return nil, errors.New("invalid value for required argument 'NetworkConfig'")
	}
	if args.Storage == nil {
		return nil, errors.New("invalid value for required argument 'Storage'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BareMetalCluster
	err := ctx.RegisterResource("gcp:gkeonprem/bareMetalCluster:BareMetalCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBareMetalCluster gets an existing BareMetalCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBareMetalCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BareMetalClusterState, opts ...pulumi.ResourceOption) (*BareMetalCluster, error) {
	var resource BareMetalCluster
	err := ctx.ReadResource("gcp:gkeonprem/bareMetalCluster:BareMetalCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BareMetalCluster resources.
type bareMetalClusterState struct {
	// The Admin Cluster this Bare Metal User Cluster belongs to.
	// This is the full resource name of the Admin Cluster's hub membership.
	AdminClusterMembership *string `pulumi:"adminClusterMembership"`
	// Annotations on the Bare Metal User Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// A human readable description of this Bare Metal User Cluster.
	BareMetalVersion *string `pulumi:"bareMetalVersion"`
	// Binary Authorization related configurations.
	// Structure is documented below.
	BinaryAuthorization *BareMetalClusterBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Specifies the User Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations *BareMetalClusterClusterOperations `pulumi:"clusterOperations"`
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane *BareMetalClusterControlPlane `pulumi:"controlPlane"`
	// The time the cluster was created, in RFC3339 text format.
	CreateTime *string `pulumi:"createTime"`
	// The time the cluster was deleted, in RFC3339 text format.
	DeleteTime *string `pulumi:"deleteTime"`
	// A human readable description of this Bare Metal User Cluster.
	Description *string `pulumi:"description"`
	// All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
	// Terraform, other clients and services.
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	// The IP address name of Bare Metal User Cluster's API server.
	Endpoint *string `pulumi:"endpoint"`
	// This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	// Allows clients to perform consistent read-modify-writes
	// through optimistic concurrency control.
	Etag *string `pulumi:"etag"`
	// Fleet related configuration.
	// Fleets are a Google Cloud concept for logically organizing clusters,
	// letting you use and manage multi-cluster capabilities and apply
	// consistent policies across your systems.
	// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
	// more details on Anthos multi-cluster capabilities using Fleets.
	// Structure is documented below.
	Fleets []BareMetalClusterFleet `pulumi:"fleets"`
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer *BareMetalClusterLoadBalancer `pulumi:"loadBalancer"`
	// The object name of the Bare Metal Cluster custom resource on the
	// associated admin cluster. This field is used to support conflicting
	// names when enrolling existing clusters to the API. When used as a part of
	// cluster enrollment, this field will differ from the ID in the resource
	// name. For new clusters, this field will match the user provided cluster ID
	// and be visible in the last component of the resource name. It is not
	// modifiable.
	// All users should use this name to access their cluster using gkectl or
	// kubectl and should expect to see the local name when viewing admin
	// cluster controller logs.
	LocalName *string `pulumi:"localName"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig *BareMetalClusterMaintenanceConfig `pulumi:"maintenanceConfig"`
	// The bare metal cluster name.
	Name *string `pulumi:"name"`
	// Network configuration.
	// Structure is documented below.
	NetworkConfig *BareMetalClusterNetworkConfig `pulumi:"networkConfig"`
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig *BareMetalClusterNodeAccessConfig `pulumi:"nodeAccessConfig"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig *BareMetalClusterNodeConfig `pulumi:"nodeConfig"`
	// OS environment related configurations.
	// Structure is documented below.
	OsEnvironmentConfig *BareMetalClusterOsEnvironmentConfig `pulumi:"osEnvironmentConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy *BareMetalClusterProxy `pulumi:"proxy"`
	// If set, there are currently changes in flight to the Bare Metal User Cluster.
	Reconciling *bool `pulumi:"reconciling"`
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig *BareMetalClusterSecurityConfig `pulumi:"securityConfig"`
	// (Output)
	// The lifecycle state of the condition.
	State *string `pulumi:"state"`
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses []BareMetalClusterStatus `pulumi:"statuses"`
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage *BareMetalClusterStorage `pulumi:"storage"`
	// The unique identifier of the Bare Metal User Cluster.
	Uid *string `pulumi:"uid"`
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime *string `pulumi:"updateTime"`
	// The cluster upgrade policy.
	// Structure is documented below.
	UpgradePolicy *BareMetalClusterUpgradePolicy `pulumi:"upgradePolicy"`
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	ValidationChecks []BareMetalClusterValidationCheck `pulumi:"validationChecks"`
}

type BareMetalClusterState struct {
	// The Admin Cluster this Bare Metal User Cluster belongs to.
	// This is the full resource name of the Admin Cluster's hub membership.
	AdminClusterMembership pulumi.StringPtrInput
	// Annotations on the Bare Metal User Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// A human readable description of this Bare Metal User Cluster.
	BareMetalVersion pulumi.StringPtrInput
	// Binary Authorization related configurations.
	// Structure is documented below.
	BinaryAuthorization BareMetalClusterBinaryAuthorizationPtrInput
	// Specifies the User Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations BareMetalClusterClusterOperationsPtrInput
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane BareMetalClusterControlPlanePtrInput
	// The time the cluster was created, in RFC3339 text format.
	CreateTime pulumi.StringPtrInput
	// The time the cluster was deleted, in RFC3339 text format.
	DeleteTime pulumi.StringPtrInput
	// A human readable description of this Bare Metal User Cluster.
	Description pulumi.StringPtrInput
	// All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
	// Terraform, other clients and services.
	EffectiveAnnotations pulumi.StringMapInput
	// The IP address name of Bare Metal User Cluster's API server.
	Endpoint pulumi.StringPtrInput
	// This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	// Allows clients to perform consistent read-modify-writes
	// through optimistic concurrency control.
	Etag pulumi.StringPtrInput
	// Fleet related configuration.
	// Fleets are a Google Cloud concept for logically organizing clusters,
	// letting you use and manage multi-cluster capabilities and apply
	// consistent policies across your systems.
	// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
	// more details on Anthos multi-cluster capabilities using Fleets.
	// Structure is documented below.
	Fleets BareMetalClusterFleetArrayInput
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer BareMetalClusterLoadBalancerPtrInput
	// The object name of the Bare Metal Cluster custom resource on the
	// associated admin cluster. This field is used to support conflicting
	// names when enrolling existing clusters to the API. When used as a part of
	// cluster enrollment, this field will differ from the ID in the resource
	// name. For new clusters, this field will match the user provided cluster ID
	// and be visible in the last component of the resource name. It is not
	// modifiable.
	// All users should use this name to access their cluster using gkectl or
	// kubectl and should expect to see the local name when viewing admin
	// cluster controller logs.
	LocalName pulumi.StringPtrInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig BareMetalClusterMaintenanceConfigPtrInput
	// The bare metal cluster name.
	Name pulumi.StringPtrInput
	// Network configuration.
	// Structure is documented below.
	NetworkConfig BareMetalClusterNetworkConfigPtrInput
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig BareMetalClusterNodeAccessConfigPtrInput
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig BareMetalClusterNodeConfigPtrInput
	// OS environment related configurations.
	// Structure is documented below.
	OsEnvironmentConfig BareMetalClusterOsEnvironmentConfigPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy BareMetalClusterProxyPtrInput
	// If set, there are currently changes in flight to the Bare Metal User Cluster.
	Reconciling pulumi.BoolPtrInput
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig BareMetalClusterSecurityConfigPtrInput
	// (Output)
	// The lifecycle state of the condition.
	State pulumi.StringPtrInput
	// (Output)
	// Specifies the detailed validation check status
	// Structure is documented below.
	Statuses BareMetalClusterStatusArrayInput
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage BareMetalClusterStoragePtrInput
	// The unique identifier of the Bare Metal User Cluster.
	Uid pulumi.StringPtrInput
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringPtrInput
	// The cluster upgrade policy.
	// Structure is documented below.
	UpgradePolicy BareMetalClusterUpgradePolicyPtrInput
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	ValidationChecks BareMetalClusterValidationCheckArrayInput
}

func (BareMetalClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*bareMetalClusterState)(nil)).Elem()
}

type bareMetalClusterArgs struct {
	// The Admin Cluster this Bare Metal User Cluster belongs to.
	// This is the full resource name of the Admin Cluster's hub membership.
	AdminClusterMembership string `pulumi:"adminClusterMembership"`
	// Annotations on the Bare Metal User Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// A human readable description of this Bare Metal User Cluster.
	BareMetalVersion string `pulumi:"bareMetalVersion"`
	// Binary Authorization related configurations.
	// Structure is documented below.
	BinaryAuthorization *BareMetalClusterBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Specifies the User Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations *BareMetalClusterClusterOperations `pulumi:"clusterOperations"`
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane BareMetalClusterControlPlane `pulumi:"controlPlane"`
	// A human readable description of this Bare Metal User Cluster.
	Description *string `pulumi:"description"`
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer BareMetalClusterLoadBalancer `pulumi:"loadBalancer"`
	// The location of the resource.
	Location string `pulumi:"location"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig *BareMetalClusterMaintenanceConfig `pulumi:"maintenanceConfig"`
	// The bare metal cluster name.
	Name *string `pulumi:"name"`
	// Network configuration.
	// Structure is documented below.
	NetworkConfig BareMetalClusterNetworkConfig `pulumi:"networkConfig"`
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig *BareMetalClusterNodeAccessConfig `pulumi:"nodeAccessConfig"`
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig *BareMetalClusterNodeConfig `pulumi:"nodeConfig"`
	// OS environment related configurations.
	// Structure is documented below.
	OsEnvironmentConfig *BareMetalClusterOsEnvironmentConfig `pulumi:"osEnvironmentConfig"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy *BareMetalClusterProxy `pulumi:"proxy"`
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig *BareMetalClusterSecurityConfig `pulumi:"securityConfig"`
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage BareMetalClusterStorage `pulumi:"storage"`
	// The cluster upgrade policy.
	// Structure is documented below.
	UpgradePolicy *BareMetalClusterUpgradePolicy `pulumi:"upgradePolicy"`
}

// The set of arguments for constructing a BareMetalCluster resource.
type BareMetalClusterArgs struct {
	// The Admin Cluster this Bare Metal User Cluster belongs to.
	// This is the full resource name of the Admin Cluster's hub membership.
	AdminClusterMembership pulumi.StringInput
	// Annotations on the Bare Metal User Cluster.
	// This field has the same restrictions as Kubernetes annotations.
	// The total size of all keys and values combined is limited to 256k.
	// Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/).
	// Prefix must be a DNS subdomain.
	// Name must be 63 characters or less, begin and end with alphanumerics,
	// with dashes (-), underscores (_), dots (.), and alphanumerics between.
	//
	// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// A human readable description of this Bare Metal User Cluster.
	BareMetalVersion pulumi.StringInput
	// Binary Authorization related configurations.
	// Structure is documented below.
	BinaryAuthorization BareMetalClusterBinaryAuthorizationPtrInput
	// Specifies the User Cluster's observability infrastructure.
	// Structure is documented below.
	ClusterOperations BareMetalClusterClusterOperationsPtrInput
	// Specifies the control plane configuration.
	// Structure is documented below.
	ControlPlane BareMetalClusterControlPlaneInput
	// A human readable description of this Bare Metal User Cluster.
	Description pulumi.StringPtrInput
	// Specifies the load balancer configuration.
	// Structure is documented below.
	LoadBalancer BareMetalClusterLoadBalancerInput
	// The location of the resource.
	Location pulumi.StringInput
	// Specifies the workload node configurations.
	// Structure is documented below.
	MaintenanceConfig BareMetalClusterMaintenanceConfigPtrInput
	// The bare metal cluster name.
	Name pulumi.StringPtrInput
	// Network configuration.
	// Structure is documented below.
	NetworkConfig BareMetalClusterNetworkConfigInput
	// Specifies the node access related settings for the bare metal user cluster.
	// Structure is documented below.
	NodeAccessConfig BareMetalClusterNodeAccessConfigPtrInput
	// Specifies the workload node configurations.
	// Structure is documented below.
	NodeConfig BareMetalClusterNodeConfigPtrInput
	// OS environment related configurations.
	// Structure is documented below.
	OsEnvironmentConfig BareMetalClusterOsEnvironmentConfigPtrInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Specifies the cluster proxy configuration.
	// Structure is documented below.
	Proxy BareMetalClusterProxyPtrInput
	// Specifies the security related settings for the Bare Metal User Cluster.
	// Structure is documented below.
	SecurityConfig BareMetalClusterSecurityConfigPtrInput
	// Specifies the cluster storage configuration.
	// Structure is documented below.
	Storage BareMetalClusterStorageInput
	// The cluster upgrade policy.
	// Structure is documented below.
	UpgradePolicy BareMetalClusterUpgradePolicyPtrInput
}

func (BareMetalClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bareMetalClusterArgs)(nil)).Elem()
}

type BareMetalClusterInput interface {
	pulumi.Input

	ToBareMetalClusterOutput() BareMetalClusterOutput
	ToBareMetalClusterOutputWithContext(ctx context.Context) BareMetalClusterOutput
}

func (*BareMetalCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalCluster)(nil)).Elem()
}

func (i *BareMetalCluster) ToBareMetalClusterOutput() BareMetalClusterOutput {
	return i.ToBareMetalClusterOutputWithContext(context.Background())
}

func (i *BareMetalCluster) ToBareMetalClusterOutputWithContext(ctx context.Context) BareMetalClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterOutput)
}

// BareMetalClusterArrayInput is an input type that accepts BareMetalClusterArray and BareMetalClusterArrayOutput values.
// You can construct a concrete instance of `BareMetalClusterArrayInput` via:
//
//	BareMetalClusterArray{ BareMetalClusterArgs{...} }
type BareMetalClusterArrayInput interface {
	pulumi.Input

	ToBareMetalClusterArrayOutput() BareMetalClusterArrayOutput
	ToBareMetalClusterArrayOutputWithContext(context.Context) BareMetalClusterArrayOutput
}

type BareMetalClusterArray []BareMetalClusterInput

func (BareMetalClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BareMetalCluster)(nil)).Elem()
}

func (i BareMetalClusterArray) ToBareMetalClusterArrayOutput() BareMetalClusterArrayOutput {
	return i.ToBareMetalClusterArrayOutputWithContext(context.Background())
}

func (i BareMetalClusterArray) ToBareMetalClusterArrayOutputWithContext(ctx context.Context) BareMetalClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterArrayOutput)
}

// BareMetalClusterMapInput is an input type that accepts BareMetalClusterMap and BareMetalClusterMapOutput values.
// You can construct a concrete instance of `BareMetalClusterMapInput` via:
//
//	BareMetalClusterMap{ "key": BareMetalClusterArgs{...} }
type BareMetalClusterMapInput interface {
	pulumi.Input

	ToBareMetalClusterMapOutput() BareMetalClusterMapOutput
	ToBareMetalClusterMapOutputWithContext(context.Context) BareMetalClusterMapOutput
}

type BareMetalClusterMap map[string]BareMetalClusterInput

func (BareMetalClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BareMetalCluster)(nil)).Elem()
}

func (i BareMetalClusterMap) ToBareMetalClusterMapOutput() BareMetalClusterMapOutput {
	return i.ToBareMetalClusterMapOutputWithContext(context.Background())
}

func (i BareMetalClusterMap) ToBareMetalClusterMapOutputWithContext(ctx context.Context) BareMetalClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalClusterMapOutput)
}

type BareMetalClusterOutput struct{ *pulumi.OutputState }

func (BareMetalClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalCluster)(nil)).Elem()
}

func (o BareMetalClusterOutput) ToBareMetalClusterOutput() BareMetalClusterOutput {
	return o
}

func (o BareMetalClusterOutput) ToBareMetalClusterOutputWithContext(ctx context.Context) BareMetalClusterOutput {
	return o
}

// The Admin Cluster this Bare Metal User Cluster belongs to.
// This is the full resource name of the Admin Cluster's hub membership.
func (o BareMetalClusterOutput) AdminClusterMembership() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.AdminClusterMembership }).(pulumi.StringOutput)
}

// Annotations on the Bare Metal User Cluster.
// This field has the same restrictions as Kubernetes annotations.
// The total size of all keys and values combined is limited to 256k.
// Key can have 2 segments: prefix (optional) and name (required),
// separated by a slash (/).
// Prefix must be a DNS subdomain.
// Name must be 63 characters or less, begin and end with alphanumerics,
// with dashes (-), underscores (_), dots (.), and alphanumerics between.
//
// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
// Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
func (o BareMetalClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// A human readable description of this Bare Metal User Cluster.
func (o BareMetalClusterOutput) BareMetalVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.BareMetalVersion }).(pulumi.StringOutput)
}

// Binary Authorization related configurations.
// Structure is documented below.
func (o BareMetalClusterOutput) BinaryAuthorization() BareMetalClusterBinaryAuthorizationPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterBinaryAuthorizationPtrOutput { return v.BinaryAuthorization }).(BareMetalClusterBinaryAuthorizationPtrOutput)
}

// Specifies the User Cluster's observability infrastructure.
// Structure is documented below.
func (o BareMetalClusterOutput) ClusterOperations() BareMetalClusterClusterOperationsPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterClusterOperationsPtrOutput { return v.ClusterOperations }).(BareMetalClusterClusterOperationsPtrOutput)
}

// Specifies the control plane configuration.
// Structure is documented below.
func (o BareMetalClusterOutput) ControlPlane() BareMetalClusterControlPlaneOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterControlPlaneOutput { return v.ControlPlane }).(BareMetalClusterControlPlaneOutput)
}

// The time the cluster was created, in RFC3339 text format.
func (o BareMetalClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The time the cluster was deleted, in RFC3339 text format.
func (o BareMetalClusterOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// A human readable description of this Bare Metal User Cluster.
func (o BareMetalClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
// Terraform, other clients and services.
func (o BareMetalClusterOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

// The IP address name of Bare Metal User Cluster's API server.
func (o BareMetalClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// This checksum is computed by the server based on the value of other
// fields, and may be sent on update and delete requests to ensure the
// client has an up-to-date value before proceeding.
// Allows clients to perform consistent read-modify-writes
// through optimistic concurrency control.
func (o BareMetalClusterOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Fleet related configuration.
// Fleets are a Google Cloud concept for logically organizing clusters,
// letting you use and manage multi-cluster capabilities and apply
// consistent policies across your systems.
// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
// more details on Anthos multi-cluster capabilities using Fleets.
// Structure is documented below.
func (o BareMetalClusterOutput) Fleets() BareMetalClusterFleetArrayOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterFleetArrayOutput { return v.Fleets }).(BareMetalClusterFleetArrayOutput)
}

// Specifies the load balancer configuration.
// Structure is documented below.
func (o BareMetalClusterOutput) LoadBalancer() BareMetalClusterLoadBalancerOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterLoadBalancerOutput { return v.LoadBalancer }).(BareMetalClusterLoadBalancerOutput)
}

// The object name of the Bare Metal Cluster custom resource on the
// associated admin cluster. This field is used to support conflicting
// names when enrolling existing clusters to the API. When used as a part of
// cluster enrollment, this field will differ from the ID in the resource
// name. For new clusters, this field will match the user provided cluster ID
// and be visible in the last component of the resource name. It is not
// modifiable.
// All users should use this name to access their cluster using gkectl or
// kubectl and should expect to see the local name when viewing admin
// cluster controller logs.
func (o BareMetalClusterOutput) LocalName() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.LocalName }).(pulumi.StringOutput)
}

// The location of the resource.
func (o BareMetalClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the workload node configurations.
// Structure is documented below.
func (o BareMetalClusterOutput) MaintenanceConfig() BareMetalClusterMaintenanceConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterMaintenanceConfigPtrOutput { return v.MaintenanceConfig }).(BareMetalClusterMaintenanceConfigPtrOutput)
}

// The bare metal cluster name.
func (o BareMetalClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network configuration.
// Structure is documented below.
func (o BareMetalClusterOutput) NetworkConfig() BareMetalClusterNetworkConfigOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterNetworkConfigOutput { return v.NetworkConfig }).(BareMetalClusterNetworkConfigOutput)
}

// Specifies the node access related settings for the bare metal user cluster.
// Structure is documented below.
func (o BareMetalClusterOutput) NodeAccessConfig() BareMetalClusterNodeAccessConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterNodeAccessConfigPtrOutput { return v.NodeAccessConfig }).(BareMetalClusterNodeAccessConfigPtrOutput)
}

// Specifies the workload node configurations.
// Structure is documented below.
func (o BareMetalClusterOutput) NodeConfig() BareMetalClusterNodeConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterNodeConfigPtrOutput { return v.NodeConfig }).(BareMetalClusterNodeConfigPtrOutput)
}

// OS environment related configurations.
// Structure is documented below.
func (o BareMetalClusterOutput) OsEnvironmentConfig() BareMetalClusterOsEnvironmentConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterOsEnvironmentConfigPtrOutput { return v.OsEnvironmentConfig }).(BareMetalClusterOsEnvironmentConfigPtrOutput)
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (o BareMetalClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the cluster proxy configuration.
// Structure is documented below.
func (o BareMetalClusterOutput) Proxy() BareMetalClusterProxyPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterProxyPtrOutput { return v.Proxy }).(BareMetalClusterProxyPtrOutput)
}

// If set, there are currently changes in flight to the Bare Metal User Cluster.
func (o BareMetalClusterOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Specifies the security related settings for the Bare Metal User Cluster.
// Structure is documented below.
func (o BareMetalClusterOutput) SecurityConfig() BareMetalClusterSecurityConfigPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterSecurityConfigPtrOutput { return v.SecurityConfig }).(BareMetalClusterSecurityConfigPtrOutput)
}

// (Output)
// The lifecycle state of the condition.
func (o BareMetalClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Output)
// Specifies the detailed validation check status
// Structure is documented below.
func (o BareMetalClusterOutput) Statuses() BareMetalClusterStatusArrayOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterStatusArrayOutput { return v.Statuses }).(BareMetalClusterStatusArrayOutput)
}

// Specifies the cluster storage configuration.
// Structure is documented below.
func (o BareMetalClusterOutput) Storage() BareMetalClusterStorageOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterStorageOutput { return v.Storage }).(BareMetalClusterStorageOutput)
}

// The unique identifier of the Bare Metal User Cluster.
func (o BareMetalClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time the cluster was last updated, in RFC3339 text format.
func (o BareMetalClusterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalCluster) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The cluster upgrade policy.
// Structure is documented below.
func (o BareMetalClusterOutput) UpgradePolicy() BareMetalClusterUpgradePolicyPtrOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterUpgradePolicyPtrOutput { return v.UpgradePolicy }).(BareMetalClusterUpgradePolicyPtrOutput)
}

// Specifies the security related settings for the Bare Metal User Cluster.
// Structure is documented below.
func (o BareMetalClusterOutput) ValidationChecks() BareMetalClusterValidationCheckArrayOutput {
	return o.ApplyT(func(v *BareMetalCluster) BareMetalClusterValidationCheckArrayOutput { return v.ValidationChecks }).(BareMetalClusterValidationCheckArrayOutput)
}

type BareMetalClusterArrayOutput struct{ *pulumi.OutputState }

func (BareMetalClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BareMetalCluster)(nil)).Elem()
}

func (o BareMetalClusterArrayOutput) ToBareMetalClusterArrayOutput() BareMetalClusterArrayOutput {
	return o
}

func (o BareMetalClusterArrayOutput) ToBareMetalClusterArrayOutputWithContext(ctx context.Context) BareMetalClusterArrayOutput {
	return o
}

func (o BareMetalClusterArrayOutput) Index(i pulumi.IntInput) BareMetalClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BareMetalCluster {
		return vs[0].([]*BareMetalCluster)[vs[1].(int)]
	}).(BareMetalClusterOutput)
}

type BareMetalClusterMapOutput struct{ *pulumi.OutputState }

func (BareMetalClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BareMetalCluster)(nil)).Elem()
}

func (o BareMetalClusterMapOutput) ToBareMetalClusterMapOutput() BareMetalClusterMapOutput {
	return o
}

func (o BareMetalClusterMapOutput) ToBareMetalClusterMapOutputWithContext(ctx context.Context) BareMetalClusterMapOutput {
	return o
}

func (o BareMetalClusterMapOutput) MapIndex(k pulumi.StringInput) BareMetalClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BareMetalCluster {
		return vs[0].(map[string]*BareMetalCluster)[vs[1].(string)]
	}).(BareMetalClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterInput)(nil)).Elem(), &BareMetalCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterArrayInput)(nil)).Elem(), BareMetalClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalClusterMapInput)(nil)).Elem(), BareMetalClusterMap{})
	pulumi.RegisterOutputType(BareMetalClusterOutput{})
	pulumi.RegisterOutputType(BareMetalClusterArrayOutput{})
	pulumi.RegisterOutputType(BareMetalClusterMapOutput{})
}
