// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.WireGroupWireEndpointArgs;
import com.pulumi.gcp.compute.inputs.WireGroupWireWirePropertyArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WireGroupWireArgs extends com.pulumi.resources.ResourceArgs {

    public static final WireGroupWireArgs Empty = new WireGroupWireArgs();

    /**
     * Indicates whether the wire group is administratively enabled.
     * 
     */
    @Import(name="adminEnabled")
    private @Nullable Output<Boolean> adminEnabled;

    /**
     * @return Indicates whether the wire group is administratively enabled.
     * 
     */
    public Optional<Output<Boolean>> adminEnabled() {
        return Optional.ofNullable(this.adminEnabled);
    }

    /**
     * Endpoints grouped by location, each mapping to interconnect configurations.
     * Structure is documented below.
     * 
     */
    @Import(name="endpoints")
    private @Nullable Output<List<WireGroupWireEndpointArgs>> endpoints;

    /**
     * @return Endpoints grouped by location, each mapping to interconnect configurations.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WireGroupWireEndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * (Output)
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return (Output)
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * Default properties for wires within the group.
     * Structure is documented below.
     * 
     */
    @Import(name="wireProperties")
    private @Nullable Output<List<WireGroupWireWirePropertyArgs>> wireProperties;

    /**
     * @return Default properties for wires within the group.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WireGroupWireWirePropertyArgs>>> wireProperties() {
        return Optional.ofNullable(this.wireProperties);
    }

    private WireGroupWireArgs() {}

    private WireGroupWireArgs(WireGroupWireArgs $) {
        this.adminEnabled = $.adminEnabled;
        this.endpoints = $.endpoints;
        this.label = $.label;
        this.wireProperties = $.wireProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WireGroupWireArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WireGroupWireArgs $;

        public Builder() {
            $ = new WireGroupWireArgs();
        }

        public Builder(WireGroupWireArgs defaults) {
            $ = new WireGroupWireArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminEnabled Indicates whether the wire group is administratively enabled.
         * 
         * @return builder
         * 
         */
        public Builder adminEnabled(@Nullable Output<Boolean> adminEnabled) {
            $.adminEnabled = adminEnabled;
            return this;
        }

        /**
         * @param adminEnabled Indicates whether the wire group is administratively enabled.
         * 
         * @return builder
         * 
         */
        public Builder adminEnabled(Boolean adminEnabled) {
            return adminEnabled(Output.of(adminEnabled));
        }

        /**
         * @param endpoints Endpoints grouped by location, each mapping to interconnect configurations.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(@Nullable Output<List<WireGroupWireEndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        /**
         * @param endpoints Endpoints grouped by location, each mapping to interconnect configurations.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(List<WireGroupWireEndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        /**
         * @param endpoints Endpoints grouped by location, each mapping to interconnect configurations.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(WireGroupWireEndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        /**
         * @param label (Output)
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label (Output)
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param wireProperties Default properties for wires within the group.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder wireProperties(@Nullable Output<List<WireGroupWireWirePropertyArgs>> wireProperties) {
            $.wireProperties = wireProperties;
            return this;
        }

        /**
         * @param wireProperties Default properties for wires within the group.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder wireProperties(List<WireGroupWireWirePropertyArgs> wireProperties) {
            return wireProperties(Output.of(wireProperties));
        }

        /**
         * @param wireProperties Default properties for wires within the group.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder wireProperties(WireGroupWireWirePropertyArgs... wireProperties) {
            return wireProperties(List.of(wireProperties));
        }

        public WireGroupWireArgs build() {
            return $;
        }
    }

}
