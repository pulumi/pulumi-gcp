// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CxWebhookGenericWebServiceSecretVersionsForRequestHeader {
    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    private String key;
    /**
     * @return The SecretManager secret version resource storing the header value.
     * Format: `projects/{project}/secrets/{secret}/versions/{version}`
     * 
     */
    private String secretVersion;

    private CxWebhookGenericWebServiceSecretVersionsForRequestHeader() {}
    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return The SecretManager secret version resource storing the header value.
     * Format: `projects/{project}/secrets/{secret}/versions/{version}`
     * 
     */
    public String secretVersion() {
        return this.secretVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxWebhookGenericWebServiceSecretVersionsForRequestHeader defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String key;
        private String secretVersion;
        public Builder() {}
        public Builder(CxWebhookGenericWebServiceSecretVersionsForRequestHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.secretVersion = defaults.secretVersion;
        }

        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("CxWebhookGenericWebServiceSecretVersionsForRequestHeader", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder secretVersion(String secretVersion) {
            if (secretVersion == null) {
              throw new MissingRequiredPropertyException("CxWebhookGenericWebServiceSecretVersionsForRequestHeader", "secretVersion");
            }
            this.secretVersion = secretVersion;
            return this;
        }
        public CxWebhookGenericWebServiceSecretVersionsForRequestHeader build() {
            final var _resultValue = new CxWebhookGenericWebServiceSecretVersionsForRequestHeader();
            _resultValue.key = key;
            _resultValue.secretVersion = secretVersion;
            return _resultValue;
        }
    }
}
