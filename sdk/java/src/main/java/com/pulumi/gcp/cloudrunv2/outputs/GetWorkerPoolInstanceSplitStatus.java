// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkerPoolInstanceSplitStatus {
    /**
     * @return Specifies percent of the instance split to this Revision.
     * 
     */
    private Integer percent;
    /**
     * @return Revision to which this instance split is assigned.
     * 
     */
    private String revision;
    /**
     * @return The allocation type for this instance split.
     * 
     */
    private String type;

    private GetWorkerPoolInstanceSplitStatus() {}
    /**
     * @return Specifies percent of the instance split to this Revision.
     * 
     */
    public Integer percent() {
        return this.percent;
    }
    /**
     * @return Revision to which this instance split is assigned.
     * 
     */
    public String revision() {
        return this.revision;
    }
    /**
     * @return The allocation type for this instance split.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkerPoolInstanceSplitStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer percent;
        private String revision;
        private String type;
        public Builder() {}
        public Builder(GetWorkerPoolInstanceSplitStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.percent = defaults.percent;
    	      this.revision = defaults.revision;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder percent(Integer percent) {
            if (percent == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolInstanceSplitStatus", "percent");
            }
            this.percent = percent;
            return this;
        }
        @CustomType.Setter
        public Builder revision(String revision) {
            if (revision == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolInstanceSplitStatus", "revision");
            }
            this.revision = revision;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolInstanceSplitStatus", "type");
            }
            this.type = type;
            return this;
        }
        public GetWorkerPoolInstanceSplitStatus build() {
            final var _resultValue = new GetWorkerPoolInstanceSplitStatus();
            _resultValue.percent = percent;
            _resultValue.revision = revision;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
