// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.chronicle;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.chronicle.RuleDeploymentArgs;
import com.pulumi.gcp.chronicle.inputs.RuleDeploymentState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The RuleDeployment resource represents the deployment state of a Rule.
 * 
 * To get more information about RuleDeployment, see:
 * 
 * * [API documentation](https://cloud.google.com/chronicle/docs/reference/rest/v1/RuleDeployment)
 * * How-to Guides
 *     * [Google SecOps Guides](https://cloud.google.com/chronicle/docs/secops/secops-overview)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * RuleDeployment can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/instances/{{instance}}/rules/{{rule}}/deployment`
 * 
 * * `{{project}}/{{location}}/{{instance}}/{{rule}}`
 * 
 * * `{{location}}/{{instance}}/{{rule}}`
 * 
 * When using the `pulumi import` command, RuleDeployment can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:chronicle/ruleDeployment:RuleDeployment default projects/{{project}}/locations/{{location}}/instances/{{instance}}/rules/{{rule}}/deployment
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:chronicle/ruleDeployment:RuleDeployment default {{project}}/{{location}}/{{instance}}/{{rule}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:chronicle/ruleDeployment:RuleDeployment default {{location}}/{{instance}}/{{rule}}
 * ```
 * 
 */
@ResourceType(type="gcp:chronicle/ruleDeployment:RuleDeployment")
public class RuleDeployment extends com.pulumi.resources.CustomResource {
    /**
     * Whether detections resulting from this deployment should be considered
     * alerts.
     * 
     */
    @Export(name="alerting", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> alerting;

    /**
     * @return Whether detections resulting from this deployment should be considered
     * alerts.
     * 
     */
    public Output<Optional<Boolean>> alerting() {
        return Codegen.optional(this.alerting);
    }
    /**
     * Output only. The timestamp when the rule deployment archive state was last set to true. If the rule deployment&#39;s current archive state is not set to true, the field will be empty.
     * 
     */
    @Export(name="archiveTime", refs={String.class}, tree="[0]")
    private Output<String> archiveTime;

    /**
     * @return Output only. The timestamp when the rule deployment archive state was last set to true. If the rule deployment&#39;s current archive state is not set to true, the field will be empty.
     * 
     */
    public Output<String> archiveTime() {
        return this.archiveTime;
    }
    /**
     * The archive state of the rule deployment.
     * Cannot be set to true unless enabled is set to false i.e.
     * archiving requires a two-step process: first, disable the rule by
     * setting &#39;enabled&#39; to false, then set &#39;archive&#39; to true.
     * If set to true, alerting will automatically be set to false.
     * If currently set to true, enabled, alerting, and runFrequency cannot be
     * updated.
     * 
     */
    @Export(name="archived", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> archived;

    /**
     * @return The archive state of the rule deployment.
     * Cannot be set to true unless enabled is set to false i.e.
     * archiving requires a two-step process: first, disable the rule by
     * setting &#39;enabled&#39; to false, then set &#39;archive&#39; to true.
     * If set to true, alerting will automatically be set to false.
     * If currently set to true, enabled, alerting, and runFrequency cannot be
     * updated.
     * 
     */
    public Output<Optional<Boolean>> archived() {
        return Codegen.optional(this.archived);
    }
    /**
     * Output only. The names of the associated/chained consumer rules. Rules are considered
     * consumers of this rule if their rule text explicitly filters on this rule&#39;s ruleid.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/rules/{rule}
     * 
     */
    @Export(name="consumerRules", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> consumerRules;

    /**
     * @return Output only. The names of the associated/chained consumer rules. Rules are considered
     * consumers of this rule if their rule text explicitly filters on this rule&#39;s ruleid.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/rules/{rule}
     * 
     */
    public Output<List<String>> consumerRules() {
        return this.consumerRules;
    }
    /**
     * Whether the rule is currently deployed continuously against incoming data.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Whether the rule is currently deployed continuously against incoming data.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The execution state of the rule deployment.
     * Possible values:
     * DEFAULT
     * LIMITED
     * PAUSED
     * 
     */
    @Export(name="executionState", refs={String.class}, tree="[0]")
    private Output<String> executionState;

    /**
     * @return The execution state of the rule deployment.
     * Possible values:
     * DEFAULT
     * LIMITED
     * PAUSED
     * 
     */
    public Output<String> executionState() {
        return this.executionState;
    }
    /**
     * The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    @Export(name="instance", refs={String.class}, tree="[0]")
    private Output<String> instance;

    /**
     * @return The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    public Output<String> instance() {
        return this.instance;
    }
    /**
     * Output only. The timestamp when the rule deployment alert state was lastly changed. This is filled regardless of the current alert state.E.g. if the current alert status is false, this timestamp will be the timestamp when the alert status was changed to false.
     * 
     */
    @Export(name="lastAlertStatusChangeTime", refs={String.class}, tree="[0]")
    private Output<String> lastAlertStatusChangeTime;

    /**
     * @return Output only. The timestamp when the rule deployment alert state was lastly changed. This is filled regardless of the current alert state.E.g. if the current alert status is false, this timestamp will be the timestamp when the alert status was changed to false.
     * 
     */
    public Output<String> lastAlertStatusChangeTime() {
        return this.lastAlertStatusChangeTime;
    }
    /**
     * The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource name of the rule deployment.
     * Note that RuleDeployment is a child of the overall Rule, not any individual
     * revision, so the resource ID segment for the Rule resource must not
     * reference a specific revision.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/deployment
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the rule deployment.
     * Note that RuleDeployment is a child of the overall Rule, not any individual
     * revision, so the resource ID segment for the Rule resource must not
     * reference a specific revision.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/deployment
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Output only. The names of the associated/chained producer rules. Rules are considered
     * producers for this rule if this rule explicitly filters on their ruleid.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/rules/{rule}
     * 
     */
    @Export(name="producerRules", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> producerRules;

    /**
     * @return Output only. The names of the associated/chained producer rules. Rules are considered
     * producers for this rule if this rule explicitly filters on their ruleid.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/rules/{rule}
     * 
     */
    public Output<List<String>> producerRules() {
        return this.producerRules;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The Rule ID of the rule.
     * 
     */
    @Export(name="rule", refs={String.class}, tree="[0]")
    private Output<String> rule;

    /**
     * @return The Rule ID of the rule.
     * 
     */
    public Output<String> rule() {
        return this.rule;
    }
    /**
     * The run frequency of the rule deployment.
     * Possible values:
     * LIVE
     * HOURLY
     * DAILY
     * 
     */
    @Export(name="runFrequency", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> runFrequency;

    /**
     * @return The run frequency of the rule deployment.
     * Possible values:
     * LIVE
     * HOURLY
     * DAILY
     * 
     */
    public Output<Optional<String>> runFrequency() {
        return Codegen.optional(this.runFrequency);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RuleDeployment(java.lang.String name) {
        this(name, RuleDeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RuleDeployment(java.lang.String name, RuleDeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RuleDeployment(java.lang.String name, RuleDeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:chronicle/ruleDeployment:RuleDeployment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RuleDeployment(java.lang.String name, Output<java.lang.String> id, @Nullable RuleDeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:chronicle/ruleDeployment:RuleDeployment", name, state, makeResourceOptions(options, id), false);
    }

    private static RuleDeploymentArgs makeArgs(RuleDeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RuleDeploymentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RuleDeployment get(java.lang.String name, Output<java.lang.String> id, @Nullable RuleDeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RuleDeployment(name, id, state, options);
    }
}
