// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigateway.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApiIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApiIamPolicyPlainArgs Empty = new GetApiIamPolicyPlainArgs();

    @Import(name="api", required=true)
    private String api;

    public String api() {
        return this.api;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetApiIamPolicyPlainArgs() {}

    private GetApiIamPolicyPlainArgs(GetApiIamPolicyPlainArgs $) {
        this.api = $.api;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApiIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApiIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetApiIamPolicyPlainArgs();
        }

        public Builder(GetApiIamPolicyPlainArgs defaults) {
            $ = new GetApiIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder api(String api) {
            $.api = api;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetApiIamPolicyPlainArgs build() {
            if ($.api == null) {
                throw new MissingRequiredPropertyException("GetApiIamPolicyPlainArgs", "api");
            }
            return $;
        }
    }

}
