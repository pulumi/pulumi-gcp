// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceTemplateVolumeGcs {
    /**
     * @return GCS Bucket name
     * 
     */
    private String bucket;
    /**
     * @return If true, mount the GCS bucket as read-only
     * 
     */
    private @Nullable Boolean readOnly;

    private ServiceTemplateVolumeGcs() {}
    /**
     * @return GCS Bucket name
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return If true, mount the GCS bucket as read-only
     * 
     */
    public Optional<Boolean> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTemplateVolumeGcs defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private @Nullable Boolean readOnly;
        public Builder() {}
        public Builder(ServiceTemplateVolumeGcs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.readOnly = defaults.readOnly;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("ServiceTemplateVolumeGcs", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(@Nullable Boolean readOnly) {

            this.readOnly = readOnly;
            return this;
        }
        public ServiceTemplateVolumeGcs build() {
            final var _resultValue = new ServiceTemplateVolumeGcs();
            _resultValue.bucket = bucket;
            _resultValue.readOnly = readOnly;
            return _resultValue;
        }
    }
}
