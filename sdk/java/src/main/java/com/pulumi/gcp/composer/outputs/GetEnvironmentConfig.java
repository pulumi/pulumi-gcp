// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigDatabaseConfig;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigEncryptionConfig;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigMaintenanceWindow;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigMasterAuthorizedNetworksConfig;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigNodeConfig;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigPrivateEnvironmentConfig;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigSoftwareConfig;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigWebServerConfig;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigWebServerNetworkAccessControl;
import com.pulumi.gcp.composer.outputs.GetEnvironmentConfigWorkloadsConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEnvironmentConfig {
    private final String airflowUri;
    private final String dagGcsPrefix;
    private final List<GetEnvironmentConfigDatabaseConfig> databaseConfigs;
    private final List<GetEnvironmentConfigEncryptionConfig> encryptionConfigs;
    private final String environmentSize;
    private final String gkeCluster;
    private final List<GetEnvironmentConfigMaintenanceWindow> maintenanceWindows;
    private final List<GetEnvironmentConfigMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs;
    private final List<GetEnvironmentConfigNodeConfig> nodeConfigs;
    private final Integer nodeCount;
    private final List<GetEnvironmentConfigPrivateEnvironmentConfig> privateEnvironmentConfigs;
    private final List<GetEnvironmentConfigSoftwareConfig> softwareConfigs;
    private final List<GetEnvironmentConfigWebServerConfig> webServerConfigs;
    private final List<GetEnvironmentConfigWebServerNetworkAccessControl> webServerNetworkAccessControls;
    private final List<GetEnvironmentConfigWorkloadsConfig> workloadsConfigs;

    @CustomType.Constructor
    private GetEnvironmentConfig(
        @CustomType.Parameter("airflowUri") String airflowUri,
        @CustomType.Parameter("dagGcsPrefix") String dagGcsPrefix,
        @CustomType.Parameter("databaseConfigs") List<GetEnvironmentConfigDatabaseConfig> databaseConfigs,
        @CustomType.Parameter("encryptionConfigs") List<GetEnvironmentConfigEncryptionConfig> encryptionConfigs,
        @CustomType.Parameter("environmentSize") String environmentSize,
        @CustomType.Parameter("gkeCluster") String gkeCluster,
        @CustomType.Parameter("maintenanceWindows") List<GetEnvironmentConfigMaintenanceWindow> maintenanceWindows,
        @CustomType.Parameter("masterAuthorizedNetworksConfigs") List<GetEnvironmentConfigMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs,
        @CustomType.Parameter("nodeConfigs") List<GetEnvironmentConfigNodeConfig> nodeConfigs,
        @CustomType.Parameter("nodeCount") Integer nodeCount,
        @CustomType.Parameter("privateEnvironmentConfigs") List<GetEnvironmentConfigPrivateEnvironmentConfig> privateEnvironmentConfigs,
        @CustomType.Parameter("softwareConfigs") List<GetEnvironmentConfigSoftwareConfig> softwareConfigs,
        @CustomType.Parameter("webServerConfigs") List<GetEnvironmentConfigWebServerConfig> webServerConfigs,
        @CustomType.Parameter("webServerNetworkAccessControls") List<GetEnvironmentConfigWebServerNetworkAccessControl> webServerNetworkAccessControls,
        @CustomType.Parameter("workloadsConfigs") List<GetEnvironmentConfigWorkloadsConfig> workloadsConfigs) {
        this.airflowUri = airflowUri;
        this.dagGcsPrefix = dagGcsPrefix;
        this.databaseConfigs = databaseConfigs;
        this.encryptionConfigs = encryptionConfigs;
        this.environmentSize = environmentSize;
        this.gkeCluster = gkeCluster;
        this.maintenanceWindows = maintenanceWindows;
        this.masterAuthorizedNetworksConfigs = masterAuthorizedNetworksConfigs;
        this.nodeConfigs = nodeConfigs;
        this.nodeCount = nodeCount;
        this.privateEnvironmentConfigs = privateEnvironmentConfigs;
        this.softwareConfigs = softwareConfigs;
        this.webServerConfigs = webServerConfigs;
        this.webServerNetworkAccessControls = webServerNetworkAccessControls;
        this.workloadsConfigs = workloadsConfigs;
    }

    public String airflowUri() {
        return this.airflowUri;
    }
    public String dagGcsPrefix() {
        return this.dagGcsPrefix;
    }
    public List<GetEnvironmentConfigDatabaseConfig> databaseConfigs() {
        return this.databaseConfigs;
    }
    public List<GetEnvironmentConfigEncryptionConfig> encryptionConfigs() {
        return this.encryptionConfigs;
    }
    public String environmentSize() {
        return this.environmentSize;
    }
    public String gkeCluster() {
        return this.gkeCluster;
    }
    public List<GetEnvironmentConfigMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    public List<GetEnvironmentConfigMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs() {
        return this.masterAuthorizedNetworksConfigs;
    }
    public List<GetEnvironmentConfigNodeConfig> nodeConfigs() {
        return this.nodeConfigs;
    }
    public Integer nodeCount() {
        return this.nodeCount;
    }
    public List<GetEnvironmentConfigPrivateEnvironmentConfig> privateEnvironmentConfigs() {
        return this.privateEnvironmentConfigs;
    }
    public List<GetEnvironmentConfigSoftwareConfig> softwareConfigs() {
        return this.softwareConfigs;
    }
    public List<GetEnvironmentConfigWebServerConfig> webServerConfigs() {
        return this.webServerConfigs;
    }
    public List<GetEnvironmentConfigWebServerNetworkAccessControl> webServerNetworkAccessControls() {
        return this.webServerNetworkAccessControls;
    }
    public List<GetEnvironmentConfigWorkloadsConfig> workloadsConfigs() {
        return this.workloadsConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvironmentConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String airflowUri;
        private String dagGcsPrefix;
        private List<GetEnvironmentConfigDatabaseConfig> databaseConfigs;
        private List<GetEnvironmentConfigEncryptionConfig> encryptionConfigs;
        private String environmentSize;
        private String gkeCluster;
        private List<GetEnvironmentConfigMaintenanceWindow> maintenanceWindows;
        private List<GetEnvironmentConfigMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs;
        private List<GetEnvironmentConfigNodeConfig> nodeConfigs;
        private Integer nodeCount;
        private List<GetEnvironmentConfigPrivateEnvironmentConfig> privateEnvironmentConfigs;
        private List<GetEnvironmentConfigSoftwareConfig> softwareConfigs;
        private List<GetEnvironmentConfigWebServerConfig> webServerConfigs;
        private List<GetEnvironmentConfigWebServerNetworkAccessControl> webServerNetworkAccessControls;
        private List<GetEnvironmentConfigWorkloadsConfig> workloadsConfigs;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEnvironmentConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.airflowUri = defaults.airflowUri;
    	      this.dagGcsPrefix = defaults.dagGcsPrefix;
    	      this.databaseConfigs = defaults.databaseConfigs;
    	      this.encryptionConfigs = defaults.encryptionConfigs;
    	      this.environmentSize = defaults.environmentSize;
    	      this.gkeCluster = defaults.gkeCluster;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.masterAuthorizedNetworksConfigs = defaults.masterAuthorizedNetworksConfigs;
    	      this.nodeConfigs = defaults.nodeConfigs;
    	      this.nodeCount = defaults.nodeCount;
    	      this.privateEnvironmentConfigs = defaults.privateEnvironmentConfigs;
    	      this.softwareConfigs = defaults.softwareConfigs;
    	      this.webServerConfigs = defaults.webServerConfigs;
    	      this.webServerNetworkAccessControls = defaults.webServerNetworkAccessControls;
    	      this.workloadsConfigs = defaults.workloadsConfigs;
        }

        public Builder airflowUri(String airflowUri) {
            this.airflowUri = Objects.requireNonNull(airflowUri);
            return this;
        }
        public Builder dagGcsPrefix(String dagGcsPrefix) {
            this.dagGcsPrefix = Objects.requireNonNull(dagGcsPrefix);
            return this;
        }
        public Builder databaseConfigs(List<GetEnvironmentConfigDatabaseConfig> databaseConfigs) {
            this.databaseConfigs = Objects.requireNonNull(databaseConfigs);
            return this;
        }
        public Builder databaseConfigs(GetEnvironmentConfigDatabaseConfig... databaseConfigs) {
            return databaseConfigs(List.of(databaseConfigs));
        }
        public Builder encryptionConfigs(List<GetEnvironmentConfigEncryptionConfig> encryptionConfigs) {
            this.encryptionConfigs = Objects.requireNonNull(encryptionConfigs);
            return this;
        }
        public Builder encryptionConfigs(GetEnvironmentConfigEncryptionConfig... encryptionConfigs) {
            return encryptionConfigs(List.of(encryptionConfigs));
        }
        public Builder environmentSize(String environmentSize) {
            this.environmentSize = Objects.requireNonNull(environmentSize);
            return this;
        }
        public Builder gkeCluster(String gkeCluster) {
            this.gkeCluster = Objects.requireNonNull(gkeCluster);
            return this;
        }
        public Builder maintenanceWindows(List<GetEnvironmentConfigMaintenanceWindow> maintenanceWindows) {
            this.maintenanceWindows = Objects.requireNonNull(maintenanceWindows);
            return this;
        }
        public Builder maintenanceWindows(GetEnvironmentConfigMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        public Builder masterAuthorizedNetworksConfigs(List<GetEnvironmentConfigMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs) {
            this.masterAuthorizedNetworksConfigs = Objects.requireNonNull(masterAuthorizedNetworksConfigs);
            return this;
        }
        public Builder masterAuthorizedNetworksConfigs(GetEnvironmentConfigMasterAuthorizedNetworksConfig... masterAuthorizedNetworksConfigs) {
            return masterAuthorizedNetworksConfigs(List.of(masterAuthorizedNetworksConfigs));
        }
        public Builder nodeConfigs(List<GetEnvironmentConfigNodeConfig> nodeConfigs) {
            this.nodeConfigs = Objects.requireNonNull(nodeConfigs);
            return this;
        }
        public Builder nodeConfigs(GetEnvironmentConfigNodeConfig... nodeConfigs) {
            return nodeConfigs(List.of(nodeConfigs));
        }
        public Builder nodeCount(Integer nodeCount) {
            this.nodeCount = Objects.requireNonNull(nodeCount);
            return this;
        }
        public Builder privateEnvironmentConfigs(List<GetEnvironmentConfigPrivateEnvironmentConfig> privateEnvironmentConfigs) {
            this.privateEnvironmentConfigs = Objects.requireNonNull(privateEnvironmentConfigs);
            return this;
        }
        public Builder privateEnvironmentConfigs(GetEnvironmentConfigPrivateEnvironmentConfig... privateEnvironmentConfigs) {
            return privateEnvironmentConfigs(List.of(privateEnvironmentConfigs));
        }
        public Builder softwareConfigs(List<GetEnvironmentConfigSoftwareConfig> softwareConfigs) {
            this.softwareConfigs = Objects.requireNonNull(softwareConfigs);
            return this;
        }
        public Builder softwareConfigs(GetEnvironmentConfigSoftwareConfig... softwareConfigs) {
            return softwareConfigs(List.of(softwareConfigs));
        }
        public Builder webServerConfigs(List<GetEnvironmentConfigWebServerConfig> webServerConfigs) {
            this.webServerConfigs = Objects.requireNonNull(webServerConfigs);
            return this;
        }
        public Builder webServerConfigs(GetEnvironmentConfigWebServerConfig... webServerConfigs) {
            return webServerConfigs(List.of(webServerConfigs));
        }
        public Builder webServerNetworkAccessControls(List<GetEnvironmentConfigWebServerNetworkAccessControl> webServerNetworkAccessControls) {
            this.webServerNetworkAccessControls = Objects.requireNonNull(webServerNetworkAccessControls);
            return this;
        }
        public Builder webServerNetworkAccessControls(GetEnvironmentConfigWebServerNetworkAccessControl... webServerNetworkAccessControls) {
            return webServerNetworkAccessControls(List.of(webServerNetworkAccessControls));
        }
        public Builder workloadsConfigs(List<GetEnvironmentConfigWorkloadsConfig> workloadsConfigs) {
            this.workloadsConfigs = Objects.requireNonNull(workloadsConfigs);
            return this;
        }
        public Builder workloadsConfigs(GetEnvironmentConfigWorkloadsConfig... workloadsConfigs) {
            return workloadsConfigs(List.of(workloadsConfigs));
        }        public GetEnvironmentConfig build() {
            return new GetEnvironmentConfig(airflowUri, dagGcsPrefix, databaseConfigs, encryptionConfigs, environmentSize, gkeCluster, maintenanceWindows, masterAuthorizedNetworksConfigs, nodeConfigs, nodeCount, privateEnvironmentConfigs, softwareConfigs, webServerConfigs, webServerNetworkAccessControls, workloadsConfigs);
        }
    }
}
