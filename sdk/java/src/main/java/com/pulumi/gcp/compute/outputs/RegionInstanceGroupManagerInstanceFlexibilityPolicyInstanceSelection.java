// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection {
    /**
     * @return Full machine-type names, e.g. &#34;n1-standard-16&#34;
     * 
     */
    private List<String> machineTypes;
    /**
     * @return The name of the instance group manager. Must be 1-63
     * characters long and comply with
     * [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
     * include lowercase letters, numbers, and hyphens.
     * 
     */
    private String name;
    /**
     * @return Preference of this instance selection. Lower number means higher preference. MIG will first try to create a VM based on the machine-type with lowest rank and fallback to next rank based on availability. Machine types and instance selections with the same rank have the same preference.
     * 
     */
    private @Nullable Integer rank;

    private RegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection() {}
    /**
     * @return Full machine-type names, e.g. &#34;n1-standard-16&#34;
     * 
     */
    public List<String> machineTypes() {
        return this.machineTypes;
    }
    /**
     * @return The name of the instance group manager. Must be 1-63
     * characters long and comply with
     * [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
     * include lowercase letters, numbers, and hyphens.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Preference of this instance selection. Lower number means higher preference. MIG will first try to create a VM based on the machine-type with lowest rank and fallback to next rank based on availability. Machine types and instance selections with the same rank have the same preference.
     * 
     */
    public Optional<Integer> rank() {
        return Optional.ofNullable(this.rank);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> machineTypes;
        private String name;
        private @Nullable Integer rank;
        public Builder() {}
        public Builder(RegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.machineTypes = defaults.machineTypes;
    	      this.name = defaults.name;
    	      this.rank = defaults.rank;
        }

        @CustomType.Setter
        public Builder machineTypes(List<String> machineTypes) {
            if (machineTypes == null) {
              throw new MissingRequiredPropertyException("RegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection", "machineTypes");
            }
            this.machineTypes = machineTypes;
            return this;
        }
        public Builder machineTypes(String... machineTypes) {
            return machineTypes(List.of(machineTypes));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("RegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder rank(@Nullable Integer rank) {

            this.rank = rank;
            return this;
        }
        public RegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection build() {
            final var _resultValue = new RegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection();
            _resultValue.machineTypes = machineTypes;
            _resultValue.name = name;
            _resultValue.rank = rank;
            return _resultValue;
        }
    }
}
