// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memorystore;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.memorystore.inputs.InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceDesiredUserCreatedEndpointsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceDesiredUserCreatedEndpointsArgs Empty = new InstanceDesiredUserCreatedEndpointsArgs();

    /**
     * A list of desired user endpoints
     * Structure is documented below.
     * 
     */
    @Import(name="desiredUserCreatedEndpoints")
    private @Nullable Output<List<InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArgs>> desiredUserCreatedEndpoints;

    /**
     * @return A list of desired user endpoints
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArgs>>> desiredUserCreatedEndpoints() {
        return Optional.ofNullable(this.desiredUserCreatedEndpoints);
    }

    /**
     * The name of the Memorystore instance these endpoints should be added to.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Memorystore instance these endpoints should be added to.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The name of the region of the Memorystore instance these endpoints should be added to.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The name of the region of the Memorystore instance these endpoints should be added to.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private InstanceDesiredUserCreatedEndpointsArgs() {}

    private InstanceDesiredUserCreatedEndpointsArgs(InstanceDesiredUserCreatedEndpointsArgs $) {
        this.desiredUserCreatedEndpoints = $.desiredUserCreatedEndpoints;
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceDesiredUserCreatedEndpointsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceDesiredUserCreatedEndpointsArgs $;

        public Builder() {
            $ = new InstanceDesiredUserCreatedEndpointsArgs();
        }

        public Builder(InstanceDesiredUserCreatedEndpointsArgs defaults) {
            $ = new InstanceDesiredUserCreatedEndpointsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param desiredUserCreatedEndpoints A list of desired user endpoints
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder desiredUserCreatedEndpoints(@Nullable Output<List<InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArgs>> desiredUserCreatedEndpoints) {
            $.desiredUserCreatedEndpoints = desiredUserCreatedEndpoints;
            return this;
        }

        /**
         * @param desiredUserCreatedEndpoints A list of desired user endpoints
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder desiredUserCreatedEndpoints(List<InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArgs> desiredUserCreatedEndpoints) {
            return desiredUserCreatedEndpoints(Output.of(desiredUserCreatedEndpoints));
        }

        /**
         * @param desiredUserCreatedEndpoints A list of desired user endpoints
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder desiredUserCreatedEndpoints(InstanceDesiredUserCreatedEndpointsDesiredUserCreatedEndpointArgs... desiredUserCreatedEndpoints) {
            return desiredUserCreatedEndpoints(List.of(desiredUserCreatedEndpoints));
        }

        /**
         * @param name The name of the Memorystore instance these endpoints should be added to.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Memorystore instance these endpoints should be added to.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The name of the region of the Memorystore instance these endpoints should be added to.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The name of the region of the Memorystore instance these endpoints should be added to.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public InstanceDesiredUserCreatedEndpointsArgs build() {
            if ($.region == null) {
                throw new MissingRequiredPropertyException("InstanceDesiredUserCreatedEndpointsArgs", "region");
            }
            return $;
        }
    }

}
