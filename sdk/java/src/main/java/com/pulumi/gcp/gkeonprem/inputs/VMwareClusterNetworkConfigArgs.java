// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigControlPlaneV2ConfigArgs;
import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigDhcpIpConfigArgs;
import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigHostConfigArgs;
import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigStaticIpConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VMwareClusterNetworkConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final VMwareClusterNetworkConfigArgs Empty = new VMwareClusterNetworkConfigArgs();

    /**
     * Configuration for control plane V2 mode.
     * Structure is documented below.
     * 
     */
    @Import(name="controlPlaneV2Config")
    private @Nullable Output<VMwareClusterNetworkConfigControlPlaneV2ConfigArgs> controlPlaneV2Config;

    /**
     * @return Configuration for control plane V2 mode.
     * Structure is documented below.
     * 
     */
    public Optional<Output<VMwareClusterNetworkConfigControlPlaneV2ConfigArgs>> controlPlaneV2Config() {
        return Optional.ofNullable(this.controlPlaneV2Config);
    }

    /**
     * Configuration settings for a DHCP IP configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="dhcpIpConfig")
    private @Nullable Output<VMwareClusterNetworkConfigDhcpIpConfigArgs> dhcpIpConfig;

    /**
     * @return Configuration settings for a DHCP IP configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<VMwareClusterNetworkConfigDhcpIpConfigArgs>> dhcpIpConfig() {
        return Optional.ofNullable(this.dhcpIpConfig);
    }

    /**
     * Represents common network settings irrespective of the host&#39;s IP address.
     * Structure is documented below.
     * 
     */
    @Import(name="hostConfig")
    private @Nullable Output<VMwareClusterNetworkConfigHostConfigArgs> hostConfig;

    /**
     * @return Represents common network settings irrespective of the host&#39;s IP address.
     * Structure is documented below.
     * 
     */
    public Optional<Output<VMwareClusterNetworkConfigHostConfigArgs>> hostConfig() {
        return Optional.ofNullable(this.hostConfig);
    }

    /**
     * All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
     * Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    @Import(name="podAddressCidrBlocks", required=true)
    private Output<List<String>> podAddressCidrBlocks;

    /**
     * @return All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
     * Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    public Output<List<String>> podAddressCidrBlocks() {
        return this.podAddressCidrBlocks;
    }

    /**
     * All services in the cluster are assigned an RFC1918 IPv4 address
     * from these ranges. Only a single range is supported.. This field
     * cannot be changed after creation.
     * 
     */
    @Import(name="serviceAddressCidrBlocks", required=true)
    private Output<List<String>> serviceAddressCidrBlocks;

    /**
     * @return All services in the cluster are assigned an RFC1918 IPv4 address
     * from these ranges. Only a single range is supported.. This field
     * cannot be changed after creation.
     * 
     */
    public Output<List<String>> serviceAddressCidrBlocks() {
        return this.serviceAddressCidrBlocks;
    }

    /**
     * Configuration settings for a static IP configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="staticIpConfig")
    private @Nullable Output<VMwareClusterNetworkConfigStaticIpConfigArgs> staticIpConfig;

    /**
     * @return Configuration settings for a static IP configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<VMwareClusterNetworkConfigStaticIpConfigArgs>> staticIpConfig() {
        return Optional.ofNullable(this.staticIpConfig);
    }

    /**
     * (Output)
     * vcenter_network specifies vCenter network name. Inherited from the admin cluster.
     * 
     */
    @Import(name="vcenterNetwork")
    private @Nullable Output<String> vcenterNetwork;

    /**
     * @return (Output)
     * vcenter_network specifies vCenter network name. Inherited from the admin cluster.
     * 
     */
    public Optional<Output<String>> vcenterNetwork() {
        return Optional.ofNullable(this.vcenterNetwork);
    }

    private VMwareClusterNetworkConfigArgs() {}

    private VMwareClusterNetworkConfigArgs(VMwareClusterNetworkConfigArgs $) {
        this.controlPlaneV2Config = $.controlPlaneV2Config;
        this.dhcpIpConfig = $.dhcpIpConfig;
        this.hostConfig = $.hostConfig;
        this.podAddressCidrBlocks = $.podAddressCidrBlocks;
        this.serviceAddressCidrBlocks = $.serviceAddressCidrBlocks;
        this.staticIpConfig = $.staticIpConfig;
        this.vcenterNetwork = $.vcenterNetwork;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VMwareClusterNetworkConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VMwareClusterNetworkConfigArgs $;

        public Builder() {
            $ = new VMwareClusterNetworkConfigArgs();
        }

        public Builder(VMwareClusterNetworkConfigArgs defaults) {
            $ = new VMwareClusterNetworkConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param controlPlaneV2Config Configuration for control plane V2 mode.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder controlPlaneV2Config(@Nullable Output<VMwareClusterNetworkConfigControlPlaneV2ConfigArgs> controlPlaneV2Config) {
            $.controlPlaneV2Config = controlPlaneV2Config;
            return this;
        }

        /**
         * @param controlPlaneV2Config Configuration for control plane V2 mode.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder controlPlaneV2Config(VMwareClusterNetworkConfigControlPlaneV2ConfigArgs controlPlaneV2Config) {
            return controlPlaneV2Config(Output.of(controlPlaneV2Config));
        }

        /**
         * @param dhcpIpConfig Configuration settings for a DHCP IP configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dhcpIpConfig(@Nullable Output<VMwareClusterNetworkConfigDhcpIpConfigArgs> dhcpIpConfig) {
            $.dhcpIpConfig = dhcpIpConfig;
            return this;
        }

        /**
         * @param dhcpIpConfig Configuration settings for a DHCP IP configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dhcpIpConfig(VMwareClusterNetworkConfigDhcpIpConfigArgs dhcpIpConfig) {
            return dhcpIpConfig(Output.of(dhcpIpConfig));
        }

        /**
         * @param hostConfig Represents common network settings irrespective of the host&#39;s IP address.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hostConfig(@Nullable Output<VMwareClusterNetworkConfigHostConfigArgs> hostConfig) {
            $.hostConfig = hostConfig;
            return this;
        }

        /**
         * @param hostConfig Represents common network settings irrespective of the host&#39;s IP address.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hostConfig(VMwareClusterNetworkConfigHostConfigArgs hostConfig) {
            return hostConfig(Output.of(hostConfig));
        }

        /**
         * @param podAddressCidrBlocks All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
         * Only a single range is supported. This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder podAddressCidrBlocks(Output<List<String>> podAddressCidrBlocks) {
            $.podAddressCidrBlocks = podAddressCidrBlocks;
            return this;
        }

        /**
         * @param podAddressCidrBlocks All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
         * Only a single range is supported. This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder podAddressCidrBlocks(List<String> podAddressCidrBlocks) {
            return podAddressCidrBlocks(Output.of(podAddressCidrBlocks));
        }

        /**
         * @param podAddressCidrBlocks All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
         * Only a single range is supported. This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder podAddressCidrBlocks(String... podAddressCidrBlocks) {
            return podAddressCidrBlocks(List.of(podAddressCidrBlocks));
        }

        /**
         * @param serviceAddressCidrBlocks All services in the cluster are assigned an RFC1918 IPv4 address
         * from these ranges. Only a single range is supported.. This field
         * cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder serviceAddressCidrBlocks(Output<List<String>> serviceAddressCidrBlocks) {
            $.serviceAddressCidrBlocks = serviceAddressCidrBlocks;
            return this;
        }

        /**
         * @param serviceAddressCidrBlocks All services in the cluster are assigned an RFC1918 IPv4 address
         * from these ranges. Only a single range is supported.. This field
         * cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder serviceAddressCidrBlocks(List<String> serviceAddressCidrBlocks) {
            return serviceAddressCidrBlocks(Output.of(serviceAddressCidrBlocks));
        }

        /**
         * @param serviceAddressCidrBlocks All services in the cluster are assigned an RFC1918 IPv4 address
         * from these ranges. Only a single range is supported.. This field
         * cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder serviceAddressCidrBlocks(String... serviceAddressCidrBlocks) {
            return serviceAddressCidrBlocks(List.of(serviceAddressCidrBlocks));
        }

        /**
         * @param staticIpConfig Configuration settings for a static IP configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder staticIpConfig(@Nullable Output<VMwareClusterNetworkConfigStaticIpConfigArgs> staticIpConfig) {
            $.staticIpConfig = staticIpConfig;
            return this;
        }

        /**
         * @param staticIpConfig Configuration settings for a static IP configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder staticIpConfig(VMwareClusterNetworkConfigStaticIpConfigArgs staticIpConfig) {
            return staticIpConfig(Output.of(staticIpConfig));
        }

        /**
         * @param vcenterNetwork (Output)
         * vcenter_network specifies vCenter network name. Inherited from the admin cluster.
         * 
         * @return builder
         * 
         */
        public Builder vcenterNetwork(@Nullable Output<String> vcenterNetwork) {
            $.vcenterNetwork = vcenterNetwork;
            return this;
        }

        /**
         * @param vcenterNetwork (Output)
         * vcenter_network specifies vCenter network name. Inherited from the admin cluster.
         * 
         * @return builder
         * 
         */
        public Builder vcenterNetwork(String vcenterNetwork) {
            return vcenterNetwork(Output.of(vcenterNetwork));
        }

        public VMwareClusterNetworkConfigArgs build() {
            $.podAddressCidrBlocks = Objects.requireNonNull($.podAddressCidrBlocks, "expected parameter 'podAddressCidrBlocks' to be non-null");
            $.serviceAddressCidrBlocks = Objects.requireNonNull($.serviceAddressCidrBlocks, "expected parameter 'serviceAddressCidrBlocks' to be non-null");
            return $;
        }
    }

}
