// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AlertPolicyConditionConditionThresholdForecastOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertPolicyConditionConditionThresholdForecastOptionsArgs Empty = new AlertPolicyConditionConditionThresholdForecastOptionsArgs();

    /**
     * The length of time into the future to forecast
     * whether a timeseries will violate the threshold.
     * If the predicted value is found to violate the
     * threshold, and the violation is observed in all
     * forecasts made for the Configured `duration`,
     * then the timeseries is considered to be failing.
     * 
     */
    @Import(name="forecastHorizon", required=true)
    private Output<String> forecastHorizon;

    /**
     * @return The length of time into the future to forecast
     * whether a timeseries will violate the threshold.
     * If the predicted value is found to violate the
     * threshold, and the violation is observed in all
     * forecasts made for the Configured `duration`,
     * then the timeseries is considered to be failing.
     * 
     */
    public Output<String> forecastHorizon() {
        return this.forecastHorizon;
    }

    private AlertPolicyConditionConditionThresholdForecastOptionsArgs() {}

    private AlertPolicyConditionConditionThresholdForecastOptionsArgs(AlertPolicyConditionConditionThresholdForecastOptionsArgs $) {
        this.forecastHorizon = $.forecastHorizon;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertPolicyConditionConditionThresholdForecastOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertPolicyConditionConditionThresholdForecastOptionsArgs $;

        public Builder() {
            $ = new AlertPolicyConditionConditionThresholdForecastOptionsArgs();
        }

        public Builder(AlertPolicyConditionConditionThresholdForecastOptionsArgs defaults) {
            $ = new AlertPolicyConditionConditionThresholdForecastOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param forecastHorizon The length of time into the future to forecast
         * whether a timeseries will violate the threshold.
         * If the predicted value is found to violate the
         * threshold, and the violation is observed in all
         * forecasts made for the Configured `duration`,
         * then the timeseries is considered to be failing.
         * 
         * @return builder
         * 
         */
        public Builder forecastHorizon(Output<String> forecastHorizon) {
            $.forecastHorizon = forecastHorizon;
            return this;
        }

        /**
         * @param forecastHorizon The length of time into the future to forecast
         * whether a timeseries will violate the threshold.
         * If the predicted value is found to violate the
         * threshold, and the violation is observed in all
         * forecasts made for the Configured `duration`,
         * then the timeseries is considered to be failing.
         * 
         * @return builder
         * 
         */
        public Builder forecastHorizon(String forecastHorizon) {
            return forecastHorizon(Output.of(forecastHorizon));
        }

        public AlertPolicyConditionConditionThresholdForecastOptionsArgs build() {
            $.forecastHorizon = Objects.requireNonNull($.forecastHorizon, "expected parameter 'forecastHorizon' to be non-null");
            return $;
        }
    }

}
