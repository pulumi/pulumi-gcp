// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.RegionBackendServiceDynamicForwardingIpPortSelectionArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionBackendServiceDynamicForwardingArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegionBackendServiceDynamicForwardingArgs Empty = new RegionBackendServiceDynamicForwardingArgs();

    /**
     * IP:PORT based dynamic forwarding configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="ipPortSelection")
    private @Nullable Output<RegionBackendServiceDynamicForwardingIpPortSelectionArgs> ipPortSelection;

    /**
     * @return IP:PORT based dynamic forwarding configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RegionBackendServiceDynamicForwardingIpPortSelectionArgs>> ipPortSelection() {
        return Optional.ofNullable(this.ipPortSelection);
    }

    private RegionBackendServiceDynamicForwardingArgs() {}

    private RegionBackendServiceDynamicForwardingArgs(RegionBackendServiceDynamicForwardingArgs $) {
        this.ipPortSelection = $.ipPortSelection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionBackendServiceDynamicForwardingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionBackendServiceDynamicForwardingArgs $;

        public Builder() {
            $ = new RegionBackendServiceDynamicForwardingArgs();
        }

        public Builder(RegionBackendServiceDynamicForwardingArgs defaults) {
            $ = new RegionBackendServiceDynamicForwardingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipPortSelection IP:PORT based dynamic forwarding configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ipPortSelection(@Nullable Output<RegionBackendServiceDynamicForwardingIpPortSelectionArgs> ipPortSelection) {
            $.ipPortSelection = ipPortSelection;
            return this;
        }

        /**
         * @param ipPortSelection IP:PORT based dynamic forwarding configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ipPortSelection(RegionBackendServiceDynamicForwardingIpPortSelectionArgs ipPortSelection) {
            return ipPortSelection(Output.of(ipPortSelection));
        }

        public RegionBackendServiceDynamicForwardingArgs build() {
            return $;
        }
    }

}
