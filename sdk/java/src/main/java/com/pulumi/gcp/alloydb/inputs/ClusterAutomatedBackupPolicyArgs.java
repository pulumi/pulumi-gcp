// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.alloydb.inputs.ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs;
import com.pulumi.gcp.alloydb.inputs.ClusterAutomatedBackupPolicyTimeBasedRetentionArgs;
import com.pulumi.gcp.alloydb.inputs.ClusterAutomatedBackupPolicyWeeklyScheduleArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAutomatedBackupPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAutomatedBackupPolicyArgs Empty = new ClusterAutomatedBackupPolicyArgs();

    /**
     * The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
     * The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Import(name="backupWindow")
    private @Nullable Output<String> backupWindow;

    /**
     * @return The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
     * The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<Output<String>> backupWindow() {
        return Optional.ofNullable(this.backupWindow);
    }

    /**
     * Whether automated automated backups are enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether automated automated backups are enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Labels to apply to backups created using this configuration.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels to apply to backups created using this configuration.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Quantity-based Backup retention policy to retain recent backups.
     * Structure is documented below.
     * 
     */
    @Import(name="quantityBasedRetention")
    private @Nullable Output<ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs> quantityBasedRetention;

    /**
     * @return Quantity-based Backup retention policy to retain recent backups.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs>> quantityBasedRetention() {
        return Optional.ofNullable(this.quantityBasedRetention);
    }

    /**
     * Time-based Backup retention policy.
     * Structure is documented below.
     * 
     */
    @Import(name="timeBasedRetention")
    private @Nullable Output<ClusterAutomatedBackupPolicyTimeBasedRetentionArgs> timeBasedRetention;

    /**
     * @return Time-based Backup retention policy.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterAutomatedBackupPolicyTimeBasedRetentionArgs>> timeBasedRetention() {
        return Optional.ofNullable(this.timeBasedRetention);
    }

    /**
     * Weekly schedule for the Backup.
     * Structure is documented below.
     * 
     */
    @Import(name="weeklySchedule", required=true)
    private Output<ClusterAutomatedBackupPolicyWeeklyScheduleArgs> weeklySchedule;

    /**
     * @return Weekly schedule for the Backup.
     * Structure is documented below.
     * 
     */
    public Output<ClusterAutomatedBackupPolicyWeeklyScheduleArgs> weeklySchedule() {
        return this.weeklySchedule;
    }

    private ClusterAutomatedBackupPolicyArgs() {}

    private ClusterAutomatedBackupPolicyArgs(ClusterAutomatedBackupPolicyArgs $) {
        this.backupWindow = $.backupWindow;
        this.enabled = $.enabled;
        this.labels = $.labels;
        this.location = $.location;
        this.quantityBasedRetention = $.quantityBasedRetention;
        this.timeBasedRetention = $.timeBasedRetention;
        this.weeklySchedule = $.weeklySchedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAutomatedBackupPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAutomatedBackupPolicyArgs $;

        public Builder() {
            $ = new ClusterAutomatedBackupPolicyArgs();
        }

        public Builder(ClusterAutomatedBackupPolicyArgs defaults) {
            $ = new ClusterAutomatedBackupPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupWindow The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
         * The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder backupWindow(@Nullable Output<String> backupWindow) {
            $.backupWindow = backupWindow;
            return this;
        }

        /**
         * @param backupWindow The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
         * The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder backupWindow(String backupWindow) {
            return backupWindow(Output.of(backupWindow));
        }

        /**
         * @param enabled Whether automated automated backups are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether automated automated backups are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param labels Labels to apply to backups created using this configuration.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels to apply to backups created using this configuration.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param quantityBasedRetention Quantity-based Backup retention policy to retain recent backups.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder quantityBasedRetention(@Nullable Output<ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs> quantityBasedRetention) {
            $.quantityBasedRetention = quantityBasedRetention;
            return this;
        }

        /**
         * @param quantityBasedRetention Quantity-based Backup retention policy to retain recent backups.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder quantityBasedRetention(ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs quantityBasedRetention) {
            return quantityBasedRetention(Output.of(quantityBasedRetention));
        }

        /**
         * @param timeBasedRetention Time-based Backup retention policy.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder timeBasedRetention(@Nullable Output<ClusterAutomatedBackupPolicyTimeBasedRetentionArgs> timeBasedRetention) {
            $.timeBasedRetention = timeBasedRetention;
            return this;
        }

        /**
         * @param timeBasedRetention Time-based Backup retention policy.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder timeBasedRetention(ClusterAutomatedBackupPolicyTimeBasedRetentionArgs timeBasedRetention) {
            return timeBasedRetention(Output.of(timeBasedRetention));
        }

        /**
         * @param weeklySchedule Weekly schedule for the Backup.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder weeklySchedule(Output<ClusterAutomatedBackupPolicyWeeklyScheduleArgs> weeklySchedule) {
            $.weeklySchedule = weeklySchedule;
            return this;
        }

        /**
         * @param weeklySchedule Weekly schedule for the Backup.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder weeklySchedule(ClusterAutomatedBackupPolicyWeeklyScheduleArgs weeklySchedule) {
            return weeklySchedule(Output.of(weeklySchedule));
        }

        public ClusterAutomatedBackupPolicyArgs build() {
            $.weeklySchedule = Objects.requireNonNull($.weeklySchedule, "expected parameter 'weeklySchedule' to be non-null");
            return $;
        }
    }

}
