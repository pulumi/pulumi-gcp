// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProjectServiceAccountResult {
    /**
     * @return The email address of the service account. This value is often used to refer to the service account
     * in order to grant IAM permissions.
     * 
     */
    private String emailAddress;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Identity of the service account in the form `serviceAccount:{email_address}`. This value is often used to refer to the service account in order to grant IAM permissions.
     * 
     */
    private String member;
    private String project;
    private @Nullable String userProject;

    private GetProjectServiceAccountResult() {}
    /**
     * @return The email address of the service account. This value is often used to refer to the service account
     * in order to grant IAM permissions.
     * 
     */
    public String emailAddress() {
        return this.emailAddress;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Identity of the service account in the form `serviceAccount:{email_address}`. This value is often used to refer to the service account in order to grant IAM permissions.
     * 
     */
    public String member() {
        return this.member;
    }
    public String project() {
        return this.project;
    }
    public Optional<String> userProject() {
        return Optional.ofNullable(this.userProject);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectServiceAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String emailAddress;
        private String id;
        private String member;
        private String project;
        private @Nullable String userProject;
        public Builder() {}
        public Builder(GetProjectServiceAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.emailAddress = defaults.emailAddress;
    	      this.id = defaults.id;
    	      this.member = defaults.member;
    	      this.project = defaults.project;
    	      this.userProject = defaults.userProject;
        }

        @CustomType.Setter
        public Builder emailAddress(String emailAddress) {
            if (emailAddress == null) {
              throw new MissingRequiredPropertyException("GetProjectServiceAccountResult", "emailAddress");
            }
            this.emailAddress = emailAddress;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProjectServiceAccountResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder member(String member) {
            if (member == null) {
              throw new MissingRequiredPropertyException("GetProjectServiceAccountResult", "member");
            }
            this.member = member;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetProjectServiceAccountResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder userProject(@Nullable String userProject) {

            this.userProject = userProject;
            return this;
        }
        public GetProjectServiceAccountResult build() {
            final var _resultValue = new GetProjectServiceAccountResult();
            _resultValue.emailAddress = emailAddress;
            _resultValue.id = id;
            _resultValue.member = member;
            _resultValue.project = project;
            _resultValue.userProject = userProject;
            return _resultValue;
        }
    }
}
