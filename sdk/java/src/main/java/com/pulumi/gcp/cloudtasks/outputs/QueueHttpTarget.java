// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudtasks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.cloudtasks.outputs.QueueHttpTargetHeaderOverride;
import com.pulumi.gcp.cloudtasks.outputs.QueueHttpTargetOauthToken;
import com.pulumi.gcp.cloudtasks.outputs.QueueHttpTargetOidcToken;
import com.pulumi.gcp.cloudtasks.outputs.QueueHttpTargetUriOverride;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class QueueHttpTarget {
    /**
     * @return HTTP target headers.
     * This map contains the header field names and values.
     * Headers will be set when running the CreateTask and/or BufferTask.
     * These headers represent a subset of the headers that will be configured for the task&#39;s HTTP request.
     * Some HTTP request headers will be ignored or replaced.
     * Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
     * The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
     * Structure is documented below.
     * 
     */
    private @Nullable List<QueueHttpTargetHeaderOverride> headerOverrides;
    /**
     * @return The HTTP method to use for the request.
     * When specified, it overrides HttpRequest for the task.
     * Note that if the value is set to GET the body of the task will be ignored at execution time.
     * Possible values are: `HTTP_METHOD_UNSPECIFIED`, `POST`, `GET`, `HEAD`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`.
     * 
     */
    private @Nullable String httpMethod;
    /**
     * @return If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
     * This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
     * Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
     * Structure is documented below.
     * 
     */
    private @Nullable QueueHttpTargetOauthToken oauthToken;
    /**
     * @return If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
     * This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
     * Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
     * Structure is documented below.
     * 
     */
    private @Nullable QueueHttpTargetOidcToken oidcToken;
    /**
     * @return URI override.
     * When specified, overrides the execution URI for all the tasks in the queue.
     * Structure is documented below.
     * 
     */
    private @Nullable QueueHttpTargetUriOverride uriOverride;

    private QueueHttpTarget() {}
    /**
     * @return HTTP target headers.
     * This map contains the header field names and values.
     * Headers will be set when running the CreateTask and/or BufferTask.
     * These headers represent a subset of the headers that will be configured for the task&#39;s HTTP request.
     * Some HTTP request headers will be ignored or replaced.
     * Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
     * The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
     * Structure is documented below.
     * 
     */
    public List<QueueHttpTargetHeaderOverride> headerOverrides() {
        return this.headerOverrides == null ? List.of() : this.headerOverrides;
    }
    /**
     * @return The HTTP method to use for the request.
     * When specified, it overrides HttpRequest for the task.
     * Note that if the value is set to GET the body of the task will be ignored at execution time.
     * Possible values are: `HTTP_METHOD_UNSPECIFIED`, `POST`, `GET`, `HEAD`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`.
     * 
     */
    public Optional<String> httpMethod() {
        return Optional.ofNullable(this.httpMethod);
    }
    /**
     * @return If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
     * This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
     * Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
     * Structure is documented below.
     * 
     */
    public Optional<QueueHttpTargetOauthToken> oauthToken() {
        return Optional.ofNullable(this.oauthToken);
    }
    /**
     * @return If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
     * This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
     * Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
     * Structure is documented below.
     * 
     */
    public Optional<QueueHttpTargetOidcToken> oidcToken() {
        return Optional.ofNullable(this.oidcToken);
    }
    /**
     * @return URI override.
     * When specified, overrides the execution URI for all the tasks in the queue.
     * Structure is documented below.
     * 
     */
    public Optional<QueueHttpTargetUriOverride> uriOverride() {
        return Optional.ofNullable(this.uriOverride);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueHttpTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<QueueHttpTargetHeaderOverride> headerOverrides;
        private @Nullable String httpMethod;
        private @Nullable QueueHttpTargetOauthToken oauthToken;
        private @Nullable QueueHttpTargetOidcToken oidcToken;
        private @Nullable QueueHttpTargetUriOverride uriOverride;
        public Builder() {}
        public Builder(QueueHttpTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.headerOverrides = defaults.headerOverrides;
    	      this.httpMethod = defaults.httpMethod;
    	      this.oauthToken = defaults.oauthToken;
    	      this.oidcToken = defaults.oidcToken;
    	      this.uriOverride = defaults.uriOverride;
        }

        @CustomType.Setter
        public Builder headerOverrides(@Nullable List<QueueHttpTargetHeaderOverride> headerOverrides) {

            this.headerOverrides = headerOverrides;
            return this;
        }
        public Builder headerOverrides(QueueHttpTargetHeaderOverride... headerOverrides) {
            return headerOverrides(List.of(headerOverrides));
        }
        @CustomType.Setter
        public Builder httpMethod(@Nullable String httpMethod) {

            this.httpMethod = httpMethod;
            return this;
        }
        @CustomType.Setter
        public Builder oauthToken(@Nullable QueueHttpTargetOauthToken oauthToken) {

            this.oauthToken = oauthToken;
            return this;
        }
        @CustomType.Setter
        public Builder oidcToken(@Nullable QueueHttpTargetOidcToken oidcToken) {

            this.oidcToken = oidcToken;
            return this;
        }
        @CustomType.Setter
        public Builder uriOverride(@Nullable QueueHttpTargetUriOverride uriOverride) {

            this.uriOverride = uriOverride;
            return this;
        }
        public QueueHttpTarget build() {
            final var _resultValue = new QueueHttpTarget();
            _resultValue.headerOverrides = headerOverrides;
            _resultValue.httpMethod = httpMethod;
            _resultValue.oauthToken = oauthToken;
            _resultValue.oidcToken = oidcToken;
            _resultValue.uriOverride = uriOverride;
            return _resultValue;
        }
    }
}
