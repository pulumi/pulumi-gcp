// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkeonprem.outputs.BareMetalClusterStorageLvpNodeMountsConfig;
import com.pulumi.gcp.gkeonprem.outputs.BareMetalClusterStorageLvpShareConfig;
import java.util.Objects;

@CustomType
public final class BareMetalClusterStorage {
    /**
     * @return Specifies the config for local PersistentVolumes backed
     * by mounted node disks. These disks need to be formatted and mounted by the
     * user, which can be done before or after cluster creation.
     * Structure is documented below.
     * 
     */
    private BareMetalClusterStorageLvpNodeMountsConfig lvpNodeMountsConfig;
    /**
     * @return Specifies the config for local PersistentVolumes backed by
     * subdirectories in a shared filesystem. These subdirectores are
     * automatically created during cluster creation.
     * Structure is documented below.
     * 
     */
    private BareMetalClusterStorageLvpShareConfig lvpShareConfig;

    private BareMetalClusterStorage() {}
    /**
     * @return Specifies the config for local PersistentVolumes backed
     * by mounted node disks. These disks need to be formatted and mounted by the
     * user, which can be done before or after cluster creation.
     * Structure is documented below.
     * 
     */
    public BareMetalClusterStorageLvpNodeMountsConfig lvpNodeMountsConfig() {
        return this.lvpNodeMountsConfig;
    }
    /**
     * @return Specifies the config for local PersistentVolumes backed by
     * subdirectories in a shared filesystem. These subdirectores are
     * automatically created during cluster creation.
     * Structure is documented below.
     * 
     */
    public BareMetalClusterStorageLvpShareConfig lvpShareConfig() {
        return this.lvpShareConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BareMetalClusterStorage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BareMetalClusterStorageLvpNodeMountsConfig lvpNodeMountsConfig;
        private BareMetalClusterStorageLvpShareConfig lvpShareConfig;
        public Builder() {}
        public Builder(BareMetalClusterStorage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lvpNodeMountsConfig = defaults.lvpNodeMountsConfig;
    	      this.lvpShareConfig = defaults.lvpShareConfig;
        }

        @CustomType.Setter
        public Builder lvpNodeMountsConfig(BareMetalClusterStorageLvpNodeMountsConfig lvpNodeMountsConfig) {
            if (lvpNodeMountsConfig == null) {
              throw new MissingRequiredPropertyException("BareMetalClusterStorage", "lvpNodeMountsConfig");
            }
            this.lvpNodeMountsConfig = lvpNodeMountsConfig;
            return this;
        }
        @CustomType.Setter
        public Builder lvpShareConfig(BareMetalClusterStorageLvpShareConfig lvpShareConfig) {
            if (lvpShareConfig == null) {
              throw new MissingRequiredPropertyException("BareMetalClusterStorage", "lvpShareConfig");
            }
            this.lvpShareConfig = lvpShareConfig;
            return this;
        }
        public BareMetalClusterStorage build() {
            final var _resultValue = new BareMetalClusterStorage();
            _resultValue.lvpNodeMountsConfig = lvpNodeMountsConfig;
            _resultValue.lvpShareConfig = lvpShareConfig;
            return _resultValue;
        }
    }
}
