// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceObservabilityConfig {
    /**
     * @return Whether assistive experiences are enabled for this AlloyDB instance.
     * 
     */
    private @Nullable Boolean assistiveExperiencesEnabled;
    /**
     * @return Observability feature status for an instance.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Query string length. The default value is 10240. Any integer between 1024 and 100000 is considered valid.
     * 
     */
    private @Nullable Integer maxQueryStringLength;
    /**
     * @return Preserve comments in the query string.
     * 
     */
    private @Nullable Boolean preserveComments;
    /**
     * @return Number of query execution plans captured by Insights per minute for all queries combined. The default value is 5. Any integer between 0 and 200 is considered valid.
     * 
     */
    private @Nullable Integer queryPlansPerMinute;
    /**
     * @return Record application tags for an instance. This flag is turned &#34;on&#34; by default.
     * 
     */
    private @Nullable Boolean recordApplicationTags;
    /**
     * @return Track actively running queries. If not set, default value is &#34;off&#34;.
     * 
     */
    private @Nullable Boolean trackActiveQueries;
    /**
     * @return Record wait event types during query execution for an instance.
     * 
     */
    private @Nullable Boolean trackWaitEventTypes;
    /**
     * @return Record wait events during query execution for an instance.
     * 
     */
    private @Nullable Boolean trackWaitEvents;

    private InstanceObservabilityConfig() {}
    /**
     * @return Whether assistive experiences are enabled for this AlloyDB instance.
     * 
     */
    public Optional<Boolean> assistiveExperiencesEnabled() {
        return Optional.ofNullable(this.assistiveExperiencesEnabled);
    }
    /**
     * @return Observability feature status for an instance.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Query string length. The default value is 10240. Any integer between 1024 and 100000 is considered valid.
     * 
     */
    public Optional<Integer> maxQueryStringLength() {
        return Optional.ofNullable(this.maxQueryStringLength);
    }
    /**
     * @return Preserve comments in the query string.
     * 
     */
    public Optional<Boolean> preserveComments() {
        return Optional.ofNullable(this.preserveComments);
    }
    /**
     * @return Number of query execution plans captured by Insights per minute for all queries combined. The default value is 5. Any integer between 0 and 200 is considered valid.
     * 
     */
    public Optional<Integer> queryPlansPerMinute() {
        return Optional.ofNullable(this.queryPlansPerMinute);
    }
    /**
     * @return Record application tags for an instance. This flag is turned &#34;on&#34; by default.
     * 
     */
    public Optional<Boolean> recordApplicationTags() {
        return Optional.ofNullable(this.recordApplicationTags);
    }
    /**
     * @return Track actively running queries. If not set, default value is &#34;off&#34;.
     * 
     */
    public Optional<Boolean> trackActiveQueries() {
        return Optional.ofNullable(this.trackActiveQueries);
    }
    /**
     * @return Record wait event types during query execution for an instance.
     * 
     */
    public Optional<Boolean> trackWaitEventTypes() {
        return Optional.ofNullable(this.trackWaitEventTypes);
    }
    /**
     * @return Record wait events during query execution for an instance.
     * 
     */
    public Optional<Boolean> trackWaitEvents() {
        return Optional.ofNullable(this.trackWaitEvents);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceObservabilityConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean assistiveExperiencesEnabled;
        private @Nullable Boolean enabled;
        private @Nullable Integer maxQueryStringLength;
        private @Nullable Boolean preserveComments;
        private @Nullable Integer queryPlansPerMinute;
        private @Nullable Boolean recordApplicationTags;
        private @Nullable Boolean trackActiveQueries;
        private @Nullable Boolean trackWaitEventTypes;
        private @Nullable Boolean trackWaitEvents;
        public Builder() {}
        public Builder(InstanceObservabilityConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assistiveExperiencesEnabled = defaults.assistiveExperiencesEnabled;
    	      this.enabled = defaults.enabled;
    	      this.maxQueryStringLength = defaults.maxQueryStringLength;
    	      this.preserveComments = defaults.preserveComments;
    	      this.queryPlansPerMinute = defaults.queryPlansPerMinute;
    	      this.recordApplicationTags = defaults.recordApplicationTags;
    	      this.trackActiveQueries = defaults.trackActiveQueries;
    	      this.trackWaitEventTypes = defaults.trackWaitEventTypes;
    	      this.trackWaitEvents = defaults.trackWaitEvents;
        }

        @CustomType.Setter
        public Builder assistiveExperiencesEnabled(@Nullable Boolean assistiveExperiencesEnabled) {

            this.assistiveExperiencesEnabled = assistiveExperiencesEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxQueryStringLength(@Nullable Integer maxQueryStringLength) {

            this.maxQueryStringLength = maxQueryStringLength;
            return this;
        }
        @CustomType.Setter
        public Builder preserveComments(@Nullable Boolean preserveComments) {

            this.preserveComments = preserveComments;
            return this;
        }
        @CustomType.Setter
        public Builder queryPlansPerMinute(@Nullable Integer queryPlansPerMinute) {

            this.queryPlansPerMinute = queryPlansPerMinute;
            return this;
        }
        @CustomType.Setter
        public Builder recordApplicationTags(@Nullable Boolean recordApplicationTags) {

            this.recordApplicationTags = recordApplicationTags;
            return this;
        }
        @CustomType.Setter
        public Builder trackActiveQueries(@Nullable Boolean trackActiveQueries) {

            this.trackActiveQueries = trackActiveQueries;
            return this;
        }
        @CustomType.Setter
        public Builder trackWaitEventTypes(@Nullable Boolean trackWaitEventTypes) {

            this.trackWaitEventTypes = trackWaitEventTypes;
            return this;
        }
        @CustomType.Setter
        public Builder trackWaitEvents(@Nullable Boolean trackWaitEvents) {

            this.trackWaitEvents = trackWaitEvents;
            return this;
        }
        public InstanceObservabilityConfig build() {
            final var _resultValue = new InstanceObservabilityConfig();
            _resultValue.assistiveExperiencesEnabled = assistiveExperiencesEnabled;
            _resultValue.enabled = enabled;
            _resultValue.maxQueryStringLength = maxQueryStringLength;
            _resultValue.preserveComments = preserveComments;
            _resultValue.queryPlansPerMinute = queryPlansPerMinute;
            _resultValue.recordApplicationTags = recordApplicationTags;
            _resultValue.trackActiveQueries = trackActiveQueries;
            _resultValue.trackWaitEventTypes = trackWaitEventTypes;
            _resultValue.trackWaitEvents = trackWaitEvents;
            return _resultValue;
        }
    }
}
