// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.blockchainnodeengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.blockchainnodeengine.inputs.BlockchainNodesEthereumDetailsAdditionalEndpointArgs;
import com.pulumi.gcp.blockchainnodeengine.inputs.BlockchainNodesEthereumDetailsGethDetailsArgs;
import com.pulumi.gcp.blockchainnodeengine.inputs.BlockchainNodesEthereumDetailsValidatorConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlockchainNodesEthereumDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlockchainNodesEthereumDetailsArgs Empty = new BlockchainNodesEthereumDetailsArgs();

    /**
     * (Output)
     * User-provided key-value pairs
     * Structure is documented below.
     * 
     */
    @Import(name="additionalEndpoints")
    private @Nullable Output<List<BlockchainNodesEthereumDetailsAdditionalEndpointArgs>> additionalEndpoints;

    /**
     * @return (Output)
     * User-provided key-value pairs
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<BlockchainNodesEthereumDetailsAdditionalEndpointArgs>>> additionalEndpoints() {
        return Optional.ofNullable(this.additionalEndpoints);
    }

    /**
     * Enables JSON-RPC access to functions in the admin namespace. Defaults to false.
     * 
     */
    @Import(name="apiEnableAdmin")
    private @Nullable Output<Boolean> apiEnableAdmin;

    /**
     * @return Enables JSON-RPC access to functions in the admin namespace. Defaults to false.
     * 
     */
    public Optional<Output<Boolean>> apiEnableAdmin() {
        return Optional.ofNullable(this.apiEnableAdmin);
    }

    /**
     * Enables JSON-RPC access to functions in the debug namespace. Defaults to false.
     * 
     */
    @Import(name="apiEnableDebug")
    private @Nullable Output<Boolean> apiEnableDebug;

    /**
     * @return Enables JSON-RPC access to functions in the debug namespace. Defaults to false.
     * 
     */
    public Optional<Output<Boolean>> apiEnableDebug() {
        return Optional.ofNullable(this.apiEnableDebug);
    }

    /**
     * The consensus client
     * Possible values are: `CONSENSUS_CLIENT_UNSPECIFIED`, `LIGHTHOUSE`.
     * 
     */
    @Import(name="consensusClient")
    private @Nullable Output<String> consensusClient;

    /**
     * @return The consensus client
     * Possible values are: `CONSENSUS_CLIENT_UNSPECIFIED`, `LIGHTHOUSE`.
     * 
     */
    public Optional<Output<String>> consensusClient() {
        return Optional.ofNullable(this.consensusClient);
    }

    /**
     * The execution client
     * Possible values are: `EXECUTION_CLIENT_UNSPECIFIED`, `GETH`, `ERIGON`.
     * 
     */
    @Import(name="executionClient")
    private @Nullable Output<String> executionClient;

    /**
     * @return The execution client
     * Possible values are: `EXECUTION_CLIENT_UNSPECIFIED`, `GETH`, `ERIGON`.
     * 
     */
    public Optional<Output<String>> executionClient() {
        return Optional.ofNullable(this.executionClient);
    }

    /**
     * User-provided key-value pairs
     * Structure is documented below.
     * 
     */
    @Import(name="gethDetails")
    private @Nullable Output<BlockchainNodesEthereumDetailsGethDetailsArgs> gethDetails;

    /**
     * @return User-provided key-value pairs
     * Structure is documented below.
     * 
     */
    public Optional<Output<BlockchainNodesEthereumDetailsGethDetailsArgs>> gethDetails() {
        return Optional.ofNullable(this.gethDetails);
    }

    /**
     * The Ethereum environment being accessed.
     * Possible values are: `MAINNET`, `TESTNET_GOERLI_PRATER`, `TESTNET_SEPOLIA`.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return The Ethereum environment being accessed.
     * Possible values are: `MAINNET`, `TESTNET_GOERLI_PRATER`, `TESTNET_SEPOLIA`.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * The type of Ethereum node.
     * Possible values are: `LIGHT`, `FULL`, `ARCHIVE`.
     * 
     */
    @Import(name="nodeType")
    private @Nullable Output<String> nodeType;

    /**
     * @return The type of Ethereum node.
     * Possible values are: `LIGHT`, `FULL`, `ARCHIVE`.
     * 
     */
    public Optional<Output<String>> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }

    /**
     * Configuration for validator-related parameters on the beacon client, and for any managed validator client.
     * Structure is documented below.
     * 
     */
    @Import(name="validatorConfig")
    private @Nullable Output<BlockchainNodesEthereumDetailsValidatorConfigArgs> validatorConfig;

    /**
     * @return Configuration for validator-related parameters on the beacon client, and for any managed validator client.
     * Structure is documented below.
     * 
     */
    public Optional<Output<BlockchainNodesEthereumDetailsValidatorConfigArgs>> validatorConfig() {
        return Optional.ofNullable(this.validatorConfig);
    }

    private BlockchainNodesEthereumDetailsArgs() {}

    private BlockchainNodesEthereumDetailsArgs(BlockchainNodesEthereumDetailsArgs $) {
        this.additionalEndpoints = $.additionalEndpoints;
        this.apiEnableAdmin = $.apiEnableAdmin;
        this.apiEnableDebug = $.apiEnableDebug;
        this.consensusClient = $.consensusClient;
        this.executionClient = $.executionClient;
        this.gethDetails = $.gethDetails;
        this.network = $.network;
        this.nodeType = $.nodeType;
        this.validatorConfig = $.validatorConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlockchainNodesEthereumDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlockchainNodesEthereumDetailsArgs $;

        public Builder() {
            $ = new BlockchainNodesEthereumDetailsArgs();
        }

        public Builder(BlockchainNodesEthereumDetailsArgs defaults) {
            $ = new BlockchainNodesEthereumDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalEndpoints (Output)
         * User-provided key-value pairs
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder additionalEndpoints(@Nullable Output<List<BlockchainNodesEthereumDetailsAdditionalEndpointArgs>> additionalEndpoints) {
            $.additionalEndpoints = additionalEndpoints;
            return this;
        }

        /**
         * @param additionalEndpoints (Output)
         * User-provided key-value pairs
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder additionalEndpoints(List<BlockchainNodesEthereumDetailsAdditionalEndpointArgs> additionalEndpoints) {
            return additionalEndpoints(Output.of(additionalEndpoints));
        }

        /**
         * @param additionalEndpoints (Output)
         * User-provided key-value pairs
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder additionalEndpoints(BlockchainNodesEthereumDetailsAdditionalEndpointArgs... additionalEndpoints) {
            return additionalEndpoints(List.of(additionalEndpoints));
        }

        /**
         * @param apiEnableAdmin Enables JSON-RPC access to functions in the admin namespace. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder apiEnableAdmin(@Nullable Output<Boolean> apiEnableAdmin) {
            $.apiEnableAdmin = apiEnableAdmin;
            return this;
        }

        /**
         * @param apiEnableAdmin Enables JSON-RPC access to functions in the admin namespace. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder apiEnableAdmin(Boolean apiEnableAdmin) {
            return apiEnableAdmin(Output.of(apiEnableAdmin));
        }

        /**
         * @param apiEnableDebug Enables JSON-RPC access to functions in the debug namespace. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder apiEnableDebug(@Nullable Output<Boolean> apiEnableDebug) {
            $.apiEnableDebug = apiEnableDebug;
            return this;
        }

        /**
         * @param apiEnableDebug Enables JSON-RPC access to functions in the debug namespace. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder apiEnableDebug(Boolean apiEnableDebug) {
            return apiEnableDebug(Output.of(apiEnableDebug));
        }

        /**
         * @param consensusClient The consensus client
         * Possible values are: `CONSENSUS_CLIENT_UNSPECIFIED`, `LIGHTHOUSE`.
         * 
         * @return builder
         * 
         */
        public Builder consensusClient(@Nullable Output<String> consensusClient) {
            $.consensusClient = consensusClient;
            return this;
        }

        /**
         * @param consensusClient The consensus client
         * Possible values are: `CONSENSUS_CLIENT_UNSPECIFIED`, `LIGHTHOUSE`.
         * 
         * @return builder
         * 
         */
        public Builder consensusClient(String consensusClient) {
            return consensusClient(Output.of(consensusClient));
        }

        /**
         * @param executionClient The execution client
         * Possible values are: `EXECUTION_CLIENT_UNSPECIFIED`, `GETH`, `ERIGON`.
         * 
         * @return builder
         * 
         */
        public Builder executionClient(@Nullable Output<String> executionClient) {
            $.executionClient = executionClient;
            return this;
        }

        /**
         * @param executionClient The execution client
         * Possible values are: `EXECUTION_CLIENT_UNSPECIFIED`, `GETH`, `ERIGON`.
         * 
         * @return builder
         * 
         */
        public Builder executionClient(String executionClient) {
            return executionClient(Output.of(executionClient));
        }

        /**
         * @param gethDetails User-provided key-value pairs
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gethDetails(@Nullable Output<BlockchainNodesEthereumDetailsGethDetailsArgs> gethDetails) {
            $.gethDetails = gethDetails;
            return this;
        }

        /**
         * @param gethDetails User-provided key-value pairs
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gethDetails(BlockchainNodesEthereumDetailsGethDetailsArgs gethDetails) {
            return gethDetails(Output.of(gethDetails));
        }

        /**
         * @param network The Ethereum environment being accessed.
         * Possible values are: `MAINNET`, `TESTNET_GOERLI_PRATER`, `TESTNET_SEPOLIA`.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The Ethereum environment being accessed.
         * Possible values are: `MAINNET`, `TESTNET_GOERLI_PRATER`, `TESTNET_SEPOLIA`.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param nodeType The type of Ethereum node.
         * Possible values are: `LIGHT`, `FULL`, `ARCHIVE`.
         * 
         * @return builder
         * 
         */
        public Builder nodeType(@Nullable Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        /**
         * @param nodeType The type of Ethereum node.
         * Possible values are: `LIGHT`, `FULL`, `ARCHIVE`.
         * 
         * @return builder
         * 
         */
        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        /**
         * @param validatorConfig Configuration for validator-related parameters on the beacon client, and for any managed validator client.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder validatorConfig(@Nullable Output<BlockchainNodesEthereumDetailsValidatorConfigArgs> validatorConfig) {
            $.validatorConfig = validatorConfig;
            return this;
        }

        /**
         * @param validatorConfig Configuration for validator-related parameters on the beacon client, and for any managed validator client.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder validatorConfig(BlockchainNodesEthereumDetailsValidatorConfigArgs validatorConfig) {
            return validatorConfig(Output.of(validatorConfig));
        }

        public BlockchainNodesEthereumDetailsArgs build() {
            return $;
        }
    }

}
