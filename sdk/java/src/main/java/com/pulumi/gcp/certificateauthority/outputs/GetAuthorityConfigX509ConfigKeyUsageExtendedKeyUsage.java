// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage {
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as &#34;TLS WWW client authentication&#34;, though regularly used for non-WWW TLS.
     * 
     */
    private Boolean clientAuth;
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as &#34;Signing of downloadable executable code client authentication&#34;.
     * 
     */
    private Boolean codeSigning;
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as &#34;Email protection&#34;.
     * 
     */
    private Boolean emailProtection;
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as &#34;Signing OCSP responses&#34;.
     * 
     */
    private Boolean ocspSigning;
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as &#34;TLS WWW server authentication&#34;, though regularly used for non-WWW TLS.
     * 
     */
    private Boolean serverAuth;
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as &#34;Binding the hash of an object to a time&#34;.
     * 
     */
    private Boolean timeStamping;

    private GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage() {}
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as &#34;TLS WWW client authentication&#34;, though regularly used for non-WWW TLS.
     * 
     */
    public Boolean clientAuth() {
        return this.clientAuth;
    }
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as &#34;Signing of downloadable executable code client authentication&#34;.
     * 
     */
    public Boolean codeSigning() {
        return this.codeSigning;
    }
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as &#34;Email protection&#34;.
     * 
     */
    public Boolean emailProtection() {
        return this.emailProtection;
    }
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as &#34;Signing OCSP responses&#34;.
     * 
     */
    public Boolean ocspSigning() {
        return this.ocspSigning;
    }
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as &#34;TLS WWW server authentication&#34;, though regularly used for non-WWW TLS.
     * 
     */
    public Boolean serverAuth() {
        return this.serverAuth;
    }
    /**
     * @return Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as &#34;Binding the hash of an object to a time&#34;.
     * 
     */
    public Boolean timeStamping() {
        return this.timeStamping;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean clientAuth;
        private Boolean codeSigning;
        private Boolean emailProtection;
        private Boolean ocspSigning;
        private Boolean serverAuth;
        private Boolean timeStamping;
        public Builder() {}
        public Builder(GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientAuth = defaults.clientAuth;
    	      this.codeSigning = defaults.codeSigning;
    	      this.emailProtection = defaults.emailProtection;
    	      this.ocspSigning = defaults.ocspSigning;
    	      this.serverAuth = defaults.serverAuth;
    	      this.timeStamping = defaults.timeStamping;
        }

        @CustomType.Setter
        public Builder clientAuth(Boolean clientAuth) {
            if (clientAuth == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage", "clientAuth");
            }
            this.clientAuth = clientAuth;
            return this;
        }
        @CustomType.Setter
        public Builder codeSigning(Boolean codeSigning) {
            if (codeSigning == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage", "codeSigning");
            }
            this.codeSigning = codeSigning;
            return this;
        }
        @CustomType.Setter
        public Builder emailProtection(Boolean emailProtection) {
            if (emailProtection == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage", "emailProtection");
            }
            this.emailProtection = emailProtection;
            return this;
        }
        @CustomType.Setter
        public Builder ocspSigning(Boolean ocspSigning) {
            if (ocspSigning == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage", "ocspSigning");
            }
            this.ocspSigning = ocspSigning;
            return this;
        }
        @CustomType.Setter
        public Builder serverAuth(Boolean serverAuth) {
            if (serverAuth == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage", "serverAuth");
            }
            this.serverAuth = serverAuth;
            return this;
        }
        @CustomType.Setter
        public Builder timeStamping(Boolean timeStamping) {
            if (timeStamping == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage", "timeStamping");
            }
            this.timeStamping = timeStamping;
            return this;
        }
        public GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage build() {
            final var _resultValue = new GetAuthorityConfigX509ConfigKeyUsageExtendedKeyUsage();
            _resultValue.clientAuth = clientAuth;
            _resultValue.codeSigning = codeSigning;
            _resultValue.emailProtection = emailProtection;
            _resultValue.ocspSigning = ocspSigning;
            _resultValue.serverAuth = serverAuth;
            _resultValue.timeStamping = timeStamping;
            return _resultValue;
        }
    }
}
