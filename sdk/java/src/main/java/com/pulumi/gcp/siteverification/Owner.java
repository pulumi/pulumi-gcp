// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.siteverification;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.siteverification.OwnerArgs;
import com.pulumi.gcp.siteverification.inputs.OwnerState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * An owner is an additional user that may manage a verified web site in the
 * [Google Search Console](https://www.google.com/webmasters/tools/). There
 * are two types of web resource owners:
 * 
 * * Verified owners, which are added to a web resource automatically when it
 *     is created (i.e., when the resource is verified). A verified owner is
 *     determined by the identity of the user requesting verification.
 * * Additional owners, which can be added to the resource by verified owners.
 * 
 * `gcp.siteverification.Owner` creates additional owners. If your web site
 * was verified using the
 * `gcp.siteverification.WebResource`
 * resource then you (or the identity was used to create the resource, such as a
 * service account) are already an owner.
 * 
 * &gt; **Note:** The email address of the owner must belong to a Google account,
 * such as a Gmail account, a Google Workspace account, or a GCP service account.
 * 
 * Working with site verification requires the `https://www.googleapis.com/auth/siteverification`
 * authentication scope. See the
 * Google Provider authentication documentation
 * to learn how to configure additional scopes.
 * 
 * To get more information about site owners, see:
 * 
 * * [API documentation](https://developers.google.com/site-verification/v1)
 * * How-to Guides
 *     * [Getting Started](https://developers.google.com/site-verification/v1/getting_started)
 * 
 * ## Example Usage
 * 
 * ### Site Verification Storage Bucket
 * 
 * This example uses the `FILE` verification method to verify ownership of web site hosted
 * in a Google Cloud Storage bucket. Ownership is proved by creating a file with a Google-provided
 * value in a known location. The user applying this configuration will automatically be
 * added as a verified owner, and the `gcp.siteverification.Owner` resource will add
 * `user{@literal @}example.com` as an additional owner.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.siteverification.SiteverificationFunctions;
 * import com.pulumi.gcp.siteverification.inputs.GetTokenArgs;
 * import com.pulumi.gcp.storage.BucketObject;
 * import com.pulumi.gcp.storage.BucketObjectArgs;
 * import com.pulumi.gcp.storage.ObjectAccessControl;
 * import com.pulumi.gcp.storage.ObjectAccessControlArgs;
 * import com.pulumi.gcp.siteverification.WebResource;
 * import com.pulumi.gcp.siteverification.WebResourceArgs;
 * import com.pulumi.gcp.siteverification.inputs.WebResourceSiteArgs;
 * import com.pulumi.gcp.siteverification.Owner;
 * import com.pulumi.gcp.siteverification.OwnerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var bucket = new Bucket("bucket", BucketArgs.builder()
 *             .name("example-storage-bucket")
 *             .location("US")
 *             .build());
 * 
 *         final var token = SiteverificationFunctions.getToken(GetTokenArgs.builder()
 *             .type("SITE")
 *             .identifier(bucket.name().applyValue(_name -> String.format("https://%s.storage.googleapis.com/", _name)))
 *             .verificationMethod("FILE")
 *             .build());
 * 
 *         var object = new BucketObject("object", BucketObjectArgs.builder()
 *             .name(token.applyValue(_token -> _token.token()))
 *             .content(token.applyValue(_token -> String.format("google-site-verification: %s", _token.token())))
 *             .bucket(bucket.name())
 *             .build());
 * 
 *         var publicRule = new ObjectAccessControl("publicRule", ObjectAccessControlArgs.builder()
 *             .bucket(bucket.name())
 *             .object(object.name())
 *             .role("READER")
 *             .entity("allUsers")
 *             .build());
 * 
 *         var example = new WebResource("example", WebResourceArgs.builder()
 *             .site(WebResourceSiteArgs.builder()
 *                 .type(token.applyValue(_token -> _token.type()))
 *                 .identifier(token.applyValue(_token -> _token.identifier()))
 *                 .build())
 *             .verificationMethod(token.applyValue(_token -> _token.verificationMethod()))
 *             .build());
 * 
 *         var exampleOwner = new Owner("exampleOwner", OwnerArgs.builder()
 *             .webResourceId(example.id())
 *             .email("user}{@literal @}{@code example.com")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Owner can be imported using this format:
 * 
 * * `webResource/{{web_resource_id}}/{{email}}`
 * 
 * When using the `pulumi import` command, Site owners can be imported using the format above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:siteverification/owner:Owner default webResource/{{web_resource_id}}/{{email}}
 * ```
 * 
 * verified owners is to delete the web resource itself.
 * 
 */
@ResourceType(type="gcp:siteverification/owner:Owner")
public class Owner extends com.pulumi.resources.CustomResource {
    /**
     * The email of the user to be added as an owner.
     * 
     * ***
     * 
     */
    @Export(name="email", refs={String.class}, tree="[0]")
    private Output<String> email;

    /**
     * @return The email of the user to be added as an owner.
     * 
     * ***
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * The id of of the web resource to which the owner will be added, in the form `webResource/&lt;resource_id&gt;`,
     * such as `webResource/https://www.example.com/`
     * 
     */
    @Export(name="webResourceId", refs={String.class}, tree="[0]")
    private Output<String> webResourceId;

    /**
     * @return The id of of the web resource to which the owner will be added, in the form `webResource/&lt;resource_id&gt;`,
     * such as `webResource/https://www.example.com/`
     * 
     */
    public Output<String> webResourceId() {
        return this.webResourceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Owner(java.lang.String name) {
        this(name, OwnerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Owner(java.lang.String name, OwnerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Owner(java.lang.String name, OwnerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:siteverification/owner:Owner", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Owner(java.lang.String name, Output<java.lang.String> id, @Nullable OwnerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:siteverification/owner:Owner", name, state, makeResourceOptions(options, id), false);
    }

    private static OwnerArgs makeArgs(OwnerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OwnerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Owner get(java.lang.String name, Output<java.lang.String> id, @Nullable OwnerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Owner(name, id, state, options);
    }
}
