// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.servicenetworking;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcServiceControlsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcServiceControlsArgs Empty = new VpcServiceControlsArgs();

    /**
     * Desired VPC Service Controls state service producer VPC network, as
     * described at the top of this page.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Desired VPC Service Controls state service producer VPC network, as
     * described at the top of this page.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The network that the consumer is using to connect with services.
     * 
     */
    @Import(name="network", required=true)
    private Output<String> network;

    /**
     * @return The network that the consumer is using to connect with services.
     * 
     */
    public Output<String> network() {
        return this.network;
    }

    /**
     * The id of the Google Cloud project containing the consumer network.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The id of the Google Cloud project containing the consumer network.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The service that is managing peering connectivity for a service
     * producer&#39;s organization. For Google services that support this
     * functionality, this value is `servicenetworking.googleapis.com`.
     * 
     */
    @Import(name="service", required=true)
    private Output<String> service;

    /**
     * @return The service that is managing peering connectivity for a service
     * producer&#39;s organization. For Google services that support this
     * functionality, this value is `servicenetworking.googleapis.com`.
     * 
     */
    public Output<String> service() {
        return this.service;
    }

    private VpcServiceControlsArgs() {}

    private VpcServiceControlsArgs(VpcServiceControlsArgs $) {
        this.enabled = $.enabled;
        this.network = $.network;
        this.project = $.project;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcServiceControlsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcServiceControlsArgs $;

        public Builder() {
            $ = new VpcServiceControlsArgs();
        }

        public Builder(VpcServiceControlsArgs defaults) {
            $ = new VpcServiceControlsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Desired VPC Service Controls state service producer VPC network, as
         * described at the top of this page.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Desired VPC Service Controls state service producer VPC network, as
         * described at the top of this page.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param network The network that the consumer is using to connect with services.
         * 
         * @return builder
         * 
         */
        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The network that the consumer is using to connect with services.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param project The id of the Google Cloud project containing the consumer network.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The id of the Google Cloud project containing the consumer network.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param service The service that is managing peering connectivity for a service
         * producer&#39;s organization. For Google services that support this
         * functionality, this value is `servicenetworking.googleapis.com`.
         * 
         * @return builder
         * 
         */
        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service The service that is managing peering connectivity for a service
         * producer&#39;s organization. For Google services that support this
         * functionality, this value is `servicenetworking.googleapis.com`.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        public VpcServiceControlsArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("VpcServiceControlsArgs", "enabled");
            }
            if ($.network == null) {
                throw new MissingRequiredPropertyException("VpcServiceControlsArgs", "network");
            }
            if ($.service == null) {
                throw new MissingRequiredPropertyException("VpcServiceControlsArgs", "service");
            }
            return $;
        }
    }

}
