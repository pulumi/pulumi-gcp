// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs Empty = new ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs();

    /**
     * Hours of day in 24 hour format. Should be from 0 to 23.
     * 
     */
    @Import(name="hours", required=true)
    private Output<Integer> hours;

    /**
     * @return Hours of day in 24 hour format. Should be from 0 to 23.
     * 
     */
    public Output<Integer> hours() {
        return this.hours;
    }

    /**
     * Minutes of hour of day. Currently, only the value 0 is supported.
     * 
     */
    @Import(name="minutes")
    private @Nullable Output<Integer> minutes;

    /**
     * @return Minutes of hour of day. Currently, only the value 0 is supported.
     * 
     */
    public Optional<Output<Integer>> minutes() {
        return Optional.ofNullable(this.minutes);
    }

    /**
     * Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.
     * 
     */
    @Import(name="nanos")
    private @Nullable Output<Integer> nanos;

    /**
     * @return Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.
     * 
     */
    public Optional<Output<Integer>> nanos() {
        return Optional.ofNullable(this.nanos);
    }

    /**
     * Seconds of minutes of the time. Currently, only the value 0 is supported.
     * 
     */
    @Import(name="seconds")
    private @Nullable Output<Integer> seconds;

    /**
     * @return Seconds of minutes of the time. Currently, only the value 0 is supported.
     * 
     */
    public Optional<Output<Integer>> seconds() {
        return Optional.ofNullable(this.seconds);
    }

    private ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs() {}

    private ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs(ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs $) {
        this.hours = $.hours;
        this.minutes = $.minutes;
        this.nanos = $.nanos;
        this.seconds = $.seconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs $;

        public Builder() {
            $ = new ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs();
        }

        public Builder(ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs defaults) {
            $ = new ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hours Hours of day in 24 hour format. Should be from 0 to 23.
         * 
         * @return builder
         * 
         */
        public Builder hours(Output<Integer> hours) {
            $.hours = hours;
            return this;
        }

        /**
         * @param hours Hours of day in 24 hour format. Should be from 0 to 23.
         * 
         * @return builder
         * 
         */
        public Builder hours(Integer hours) {
            return hours(Output.of(hours));
        }

        /**
         * @param minutes Minutes of hour of day. Currently, only the value 0 is supported.
         * 
         * @return builder
         * 
         */
        public Builder minutes(@Nullable Output<Integer> minutes) {
            $.minutes = minutes;
            return this;
        }

        /**
         * @param minutes Minutes of hour of day. Currently, only the value 0 is supported.
         * 
         * @return builder
         * 
         */
        public Builder minutes(Integer minutes) {
            return minutes(Output.of(minutes));
        }

        /**
         * @param nanos Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.
         * 
         * @return builder
         * 
         */
        public Builder nanos(@Nullable Output<Integer> nanos) {
            $.nanos = nanos;
            return this;
        }

        /**
         * @param nanos Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.
         * 
         * @return builder
         * 
         */
        public Builder nanos(Integer nanos) {
            return nanos(Output.of(nanos));
        }

        /**
         * @param seconds Seconds of minutes of the time. Currently, only the value 0 is supported.
         * 
         * @return builder
         * 
         */
        public Builder seconds(@Nullable Output<Integer> seconds) {
            $.seconds = seconds;
            return this;
        }

        /**
         * @param seconds Seconds of minutes of the time. Currently, only the value 0 is supported.
         * 
         * @return builder
         * 
         */
        public Builder seconds(Integer seconds) {
            return seconds(Output.of(seconds));
        }

        public ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs build() {
            if ($.hours == null) {
                throw new MissingRequiredPropertyException("ClusterMaintenanceUpdatePolicyMaintenanceWindowStartTimeArgs", "hours");
            }
            return $;
        }
    }

}
