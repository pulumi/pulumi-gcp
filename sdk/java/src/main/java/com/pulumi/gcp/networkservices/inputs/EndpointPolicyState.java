// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networkservices.inputs.EndpointPolicyEndpointMatcherArgs;
import com.pulumi.gcp.networkservices.inputs.EndpointPolicyTrafficPortSelectorArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final EndpointPolicyState Empty = new EndpointPolicyState();

    /**
     * This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints.
     * 
     */
    @Import(name="authorizationPolicy")
    private @Nullable Output<String> authorizationPolicy;

    /**
     * @return This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints.
     * 
     */
    public Optional<Output<String>> authorizationPolicy() {
        return Optional.ofNullable(this.authorizationPolicy);
    }

    /**
     * A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints.
     * 
     */
    @Import(name="clientTlsPolicy")
    private @Nullable Output<String> clientTlsPolicy;

    /**
     * @return A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints.
     * 
     */
    public Optional<Output<String>> clientTlsPolicy() {
        return Optional.ofNullable(this.clientTlsPolicy);
    }

    /**
     * Time the TcpRoute was created in UTC.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Time the TcpRoute was created in UTC.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * A free-text description of the resource. Max length 1024 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A free-text description of the resource. Max length 1024 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * Required. A matcher that selects endpoints to which the policies should be applied.
     * Structure is documented below.
     * 
     */
    @Import(name="endpointMatcher")
    private @Nullable Output<EndpointPolicyEndpointMatcherArgs> endpointMatcher;

    /**
     * @return Required. A matcher that selects endpoints to which the policies should be applied.
     * Structure is documented below.
     * 
     */
    public Optional<Output<EndpointPolicyEndpointMatcherArgs>> endpointMatcher() {
        return Optional.ofNullable(this.endpointMatcher);
    }

    /**
     * Set of label tags associated with the TcpRoute resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Set of label tags associated with the TcpRoute resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Name of the EndpointPolicy resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the EndpointPolicy resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends.
     * 
     */
    @Import(name="serverTlsPolicy")
    private @Nullable Output<String> serverTlsPolicy;

    /**
     * @return A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends.
     * 
     */
    public Optional<Output<String>> serverTlsPolicy() {
        return Optional.ofNullable(this.serverTlsPolicy);
    }

    /**
     * Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
     * Structure is documented below.
     * 
     */
    @Import(name="trafficPortSelector")
    private @Nullable Output<EndpointPolicyTrafficPortSelectorArgs> trafficPortSelector;

    /**
     * @return Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
     * Structure is documented below.
     * 
     */
    public Optional<Output<EndpointPolicyTrafficPortSelectorArgs>> trafficPortSelector() {
        return Optional.ofNullable(this.trafficPortSelector);
    }

    /**
     * The type of endpoint policy. This is primarily used to validate the configuration.
     * Possible values are: `SIDECAR_PROXY`, `GRPC_SERVER`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of endpoint policy. This is primarily used to validate the configuration.
     * Possible values are: `SIDECAR_PROXY`, `GRPC_SERVER`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Time the TcpRoute was updated in UTC.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Time the TcpRoute was updated in UTC.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private EndpointPolicyState() {}

    private EndpointPolicyState(EndpointPolicyState $) {
        this.authorizationPolicy = $.authorizationPolicy;
        this.clientTlsPolicy = $.clientTlsPolicy;
        this.createTime = $.createTime;
        this.description = $.description;
        this.effectiveLabels = $.effectiveLabels;
        this.endpointMatcher = $.endpointMatcher;
        this.labels = $.labels;
        this.name = $.name;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.serverTlsPolicy = $.serverTlsPolicy;
        this.trafficPortSelector = $.trafficPortSelector;
        this.type = $.type;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointPolicyState $;

        public Builder() {
            $ = new EndpointPolicyState();
        }

        public Builder(EndpointPolicyState defaults) {
            $ = new EndpointPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizationPolicy This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints.
         * 
         * @return builder
         * 
         */
        public Builder authorizationPolicy(@Nullable Output<String> authorizationPolicy) {
            $.authorizationPolicy = authorizationPolicy;
            return this;
        }

        /**
         * @param authorizationPolicy This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints.
         * 
         * @return builder
         * 
         */
        public Builder authorizationPolicy(String authorizationPolicy) {
            return authorizationPolicy(Output.of(authorizationPolicy));
        }

        /**
         * @param clientTlsPolicy A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints.
         * 
         * @return builder
         * 
         */
        public Builder clientTlsPolicy(@Nullable Output<String> clientTlsPolicy) {
            $.clientTlsPolicy = clientTlsPolicy;
            return this;
        }

        /**
         * @param clientTlsPolicy A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints.
         * 
         * @return builder
         * 
         */
        public Builder clientTlsPolicy(String clientTlsPolicy) {
            return clientTlsPolicy(Output.of(clientTlsPolicy));
        }

        /**
         * @param createTime Time the TcpRoute was created in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Time the TcpRoute was created in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description A free-text description of the resource. Max length 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A free-text description of the resource. Max length 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param endpointMatcher Required. A matcher that selects endpoints to which the policies should be applied.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpointMatcher(@Nullable Output<EndpointPolicyEndpointMatcherArgs> endpointMatcher) {
            $.endpointMatcher = endpointMatcher;
            return this;
        }

        /**
         * @param endpointMatcher Required. A matcher that selects endpoints to which the policies should be applied.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpointMatcher(EndpointPolicyEndpointMatcherArgs endpointMatcher) {
            return endpointMatcher(Output.of(endpointMatcher));
        }

        /**
         * @param labels Set of label tags associated with the TcpRoute resource.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Set of label tags associated with the TcpRoute resource.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name Name of the EndpointPolicy resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the EndpointPolicy resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param serverTlsPolicy A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends.
         * 
         * @return builder
         * 
         */
        public Builder serverTlsPolicy(@Nullable Output<String> serverTlsPolicy) {
            $.serverTlsPolicy = serverTlsPolicy;
            return this;
        }

        /**
         * @param serverTlsPolicy A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends.
         * 
         * @return builder
         * 
         */
        public Builder serverTlsPolicy(String serverTlsPolicy) {
            return serverTlsPolicy(Output.of(serverTlsPolicy));
        }

        /**
         * @param trafficPortSelector Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trafficPortSelector(@Nullable Output<EndpointPolicyTrafficPortSelectorArgs> trafficPortSelector) {
            $.trafficPortSelector = trafficPortSelector;
            return this;
        }

        /**
         * @param trafficPortSelector Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trafficPortSelector(EndpointPolicyTrafficPortSelectorArgs trafficPortSelector) {
            return trafficPortSelector(Output.of(trafficPortSelector));
        }

        /**
         * @param type The type of endpoint policy. This is primarily used to validate the configuration.
         * Possible values are: `SIDECAR_PROXY`, `GRPC_SERVER`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of endpoint policy. This is primarily used to validate the configuration.
         * Possible values are: `SIDECAR_PROXY`, `GRPC_SERVER`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param updateTime Time the TcpRoute was updated in UTC.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Time the TcpRoute was updated in UTC.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public EndpointPolicyState build() {
            return $;
        }
    }

}
