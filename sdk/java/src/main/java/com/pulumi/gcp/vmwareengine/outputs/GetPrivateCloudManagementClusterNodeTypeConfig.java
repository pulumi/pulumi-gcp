// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPrivateCloudManagementClusterNodeTypeConfig {
    /**
     * @return Customized number of cores available to each node of the type.
     * This number must always be one of &#39;nodeType.availableCustomCoreCounts&#39;.
     * If zero is provided max value from &#39;nodeType.availableCustomCoreCounts&#39; will be used.
     * This cannot be changed once the PrivateCloud is created.
     * 
     */
    private Integer customCoreCount;
    /**
     * @return The number of nodes of this type in the cluster.
     * 
     */
    private Integer nodeCount;
    private String nodeTypeId;

    private GetPrivateCloudManagementClusterNodeTypeConfig() {}
    /**
     * @return Customized number of cores available to each node of the type.
     * This number must always be one of &#39;nodeType.availableCustomCoreCounts&#39;.
     * If zero is provided max value from &#39;nodeType.availableCustomCoreCounts&#39; will be used.
     * This cannot be changed once the PrivateCloud is created.
     * 
     */
    public Integer customCoreCount() {
        return this.customCoreCount;
    }
    /**
     * @return The number of nodes of this type in the cluster.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    public String nodeTypeId() {
        return this.nodeTypeId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateCloudManagementClusterNodeTypeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer customCoreCount;
        private Integer nodeCount;
        private String nodeTypeId;
        public Builder() {}
        public Builder(GetPrivateCloudManagementClusterNodeTypeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customCoreCount = defaults.customCoreCount;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodeTypeId = defaults.nodeTypeId;
        }

        @CustomType.Setter
        public Builder customCoreCount(Integer customCoreCount) {
            if (customCoreCount == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudManagementClusterNodeTypeConfig", "customCoreCount");
            }
            this.customCoreCount = customCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            if (nodeCount == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudManagementClusterNodeTypeConfig", "nodeCount");
            }
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder nodeTypeId(String nodeTypeId) {
            if (nodeTypeId == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudManagementClusterNodeTypeConfig", "nodeTypeId");
            }
            this.nodeTypeId = nodeTypeId;
            return this;
        }
        public GetPrivateCloudManagementClusterNodeTypeConfig build() {
            final var _resultValue = new GetPrivateCloudManagementClusterNodeTypeConfig();
            _resultValue.customCoreCount = customCoreCount;
            _resultValue.nodeCount = nodeCount;
            _resultValue.nodeTypeId = nodeTypeId;
            return _resultValue;
        }
    }
}
