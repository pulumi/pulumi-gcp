// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.apigateway.inputs.ApiConfigGatewayConfigBackendConfigArgs;
import java.util.Objects;


public final class ApiConfigGatewayConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiConfigGatewayConfigArgs Empty = new ApiConfigGatewayConfigArgs();

    /**
     * Backend settings that are applied to all backends of the Gateway.
     * Structure is documented below.
     * 
     */
    @Import(name="backendConfig", required=true)
    private Output<ApiConfigGatewayConfigBackendConfigArgs> backendConfig;

    /**
     * @return Backend settings that are applied to all backends of the Gateway.
     * Structure is documented below.
     * 
     */
    public Output<ApiConfigGatewayConfigBackendConfigArgs> backendConfig() {
        return this.backendConfig;
    }

    private ApiConfigGatewayConfigArgs() {}

    private ApiConfigGatewayConfigArgs(ApiConfigGatewayConfigArgs $) {
        this.backendConfig = $.backendConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiConfigGatewayConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiConfigGatewayConfigArgs $;

        public Builder() {
            $ = new ApiConfigGatewayConfigArgs();
        }

        public Builder(ApiConfigGatewayConfigArgs defaults) {
            $ = new ApiConfigGatewayConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendConfig Backend settings that are applied to all backends of the Gateway.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder backendConfig(Output<ApiConfigGatewayConfigBackendConfigArgs> backendConfig) {
            $.backendConfig = backendConfig;
            return this;
        }

        /**
         * @param backendConfig Backend settings that are applied to all backends of the Gateway.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder backendConfig(ApiConfigGatewayConfigBackendConfigArgs backendConfig) {
            return backendConfig(Output.of(backendConfig));
        }

        public ApiConfigGatewayConfigArgs build() {
            $.backendConfig = Objects.requireNonNull($.backendConfig, "expected parameter 'backendConfig' to be non-null");
            return $;
        }
    }

}
