// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.discoveryengine.inputs.DataStoreDocumentProcessingConfigDefaultParsingConfigDigitalParsingConfigArgs;
import com.pulumi.gcp.discoveryengine.inputs.DataStoreDocumentProcessingConfigDefaultParsingConfigLayoutParsingConfigArgs;
import com.pulumi.gcp.discoveryengine.inputs.DataStoreDocumentProcessingConfigDefaultParsingConfigOcrParsingConfigArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataStoreDocumentProcessingConfigDefaultParsingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataStoreDocumentProcessingConfigDefaultParsingConfigArgs Empty = new DataStoreDocumentProcessingConfigDefaultParsingConfigArgs();

    /**
     * Configurations applied to digital parser.
     * 
     */
    @Import(name="digitalParsingConfig")
    private @Nullable Output<DataStoreDocumentProcessingConfigDefaultParsingConfigDigitalParsingConfigArgs> digitalParsingConfig;

    /**
     * @return Configurations applied to digital parser.
     * 
     */
    public Optional<Output<DataStoreDocumentProcessingConfigDefaultParsingConfigDigitalParsingConfigArgs>> digitalParsingConfig() {
        return Optional.ofNullable(this.digitalParsingConfig);
    }

    /**
     * Configurations applied to layout parser.
     * Structure is documented below.
     * 
     */
    @Import(name="layoutParsingConfig")
    private @Nullable Output<DataStoreDocumentProcessingConfigDefaultParsingConfigLayoutParsingConfigArgs> layoutParsingConfig;

    /**
     * @return Configurations applied to layout parser.
     * Structure is documented below.
     * 
     */
    public Optional<Output<DataStoreDocumentProcessingConfigDefaultParsingConfigLayoutParsingConfigArgs>> layoutParsingConfig() {
        return Optional.ofNullable(this.layoutParsingConfig);
    }

    /**
     * Configurations applied to OCR parser. Currently it only applies to PDFs.
     * Structure is documented below.
     * 
     */
    @Import(name="ocrParsingConfig")
    private @Nullable Output<DataStoreDocumentProcessingConfigDefaultParsingConfigOcrParsingConfigArgs> ocrParsingConfig;

    /**
     * @return Configurations applied to OCR parser. Currently it only applies to PDFs.
     * Structure is documented below.
     * 
     */
    public Optional<Output<DataStoreDocumentProcessingConfigDefaultParsingConfigOcrParsingConfigArgs>> ocrParsingConfig() {
        return Optional.ofNullable(this.ocrParsingConfig);
    }

    private DataStoreDocumentProcessingConfigDefaultParsingConfigArgs() {}

    private DataStoreDocumentProcessingConfigDefaultParsingConfigArgs(DataStoreDocumentProcessingConfigDefaultParsingConfigArgs $) {
        this.digitalParsingConfig = $.digitalParsingConfig;
        this.layoutParsingConfig = $.layoutParsingConfig;
        this.ocrParsingConfig = $.ocrParsingConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataStoreDocumentProcessingConfigDefaultParsingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataStoreDocumentProcessingConfigDefaultParsingConfigArgs $;

        public Builder() {
            $ = new DataStoreDocumentProcessingConfigDefaultParsingConfigArgs();
        }

        public Builder(DataStoreDocumentProcessingConfigDefaultParsingConfigArgs defaults) {
            $ = new DataStoreDocumentProcessingConfigDefaultParsingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param digitalParsingConfig Configurations applied to digital parser.
         * 
         * @return builder
         * 
         */
        public Builder digitalParsingConfig(@Nullable Output<DataStoreDocumentProcessingConfigDefaultParsingConfigDigitalParsingConfigArgs> digitalParsingConfig) {
            $.digitalParsingConfig = digitalParsingConfig;
            return this;
        }

        /**
         * @param digitalParsingConfig Configurations applied to digital parser.
         * 
         * @return builder
         * 
         */
        public Builder digitalParsingConfig(DataStoreDocumentProcessingConfigDefaultParsingConfigDigitalParsingConfigArgs digitalParsingConfig) {
            return digitalParsingConfig(Output.of(digitalParsingConfig));
        }

        /**
         * @param layoutParsingConfig Configurations applied to layout parser.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder layoutParsingConfig(@Nullable Output<DataStoreDocumentProcessingConfigDefaultParsingConfigLayoutParsingConfigArgs> layoutParsingConfig) {
            $.layoutParsingConfig = layoutParsingConfig;
            return this;
        }

        /**
         * @param layoutParsingConfig Configurations applied to layout parser.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder layoutParsingConfig(DataStoreDocumentProcessingConfigDefaultParsingConfigLayoutParsingConfigArgs layoutParsingConfig) {
            return layoutParsingConfig(Output.of(layoutParsingConfig));
        }

        /**
         * @param ocrParsingConfig Configurations applied to OCR parser. Currently it only applies to PDFs.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ocrParsingConfig(@Nullable Output<DataStoreDocumentProcessingConfigDefaultParsingConfigOcrParsingConfigArgs> ocrParsingConfig) {
            $.ocrParsingConfig = ocrParsingConfig;
            return this;
        }

        /**
         * @param ocrParsingConfig Configurations applied to OCR parser. Currently it only applies to PDFs.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ocrParsingConfig(DataStoreDocumentProcessingConfigDefaultParsingConfigOcrParsingConfigArgs ocrParsingConfig) {
            return ocrParsingConfig(Output.of(ocrParsingConfig));
        }

        public DataStoreDocumentProcessingConfigDefaultParsingConfigArgs build() {
            return $;
        }
    }

}
