// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apigee.SecurityProfileV2Args;
import com.pulumi.gcp.apigee.inputs.SecurityProfileV2State;
import com.pulumi.gcp.apigee.outputs.SecurityProfileV2ProfileAssessmentConfig;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Security profile for risk assessment version 2 in Apigee.
 * 
 * To get more information about SecurityProfileV2, see:
 * 
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.securityProfilesV2/create)
 * * How-to Guides
 *     * [Creating a security profile](https://cloud.google.com/apigee/docs/api-security/security-scores#security-profiles-v2)
 * 
 * ## Example Usage
 * 
 * ### Apigee Security Profile V2 Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.GlobalAddress;
 * import com.pulumi.gcp.compute.GlobalAddressArgs;
 * import com.pulumi.gcp.servicenetworking.Connection;
 * import com.pulumi.gcp.servicenetworking.ConnectionArgs;
 * import com.pulumi.gcp.apigee.Organization;
 * import com.pulumi.gcp.apigee.OrganizationArgs;
 * import com.pulumi.gcp.apigee.AddonsConfig;
 * import com.pulumi.gcp.apigee.AddonsConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.AddonsConfigAddonsConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.AddonsConfigAddonsConfigApiSecurityConfigArgs;
 * import com.pulumi.gcp.apigee.SecurityProfileV2;
 * import com.pulumi.gcp.apigee.SecurityProfileV2Args;
 * import com.pulumi.gcp.apigee.inputs.SecurityProfileV2ProfileAssessmentConfigArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = OrganizationsFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var apigeeNetwork = new Network("apigeeNetwork", NetworkArgs.builder()
 *             .name("apigee-network")
 *             .build());
 * 
 *         var apigeeRange = new GlobalAddress("apigeeRange", GlobalAddressArgs.builder()
 *             .name("apigee-range")
 *             .purpose("VPC_PEERING")
 *             .addressType("INTERNAL")
 *             .prefixLength(16)
 *             .network(apigeeNetwork.id())
 *             .build());
 * 
 *         var apigeeVpcConnection = new Connection("apigeeVpcConnection", ConnectionArgs.builder()
 *             .network(apigeeNetwork.id())
 *             .service("servicenetworking.googleapis.com")
 *             .reservedPeeringRanges(apigeeRange.name())
 *             .build());
 * 
 *         var apigeeOrg = new Organization("apigeeOrg", OrganizationArgs.builder()
 *             .analyticsRegion("us-central1")
 *             .projectId(current.project())
 *             .authorizedNetwork(apigeeNetwork.id())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(apigeeVpcConnection)
 *                 .build());
 * 
 *         var apigeeOrgSecurityAddonsConfig = new AddonsConfig("apigeeOrgSecurityAddonsConfig", AddonsConfigArgs.builder()
 *             .org(apigeeOrg.name())
 *             .addonsConfig(AddonsConfigAddonsConfigArgs.builder()
 *                 .apiSecurityConfig(AddonsConfigAddonsConfigApiSecurityConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var securityProfileV2 = new SecurityProfileV2("securityProfileV2", SecurityProfileV2Args.builder()
 *             .profileId("my-profile")
 *             .orgId(apigeeOrg.id())
 *             .description("terraform test description")
 *             .profileAssessmentConfigs(            
 *                 SecurityProfileV2ProfileAssessmentConfigArgs.builder()
 *                     .assessment("auth-policies-check")
 *                     .weight("MAJOR")
 *                     .build(),
 *                 SecurityProfileV2ProfileAssessmentConfigArgs.builder()
 *                     .assessment("mediation-policies-check")
 *                     .weight("MODERATE")
 *                     .build(),
 *                 SecurityProfileV2ProfileAssessmentConfigArgs.builder()
 *                     .assessment("threat-policies-check")
 *                     .weight("MINOR")
 *                     .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(apigeeOrgSecurityAddonsConfig)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * SecurityProfileV2 can be imported using any of these accepted formats:
 * 
 * * `{{org_id}}/securityProfilesV2/{{profile_id}}`
 * 
 * * `{{org_id}}/{{profile_id}}`
 * 
 * When using the `pulumi import` command, SecurityProfileV2 can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apigee/securityProfileV2:SecurityProfileV2 default {{org_id}}/securityProfilesV2/{{profile_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apigee/securityProfileV2:SecurityProfileV2 default {{org_id}}/{{profile_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apigee/securityProfileV2:SecurityProfileV2")
public class SecurityProfileV2 extends com.pulumi.resources.CustomResource {
    /**
     * The timestamp at which this profile was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The timestamp at which this profile was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Description of the security profile.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the security profile.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Name of the security profile v2 resource,
     * in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the security profile v2 resource,
     * in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Apigee Organization associated with the Apigee Security Profile V2,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return The Apigee Organization associated with the Apigee Security Profile V2,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * A map of the assessment name and the assessment config.
     * Structure is documented below.
     * 
     */
    @Export(name="profileAssessmentConfigs", refs={List.class,SecurityProfileV2ProfileAssessmentConfig.class}, tree="[0,1]")
    private Output<List<SecurityProfileV2ProfileAssessmentConfig>> profileAssessmentConfigs;

    /**
     * @return A map of the assessment name and the assessment config.
     * Structure is documented below.
     * 
     */
    public Output<List<SecurityProfileV2ProfileAssessmentConfig>> profileAssessmentConfigs() {
        return this.profileAssessmentConfigs;
    }
    /**
     * Resource ID of the security profile.
     * 
     */
    @Export(name="profileId", refs={String.class}, tree="[0]")
    private Output<String> profileId;

    /**
     * @return Resource ID of the security profile.
     * 
     */
    public Output<String> profileId() {
        return this.profileId;
    }
    /**
     * The timestamp at which this profile was most recently updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The timestamp at which this profile was most recently updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecurityProfileV2(java.lang.String name) {
        this(name, SecurityProfileV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecurityProfileV2(java.lang.String name, SecurityProfileV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecurityProfileV2(java.lang.String name, SecurityProfileV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/securityProfileV2:SecurityProfileV2", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SecurityProfileV2(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityProfileV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/securityProfileV2:SecurityProfileV2", name, state, makeResourceOptions(options, id), false);
    }

    private static SecurityProfileV2Args makeArgs(SecurityProfileV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SecurityProfileV2Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecurityProfileV2 get(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityProfileV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecurityProfileV2(name, id, state, options);
    }
}
