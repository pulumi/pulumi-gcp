// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfig {
    /**
     * @return When disableHighLatencyFeaturesSyncDelivery is true and using the AnalyzeContent API, we will not deliver the responses from high latency features in the API response. The humanAgentAssistantConfig.notification_config must be configured and enableEventBasedSuggestion must be set to true to receive the responses from high latency features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
     * 
     */
    private @Nullable Boolean disableHighLatencyFeaturesSyncDelivery;
    /**
     * @return Configuration of different suggestion features. One feature can have only one config.
     * Structure is documented below.
     * 
     */
    private @Nullable List<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfig> featureConfigs;
    /**
     * @return List of various generator resource names used in the conversation profile.
     * 
     */
    private @Nullable List<String> generators;
    /**
     * @return If groupSuggestionResponses is false, and there are multiple featureConfigs in event based suggestion or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or StreamingAnalyzeContentResponse.
     * If groupSuggestionResponses set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.
     * 
     */
    private @Nullable Boolean groupSuggestionResponses;

    private ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfig() {}
    /**
     * @return When disableHighLatencyFeaturesSyncDelivery is true and using the AnalyzeContent API, we will not deliver the responses from high latency features in the API response. The humanAgentAssistantConfig.notification_config must be configured and enableEventBasedSuggestion must be set to true to receive the responses from high latency features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
     * 
     */
    public Optional<Boolean> disableHighLatencyFeaturesSyncDelivery() {
        return Optional.ofNullable(this.disableHighLatencyFeaturesSyncDelivery);
    }
    /**
     * @return Configuration of different suggestion features. One feature can have only one config.
     * Structure is documented below.
     * 
     */
    public List<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfig> featureConfigs() {
        return this.featureConfigs == null ? List.of() : this.featureConfigs;
    }
    /**
     * @return List of various generator resource names used in the conversation profile.
     * 
     */
    public List<String> generators() {
        return this.generators == null ? List.of() : this.generators;
    }
    /**
     * @return If groupSuggestionResponses is false, and there are multiple featureConfigs in event based suggestion or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or StreamingAnalyzeContentResponse.
     * If groupSuggestionResponses set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.
     * 
     */
    public Optional<Boolean> groupSuggestionResponses() {
        return Optional.ofNullable(this.groupSuggestionResponses);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean disableHighLatencyFeaturesSyncDelivery;
        private @Nullable List<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfig> featureConfigs;
        private @Nullable List<String> generators;
        private @Nullable Boolean groupSuggestionResponses;
        public Builder() {}
        public Builder(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disableHighLatencyFeaturesSyncDelivery = defaults.disableHighLatencyFeaturesSyncDelivery;
    	      this.featureConfigs = defaults.featureConfigs;
    	      this.generators = defaults.generators;
    	      this.groupSuggestionResponses = defaults.groupSuggestionResponses;
        }

        @CustomType.Setter
        public Builder disableHighLatencyFeaturesSyncDelivery(@Nullable Boolean disableHighLatencyFeaturesSyncDelivery) {

            this.disableHighLatencyFeaturesSyncDelivery = disableHighLatencyFeaturesSyncDelivery;
            return this;
        }
        @CustomType.Setter
        public Builder featureConfigs(@Nullable List<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfig> featureConfigs) {

            this.featureConfigs = featureConfigs;
            return this;
        }
        public Builder featureConfigs(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfig... featureConfigs) {
            return featureConfigs(List.of(featureConfigs));
        }
        @CustomType.Setter
        public Builder generators(@Nullable List<String> generators) {

            this.generators = generators;
            return this;
        }
        public Builder generators(String... generators) {
            return generators(List.of(generators));
        }
        @CustomType.Setter
        public Builder groupSuggestionResponses(@Nullable Boolean groupSuggestionResponses) {

            this.groupSuggestionResponses = groupSuggestionResponses;
            return this;
        }
        public ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfig build() {
            final var _resultValue = new ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfig();
            _resultValue.disableHighLatencyFeaturesSyncDelivery = disableHighLatencyFeaturesSyncDelivery;
            _resultValue.featureConfigs = featureConfigs;
            _resultValue.generators = generators;
            _resultValue.groupSuggestionResponses = groupSuggestionResponses;
            return _resultValue;
        }
    }
}
