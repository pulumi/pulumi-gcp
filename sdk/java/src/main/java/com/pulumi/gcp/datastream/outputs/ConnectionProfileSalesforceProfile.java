// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.datastream.outputs.ConnectionProfileSalesforceProfileOauth2ClientCredentials;
import com.pulumi.gcp.datastream.outputs.ConnectionProfileSalesforceProfileUserCredentials;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionProfileSalesforceProfile {
    /**
     * @return Domain for the Salesforce Org.
     * 
     */
    private String domain;
    /**
     * @return OAuth credentials to use for Salesforce authentication.
     * Structure is documented below.
     * 
     */
    private @Nullable ConnectionProfileSalesforceProfileOauth2ClientCredentials oauth2ClientCredentials;
    /**
     * @return User credentials to use for Salesforce authentication.
     * Structure is documented below.
     * 
     */
    private @Nullable ConnectionProfileSalesforceProfileUserCredentials userCredentials;

    private ConnectionProfileSalesforceProfile() {}
    /**
     * @return Domain for the Salesforce Org.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return OAuth credentials to use for Salesforce authentication.
     * Structure is documented below.
     * 
     */
    public Optional<ConnectionProfileSalesforceProfileOauth2ClientCredentials> oauth2ClientCredentials() {
        return Optional.ofNullable(this.oauth2ClientCredentials);
    }
    /**
     * @return User credentials to use for Salesforce authentication.
     * Structure is documented below.
     * 
     */
    public Optional<ConnectionProfileSalesforceProfileUserCredentials> userCredentials() {
        return Optional.ofNullable(this.userCredentials);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionProfileSalesforceProfile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domain;
        private @Nullable ConnectionProfileSalesforceProfileOauth2ClientCredentials oauth2ClientCredentials;
        private @Nullable ConnectionProfileSalesforceProfileUserCredentials userCredentials;
        public Builder() {}
        public Builder(ConnectionProfileSalesforceProfile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.oauth2ClientCredentials = defaults.oauth2ClientCredentials;
    	      this.userCredentials = defaults.userCredentials;
        }

        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("ConnectionProfileSalesforceProfile", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder oauth2ClientCredentials(@Nullable ConnectionProfileSalesforceProfileOauth2ClientCredentials oauth2ClientCredentials) {

            this.oauth2ClientCredentials = oauth2ClientCredentials;
            return this;
        }
        @CustomType.Setter
        public Builder userCredentials(@Nullable ConnectionProfileSalesforceProfileUserCredentials userCredentials) {

            this.userCredentials = userCredentials;
            return this;
        }
        public ConnectionProfileSalesforceProfile build() {
            final var _resultValue = new ConnectionProfileSalesforceProfile();
            _resultValue.domain = domain;
            _resultValue.oauth2ClientCredentials = oauth2ClientCredentials;
            _resultValue.userCredentials = userCredentials;
            return _resultValue;
        }
    }
}
