// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class AwsNodePoolAutoscalingArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsNodePoolAutoscalingArgs Empty = new AwsNodePoolAutoscalingArgs();

    /**
     * Maximum number of nodes in the NodePool. Must be &gt;= min_node_count.
     * 
     */
    @Import(name="maxNodeCount", required=true)
    private Output<Integer> maxNodeCount;

    /**
     * @return Maximum number of nodes in the NodePool. Must be &gt;= min_node_count.
     * 
     */
    public Output<Integer> maxNodeCount() {
        return this.maxNodeCount;
    }

    /**
     * Minimum number of nodes in the NodePool. Must be &gt;= 1 and &lt;= max_node_count.
     * 
     */
    @Import(name="minNodeCount", required=true)
    private Output<Integer> minNodeCount;

    /**
     * @return Minimum number of nodes in the NodePool. Must be &gt;= 1 and &lt;= max_node_count.
     * 
     */
    public Output<Integer> minNodeCount() {
        return this.minNodeCount;
    }

    private AwsNodePoolAutoscalingArgs() {}

    private AwsNodePoolAutoscalingArgs(AwsNodePoolAutoscalingArgs $) {
        this.maxNodeCount = $.maxNodeCount;
        this.minNodeCount = $.minNodeCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsNodePoolAutoscalingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsNodePoolAutoscalingArgs $;

        public Builder() {
            $ = new AwsNodePoolAutoscalingArgs();
        }

        public Builder(AwsNodePoolAutoscalingArgs defaults) {
            $ = new AwsNodePoolAutoscalingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxNodeCount Maximum number of nodes in the NodePool. Must be &gt;= min_node_count.
         * 
         * @return builder
         * 
         */
        public Builder maxNodeCount(Output<Integer> maxNodeCount) {
            $.maxNodeCount = maxNodeCount;
            return this;
        }

        /**
         * @param maxNodeCount Maximum number of nodes in the NodePool. Must be &gt;= min_node_count.
         * 
         * @return builder
         * 
         */
        public Builder maxNodeCount(Integer maxNodeCount) {
            return maxNodeCount(Output.of(maxNodeCount));
        }

        /**
         * @param minNodeCount Minimum number of nodes in the NodePool. Must be &gt;= 1 and &lt;= max_node_count.
         * 
         * @return builder
         * 
         */
        public Builder minNodeCount(Output<Integer> minNodeCount) {
            $.minNodeCount = minNodeCount;
            return this;
        }

        /**
         * @param minNodeCount Minimum number of nodes in the NodePool. Must be &gt;= 1 and &lt;= max_node_count.
         * 
         * @return builder
         * 
         */
        public Builder minNodeCount(Integer minNodeCount) {
            return minNodeCount(Output.of(minNodeCount));
        }

        public AwsNodePoolAutoscalingArgs build() {
            if ($.maxNodeCount == null) {
                throw new MissingRequiredPropertyException("AwsNodePoolAutoscalingArgs", "maxNodeCount");
            }
            if ($.minNodeCount == null) {
                throw new MissingRequiredPropertyException("AwsNodePoolAutoscalingArgs", "minNodeCount");
            }
            return $;
        }
    }

}
