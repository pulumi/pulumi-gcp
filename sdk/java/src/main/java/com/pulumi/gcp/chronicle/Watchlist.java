// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.chronicle;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.chronicle.WatchlistArgs;
import com.pulumi.gcp.chronicle.inputs.WatchlistState;
import com.pulumi.gcp.chronicle.outputs.WatchlistEntityCount;
import com.pulumi.gcp.chronicle.outputs.WatchlistEntityPopulationMechanism;
import com.pulumi.gcp.chronicle.outputs.WatchlistWatchlistUserPreferences;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A watchlist is a list of entities that allows for bulk operations over the included entities.
 * 
 * To get more information about Watchlist, see:
 * 
 * * [API documentation](https://cloud.google.com/chronicle/docs/reference/rest/v1/projects.locations.instances.watchlists)
 * * How-to Guides
 *     * [Google SecOps Guides](https://cloud.google.com/chronicle/docs/secops/secops-overview)
 * 
 * ## Example Usage
 * 
 * ### Chronicle Watchlist Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.chronicle.Watchlist;
 * import com.pulumi.gcp.chronicle.WatchlistArgs;
 * import com.pulumi.gcp.chronicle.inputs.WatchlistEntityPopulationMechanismArgs;
 * import com.pulumi.gcp.chronicle.inputs.WatchlistEntityPopulationMechanismManualArgs;
 * import com.pulumi.gcp.chronicle.inputs.WatchlistWatchlistUserPreferencesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Watchlist("example", WatchlistArgs.builder()
 *             .location("us")
 *             .instance("00000000-0000-0000-0000-000000000000")
 *             .watchlistId("watchlist-id")
 *             .description("watchlist-description")
 *             .displayName("watchlist_name")
 *             .multiplyingFactor(1.0)
 *             .entityPopulationMechanism(WatchlistEntityPopulationMechanismArgs.builder()
 *                 .manual(WatchlistEntityPopulationMechanismManualArgs.builder()
 *                     .build())
 *                 .build())
 *             .watchlistUserPreferences(WatchlistWatchlistUserPreferencesArgs.builder()
 *                 .pinned(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Chronicle Watchlist Without Id
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.chronicle.Watchlist;
 * import com.pulumi.gcp.chronicle.WatchlistArgs;
 * import com.pulumi.gcp.chronicle.inputs.WatchlistEntityPopulationMechanismArgs;
 * import com.pulumi.gcp.chronicle.inputs.WatchlistEntityPopulationMechanismManualArgs;
 * import com.pulumi.gcp.chronicle.inputs.WatchlistWatchlistUserPreferencesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Watchlist("example", WatchlistArgs.builder()
 *             .location("us")
 *             .instance("00000000-0000-0000-0000-000000000000")
 *             .description("watchlist-description")
 *             .displayName("watchlist-name")
 *             .multiplyingFactor(1.0)
 *             .entityPopulationMechanism(WatchlistEntityPopulationMechanismArgs.builder()
 *                 .manual(WatchlistEntityPopulationMechanismManualArgs.builder()
 *                     .build())
 *                 .build())
 *             .watchlistUserPreferences(WatchlistWatchlistUserPreferencesArgs.builder()
 *                 .pinned(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Watchlist can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/instances/{{instance}}/watchlists/{{watchlist_id}}`
 * 
 * * `{{project}}/{{location}}/{{instance}}/{{watchlist_id}}`
 * 
 * * `{{location}}/{{instance}}/{{watchlist_id}}`
 * 
 * When using the `pulumi import` command, Watchlist can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:chronicle/watchlist:Watchlist default projects/{{project}}/locations/{{location}}/instances/{{instance}}/watchlists/{{watchlist_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:chronicle/watchlist:Watchlist default {{project}}/{{location}}/{{instance}}/{{watchlist_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:chronicle/watchlist:Watchlist default {{location}}/{{instance}}/{{watchlist_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:chronicle/watchlist:Watchlist")
public class Watchlist extends com.pulumi.resources.CustomResource {
    /**
     * Output only. Time the watchlist was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Output only. Time the watchlist was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Optional. Description of the watchlist.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Optional. Description of the watchlist.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Required. Display name of the watchlist.
     * Note that it must be at least one character and less than 63 characters
     * (https://google.aip.dev/148).
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return Required. Display name of the watchlist.
     * Note that it must be at least one character and less than 63 characters
     * (https://google.aip.dev/148).
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Count of different types of entities in the watchlist.
     * Structure is documented below.
     * 
     */
    @Export(name="entityCounts", refs={List.class,WatchlistEntityCount.class}, tree="[0,1]")
    private Output<List<WatchlistEntityCount>> entityCounts;

    /**
     * @return Count of different types of entities in the watchlist.
     * Structure is documented below.
     * 
     */
    public Output<List<WatchlistEntityCount>> entityCounts() {
        return this.entityCounts;
    }
    /**
     * Mechanism to populate entities in the watchlist.
     * Structure is documented below.
     * 
     */
    @Export(name="entityPopulationMechanism", refs={WatchlistEntityPopulationMechanism.class}, tree="[0]")
    private Output<WatchlistEntityPopulationMechanism> entityPopulationMechanism;

    /**
     * @return Mechanism to populate entities in the watchlist.
     * Structure is documented below.
     * 
     */
    public Output<WatchlistEntityPopulationMechanism> entityPopulationMechanism() {
        return this.entityPopulationMechanism;
    }
    /**
     * The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    @Export(name="instance", refs={String.class}, tree="[0]")
    private Output<String> instance;

    /**
     * @return The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    public Output<String> instance() {
        return this.instance;
    }
    /**
     * The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Optional. Weight applied to the risk score for entities
     * in this watchlist.
     * The default is 1.0 if it is not specified.
     * 
     */
    @Export(name="multiplyingFactor", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> multiplyingFactor;

    /**
     * @return Optional. Weight applied to the risk score for entities
     * in this watchlist.
     * The default is 1.0 if it is not specified.
     * 
     */
    public Output<Optional<Double>> multiplyingFactor() {
        return Codegen.optional(this.multiplyingFactor);
    }
    /**
     * Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Output only. Time the watchlist was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Output only. Time the watchlist was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * Optional. The ID to use for the watchlist,
     * which will become the final component of the watchlist&#39;s resource name.
     * This value should be 4-63 characters, and valid characters
     * are /a-z-/.
     * 
     */
    @Export(name="watchlistId", refs={String.class}, tree="[0]")
    private Output<String> watchlistId;

    /**
     * @return Optional. The ID to use for the watchlist,
     * which will become the final component of the watchlist&#39;s resource name.
     * This value should be 4-63 characters, and valid characters
     * are /a-z-/.
     * 
     */
    public Output<String> watchlistId() {
        return this.watchlistId;
    }
    /**
     * A collection of user preferences for watchlist UI configuration.
     * Structure is documented below.
     * 
     */
    @Export(name="watchlistUserPreferences", refs={WatchlistWatchlistUserPreferences.class}, tree="[0]")
    private Output<WatchlistWatchlistUserPreferences> watchlistUserPreferences;

    /**
     * @return A collection of user preferences for watchlist UI configuration.
     * Structure is documented below.
     * 
     */
    public Output<WatchlistWatchlistUserPreferences> watchlistUserPreferences() {
        return this.watchlistUserPreferences;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Watchlist(java.lang.String name) {
        this(name, WatchlistArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Watchlist(java.lang.String name, WatchlistArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Watchlist(java.lang.String name, WatchlistArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:chronicle/watchlist:Watchlist", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Watchlist(java.lang.String name, Output<java.lang.String> id, @Nullable WatchlistState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:chronicle/watchlist:Watchlist", name, state, makeResourceOptions(options, id), false);
    }

    private static WatchlistArgs makeArgs(WatchlistArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WatchlistArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Watchlist get(java.lang.String name, Output<java.lang.String> id, @Nullable WatchlistState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Watchlist(name, id, state, options);
    }
}
