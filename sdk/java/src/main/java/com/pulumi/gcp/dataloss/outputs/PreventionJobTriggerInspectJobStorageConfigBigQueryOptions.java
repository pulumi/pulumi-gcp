// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsExcludedField;
import com.pulumi.gcp.dataloss.outputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIdentifyingField;
import com.pulumi.gcp.dataloss.outputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIncludedField;
import com.pulumi.gcp.dataloss.outputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReference;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreventionJobTriggerInspectJobStorageConfigBigQueryOptions {
    /**
     * @return References to fields excluded from scanning.
     * This allows you to skip inspection of entire columns which you know have no findings.
     * Structure is documented below.
     * 
     */
    private @Nullable List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsExcludedField> excludedFields;
    /**
     * @return Specifies the BigQuery fields that will be returned with findings.
     * If not specified, no identifying fields will be returned for findings.
     * Structure is documented below.
     * 
     */
    private @Nullable List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIdentifyingField> identifyingFields;
    /**
     * @return Limit scanning only to these fields.
     * Structure is documented below.
     * 
     */
    private @Nullable List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIncludedField> includedFields;
    /**
     * @return Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted.
     * If not set, or if set to 0, all rows will be scanned. Only one of rowsLimit and rowsLimitPercent can be
     * specified. Cannot be used in conjunction with TimespanConfig.
     * 
     */
    private @Nullable Integer rowsLimit;
    /**
     * @return Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down.
     * Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of
     * rowsLimit and rowsLimitPercent can be specified. Cannot be used in conjunction with TimespanConfig.
     * 
     */
    private @Nullable Integer rowsLimitPercent;
    /**
     * @return How to sample rows if not all rows are scanned. Meaningful only when used in conjunction with either
     * rowsLimit or rowsLimitPercent. If not specified, rows are scanned in the order BigQuery reads them.
     * Default value is `TOP`.
     * Possible values are: `TOP`, `RANDOM_START`.
     * 
     */
    private @Nullable String sampleMethod;
    /**
     * @return Set of files to scan.
     * Structure is documented below.
     * 
     */
    private PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReference tableReference;

    private PreventionJobTriggerInspectJobStorageConfigBigQueryOptions() {}
    /**
     * @return References to fields excluded from scanning.
     * This allows you to skip inspection of entire columns which you know have no findings.
     * Structure is documented below.
     * 
     */
    public List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsExcludedField> excludedFields() {
        return this.excludedFields == null ? List.of() : this.excludedFields;
    }
    /**
     * @return Specifies the BigQuery fields that will be returned with findings.
     * If not specified, no identifying fields will be returned for findings.
     * Structure is documented below.
     * 
     */
    public List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIdentifyingField> identifyingFields() {
        return this.identifyingFields == null ? List.of() : this.identifyingFields;
    }
    /**
     * @return Limit scanning only to these fields.
     * Structure is documented below.
     * 
     */
    public List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIncludedField> includedFields() {
        return this.includedFields == null ? List.of() : this.includedFields;
    }
    /**
     * @return Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted.
     * If not set, or if set to 0, all rows will be scanned. Only one of rowsLimit and rowsLimitPercent can be
     * specified. Cannot be used in conjunction with TimespanConfig.
     * 
     */
    public Optional<Integer> rowsLimit() {
        return Optional.ofNullable(this.rowsLimit);
    }
    /**
     * @return Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down.
     * Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of
     * rowsLimit and rowsLimitPercent can be specified. Cannot be used in conjunction with TimespanConfig.
     * 
     */
    public Optional<Integer> rowsLimitPercent() {
        return Optional.ofNullable(this.rowsLimitPercent);
    }
    /**
     * @return How to sample rows if not all rows are scanned. Meaningful only when used in conjunction with either
     * rowsLimit or rowsLimitPercent. If not specified, rows are scanned in the order BigQuery reads them.
     * Default value is `TOP`.
     * Possible values are: `TOP`, `RANDOM_START`.
     * 
     */
    public Optional<String> sampleMethod() {
        return Optional.ofNullable(this.sampleMethod);
    }
    /**
     * @return Set of files to scan.
     * Structure is documented below.
     * 
     */
    public PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReference tableReference() {
        return this.tableReference;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionJobTriggerInspectJobStorageConfigBigQueryOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsExcludedField> excludedFields;
        private @Nullable List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIdentifyingField> identifyingFields;
        private @Nullable List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIncludedField> includedFields;
        private @Nullable Integer rowsLimit;
        private @Nullable Integer rowsLimitPercent;
        private @Nullable String sampleMethod;
        private PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReference tableReference;
        public Builder() {}
        public Builder(PreventionJobTriggerInspectJobStorageConfigBigQueryOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludedFields = defaults.excludedFields;
    	      this.identifyingFields = defaults.identifyingFields;
    	      this.includedFields = defaults.includedFields;
    	      this.rowsLimit = defaults.rowsLimit;
    	      this.rowsLimitPercent = defaults.rowsLimitPercent;
    	      this.sampleMethod = defaults.sampleMethod;
    	      this.tableReference = defaults.tableReference;
        }

        @CustomType.Setter
        public Builder excludedFields(@Nullable List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsExcludedField> excludedFields) {
            this.excludedFields = excludedFields;
            return this;
        }
        public Builder excludedFields(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsExcludedField... excludedFields) {
            return excludedFields(List.of(excludedFields));
        }
        @CustomType.Setter
        public Builder identifyingFields(@Nullable List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIdentifyingField> identifyingFields) {
            this.identifyingFields = identifyingFields;
            return this;
        }
        public Builder identifyingFields(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIdentifyingField... identifyingFields) {
            return identifyingFields(List.of(identifyingFields));
        }
        @CustomType.Setter
        public Builder includedFields(@Nullable List<PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIncludedField> includedFields) {
            this.includedFields = includedFields;
            return this;
        }
        public Builder includedFields(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsIncludedField... includedFields) {
            return includedFields(List.of(includedFields));
        }
        @CustomType.Setter
        public Builder rowsLimit(@Nullable Integer rowsLimit) {
            this.rowsLimit = rowsLimit;
            return this;
        }
        @CustomType.Setter
        public Builder rowsLimitPercent(@Nullable Integer rowsLimitPercent) {
            this.rowsLimitPercent = rowsLimitPercent;
            return this;
        }
        @CustomType.Setter
        public Builder sampleMethod(@Nullable String sampleMethod) {
            this.sampleMethod = sampleMethod;
            return this;
        }
        @CustomType.Setter
        public Builder tableReference(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReference tableReference) {
            this.tableReference = Objects.requireNonNull(tableReference);
            return this;
        }
        public PreventionJobTriggerInspectJobStorageConfigBigQueryOptions build() {
            final var o = new PreventionJobTriggerInspectJobStorageConfigBigQueryOptions();
            o.excludedFields = excludedFields;
            o.identifyingFields = identifyingFields;
            o.includedFields = includedFields;
            o.rowsLimit = rowsLimit;
            o.rowsLimitPercent = rowsLimitPercent;
            o.sampleMethod = sampleMethod;
            o.tableReference = tableReference;
            return o;
        }
    }
}
