// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.iam.outputs.WorkforcePoolProviderOidcClientSecret;
import com.pulumi.gcp.iam.outputs.WorkforcePoolProviderOidcWebSsoConfig;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkforcePoolProviderOidc {
    /**
     * @return The client ID. Must match the audience claim of the JWT issued by the identity provider.
     * 
     */
    private String clientId;
    /**
     * @return The optional client secret. Required to enable Authorization Code flow for web sign-in.
     * Structure is documented below.
     * 
     */
    private @Nullable WorkforcePoolProviderOidcClientSecret clientSecret;
    /**
     * @return The OIDC issuer URI. Must be a valid URI using the &#39;https&#39; scheme.
     * 
     */
    private String issuerUri;
    /**
     * @return OIDC JWKs in JSON String format. For details on definition of a
     * JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
     * use the `jwks_uri` from the discovery document fetched from the
     * .well-known path for the `issuer_uri`. Currently, RSA and EC asymmetric
     * keys are supported. The JWK must use following format and include only
     * the following fields:
     * 
     */
    private @Nullable String jwksJson;
    /**
     * @return Configuration for web single sign-on for the OIDC provider. Here, web sign-in refers to console sign-in and gcloud sign-in through the browser.
     * Structure is documented below.
     * 
     */
    private @Nullable WorkforcePoolProviderOidcWebSsoConfig webSsoConfig;

    private WorkforcePoolProviderOidc() {}
    /**
     * @return The client ID. Must match the audience claim of the JWT issued by the identity provider.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The optional client secret. Required to enable Authorization Code flow for web sign-in.
     * Structure is documented below.
     * 
     */
    public Optional<WorkforcePoolProviderOidcClientSecret> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }
    /**
     * @return The OIDC issuer URI. Must be a valid URI using the &#39;https&#39; scheme.
     * 
     */
    public String issuerUri() {
        return this.issuerUri;
    }
    /**
     * @return OIDC JWKs in JSON String format. For details on definition of a
     * JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
     * use the `jwks_uri` from the discovery document fetched from the
     * .well-known path for the `issuer_uri`. Currently, RSA and EC asymmetric
     * keys are supported. The JWK must use following format and include only
     * the following fields:
     * 
     */
    public Optional<String> jwksJson() {
        return Optional.ofNullable(this.jwksJson);
    }
    /**
     * @return Configuration for web single sign-on for the OIDC provider. Here, web sign-in refers to console sign-in and gcloud sign-in through the browser.
     * Structure is documented below.
     * 
     */
    public Optional<WorkforcePoolProviderOidcWebSsoConfig> webSsoConfig() {
        return Optional.ofNullable(this.webSsoConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkforcePoolProviderOidc defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private @Nullable WorkforcePoolProviderOidcClientSecret clientSecret;
        private String issuerUri;
        private @Nullable String jwksJson;
        private @Nullable WorkforcePoolProviderOidcWebSsoConfig webSsoConfig;
        public Builder() {}
        public Builder(WorkforcePoolProviderOidc defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.issuerUri = defaults.issuerUri;
    	      this.jwksJson = defaults.jwksJson;
    	      this.webSsoConfig = defaults.webSsoConfig;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("WorkforcePoolProviderOidc", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(@Nullable WorkforcePoolProviderOidcClientSecret clientSecret) {

            this.clientSecret = clientSecret;
            return this;
        }
        @CustomType.Setter
        public Builder issuerUri(String issuerUri) {
            if (issuerUri == null) {
              throw new MissingRequiredPropertyException("WorkforcePoolProviderOidc", "issuerUri");
            }
            this.issuerUri = issuerUri;
            return this;
        }
        @CustomType.Setter
        public Builder jwksJson(@Nullable String jwksJson) {

            this.jwksJson = jwksJson;
            return this;
        }
        @CustomType.Setter
        public Builder webSsoConfig(@Nullable WorkforcePoolProviderOidcWebSsoConfig webSsoConfig) {

            this.webSsoConfig = webSsoConfig;
            return this;
        }
        public WorkforcePoolProviderOidc build() {
            final var _resultValue = new WorkforcePoolProviderOidc();
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            _resultValue.issuerUri = issuerUri;
            _resultValue.jwksJson = jwksJson;
            _resultValue.webSsoConfig = webSsoConfig;
            return _resultValue;
        }
    }
}
