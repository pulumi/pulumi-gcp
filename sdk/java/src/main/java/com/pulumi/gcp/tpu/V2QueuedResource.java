// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.tpu;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.tpu.V2QueuedResourceArgs;
import com.pulumi.gcp.tpu.inputs.V2QueuedResourceState;
import com.pulumi.gcp.tpu.outputs.V2QueuedResourceTpu;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Tpu V2 Queued Resource Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.tpu.V2QueuedResource;
 * import com.pulumi.gcp.tpu.V2QueuedResourceArgs;
 * import com.pulumi.gcp.tpu.inputs.V2QueuedResourceTpuArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var qr = new V2QueuedResource("qr", V2QueuedResourceArgs.builder()
 *             .name("test-qr")
 *             .zone("us-central1-c")
 *             .project("my-project-name")
 *             .tpu(V2QueuedResourceTpuArgs.builder()
 *                 .nodeSpecs(V2QueuedResourceTpuNodeSpecArgs.builder()
 *                     .parent("projects/my-project-name/locations/us-central1-c")
 *                     .nodeId("test-tpu")
 *                     .node(V2QueuedResourceTpuNodeSpecNodeArgs.builder()
 *                         .runtimeVersion("tpu-vm-tf-2.13.0")
 *                         .acceleratorType("v2-8")
 *                         .description("Text description of the TPU.")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Tpu V2 Queued Resource Full
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.tpu.V2QueuedResource;
 * import com.pulumi.gcp.tpu.V2QueuedResourceArgs;
 * import com.pulumi.gcp.tpu.inputs.V2QueuedResourceTpuArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var network = new Network("network", NetworkArgs.builder()
 *             .name("tpu-net")
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var subnet = new Subnetwork("subnet", SubnetworkArgs.builder()
 *             .name("tpu-subnet")
 *             .ipCidrRange("10.0.0.0/16")
 *             .region("us-central1")
 *             .network(network.id())
 *             .build());
 * 
 *         var qr = new V2QueuedResource("qr", V2QueuedResourceArgs.builder()
 *             .name("test-qr")
 *             .zone("us-central1-c")
 *             .project("my-project-name")
 *             .tpu(V2QueuedResourceTpuArgs.builder()
 *                 .nodeSpecs(V2QueuedResourceTpuNodeSpecArgs.builder()
 *                     .parent("projects/my-project-name/locations/us-central1-c")
 *                     .nodeId("test-tpu")
 *                     .node(V2QueuedResourceTpuNodeSpecNodeArgs.builder()
 *                         .runtimeVersion("tpu-vm-tf-2.13.0")
 *                         .acceleratorType("v2-8")
 *                         .description("Text description of the TPU.")
 *                         .networkConfig(V2QueuedResourceTpuNodeSpecNodeNetworkConfigArgs.builder()
 *                             .canIpForward(true)
 *                             .enableExternalIps(true)
 *                             .network(network.id())
 *                             .subnetwork(subnet.id())
 *                             .queueCount(32)
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * QueuedResource can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{zone}}/queuedResources/{{name}}`
 * 
 * * `{{project}}/{{zone}}/{{name}}`
 * 
 * * `{{zone}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, QueuedResource can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:tpu/v2QueuedResource:V2QueuedResource default projects/{{project}}/locations/{{zone}}/queuedResources/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:tpu/v2QueuedResource:V2QueuedResource default {{project}}/{{zone}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:tpu/v2QueuedResource:V2QueuedResource default {{zone}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:tpu/v2QueuedResource:V2QueuedResource default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:tpu/v2QueuedResource:V2QueuedResource")
public class V2QueuedResource extends com.pulumi.resources.CustomResource {
    /**
     * The immutable name of the Queued Resource.
     * 
     * ***
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The immutable name of the Queued Resource.
     * 
     * ***
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Defines a TPU resource.
     * Structure is documented below.
     * 
     */
    @Export(name="tpu", refs={V2QueuedResourceTpu.class}, tree="[0]")
    private Output</* @Nullable */ V2QueuedResourceTpu> tpu;

    /**
     * @return Defines a TPU resource.
     * Structure is documented below.
     * 
     */
    public Output<Optional<V2QueuedResourceTpu>> tpu() {
        return Codegen.optional(this.tpu);
    }
    /**
     * The GCP location for the Queued Resource. If it is not provided, the provider zone is used.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return The GCP location for the Queued Resource. If it is not provided, the provider zone is used.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public V2QueuedResource(java.lang.String name) {
        this(name, V2QueuedResourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public V2QueuedResource(java.lang.String name, @Nullable V2QueuedResourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public V2QueuedResource(java.lang.String name, @Nullable V2QueuedResourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:tpu/v2QueuedResource:V2QueuedResource", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private V2QueuedResource(java.lang.String name, Output<java.lang.String> id, @Nullable V2QueuedResourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:tpu/v2QueuedResource:V2QueuedResource", name, state, makeResourceOptions(options, id), false);
    }

    private static V2QueuedResourceArgs makeArgs(@Nullable V2QueuedResourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? V2QueuedResourceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static V2QueuedResource get(java.lang.String name, Output<java.lang.String> id, @Nullable V2QueuedResourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new V2QueuedResource(name, id, state, options);
    }
}
