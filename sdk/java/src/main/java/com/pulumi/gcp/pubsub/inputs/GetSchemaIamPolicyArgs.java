// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchemaIamPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSchemaIamPolicyArgs Empty = new GetSchemaIamPolicyArgs();

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="schema", required=true)
    private Output<String> schema;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }

    private GetSchemaIamPolicyArgs() {}

    private GetSchemaIamPolicyArgs(GetSchemaIamPolicyArgs $) {
        this.project = $.project;
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchemaIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchemaIamPolicyArgs $;

        public Builder() {
            $ = new GetSchemaIamPolicyArgs();
        }

        public Builder(GetSchemaIamPolicyArgs defaults) {
            $ = new GetSchemaIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param schema Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder schema(Output<String> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        public GetSchemaIamPolicyArgs build() {
            if ($.schema == null) {
                throw new MissingRequiredPropertyException("GetSchemaIamPolicyArgs", "schema");
            }
            return $;
        }
    }

}
