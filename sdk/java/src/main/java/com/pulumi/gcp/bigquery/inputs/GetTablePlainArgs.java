// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTablePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTablePlainArgs Empty = new GetTablePlainArgs();

    /**
     * The dataset ID.
     * 
     */
    @Import(name="datasetId", required=true)
    private String datasetId;

    /**
     * @return The dataset ID.
     * 
     */
    public String datasetId() {
        return this.datasetId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The table ID.
     * 
     */
    @Import(name="tableId", required=true)
    private String tableId;

    /**
     * @return The table ID.
     * 
     */
    public String tableId() {
        return this.tableId;
    }

    private GetTablePlainArgs() {}

    private GetTablePlainArgs(GetTablePlainArgs $) {
        this.datasetId = $.datasetId;
        this.project = $.project;
        this.tableId = $.tableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTablePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTablePlainArgs $;

        public Builder() {
            $ = new GetTablePlainArgs();
        }

        public Builder(GetTablePlainArgs defaults) {
            $ = new GetTablePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetId The dataset ID.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(String datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param tableId The table ID.
         * 
         * @return builder
         * 
         */
        public Builder tableId(String tableId) {
            $.tableId = tableId;
            return this;
        }

        public GetTablePlainArgs build() {
            if ($.datasetId == null) {
                throw new MissingRequiredPropertyException("GetTablePlainArgs", "datasetId");
            }
            if ($.tableId == null) {
                throw new MissingRequiredPropertyException("GetTablePlainArgs", "tableId");
            }
            return $;
        }
    }

}
