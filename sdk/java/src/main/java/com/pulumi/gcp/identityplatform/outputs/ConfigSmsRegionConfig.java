// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.identityplatform.outputs.ConfigSmsRegionConfigAllowByDefault;
import com.pulumi.gcp.identityplatform.outputs.ConfigSmsRegionConfigAllowlistOnly;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigSmsRegionConfig {
    /**
     * @return A policy of allowing SMS to every region by default and adding disallowed regions to a disallow list.
     * Structure is documented below.
     * 
     */
    private @Nullable ConfigSmsRegionConfigAllowByDefault allowByDefault;
    /**
     * @return A policy of only allowing regions by explicitly adding them to an allowlist.
     * Structure is documented below.
     * 
     */
    private @Nullable ConfigSmsRegionConfigAllowlistOnly allowlistOnly;

    private ConfigSmsRegionConfig() {}
    /**
     * @return A policy of allowing SMS to every region by default and adding disallowed regions to a disallow list.
     * Structure is documented below.
     * 
     */
    public Optional<ConfigSmsRegionConfigAllowByDefault> allowByDefault() {
        return Optional.ofNullable(this.allowByDefault);
    }
    /**
     * @return A policy of only allowing regions by explicitly adding them to an allowlist.
     * Structure is documented below.
     * 
     */
    public Optional<ConfigSmsRegionConfigAllowlistOnly> allowlistOnly() {
        return Optional.ofNullable(this.allowlistOnly);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigSmsRegionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ConfigSmsRegionConfigAllowByDefault allowByDefault;
        private @Nullable ConfigSmsRegionConfigAllowlistOnly allowlistOnly;
        public Builder() {}
        public Builder(ConfigSmsRegionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowByDefault = defaults.allowByDefault;
    	      this.allowlistOnly = defaults.allowlistOnly;
        }

        @CustomType.Setter
        public Builder allowByDefault(@Nullable ConfigSmsRegionConfigAllowByDefault allowByDefault) {

            this.allowByDefault = allowByDefault;
            return this;
        }
        @CustomType.Setter
        public Builder allowlistOnly(@Nullable ConfigSmsRegionConfigAllowlistOnly allowlistOnly) {

            this.allowlistOnly = allowlistOnly;
            return this;
        }
        public ConfigSmsRegionConfig build() {
            final var _resultValue = new ConfigSmsRegionConfig();
            _resultValue.allowByDefault = allowByDefault;
            _resultValue.allowlistOnly = allowlistOnly;
            return _resultValue;
        }
    }
}
