// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.parallelstore.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * Output only. List of access_points.
     * Contains a list of IPv4 addresses used for client side configuration.
     * 
     */
    @Import(name="accessPoints")
    private @Nullable Output<List<String>> accessPoints;

    /**
     * @return Output only. List of access_points.
     * Contains a list of IPv4 addresses used for client side configuration.
     * 
     */
    public Optional<Output<List<String>>> accessPoints() {
        return Optional.ofNullable(this.accessPoints);
    }

    /**
     * Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
     * 
     */
    @Import(name="capacityGib")
    private @Nullable Output<String> capacityGib;

    /**
     * @return Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
     * 
     */
    public Optional<Output<String>> capacityGib() {
        return Optional.ofNullable(this.capacityGib);
    }

    /**
     * The time when the instance was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time when the instance was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The version of DAOS software running in the instance
     * 
     */
    @Import(name="daosVersion")
    private @Nullable Output<String> daosVersion;

    /**
     * @return The version of DAOS software running in the instance
     * 
     */
    public Optional<Output<String>> daosVersion() {
        return Optional.ofNullable(this.daosVersion);
    }

    /**
     * The description of the instance. 2048 characters or less.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the instance. 2048 characters or less.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Stripe level for directories.
     * MIN when directory has a small number of files.
     * MAX when directory has a large number of files.
     * Possible values:
     * DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
     * DIRECTORY_STRIPE_LEVEL_MIN
     * DIRECTORY_STRIPE_LEVEL_BALANCED
     * DIRECTORY_STRIPE_LEVEL_MAX
     * 
     */
    @Import(name="directoryStripeLevel")
    private @Nullable Output<String> directoryStripeLevel;

    /**
     * @return Stripe level for directories.
     * MIN when directory has a small number of files.
     * MAX when directory has a large number of files.
     * Possible values:
     * DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
     * DIRECTORY_STRIPE_LEVEL_MIN
     * DIRECTORY_STRIPE_LEVEL_BALANCED
     * DIRECTORY_STRIPE_LEVEL_MAX
     * 
     */
    public Optional<Output<String>> directoryStripeLevel() {
        return Optional.ofNullable(this.directoryStripeLevel);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * Immutable. Contains the id of the allocated IP address range associated with the
     * private service access connection for example, &#34;test-default&#34; associated
     * with IP range 10.0.0.0/29. This field is populated by the service and
     * and contains the value currently used by the service.
     * 
     */
    @Import(name="effectiveReservedIpRange")
    private @Nullable Output<String> effectiveReservedIpRange;

    /**
     * @return Immutable. Contains the id of the allocated IP address range associated with the
     * private service access connection for example, &#34;test-default&#34; associated
     * with IP range 10.0.0.0/29. This field is populated by the service and
     * and contains the value currently used by the service.
     * 
     */
    public Optional<Output<String>> effectiveReservedIpRange() {
        return Optional.ofNullable(this.effectiveReservedIpRange);
    }

    /**
     * Stripe level for files.
     * MIN better suited for small size files.
     * MAX higher throughput performance for larger files.
     * Possible values:
     * FILE_STRIPE_LEVEL_UNSPECIFIED
     * FILE_STRIPE_LEVEL_MIN
     * FILE_STRIPE_LEVEL_BALANCED
     * FILE_STRIPE_LEVEL_MAX
     * 
     */
    @Import(name="fileStripeLevel")
    private @Nullable Output<String> fileStripeLevel;

    /**
     * @return Stripe level for files.
     * MIN better suited for small size files.
     * MAX higher throughput performance for larger files.
     * Possible values:
     * FILE_STRIPE_LEVEL_UNSPECIFIED
     * FILE_STRIPE_LEVEL_MIN
     * FILE_STRIPE_LEVEL_BALANCED
     * FILE_STRIPE_LEVEL_MAX
     * 
     */
    public Optional<Output<String>> fileStripeLevel() {
        return Optional.ofNullable(this.fileStripeLevel);
    }

    /**
     * The logical name of the Parallelstore instance in the user project with the following restrictions:
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * * Must be unique within the customer project/ location
     * 
     * ***
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The logical name of the Parallelstore instance in the user project with the following restrictions:
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * * Must be unique within the customer project/ location
     * 
     * ***
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Cloud Labels are a flexible and lightweight mechanism for organizing cloud
     * resources into groups that reflect a customer&#39;s organizational needs and
     * deployment strategies. Cloud Labels can be used to filter collections of
     * resources. They can be used to control how resource metrics are aggregated.
     * And they can be used as arguments to policy management rules (e.g. route,
     * firewall, load balancing, etc.).
     * * Label keys must be between 1 and 63 characters long and must conform to
     *   the following regular expression: `a-z{0,62}`.
     * * Label values must be between 0 and 63 characters long and must conform
     *   to the regular expression `[a-z0-9_-]{0,63}`.
     * * No more than 64 labels can be associated with a given resource.
     *   See https://goo.gl/xmQnxf for more information on and examples of labels.
     *   If you plan to use labels in your own code, please note that additional
     *   characters may be allowed in the future. Therefore, you are advised to use
     *   an internal label representation, such as JSON, which doesn&#39;t rely upon
     *   specific characters being disallowed.  For example, representing labels
     *   as the string:  name + &#34;_&#34; + value  would prove problematic if we were to
     *   allow &#34;_&#34; in a future release.
     *   **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     *   Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Cloud Labels are a flexible and lightweight mechanism for organizing cloud
     * resources into groups that reflect a customer&#39;s organizational needs and
     * deployment strategies. Cloud Labels can be used to filter collections of
     * resources. They can be used to control how resource metrics are aggregated.
     * And they can be used as arguments to policy management rules (e.g. route,
     * firewall, load balancing, etc.).
     * * Label keys must be between 1 and 63 characters long and must conform to
     *   the following regular expression: `a-z{0,62}`.
     * * Label values must be between 0 and 63 characters long and must conform
     *   to the regular expression `[a-z0-9_-]{0,63}`.
     * * No more than 64 labels can be associated with a given resource.
     *   See https://goo.gl/xmQnxf for more information on and examples of labels.
     *   If you plan to use labels in your own code, please note that additional
     *   characters may be allowed in the future. Therefore, you are advised to use
     *   an internal label representation, such as JSON, which doesn&#39;t rely upon
     *   specific characters being disallowed.  For example, representing labels
     *   as the string:  name + &#34;_&#34; + value  would prove problematic if we were to
     *   allow &#34;_&#34; in a future release.
     *   **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     *   Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Part of `parent`. See documentation of `projectsId`.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Part of `parent`. See documentation of `projectsId`.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Identifier. The resource name of the instance, in the format
     * `projects/{project}/locations/{location}/instances/{instance_id}`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. The resource name of the instance, in the format
     * `projects/{project}/locations/{location}/instances/{instance_id}`
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Immutable. The name of the Google Compute Engine
     * [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
     * instance is connected.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return Immutable. The name of the Google Compute Engine
     * [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
     * instance is connected.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Immutable. Contains the id of the allocated IP address range associated with the
     * private service access connection for example, &#34;test-default&#34; associated
     * with IP range 10.0.0.0/29. If no range id is provided all ranges will be
     * considered.
     * 
     */
    @Import(name="reservedIpRange")
    private @Nullable Output<String> reservedIpRange;

    /**
     * @return Immutable. Contains the id of the allocated IP address range associated with the
     * private service access connection for example, &#34;test-default&#34; associated
     * with IP range 10.0.0.0/29. If no range id is provided all ranges will be
     * considered.
     * 
     */
    public Optional<Output<String>> reservedIpRange() {
        return Optional.ofNullable(this.reservedIpRange);
    }

    /**
     * The instance state.
     * Possible values:
     * STATE_UNSPECIFIED
     * CREATING
     * ACTIVE
     * DELETING
     * FAILED
     * UPGRADING
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The instance state.
     * Possible values:
     * STATE_UNSPECIFIED
     * CREATING
     * ACTIVE
     * DELETING
     * FAILED
     * UPGRADING
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time when the instance was updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The time when the instance was updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.accessPoints = $.accessPoints;
        this.capacityGib = $.capacityGib;
        this.createTime = $.createTime;
        this.daosVersion = $.daosVersion;
        this.description = $.description;
        this.directoryStripeLevel = $.directoryStripeLevel;
        this.effectiveLabels = $.effectiveLabels;
        this.effectiveReservedIpRange = $.effectiveReservedIpRange;
        this.fileStripeLevel = $.fileStripeLevel;
        this.instanceId = $.instanceId;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.network = $.network;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.reservedIpRange = $.reservedIpRange;
        this.state = $.state;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPoints Output only. List of access_points.
         * Contains a list of IPv4 addresses used for client side configuration.
         * 
         * @return builder
         * 
         */
        public Builder accessPoints(@Nullable Output<List<String>> accessPoints) {
            $.accessPoints = accessPoints;
            return this;
        }

        /**
         * @param accessPoints Output only. List of access_points.
         * Contains a list of IPv4 addresses used for client side configuration.
         * 
         * @return builder
         * 
         */
        public Builder accessPoints(List<String> accessPoints) {
            return accessPoints(Output.of(accessPoints));
        }

        /**
         * @param accessPoints Output only. List of access_points.
         * Contains a list of IPv4 addresses used for client side configuration.
         * 
         * @return builder
         * 
         */
        public Builder accessPoints(String... accessPoints) {
            return accessPoints(List.of(accessPoints));
        }

        /**
         * @param capacityGib Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
         * 
         * @return builder
         * 
         */
        public Builder capacityGib(@Nullable Output<String> capacityGib) {
            $.capacityGib = capacityGib;
            return this;
        }

        /**
         * @param capacityGib Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
         * 
         * @return builder
         * 
         */
        public Builder capacityGib(String capacityGib) {
            return capacityGib(Output.of(capacityGib));
        }

        /**
         * @param createTime The time when the instance was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time when the instance was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param daosVersion The version of DAOS software running in the instance
         * 
         * @return builder
         * 
         */
        public Builder daosVersion(@Nullable Output<String> daosVersion) {
            $.daosVersion = daosVersion;
            return this;
        }

        /**
         * @param daosVersion The version of DAOS software running in the instance
         * 
         * @return builder
         * 
         */
        public Builder daosVersion(String daosVersion) {
            return daosVersion(Output.of(daosVersion));
        }

        /**
         * @param description The description of the instance. 2048 characters or less.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the instance. 2048 characters or less.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param directoryStripeLevel Stripe level for directories.
         * MIN when directory has a small number of files.
         * MAX when directory has a large number of files.
         * Possible values:
         * DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
         * DIRECTORY_STRIPE_LEVEL_MIN
         * DIRECTORY_STRIPE_LEVEL_BALANCED
         * DIRECTORY_STRIPE_LEVEL_MAX
         * 
         * @return builder
         * 
         */
        public Builder directoryStripeLevel(@Nullable Output<String> directoryStripeLevel) {
            $.directoryStripeLevel = directoryStripeLevel;
            return this;
        }

        /**
         * @param directoryStripeLevel Stripe level for directories.
         * MIN when directory has a small number of files.
         * MAX when directory has a large number of files.
         * Possible values:
         * DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
         * DIRECTORY_STRIPE_LEVEL_MIN
         * DIRECTORY_STRIPE_LEVEL_BALANCED
         * DIRECTORY_STRIPE_LEVEL_MAX
         * 
         * @return builder
         * 
         */
        public Builder directoryStripeLevel(String directoryStripeLevel) {
            return directoryStripeLevel(Output.of(directoryStripeLevel));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param effectiveReservedIpRange Immutable. Contains the id of the allocated IP address range associated with the
         * private service access connection for example, &#34;test-default&#34; associated
         * with IP range 10.0.0.0/29. This field is populated by the service and
         * and contains the value currently used by the service.
         * 
         * @return builder
         * 
         */
        public Builder effectiveReservedIpRange(@Nullable Output<String> effectiveReservedIpRange) {
            $.effectiveReservedIpRange = effectiveReservedIpRange;
            return this;
        }

        /**
         * @param effectiveReservedIpRange Immutable. Contains the id of the allocated IP address range associated with the
         * private service access connection for example, &#34;test-default&#34; associated
         * with IP range 10.0.0.0/29. This field is populated by the service and
         * and contains the value currently used by the service.
         * 
         * @return builder
         * 
         */
        public Builder effectiveReservedIpRange(String effectiveReservedIpRange) {
            return effectiveReservedIpRange(Output.of(effectiveReservedIpRange));
        }

        /**
         * @param fileStripeLevel Stripe level for files.
         * MIN better suited for small size files.
         * MAX higher throughput performance for larger files.
         * Possible values:
         * FILE_STRIPE_LEVEL_UNSPECIFIED
         * FILE_STRIPE_LEVEL_MIN
         * FILE_STRIPE_LEVEL_BALANCED
         * FILE_STRIPE_LEVEL_MAX
         * 
         * @return builder
         * 
         */
        public Builder fileStripeLevel(@Nullable Output<String> fileStripeLevel) {
            $.fileStripeLevel = fileStripeLevel;
            return this;
        }

        /**
         * @param fileStripeLevel Stripe level for files.
         * MIN better suited for small size files.
         * MAX higher throughput performance for larger files.
         * Possible values:
         * FILE_STRIPE_LEVEL_UNSPECIFIED
         * FILE_STRIPE_LEVEL_MIN
         * FILE_STRIPE_LEVEL_BALANCED
         * FILE_STRIPE_LEVEL_MAX
         * 
         * @return builder
         * 
         */
        public Builder fileStripeLevel(String fileStripeLevel) {
            return fileStripeLevel(Output.of(fileStripeLevel));
        }

        /**
         * @param instanceId The logical name of the Parallelstore instance in the user project with the following restrictions:
         * * Must contain only lowercase letters, numbers, and hyphens.
         * * Must start with a letter.
         * * Must be between 1-63 characters.
         * * Must end with a number or a letter.
         * * Must be unique within the customer project/ location
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The logical name of the Parallelstore instance in the user project with the following restrictions:
         * * Must contain only lowercase letters, numbers, and hyphens.
         * * Must start with a letter.
         * * Must be between 1-63 characters.
         * * Must end with a number or a letter.
         * * Must be unique within the customer project/ location
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param labels Cloud Labels are a flexible and lightweight mechanism for organizing cloud
         * resources into groups that reflect a customer&#39;s organizational needs and
         * deployment strategies. Cloud Labels can be used to filter collections of
         * resources. They can be used to control how resource metrics are aggregated.
         * And they can be used as arguments to policy management rules (e.g. route,
         * firewall, load balancing, etc.).
         * * Label keys must be between 1 and 63 characters long and must conform to
         *   the following regular expression: `a-z{0,62}`.
         * * Label values must be between 0 and 63 characters long and must conform
         *   to the regular expression `[a-z0-9_-]{0,63}`.
         * * No more than 64 labels can be associated with a given resource.
         *   See https://goo.gl/xmQnxf for more information on and examples of labels.
         *   If you plan to use labels in your own code, please note that additional
         *   characters may be allowed in the future. Therefore, you are advised to use
         *   an internal label representation, such as JSON, which doesn&#39;t rely upon
         *   specific characters being disallowed.  For example, representing labels
         *   as the string:  name + &#34;_&#34; + value  would prove problematic if we were to
         *   allow &#34;_&#34; in a future release.
         *   **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         *   Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Cloud Labels are a flexible and lightweight mechanism for organizing cloud
         * resources into groups that reflect a customer&#39;s organizational needs and
         * deployment strategies. Cloud Labels can be used to filter collections of
         * resources. They can be used to control how resource metrics are aggregated.
         * And they can be used as arguments to policy management rules (e.g. route,
         * firewall, load balancing, etc.).
         * * Label keys must be between 1 and 63 characters long and must conform to
         *   the following regular expression: `a-z{0,62}`.
         * * Label values must be between 0 and 63 characters long and must conform
         *   to the regular expression `[a-z0-9_-]{0,63}`.
         * * No more than 64 labels can be associated with a given resource.
         *   See https://goo.gl/xmQnxf for more information on and examples of labels.
         *   If you plan to use labels in your own code, please note that additional
         *   characters may be allowed in the future. Therefore, you are advised to use
         *   an internal label representation, such as JSON, which doesn&#39;t rely upon
         *   specific characters being disallowed.  For example, representing labels
         *   as the string:  name + &#34;_&#34; + value  would prove problematic if we were to
         *   allow &#34;_&#34; in a future release.
         *   **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         *   Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Part of `parent`. See documentation of `projectsId`.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Part of `parent`. See documentation of `projectsId`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Identifier. The resource name of the instance, in the format
         * `projects/{project}/locations/{location}/instances/{instance_id}`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. The resource name of the instance, in the format
         * `projects/{project}/locations/{location}/instances/{instance_id}`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network Immutable. The name of the Google Compute Engine
         * [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
         * instance is connected.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Immutable. The name of the Google Compute Engine
         * [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the
         * instance is connected.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param reservedIpRange Immutable. Contains the id of the allocated IP address range associated with the
         * private service access connection for example, &#34;test-default&#34; associated
         * with IP range 10.0.0.0/29. If no range id is provided all ranges will be
         * considered.
         * 
         * @return builder
         * 
         */
        public Builder reservedIpRange(@Nullable Output<String> reservedIpRange) {
            $.reservedIpRange = reservedIpRange;
            return this;
        }

        /**
         * @param reservedIpRange Immutable. Contains the id of the allocated IP address range associated with the
         * private service access connection for example, &#34;test-default&#34; associated
         * with IP range 10.0.0.0/29. If no range id is provided all ranges will be
         * considered.
         * 
         * @return builder
         * 
         */
        public Builder reservedIpRange(String reservedIpRange) {
            return reservedIpRange(Output.of(reservedIpRange));
        }

        /**
         * @param state The instance state.
         * Possible values:
         * STATE_UNSPECIFIED
         * CREATING
         * ACTIVE
         * DELETING
         * FAILED
         * UPGRADING
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The instance state.
         * Possible values:
         * STATE_UNSPECIFIED
         * CREATING
         * ACTIVE
         * DELETING
         * FAILED
         * UPGRADING
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param updateTime The time when the instance was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The time when the instance was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public InstanceState build() {
            return $;
        }
    }

}
