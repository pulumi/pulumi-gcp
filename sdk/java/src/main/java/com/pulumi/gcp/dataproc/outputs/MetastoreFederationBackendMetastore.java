// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MetastoreFederationBackendMetastore {
    /**
     * @return The type of the backend metastore.
     * Possible values are `METASTORE_TYPE_UNSPECIFIED`, `DATAPROC_METASTORE`, and `BIGQUERY`.
     * 
     */
    private String metastoreType;
    /**
     * @return The relative resource name of the metastore that is being federated. The formats of the relative resource names for the currently supported metastores are listed below: Dataplex: projects/{projectId}/locations/{location}/lakes/{lake_id} BigQuery: projects/{projectId} Dataproc Metastore: projects/{projectId}/locations/{location}/services/{serviceId}
     * 
     */
    private String name;
    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    private String rank;

    private MetastoreFederationBackendMetastore() {}
    /**
     * @return The type of the backend metastore.
     * Possible values are `METASTORE_TYPE_UNSPECIFIED`, `DATAPROC_METASTORE`, and `BIGQUERY`.
     * 
     */
    public String metastoreType() {
        return this.metastoreType;
    }
    /**
     * @return The relative resource name of the metastore that is being federated. The formats of the relative resource names for the currently supported metastores are listed below: Dataplex: projects/{projectId}/locations/{location}/lakes/{lake_id} BigQuery: projects/{projectId} Dataproc Metastore: projects/{projectId}/locations/{location}/services/{serviceId}
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    public String rank() {
        return this.rank;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetastoreFederationBackendMetastore defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String metastoreType;
        private String name;
        private String rank;
        public Builder() {}
        public Builder(MetastoreFederationBackendMetastore defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metastoreType = defaults.metastoreType;
    	      this.name = defaults.name;
    	      this.rank = defaults.rank;
        }

        @CustomType.Setter
        public Builder metastoreType(String metastoreType) {
            this.metastoreType = Objects.requireNonNull(metastoreType);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder rank(String rank) {
            this.rank = Objects.requireNonNull(rank);
            return this;
        }
        public MetastoreFederationBackendMetastore build() {
            final var o = new MetastoreFederationBackendMetastore();
            o.metastoreType = metastoreType;
            o.name = name;
            o.rank = rank;
            return o;
        }
    }
}
