// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigtable.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceClusterAutoscalingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceClusterAutoscalingConfigArgs Empty = new InstanceClusterAutoscalingConfigArgs();

    /**
     * The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
     * 
     */
    @Import(name="cpuTarget", required=true)
    private Output<Integer> cpuTarget;

    /**
     * @return The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
     * 
     */
    public Output<Integer> cpuTarget() {
        return this.cpuTarget;
    }

    /**
     * The maximum number of nodes for autoscaling.
     * 
     */
    @Import(name="maxNodes", required=true)
    private Output<Integer> maxNodes;

    /**
     * @return The maximum number of nodes for autoscaling.
     * 
     */
    public Output<Integer> maxNodes() {
        return this.maxNodes;
    }

    /**
     * The minimum number of nodes for autoscaling.
     * 
     */
    @Import(name="minNodes", required=true)
    private Output<Integer> minNodes;

    /**
     * @return The minimum number of nodes for autoscaling.
     * 
     */
    public Output<Integer> minNodes() {
        return this.minNodes;
    }

    /**
     * The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
     * 
     * !&gt; **Warning**: Only one of `autoscaling_config` or `num_nodes` should be set for a cluster. If both are set, `num_nodes` is ignored. If none is set, autoscaling will be disabled and sized to the current node count.
     * 
     */
    @Import(name="storageTarget")
    private @Nullable Output<Integer> storageTarget;

    /**
     * @return The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
     * 
     * !&gt; **Warning**: Only one of `autoscaling_config` or `num_nodes` should be set for a cluster. If both are set, `num_nodes` is ignored. If none is set, autoscaling will be disabled and sized to the current node count.
     * 
     */
    public Optional<Output<Integer>> storageTarget() {
        return Optional.ofNullable(this.storageTarget);
    }

    private InstanceClusterAutoscalingConfigArgs() {}

    private InstanceClusterAutoscalingConfigArgs(InstanceClusterAutoscalingConfigArgs $) {
        this.cpuTarget = $.cpuTarget;
        this.maxNodes = $.maxNodes;
        this.minNodes = $.minNodes;
        this.storageTarget = $.storageTarget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceClusterAutoscalingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceClusterAutoscalingConfigArgs $;

        public Builder() {
            $ = new InstanceClusterAutoscalingConfigArgs();
        }

        public Builder(InstanceClusterAutoscalingConfigArgs defaults) {
            $ = new InstanceClusterAutoscalingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpuTarget The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
         * 
         * @return builder
         * 
         */
        public Builder cpuTarget(Output<Integer> cpuTarget) {
            $.cpuTarget = cpuTarget;
            return this;
        }

        /**
         * @param cpuTarget The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
         * 
         * @return builder
         * 
         */
        public Builder cpuTarget(Integer cpuTarget) {
            return cpuTarget(Output.of(cpuTarget));
        }

        /**
         * @param maxNodes The maximum number of nodes for autoscaling.
         * 
         * @return builder
         * 
         */
        public Builder maxNodes(Output<Integer> maxNodes) {
            $.maxNodes = maxNodes;
            return this;
        }

        /**
         * @param maxNodes The maximum number of nodes for autoscaling.
         * 
         * @return builder
         * 
         */
        public Builder maxNodes(Integer maxNodes) {
            return maxNodes(Output.of(maxNodes));
        }

        /**
         * @param minNodes The minimum number of nodes for autoscaling.
         * 
         * @return builder
         * 
         */
        public Builder minNodes(Output<Integer> minNodes) {
            $.minNodes = minNodes;
            return this;
        }

        /**
         * @param minNodes The minimum number of nodes for autoscaling.
         * 
         * @return builder
         * 
         */
        public Builder minNodes(Integer minNodes) {
            return minNodes(Output.of(minNodes));
        }

        /**
         * @param storageTarget The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
         * 
         * !&gt; **Warning**: Only one of `autoscaling_config` or `num_nodes` should be set for a cluster. If both are set, `num_nodes` is ignored. If none is set, autoscaling will be disabled and sized to the current node count.
         * 
         * @return builder
         * 
         */
        public Builder storageTarget(@Nullable Output<Integer> storageTarget) {
            $.storageTarget = storageTarget;
            return this;
        }

        /**
         * @param storageTarget The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
         * 
         * !&gt; **Warning**: Only one of `autoscaling_config` or `num_nodes` should be set for a cluster. If both are set, `num_nodes` is ignored. If none is set, autoscaling will be disabled and sized to the current node count.
         * 
         * @return builder
         * 
         */
        public Builder storageTarget(Integer storageTarget) {
            return storageTarget(Output.of(storageTarget));
        }

        public InstanceClusterAutoscalingConfigArgs build() {
            $.cpuTarget = Objects.requireNonNull($.cpuTarget, "expected parameter 'cpuTarget' to be non-null");
            $.maxNodes = Objects.requireNonNull($.maxNodes, "expected parameter 'maxNodes' to be non-null");
            $.minNodes = Objects.requireNonNull($.minNodes, "expected parameter 'minNodes' to be non-null");
            return $;
        }
    }

}
