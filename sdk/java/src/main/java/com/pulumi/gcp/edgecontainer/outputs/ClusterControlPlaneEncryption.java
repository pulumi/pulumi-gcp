// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.edgecontainer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.edgecontainer.outputs.ClusterControlPlaneEncryptionKmsStatus;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterControlPlaneEncryption {
    /**
     * @return The Cloud KMS CryptoKey e.g.
     * projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
     * to use for protecting control plane disks. If not specified, a
     * Google-managed key will be used instead.
     * 
     */
    private @Nullable String kmsKey;
    /**
     * @return (Output)
     * The Cloud KMS CryptoKeyVersion currently in use for protecting control
     * plane disks. Only applicable if kms_key is set.
     * 
     */
    private @Nullable String kmsKeyActiveVersion;
    /**
     * @return (Output)
     * Availability of the Cloud KMS CryptoKey. If not `KEY_AVAILABLE`, then
     * nodes may go offline as they cannot access their local data. This can be
     * caused by a lack of permissions to use the key, or if the key is disabled
     * or deleted.
     * 
     */
    private @Nullable String kmsKeyState;
    /**
     * @return (Output)
     * Error status returned by Cloud KMS when using this key. This field may be
     * populated only if `kms_key_state` is not `KMS_KEY_STATE_KEY_AVAILABLE`.
     * If populated, this field contains the error status reported by Cloud KMS.
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nested_kms_status&#34;&gt;&lt;/a&gt;The `kms_status` block contains:
     * 
     */
    private @Nullable List<ClusterControlPlaneEncryptionKmsStatus> kmsStatuses;

    private ClusterControlPlaneEncryption() {}
    /**
     * @return The Cloud KMS CryptoKey e.g.
     * projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
     * to use for protecting control plane disks. If not specified, a
     * Google-managed key will be used instead.
     * 
     */
    public Optional<String> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }
    /**
     * @return (Output)
     * The Cloud KMS CryptoKeyVersion currently in use for protecting control
     * plane disks. Only applicable if kms_key is set.
     * 
     */
    public Optional<String> kmsKeyActiveVersion() {
        return Optional.ofNullable(this.kmsKeyActiveVersion);
    }
    /**
     * @return (Output)
     * Availability of the Cloud KMS CryptoKey. If not `KEY_AVAILABLE`, then
     * nodes may go offline as they cannot access their local data. This can be
     * caused by a lack of permissions to use the key, or if the key is disabled
     * or deleted.
     * 
     */
    public Optional<String> kmsKeyState() {
        return Optional.ofNullable(this.kmsKeyState);
    }
    /**
     * @return (Output)
     * Error status returned by Cloud KMS when using this key. This field may be
     * populated only if `kms_key_state` is not `KMS_KEY_STATE_KEY_AVAILABLE`.
     * If populated, this field contains the error status reported by Cloud KMS.
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nested_kms_status&#34;&gt;&lt;/a&gt;The `kms_status` block contains:
     * 
     */
    public List<ClusterControlPlaneEncryptionKmsStatus> kmsStatuses() {
        return this.kmsStatuses == null ? List.of() : this.kmsStatuses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterControlPlaneEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String kmsKey;
        private @Nullable String kmsKeyActiveVersion;
        private @Nullable String kmsKeyState;
        private @Nullable List<ClusterControlPlaneEncryptionKmsStatus> kmsStatuses;
        public Builder() {}
        public Builder(ClusterControlPlaneEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKey = defaults.kmsKey;
    	      this.kmsKeyActiveVersion = defaults.kmsKeyActiveVersion;
    	      this.kmsKeyState = defaults.kmsKeyState;
    	      this.kmsStatuses = defaults.kmsStatuses;
        }

        @CustomType.Setter
        public Builder kmsKey(@Nullable String kmsKey) {
            this.kmsKey = kmsKey;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyActiveVersion(@Nullable String kmsKeyActiveVersion) {
            this.kmsKeyActiveVersion = kmsKeyActiveVersion;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyState(@Nullable String kmsKeyState) {
            this.kmsKeyState = kmsKeyState;
            return this;
        }
        @CustomType.Setter
        public Builder kmsStatuses(@Nullable List<ClusterControlPlaneEncryptionKmsStatus> kmsStatuses) {
            this.kmsStatuses = kmsStatuses;
            return this;
        }
        public Builder kmsStatuses(ClusterControlPlaneEncryptionKmsStatus... kmsStatuses) {
            return kmsStatuses(List.of(kmsStatuses));
        }
        public ClusterControlPlaneEncryption build() {
            final var _resultValue = new ClusterControlPlaneEncryption();
            _resultValue.kmsKey = kmsKey;
            _resultValue.kmsKeyActiveVersion = kmsKeyActiveVersion;
            _resultValue.kmsKeyState = kmsKeyState;
            _resultValue.kmsStatuses = kmsStatuses;
            return _resultValue;
        }
    }
}
