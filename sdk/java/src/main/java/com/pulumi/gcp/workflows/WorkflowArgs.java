// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workflows;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkflowArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowArgs Empty = new WorkflowArgs();

    /**
     * Describes the level of platform logging to apply to calls and call responses during
     * executions of this workflow. If both the workflow and the execution specify a logging level,
     * the execution level takes precedence.
     * Possible values are: `CALL_LOG_LEVEL_UNSPECIFIED`, `LOG_ALL_CALLS`, `LOG_ERRORS_ONLY`, `LOG_NONE`.
     * 
     */
    @Import(name="callLogLevel")
    private @Nullable Output<String> callLogLevel;

    /**
     * @return Describes the level of platform logging to apply to calls and call responses during
     * executions of this workflow. If both the workflow and the execution specify a logging level,
     * the execution level takes precedence.
     * Possible values are: `CALL_LOG_LEVEL_UNSPECIFIED`, `LOG_ALL_CALLS`, `LOG_ERRORS_ONLY`, `LOG_NONE`.
     * 
     */
    public Optional<Output<String>> callLogLevel() {
        return Optional.ofNullable(this.callLogLevel);
    }

    /**
     * The KMS key used to encrypt workflow and execution data.
     * Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
     * 
     */
    @Import(name="cryptoKeyName")
    private @Nullable Output<String> cryptoKeyName;

    /**
     * @return The KMS key used to encrypt workflow and execution data.
     * Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
     * 
     */
    public Optional<Output<String>> cryptoKeyName() {
        return Optional.ofNullable(this.cryptoKeyName);
    }

    @Import(name="deletionProtection")
    private @Nullable Output<Boolean> deletionProtection;

    public Optional<Output<Boolean>> deletionProtection() {
        return Optional.ofNullable(this.deletionProtection);
    }

    /**
     * Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Describes the level of execution history to be stored for this workflow. This configuration
     * determines how much information about workflow executions is preserved. If not specified,
     * defaults to EXECUTION_HISTORY_LEVEL_UNSPECIFIED.
     * Possible values are: `EXECUTION_HISTORY_LEVEL_UNSPECIFIED`, `EXECUTION_HISTORY_BASIC`, `EXECUTION_HISTORY_DETAILED`.
     * 
     */
    @Import(name="executionHistoryLevel")
    private @Nullable Output<String> executionHistoryLevel;

    /**
     * @return Describes the level of execution history to be stored for this workflow. This configuration
     * determines how much information about workflow executions is preserved. If not specified,
     * defaults to EXECUTION_HISTORY_LEVEL_UNSPECIFIED.
     * Possible values are: `EXECUTION_HISTORY_LEVEL_UNSPECIFIED`, `EXECUTION_HISTORY_BASIC`, `EXECUTION_HISTORY_DETAILED`.
     * 
     */
    public Optional<Output<String>> executionHistoryLevel() {
        return Optional.ofNullable(this.executionHistoryLevel);
    }

    /**
     * A set of key/value label pairs to assign to this Workflow.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return A set of key/value label pairs to assign to this Workflow.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Name of the Workflow.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Workflow.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Creates a unique name beginning with the
     * specified prefix. If this and name are unspecified, a random value is chosen for the name.
     * 
     */
    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    /**
     * @return Creates a unique name beginning with the
     * specified prefix. If this and name are unspecified, a random value is chosen for the name.
     * 
     */
    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region of the workflow.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the workflow.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Name of the service account associated with the latest workflow version. This service
     * account represents the identity of the workflow and determines what permissions the workflow has.
     * Format: projects/{project}/serviceAccounts/{account} or {account}.
     * Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
     * The {account} value can be the email address or the unique_id of the service account.
     * If not provided, workflow will use the project&#39;s default service account.
     * Modifying this field for an existing workflow results in a new workflow revision.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<String> serviceAccount;

    /**
     * @return Name of the service account associated with the latest workflow version. This service
     * account represents the identity of the workflow and determines what permissions the workflow has.
     * Format: projects/{project}/serviceAccounts/{account} or {account}.
     * Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
     * The {account} value can be the email address or the unique_id of the service account.
     * If not provided, workflow will use the project&#39;s default service account.
     * Modifying this field for an existing workflow results in a new workflow revision.
     * 
     */
    public Optional<Output<String>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * Workflow code to be executed. The size limit is 128KB.
     * 
     */
    @Import(name="sourceContents")
    private @Nullable Output<String> sourceContents;

    /**
     * @return Workflow code to be executed. The size limit is 128KB.
     * 
     */
    public Optional<Output<String>> sourceContents() {
        return Optional.ofNullable(this.sourceContents);
    }

    /**
     * A map of resource manager tags. Resource manager tag keys and values have the same definition
     * as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in
     * the format tagValues/456. The field is ignored (both PUT &amp; PATCH) when empty.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of resource manager tags. Resource manager tag keys and values have the same definition
     * as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in
     * the format tagValues/456. The field is ignored (both PUT &amp; PATCH) when empty.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each string can take up to 4KiB. Keys cannot be empty strings and cannot start with &#34;GOOGLE&#34; or &#34;WORKFLOWS&#34;.
     * 
     */
    @Import(name="userEnvVars")
    private @Nullable Output<Map<String,String>> userEnvVars;

    /**
     * @return User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each string can take up to 4KiB. Keys cannot be empty strings and cannot start with &#34;GOOGLE&#34; or &#34;WORKFLOWS&#34;.
     * 
     */
    public Optional<Output<Map<String,String>>> userEnvVars() {
        return Optional.ofNullable(this.userEnvVars);
    }

    private WorkflowArgs() {}

    private WorkflowArgs(WorkflowArgs $) {
        this.callLogLevel = $.callLogLevel;
        this.cryptoKeyName = $.cryptoKeyName;
        this.deletionProtection = $.deletionProtection;
        this.description = $.description;
        this.executionHistoryLevel = $.executionHistoryLevel;
        this.labels = $.labels;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.project = $.project;
        this.region = $.region;
        this.serviceAccount = $.serviceAccount;
        this.sourceContents = $.sourceContents;
        this.tags = $.tags;
        this.userEnvVars = $.userEnvVars;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowArgs $;

        public Builder() {
            $ = new WorkflowArgs();
        }

        public Builder(WorkflowArgs defaults) {
            $ = new WorkflowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param callLogLevel Describes the level of platform logging to apply to calls and call responses during
         * executions of this workflow. If both the workflow and the execution specify a logging level,
         * the execution level takes precedence.
         * Possible values are: `CALL_LOG_LEVEL_UNSPECIFIED`, `LOG_ALL_CALLS`, `LOG_ERRORS_ONLY`, `LOG_NONE`.
         * 
         * @return builder
         * 
         */
        public Builder callLogLevel(@Nullable Output<String> callLogLevel) {
            $.callLogLevel = callLogLevel;
            return this;
        }

        /**
         * @param callLogLevel Describes the level of platform logging to apply to calls and call responses during
         * executions of this workflow. If both the workflow and the execution specify a logging level,
         * the execution level takes precedence.
         * Possible values are: `CALL_LOG_LEVEL_UNSPECIFIED`, `LOG_ALL_CALLS`, `LOG_ERRORS_ONLY`, `LOG_NONE`.
         * 
         * @return builder
         * 
         */
        public Builder callLogLevel(String callLogLevel) {
            return callLogLevel(Output.of(callLogLevel));
        }

        /**
         * @param cryptoKeyName The KMS key used to encrypt workflow and execution data.
         * Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
         * 
         * @return builder
         * 
         */
        public Builder cryptoKeyName(@Nullable Output<String> cryptoKeyName) {
            $.cryptoKeyName = cryptoKeyName;
            return this;
        }

        /**
         * @param cryptoKeyName The KMS key used to encrypt workflow and execution data.
         * Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
         * 
         * @return builder
         * 
         */
        public Builder cryptoKeyName(String cryptoKeyName) {
            return cryptoKeyName(Output.of(cryptoKeyName));
        }

        public Builder deletionProtection(@Nullable Output<Boolean> deletionProtection) {
            $.deletionProtection = deletionProtection;
            return this;
        }

        public Builder deletionProtection(Boolean deletionProtection) {
            return deletionProtection(Output.of(deletionProtection));
        }

        /**
         * @param description Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param executionHistoryLevel Describes the level of execution history to be stored for this workflow. This configuration
         * determines how much information about workflow executions is preserved. If not specified,
         * defaults to EXECUTION_HISTORY_LEVEL_UNSPECIFIED.
         * Possible values are: `EXECUTION_HISTORY_LEVEL_UNSPECIFIED`, `EXECUTION_HISTORY_BASIC`, `EXECUTION_HISTORY_DETAILED`.
         * 
         * @return builder
         * 
         */
        public Builder executionHistoryLevel(@Nullable Output<String> executionHistoryLevel) {
            $.executionHistoryLevel = executionHistoryLevel;
            return this;
        }

        /**
         * @param executionHistoryLevel Describes the level of execution history to be stored for this workflow. This configuration
         * determines how much information about workflow executions is preserved. If not specified,
         * defaults to EXECUTION_HISTORY_LEVEL_UNSPECIFIED.
         * Possible values are: `EXECUTION_HISTORY_LEVEL_UNSPECIFIED`, `EXECUTION_HISTORY_BASIC`, `EXECUTION_HISTORY_DETAILED`.
         * 
         * @return builder
         * 
         */
        public Builder executionHistoryLevel(String executionHistoryLevel) {
            return executionHistoryLevel(Output.of(executionHistoryLevel));
        }

        /**
         * @param labels A set of key/value label pairs to assign to this Workflow.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels A set of key/value label pairs to assign to this Workflow.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name Name of the Workflow.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Workflow.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namePrefix Creates a unique name beginning with the
         * specified prefix. If this and name are unspecified, a random value is chosen for the name.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        /**
         * @param namePrefix Creates a unique name beginning with the
         * specified prefix. If this and name are unspecified, a random value is chosen for the name.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param serviceAccount Name of the service account associated with the latest workflow version. This service
         * account represents the identity of the workflow and determines what permissions the workflow has.
         * Format: projects/{project}/serviceAccounts/{account} or {account}.
         * Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
         * The {account} value can be the email address or the unique_id of the service account.
         * If not provided, workflow will use the project&#39;s default service account.
         * Modifying this field for an existing workflow results in a new workflow revision.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount Name of the service account associated with the latest workflow version. This service
         * account represents the identity of the workflow and determines what permissions the workflow has.
         * Format: projects/{project}/serviceAccounts/{account} or {account}.
         * Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
         * The {account} value can be the email address or the unique_id of the service account.
         * If not provided, workflow will use the project&#39;s default service account.
         * Modifying this field for an existing workflow results in a new workflow revision.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        /**
         * @param sourceContents Workflow code to be executed. The size limit is 128KB.
         * 
         * @return builder
         * 
         */
        public Builder sourceContents(@Nullable Output<String> sourceContents) {
            $.sourceContents = sourceContents;
            return this;
        }

        /**
         * @param sourceContents Workflow code to be executed. The size limit is 128KB.
         * 
         * @return builder
         * 
         */
        public Builder sourceContents(String sourceContents) {
            return sourceContents(Output.of(sourceContents));
        }

        /**
         * @param tags A map of resource manager tags. Resource manager tag keys and values have the same definition
         * as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in
         * the format tagValues/456. The field is ignored (both PUT &amp; PATCH) when empty.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of resource manager tags. Resource manager tag keys and values have the same definition
         * as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in
         * the format tagValues/456. The field is ignored (both PUT &amp; PATCH) when empty.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param userEnvVars User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each string can take up to 4KiB. Keys cannot be empty strings and cannot start with &#34;GOOGLE&#34; or &#34;WORKFLOWS&#34;.
         * 
         * @return builder
         * 
         */
        public Builder userEnvVars(@Nullable Output<Map<String,String>> userEnvVars) {
            $.userEnvVars = userEnvVars;
            return this;
        }

        /**
         * @param userEnvVars User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each string can take up to 4KiB. Keys cannot be empty strings and cannot start with &#34;GOOGLE&#34; or &#34;WORKFLOWS&#34;.
         * 
         * @return builder
         * 
         */
        public Builder userEnvVars(Map<String,String> userEnvVars) {
            return userEnvVars(Output.of(userEnvVars));
        }

        public WorkflowArgs build() {
            return $;
        }
    }

}
