// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.ClusterNodePoolAutoscaling;
import com.pulumi.gcp.container.outputs.ClusterNodePoolManagement;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNetworkConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolPlacementPolicy;
import com.pulumi.gcp.container.outputs.ClusterNodePoolUpgradeSettings;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterNodePool {
    private @Nullable ClusterNodePoolAutoscaling autoscaling;
    /**
     * @return The number of nodes to create in this
     * cluster&#39;s default node pool. In regional or multi-zonal clusters, this is the
     * number of nodes per zone. Must be set if `node_pool` is not set. If you&#39;re using
     * `gcp.container.NodePool` objects with no default node pool, you&#39;ll need to
     * set this to a value of at least `1`, alongside setting
     * `remove_default_node_pool` to `true`.
     * 
     */
    private @Nullable Integer initialNodeCount;
    private @Nullable List<String> instanceGroupUrls;
    private @Nullable List<String> managedInstanceGroupUrls;
    /**
     * @return NodeManagement configuration for this NodePool. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolManagement management;
    private @Nullable Integer maxPodsPerNode;
    /**
     * @return The name of the cluster, unique within the project and
     * location.
     * 
     */
    private @Nullable String name;
    private @Nullable String namePrefix;
    /**
     * @return Configuration for
     * [Adding Pod IP address ranges](https://cloud.google.com/kubernetes-engine/docs/how-to/multi-pod-cidr)) to the node pool. Structure is documented below
     * 
     */
    private @Nullable ClusterNodePoolNetworkConfig networkConfig;
    /**
     * @return Parameters used in creating the default node pool.
     * Generally, this field should not be used at the same time as a
     * `gcp.container.NodePool` or a `node_pool` block; this configuration
     * manages the default node pool, which isn&#39;t recommended to be used.
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfig nodeConfig;
    private @Nullable Integer nodeCount;
    /**
     * @return The list of zones in which the cluster&#39;s nodes
     * are located. Nodes must be in the region of their regional cluster or in the
     * same region as their cluster&#39;s zone for zonal clusters. If this is specified for
     * a zonal cluster, omit the cluster&#39;s zone.
     * 
     */
    private @Nullable List<String> nodeLocations;
    private @Nullable ClusterNodePoolPlacementPolicy placementPolicy;
    private @Nullable ClusterNodePoolUpgradeSettings upgradeSettings;
    private @Nullable String version;

    private ClusterNodePool() {}
    public Optional<ClusterNodePoolAutoscaling> autoscaling() {
        return Optional.ofNullable(this.autoscaling);
    }
    /**
     * @return The number of nodes to create in this
     * cluster&#39;s default node pool. In regional or multi-zonal clusters, this is the
     * number of nodes per zone. Must be set if `node_pool` is not set. If you&#39;re using
     * `gcp.container.NodePool` objects with no default node pool, you&#39;ll need to
     * set this to a value of at least `1`, alongside setting
     * `remove_default_node_pool` to `true`.
     * 
     */
    public Optional<Integer> initialNodeCount() {
        return Optional.ofNullable(this.initialNodeCount);
    }
    public List<String> instanceGroupUrls() {
        return this.instanceGroupUrls == null ? List.of() : this.instanceGroupUrls;
    }
    public List<String> managedInstanceGroupUrls() {
        return this.managedInstanceGroupUrls == null ? List.of() : this.managedInstanceGroupUrls;
    }
    /**
     * @return NodeManagement configuration for this NodePool. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolManagement> management() {
        return Optional.ofNullable(this.management);
    }
    public Optional<Integer> maxPodsPerNode() {
        return Optional.ofNullable(this.maxPodsPerNode);
    }
    /**
     * @return The name of the cluster, unique within the project and
     * location.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }
    /**
     * @return Configuration for
     * [Adding Pod IP address ranges](https://cloud.google.com/kubernetes-engine/docs/how-to/multi-pod-cidr)) to the node pool. Structure is documented below
     * 
     */
    public Optional<ClusterNodePoolNetworkConfig> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }
    /**
     * @return Parameters used in creating the default node pool.
     * Generally, this field should not be used at the same time as a
     * `gcp.container.NodePool` or a `node_pool` block; this configuration
     * manages the default node pool, which isn&#39;t recommended to be used.
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfig> nodeConfig() {
        return Optional.ofNullable(this.nodeConfig);
    }
    public Optional<Integer> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }
    /**
     * @return The list of zones in which the cluster&#39;s nodes
     * are located. Nodes must be in the region of their regional cluster or in the
     * same region as their cluster&#39;s zone for zonal clusters. If this is specified for
     * a zonal cluster, omit the cluster&#39;s zone.
     * 
     */
    public List<String> nodeLocations() {
        return this.nodeLocations == null ? List.of() : this.nodeLocations;
    }
    public Optional<ClusterNodePoolPlacementPolicy> placementPolicy() {
        return Optional.ofNullable(this.placementPolicy);
    }
    public Optional<ClusterNodePoolUpgradeSettings> upgradeSettings() {
        return Optional.ofNullable(this.upgradeSettings);
    }
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterNodePool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ClusterNodePoolAutoscaling autoscaling;
        private @Nullable Integer initialNodeCount;
        private @Nullable List<String> instanceGroupUrls;
        private @Nullable List<String> managedInstanceGroupUrls;
        private @Nullable ClusterNodePoolManagement management;
        private @Nullable Integer maxPodsPerNode;
        private @Nullable String name;
        private @Nullable String namePrefix;
        private @Nullable ClusterNodePoolNetworkConfig networkConfig;
        private @Nullable ClusterNodePoolNodeConfig nodeConfig;
        private @Nullable Integer nodeCount;
        private @Nullable List<String> nodeLocations;
        private @Nullable ClusterNodePoolPlacementPolicy placementPolicy;
        private @Nullable ClusterNodePoolUpgradeSettings upgradeSettings;
        private @Nullable String version;
        public Builder() {}
        public Builder(ClusterNodePool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscaling = defaults.autoscaling;
    	      this.initialNodeCount = defaults.initialNodeCount;
    	      this.instanceGroupUrls = defaults.instanceGroupUrls;
    	      this.managedInstanceGroupUrls = defaults.managedInstanceGroupUrls;
    	      this.management = defaults.management;
    	      this.maxPodsPerNode = defaults.maxPodsPerNode;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
    	      this.networkConfig = defaults.networkConfig;
    	      this.nodeConfig = defaults.nodeConfig;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodeLocations = defaults.nodeLocations;
    	      this.placementPolicy = defaults.placementPolicy;
    	      this.upgradeSettings = defaults.upgradeSettings;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder autoscaling(@Nullable ClusterNodePoolAutoscaling autoscaling) {
            this.autoscaling = autoscaling;
            return this;
        }
        @CustomType.Setter
        public Builder initialNodeCount(@Nullable Integer initialNodeCount) {
            this.initialNodeCount = initialNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder instanceGroupUrls(@Nullable List<String> instanceGroupUrls) {
            this.instanceGroupUrls = instanceGroupUrls;
            return this;
        }
        public Builder instanceGroupUrls(String... instanceGroupUrls) {
            return instanceGroupUrls(List.of(instanceGroupUrls));
        }
        @CustomType.Setter
        public Builder managedInstanceGroupUrls(@Nullable List<String> managedInstanceGroupUrls) {
            this.managedInstanceGroupUrls = managedInstanceGroupUrls;
            return this;
        }
        public Builder managedInstanceGroupUrls(String... managedInstanceGroupUrls) {
            return managedInstanceGroupUrls(List.of(managedInstanceGroupUrls));
        }
        @CustomType.Setter
        public Builder management(@Nullable ClusterNodePoolManagement management) {
            this.management = management;
            return this;
        }
        @CustomType.Setter
        public Builder maxPodsPerNode(@Nullable Integer maxPodsPerNode) {
            this.maxPodsPerNode = maxPodsPerNode;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namePrefix(@Nullable String namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder networkConfig(@Nullable ClusterNodePoolNetworkConfig networkConfig) {
            this.networkConfig = networkConfig;
            return this;
        }
        @CustomType.Setter
        public Builder nodeConfig(@Nullable ClusterNodePoolNodeConfig nodeConfig) {
            this.nodeConfig = nodeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(@Nullable Integer nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder nodeLocations(@Nullable List<String> nodeLocations) {
            this.nodeLocations = nodeLocations;
            return this;
        }
        public Builder nodeLocations(String... nodeLocations) {
            return nodeLocations(List.of(nodeLocations));
        }
        @CustomType.Setter
        public Builder placementPolicy(@Nullable ClusterNodePoolPlacementPolicy placementPolicy) {
            this.placementPolicy = placementPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder upgradeSettings(@Nullable ClusterNodePoolUpgradeSettings upgradeSettings) {
            this.upgradeSettings = upgradeSettings;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public ClusterNodePool build() {
            final var o = new ClusterNodePool();
            o.autoscaling = autoscaling;
            o.initialNodeCount = initialNodeCount;
            o.instanceGroupUrls = instanceGroupUrls;
            o.managedInstanceGroupUrls = managedInstanceGroupUrls;
            o.management = management;
            o.maxPodsPerNode = maxPodsPerNode;
            o.name = name;
            o.namePrefix = namePrefix;
            o.networkConfig = networkConfig;
            o.nodeConfig = nodeConfig;
            o.nodeCount = nodeCount;
            o.nodeLocations = nodeLocations;
            o.placementPolicy = placementPolicy;
            o.upgradeSettings = upgradeSettings;
            o.version = version;
            return o;
        }
    }
}
