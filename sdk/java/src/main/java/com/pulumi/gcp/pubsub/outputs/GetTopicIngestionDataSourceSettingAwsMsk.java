// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTopicIngestionDataSourceSettingAwsMsk {
    /**
     * @return AWS role ARN to be used for Federated Identity authentication with
     * MSK. Check the Pub/Sub docs for how to set up this role and the
     * required permissions that need to be attached to it.
     * 
     */
    private String awsRoleArn;
    /**
     * @return ARN that uniquely identifies the MSK cluster.
     * 
     */
    private String clusterArn;
    /**
     * @return The GCP service account to be used for Federated Identity authentication
     * with MSK (via a &#39;AssumeRoleWithWebIdentity&#39; call for the provided
     * role). The &#39;awsRoleArn&#39; must be set up with &#39;accounts.google.com:sub&#39;
     * equals to this service account number.
     * 
     */
    private String gcpServiceAccount;
    /**
     * @return The name of the MSK topic that Pub/Sub will import from.
     * 
     */
    private String topic;

    private GetTopicIngestionDataSourceSettingAwsMsk() {}
    /**
     * @return AWS role ARN to be used for Federated Identity authentication with
     * MSK. Check the Pub/Sub docs for how to set up this role and the
     * required permissions that need to be attached to it.
     * 
     */
    public String awsRoleArn() {
        return this.awsRoleArn;
    }
    /**
     * @return ARN that uniquely identifies the MSK cluster.
     * 
     */
    public String clusterArn() {
        return this.clusterArn;
    }
    /**
     * @return The GCP service account to be used for Federated Identity authentication
     * with MSK (via a &#39;AssumeRoleWithWebIdentity&#39; call for the provided
     * role). The &#39;awsRoleArn&#39; must be set up with &#39;accounts.google.com:sub&#39;
     * equals to this service account number.
     * 
     */
    public String gcpServiceAccount() {
        return this.gcpServiceAccount;
    }
    /**
     * @return The name of the MSK topic that Pub/Sub will import from.
     * 
     */
    public String topic() {
        return this.topic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTopicIngestionDataSourceSettingAwsMsk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String awsRoleArn;
        private String clusterArn;
        private String gcpServiceAccount;
        private String topic;
        public Builder() {}
        public Builder(GetTopicIngestionDataSourceSettingAwsMsk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsRoleArn = defaults.awsRoleArn;
    	      this.clusterArn = defaults.clusterArn;
    	      this.gcpServiceAccount = defaults.gcpServiceAccount;
    	      this.topic = defaults.topic;
        }

        @CustomType.Setter
        public Builder awsRoleArn(String awsRoleArn) {
            if (awsRoleArn == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingAwsMsk", "awsRoleArn");
            }
            this.awsRoleArn = awsRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder clusterArn(String clusterArn) {
            if (clusterArn == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingAwsMsk", "clusterArn");
            }
            this.clusterArn = clusterArn;
            return this;
        }
        @CustomType.Setter
        public Builder gcpServiceAccount(String gcpServiceAccount) {
            if (gcpServiceAccount == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingAwsMsk", "gcpServiceAccount");
            }
            this.gcpServiceAccount = gcpServiceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder topic(String topic) {
            if (topic == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingAwsMsk", "topic");
            }
            this.topic = topic;
            return this;
        }
        public GetTopicIngestionDataSourceSettingAwsMsk build() {
            final var _resultValue = new GetTopicIngestionDataSourceSettingAwsMsk();
            _resultValue.awsRoleArn = awsRoleArn;
            _resultValue.clusterArn = clusterArn;
            _resultValue.gcpServiceAccount = gcpServiceAccount;
            _resultValue.topic = topic;
            return _resultValue;
        }
    }
}
