// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BatchRuntimeInfoCurrentUsage {
    /**
     * @return (Output)
     * Accelerator type being used, if any.
     * 
     */
    private @Nullable String acceleratorType;
    /**
     * @return (Output)
     * Milli (one-thousandth) accelerator..
     * 
     */
    private @Nullable String milliAccelerator;
    /**
     * @return (Output)
     * Milli (one-thousandth) Dataproc Compute Units (DCUs).
     * 
     */
    private @Nullable String milliDcu;
    /**
     * @return (Output)
     * Milli (one-thousandth) Dataproc Compute Units (DCUs) charged at premium tier.
     * 
     */
    private @Nullable String milliDcuPremium;
    /**
     * @return (Output)
     * Shuffle Storage in gigabytes (GB).
     * 
     */
    private @Nullable String shuffleStorageGb;
    /**
     * @return (Output)
     * Shuffle Storage in gigabytes (GB) charged at premium tier.
     * 
     */
    private @Nullable String shuffleStorageGbPremium;
    /**
     * @return (Output)
     * The timestamp of the usage snapshot.
     * 
     */
    private @Nullable String snapshotTime;

    private BatchRuntimeInfoCurrentUsage() {}
    /**
     * @return (Output)
     * Accelerator type being used, if any.
     * 
     */
    public Optional<String> acceleratorType() {
        return Optional.ofNullable(this.acceleratorType);
    }
    /**
     * @return (Output)
     * Milli (one-thousandth) accelerator..
     * 
     */
    public Optional<String> milliAccelerator() {
        return Optional.ofNullable(this.milliAccelerator);
    }
    /**
     * @return (Output)
     * Milli (one-thousandth) Dataproc Compute Units (DCUs).
     * 
     */
    public Optional<String> milliDcu() {
        return Optional.ofNullable(this.milliDcu);
    }
    /**
     * @return (Output)
     * Milli (one-thousandth) Dataproc Compute Units (DCUs) charged at premium tier.
     * 
     */
    public Optional<String> milliDcuPremium() {
        return Optional.ofNullable(this.milliDcuPremium);
    }
    /**
     * @return (Output)
     * Shuffle Storage in gigabytes (GB).
     * 
     */
    public Optional<String> shuffleStorageGb() {
        return Optional.ofNullable(this.shuffleStorageGb);
    }
    /**
     * @return (Output)
     * Shuffle Storage in gigabytes (GB) charged at premium tier.
     * 
     */
    public Optional<String> shuffleStorageGbPremium() {
        return Optional.ofNullable(this.shuffleStorageGbPremium);
    }
    /**
     * @return (Output)
     * The timestamp of the usage snapshot.
     * 
     */
    public Optional<String> snapshotTime() {
        return Optional.ofNullable(this.snapshotTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BatchRuntimeInfoCurrentUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String acceleratorType;
        private @Nullable String milliAccelerator;
        private @Nullable String milliDcu;
        private @Nullable String milliDcuPremium;
        private @Nullable String shuffleStorageGb;
        private @Nullable String shuffleStorageGbPremium;
        private @Nullable String snapshotTime;
        public Builder() {}
        public Builder(BatchRuntimeInfoCurrentUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorType = defaults.acceleratorType;
    	      this.milliAccelerator = defaults.milliAccelerator;
    	      this.milliDcu = defaults.milliDcu;
    	      this.milliDcuPremium = defaults.milliDcuPremium;
    	      this.shuffleStorageGb = defaults.shuffleStorageGb;
    	      this.shuffleStorageGbPremium = defaults.shuffleStorageGbPremium;
    	      this.snapshotTime = defaults.snapshotTime;
        }

        @CustomType.Setter
        public Builder acceleratorType(@Nullable String acceleratorType) {

            this.acceleratorType = acceleratorType;
            return this;
        }
        @CustomType.Setter
        public Builder milliAccelerator(@Nullable String milliAccelerator) {

            this.milliAccelerator = milliAccelerator;
            return this;
        }
        @CustomType.Setter
        public Builder milliDcu(@Nullable String milliDcu) {

            this.milliDcu = milliDcu;
            return this;
        }
        @CustomType.Setter
        public Builder milliDcuPremium(@Nullable String milliDcuPremium) {

            this.milliDcuPremium = milliDcuPremium;
            return this;
        }
        @CustomType.Setter
        public Builder shuffleStorageGb(@Nullable String shuffleStorageGb) {

            this.shuffleStorageGb = shuffleStorageGb;
            return this;
        }
        @CustomType.Setter
        public Builder shuffleStorageGbPremium(@Nullable String shuffleStorageGbPremium) {

            this.shuffleStorageGbPremium = shuffleStorageGbPremium;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotTime(@Nullable String snapshotTime) {

            this.snapshotTime = snapshotTime;
            return this;
        }
        public BatchRuntimeInfoCurrentUsage build() {
            final var _resultValue = new BatchRuntimeInfoCurrentUsage();
            _resultValue.acceleratorType = acceleratorType;
            _resultValue.milliAccelerator = milliAccelerator;
            _resultValue.milliDcu = milliDcu;
            _resultValue.milliDcuPremium = milliDcuPremium;
            _resultValue.shuffleStorageGb = shuffleStorageGb;
            _resultValue.shuffleStorageGbPremium = shuffleStorageGbPremium;
            _resultValue.snapshotTime = snapshotTime;
            return _resultValue;
        }
    }
}
