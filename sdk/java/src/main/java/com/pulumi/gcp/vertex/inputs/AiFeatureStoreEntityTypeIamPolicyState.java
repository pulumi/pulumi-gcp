// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiFeatureStoreEntityTypeIamPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final AiFeatureStoreEntityTypeIamPolicyState Empty = new AiFeatureStoreEntityTypeIamPolicyState();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="entitytype")
    private @Nullable Output<String> entitytype;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Optional<Output<String>> entitytype() {
        return Optional.ofNullable(this.entitytype);
    }

    /**
     * (Computed) The etag of the IAM policy.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return (Computed) The etag of the IAM policy.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}. Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="featurestore")
    private @Nullable Output<String> featurestore;

    /**
     * @return The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}. Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Optional<Output<String>> featurestore() {
        return Optional.ofNullable(this.featurestore);
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData")
    private @Nullable Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Optional<Output<String>> policyData() {
        return Optional.ofNullable(this.policyData);
    }

    private AiFeatureStoreEntityTypeIamPolicyState() {}

    private AiFeatureStoreEntityTypeIamPolicyState(AiFeatureStoreEntityTypeIamPolicyState $) {
        this.entitytype = $.entitytype;
        this.etag = $.etag;
        this.featurestore = $.featurestore;
        this.policyData = $.policyData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiFeatureStoreEntityTypeIamPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiFeatureStoreEntityTypeIamPolicyState $;

        public Builder() {
            $ = new AiFeatureStoreEntityTypeIamPolicyState();
        }

        public Builder(AiFeatureStoreEntityTypeIamPolicyState defaults) {
            $ = new AiFeatureStoreEntityTypeIamPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param entitytype Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder entitytype(@Nullable Output<String> entitytype) {
            $.entitytype = entitytype;
            return this;
        }

        /**
         * @param entitytype Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder entitytype(String entitytype) {
            return entitytype(Output.of(entitytype));
        }

        /**
         * @param etag (Computed) The etag of the IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag (Computed) The etag of the IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param featurestore The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}. Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder featurestore(@Nullable Output<String> featurestore) {
            $.featurestore = featurestore;
            return this;
        }

        /**
         * @param featurestore The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}. Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder featurestore(String featurestore) {
            return featurestore(Output.of(featurestore));
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(@Nullable Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        public AiFeatureStoreEntityTypeIamPolicyState build() {
            return $;
        }
    }

}
