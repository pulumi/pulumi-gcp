// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetConditionsArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetDisabledArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigTargetBigQueryTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigTargetBigQueryTargetArgs Empty = new PreventionDiscoveryConfigTargetBigQueryTargetArgs();

    /**
     * How often and when to update profiles. New tables that match both the fiter and conditions are scanned as quickly as possible depending on system capacity.
     * Structure is documented below.
     * 
     */
    @Import(name="cadence")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs> cadence;

    /**
     * @return How often and when to update profiles. New tables that match both the fiter and conditions are scanned as quickly as possible depending on system capacity.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs>> cadence() {
        return Optional.ofNullable(this.cadence);
    }

    /**
     * In addition to matching the filter, these conditions must be true before a profile is generated
     * Structure is documented below.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetConditionsArgs> conditions;

    /**
     * @return In addition to matching the filter, these conditions must be true before a profile is generated
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetConditionsArgs>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Tables that match this filter will not have profiles created.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetDisabledArgs> disabled;

    /**
     * @return Tables that match this filter will not have profiles created.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetDisabledArgs>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * Required. The tables the discovery cadence applies to. The first target with a matching filter will be the one to apply to a table
     * Structure is documented below.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs> filter;

    /**
     * @return Required. The tables the discovery cadence applies to. The first target with a matching filter will be the one to apply to a table
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    private PreventionDiscoveryConfigTargetBigQueryTargetArgs() {}

    private PreventionDiscoveryConfigTargetBigQueryTargetArgs(PreventionDiscoveryConfigTargetBigQueryTargetArgs $) {
        this.cadence = $.cadence;
        this.conditions = $.conditions;
        this.disabled = $.disabled;
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigTargetBigQueryTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigTargetBigQueryTargetArgs $;

        public Builder() {
            $ = new PreventionDiscoveryConfigTargetBigQueryTargetArgs();
        }

        public Builder(PreventionDiscoveryConfigTargetBigQueryTargetArgs defaults) {
            $ = new PreventionDiscoveryConfigTargetBigQueryTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cadence How often and when to update profiles. New tables that match both the fiter and conditions are scanned as quickly as possible depending on system capacity.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cadence(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs> cadence) {
            $.cadence = cadence;
            return this;
        }

        /**
         * @param cadence How often and when to update profiles. New tables that match both the fiter and conditions are scanned as quickly as possible depending on system capacity.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cadence(PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs cadence) {
            return cadence(Output.of(cadence));
        }

        /**
         * @param conditions In addition to matching the filter, these conditions must be true before a profile is generated
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetConditionsArgs> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions In addition to matching the filter, these conditions must be true before a profile is generated
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(PreventionDiscoveryConfigTargetBigQueryTargetConditionsArgs conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param disabled Tables that match this filter will not have profiles created.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetDisabledArgs> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Tables that match this filter will not have profiles created.
         * 
         * @return builder
         * 
         */
        public Builder disabled(PreventionDiscoveryConfigTargetBigQueryTargetDisabledArgs disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param filter Required. The tables the discovery cadence applies to. The first target with a matching filter will be the one to apply to a table
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Required. The tables the discovery cadence applies to. The first target with a matching filter will be the one to apply to a table
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs filter) {
            return filter(Output.of(filter));
        }

        public PreventionDiscoveryConfigTargetBigQueryTargetArgs build() {
            return $;
        }
    }

}
