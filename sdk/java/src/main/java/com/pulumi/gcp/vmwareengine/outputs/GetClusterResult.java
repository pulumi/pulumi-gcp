// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vmwareengine.outputs.GetClusterNodeTypeConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Boolean management;
    private String name;
    private List<GetClusterNodeTypeConfig> nodeTypeConfigs;
    private String parent;
    private String state;
    private String uid;

    private GetClusterResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean management() {
        return this.management;
    }
    public String name() {
        return this.name;
    }
    public List<GetClusterNodeTypeConfig> nodeTypeConfigs() {
        return this.nodeTypeConfigs;
    }
    public String parent() {
        return this.parent;
    }
    public String state() {
        return this.state;
    }
    public String uid() {
        return this.uid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Boolean management;
        private String name;
        private List<GetClusterNodeTypeConfig> nodeTypeConfigs;
        private String parent;
        private String state;
        private String uid;
        public Builder() {}
        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.management = defaults.management;
    	      this.name = defaults.name;
    	      this.nodeTypeConfigs = defaults.nodeTypeConfigs;
    	      this.parent = defaults.parent;
    	      this.state = defaults.state;
    	      this.uid = defaults.uid;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder management(Boolean management) {
            if (management == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "management");
            }
            this.management = management;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodeTypeConfigs(List<GetClusterNodeTypeConfig> nodeTypeConfigs) {
            if (nodeTypeConfigs == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "nodeTypeConfigs");
            }
            this.nodeTypeConfigs = nodeTypeConfigs;
            return this;
        }
        public Builder nodeTypeConfigs(GetClusterNodeTypeConfig... nodeTypeConfigs) {
            return nodeTypeConfigs(List.of(nodeTypeConfigs));
        }
        @CustomType.Setter
        public Builder parent(String parent) {
            if (parent == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "parent");
            }
            this.parent = parent;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder uid(String uid) {
            if (uid == null) {
              throw new MissingRequiredPropertyException("GetClusterResult", "uid");
            }
            this.uid = uid;
            return this;
        }
        public GetClusterResult build() {
            final var _resultValue = new GetClusterResult();
            _resultValue.id = id;
            _resultValue.management = management;
            _resultValue.name = name;
            _resultValue.nodeTypeConfigs = nodeTypeConfigs;
            _resultValue.parent = parent;
            _resultValue.state = state;
            _resultValue.uid = uid;
            return _resultValue;
        }
    }
}
