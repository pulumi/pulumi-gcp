// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BareMetalClusterStatusCondition {
    /**
     * @return (Output)
     * Last time the condition transit from one status to another.
     * 
     */
    private @Nullable String lastTransitionTime;
    /**
     * @return Human-readable message indicating details about last transition.
     * 
     */
    private @Nullable String message;
    /**
     * @return (Output)
     * A human-readable message of the check failure.
     * 
     */
    private @Nullable String reason;
    /**
     * @return (Output)
     * The lifecycle state of the condition.
     * 
     */
    private @Nullable String state;
    /**
     * @return Type of the condition.
     * (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
     * 
     */
    private @Nullable String type;

    private BareMetalClusterStatusCondition() {}
    /**
     * @return (Output)
     * Last time the condition transit from one status to another.
     * 
     */
    public Optional<String> lastTransitionTime() {
        return Optional.ofNullable(this.lastTransitionTime);
    }
    /**
     * @return Human-readable message indicating details about last transition.
     * 
     */
    public Optional<String> message() {
        return Optional.ofNullable(this.message);
    }
    /**
     * @return (Output)
     * A human-readable message of the check failure.
     * 
     */
    public Optional<String> reason() {
        return Optional.ofNullable(this.reason);
    }
    /**
     * @return (Output)
     * The lifecycle state of the condition.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Type of the condition.
     * (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BareMetalClusterStatusCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String lastTransitionTime;
        private @Nullable String message;
        private @Nullable String reason;
        private @Nullable String state;
        private @Nullable String type;
        public Builder() {}
        public Builder(BareMetalClusterStatusCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lastTransitionTime = defaults.lastTransitionTime;
    	      this.message = defaults.message;
    	      this.reason = defaults.reason;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder lastTransitionTime(@Nullable String lastTransitionTime) {
            this.lastTransitionTime = lastTransitionTime;
            return this;
        }
        @CustomType.Setter
        public Builder message(@Nullable String message) {
            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder reason(@Nullable String reason) {
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public BareMetalClusterStatusCondition build() {
            final var o = new BareMetalClusterStatusCondition();
            o.lastTransitionTime = lastTransitionTime;
            o.message = message;
            o.reason = reason;
            o.state = state;
            o.type = type;
            return o;
        }
    }
}
