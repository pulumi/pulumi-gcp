// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.diagflow.outputs.CxWebhookServiceDirectoryGenericWebService;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CxWebhookServiceDirectory {
    /**
     * @return The name of Service Directory service.
     * Structure is documented below.
     * 
     */
    private CxWebhookServiceDirectoryGenericWebService genericWebService;
    /**
     * @return The name of Service Directory service.
     * 
     */
    private String service;

    private CxWebhookServiceDirectory() {}
    /**
     * @return The name of Service Directory service.
     * Structure is documented below.
     * 
     */
    public CxWebhookServiceDirectoryGenericWebService genericWebService() {
        return this.genericWebService;
    }
    /**
     * @return The name of Service Directory service.
     * 
     */
    public String service() {
        return this.service;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxWebhookServiceDirectory defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private CxWebhookServiceDirectoryGenericWebService genericWebService;
        private String service;
        public Builder() {}
        public Builder(CxWebhookServiceDirectory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.genericWebService = defaults.genericWebService;
    	      this.service = defaults.service;
        }

        @CustomType.Setter
        public Builder genericWebService(CxWebhookServiceDirectoryGenericWebService genericWebService) {
            this.genericWebService = Objects.requireNonNull(genericWebService);
            return this;
        }
        @CustomType.Setter
        public Builder service(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }
        public CxWebhookServiceDirectory build() {
            final var _resultValue = new CxWebhookServiceDirectory();
            _resultValue.genericWebService = genericWebService;
            _resultValue.service = service;
            return _resultValue;
        }
    }
}
