// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleMatchExprOptionsRecaptchaOptionsArgs;
import java.util.Objects;


public final class SecurityPolicyRuleMatchExprOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyRuleMatchExprOptionsArgs Empty = new SecurityPolicyRuleMatchExprOptionsArgs();

    /**
     * reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field has no effect.
     * Structure is documented below.
     * 
     */
    @Import(name="recaptchaOptions", required=true)
    private Output<SecurityPolicyRuleMatchExprOptionsRecaptchaOptionsArgs> recaptchaOptions;

    /**
     * @return reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field has no effect.
     * Structure is documented below.
     * 
     */
    public Output<SecurityPolicyRuleMatchExprOptionsRecaptchaOptionsArgs> recaptchaOptions() {
        return this.recaptchaOptions;
    }

    private SecurityPolicyRuleMatchExprOptionsArgs() {}

    private SecurityPolicyRuleMatchExprOptionsArgs(SecurityPolicyRuleMatchExprOptionsArgs $) {
        this.recaptchaOptions = $.recaptchaOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyRuleMatchExprOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyRuleMatchExprOptionsArgs $;

        public Builder() {
            $ = new SecurityPolicyRuleMatchExprOptionsArgs();
        }

        public Builder(SecurityPolicyRuleMatchExprOptionsArgs defaults) {
            $ = new SecurityPolicyRuleMatchExprOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recaptchaOptions reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field has no effect.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder recaptchaOptions(Output<SecurityPolicyRuleMatchExprOptionsRecaptchaOptionsArgs> recaptchaOptions) {
            $.recaptchaOptions = recaptchaOptions;
            return this;
        }

        /**
         * @param recaptchaOptions reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field has no effect.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder recaptchaOptions(SecurityPolicyRuleMatchExprOptionsRecaptchaOptionsArgs recaptchaOptions) {
            return recaptchaOptions(Output.of(recaptchaOptions));
        }

        public SecurityPolicyRuleMatchExprOptionsArgs build() {
            if ($.recaptchaOptions == null) {
                throw new MissingRequiredPropertyException("SecurityPolicyRuleMatchExprOptionsArgs", "recaptchaOptions");
            }
            return $;
        }
    }

}
