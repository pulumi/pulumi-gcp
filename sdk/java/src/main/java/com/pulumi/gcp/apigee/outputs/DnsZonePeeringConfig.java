// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DnsZonePeeringConfig {
    /**
     * @return The name of the producer VPC network.
     * 
     */
    private String targetNetworkId;
    /**
     * @return The ID of the project that contains the producer VPC network.
     * 
     */
    private String targetProjectId;

    private DnsZonePeeringConfig() {}
    /**
     * @return The name of the producer VPC network.
     * 
     */
    public String targetNetworkId() {
        return this.targetNetworkId;
    }
    /**
     * @return The ID of the project that contains the producer VPC network.
     * 
     */
    public String targetProjectId() {
        return this.targetProjectId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DnsZonePeeringConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String targetNetworkId;
        private String targetProjectId;
        public Builder() {}
        public Builder(DnsZonePeeringConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.targetNetworkId = defaults.targetNetworkId;
    	      this.targetProjectId = defaults.targetProjectId;
        }

        @CustomType.Setter
        public Builder targetNetworkId(String targetNetworkId) {
            if (targetNetworkId == null) {
              throw new MissingRequiredPropertyException("DnsZonePeeringConfig", "targetNetworkId");
            }
            this.targetNetworkId = targetNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder targetProjectId(String targetProjectId) {
            if (targetProjectId == null) {
              throw new MissingRequiredPropertyException("DnsZonePeeringConfig", "targetProjectId");
            }
            this.targetProjectId = targetProjectId;
            return this;
        }
        public DnsZonePeeringConfig build() {
            final var _resultValue = new DnsZonePeeringConfig();
            _resultValue.targetNetworkId = targetNetworkId;
            _resultValue.targetProjectId = targetProjectId;
            return _resultValue;
        }
    }
}
