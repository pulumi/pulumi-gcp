// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WireGroupWireGroupPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final WireGroupWireGroupPropertiesArgs Empty = new WireGroupWireGroupPropertiesArgs();

    /**
     * Type of wire group (enum).
     * WIRE: a single pseudowire over two Interconnect connections   with no redundancy.
     * REDUNDANT: two pseudowires over four Interconnect connections, with two connections in one metro and two connections in another metro.
     * BOX_AND_CROSS: four pseudowires over four Interconnect connections, with two connections in one metro and two connections in another metro.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of wire group (enum).
     * WIRE: a single pseudowire over two Interconnect connections   with no redundancy.
     * REDUNDANT: two pseudowires over four Interconnect connections, with two connections in one metro and two connections in another metro.
     * BOX_AND_CROSS: four pseudowires over four Interconnect connections, with two connections in one metro and two connections in another metro.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private WireGroupWireGroupPropertiesArgs() {}

    private WireGroupWireGroupPropertiesArgs(WireGroupWireGroupPropertiesArgs $) {
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WireGroupWireGroupPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WireGroupWireGroupPropertiesArgs $;

        public Builder() {
            $ = new WireGroupWireGroupPropertiesArgs();
        }

        public Builder(WireGroupWireGroupPropertiesArgs defaults) {
            $ = new WireGroupWireGroupPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type Type of wire group (enum).
         * WIRE: a single pseudowire over two Interconnect connections   with no redundancy.
         * REDUNDANT: two pseudowires over four Interconnect connections, with two connections in one metro and two connections in another metro.
         * BOX_AND_CROSS: four pseudowires over four Interconnect connections, with two connections in one metro and two connections in another metro.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of wire group (enum).
         * WIRE: a single pseudowire over two Interconnect connections   with no redundancy.
         * REDUNDANT: two pseudowires over four Interconnect connections, with two connections in one metro and two connections in another metro.
         * BOX_AND_CROSS: four pseudowires over four Interconnect connections, with two connections in one metro and two connections in another metro.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public WireGroupWireGroupPropertiesArgs build() {
            return $;
        }
    }

}
