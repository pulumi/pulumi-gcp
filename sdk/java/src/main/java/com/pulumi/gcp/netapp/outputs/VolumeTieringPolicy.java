// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeTieringPolicy {
    /**
     * @return Optional. Time in days to mark the volume&#39;s data block as cold and make it eligible for tiering, can be range from 2-183.
     * Default is 31.
     * 
     */
    private @Nullable Integer coolingThresholdDays;
    /**
     * @return Optional. Flag indicating that the hot tier bypass mode is enabled. Default is false.
     * Only applicable to Flex service level.
     * 
     */
    private @Nullable Boolean hotTierBypassModeEnabled;
    /**
     * @return Optional. Flag indicating if the volume has tiering policy enable/pause. Default is PAUSED.
     * Default value is `PAUSED`.
     * Possible values are: `ENABLED`, `PAUSED`.
     * 
     */
    private @Nullable String tierAction;

    private VolumeTieringPolicy() {}
    /**
     * @return Optional. Time in days to mark the volume&#39;s data block as cold and make it eligible for tiering, can be range from 2-183.
     * Default is 31.
     * 
     */
    public Optional<Integer> coolingThresholdDays() {
        return Optional.ofNullable(this.coolingThresholdDays);
    }
    /**
     * @return Optional. Flag indicating that the hot tier bypass mode is enabled. Default is false.
     * Only applicable to Flex service level.
     * 
     */
    public Optional<Boolean> hotTierBypassModeEnabled() {
        return Optional.ofNullable(this.hotTierBypassModeEnabled);
    }
    /**
     * @return Optional. Flag indicating if the volume has tiering policy enable/pause. Default is PAUSED.
     * Default value is `PAUSED`.
     * Possible values are: `ENABLED`, `PAUSED`.
     * 
     */
    public Optional<String> tierAction() {
        return Optional.ofNullable(this.tierAction);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeTieringPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer coolingThresholdDays;
        private @Nullable Boolean hotTierBypassModeEnabled;
        private @Nullable String tierAction;
        public Builder() {}
        public Builder(VolumeTieringPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coolingThresholdDays = defaults.coolingThresholdDays;
    	      this.hotTierBypassModeEnabled = defaults.hotTierBypassModeEnabled;
    	      this.tierAction = defaults.tierAction;
        }

        @CustomType.Setter
        public Builder coolingThresholdDays(@Nullable Integer coolingThresholdDays) {

            this.coolingThresholdDays = coolingThresholdDays;
            return this;
        }
        @CustomType.Setter
        public Builder hotTierBypassModeEnabled(@Nullable Boolean hotTierBypassModeEnabled) {

            this.hotTierBypassModeEnabled = hotTierBypassModeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder tierAction(@Nullable String tierAction) {

            this.tierAction = tierAction;
            return this;
        }
        public VolumeTieringPolicy build() {
            final var _resultValue = new VolumeTieringPolicy();
            _resultValue.coolingThresholdDays = coolingThresholdDays;
            _resultValue.hotTierBypassModeEnabled = hotTierBypassModeEnabled;
            _resultValue.tierAction = tierAction;
            return _resultValue;
        }
    }
}
