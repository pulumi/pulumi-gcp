// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.saasruntime.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReleaseBlueprintArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReleaseBlueprintArgs Empty = new ReleaseBlueprintArgs();

    @Import(name="engine")
    private @Nullable Output<String> engine;

    public Optional<Output<String>> engine() {
        return Optional.ofNullable(this.engine);
    }

    /**
     * URI to a blueprint used by the Unit (required unless unitKind or release is
     * set).
     * 
     */
    @Import(name="package")
    private @Nullable Output<String> package_;

    /**
     * @return URI to a blueprint used by the Unit (required unless unitKind or release is
     * set).
     * 
     */
    public Optional<Output<String>> package_() {
        return Optional.ofNullable(this.package_);
    }

    /**
     * (Output)
     * Version metadata if present on the blueprint.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return (Output)
     * Version metadata if present on the blueprint.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ReleaseBlueprintArgs() {}

    private ReleaseBlueprintArgs(ReleaseBlueprintArgs $) {
        this.engine = $.engine;
        this.package_ = $.package_;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReleaseBlueprintArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReleaseBlueprintArgs $;

        public Builder() {
            $ = new ReleaseBlueprintArgs();
        }

        public Builder(ReleaseBlueprintArgs defaults) {
            $ = new ReleaseBlueprintArgs(Objects.requireNonNull(defaults));
        }

        public Builder engine(@Nullable Output<String> engine) {
            $.engine = engine;
            return this;
        }

        public Builder engine(String engine) {
            return engine(Output.of(engine));
        }

        /**
         * @param package_ URI to a blueprint used by the Unit (required unless unitKind or release is
         * set).
         * 
         * @return builder
         * 
         */
        public Builder package_(@Nullable Output<String> package_) {
            $.package_ = package_;
            return this;
        }

        /**
         * @param package_ URI to a blueprint used by the Unit (required unless unitKind or release is
         * set).
         * 
         * @return builder
         * 
         */
        public Builder package_(String package_) {
            return package_(Output.of(package_));
        }

        /**
         * @param version (Output)
         * Version metadata if present on the blueprint.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version (Output)
         * Version metadata if present on the blueprint.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ReleaseBlueprintArgs build() {
            return $;
        }
    }

}
