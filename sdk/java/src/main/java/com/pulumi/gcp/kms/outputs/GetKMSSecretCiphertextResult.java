// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKMSSecretCiphertextResult {
    /**
     * @return Contains the result of encrypting the provided plaintext, encoded in base64.
     * 
     */
    private String ciphertext;
    private String cryptoKey;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String plaintext;

    private GetKMSSecretCiphertextResult() {}
    /**
     * @return Contains the result of encrypting the provided plaintext, encoded in base64.
     * 
     */
    public String ciphertext() {
        return this.ciphertext;
    }
    public String cryptoKey() {
        return this.cryptoKey;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String plaintext() {
        return this.plaintext;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKMSSecretCiphertextResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ciphertext;
        private String cryptoKey;
        private String id;
        private String plaintext;
        public Builder() {}
        public Builder(GetKMSSecretCiphertextResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ciphertext = defaults.ciphertext;
    	      this.cryptoKey = defaults.cryptoKey;
    	      this.id = defaults.id;
    	      this.plaintext = defaults.plaintext;
        }

        @CustomType.Setter
        public Builder ciphertext(String ciphertext) {
            if (ciphertext == null) {
              throw new MissingRequiredPropertyException("GetKMSSecretCiphertextResult", "ciphertext");
            }
            this.ciphertext = ciphertext;
            return this;
        }
        @CustomType.Setter
        public Builder cryptoKey(String cryptoKey) {
            if (cryptoKey == null) {
              throw new MissingRequiredPropertyException("GetKMSSecretCiphertextResult", "cryptoKey");
            }
            this.cryptoKey = cryptoKey;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetKMSSecretCiphertextResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder plaintext(String plaintext) {
            if (plaintext == null) {
              throw new MissingRequiredPropertyException("GetKMSSecretCiphertextResult", "plaintext");
            }
            this.plaintext = plaintext;
            return this;
        }
        public GetKMSSecretCiphertextResult build() {
            final var _resultValue = new GetKMSSecretCiphertextResult();
            _resultValue.ciphertext = ciphertext;
            _resultValue.cryptoKey = cryptoKey;
            _resultValue.id = id;
            _resultValue.plaintext = plaintext;
            return _resultValue;
        }
    }
}
