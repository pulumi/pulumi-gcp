// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.AzureNodePoolConfigProxyConfigArgs;
import com.pulumi.gcp.container.inputs.AzureNodePoolConfigRootVolumeArgs;
import com.pulumi.gcp.container.inputs.AzureNodePoolConfigSshConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureNodePoolConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureNodePoolConfigArgs Empty = new AzureNodePoolConfigArgs();

    /**
     * (Beta only) The OS image type to use on node pool instances.
     * 
     */
    @Import(name="imageType")
    private @Nullable Output<String> imageType;

    /**
     * @return (Beta only) The OS image type to use on node pool instances.
     * 
     */
    public Optional<Output<String>> imageType() {
        return Optional.ofNullable(this.imageType);
    }

    /**
     * Proxy configuration for outbound HTTP(S) traffic.
     * 
     */
    @Import(name="proxyConfig")
    private @Nullable Output<AzureNodePoolConfigProxyConfigArgs> proxyConfig;

    /**
     * @return Proxy configuration for outbound HTTP(S) traffic.
     * 
     */
    public Optional<Output<AzureNodePoolConfigProxyConfigArgs>> proxyConfig() {
        return Optional.ofNullable(this.proxyConfig);
    }

    /**
     * Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
     * 
     */
    @Import(name="rootVolume")
    private @Nullable Output<AzureNodePoolConfigRootVolumeArgs> rootVolume;

    /**
     * @return Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
     * 
     */
    public Optional<Output<AzureNodePoolConfigRootVolumeArgs>> rootVolume() {
        return Optional.ofNullable(this.rootVolume);
    }

    /**
     * SSH configuration for how to access the node pool machines.
     * 
     */
    @Import(name="sshConfig", required=true)
    private Output<AzureNodePoolConfigSshConfigArgs> sshConfig;

    /**
     * @return SSH configuration for how to access the node pool machines.
     * 
     */
    public Output<AzureNodePoolConfigSshConfigArgs> sshConfig() {
        return this.sshConfig;
    }

    /**
     * Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
     * 
     */
    @Import(name="vmSize")
    private @Nullable Output<String> vmSize;

    /**
     * @return Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
     * 
     */
    public Optional<Output<String>> vmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    private AzureNodePoolConfigArgs() {}

    private AzureNodePoolConfigArgs(AzureNodePoolConfigArgs $) {
        this.imageType = $.imageType;
        this.proxyConfig = $.proxyConfig;
        this.rootVolume = $.rootVolume;
        this.sshConfig = $.sshConfig;
        this.tags = $.tags;
        this.vmSize = $.vmSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureNodePoolConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureNodePoolConfigArgs $;

        public Builder() {
            $ = new AzureNodePoolConfigArgs();
        }

        public Builder(AzureNodePoolConfigArgs defaults) {
            $ = new AzureNodePoolConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param imageType (Beta only) The OS image type to use on node pool instances.
         * 
         * @return builder
         * 
         */
        public Builder imageType(@Nullable Output<String> imageType) {
            $.imageType = imageType;
            return this;
        }

        /**
         * @param imageType (Beta only) The OS image type to use on node pool instances.
         * 
         * @return builder
         * 
         */
        public Builder imageType(String imageType) {
            return imageType(Output.of(imageType));
        }

        /**
         * @param proxyConfig Proxy configuration for outbound HTTP(S) traffic.
         * 
         * @return builder
         * 
         */
        public Builder proxyConfig(@Nullable Output<AzureNodePoolConfigProxyConfigArgs> proxyConfig) {
            $.proxyConfig = proxyConfig;
            return this;
        }

        /**
         * @param proxyConfig Proxy configuration for outbound HTTP(S) traffic.
         * 
         * @return builder
         * 
         */
        public Builder proxyConfig(AzureNodePoolConfigProxyConfigArgs proxyConfig) {
            return proxyConfig(Output.of(proxyConfig));
        }

        /**
         * @param rootVolume Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
         * 
         * @return builder
         * 
         */
        public Builder rootVolume(@Nullable Output<AzureNodePoolConfigRootVolumeArgs> rootVolume) {
            $.rootVolume = rootVolume;
            return this;
        }

        /**
         * @param rootVolume Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
         * 
         * @return builder
         * 
         */
        public Builder rootVolume(AzureNodePoolConfigRootVolumeArgs rootVolume) {
            return rootVolume(Output.of(rootVolume));
        }

        /**
         * @param sshConfig SSH configuration for how to access the node pool machines.
         * 
         * @return builder
         * 
         */
        public Builder sshConfig(Output<AzureNodePoolConfigSshConfigArgs> sshConfig) {
            $.sshConfig = sshConfig;
            return this;
        }

        /**
         * @param sshConfig SSH configuration for how to access the node pool machines.
         * 
         * @return builder
         * 
         */
        public Builder sshConfig(AzureNodePoolConfigSshConfigArgs sshConfig) {
            return sshConfig(Output.of(sshConfig));
        }

        /**
         * @param tags Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vmSize Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
         * 
         * @return builder
         * 
         */
        public Builder vmSize(@Nullable Output<String> vmSize) {
            $.vmSize = vmSize;
            return this;
        }

        /**
         * @param vmSize Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
         * 
         * @return builder
         * 
         */
        public Builder vmSize(String vmSize) {
            return vmSize(Output.of(vmSize));
        }

        public AzureNodePoolConfigArgs build() {
            $.sshConfig = Objects.requireNonNull($.sshConfig, "expected parameter 'sshConfig' to be non-null");
            return $;
        }
    }

}
