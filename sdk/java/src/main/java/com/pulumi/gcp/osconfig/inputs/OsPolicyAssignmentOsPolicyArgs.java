// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.osconfig.inputs.OsPolicyAssignmentOsPolicyResourceGroupArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OsPolicyAssignmentOsPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final OsPolicyAssignmentOsPolicyArgs Empty = new OsPolicyAssignmentOsPolicyArgs();

    /**
     * This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
     * 
     */
    @Import(name="allowNoResourceGroupMatch")
    private @Nullable Output<Boolean> allowNoResourceGroupMatch;

    /**
     * @return This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
     * 
     */
    public Optional<Output<Boolean>> allowNoResourceGroupMatch() {
        return Optional.ofNullable(this.allowNoResourceGroupMatch);
    }

    /**
     * Policy description. Length of the description is limited to 1024 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Policy description. Length of the description is limited to 1024 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
     * 
     */
    @Import(name="mode", required=true)
    private Output<String> mode;

    /**
     * @return Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }

    /**
     * Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
     * 
     */
    @Import(name="resourceGroups", required=true)
    private Output<List<OsPolicyAssignmentOsPolicyResourceGroupArgs>> resourceGroups;

    /**
     * @return Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
     * 
     */
    public Output<List<OsPolicyAssignmentOsPolicyResourceGroupArgs>> resourceGroups() {
        return this.resourceGroups;
    }

    private OsPolicyAssignmentOsPolicyArgs() {}

    private OsPolicyAssignmentOsPolicyArgs(OsPolicyAssignmentOsPolicyArgs $) {
        this.allowNoResourceGroupMatch = $.allowNoResourceGroupMatch;
        this.description = $.description;
        this.id = $.id;
        this.mode = $.mode;
        this.resourceGroups = $.resourceGroups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OsPolicyAssignmentOsPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OsPolicyAssignmentOsPolicyArgs $;

        public Builder() {
            $ = new OsPolicyAssignmentOsPolicyArgs();
        }

        public Builder(OsPolicyAssignmentOsPolicyArgs defaults) {
            $ = new OsPolicyAssignmentOsPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowNoResourceGroupMatch This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
         * 
         * @return builder
         * 
         */
        public Builder allowNoResourceGroupMatch(@Nullable Output<Boolean> allowNoResourceGroupMatch) {
            $.allowNoResourceGroupMatch = allowNoResourceGroupMatch;
            return this;
        }

        /**
         * @param allowNoResourceGroupMatch This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
         * 
         * @return builder
         * 
         */
        public Builder allowNoResourceGroupMatch(Boolean allowNoResourceGroupMatch) {
            return allowNoResourceGroupMatch(Output.of(allowNoResourceGroupMatch));
        }

        /**
         * @param description Policy description. Length of the description is limited to 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Policy description. Length of the description is limited to 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param id Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param mode Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
         * 
         * @return builder
         * 
         */
        public Builder mode(Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param resourceGroups Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
         * 
         * @return builder
         * 
         */
        public Builder resourceGroups(Output<List<OsPolicyAssignmentOsPolicyResourceGroupArgs>> resourceGroups) {
            $.resourceGroups = resourceGroups;
            return this;
        }

        /**
         * @param resourceGroups Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
         * 
         * @return builder
         * 
         */
        public Builder resourceGroups(List<OsPolicyAssignmentOsPolicyResourceGroupArgs> resourceGroups) {
            return resourceGroups(Output.of(resourceGroups));
        }

        /**
         * @param resourceGroups Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
         * 
         * @return builder
         * 
         */
        public Builder resourceGroups(OsPolicyAssignmentOsPolicyResourceGroupArgs... resourceGroups) {
            return resourceGroups(List.of(resourceGroups));
        }

        public OsPolicyAssignmentOsPolicyArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.mode = Objects.requireNonNull($.mode, "expected parameter 'mode' to be non-null");
            $.resourceGroups = Objects.requireNonNull($.resourceGroups, "expected parameter 'resourceGroups' to be non-null");
            return $;
        }
    }

}
