// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.iam.inputs.WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs Empty = new WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs();

    /**
     * List of Trust Anchors to be used while performing validation against a given
     * `TrustStore`. The incoming end entity&#39;s certificate must be chained up to one of the
     * trust anchors here.
     * Structure is documented below.
     * 
     */
    @Import(name="trustAnchors", required=true)
    private Output<List<WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs>> trustAnchors;

    /**
     * @return List of Trust Anchors to be used while performing validation against a given
     * `TrustStore`. The incoming end entity&#39;s certificate must be chained up to one of the
     * trust anchors here.
     * Structure is documented below.
     * 
     */
    public Output<List<WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs>> trustAnchors() {
        return this.trustAnchors;
    }

    /**
     * The identifier for this object. Format specified above.
     * 
     */
    @Import(name="trustDomain", required=true)
    private Output<String> trustDomain;

    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    public Output<String> trustDomain() {
        return this.trustDomain;
    }

    private WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs() {}

    private WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs(WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs $) {
        this.trustAnchors = $.trustAnchors;
        this.trustDomain = $.trustDomain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs $;

        public Builder() {
            $ = new WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs();
        }

        public Builder(WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs defaults) {
            $ = new WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param trustAnchors List of Trust Anchors to be used while performing validation against a given
         * `TrustStore`. The incoming end entity&#39;s certificate must be chained up to one of the
         * trust anchors here.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trustAnchors(Output<List<WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs>> trustAnchors) {
            $.trustAnchors = trustAnchors;
            return this;
        }

        /**
         * @param trustAnchors List of Trust Anchors to be used while performing validation against a given
         * `TrustStore`. The incoming end entity&#39;s certificate must be chained up to one of the
         * trust anchors here.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trustAnchors(List<WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs> trustAnchors) {
            return trustAnchors(Output.of(trustAnchors));
        }

        /**
         * @param trustAnchors List of Trust Anchors to be used while performing validation against a given
         * `TrustStore`. The incoming end entity&#39;s certificate must be chained up to one of the
         * trust anchors here.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trustAnchors(WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs... trustAnchors) {
            return trustAnchors(List.of(trustAnchors));
        }

        /**
         * @param trustDomain The identifier for this object. Format specified above.
         * 
         * @return builder
         * 
         */
        public Builder trustDomain(Output<String> trustDomain) {
            $.trustDomain = trustDomain;
            return this;
        }

        /**
         * @param trustDomain The identifier for this object. Format specified above.
         * 
         * @return builder
         * 
         */
        public Builder trustDomain(String trustDomain) {
            return trustDomain(Output.of(trustDomain));
        }

        public WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs build() {
            if ($.trustAnchors == null) {
                throw new MissingRequiredPropertyException("WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs", "trustAnchors");
            }
            if ($.trustDomain == null) {
                throw new MissingRequiredPropertyException("WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs", "trustDomain");
            }
            return $;
        }
    }

}
