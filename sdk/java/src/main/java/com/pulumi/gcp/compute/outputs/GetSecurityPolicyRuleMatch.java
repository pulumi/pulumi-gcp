// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetSecurityPolicyRuleMatchConfig;
import com.pulumi.gcp.compute.outputs.GetSecurityPolicyRuleMatchExpr;
import com.pulumi.gcp.compute.outputs.GetSecurityPolicyRuleMatchExprOption;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSecurityPolicyRuleMatch {
    /**
     * @return The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
     * 
     */
    private List<GetSecurityPolicyRuleMatchConfig> configs;
    /**
     * @return The configuration options available when specifying a user defined CEVAL expression (i.e., &#39;expr&#39;).
     * 
     */
    private List<GetSecurityPolicyRuleMatchExprOption> exprOptions;
    /**
     * @return User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header.
     * 
     */
    private List<GetSecurityPolicyRuleMatchExpr> exprs;
    /**
     * @return Predefined rule expression. If this field is specified, config must also be specified. Available options:   SRC_IPS_V1: Must specify the corresponding src_ip_ranges field in config.
     * 
     */
    private String versionedExpr;

    private GetSecurityPolicyRuleMatch() {}
    /**
     * @return The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
     * 
     */
    public List<GetSecurityPolicyRuleMatchConfig> configs() {
        return this.configs;
    }
    /**
     * @return The configuration options available when specifying a user defined CEVAL expression (i.e., &#39;expr&#39;).
     * 
     */
    public List<GetSecurityPolicyRuleMatchExprOption> exprOptions() {
        return this.exprOptions;
    }
    /**
     * @return User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header.
     * 
     */
    public List<GetSecurityPolicyRuleMatchExpr> exprs() {
        return this.exprs;
    }
    /**
     * @return Predefined rule expression. If this field is specified, config must also be specified. Available options:   SRC_IPS_V1: Must specify the corresponding src_ip_ranges field in config.
     * 
     */
    public String versionedExpr() {
        return this.versionedExpr;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityPolicyRuleMatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSecurityPolicyRuleMatchConfig> configs;
        private List<GetSecurityPolicyRuleMatchExprOption> exprOptions;
        private List<GetSecurityPolicyRuleMatchExpr> exprs;
        private String versionedExpr;
        public Builder() {}
        public Builder(GetSecurityPolicyRuleMatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configs = defaults.configs;
    	      this.exprOptions = defaults.exprOptions;
    	      this.exprs = defaults.exprs;
    	      this.versionedExpr = defaults.versionedExpr;
        }

        @CustomType.Setter
        public Builder configs(List<GetSecurityPolicyRuleMatchConfig> configs) {
            if (configs == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRuleMatch", "configs");
            }
            this.configs = configs;
            return this;
        }
        public Builder configs(GetSecurityPolicyRuleMatchConfig... configs) {
            return configs(List.of(configs));
        }
        @CustomType.Setter
        public Builder exprOptions(List<GetSecurityPolicyRuleMatchExprOption> exprOptions) {
            if (exprOptions == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRuleMatch", "exprOptions");
            }
            this.exprOptions = exprOptions;
            return this;
        }
        public Builder exprOptions(GetSecurityPolicyRuleMatchExprOption... exprOptions) {
            return exprOptions(List.of(exprOptions));
        }
        @CustomType.Setter
        public Builder exprs(List<GetSecurityPolicyRuleMatchExpr> exprs) {
            if (exprs == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRuleMatch", "exprs");
            }
            this.exprs = exprs;
            return this;
        }
        public Builder exprs(GetSecurityPolicyRuleMatchExpr... exprs) {
            return exprs(List.of(exprs));
        }
        @CustomType.Setter
        public Builder versionedExpr(String versionedExpr) {
            if (versionedExpr == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRuleMatch", "versionedExpr");
            }
            this.versionedExpr = versionedExpr;
            return this;
        }
        public GetSecurityPolicyRuleMatch build() {
            final var _resultValue = new GetSecurityPolicyRuleMatch();
            _resultValue.configs = configs;
            _resultValue.exprOptions = exprOptions;
            _resultValue.exprs = exprs;
            _resultValue.versionedExpr = versionedExpr;
            return _resultValue;
        }
    }
}
