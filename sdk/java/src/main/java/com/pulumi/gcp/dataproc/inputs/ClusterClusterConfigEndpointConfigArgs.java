// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterClusterConfigEndpointConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterClusterConfigEndpointConfigArgs Empty = new ClusterClusterConfigEndpointConfigArgs();

    /**
     * The flag to enable http access to specific ports
     * on the cluster from external sources (aka Component Gateway). Defaults to false.
     * 
     */
    @Import(name="enableHttpPortAccess", required=true)
    private Output<Boolean> enableHttpPortAccess;

    /**
     * @return The flag to enable http access to specific ports
     * on the cluster from external sources (aka Component Gateway). Defaults to false.
     * 
     */
    public Output<Boolean> enableHttpPortAccess() {
        return this.enableHttpPortAccess;
    }

    /**
     * The map of port descriptions to URLs. Will only be populated if
     * `enable_http_port_access` is true.
     * 
     */
    @Import(name="httpPorts")
    private @Nullable Output<Map<String,String>> httpPorts;

    /**
     * @return The map of port descriptions to URLs. Will only be populated if
     * `enable_http_port_access` is true.
     * 
     */
    public Optional<Output<Map<String,String>>> httpPorts() {
        return Optional.ofNullable(this.httpPorts);
    }

    private ClusterClusterConfigEndpointConfigArgs() {}

    private ClusterClusterConfigEndpointConfigArgs(ClusterClusterConfigEndpointConfigArgs $) {
        this.enableHttpPortAccess = $.enableHttpPortAccess;
        this.httpPorts = $.httpPorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterClusterConfigEndpointConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterClusterConfigEndpointConfigArgs $;

        public Builder() {
            $ = new ClusterClusterConfigEndpointConfigArgs();
        }

        public Builder(ClusterClusterConfigEndpointConfigArgs defaults) {
            $ = new ClusterClusterConfigEndpointConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableHttpPortAccess The flag to enable http access to specific ports
         * on the cluster from external sources (aka Component Gateway). Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder enableHttpPortAccess(Output<Boolean> enableHttpPortAccess) {
            $.enableHttpPortAccess = enableHttpPortAccess;
            return this;
        }

        /**
         * @param enableHttpPortAccess The flag to enable http access to specific ports
         * on the cluster from external sources (aka Component Gateway). Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder enableHttpPortAccess(Boolean enableHttpPortAccess) {
            return enableHttpPortAccess(Output.of(enableHttpPortAccess));
        }

        /**
         * @param httpPorts The map of port descriptions to URLs. Will only be populated if
         * `enable_http_port_access` is true.
         * 
         * @return builder
         * 
         */
        public Builder httpPorts(@Nullable Output<Map<String,String>> httpPorts) {
            $.httpPorts = httpPorts;
            return this;
        }

        /**
         * @param httpPorts The map of port descriptions to URLs. Will only be populated if
         * `enable_http_port_access` is true.
         * 
         * @return builder
         * 
         */
        public Builder httpPorts(Map<String,String> httpPorts) {
            return httpPorts(Output.of(httpPorts));
        }

        public ClusterClusterConfigEndpointConfigArgs build() {
            if ($.enableHttpPortAccess == null) {
                throw new MissingRequiredPropertyException("ClusterClusterConfigEndpointConfigArgs", "enableHttpPortAccess");
            }
            return $;
        }
    }

}
