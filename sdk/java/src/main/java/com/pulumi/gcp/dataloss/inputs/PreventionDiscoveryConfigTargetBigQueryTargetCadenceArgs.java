// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetCadenceInspectTemplateModifiedCadenceArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetCadenceSchemaModifiedCadenceArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetCadenceTableModifiedCadenceArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs Empty = new PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs();

    /**
     * Governs when to update data profiles when the inspection rules defined by the `InspectTemplate` change. If not set, changing the template will not cause a data profile to update.
     * Structure is documented below.
     * 
     */
    @Import(name="inspectTemplateModifiedCadence")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceInspectTemplateModifiedCadenceArgs> inspectTemplateModifiedCadence;

    /**
     * @return Governs when to update data profiles when the inspection rules defined by the `InspectTemplate` change. If not set, changing the template will not cause a data profile to update.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceInspectTemplateModifiedCadenceArgs>> inspectTemplateModifiedCadence() {
        return Optional.ofNullable(this.inspectTemplateModifiedCadence);
    }

    /**
     * Governs when to update data profiles when a schema is modified
     * Structure is documented below.
     * 
     */
    @Import(name="schemaModifiedCadence")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceSchemaModifiedCadenceArgs> schemaModifiedCadence;

    /**
     * @return Governs when to update data profiles when a schema is modified
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceSchemaModifiedCadenceArgs>> schemaModifiedCadence() {
        return Optional.ofNullable(this.schemaModifiedCadence);
    }

    /**
     * Governs when to update profile when a table is modified.
     * Structure is documented below.
     * 
     */
    @Import(name="tableModifiedCadence")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceTableModifiedCadenceArgs> tableModifiedCadence;

    /**
     * @return Governs when to update profile when a table is modified.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceTableModifiedCadenceArgs>> tableModifiedCadence() {
        return Optional.ofNullable(this.tableModifiedCadence);
    }

    private PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs() {}

    private PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs(PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs $) {
        this.inspectTemplateModifiedCadence = $.inspectTemplateModifiedCadence;
        this.schemaModifiedCadence = $.schemaModifiedCadence;
        this.tableModifiedCadence = $.tableModifiedCadence;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs $;

        public Builder() {
            $ = new PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs();
        }

        public Builder(PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs defaults) {
            $ = new PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inspectTemplateModifiedCadence Governs when to update data profiles when the inspection rules defined by the `InspectTemplate` change. If not set, changing the template will not cause a data profile to update.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplateModifiedCadence(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceInspectTemplateModifiedCadenceArgs> inspectTemplateModifiedCadence) {
            $.inspectTemplateModifiedCadence = inspectTemplateModifiedCadence;
            return this;
        }

        /**
         * @param inspectTemplateModifiedCadence Governs when to update data profiles when the inspection rules defined by the `InspectTemplate` change. If not set, changing the template will not cause a data profile to update.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplateModifiedCadence(PreventionDiscoveryConfigTargetBigQueryTargetCadenceInspectTemplateModifiedCadenceArgs inspectTemplateModifiedCadence) {
            return inspectTemplateModifiedCadence(Output.of(inspectTemplateModifiedCadence));
        }

        /**
         * @param schemaModifiedCadence Governs when to update data profiles when a schema is modified
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder schemaModifiedCadence(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceSchemaModifiedCadenceArgs> schemaModifiedCadence) {
            $.schemaModifiedCadence = schemaModifiedCadence;
            return this;
        }

        /**
         * @param schemaModifiedCadence Governs when to update data profiles when a schema is modified
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder schemaModifiedCadence(PreventionDiscoveryConfigTargetBigQueryTargetCadenceSchemaModifiedCadenceArgs schemaModifiedCadence) {
            return schemaModifiedCadence(Output.of(schemaModifiedCadence));
        }

        /**
         * @param tableModifiedCadence Governs when to update profile when a table is modified.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tableModifiedCadence(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetCadenceTableModifiedCadenceArgs> tableModifiedCadence) {
            $.tableModifiedCadence = tableModifiedCadence;
            return this;
        }

        /**
         * @param tableModifiedCadence Governs when to update profile when a table is modified.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tableModifiedCadence(PreventionDiscoveryConfigTargetBigQueryTargetCadenceTableModifiedCadenceArgs tableModifiedCadence) {
            return tableModifiedCadence(Output.of(tableModifiedCadence));
        }

        public PreventionDiscoveryConfigTargetBigQueryTargetCadenceArgs build() {
            return $;
        }
    }

}
