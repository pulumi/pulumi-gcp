// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.gkehub.outputs.FeatureSpecFleetobservabilityLoggingConfig;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FeatureSpecFleetobservability {
    /**
     * @return Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.
     * Structure is documented below.
     * 
     */
    private @Nullable FeatureSpecFleetobservabilityLoggingConfig loggingConfig;

    private FeatureSpecFleetobservability() {}
    /**
     * @return Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.
     * Structure is documented below.
     * 
     */
    public Optional<FeatureSpecFleetobservabilityLoggingConfig> loggingConfig() {
        return Optional.ofNullable(this.loggingConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeatureSpecFleetobservability defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable FeatureSpecFleetobservabilityLoggingConfig loggingConfig;
        public Builder() {}
        public Builder(FeatureSpecFleetobservability defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.loggingConfig = defaults.loggingConfig;
        }

        @CustomType.Setter
        public Builder loggingConfig(@Nullable FeatureSpecFleetobservabilityLoggingConfig loggingConfig) {

            this.loggingConfig = loggingConfig;
            return this;
        }
        public FeatureSpecFleetobservability build() {
            final var _resultValue = new FeatureSpecFleetobservability();
            _resultValue.loggingConfig = loggingConfig;
            return _resultValue;
        }
    }
}
