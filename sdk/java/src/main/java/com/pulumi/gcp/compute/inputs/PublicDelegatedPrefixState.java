// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PublicDelegatedPrefixState extends com.pulumi.resources.ResourceArgs {

    public static final PublicDelegatedPrefixState Empty = new PublicDelegatedPrefixState();

    /**
     * An optional description of this resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The IPv4 address range, in CIDR format, represented by this public advertised prefix.
     * 
     */
    @Import(name="ipCidrRange")
    private @Nullable Output<String> ipCidrRange;

    /**
     * @return The IPv4 address range, in CIDR format, represented by this public advertised prefix.
     * 
     */
    public Optional<Output<String>> ipCidrRange() {
        return Optional.ofNullable(this.ipCidrRange);
    }

    /**
     * If true, the prefix will be live migrated.
     * 
     */
    @Import(name="isLiveMigration")
    private @Nullable Output<Boolean> isLiveMigration;

    /**
     * @return If true, the prefix will be live migrated.
     * 
     */
    public Optional<Output<Boolean>> isLiveMigration() {
        return Optional.ofNullable(this.isLiveMigration);
    }

    /**
     * Name of the resource. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?`
     * which means the first character must be a lowercase letter, and all
     * following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?`
     * which means the first character must be a lowercase letter, and all
     * following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
     * 
     */
    @Import(name="parentPrefix")
    private @Nullable Output<String> parentPrefix;

    /**
     * @return The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
     * 
     */
    public Optional<Output<String>> parentPrefix() {
        return Optional.ofNullable(this.parentPrefix);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * A region where the prefix will reside.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return A region where the prefix will reside.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The URI of the created resource.
     * 
     */
    @Import(name="selfLink")
    private @Nullable Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Optional<Output<String>> selfLink() {
        return Optional.ofNullable(this.selfLink);
    }

    private PublicDelegatedPrefixState() {}

    private PublicDelegatedPrefixState(PublicDelegatedPrefixState $) {
        this.description = $.description;
        this.ipCidrRange = $.ipCidrRange;
        this.isLiveMigration = $.isLiveMigration;
        this.name = $.name;
        this.parentPrefix = $.parentPrefix;
        this.project = $.project;
        this.region = $.region;
        this.selfLink = $.selfLink;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicDelegatedPrefixState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicDelegatedPrefixState $;

        public Builder() {
            $ = new PublicDelegatedPrefixState();
        }

        public Builder(PublicDelegatedPrefixState defaults) {
            $ = new PublicDelegatedPrefixState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param ipCidrRange The IPv4 address range, in CIDR format, represented by this public advertised prefix.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(@Nullable Output<String> ipCidrRange) {
            $.ipCidrRange = ipCidrRange;
            return this;
        }

        /**
         * @param ipCidrRange The IPv4 address range, in CIDR format, represented by this public advertised prefix.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(String ipCidrRange) {
            return ipCidrRange(Output.of(ipCidrRange));
        }

        /**
         * @param isLiveMigration If true, the prefix will be live migrated.
         * 
         * @return builder
         * 
         */
        public Builder isLiveMigration(@Nullable Output<Boolean> isLiveMigration) {
            $.isLiveMigration = isLiveMigration;
            return this;
        }

        /**
         * @param isLiveMigration If true, the prefix will be live migrated.
         * 
         * @return builder
         * 
         */
        public Builder isLiveMigration(Boolean isLiveMigration) {
            return isLiveMigration(Output.of(isLiveMigration));
        }

        /**
         * @param name Name of the resource. The name must be 1-63 characters long, and
         * comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?`
         * which means the first character must be a lowercase letter, and all
         * following characters must be a dash, lowercase letter, or digit,
         * except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. The name must be 1-63 characters long, and
         * comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?`
         * which means the first character must be a lowercase letter, and all
         * following characters must be a dash, lowercase letter, or digit,
         * except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parentPrefix The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
         * 
         * @return builder
         * 
         */
        public Builder parentPrefix(@Nullable Output<String> parentPrefix) {
            $.parentPrefix = parentPrefix;
            return this;
        }

        /**
         * @param parentPrefix The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix.
         * 
         * @return builder
         * 
         */
        public Builder parentPrefix(String parentPrefix) {
            return parentPrefix(Output.of(parentPrefix));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region A region where the prefix will reside.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region A region where the prefix will reside.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param selfLink The URI of the created resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(@Nullable Output<String> selfLink) {
            $.selfLink = selfLink;
            return this;
        }

        /**
         * @param selfLink The URI of the created resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(String selfLink) {
            return selfLink(Output.of(selfLink));
        }

        public PublicDelegatedPrefixState build() {
            return $;
        }
    }

}
