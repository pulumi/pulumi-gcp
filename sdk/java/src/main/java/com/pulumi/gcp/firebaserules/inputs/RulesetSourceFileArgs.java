// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebaserules.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RulesetSourceFileArgs extends com.pulumi.resources.ResourceArgs {

    public static final RulesetSourceFileArgs Empty = new RulesetSourceFileArgs();

    /**
     * Textual Content.
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return Textual Content.
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    /**
     * Fingerprint (e.g. github sha) associated with the `File`.
     * 
     */
    @Import(name="fingerprint")
    private @Nullable Output<String> fingerprint;

    /**
     * @return Fingerprint (e.g. github sha) associated with the `File`.
     * 
     */
    public Optional<Output<String>> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }

    /**
     * File name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return File name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private RulesetSourceFileArgs() {}

    private RulesetSourceFileArgs(RulesetSourceFileArgs $) {
        this.content = $.content;
        this.fingerprint = $.fingerprint;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesetSourceFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesetSourceFileArgs $;

        public Builder() {
            $ = new RulesetSourceFileArgs();
        }

        public Builder(RulesetSourceFileArgs defaults) {
            $ = new RulesetSourceFileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content Textual Content.
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content Textual Content.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param fingerprint Fingerprint (e.g. github sha) associated with the `File`.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(@Nullable Output<String> fingerprint) {
            $.fingerprint = fingerprint;
            return this;
        }

        /**
         * @param fingerprint Fingerprint (e.g. github sha) associated with the `File`.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(String fingerprint) {
            return fingerprint(Output.of(fingerprint));
        }

        /**
         * @param name File name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name File name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public RulesetSourceFileArgs build() {
            $.content = Objects.requireNonNull($.content, "expected parameter 'content' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
