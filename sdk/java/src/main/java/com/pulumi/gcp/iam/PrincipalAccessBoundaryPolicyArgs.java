// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.iam.inputs.PrincipalAccessBoundaryPolicyDetailsArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrincipalAccessBoundaryPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrincipalAccessBoundaryPolicyArgs Empty = new PrincipalAccessBoundaryPolicyArgs();

    /**
     * User defined annotations. See https://google.aip.dev/148#annotations
     * for more details such as format and size limitations
     * 
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return User defined annotations. See https://google.aip.dev/148#annotations
     * for more details such as format and size limitations
     * 
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Principal access boundary policy details
     * Structure is documented below.
     * 
     */
    @Import(name="details")
    private @Nullable Output<PrincipalAccessBoundaryPolicyDetailsArgs> details;

    /**
     * @return Principal access boundary policy details
     * Structure is documented below.
     * 
     */
    public Optional<Output<PrincipalAccessBoundaryPolicyDetailsArgs>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * The description of the principal access boundary policy. Must be less than or equal to 63 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The description of the principal access boundary policy. Must be less than or equal to 63 characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The location the principal access boundary policy is in.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location the principal access boundary policy is in.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The parent organization of the principal access boundary policy.
     * 
     */
    @Import(name="organization", required=true)
    private Output<String> organization;

    /**
     * @return The parent organization of the principal access boundary policy.
     * 
     */
    public Output<String> organization() {
        return this.organization;
    }

    /**
     * The ID to use to create the principal access boundary policy.
     * This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, hyphens, or dots. Pattern, /a-z{2,62}/.
     * 
     * ***
     * 
     */
    @Import(name="principalAccessBoundaryPolicyId", required=true)
    private Output<String> principalAccessBoundaryPolicyId;

    /**
     * @return The ID to use to create the principal access boundary policy.
     * This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, hyphens, or dots. Pattern, /a-z{2,62}/.
     * 
     * ***
     * 
     */
    public Output<String> principalAccessBoundaryPolicyId() {
        return this.principalAccessBoundaryPolicyId;
    }

    private PrincipalAccessBoundaryPolicyArgs() {}

    private PrincipalAccessBoundaryPolicyArgs(PrincipalAccessBoundaryPolicyArgs $) {
        this.annotations = $.annotations;
        this.details = $.details;
        this.displayName = $.displayName;
        this.location = $.location;
        this.organization = $.organization;
        this.principalAccessBoundaryPolicyId = $.principalAccessBoundaryPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrincipalAccessBoundaryPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrincipalAccessBoundaryPolicyArgs $;

        public Builder() {
            $ = new PrincipalAccessBoundaryPolicyArgs();
        }

        public Builder(PrincipalAccessBoundaryPolicyArgs defaults) {
            $ = new PrincipalAccessBoundaryPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations User defined annotations. See https://google.aip.dev/148#annotations
         * for more details such as format and size limitations
         * 
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations User defined annotations. See https://google.aip.dev/148#annotations
         * for more details such as format and size limitations
         * 
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param details Principal access boundary policy details
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder details(@Nullable Output<PrincipalAccessBoundaryPolicyDetailsArgs> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details Principal access boundary policy details
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder details(PrincipalAccessBoundaryPolicyDetailsArgs details) {
            return details(Output.of(details));
        }

        /**
         * @param displayName The description of the principal access boundary policy. Must be less than or equal to 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The description of the principal access boundary policy. Must be less than or equal to 63 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param location The location the principal access boundary policy is in.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location the principal access boundary policy is in.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param organization The parent organization of the principal access boundary policy.
         * 
         * @return builder
         * 
         */
        public Builder organization(Output<String> organization) {
            $.organization = organization;
            return this;
        }

        /**
         * @param organization The parent organization of the principal access boundary policy.
         * 
         * @return builder
         * 
         */
        public Builder organization(String organization) {
            return organization(Output.of(organization));
        }

        /**
         * @param principalAccessBoundaryPolicyId The ID to use to create the principal access boundary policy.
         * This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, hyphens, or dots. Pattern, /a-z{2,62}/.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder principalAccessBoundaryPolicyId(Output<String> principalAccessBoundaryPolicyId) {
            $.principalAccessBoundaryPolicyId = principalAccessBoundaryPolicyId;
            return this;
        }

        /**
         * @param principalAccessBoundaryPolicyId The ID to use to create the principal access boundary policy.
         * This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, hyphens, or dots. Pattern, /a-z{2,62}/.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder principalAccessBoundaryPolicyId(String principalAccessBoundaryPolicyId) {
            return principalAccessBoundaryPolicyId(Output.of(principalAccessBoundaryPolicyId));
        }

        public PrincipalAccessBoundaryPolicyArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("PrincipalAccessBoundaryPolicyArgs", "location");
            }
            if ($.organization == null) {
                throw new MissingRequiredPropertyException("PrincipalAccessBoundaryPolicyArgs", "organization");
            }
            if ($.principalAccessBoundaryPolicyId == null) {
                throw new MissingRequiredPropertyException("PrincipalAccessBoundaryPolicyArgs", "principalAccessBoundaryPolicyId");
            }
            return $;
        }
    }

}
