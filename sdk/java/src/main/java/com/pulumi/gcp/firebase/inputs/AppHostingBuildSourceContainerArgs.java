// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AppHostingBuildSourceContainerArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppHostingBuildSourceContainerArgs Empty = new AppHostingBuildSourceContainerArgs();

    /**
     * A URI representing a container for the backend to use.
     * 
     */
    @Import(name="image", required=true)
    private Output<String> image;

    /**
     * @return A URI representing a container for the backend to use.
     * 
     */
    public Output<String> image() {
        return this.image;
    }

    private AppHostingBuildSourceContainerArgs() {}

    private AppHostingBuildSourceContainerArgs(AppHostingBuildSourceContainerArgs $) {
        this.image = $.image;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppHostingBuildSourceContainerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppHostingBuildSourceContainerArgs $;

        public Builder() {
            $ = new AppHostingBuildSourceContainerArgs();
        }

        public Builder(AppHostingBuildSourceContainerArgs defaults) {
            $ = new AppHostingBuildSourceContainerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param image A URI representing a container for the backend to use.
         * 
         * @return builder
         * 
         */
        public Builder image(Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image A URI representing a container for the backend to use.
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        public AppHostingBuildSourceContainerArgs build() {
            if ($.image == null) {
                throw new MissingRequiredPropertyException("AppHostingBuildSourceContainerArgs", "image");
            }
            return $;
        }
    }

}
