// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKeyHandleResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The identifier of the KMS Key created for the KeyHandle. Its format is `projects/{projectId}/locations/{location}/keyRings/{keyRingName}/cryptoKeys/{cryptoKeyName}`.
     * 
     */
    private String kmsKey;
    /**
     * @return The location of the KMS Key and KeyHandle.
     * 
     */
    private String location;
    private String name;
    /**
     * @return The identifier of the project where KMS KeyHandle is created.
     * 
     */
    private @Nullable String project;
    /**
     * @return Indicates the resource type that the resulting CryptoKey is meant to protect, e.g. {SERVICE}.googleapis.com/{TYPE}. See documentation for supported resource types.
     * 
     */
    private String resourceTypeSelector;

    private GetKeyHandleResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The identifier of the KMS Key created for the KeyHandle. Its format is `projects/{projectId}/locations/{location}/keyRings/{keyRingName}/cryptoKeys/{cryptoKeyName}`.
     * 
     */
    public String kmsKey() {
        return this.kmsKey;
    }
    /**
     * @return The location of the KMS Key and KeyHandle.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The identifier of the project where KMS KeyHandle is created.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return Indicates the resource type that the resulting CryptoKey is meant to protect, e.g. {SERVICE}.googleapis.com/{TYPE}. See documentation for supported resource types.
     * 
     */
    public String resourceTypeSelector() {
        return this.resourceTypeSelector;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyHandleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String kmsKey;
        private String location;
        private String name;
        private @Nullable String project;
        private String resourceTypeSelector;
        public Builder() {}
        public Builder(GetKeyHandleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.kmsKey = defaults.kmsKey;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.resourceTypeSelector = defaults.resourceTypeSelector;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetKeyHandleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKey(String kmsKey) {
            if (kmsKey == null) {
              throw new MissingRequiredPropertyException("GetKeyHandleResult", "kmsKey");
            }
            this.kmsKey = kmsKey;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetKeyHandleResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetKeyHandleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSelector(String resourceTypeSelector) {
            if (resourceTypeSelector == null) {
              throw new MissingRequiredPropertyException("GetKeyHandleResult", "resourceTypeSelector");
            }
            this.resourceTypeSelector = resourceTypeSelector;
            return this;
        }
        public GetKeyHandleResult build() {
            final var _resultValue = new GetKeyHandleResult();
            _resultValue.id = id;
            _resultValue.kmsKey = kmsKey;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.project = project;
            _resultValue.resourceTypeSelector = resourceTypeSelector;
            return _resultValue;
        }
    }
}
