// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.datastream.inputs.StreamSourceConfigMysqlSourceConfigArgs;
import com.pulumi.gcp.datastream.inputs.StreamSourceConfigOracleSourceConfigArgs;
import com.pulumi.gcp.datastream.inputs.StreamSourceConfigPostgresqlSourceConfigArgs;
import com.pulumi.gcp.datastream.inputs.StreamSourceConfigSqlServerSourceConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamSourceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamSourceConfigArgs Empty = new StreamSourceConfigArgs();

    /**
     * MySQL data source configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="mysqlSourceConfig")
    private @Nullable Output<StreamSourceConfigMysqlSourceConfigArgs> mysqlSourceConfig;

    /**
     * @return MySQL data source configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<StreamSourceConfigMysqlSourceConfigArgs>> mysqlSourceConfig() {
        return Optional.ofNullable(this.mysqlSourceConfig);
    }

    /**
     * MySQL data source configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="oracleSourceConfig")
    private @Nullable Output<StreamSourceConfigOracleSourceConfigArgs> oracleSourceConfig;

    /**
     * @return MySQL data source configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<StreamSourceConfigOracleSourceConfigArgs>> oracleSourceConfig() {
        return Optional.ofNullable(this.oracleSourceConfig);
    }

    /**
     * PostgreSQL data source configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="postgresqlSourceConfig")
    private @Nullable Output<StreamSourceConfigPostgresqlSourceConfigArgs> postgresqlSourceConfig;

    /**
     * @return PostgreSQL data source configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<StreamSourceConfigPostgresqlSourceConfigArgs>> postgresqlSourceConfig() {
        return Optional.ofNullable(this.postgresqlSourceConfig);
    }

    /**
     * Source connection profile resource. Format: projects/{project}/locations/{location}/connectionProfiles/{name}
     * 
     */
    @Import(name="sourceConnectionProfile", required=true)
    private Output<String> sourceConnectionProfile;

    /**
     * @return Source connection profile resource. Format: projects/{project}/locations/{location}/connectionProfiles/{name}
     * 
     */
    public Output<String> sourceConnectionProfile() {
        return this.sourceConnectionProfile;
    }

    /**
     * SQL Server data source configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="sqlServerSourceConfig")
    private @Nullable Output<StreamSourceConfigSqlServerSourceConfigArgs> sqlServerSourceConfig;

    /**
     * @return SQL Server data source configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<StreamSourceConfigSqlServerSourceConfigArgs>> sqlServerSourceConfig() {
        return Optional.ofNullable(this.sqlServerSourceConfig);
    }

    private StreamSourceConfigArgs() {}

    private StreamSourceConfigArgs(StreamSourceConfigArgs $) {
        this.mysqlSourceConfig = $.mysqlSourceConfig;
        this.oracleSourceConfig = $.oracleSourceConfig;
        this.postgresqlSourceConfig = $.postgresqlSourceConfig;
        this.sourceConnectionProfile = $.sourceConnectionProfile;
        this.sqlServerSourceConfig = $.sqlServerSourceConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamSourceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamSourceConfigArgs $;

        public Builder() {
            $ = new StreamSourceConfigArgs();
        }

        public Builder(StreamSourceConfigArgs defaults) {
            $ = new StreamSourceConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mysqlSourceConfig MySQL data source configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder mysqlSourceConfig(@Nullable Output<StreamSourceConfigMysqlSourceConfigArgs> mysqlSourceConfig) {
            $.mysqlSourceConfig = mysqlSourceConfig;
            return this;
        }

        /**
         * @param mysqlSourceConfig MySQL data source configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder mysqlSourceConfig(StreamSourceConfigMysqlSourceConfigArgs mysqlSourceConfig) {
            return mysqlSourceConfig(Output.of(mysqlSourceConfig));
        }

        /**
         * @param oracleSourceConfig MySQL data source configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oracleSourceConfig(@Nullable Output<StreamSourceConfigOracleSourceConfigArgs> oracleSourceConfig) {
            $.oracleSourceConfig = oracleSourceConfig;
            return this;
        }

        /**
         * @param oracleSourceConfig MySQL data source configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oracleSourceConfig(StreamSourceConfigOracleSourceConfigArgs oracleSourceConfig) {
            return oracleSourceConfig(Output.of(oracleSourceConfig));
        }

        /**
         * @param postgresqlSourceConfig PostgreSQL data source configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder postgresqlSourceConfig(@Nullable Output<StreamSourceConfigPostgresqlSourceConfigArgs> postgresqlSourceConfig) {
            $.postgresqlSourceConfig = postgresqlSourceConfig;
            return this;
        }

        /**
         * @param postgresqlSourceConfig PostgreSQL data source configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder postgresqlSourceConfig(StreamSourceConfigPostgresqlSourceConfigArgs postgresqlSourceConfig) {
            return postgresqlSourceConfig(Output.of(postgresqlSourceConfig));
        }

        /**
         * @param sourceConnectionProfile Source connection profile resource. Format: projects/{project}/locations/{location}/connectionProfiles/{name}
         * 
         * @return builder
         * 
         */
        public Builder sourceConnectionProfile(Output<String> sourceConnectionProfile) {
            $.sourceConnectionProfile = sourceConnectionProfile;
            return this;
        }

        /**
         * @param sourceConnectionProfile Source connection profile resource. Format: projects/{project}/locations/{location}/connectionProfiles/{name}
         * 
         * @return builder
         * 
         */
        public Builder sourceConnectionProfile(String sourceConnectionProfile) {
            return sourceConnectionProfile(Output.of(sourceConnectionProfile));
        }

        /**
         * @param sqlServerSourceConfig SQL Server data source configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sqlServerSourceConfig(@Nullable Output<StreamSourceConfigSqlServerSourceConfigArgs> sqlServerSourceConfig) {
            $.sqlServerSourceConfig = sqlServerSourceConfig;
            return this;
        }

        /**
         * @param sqlServerSourceConfig SQL Server data source configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sqlServerSourceConfig(StreamSourceConfigSqlServerSourceConfigArgs sqlServerSourceConfig) {
            return sqlServerSourceConfig(Output.of(sqlServerSourceConfig));
        }

        public StreamSourceConfigArgs build() {
            if ($.sourceConnectionProfile == null) {
                throw new MissingRequiredPropertyException("StreamSourceConfigArgs", "sourceConnectionProfile");
            }
            return $;
        }
    }

}
