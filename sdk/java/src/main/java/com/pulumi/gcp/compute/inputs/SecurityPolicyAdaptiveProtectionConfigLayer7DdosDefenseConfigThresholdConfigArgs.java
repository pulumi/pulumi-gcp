// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.inputs.SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfigArgs;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs Empty = new SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs();

    /**
     * Confidence threshold above which Adaptive Protection&#39;s auto-deploy takes actions.
     * 
     */
    @Import(name="autoDeployConfidenceThreshold")
    private @Nullable Output<Double> autoDeployConfidenceThreshold;

    /**
     * @return Confidence threshold above which Adaptive Protection&#39;s auto-deploy takes actions.
     * 
     */
    public Optional<Output<Double>> autoDeployConfidenceThreshold() {
        return Optional.ofNullable(this.autoDeployConfidenceThreshold);
    }

    /**
     * Duration over which Adaptive Protection&#39;s auto-deployed actions last.
     * 
     */
    @Import(name="autoDeployExpirationSec")
    private @Nullable Output<Integer> autoDeployExpirationSec;

    /**
     * @return Duration over which Adaptive Protection&#39;s auto-deployed actions last.
     * 
     */
    public Optional<Output<Integer>> autoDeployExpirationSec() {
        return Optional.ofNullable(this.autoDeployExpirationSec);
    }

    /**
     * Impacted baseline threshold below which Adaptive Protection&#39;s auto-deploy takes actions.
     * 
     */
    @Import(name="autoDeployImpactedBaselineThreshold")
    private @Nullable Output<Double> autoDeployImpactedBaselineThreshold;

    /**
     * @return Impacted baseline threshold below which Adaptive Protection&#39;s auto-deploy takes actions.
     * 
     */
    public Optional<Output<Double>> autoDeployImpactedBaselineThreshold() {
        return Optional.ofNullable(this.autoDeployImpactedBaselineThreshold);
    }

    /**
     * Load threshold above which Adaptive Protection automatically deploy threshold based on the backend load threshold and detect a new rule during an alerted attack.
     * 
     */
    @Import(name="autoDeployLoadThreshold")
    private @Nullable Output<Double> autoDeployLoadThreshold;

    /**
     * @return Load threshold above which Adaptive Protection automatically deploy threshold based on the backend load threshold and detect a new rule during an alerted attack.
     * 
     */
    public Optional<Output<Double>> autoDeployLoadThreshold() {
        return Optional.ofNullable(this.autoDeployLoadThreshold);
    }

    /**
     * Detection threshold based on absolute QPS.
     * 
     */
    @Import(name="detectionAbsoluteQps")
    private @Nullable Output<Double> detectionAbsoluteQps;

    /**
     * @return Detection threshold based on absolute QPS.
     * 
     */
    public Optional<Output<Double>> detectionAbsoluteQps() {
        return Optional.ofNullable(this.detectionAbsoluteQps);
    }

    /**
     * Detection threshold based on the backend service&#39;s load.
     * 
     */
    @Import(name="detectionLoadThreshold")
    private @Nullable Output<Double> detectionLoadThreshold;

    /**
     * @return Detection threshold based on the backend service&#39;s load.
     * 
     */
    public Optional<Output<Double>> detectionLoadThreshold() {
        return Optional.ofNullable(this.detectionLoadThreshold);
    }

    /**
     * Detection threshold based on QPS relative to the average of baseline traffic.
     * 
     */
    @Import(name="detectionRelativeToBaselineQps")
    private @Nullable Output<Double> detectionRelativeToBaselineQps;

    /**
     * @return Detection threshold based on QPS relative to the average of baseline traffic.
     * 
     */
    public Optional<Output<Double>> detectionRelativeToBaselineQps() {
        return Optional.ofNullable(this.detectionRelativeToBaselineQps);
    }

    /**
     * The name of config. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the security policy.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of config. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the security policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Configuration options for enabling Adaptive Protection to work on the specified service granularity. Structure is documented below.
     * 
     */
    @Import(name="trafficGranularityConfigs")
    private @Nullable Output<List<SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfigArgs>> trafficGranularityConfigs;

    /**
     * @return Configuration options for enabling Adaptive Protection to work on the specified service granularity. Structure is documented below.
     * 
     */
    public Optional<Output<List<SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfigArgs>>> trafficGranularityConfigs() {
        return Optional.ofNullable(this.trafficGranularityConfigs);
    }

    private SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs() {}

    private SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs $) {
        this.autoDeployConfidenceThreshold = $.autoDeployConfidenceThreshold;
        this.autoDeployExpirationSec = $.autoDeployExpirationSec;
        this.autoDeployImpactedBaselineThreshold = $.autoDeployImpactedBaselineThreshold;
        this.autoDeployLoadThreshold = $.autoDeployLoadThreshold;
        this.detectionAbsoluteQps = $.detectionAbsoluteQps;
        this.detectionLoadThreshold = $.detectionLoadThreshold;
        this.detectionRelativeToBaselineQps = $.detectionRelativeToBaselineQps;
        this.name = $.name;
        this.trafficGranularityConfigs = $.trafficGranularityConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs $;

        public Builder() {
            $ = new SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs();
        }

        public Builder(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs defaults) {
            $ = new SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoDeployConfidenceThreshold Confidence threshold above which Adaptive Protection&#39;s auto-deploy takes actions.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployConfidenceThreshold(@Nullable Output<Double> autoDeployConfidenceThreshold) {
            $.autoDeployConfidenceThreshold = autoDeployConfidenceThreshold;
            return this;
        }

        /**
         * @param autoDeployConfidenceThreshold Confidence threshold above which Adaptive Protection&#39;s auto-deploy takes actions.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployConfidenceThreshold(Double autoDeployConfidenceThreshold) {
            return autoDeployConfidenceThreshold(Output.of(autoDeployConfidenceThreshold));
        }

        /**
         * @param autoDeployExpirationSec Duration over which Adaptive Protection&#39;s auto-deployed actions last.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployExpirationSec(@Nullable Output<Integer> autoDeployExpirationSec) {
            $.autoDeployExpirationSec = autoDeployExpirationSec;
            return this;
        }

        /**
         * @param autoDeployExpirationSec Duration over which Adaptive Protection&#39;s auto-deployed actions last.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployExpirationSec(Integer autoDeployExpirationSec) {
            return autoDeployExpirationSec(Output.of(autoDeployExpirationSec));
        }

        /**
         * @param autoDeployImpactedBaselineThreshold Impacted baseline threshold below which Adaptive Protection&#39;s auto-deploy takes actions.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployImpactedBaselineThreshold(@Nullable Output<Double> autoDeployImpactedBaselineThreshold) {
            $.autoDeployImpactedBaselineThreshold = autoDeployImpactedBaselineThreshold;
            return this;
        }

        /**
         * @param autoDeployImpactedBaselineThreshold Impacted baseline threshold below which Adaptive Protection&#39;s auto-deploy takes actions.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployImpactedBaselineThreshold(Double autoDeployImpactedBaselineThreshold) {
            return autoDeployImpactedBaselineThreshold(Output.of(autoDeployImpactedBaselineThreshold));
        }

        /**
         * @param autoDeployLoadThreshold Load threshold above which Adaptive Protection automatically deploy threshold based on the backend load threshold and detect a new rule during an alerted attack.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployLoadThreshold(@Nullable Output<Double> autoDeployLoadThreshold) {
            $.autoDeployLoadThreshold = autoDeployLoadThreshold;
            return this;
        }

        /**
         * @param autoDeployLoadThreshold Load threshold above which Adaptive Protection automatically deploy threshold based on the backend load threshold and detect a new rule during an alerted attack.
         * 
         * @return builder
         * 
         */
        public Builder autoDeployLoadThreshold(Double autoDeployLoadThreshold) {
            return autoDeployLoadThreshold(Output.of(autoDeployLoadThreshold));
        }

        /**
         * @param detectionAbsoluteQps Detection threshold based on absolute QPS.
         * 
         * @return builder
         * 
         */
        public Builder detectionAbsoluteQps(@Nullable Output<Double> detectionAbsoluteQps) {
            $.detectionAbsoluteQps = detectionAbsoluteQps;
            return this;
        }

        /**
         * @param detectionAbsoluteQps Detection threshold based on absolute QPS.
         * 
         * @return builder
         * 
         */
        public Builder detectionAbsoluteQps(Double detectionAbsoluteQps) {
            return detectionAbsoluteQps(Output.of(detectionAbsoluteQps));
        }

        /**
         * @param detectionLoadThreshold Detection threshold based on the backend service&#39;s load.
         * 
         * @return builder
         * 
         */
        public Builder detectionLoadThreshold(@Nullable Output<Double> detectionLoadThreshold) {
            $.detectionLoadThreshold = detectionLoadThreshold;
            return this;
        }

        /**
         * @param detectionLoadThreshold Detection threshold based on the backend service&#39;s load.
         * 
         * @return builder
         * 
         */
        public Builder detectionLoadThreshold(Double detectionLoadThreshold) {
            return detectionLoadThreshold(Output.of(detectionLoadThreshold));
        }

        /**
         * @param detectionRelativeToBaselineQps Detection threshold based on QPS relative to the average of baseline traffic.
         * 
         * @return builder
         * 
         */
        public Builder detectionRelativeToBaselineQps(@Nullable Output<Double> detectionRelativeToBaselineQps) {
            $.detectionRelativeToBaselineQps = detectionRelativeToBaselineQps;
            return this;
        }

        /**
         * @param detectionRelativeToBaselineQps Detection threshold based on QPS relative to the average of baseline traffic.
         * 
         * @return builder
         * 
         */
        public Builder detectionRelativeToBaselineQps(Double detectionRelativeToBaselineQps) {
            return detectionRelativeToBaselineQps(Output.of(detectionRelativeToBaselineQps));
        }

        /**
         * @param name The name of config. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the security policy.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of config. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the security policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param trafficGranularityConfigs Configuration options for enabling Adaptive Protection to work on the specified service granularity. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trafficGranularityConfigs(@Nullable Output<List<SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfigArgs>> trafficGranularityConfigs) {
            $.trafficGranularityConfigs = trafficGranularityConfigs;
            return this;
        }

        /**
         * @param trafficGranularityConfigs Configuration options for enabling Adaptive Protection to work on the specified service granularity. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trafficGranularityConfigs(List<SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfigArgs> trafficGranularityConfigs) {
            return trafficGranularityConfigs(Output.of(trafficGranularityConfigs));
        }

        /**
         * @param trafficGranularityConfigs Configuration options for enabling Adaptive Protection to work on the specified service granularity. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trafficGranularityConfigs(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfigArgs... trafficGranularityConfigs) {
            return trafficGranularityConfigs(List.of(trafficGranularityConfigs));
        }

        public SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigArgs", "name");
            }
            return $;
        }
    }

}
