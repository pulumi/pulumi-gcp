// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAppleAppConfigResult {
    private String appId;
    /**
     * @return The content of the XML configuration file as a base64-encoded string.
     * 
     */
    private String configFileContents;
    /**
     * @return The filename that the configuration artifact for the IosApp is typically saved as.
     * 
     */
    private String configFilename;
    private String id;
    private @Nullable String project;

    private GetAppleAppConfigResult() {}
    public String appId() {
        return this.appId;
    }
    /**
     * @return The content of the XML configuration file as a base64-encoded string.
     * 
     */
    public String configFileContents() {
        return this.configFileContents;
    }
    /**
     * @return The filename that the configuration artifact for the IosApp is typically saved as.
     * 
     */
    public String configFilename() {
        return this.configFilename;
    }
    public String id() {
        return this.id;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppleAppConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appId;
        private String configFileContents;
        private String configFilename;
        private String id;
        private @Nullable String project;
        public Builder() {}
        public Builder(GetAppleAppConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appId = defaults.appId;
    	      this.configFileContents = defaults.configFileContents;
    	      this.configFilename = defaults.configFilename;
    	      this.id = defaults.id;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder appId(String appId) {
            if (appId == null) {
              throw new MissingRequiredPropertyException("GetAppleAppConfigResult", "appId");
            }
            this.appId = appId;
            return this;
        }
        @CustomType.Setter
        public Builder configFileContents(String configFileContents) {
            if (configFileContents == null) {
              throw new MissingRequiredPropertyException("GetAppleAppConfigResult", "configFileContents");
            }
            this.configFileContents = configFileContents;
            return this;
        }
        @CustomType.Setter
        public Builder configFilename(String configFilename) {
            if (configFilename == null) {
              throw new MissingRequiredPropertyException("GetAppleAppConfigResult", "configFilename");
            }
            this.configFilename = configFilename;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAppleAppConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        public GetAppleAppConfigResult build() {
            final var _resultValue = new GetAppleAppConfigResult();
            _resultValue.appId = appId;
            _resultValue.configFileContents = configFileContents;
            _resultValue.configFilename = configFilename;
            _resultValue.id = id;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
