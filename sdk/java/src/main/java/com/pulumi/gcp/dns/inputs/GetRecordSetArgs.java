// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRecordSetArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRecordSetArgs Empty = new GetRecordSetArgs();

    /**
     * The Name of the zone.
     * 
     */
    @Import(name="managedZone", required=true)
    private Output<String> managedZone;

    /**
     * @return The Name of the zone.
     * 
     */
    public Output<String> managedZone() {
        return this.managedZone;
    }

    /**
     * The DNS name for the resource.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The DNS name for the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The ID of the project for the Google Cloud.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project for the Google Cloud.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private GetRecordSetArgs() {}

    private GetRecordSetArgs(GetRecordSetArgs $) {
        this.managedZone = $.managedZone;
        this.name = $.name;
        this.project = $.project;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRecordSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRecordSetArgs $;

        public Builder() {
            $ = new GetRecordSetArgs();
        }

        public Builder(GetRecordSetArgs defaults) {
            $ = new GetRecordSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managedZone The Name of the zone.
         * 
         * @return builder
         * 
         */
        public Builder managedZone(Output<String> managedZone) {
            $.managedZone = managedZone;
            return this;
        }

        /**
         * @param managedZone The Name of the zone.
         * 
         * @return builder
         * 
         */
        public Builder managedZone(String managedZone) {
            return managedZone(Output.of(managedZone));
        }

        /**
         * @param name The DNS name for the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The DNS name for the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project for the Google Cloud.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project for the Google Cloud.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetRecordSetArgs build() {
            $.managedZone = Objects.requireNonNull($.managedZone, "expected parameter 'managedZone' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
