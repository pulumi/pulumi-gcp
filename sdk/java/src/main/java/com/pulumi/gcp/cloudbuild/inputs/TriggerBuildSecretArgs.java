// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerBuildSecretArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerBuildSecretArgs Empty = new TriggerBuildSecretArgs();

    /**
     * Cloud KMS key name to use to decrypt these envs.
     * 
     */
    @Import(name="kmsKeyName", required=true)
    private Output<String> kmsKeyName;

    /**
     * @return Cloud KMS key name to use to decrypt these envs.
     * 
     */
    public Output<String> kmsKeyName() {
        return this.kmsKeyName;
    }

    /**
     * Map of environment variable name to its encrypted value.
     * Secret environment variables must be unique across all of a build&#39;s secrets,
     * and must be used by at least one build step. Values can be at most 64 KB in size.
     * There can be at most 100 secret values across all of a build&#39;s secrets.
     * 
     */
    @Import(name="secretEnv")
    private @Nullable Output<Map<String,String>> secretEnv;

    /**
     * @return Map of environment variable name to its encrypted value.
     * Secret environment variables must be unique across all of a build&#39;s secrets,
     * and must be used by at least one build step. Values can be at most 64 KB in size.
     * There can be at most 100 secret values across all of a build&#39;s secrets.
     * 
     */
    public Optional<Output<Map<String,String>>> secretEnv() {
        return Optional.ofNullable(this.secretEnv);
    }

    private TriggerBuildSecretArgs() {}

    private TriggerBuildSecretArgs(TriggerBuildSecretArgs $) {
        this.kmsKeyName = $.kmsKeyName;
        this.secretEnv = $.secretEnv;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerBuildSecretArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerBuildSecretArgs $;

        public Builder() {
            $ = new TriggerBuildSecretArgs();
        }

        public Builder(TriggerBuildSecretArgs defaults) {
            $ = new TriggerBuildSecretArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsKeyName Cloud KMS key name to use to decrypt these envs.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(Output<String> kmsKeyName) {
            $.kmsKeyName = kmsKeyName;
            return this;
        }

        /**
         * @param kmsKeyName Cloud KMS key name to use to decrypt these envs.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(String kmsKeyName) {
            return kmsKeyName(Output.of(kmsKeyName));
        }

        /**
         * @param secretEnv Map of environment variable name to its encrypted value.
         * Secret environment variables must be unique across all of a build&#39;s secrets,
         * and must be used by at least one build step. Values can be at most 64 KB in size.
         * There can be at most 100 secret values across all of a build&#39;s secrets.
         * 
         * @return builder
         * 
         */
        public Builder secretEnv(@Nullable Output<Map<String,String>> secretEnv) {
            $.secretEnv = secretEnv;
            return this;
        }

        /**
         * @param secretEnv Map of environment variable name to its encrypted value.
         * Secret environment variables must be unique across all of a build&#39;s secrets,
         * and must be used by at least one build step. Values can be at most 64 KB in size.
         * There can be at most 100 secret values across all of a build&#39;s secrets.
         * 
         * @return builder
         * 
         */
        public Builder secretEnv(Map<String,String> secretEnv) {
            return secretEnv(Output.of(secretEnv));
        }

        public TriggerBuildSecretArgs build() {
            $.kmsKeyName = Objects.requireNonNull($.kmsKeyName, "expected parameter 'kmsKeyName' to be non-null");
            return $;
        }
    }

}
