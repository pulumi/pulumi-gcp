// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workbench.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceGceSetupBootDisk {
    /**
     * @return Optional. Input only. Disk encryption method used on the boot and
     * data disks, defaults to GMEK.
     * Possible values are: `GMEK`, `CMEK`.
     * 
     */
    private @Nullable String diskEncryption;
    /**
     * @return Optional. The size of the boot disk in GB attached to this instance,
     * up to a maximum of 64000 GB (64 TB). If not specified, this defaults to the
     * recommended value of 150GB.
     * 
     */
    private @Nullable String diskSizeGb;
    /**
     * @return Optional. Indicates the type of the disk.
     * Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
     * 
     */
    private @Nullable String diskType;
    /**
     * @return &#39;Optional. The KMS key used to encrypt the disks, only
     * applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
     * Learn more about using your own encryption keys.&#39;
     * 
     */
    private @Nullable String kmsKey;

    private InstanceGceSetupBootDisk() {}
    /**
     * @return Optional. Input only. Disk encryption method used on the boot and
     * data disks, defaults to GMEK.
     * Possible values are: `GMEK`, `CMEK`.
     * 
     */
    public Optional<String> diskEncryption() {
        return Optional.ofNullable(this.diskEncryption);
    }
    /**
     * @return Optional. The size of the boot disk in GB attached to this instance,
     * up to a maximum of 64000 GB (64 TB). If not specified, this defaults to the
     * recommended value of 150GB.
     * 
     */
    public Optional<String> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }
    /**
     * @return Optional. Indicates the type of the disk.
     * Possible values are: `PD_STANDARD`, `PD_SSD`, `PD_BALANCED`, `PD_EXTREME`.
     * 
     */
    public Optional<String> diskType() {
        return Optional.ofNullable(this.diskType);
    }
    /**
     * @return &#39;Optional. The KMS key used to encrypt the disks, only
     * applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
     * Learn more about using your own encryption keys.&#39;
     * 
     */
    public Optional<String> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceGceSetupBootDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String diskEncryption;
        private @Nullable String diskSizeGb;
        private @Nullable String diskType;
        private @Nullable String kmsKey;
        public Builder() {}
        public Builder(InstanceGceSetupBootDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskEncryption = defaults.diskEncryption;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.kmsKey = defaults.kmsKey;
        }

        @CustomType.Setter
        public Builder diskEncryption(@Nullable String diskEncryption) {

            this.diskEncryption = diskEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder diskSizeGb(@Nullable String diskSizeGb) {

            this.diskSizeGb = diskSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder diskType(@Nullable String diskType) {

            this.diskType = diskType;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKey(@Nullable String kmsKey) {

            this.kmsKey = kmsKey;
            return this;
        }
        public InstanceGceSetupBootDisk build() {
            final var _resultValue = new InstanceGceSetupBootDisk();
            _resultValue.diskEncryption = diskEncryption;
            _resultValue.diskSizeGb = diskSizeGb;
            _resultValue.diskType = diskType;
            _resultValue.kmsKey = kmsKey;
            return _resultValue;
        }
    }
}
