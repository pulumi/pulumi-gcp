// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HttpRouteRuleActionCorsPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final HttpRouteRuleActionCorsPolicyArgs Empty = new HttpRouteRuleActionCorsPolicyArgs();

    /**
     * In response to a preflight request, setting this to true indicates that the actual request can include user credentials.
     * 
     */
    @Import(name="allowCredentials")
    private @Nullable Output<Boolean> allowCredentials;

    /**
     * @return In response to a preflight request, setting this to true indicates that the actual request can include user credentials.
     * 
     */
    public Optional<Output<Boolean>> allowCredentials() {
        return Optional.ofNullable(this.allowCredentials);
    }

    /**
     * Specifies the content for Access-Control-Allow-Headers header.
     * 
     */
    @Import(name="allowHeaders")
    private @Nullable Output<List<String>> allowHeaders;

    /**
     * @return Specifies the content for Access-Control-Allow-Headers header.
     * 
     */
    public Optional<Output<List<String>>> allowHeaders() {
        return Optional.ofNullable(this.allowHeaders);
    }

    /**
     * Specifies the content for Access-Control-Allow-Methods header.
     * 
     */
    @Import(name="allowMethods")
    private @Nullable Output<List<String>> allowMethods;

    /**
     * @return Specifies the content for Access-Control-Allow-Methods header.
     * 
     */
    public Optional<Output<List<String>>> allowMethods() {
        return Optional.ofNullable(this.allowMethods);
    }

    /**
     * Specifies the regular expression patterns that match allowed origins.
     * 
     */
    @Import(name="allowOriginRegexes")
    private @Nullable Output<List<String>> allowOriginRegexes;

    /**
     * @return Specifies the regular expression patterns that match allowed origins.
     * 
     */
    public Optional<Output<List<String>>> allowOriginRegexes() {
        return Optional.ofNullable(this.allowOriginRegexes);
    }

    /**
     * Specifies the list of origins that will be allowed to do CORS requests.
     * 
     */
    @Import(name="allowOrigins")
    private @Nullable Output<List<String>> allowOrigins;

    /**
     * @return Specifies the list of origins that will be allowed to do CORS requests.
     * 
     */
    public Optional<Output<List<String>>> allowOrigins() {
        return Optional.ofNullable(this.allowOrigins);
    }

    /**
     * If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
     * 
     * ***
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
     * 
     * ***
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * Specifies the content for Access-Control-Expose-Headers header.
     * 
     */
    @Import(name="exposeHeaders")
    private @Nullable Output<List<String>> exposeHeaders;

    /**
     * @return Specifies the content for Access-Control-Expose-Headers header.
     * 
     */
    public Optional<Output<List<String>>> exposeHeaders() {
        return Optional.ofNullable(this.exposeHeaders);
    }

    /**
     * Specifies how long result of a preflight request can be cached in seconds.
     * 
     */
    @Import(name="maxAge")
    private @Nullable Output<String> maxAge;

    /**
     * @return Specifies how long result of a preflight request can be cached in seconds.
     * 
     */
    public Optional<Output<String>> maxAge() {
        return Optional.ofNullable(this.maxAge);
    }

    private HttpRouteRuleActionCorsPolicyArgs() {}

    private HttpRouteRuleActionCorsPolicyArgs(HttpRouteRuleActionCorsPolicyArgs $) {
        this.allowCredentials = $.allowCredentials;
        this.allowHeaders = $.allowHeaders;
        this.allowMethods = $.allowMethods;
        this.allowOriginRegexes = $.allowOriginRegexes;
        this.allowOrigins = $.allowOrigins;
        this.disabled = $.disabled;
        this.exposeHeaders = $.exposeHeaders;
        this.maxAge = $.maxAge;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HttpRouteRuleActionCorsPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpRouteRuleActionCorsPolicyArgs $;

        public Builder() {
            $ = new HttpRouteRuleActionCorsPolicyArgs();
        }

        public Builder(HttpRouteRuleActionCorsPolicyArgs defaults) {
            $ = new HttpRouteRuleActionCorsPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowCredentials In response to a preflight request, setting this to true indicates that the actual request can include user credentials.
         * 
         * @return builder
         * 
         */
        public Builder allowCredentials(@Nullable Output<Boolean> allowCredentials) {
            $.allowCredentials = allowCredentials;
            return this;
        }

        /**
         * @param allowCredentials In response to a preflight request, setting this to true indicates that the actual request can include user credentials.
         * 
         * @return builder
         * 
         */
        public Builder allowCredentials(Boolean allowCredentials) {
            return allowCredentials(Output.of(allowCredentials));
        }

        /**
         * @param allowHeaders Specifies the content for Access-Control-Allow-Headers header.
         * 
         * @return builder
         * 
         */
        public Builder allowHeaders(@Nullable Output<List<String>> allowHeaders) {
            $.allowHeaders = allowHeaders;
            return this;
        }

        /**
         * @param allowHeaders Specifies the content for Access-Control-Allow-Headers header.
         * 
         * @return builder
         * 
         */
        public Builder allowHeaders(List<String> allowHeaders) {
            return allowHeaders(Output.of(allowHeaders));
        }

        /**
         * @param allowHeaders Specifies the content for Access-Control-Allow-Headers header.
         * 
         * @return builder
         * 
         */
        public Builder allowHeaders(String... allowHeaders) {
            return allowHeaders(List.of(allowHeaders));
        }

        /**
         * @param allowMethods Specifies the content for Access-Control-Allow-Methods header.
         * 
         * @return builder
         * 
         */
        public Builder allowMethods(@Nullable Output<List<String>> allowMethods) {
            $.allowMethods = allowMethods;
            return this;
        }

        /**
         * @param allowMethods Specifies the content for Access-Control-Allow-Methods header.
         * 
         * @return builder
         * 
         */
        public Builder allowMethods(List<String> allowMethods) {
            return allowMethods(Output.of(allowMethods));
        }

        /**
         * @param allowMethods Specifies the content for Access-Control-Allow-Methods header.
         * 
         * @return builder
         * 
         */
        public Builder allowMethods(String... allowMethods) {
            return allowMethods(List.of(allowMethods));
        }

        /**
         * @param allowOriginRegexes Specifies the regular expression patterns that match allowed origins.
         * 
         * @return builder
         * 
         */
        public Builder allowOriginRegexes(@Nullable Output<List<String>> allowOriginRegexes) {
            $.allowOriginRegexes = allowOriginRegexes;
            return this;
        }

        /**
         * @param allowOriginRegexes Specifies the regular expression patterns that match allowed origins.
         * 
         * @return builder
         * 
         */
        public Builder allowOriginRegexes(List<String> allowOriginRegexes) {
            return allowOriginRegexes(Output.of(allowOriginRegexes));
        }

        /**
         * @param allowOriginRegexes Specifies the regular expression patterns that match allowed origins.
         * 
         * @return builder
         * 
         */
        public Builder allowOriginRegexes(String... allowOriginRegexes) {
            return allowOriginRegexes(List.of(allowOriginRegexes));
        }

        /**
         * @param allowOrigins Specifies the list of origins that will be allowed to do CORS requests.
         * 
         * @return builder
         * 
         */
        public Builder allowOrigins(@Nullable Output<List<String>> allowOrigins) {
            $.allowOrigins = allowOrigins;
            return this;
        }

        /**
         * @param allowOrigins Specifies the list of origins that will be allowed to do CORS requests.
         * 
         * @return builder
         * 
         */
        public Builder allowOrigins(List<String> allowOrigins) {
            return allowOrigins(Output.of(allowOrigins));
        }

        /**
         * @param allowOrigins Specifies the list of origins that will be allowed to do CORS requests.
         * 
         * @return builder
         * 
         */
        public Builder allowOrigins(String... allowOrigins) {
            return allowOrigins(List.of(allowOrigins));
        }

        /**
         * @param disabled If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param exposeHeaders Specifies the content for Access-Control-Expose-Headers header.
         * 
         * @return builder
         * 
         */
        public Builder exposeHeaders(@Nullable Output<List<String>> exposeHeaders) {
            $.exposeHeaders = exposeHeaders;
            return this;
        }

        /**
         * @param exposeHeaders Specifies the content for Access-Control-Expose-Headers header.
         * 
         * @return builder
         * 
         */
        public Builder exposeHeaders(List<String> exposeHeaders) {
            return exposeHeaders(Output.of(exposeHeaders));
        }

        /**
         * @param exposeHeaders Specifies the content for Access-Control-Expose-Headers header.
         * 
         * @return builder
         * 
         */
        public Builder exposeHeaders(String... exposeHeaders) {
            return exposeHeaders(List.of(exposeHeaders));
        }

        /**
         * @param maxAge Specifies how long result of a preflight request can be cached in seconds.
         * 
         * @return builder
         * 
         */
        public Builder maxAge(@Nullable Output<String> maxAge) {
            $.maxAge = maxAge;
            return this;
        }

        /**
         * @param maxAge Specifies how long result of a preflight request can be cached in seconds.
         * 
         * @return builder
         * 
         */
        public Builder maxAge(String maxAge) {
            return maxAge(Output.of(maxAge));
        }

        public HttpRouteRuleActionCorsPolicyArgs build() {
            return $;
        }
    }

}
