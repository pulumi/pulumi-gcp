// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkeonprem.inputs.VmwareAdminClusterNetworkConfigDhcpIpConfigArgs;
import com.pulumi.gcp.gkeonprem.inputs.VmwareAdminClusterNetworkConfigHaControlPlaneConfigArgs;
import com.pulumi.gcp.gkeonprem.inputs.VmwareAdminClusterNetworkConfigHostConfigArgs;
import com.pulumi.gcp.gkeonprem.inputs.VmwareAdminClusterNetworkConfigStaticIpConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VmwareAdminClusterNetworkConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final VmwareAdminClusterNetworkConfigArgs Empty = new VmwareAdminClusterNetworkConfigArgs();

    /**
     * Configuration settings for a DHCP IP configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="dhcpIpConfig")
    private @Nullable Output<VmwareAdminClusterNetworkConfigDhcpIpConfigArgs> dhcpIpConfig;

    /**
     * @return Configuration settings for a DHCP IP configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<VmwareAdminClusterNetworkConfigDhcpIpConfigArgs>> dhcpIpConfig() {
        return Optional.ofNullable(this.dhcpIpConfig);
    }

    /**
     * Configuration for HA admin cluster control plane.
     * Structure is documented below.
     * 
     */
    @Import(name="haControlPlaneConfig")
    private @Nullable Output<VmwareAdminClusterNetworkConfigHaControlPlaneConfigArgs> haControlPlaneConfig;

    /**
     * @return Configuration for HA admin cluster control plane.
     * Structure is documented below.
     * 
     */
    public Optional<Output<VmwareAdminClusterNetworkConfigHaControlPlaneConfigArgs>> haControlPlaneConfig() {
        return Optional.ofNullable(this.haControlPlaneConfig);
    }

    /**
     * Represents common network settings irrespective of the host&#39;s IP address.
     * Structure is documented below.
     * 
     */
    @Import(name="hostConfig")
    private @Nullable Output<VmwareAdminClusterNetworkConfigHostConfigArgs> hostConfig;

    /**
     * @return Represents common network settings irrespective of the host&#39;s IP address.
     * Structure is documented below.
     * 
     */
    public Optional<Output<VmwareAdminClusterNetworkConfigHostConfigArgs>> hostConfig() {
        return Optional.ofNullable(this.hostConfig);
    }

    /**
     * All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
     * Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    @Import(name="podAddressCidrBlocks", required=true)
    private Output<List<String>> podAddressCidrBlocks;

    /**
     * @return All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
     * Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    public Output<List<String>> podAddressCidrBlocks() {
        return this.podAddressCidrBlocks;
    }

    /**
     * All services in the cluster are assigned an RFC1918 IPv4 address
     * from these ranges. Only a single range is supported.. This field
     * cannot be changed after creation.
     * 
     */
    @Import(name="serviceAddressCidrBlocks", required=true)
    private Output<List<String>> serviceAddressCidrBlocks;

    /**
     * @return All services in the cluster are assigned an RFC1918 IPv4 address
     * from these ranges. Only a single range is supported.. This field
     * cannot be changed after creation.
     * 
     */
    public Output<List<String>> serviceAddressCidrBlocks() {
        return this.serviceAddressCidrBlocks;
    }

    /**
     * Configuration settings for a static IP configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="staticIpConfig")
    private @Nullable Output<VmwareAdminClusterNetworkConfigStaticIpConfigArgs> staticIpConfig;

    /**
     * @return Configuration settings for a static IP configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<VmwareAdminClusterNetworkConfigStaticIpConfigArgs>> staticIpConfig() {
        return Optional.ofNullable(this.staticIpConfig);
    }

    /**
     * vcenter_network specifies vCenter network name.
     * 
     */
    @Import(name="vcenterNetwork")
    private @Nullable Output<String> vcenterNetwork;

    /**
     * @return vcenter_network specifies vCenter network name.
     * 
     */
    public Optional<Output<String>> vcenterNetwork() {
        return Optional.ofNullable(this.vcenterNetwork);
    }

    private VmwareAdminClusterNetworkConfigArgs() {}

    private VmwareAdminClusterNetworkConfigArgs(VmwareAdminClusterNetworkConfigArgs $) {
        this.dhcpIpConfig = $.dhcpIpConfig;
        this.haControlPlaneConfig = $.haControlPlaneConfig;
        this.hostConfig = $.hostConfig;
        this.podAddressCidrBlocks = $.podAddressCidrBlocks;
        this.serviceAddressCidrBlocks = $.serviceAddressCidrBlocks;
        this.staticIpConfig = $.staticIpConfig;
        this.vcenterNetwork = $.vcenterNetwork;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VmwareAdminClusterNetworkConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VmwareAdminClusterNetworkConfigArgs $;

        public Builder() {
            $ = new VmwareAdminClusterNetworkConfigArgs();
        }

        public Builder(VmwareAdminClusterNetworkConfigArgs defaults) {
            $ = new VmwareAdminClusterNetworkConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dhcpIpConfig Configuration settings for a DHCP IP configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dhcpIpConfig(@Nullable Output<VmwareAdminClusterNetworkConfigDhcpIpConfigArgs> dhcpIpConfig) {
            $.dhcpIpConfig = dhcpIpConfig;
            return this;
        }

        /**
         * @param dhcpIpConfig Configuration settings for a DHCP IP configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dhcpIpConfig(VmwareAdminClusterNetworkConfigDhcpIpConfigArgs dhcpIpConfig) {
            return dhcpIpConfig(Output.of(dhcpIpConfig));
        }

        /**
         * @param haControlPlaneConfig Configuration for HA admin cluster control plane.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder haControlPlaneConfig(@Nullable Output<VmwareAdminClusterNetworkConfigHaControlPlaneConfigArgs> haControlPlaneConfig) {
            $.haControlPlaneConfig = haControlPlaneConfig;
            return this;
        }

        /**
         * @param haControlPlaneConfig Configuration for HA admin cluster control plane.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder haControlPlaneConfig(VmwareAdminClusterNetworkConfigHaControlPlaneConfigArgs haControlPlaneConfig) {
            return haControlPlaneConfig(Output.of(haControlPlaneConfig));
        }

        /**
         * @param hostConfig Represents common network settings irrespective of the host&#39;s IP address.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hostConfig(@Nullable Output<VmwareAdminClusterNetworkConfigHostConfigArgs> hostConfig) {
            $.hostConfig = hostConfig;
            return this;
        }

        /**
         * @param hostConfig Represents common network settings irrespective of the host&#39;s IP address.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hostConfig(VmwareAdminClusterNetworkConfigHostConfigArgs hostConfig) {
            return hostConfig(Output.of(hostConfig));
        }

        /**
         * @param podAddressCidrBlocks All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
         * Only a single range is supported. This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder podAddressCidrBlocks(Output<List<String>> podAddressCidrBlocks) {
            $.podAddressCidrBlocks = podAddressCidrBlocks;
            return this;
        }

        /**
         * @param podAddressCidrBlocks All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
         * Only a single range is supported. This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder podAddressCidrBlocks(List<String> podAddressCidrBlocks) {
            return podAddressCidrBlocks(Output.of(podAddressCidrBlocks));
        }

        /**
         * @param podAddressCidrBlocks All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
         * Only a single range is supported. This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder podAddressCidrBlocks(String... podAddressCidrBlocks) {
            return podAddressCidrBlocks(List.of(podAddressCidrBlocks));
        }

        /**
         * @param serviceAddressCidrBlocks All services in the cluster are assigned an RFC1918 IPv4 address
         * from these ranges. Only a single range is supported.. This field
         * cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder serviceAddressCidrBlocks(Output<List<String>> serviceAddressCidrBlocks) {
            $.serviceAddressCidrBlocks = serviceAddressCidrBlocks;
            return this;
        }

        /**
         * @param serviceAddressCidrBlocks All services in the cluster are assigned an RFC1918 IPv4 address
         * from these ranges. Only a single range is supported.. This field
         * cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder serviceAddressCidrBlocks(List<String> serviceAddressCidrBlocks) {
            return serviceAddressCidrBlocks(Output.of(serviceAddressCidrBlocks));
        }

        /**
         * @param serviceAddressCidrBlocks All services in the cluster are assigned an RFC1918 IPv4 address
         * from these ranges. Only a single range is supported.. This field
         * cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder serviceAddressCidrBlocks(String... serviceAddressCidrBlocks) {
            return serviceAddressCidrBlocks(List.of(serviceAddressCidrBlocks));
        }

        /**
         * @param staticIpConfig Configuration settings for a static IP configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder staticIpConfig(@Nullable Output<VmwareAdminClusterNetworkConfigStaticIpConfigArgs> staticIpConfig) {
            $.staticIpConfig = staticIpConfig;
            return this;
        }

        /**
         * @param staticIpConfig Configuration settings for a static IP configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder staticIpConfig(VmwareAdminClusterNetworkConfigStaticIpConfigArgs staticIpConfig) {
            return staticIpConfig(Output.of(staticIpConfig));
        }

        /**
         * @param vcenterNetwork vcenter_network specifies vCenter network name.
         * 
         * @return builder
         * 
         */
        public Builder vcenterNetwork(@Nullable Output<String> vcenterNetwork) {
            $.vcenterNetwork = vcenterNetwork;
            return this;
        }

        /**
         * @param vcenterNetwork vcenter_network specifies vCenter network name.
         * 
         * @return builder
         * 
         */
        public Builder vcenterNetwork(String vcenterNetwork) {
            return vcenterNetwork(Output.of(vcenterNetwork));
        }

        public VmwareAdminClusterNetworkConfigArgs build() {
            if ($.podAddressCidrBlocks == null) {
                throw new MissingRequiredPropertyException("VmwareAdminClusterNetworkConfigArgs", "podAddressCidrBlocks");
            }
            if ($.serviceAddressCidrBlocks == null) {
                throw new MissingRequiredPropertyException("VmwareAdminClusterNetworkConfigArgs", "serviceAddressCidrBlocks");
            }
            return $;
        }
    }

}
