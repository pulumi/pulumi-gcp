// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.storage.outputs.BucketLifecycleRuleAction;
import com.pulumi.gcp.storage.outputs.BucketLifecycleRuleCondition;
import java.util.Objects;

@CustomType
public final class BucketLifecycleRule {
    /**
     * @return The Lifecycle Rule&#39;s action configuration. A single block of this type is supported. Structure is documented below.
     * 
     */
    private BucketLifecycleRuleAction action;
    /**
     * @return The Lifecycle Rule&#39;s condition configuration. A single block of this type is supported. Structure is documented below.
     * 
     */
    private BucketLifecycleRuleCondition condition;

    private BucketLifecycleRule() {}
    /**
     * @return The Lifecycle Rule&#39;s action configuration. A single block of this type is supported. Structure is documented below.
     * 
     */
    public BucketLifecycleRuleAction action() {
        return this.action;
    }
    /**
     * @return The Lifecycle Rule&#39;s condition configuration. A single block of this type is supported. Structure is documented below.
     * 
     */
    public BucketLifecycleRuleCondition condition() {
        return this.condition;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BucketLifecycleRuleAction action;
        private BucketLifecycleRuleCondition condition;
        public Builder() {}
        public Builder(BucketLifecycleRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.condition = defaults.condition;
        }

        @CustomType.Setter
        public Builder action(BucketLifecycleRuleAction action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("BucketLifecycleRule", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder condition(BucketLifecycleRuleCondition condition) {
            if (condition == null) {
              throw new MissingRequiredPropertyException("BucketLifecycleRule", "condition");
            }
            this.condition = condition;
            return this;
        }
        public BucketLifecycleRule build() {
            final var _resultValue = new BucketLifecycleRule();
            _resultValue.action = action;
            _resultValue.condition = condition;
            return _resultValue;
        }
    }
}
