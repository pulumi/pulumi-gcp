// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apihub.inputs.PluginInstanceAuthConfigOauth2ClientCredentialsConfigClientSecretArgs;
import java.lang.String;
import java.util.Objects;


public final class PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs Empty = new PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs();

    /**
     * The client identifier.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The client identifier.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * Secret provides a reference to entries in Secret Manager.
     * 
     */
    @Import(name="clientSecret", required=true)
    private Output<PluginInstanceAuthConfigOauth2ClientCredentialsConfigClientSecretArgs> clientSecret;

    /**
     * @return Secret provides a reference to entries in Secret Manager.
     * 
     */
    public Output<PluginInstanceAuthConfigOauth2ClientCredentialsConfigClientSecretArgs> clientSecret() {
        return this.clientSecret;
    }

    private PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs() {}

    private PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs(PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs $;

        public Builder() {
            $ = new PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs();
        }

        public Builder(PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs defaults) {
            $ = new PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId The client identifier.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The client identifier.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Secret provides a reference to entries in Secret Manager.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(Output<PluginInstanceAuthConfigOauth2ClientCredentialsConfigClientSecretArgs> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Secret provides a reference to entries in Secret Manager.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(PluginInstanceAuthConfigOauth2ClientCredentialsConfigClientSecretArgs clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs", "clientId");
            }
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs", "clientSecret");
            }
            return $;
        }
    }

}
