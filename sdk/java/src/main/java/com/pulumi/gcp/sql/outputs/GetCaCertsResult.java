// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.sql.outputs.GetCaCertsCert;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCaCertsResult {
    /**
     * @return SHA1 fingerprint of the currently active CA certificate.
     * 
     */
    private String activeVersion;
    /**
     * @return A list of server CA certificates for the instance. Each contains:
     * 
     */
    private List<GetCaCertsCert> certs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String instance;
    private String project;

    private GetCaCertsResult() {}
    /**
     * @return SHA1 fingerprint of the currently active CA certificate.
     * 
     */
    public String activeVersion() {
        return this.activeVersion;
    }
    /**
     * @return A list of server CA certificates for the instance. Each contains:
     * 
     */
    public List<GetCaCertsCert> certs() {
        return this.certs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String instance() {
        return this.instance;
    }
    public String project() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCaCertsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String activeVersion;
        private List<GetCaCertsCert> certs;
        private String id;
        private String instance;
        private String project;
        public Builder() {}
        public Builder(GetCaCertsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeVersion = defaults.activeVersion;
    	      this.certs = defaults.certs;
    	      this.id = defaults.id;
    	      this.instance = defaults.instance;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder activeVersion(String activeVersion) {
            this.activeVersion = Objects.requireNonNull(activeVersion);
            return this;
        }
        @CustomType.Setter
        public Builder certs(List<GetCaCertsCert> certs) {
            this.certs = Objects.requireNonNull(certs);
            return this;
        }
        public Builder certs(GetCaCertsCert... certs) {
            return certs(List.of(certs));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instance(String instance) {
            this.instance = Objects.requireNonNull(instance);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public GetCaCertsResult build() {
            final var o = new GetCaCertsResult();
            o.activeVersion = activeVersion;
            o.certs = certs;
            o.id = id;
            o.instance = instance;
            o.project = project;
            return o;
        }
    }
}
