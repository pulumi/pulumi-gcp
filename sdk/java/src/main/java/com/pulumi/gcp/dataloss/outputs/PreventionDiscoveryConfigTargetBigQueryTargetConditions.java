// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetBigQueryTargetConditionsOrConditions;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetBigQueryTargetConditionsTypes;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreventionDiscoveryConfigTargetBigQueryTargetConditions {
    /**
     * @return File store must have been created after this date. Used to avoid backfilling. A timestamp in RFC3339 UTC &#34;Zulu&#34; format with nanosecond resolution and upto nine fractional digits.
     * 
     */
    private @Nullable String createdAfter;
    /**
     * @return At least one of the conditions must be true for a table to be scanned.
     * Structure is documented below.
     * 
     */
    private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetConditionsOrConditions orConditions;
    /**
     * @return Restrict discovery to categories of table types. Currently view, materialized view, snapshot and non-biglake external tables are supported.
     * Possible values are: `BIG_QUERY_COLLECTION_ALL_TYPES`, `BIG_QUERY_COLLECTION_ONLY_SUPPORTED_TYPES`.
     * 
     */
    private @Nullable String typeCollection;
    /**
     * @return Data profiles will only be generated for the database resource types specified in this field. If not specified, defaults to [DATABASE_RESOURCE_TYPE_ALL_SUPPORTED_TYPES].
     * Each value may be one of: `DATABASE_RESOURCE_TYPE_ALL_SUPPORTED_TYPES`, `DATABASE_RESOURCE_TYPE_TABLE`.
     * 
     */
    private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetConditionsTypes types;

    private PreventionDiscoveryConfigTargetBigQueryTargetConditions() {}
    /**
     * @return File store must have been created after this date. Used to avoid backfilling. A timestamp in RFC3339 UTC &#34;Zulu&#34; format with nanosecond resolution and upto nine fractional digits.
     * 
     */
    public Optional<String> createdAfter() {
        return Optional.ofNullable(this.createdAfter);
    }
    /**
     * @return At least one of the conditions must be true for a table to be scanned.
     * Structure is documented below.
     * 
     */
    public Optional<PreventionDiscoveryConfigTargetBigQueryTargetConditionsOrConditions> orConditions() {
        return Optional.ofNullable(this.orConditions);
    }
    /**
     * @return Restrict discovery to categories of table types. Currently view, materialized view, snapshot and non-biglake external tables are supported.
     * Possible values are: `BIG_QUERY_COLLECTION_ALL_TYPES`, `BIG_QUERY_COLLECTION_ONLY_SUPPORTED_TYPES`.
     * 
     */
    public Optional<String> typeCollection() {
        return Optional.ofNullable(this.typeCollection);
    }
    /**
     * @return Data profiles will only be generated for the database resource types specified in this field. If not specified, defaults to [DATABASE_RESOURCE_TYPE_ALL_SUPPORTED_TYPES].
     * Each value may be one of: `DATABASE_RESOURCE_TYPE_ALL_SUPPORTED_TYPES`, `DATABASE_RESOURCE_TYPE_TABLE`.
     * 
     */
    public Optional<PreventionDiscoveryConfigTargetBigQueryTargetConditionsTypes> types() {
        return Optional.ofNullable(this.types);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionDiscoveryConfigTargetBigQueryTargetConditions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String createdAfter;
        private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetConditionsOrConditions orConditions;
        private @Nullable String typeCollection;
        private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetConditionsTypes types;
        public Builder() {}
        public Builder(PreventionDiscoveryConfigTargetBigQueryTargetConditions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAfter = defaults.createdAfter;
    	      this.orConditions = defaults.orConditions;
    	      this.typeCollection = defaults.typeCollection;
    	      this.types = defaults.types;
        }

        @CustomType.Setter
        public Builder createdAfter(@Nullable String createdAfter) {

            this.createdAfter = createdAfter;
            return this;
        }
        @CustomType.Setter
        public Builder orConditions(@Nullable PreventionDiscoveryConfigTargetBigQueryTargetConditionsOrConditions orConditions) {

            this.orConditions = orConditions;
            return this;
        }
        @CustomType.Setter
        public Builder typeCollection(@Nullable String typeCollection) {

            this.typeCollection = typeCollection;
            return this;
        }
        @CustomType.Setter
        public Builder types(@Nullable PreventionDiscoveryConfigTargetBigQueryTargetConditionsTypes types) {

            this.types = types;
            return this;
        }
        public PreventionDiscoveryConfigTargetBigQueryTargetConditions build() {
            final var _resultValue = new PreventionDiscoveryConfigTargetBigQueryTargetConditions();
            _resultValue.createdAfter = createdAfter;
            _resultValue.orConditions = orConditions;
            _resultValue.typeCollection = typeCollection;
            _resultValue.types = types;
            return _resultValue;
        }
    }
}
