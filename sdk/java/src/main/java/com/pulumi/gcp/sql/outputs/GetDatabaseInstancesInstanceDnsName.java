// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstancesInstanceDnsName {
    private String connectionType;
    private String dnsScope;
    private String name;

    private GetDatabaseInstancesInstanceDnsName() {}
    public String connectionType() {
        return this.connectionType;
    }
    public String dnsScope() {
        return this.dnsScope;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstancesInstanceDnsName defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionType;
        private String dnsScope;
        private String name;
        public Builder() {}
        public Builder(GetDatabaseInstancesInstanceDnsName defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionType = defaults.connectionType;
    	      this.dnsScope = defaults.dnsScope;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder connectionType(String connectionType) {
            if (connectionType == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceDnsName", "connectionType");
            }
            this.connectionType = connectionType;
            return this;
        }
        @CustomType.Setter
        public Builder dnsScope(String dnsScope) {
            if (dnsScope == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceDnsName", "dnsScope");
            }
            this.dnsScope = dnsScope;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceDnsName", "name");
            }
            this.name = name;
            return this;
        }
        public GetDatabaseInstancesInstanceDnsName build() {
            final var _resultValue = new GetDatabaseInstancesInstanceDnsName();
            _resultValue.connectionType = connectionType;
            _resultValue.dnsScope = dnsScope;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
