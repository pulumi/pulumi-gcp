// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.netapp.StoragePoolArgs;
import com.pulumi.gcp.netapp.inputs.StoragePoolState;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Storage Pool Create Doc
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.GlobalAddress;
 * import com.pulumi.gcp.compute.GlobalAddressArgs;
 * import com.pulumi.gcp.servicenetworking.Connection;
 * import com.pulumi.gcp.servicenetworking.ConnectionArgs;
 * import com.pulumi.gcp.compute.NetworkPeeringRoutesConfig;
 * import com.pulumi.gcp.compute.NetworkPeeringRoutesConfigArgs;
 * import com.pulumi.gcp.netapp.StoragePool;
 * import com.pulumi.gcp.netapp.StoragePoolArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a network or use datasource to reference existing network
 *         var peeringNetwork = new Network("peeringNetwork", NetworkArgs.builder()
 *             .name("test-network")
 *             .build());
 * 
 *         // Reserve a CIDR for NetApp Volumes to use
 *         // When using shared-VPCs, this resource needs to be created in host project
 *         var privateIpAlloc = new GlobalAddress("privateIpAlloc", GlobalAddressArgs.builder()
 *             .name("test-address")
 *             .purpose("VPC_PEERING")
 *             .addressType("INTERNAL")
 *             .prefixLength(16)
 *             .network(peeringNetwork.id())
 *             .build());
 * 
 *         // Create a Private Service Access connection
 *         // When using shared-VPCs, this resource needs to be created in host project
 *         var default_ = new Connection("default", ConnectionArgs.builder()
 *             .network(peeringNetwork.id())
 *             .service("netapp.servicenetworking.goog")
 *             .reservedPeeringRanges(privateIpAlloc.name())
 *             .build());
 * 
 *         // Modify the PSA Connection to allow import/export of custom routes
 *         // When using shared-VPCs, this resource needs to be created in host project
 *         var routeUpdates = new NetworkPeeringRoutesConfig("routeUpdates", NetworkPeeringRoutesConfigArgs.builder()
 *             .peering(default_.peering())
 *             .network(peeringNetwork.name())
 *             .importCustomRoutes(true)
 *             .exportCustomRoutes(true)
 *             .build());
 * 
 *         // Create a storage pool
 *         // Create this resource in the project which is expected to own the volumes
 *         var testPool = new StoragePool("testPool", StoragePoolArgs.builder()
 *             .name("test-pool")
 *             .location("us-central1")
 *             .serviceLevel("PREMIUM")
 *             .capacityGib("2048")
 *             .network(peeringNetwork.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * StoragePool can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/storagePools/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{name}}`
 * 
 * * `{{location}}/{{name}}`
 * 
 * When using the `pulumi import` command, StoragePool can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:netapp/storagePool:StoragePool default projects/{{project}}/locations/{{location}}/storagePools/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:netapp/storagePool:StoragePool default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:netapp/storagePool:StoragePool default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:netapp/storagePool:StoragePool")
public class StoragePool extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
     * The policy needs to be in the same location as the storage pool.
     * 
     */
    @Export(name="activeDirectory", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> activeDirectory;

    /**
     * @return Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
     * The policy needs to be in the same location as the storage pool.
     * 
     */
    public Output<Optional<String>> activeDirectory() {
        return Codegen.optional(this.activeDirectory);
    }
    /**
     * Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
     * Auto-tiering can be enabled after storage pool creation but it can&#39;t be disabled once enabled.
     * 
     */
    @Export(name="allowAutoTiering", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> allowAutoTiering;

    /**
     * @return Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
     * Auto-tiering can be enabled after storage pool creation but it can&#39;t be disabled once enabled.
     * 
     */
    public Output<Optional<Boolean>> allowAutoTiering() {
        return Codegen.optional(this.allowAutoTiering);
    }
    /**
     * Available throughput of the storage pool (in MiB/s).
     * 
     */
    @Export(name="availableThroughputMibps", refs={Double.class}, tree="[0]")
    private Output<Double> availableThroughputMibps;

    /**
     * @return Available throughput of the storage pool (in MiB/s).
     * 
     */
    public Output<Double> availableThroughputMibps() {
        return this.availableThroughputMibps;
    }
    /**
     * Capacity of the storage pool (in GiB).
     * 
     */
    @Export(name="capacityGib", refs={String.class}, tree="[0]")
    private Output<String> capacityGib;

    /**
     * @return Capacity of the storage pool (in GiB).
     * 
     */
    public Output<String> capacityGib() {
        return this.capacityGib;
    }
    /**
     * Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
     * 
     */
    @Export(name="customPerformanceEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> customPerformanceEnabled;

    /**
     * @return Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
     * 
     */
    public Output<Optional<Boolean>> customPerformanceEnabled() {
        return Codegen.optional(this.customPerformanceEnabled);
    }
    /**
     * An optional description of this resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
     * The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
     * 
     */
    @Export(name="enableHotTierAutoResize", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableHotTierAutoResize;

    /**
     * @return Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
     * The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
     * 
     */
    public Output<Optional<Boolean>> enableHotTierAutoResize() {
        return Codegen.optional(this.enableHotTierAutoResize);
    }
    /**
     * Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
     * 
     */
    @Export(name="encryptionType", refs={String.class}, tree="[0]")
    private Output<String> encryptionType;

    /**
     * @return Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
     * 
     */
    public Output<String> encryptionType() {
        return this.encryptionType;
    }
    /**
     * Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
     * It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
     * 
     */
    @Export(name="hotTierSizeGib", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> hotTierSizeGib;

    /**
     * @return Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
     * It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
     * 
     */
    public Output<Optional<String>> hotTierSizeGib() {
        return Codegen.optional(this.hotTierSizeGib);
    }
    /**
     * Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
     * The policy needs to be in the same location as the storage pool.
     * 
     */
    @Export(name="kmsConfig", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsConfig;

    /**
     * @return Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
     * The policy needs to be in the same location as the storage pool.
     * 
     */
    public Output<Optional<String>> kmsConfig() {
        return Codegen.optional(this.kmsConfig);
    }
    /**
     * Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
     * using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
     * 
     */
    @Export(name="ldapEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ldapEnabled;

    /**
     * @return When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
     * using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
     * 
     */
    public Output<Optional<Boolean>> ldapEnabled() {
        return Codegen.optional(this.ldapEnabled);
    }
    /**
     * Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource name of the storage pool. Needs to be unique per location/region.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the storage pool. Needs to be unique per location/region.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
     * 
     */
    @Export(name="network", refs={String.class}, tree="[0]")
    private Output<String> network;

    /**
     * @return VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
     * 
     */
    public Output<String> network() {
        return this.network;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * QoS (Quality of Service) type of the storage pool.
     * Possible values are: AUTO, MANUAL.
     * Possible values are: `QOS_TYPE_UNSPECIFIED`, `AUTO`, `MANUAL`.
     * 
     */
    @Export(name="qosType", refs={String.class}, tree="[0]")
    private Output<String> qosType;

    /**
     * @return QoS (Quality of Service) type of the storage pool.
     * Possible values are: AUTO, MANUAL.
     * Possible values are: `QOS_TYPE_UNSPECIFIED`, `AUTO`, `MANUAL`.
     * 
     */
    public Output<String> qosType() {
        return this.qosType;
    }
    /**
     * Specifies the replica zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
     * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
     * 
     */
    @Export(name="replicaZone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> replicaZone;

    /**
     * @return Specifies the replica zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
     * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
     * 
     */
    public Output<Optional<String>> replicaZone() {
        return Codegen.optional(this.replicaZone);
    }
    /**
     * Service level of the storage pool.
     * Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
     * 
     */
    @Export(name="serviceLevel", refs={String.class}, tree="[0]")
    private Output<String> serviceLevel;

    /**
     * @return Service level of the storage pool.
     * Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
     * 
     */
    public Output<String> serviceLevel() {
        return this.serviceLevel;
    }
    /**
     * Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
     * 
     */
    @Export(name="totalIops", refs={String.class}, tree="[0]")
    private Output<String> totalIops;

    /**
     * @return Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
     * 
     */
    public Output<String> totalIops() {
        return this.totalIops;
    }
    /**
     * Optional. Custom Performance Total Throughput of the pool (in MiB/s).
     * 
     */
    @Export(name="totalThroughputMibps", refs={String.class}, tree="[0]")
    private Output<String> totalThroughputMibps;

    /**
     * @return Optional. Custom Performance Total Throughput of the pool (in MiB/s).
     * 
     */
    public Output<String> totalThroughputMibps() {
        return this.totalThroughputMibps;
    }
    /**
     * Size allocated to volumes in the storage pool (in GiB).
     * 
     */
    @Export(name="volumeCapacityGib", refs={String.class}, tree="[0]")
    private Output<String> volumeCapacityGib;

    /**
     * @return Size allocated to volumes in the storage pool (in GiB).
     * 
     */
    public Output<String> volumeCapacityGib() {
        return this.volumeCapacityGib;
    }
    /**
     * Number of volume in the storage pool.
     * 
     */
    @Export(name="volumeCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> volumeCount;

    /**
     * @return Number of volume in the storage pool.
     * 
     */
    public Output<Integer> volumeCount() {
        return this.volumeCount;
    }
    /**
     * Specifies the active zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
     * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
     * If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return Specifies the active zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
     * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
     * If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StoragePool(java.lang.String name) {
        this(name, StoragePoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StoragePool(java.lang.String name, StoragePoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StoragePool(java.lang.String name, StoragePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:netapp/storagePool:StoragePool", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StoragePool(java.lang.String name, Output<java.lang.String> id, @Nullable StoragePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:netapp/storagePool:StoragePool", name, state, makeResourceOptions(options, id), false);
    }

    private static StoragePoolArgs makeArgs(StoragePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StoragePoolArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StoragePool get(java.lang.String name, Output<java.lang.String> id, @Nullable StoragePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StoragePool(name, id, state, options);
    }
}
