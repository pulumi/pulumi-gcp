// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apihub.inputs.ApiHubInstanceConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiHubInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiHubInstanceArgs Empty = new ApiHubInstanceArgs();

    /**
     * Optional. Identifier to assign to the Api Hub instance. Must be unique within
     * scope of the parent resource. If the field is not provided,
     * system generated id will be used.
     * This value should be 4-40 characters, and valid characters
     * are `/a-z[0-9]-_/`.
     * 
     */
    @Import(name="apiHubInstanceId")
    private @Nullable Output<String> apiHubInstanceId;

    /**
     * @return Optional. Identifier to assign to the Api Hub instance. Must be unique within
     * scope of the parent resource. If the field is not provided,
     * system generated id will be used.
     * This value should be 4-40 characters, and valid characters
     * are `/a-z[0-9]-_/`.
     * 
     */
    public Optional<Output<String>> apiHubInstanceId() {
        return Optional.ofNullable(this.apiHubInstanceId);
    }

    /**
     * Available configurations to provision an ApiHub Instance.
     * Structure is documented below.
     * 
     */
    @Import(name="config", required=true)
    private Output<ApiHubInstanceConfigArgs> config;

    /**
     * @return Available configurations to provision an ApiHub Instance.
     * Structure is documented below.
     * 
     */
    public Output<ApiHubInstanceConfigArgs> config() {
        return this.config;
    }

    /**
     * Optional. Description of the ApiHub instance.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Optional. Description of the ApiHub instance.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Optional. Instance labels to represent user-provided metadata.
     * Refer to cloud documentation on labels for more details.
     * https://cloud.google.com/compute/docs/labeling-resources
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Optional. Instance labels to represent user-provided metadata.
     * Refer to cloud documentation on labels for more details.
     * https://cloud.google.com/compute/docs/labeling-resources
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private ApiHubInstanceArgs() {}

    private ApiHubInstanceArgs(ApiHubInstanceArgs $) {
        this.apiHubInstanceId = $.apiHubInstanceId;
        this.config = $.config;
        this.description = $.description;
        this.labels = $.labels;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiHubInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiHubInstanceArgs $;

        public Builder() {
            $ = new ApiHubInstanceArgs();
        }

        public Builder(ApiHubInstanceArgs defaults) {
            $ = new ApiHubInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiHubInstanceId Optional. Identifier to assign to the Api Hub instance. Must be unique within
         * scope of the parent resource. If the field is not provided,
         * system generated id will be used.
         * This value should be 4-40 characters, and valid characters
         * are `/a-z[0-9]-_/`.
         * 
         * @return builder
         * 
         */
        public Builder apiHubInstanceId(@Nullable Output<String> apiHubInstanceId) {
            $.apiHubInstanceId = apiHubInstanceId;
            return this;
        }

        /**
         * @param apiHubInstanceId Optional. Identifier to assign to the Api Hub instance. Must be unique within
         * scope of the parent resource. If the field is not provided,
         * system generated id will be used.
         * This value should be 4-40 characters, and valid characters
         * are `/a-z[0-9]-_/`.
         * 
         * @return builder
         * 
         */
        public Builder apiHubInstanceId(String apiHubInstanceId) {
            return apiHubInstanceId(Output.of(apiHubInstanceId));
        }

        /**
         * @param config Available configurations to provision an ApiHub Instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(Output<ApiHubInstanceConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Available configurations to provision an ApiHub Instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(ApiHubInstanceConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param description Optional. Description of the ApiHub instance.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Optional. Description of the ApiHub instance.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param labels Optional. Instance labels to represent user-provided metadata.
         * Refer to cloud documentation on labels for more details.
         * https://cloud.google.com/compute/docs/labeling-resources
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Optional. Instance labels to represent user-provided metadata.
         * Refer to cloud documentation on labels for more details.
         * https://cloud.google.com/compute/docs/labeling-resources
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ApiHubInstanceArgs build() {
            if ($.config == null) {
                throw new MissingRequiredPropertyException("ApiHubInstanceArgs", "config");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("ApiHubInstanceArgs", "location");
            }
            return $;
        }
    }

}
