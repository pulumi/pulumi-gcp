// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.kms.outputs.GetCryptoKeysKey;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCryptoKeysResult {
    private @Nullable String filter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String keyRing;
    /**
     * @return A list of all the retrieved keys from the provided key ring. This list is influenced by the provided filter argument.
     * 
     */
    private List<GetCryptoKeysKey> keys;

    private GetCryptoKeysResult() {}
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String keyRing() {
        return this.keyRing;
    }
    /**
     * @return A list of all the retrieved keys from the provided key ring. This list is influenced by the provided filter argument.
     * 
     */
    public List<GetCryptoKeysKey> keys() {
        return this.keys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCryptoKeysResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String filter;
        private String id;
        private String keyRing;
        private List<GetCryptoKeysKey> keys;
        public Builder() {}
        public Builder(GetCryptoKeysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.keyRing = defaults.keyRing;
    	      this.keys = defaults.keys;
        }

        @CustomType.Setter
        public Builder filter(@Nullable String filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCryptoKeysResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keyRing(String keyRing) {
            if (keyRing == null) {
              throw new MissingRequiredPropertyException("GetCryptoKeysResult", "keyRing");
            }
            this.keyRing = keyRing;
            return this;
        }
        @CustomType.Setter
        public Builder keys(List<GetCryptoKeysKey> keys) {
            if (keys == null) {
              throw new MissingRequiredPropertyException("GetCryptoKeysResult", "keys");
            }
            this.keys = keys;
            return this;
        }
        public Builder keys(GetCryptoKeysKey... keys) {
            return keys(List.of(keys));
        }
        public GetCryptoKeysResult build() {
            final var _resultValue = new GetCryptoKeysResult();
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.keyRing = keyRing;
            _resultValue.keys = keys;
            return _resultValue;
        }
    }
}
