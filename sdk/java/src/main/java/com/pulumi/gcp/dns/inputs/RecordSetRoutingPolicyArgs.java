// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dns.inputs.RecordSetRoutingPolicyGeoArgs;
import com.pulumi.gcp.dns.inputs.RecordSetRoutingPolicyWrrArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecordSetRoutingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecordSetRoutingPolicyArgs Empty = new RecordSetRoutingPolicyArgs();

    /**
     * The configuration for Geolocation based routing policy.
     * Structure is document below.
     * 
     */
    @Import(name="geos")
    private @Nullable Output<List<RecordSetRoutingPolicyGeoArgs>> geos;

    /**
     * @return The configuration for Geolocation based routing policy.
     * Structure is document below.
     * 
     */
    public Optional<Output<List<RecordSetRoutingPolicyGeoArgs>>> geos() {
        return Optional.ofNullable(this.geos);
    }

    /**
     * The configuration for Weighted Round Robin based routing policy.
     * Structure is document below.
     * 
     */
    @Import(name="wrrs")
    private @Nullable Output<List<RecordSetRoutingPolicyWrrArgs>> wrrs;

    /**
     * @return The configuration for Weighted Round Robin based routing policy.
     * Structure is document below.
     * 
     */
    public Optional<Output<List<RecordSetRoutingPolicyWrrArgs>>> wrrs() {
        return Optional.ofNullable(this.wrrs);
    }

    private RecordSetRoutingPolicyArgs() {}

    private RecordSetRoutingPolicyArgs(RecordSetRoutingPolicyArgs $) {
        this.geos = $.geos;
        this.wrrs = $.wrrs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordSetRoutingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordSetRoutingPolicyArgs $;

        public Builder() {
            $ = new RecordSetRoutingPolicyArgs();
        }

        public Builder(RecordSetRoutingPolicyArgs defaults) {
            $ = new RecordSetRoutingPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param geos The configuration for Geolocation based routing policy.
         * Structure is document below.
         * 
         * @return builder
         * 
         */
        public Builder geos(@Nullable Output<List<RecordSetRoutingPolicyGeoArgs>> geos) {
            $.geos = geos;
            return this;
        }

        /**
         * @param geos The configuration for Geolocation based routing policy.
         * Structure is document below.
         * 
         * @return builder
         * 
         */
        public Builder geos(List<RecordSetRoutingPolicyGeoArgs> geos) {
            return geos(Output.of(geos));
        }

        /**
         * @param geos The configuration for Geolocation based routing policy.
         * Structure is document below.
         * 
         * @return builder
         * 
         */
        public Builder geos(RecordSetRoutingPolicyGeoArgs... geos) {
            return geos(List.of(geos));
        }

        /**
         * @param wrrs The configuration for Weighted Round Robin based routing policy.
         * Structure is document below.
         * 
         * @return builder
         * 
         */
        public Builder wrrs(@Nullable Output<List<RecordSetRoutingPolicyWrrArgs>> wrrs) {
            $.wrrs = wrrs;
            return this;
        }

        /**
         * @param wrrs The configuration for Weighted Round Robin based routing policy.
         * Structure is document below.
         * 
         * @return builder
         * 
         */
        public Builder wrrs(List<RecordSetRoutingPolicyWrrArgs> wrrs) {
            return wrrs(Output.of(wrrs));
        }

        /**
         * @param wrrs The configuration for Weighted Round Robin based routing policy.
         * Structure is document below.
         * 
         * @return builder
         * 
         */
        public Builder wrrs(RecordSetRoutingPolicyWrrArgs... wrrs) {
            return wrrs(List.of(wrrs));
        }

        public RecordSetRoutingPolicyArgs build() {
            return $;
        }
    }

}
