// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalNetworkEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final GlobalNetworkEndpointState Empty = new GlobalNetworkEndpointState();

    /**
     * Fully qualified domain name of network endpoint.
     * This can only be specified when network_endpoint_type of the NEG is INTERNET_FQDN_PORT.
     * 
     */
    @Import(name="fqdn")
    private @Nullable Output<String> fqdn;

    /**
     * @return Fully qualified domain name of network endpoint.
     * This can only be specified when network_endpoint_type of the NEG is INTERNET_FQDN_PORT.
     * 
     */
    public Optional<Output<String>> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    /**
     * The global network endpoint group this endpoint is part of.
     * 
     */
    @Import(name="globalNetworkEndpointGroup")
    private @Nullable Output<String> globalNetworkEndpointGroup;

    /**
     * @return The global network endpoint group this endpoint is part of.
     * 
     */
    public Optional<Output<String>> globalNetworkEndpointGroup() {
        return Optional.ofNullable(this.globalNetworkEndpointGroup);
    }

    /**
     * IPv4 address external endpoint.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return IPv4 address external endpoint.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * Port number of the external endpoint.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return Port number of the external endpoint.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GlobalNetworkEndpointState() {}

    private GlobalNetworkEndpointState(GlobalNetworkEndpointState $) {
        this.fqdn = $.fqdn;
        this.globalNetworkEndpointGroup = $.globalNetworkEndpointGroup;
        this.ipAddress = $.ipAddress;
        this.port = $.port;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalNetworkEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalNetworkEndpointState $;

        public Builder() {
            $ = new GlobalNetworkEndpointState();
        }

        public Builder(GlobalNetworkEndpointState defaults) {
            $ = new GlobalNetworkEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param fqdn Fully qualified domain name of network endpoint.
         * This can only be specified when network_endpoint_type of the NEG is INTERNET_FQDN_PORT.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(@Nullable Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        /**
         * @param fqdn Fully qualified domain name of network endpoint.
         * This can only be specified when network_endpoint_type of the NEG is INTERNET_FQDN_PORT.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        /**
         * @param globalNetworkEndpointGroup The global network endpoint group this endpoint is part of.
         * 
         * @return builder
         * 
         */
        public Builder globalNetworkEndpointGroup(@Nullable Output<String> globalNetworkEndpointGroup) {
            $.globalNetworkEndpointGroup = globalNetworkEndpointGroup;
            return this;
        }

        /**
         * @param globalNetworkEndpointGroup The global network endpoint group this endpoint is part of.
         * 
         * @return builder
         * 
         */
        public Builder globalNetworkEndpointGroup(String globalNetworkEndpointGroup) {
            return globalNetworkEndpointGroup(Output.of(globalNetworkEndpointGroup));
        }

        /**
         * @param ipAddress IPv4 address external endpoint.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress IPv4 address external endpoint.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param port Port number of the external endpoint.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Port number of the external endpoint.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GlobalNetworkEndpointState build() {
            return $;
        }
    }

}
