// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.OrganizationSecurityPolicyRuleMatchConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationSecurityPolicyRuleMatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationSecurityPolicyRuleMatchArgs Empty = new OrganizationSecurityPolicyRuleMatchArgs();

    /**
     * The configuration options for matching the rule.
     * Structure is documented below.
     * 
     */
    @Import(name="config", required=true)
    private Output<OrganizationSecurityPolicyRuleMatchConfigArgs> config;

    /**
     * @return The configuration options for matching the rule.
     * Structure is documented below.
     * 
     */
    public Output<OrganizationSecurityPolicyRuleMatchConfigArgs> config() {
        return this.config;
    }

    /**
     * A description of the rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Preconfigured versioned expression. For organization security policy rules,
     * the only supported type is &#34;FIREWALL&#34;.
     * Default value is `FIREWALL`.
     * Possible values are `FIREWALL`.
     * 
     */
    @Import(name="versionedExpr")
    private @Nullable Output<String> versionedExpr;

    /**
     * @return Preconfigured versioned expression. For organization security policy rules,
     * the only supported type is &#34;FIREWALL&#34;.
     * Default value is `FIREWALL`.
     * Possible values are `FIREWALL`.
     * 
     */
    public Optional<Output<String>> versionedExpr() {
        return Optional.ofNullable(this.versionedExpr);
    }

    private OrganizationSecurityPolicyRuleMatchArgs() {}

    private OrganizationSecurityPolicyRuleMatchArgs(OrganizationSecurityPolicyRuleMatchArgs $) {
        this.config = $.config;
        this.description = $.description;
        this.versionedExpr = $.versionedExpr;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationSecurityPolicyRuleMatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationSecurityPolicyRuleMatchArgs $;

        public Builder() {
            $ = new OrganizationSecurityPolicyRuleMatchArgs();
        }

        public Builder(OrganizationSecurityPolicyRuleMatchArgs defaults) {
            $ = new OrganizationSecurityPolicyRuleMatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The configuration options for matching the rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(Output<OrganizationSecurityPolicyRuleMatchConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The configuration options for matching the rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(OrganizationSecurityPolicyRuleMatchConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param description A description of the rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param versionedExpr Preconfigured versioned expression. For organization security policy rules,
         * the only supported type is &#34;FIREWALL&#34;.
         * Default value is `FIREWALL`.
         * Possible values are `FIREWALL`.
         * 
         * @return builder
         * 
         */
        public Builder versionedExpr(@Nullable Output<String> versionedExpr) {
            $.versionedExpr = versionedExpr;
            return this;
        }

        /**
         * @param versionedExpr Preconfigured versioned expression. For organization security policy rules,
         * the only supported type is &#34;FIREWALL&#34;.
         * Default value is `FIREWALL`.
         * Possible values are `FIREWALL`.
         * 
         * @return builder
         * 
         */
        public Builder versionedExpr(String versionedExpr) {
            return versionedExpr(Output.of(versionedExpr));
        }

        public OrganizationSecurityPolicyRuleMatchArgs build() {
            $.config = Objects.requireNonNull($.config, "expected parameter 'config' to be non-null");
            return $;
        }
    }

}
