// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.modelarmor.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.modelarmor.outputs.TemplateTemplateMetadataMultiLanguageDetection;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TemplateTemplateMetadata {
    /**
     * @return Indicates the custom error code set by the user to be returned to the end
     * user if the LLM response trips Model Armor filters.
     * 
     */
    private @Nullable Integer customLlmResponseSafetyErrorCode;
    /**
     * @return Indicates the custom error message set by the user to be returned to the
     * end user if the LLM response trips Model Armor filters.
     * 
     */
    private @Nullable String customLlmResponseSafetyErrorMessage;
    /**
     * @return Indicates the custom error code set by the user to be returned to the end
     * user by the service extension if the prompt trips Model Armor filters.
     * 
     */
    private @Nullable Integer customPromptSafetyErrorCode;
    /**
     * @return Indicates the custom error message set by the user to be returned to the
     * end user if the prompt trips Model Armor filters.
     * 
     */
    private @Nullable String customPromptSafetyErrorMessage;
    /**
     * @return Possible values:
     * INSPECT_ONLY
     * INSPECT_AND_BLOCK
     * 
     */
    private @Nullable String enforcementType;
    /**
     * @return If true, partial detector failures should be ignored.
     * 
     */
    private @Nullable Boolean ignorePartialInvocationFailures;
    /**
     * @return If true, log sanitize operations.
     * 
     */
    private @Nullable Boolean logSanitizeOperations;
    /**
     * @return If true, log template crud operations.
     * 
     */
    private @Nullable Boolean logTemplateOperations;
    /**
     * @return Metadata to enable multi language detection via template.
     * Structure is documented below.
     * 
     */
    private @Nullable TemplateTemplateMetadataMultiLanguageDetection multiLanguageDetection;

    private TemplateTemplateMetadata() {}
    /**
     * @return Indicates the custom error code set by the user to be returned to the end
     * user if the LLM response trips Model Armor filters.
     * 
     */
    public Optional<Integer> customLlmResponseSafetyErrorCode() {
        return Optional.ofNullable(this.customLlmResponseSafetyErrorCode);
    }
    /**
     * @return Indicates the custom error message set by the user to be returned to the
     * end user if the LLM response trips Model Armor filters.
     * 
     */
    public Optional<String> customLlmResponseSafetyErrorMessage() {
        return Optional.ofNullable(this.customLlmResponseSafetyErrorMessage);
    }
    /**
     * @return Indicates the custom error code set by the user to be returned to the end
     * user by the service extension if the prompt trips Model Armor filters.
     * 
     */
    public Optional<Integer> customPromptSafetyErrorCode() {
        return Optional.ofNullable(this.customPromptSafetyErrorCode);
    }
    /**
     * @return Indicates the custom error message set by the user to be returned to the
     * end user if the prompt trips Model Armor filters.
     * 
     */
    public Optional<String> customPromptSafetyErrorMessage() {
        return Optional.ofNullable(this.customPromptSafetyErrorMessage);
    }
    /**
     * @return Possible values:
     * INSPECT_ONLY
     * INSPECT_AND_BLOCK
     * 
     */
    public Optional<String> enforcementType() {
        return Optional.ofNullable(this.enforcementType);
    }
    /**
     * @return If true, partial detector failures should be ignored.
     * 
     */
    public Optional<Boolean> ignorePartialInvocationFailures() {
        return Optional.ofNullable(this.ignorePartialInvocationFailures);
    }
    /**
     * @return If true, log sanitize operations.
     * 
     */
    public Optional<Boolean> logSanitizeOperations() {
        return Optional.ofNullable(this.logSanitizeOperations);
    }
    /**
     * @return If true, log template crud operations.
     * 
     */
    public Optional<Boolean> logTemplateOperations() {
        return Optional.ofNullable(this.logTemplateOperations);
    }
    /**
     * @return Metadata to enable multi language detection via template.
     * Structure is documented below.
     * 
     */
    public Optional<TemplateTemplateMetadataMultiLanguageDetection> multiLanguageDetection() {
        return Optional.ofNullable(this.multiLanguageDetection);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TemplateTemplateMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer customLlmResponseSafetyErrorCode;
        private @Nullable String customLlmResponseSafetyErrorMessage;
        private @Nullable Integer customPromptSafetyErrorCode;
        private @Nullable String customPromptSafetyErrorMessage;
        private @Nullable String enforcementType;
        private @Nullable Boolean ignorePartialInvocationFailures;
        private @Nullable Boolean logSanitizeOperations;
        private @Nullable Boolean logTemplateOperations;
        private @Nullable TemplateTemplateMetadataMultiLanguageDetection multiLanguageDetection;
        public Builder() {}
        public Builder(TemplateTemplateMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customLlmResponseSafetyErrorCode = defaults.customLlmResponseSafetyErrorCode;
    	      this.customLlmResponseSafetyErrorMessage = defaults.customLlmResponseSafetyErrorMessage;
    	      this.customPromptSafetyErrorCode = defaults.customPromptSafetyErrorCode;
    	      this.customPromptSafetyErrorMessage = defaults.customPromptSafetyErrorMessage;
    	      this.enforcementType = defaults.enforcementType;
    	      this.ignorePartialInvocationFailures = defaults.ignorePartialInvocationFailures;
    	      this.logSanitizeOperations = defaults.logSanitizeOperations;
    	      this.logTemplateOperations = defaults.logTemplateOperations;
    	      this.multiLanguageDetection = defaults.multiLanguageDetection;
        }

        @CustomType.Setter
        public Builder customLlmResponseSafetyErrorCode(@Nullable Integer customLlmResponseSafetyErrorCode) {

            this.customLlmResponseSafetyErrorCode = customLlmResponseSafetyErrorCode;
            return this;
        }
        @CustomType.Setter
        public Builder customLlmResponseSafetyErrorMessage(@Nullable String customLlmResponseSafetyErrorMessage) {

            this.customLlmResponseSafetyErrorMessage = customLlmResponseSafetyErrorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder customPromptSafetyErrorCode(@Nullable Integer customPromptSafetyErrorCode) {

            this.customPromptSafetyErrorCode = customPromptSafetyErrorCode;
            return this;
        }
        @CustomType.Setter
        public Builder customPromptSafetyErrorMessage(@Nullable String customPromptSafetyErrorMessage) {

            this.customPromptSafetyErrorMessage = customPromptSafetyErrorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder enforcementType(@Nullable String enforcementType) {

            this.enforcementType = enforcementType;
            return this;
        }
        @CustomType.Setter
        public Builder ignorePartialInvocationFailures(@Nullable Boolean ignorePartialInvocationFailures) {

            this.ignorePartialInvocationFailures = ignorePartialInvocationFailures;
            return this;
        }
        @CustomType.Setter
        public Builder logSanitizeOperations(@Nullable Boolean logSanitizeOperations) {

            this.logSanitizeOperations = logSanitizeOperations;
            return this;
        }
        @CustomType.Setter
        public Builder logTemplateOperations(@Nullable Boolean logTemplateOperations) {

            this.logTemplateOperations = logTemplateOperations;
            return this;
        }
        @CustomType.Setter
        public Builder multiLanguageDetection(@Nullable TemplateTemplateMetadataMultiLanguageDetection multiLanguageDetection) {

            this.multiLanguageDetection = multiLanguageDetection;
            return this;
        }
        public TemplateTemplateMetadata build() {
            final var _resultValue = new TemplateTemplateMetadata();
            _resultValue.customLlmResponseSafetyErrorCode = customLlmResponseSafetyErrorCode;
            _resultValue.customLlmResponseSafetyErrorMessage = customLlmResponseSafetyErrorMessage;
            _resultValue.customPromptSafetyErrorCode = customPromptSafetyErrorCode;
            _resultValue.customPromptSafetyErrorMessage = customPromptSafetyErrorMessage;
            _resultValue.enforcementType = enforcementType;
            _resultValue.ignorePartialInvocationFailures = ignorePartialInvocationFailures;
            _resultValue.logSanitizeOperations = logSanitizeOperations;
            _resultValue.logTemplateOperations = logTemplateOperations;
            _resultValue.multiLanguageDetection = multiLanguageDetection;
            return _resultValue;
        }
    }
}
