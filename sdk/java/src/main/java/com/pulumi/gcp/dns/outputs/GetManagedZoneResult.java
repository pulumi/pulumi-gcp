// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedZoneResult {
    /**
     * @return A textual description field.
     * 
     */
    private String description;
    /**
     * @return The fully qualified DNS name of this zone, e.g. `example.io.`.
     * 
     */
    private String dnsName;
    private String id;
    private String managedZoneId;
    private String name;
    /**
     * @return The list of nameservers that will be authoritative for this
     * domain. Use NS records to redirect from your DNS provider to these names,
     * thus making Google Cloud DNS authoritative for this zone.
     * 
     */
    private List<String> nameServers;
    private @Nullable String project;
    /**
     * @return The zone&#39;s visibility: public zones are exposed to the Internet,
     * while private zones are visible only to Virtual Private Cloud resources.
     * 
     */
    private String visibility;

    private GetManagedZoneResult() {}
    /**
     * @return A textual description field.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The fully qualified DNS name of this zone, e.g. `example.io.`.
     * 
     */
    public String dnsName() {
        return this.dnsName;
    }
    public String id() {
        return this.id;
    }
    public String managedZoneId() {
        return this.managedZoneId;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The list of nameservers that will be authoritative for this
     * domain. Use NS records to redirect from your DNS provider to these names,
     * thus making Google Cloud DNS authoritative for this zone.
     * 
     */
    public List<String> nameServers() {
        return this.nameServers;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return The zone&#39;s visibility: public zones are exposed to the Internet,
     * while private zones are visible only to Virtual Private Cloud resources.
     * 
     */
    public String visibility() {
        return this.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedZoneResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String dnsName;
        private String id;
        private String managedZoneId;
        private String name;
        private List<String> nameServers;
        private @Nullable String project;
        private String visibility;
        public Builder() {}
        public Builder(GetManagedZoneResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.dnsName = defaults.dnsName;
    	      this.id = defaults.id;
    	      this.managedZoneId = defaults.managedZoneId;
    	      this.name = defaults.name;
    	      this.nameServers = defaults.nameServers;
    	      this.project = defaults.project;
    	      this.visibility = defaults.visibility;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetManagedZoneResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(String dnsName) {
            if (dnsName == null) {
              throw new MissingRequiredPropertyException("GetManagedZoneResult", "dnsName");
            }
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedZoneResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedZoneId(String managedZoneId) {
            if (managedZoneId == null) {
              throw new MissingRequiredPropertyException("GetManagedZoneResult", "managedZoneId");
            }
            this.managedZoneId = managedZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetManagedZoneResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameServers(List<String> nameServers) {
            if (nameServers == null) {
              throw new MissingRequiredPropertyException("GetManagedZoneResult", "nameServers");
            }
            this.nameServers = nameServers;
            return this;
        }
        public Builder nameServers(String... nameServers) {
            return nameServers(List.of(nameServers));
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder visibility(String visibility) {
            if (visibility == null) {
              throw new MissingRequiredPropertyException("GetManagedZoneResult", "visibility");
            }
            this.visibility = visibility;
            return this;
        }
        public GetManagedZoneResult build() {
            final var _resultValue = new GetManagedZoneResult();
            _resultValue.description = description;
            _resultValue.dnsName = dnsName;
            _resultValue.id = id;
            _resultValue.managedZoneId = managedZoneId;
            _resultValue.name = name;
            _resultValue.nameServers = nameServers;
            _resultValue.project = project;
            _resultValue.visibility = visibility;
            return _resultValue;
        }
    }
}
