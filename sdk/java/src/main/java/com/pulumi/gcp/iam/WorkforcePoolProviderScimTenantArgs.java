// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkforcePoolProviderScimTenantArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkforcePoolProviderScimTenantArgs Empty = new WorkforcePoolProviderScimTenantArgs();

    /**
     * A user-specified description of the provider. Cannot exceed 256 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A user-specified description of the provider. Cannot exceed 256 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A user-specified display name for the scim tenant. Cannot exceed 32 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-specified display name for the scim tenant. Cannot exceed 32 characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The location for the resource.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location for the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the provider.
     * 
     */
    @Import(name="providerId", required=true)
    private Output<String> providerId;

    /**
     * @return The ID of the provider.
     * 
     */
    public Output<String> providerId() {
        return this.providerId;
    }

    /**
     * The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
     * 
     */
    @Import(name="scimTenantId", required=true)
    private Output<String> scimTenantId;

    /**
     * @return The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
     * 
     */
    public Output<String> scimTenantId() {
        return this.scimTenantId;
    }

    /**
     * The ID of the workforce pool.
     * 
     */
    @Import(name="workforcePoolId", required=true)
    private Output<String> workforcePoolId;

    /**
     * @return The ID of the workforce pool.
     * 
     */
    public Output<String> workforcePoolId() {
        return this.workforcePoolId;
    }

    private WorkforcePoolProviderScimTenantArgs() {}

    private WorkforcePoolProviderScimTenantArgs(WorkforcePoolProviderScimTenantArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.location = $.location;
        this.providerId = $.providerId;
        this.scimTenantId = $.scimTenantId;
        this.workforcePoolId = $.workforcePoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkforcePoolProviderScimTenantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkforcePoolProviderScimTenantArgs $;

        public Builder() {
            $ = new WorkforcePoolProviderScimTenantArgs();
        }

        public Builder(WorkforcePoolProviderScimTenantArgs defaults) {
            $ = new WorkforcePoolProviderScimTenantArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A user-specified description of the provider. Cannot exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A user-specified description of the provider. Cannot exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName A user-specified display name for the scim tenant. Cannot exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-specified display name for the scim tenant. Cannot exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param location The location for the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location for the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param providerId The ID of the provider.
         * 
         * @return builder
         * 
         */
        public Builder providerId(Output<String> providerId) {
            $.providerId = providerId;
            return this;
        }

        /**
         * @param providerId The ID of the provider.
         * 
         * @return builder
         * 
         */
        public Builder providerId(String providerId) {
            return providerId(Output.of(providerId));
        }

        /**
         * @param scimTenantId The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
         * 
         * @return builder
         * 
         */
        public Builder scimTenantId(Output<String> scimTenantId) {
            $.scimTenantId = scimTenantId;
            return this;
        }

        /**
         * @param scimTenantId The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
         * 
         * @return builder
         * 
         */
        public Builder scimTenantId(String scimTenantId) {
            return scimTenantId(Output.of(scimTenantId));
        }

        /**
         * @param workforcePoolId The ID of the workforce pool.
         * 
         * @return builder
         * 
         */
        public Builder workforcePoolId(Output<String> workforcePoolId) {
            $.workforcePoolId = workforcePoolId;
            return this;
        }

        /**
         * @param workforcePoolId The ID of the workforce pool.
         * 
         * @return builder
         * 
         */
        public Builder workforcePoolId(String workforcePoolId) {
            return workforcePoolId(Output.of(workforcePoolId));
        }

        public WorkforcePoolProviderScimTenantArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderScimTenantArgs", "location");
            }
            if ($.providerId == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderScimTenantArgs", "providerId");
            }
            if ($.scimTenantId == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderScimTenantArgs", "scimTenantId");
            }
            if ($.workforcePoolId == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderScimTenantArgs", "workforcePoolId");
            }
            return $;
        }
    }

}
