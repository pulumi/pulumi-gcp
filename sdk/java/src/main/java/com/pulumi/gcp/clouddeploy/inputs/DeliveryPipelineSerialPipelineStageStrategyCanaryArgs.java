// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.clouddeploy.inputs.DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentArgs;
import com.pulumi.gcp.clouddeploy.inputs.DeliveryPipelineSerialPipelineStageStrategyCanaryCustomCanaryDeploymentArgs;
import com.pulumi.gcp.clouddeploy.inputs.DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryPipelineSerialPipelineStageStrategyCanaryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeliveryPipelineSerialPipelineStageStrategyCanaryArgs Empty = new DeliveryPipelineSerialPipelineStageStrategyCanaryArgs();

    /**
     * Configures the progressive based deployment for a Target.
     * 
     */
    @Import(name="canaryDeployment")
    private @Nullable Output<DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentArgs> canaryDeployment;

    /**
     * @return Configures the progressive based deployment for a Target.
     * 
     */
    public Optional<Output<DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentArgs>> canaryDeployment() {
        return Optional.ofNullable(this.canaryDeployment);
    }

    /**
     * Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments.
     * 
     */
    @Import(name="customCanaryDeployment")
    private @Nullable Output<DeliveryPipelineSerialPipelineStageStrategyCanaryCustomCanaryDeploymentArgs> customCanaryDeployment;

    /**
     * @return Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments.
     * 
     */
    public Optional<Output<DeliveryPipelineSerialPipelineStageStrategyCanaryCustomCanaryDeploymentArgs>> customCanaryDeployment() {
        return Optional.ofNullable(this.customCanaryDeployment);
    }

    /**
     * Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment.
     * 
     */
    @Import(name="runtimeConfig")
    private @Nullable Output<DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigArgs> runtimeConfig;

    /**
     * @return Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment.
     * 
     */
    public Optional<Output<DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigArgs>> runtimeConfig() {
        return Optional.ofNullable(this.runtimeConfig);
    }

    private DeliveryPipelineSerialPipelineStageStrategyCanaryArgs() {}

    private DeliveryPipelineSerialPipelineStageStrategyCanaryArgs(DeliveryPipelineSerialPipelineStageStrategyCanaryArgs $) {
        this.canaryDeployment = $.canaryDeployment;
        this.customCanaryDeployment = $.customCanaryDeployment;
        this.runtimeConfig = $.runtimeConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryPipelineSerialPipelineStageStrategyCanaryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryPipelineSerialPipelineStageStrategyCanaryArgs $;

        public Builder() {
            $ = new DeliveryPipelineSerialPipelineStageStrategyCanaryArgs();
        }

        public Builder(DeliveryPipelineSerialPipelineStageStrategyCanaryArgs defaults) {
            $ = new DeliveryPipelineSerialPipelineStageStrategyCanaryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param canaryDeployment Configures the progressive based deployment for a Target.
         * 
         * @return builder
         * 
         */
        public Builder canaryDeployment(@Nullable Output<DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentArgs> canaryDeployment) {
            $.canaryDeployment = canaryDeployment;
            return this;
        }

        /**
         * @param canaryDeployment Configures the progressive based deployment for a Target.
         * 
         * @return builder
         * 
         */
        public Builder canaryDeployment(DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentArgs canaryDeployment) {
            return canaryDeployment(Output.of(canaryDeployment));
        }

        /**
         * @param customCanaryDeployment Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments.
         * 
         * @return builder
         * 
         */
        public Builder customCanaryDeployment(@Nullable Output<DeliveryPipelineSerialPipelineStageStrategyCanaryCustomCanaryDeploymentArgs> customCanaryDeployment) {
            $.customCanaryDeployment = customCanaryDeployment;
            return this;
        }

        /**
         * @param customCanaryDeployment Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments.
         * 
         * @return builder
         * 
         */
        public Builder customCanaryDeployment(DeliveryPipelineSerialPipelineStageStrategyCanaryCustomCanaryDeploymentArgs customCanaryDeployment) {
            return customCanaryDeployment(Output.of(customCanaryDeployment));
        }

        /**
         * @param runtimeConfig Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment.
         * 
         * @return builder
         * 
         */
        public Builder runtimeConfig(@Nullable Output<DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigArgs> runtimeConfig) {
            $.runtimeConfig = runtimeConfig;
            return this;
        }

        /**
         * @param runtimeConfig Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment.
         * 
         * @return builder
         * 
         */
        public Builder runtimeConfig(DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigArgs runtimeConfig) {
            return runtimeConfig(Output.of(runtimeConfig));
        }

        public DeliveryPipelineSerialPipelineStageStrategyCanaryArgs build() {
            return $;
        }
    }

}
