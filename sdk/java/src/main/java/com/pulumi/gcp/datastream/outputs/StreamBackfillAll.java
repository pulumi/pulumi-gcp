// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.datastream.outputs.StreamBackfillAllMysqlExcludedObjects;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamBackfillAll {
    /**
     * @return MySQL data source objects to avoid backfilling.
     * Structure is documented below.
     * 
     */
    private @Nullable StreamBackfillAllMysqlExcludedObjects mysqlExcludedObjects;

    private StreamBackfillAll() {}
    /**
     * @return MySQL data source objects to avoid backfilling.
     * Structure is documented below.
     * 
     */
    public Optional<StreamBackfillAllMysqlExcludedObjects> mysqlExcludedObjects() {
        return Optional.ofNullable(this.mysqlExcludedObjects);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamBackfillAll defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable StreamBackfillAllMysqlExcludedObjects mysqlExcludedObjects;
        public Builder() {}
        public Builder(StreamBackfillAll defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mysqlExcludedObjects = defaults.mysqlExcludedObjects;
        }

        @CustomType.Setter
        public Builder mysqlExcludedObjects(@Nullable StreamBackfillAllMysqlExcludedObjects mysqlExcludedObjects) {
            this.mysqlExcludedObjects = mysqlExcludedObjects;
            return this;
        }
        public StreamBackfillAll build() {
            final var o = new StreamBackfillAll();
            o.mysqlExcludedObjects = mysqlExcludedObjects;
            return o;
        }
    }
}
