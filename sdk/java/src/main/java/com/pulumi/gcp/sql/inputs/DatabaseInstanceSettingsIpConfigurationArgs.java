// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.sql.inputs.DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs;
import com.pulumi.gcp.sql.inputs.DatabaseInstanceSettingsIpConfigurationPscConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseInstanceSettingsIpConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceSettingsIpConfigurationArgs Empty = new DatabaseInstanceSettingsIpConfigurationArgs();

    /**
     * The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://datatracker.ietf.org/doc/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
     * 
     */
    @Import(name="allocatedIpRange")
    private @Nullable Output<String> allocatedIpRange;

    /**
     * @return The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://datatracker.ietf.org/doc/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
     * 
     */
    public Optional<Output<String>> allocatedIpRange() {
        return Optional.ofNullable(this.allocatedIpRange);
    }

    @Import(name="authorizedNetworks")
    private @Nullable Output<List<DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs>> authorizedNetworks;

    public Optional<Output<List<DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs>>> authorizedNetworks() {
        return Optional.ofNullable(this.authorizedNetworks);
    }

    /**
     * The custom subject alternative names for an instance with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`.
     * 
     */
    @Import(name="customSubjectAlternativeNames")
    private @Nullable Output<List<String>> customSubjectAlternativeNames;

    /**
     * @return The custom subject alternative names for an instance with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`.
     * 
     */
    public Optional<Output<List<String>>> customSubjectAlternativeNames() {
        return Optional.ofNullable(this.customSubjectAlternativeNames);
    }

    /**
     * Whether Google Cloud services such as BigQuery are allowed to access data in this Cloud SQL instance over a private IP connection. SQLSERVER database type is not supported.
     * 
     */
    @Import(name="enablePrivatePathForGoogleCloudServices")
    private @Nullable Output<Boolean> enablePrivatePathForGoogleCloudServices;

    /**
     * @return Whether Google Cloud services such as BigQuery are allowed to access data in this Cloud SQL instance over a private IP connection. SQLSERVER database type is not supported.
     * 
     */
    public Optional<Output<Boolean>> enablePrivatePathForGoogleCloudServices() {
        return Optional.ofNullable(this.enablePrivatePathForGoogleCloudServices);
    }

    /**
     * Whether this Cloud SQL instance should be assigned
     * a public IPV4 address. At least `ipv4_enabled` must be enabled or a
     * `private_network` must be configured.
     * 
     */
    @Import(name="ipv4Enabled")
    private @Nullable Output<Boolean> ipv4Enabled;

    /**
     * @return Whether this Cloud SQL instance should be assigned
     * a public IPV4 address. At least `ipv4_enabled` must be enabled or a
     * `private_network` must be configured.
     * 
     */
    public Optional<Output<Boolean>> ipv4Enabled() {
        return Optional.ofNullable(this.ipv4Enabled);
    }

    /**
     * The VPC network from which the Cloud SQL
     * instance is accessible for private IP. For example, projects/myProject/global/networks/default.
     * Specifying a network enables private IP.
     * At least `ipv4_enabled` must be enabled or a `private_network` must be configured.
     * This setting can be updated, but it cannot be removed after it is set.
     * 
     */
    @Import(name="privateNetwork")
    private @Nullable Output<String> privateNetwork;

    /**
     * @return The VPC network from which the Cloud SQL
     * instance is accessible for private IP. For example, projects/myProject/global/networks/default.
     * Specifying a network enables private IP.
     * At least `ipv4_enabled` must be enabled or a `private_network` must be configured.
     * This setting can be updated, but it cannot be removed after it is set.
     * 
     */
    public Optional<Output<String>> privateNetwork() {
        return Optional.ofNullable(this.privateNetwork);
    }

    /**
     * PSC settings for a Cloud SQL instance.
     * 
     */
    @Import(name="pscConfigs")
    private @Nullable Output<List<DatabaseInstanceSettingsIpConfigurationPscConfigArgs>> pscConfigs;

    /**
     * @return PSC settings for a Cloud SQL instance.
     * 
     */
    public Optional<Output<List<DatabaseInstanceSettingsIpConfigurationPscConfigArgs>>> pscConfigs() {
        return Optional.ofNullable(this.pscConfigs);
    }

    /**
     * Specify how the server certificate&#39;s Certificate Authority is hosted. Supported values are `GOOGLE_MANAGED_INTERNAL_CA` and `GOOGLE_MANAGED_CAS_CA`.
     * 
     */
    @Import(name="serverCaMode")
    private @Nullable Output<String> serverCaMode;

    /**
     * @return Specify how the server certificate&#39;s Certificate Authority is hosted. Supported values are `GOOGLE_MANAGED_INTERNAL_CA` and `GOOGLE_MANAGED_CAS_CA`.
     * 
     */
    public Optional<Output<String>> serverCaMode() {
        return Optional.ofNullable(this.serverCaMode);
    }

    /**
     * The resource name of the server CA pool for an instance with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`.
     * 
     */
    @Import(name="serverCaPool")
    private @Nullable Output<String> serverCaPool;

    /**
     * @return The resource name of the server CA pool for an instance with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`.
     * 
     */
    public Optional<Output<String>> serverCaPool() {
        return Optional.ofNullable(this.serverCaPool);
    }

    /**
     * Specify how SSL connection should be enforced in DB connections. Supported values are `ALLOW_UNENCRYPTED_AND_ENCRYPTED`, `ENCRYPTED_ONLY`, and `TRUSTED_CLIENT_CERTIFICATE_REQUIRED` (not supported for SQL Server). See [API reference doc](https://cloud.google.com/sql/docs/postgres/admin-api/rest/v1/instances#ipconfiguration) for details.
     * 
     */
    @Import(name="sslMode")
    private @Nullable Output<String> sslMode;

    /**
     * @return Specify how SSL connection should be enforced in DB connections. Supported values are `ALLOW_UNENCRYPTED_AND_ENCRYPTED`, `ENCRYPTED_ONLY`, and `TRUSTED_CLIENT_CERTIFICATE_REQUIRED` (not supported for SQL Server). See [API reference doc](https://cloud.google.com/sql/docs/postgres/admin-api/rest/v1/instances#ipconfiguration) for details.
     * 
     */
    public Optional<Output<String>> sslMode() {
        return Optional.ofNullable(this.sslMode);
    }

    private DatabaseInstanceSettingsIpConfigurationArgs() {}

    private DatabaseInstanceSettingsIpConfigurationArgs(DatabaseInstanceSettingsIpConfigurationArgs $) {
        this.allocatedIpRange = $.allocatedIpRange;
        this.authorizedNetworks = $.authorizedNetworks;
        this.customSubjectAlternativeNames = $.customSubjectAlternativeNames;
        this.enablePrivatePathForGoogleCloudServices = $.enablePrivatePathForGoogleCloudServices;
        this.ipv4Enabled = $.ipv4Enabled;
        this.privateNetwork = $.privateNetwork;
        this.pscConfigs = $.pscConfigs;
        this.serverCaMode = $.serverCaMode;
        this.serverCaPool = $.serverCaPool;
        this.sslMode = $.sslMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInstanceSettingsIpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInstanceSettingsIpConfigurationArgs $;

        public Builder() {
            $ = new DatabaseInstanceSettingsIpConfigurationArgs();
        }

        public Builder(DatabaseInstanceSettingsIpConfigurationArgs defaults) {
            $ = new DatabaseInstanceSettingsIpConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocatedIpRange The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://datatracker.ietf.org/doc/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
         * 
         * @return builder
         * 
         */
        public Builder allocatedIpRange(@Nullable Output<String> allocatedIpRange) {
            $.allocatedIpRange = allocatedIpRange;
            return this;
        }

        /**
         * @param allocatedIpRange The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://datatracker.ietf.org/doc/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
         * 
         * @return builder
         * 
         */
        public Builder allocatedIpRange(String allocatedIpRange) {
            return allocatedIpRange(Output.of(allocatedIpRange));
        }

        public Builder authorizedNetworks(@Nullable Output<List<DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs>> authorizedNetworks) {
            $.authorizedNetworks = authorizedNetworks;
            return this;
        }

        public Builder authorizedNetworks(List<DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs> authorizedNetworks) {
            return authorizedNetworks(Output.of(authorizedNetworks));
        }

        public Builder authorizedNetworks(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs... authorizedNetworks) {
            return authorizedNetworks(List.of(authorizedNetworks));
        }

        /**
         * @param customSubjectAlternativeNames The custom subject alternative names for an instance with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`.
         * 
         * @return builder
         * 
         */
        public Builder customSubjectAlternativeNames(@Nullable Output<List<String>> customSubjectAlternativeNames) {
            $.customSubjectAlternativeNames = customSubjectAlternativeNames;
            return this;
        }

        /**
         * @param customSubjectAlternativeNames The custom subject alternative names for an instance with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`.
         * 
         * @return builder
         * 
         */
        public Builder customSubjectAlternativeNames(List<String> customSubjectAlternativeNames) {
            return customSubjectAlternativeNames(Output.of(customSubjectAlternativeNames));
        }

        /**
         * @param customSubjectAlternativeNames The custom subject alternative names for an instance with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`.
         * 
         * @return builder
         * 
         */
        public Builder customSubjectAlternativeNames(String... customSubjectAlternativeNames) {
            return customSubjectAlternativeNames(List.of(customSubjectAlternativeNames));
        }

        /**
         * @param enablePrivatePathForGoogleCloudServices Whether Google Cloud services such as BigQuery are allowed to access data in this Cloud SQL instance over a private IP connection. SQLSERVER database type is not supported.
         * 
         * @return builder
         * 
         */
        public Builder enablePrivatePathForGoogleCloudServices(@Nullable Output<Boolean> enablePrivatePathForGoogleCloudServices) {
            $.enablePrivatePathForGoogleCloudServices = enablePrivatePathForGoogleCloudServices;
            return this;
        }

        /**
         * @param enablePrivatePathForGoogleCloudServices Whether Google Cloud services such as BigQuery are allowed to access data in this Cloud SQL instance over a private IP connection. SQLSERVER database type is not supported.
         * 
         * @return builder
         * 
         */
        public Builder enablePrivatePathForGoogleCloudServices(Boolean enablePrivatePathForGoogleCloudServices) {
            return enablePrivatePathForGoogleCloudServices(Output.of(enablePrivatePathForGoogleCloudServices));
        }

        /**
         * @param ipv4Enabled Whether this Cloud SQL instance should be assigned
         * a public IPV4 address. At least `ipv4_enabled` must be enabled or a
         * `private_network` must be configured.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Enabled(@Nullable Output<Boolean> ipv4Enabled) {
            $.ipv4Enabled = ipv4Enabled;
            return this;
        }

        /**
         * @param ipv4Enabled Whether this Cloud SQL instance should be assigned
         * a public IPV4 address. At least `ipv4_enabled` must be enabled or a
         * `private_network` must be configured.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Enabled(Boolean ipv4Enabled) {
            return ipv4Enabled(Output.of(ipv4Enabled));
        }

        /**
         * @param privateNetwork The VPC network from which the Cloud SQL
         * instance is accessible for private IP. For example, projects/myProject/global/networks/default.
         * Specifying a network enables private IP.
         * At least `ipv4_enabled` must be enabled or a `private_network` must be configured.
         * This setting can be updated, but it cannot be removed after it is set.
         * 
         * @return builder
         * 
         */
        public Builder privateNetwork(@Nullable Output<String> privateNetwork) {
            $.privateNetwork = privateNetwork;
            return this;
        }

        /**
         * @param privateNetwork The VPC network from which the Cloud SQL
         * instance is accessible for private IP. For example, projects/myProject/global/networks/default.
         * Specifying a network enables private IP.
         * At least `ipv4_enabled` must be enabled or a `private_network` must be configured.
         * This setting can be updated, but it cannot be removed after it is set.
         * 
         * @return builder
         * 
         */
        public Builder privateNetwork(String privateNetwork) {
            return privateNetwork(Output.of(privateNetwork));
        }

        /**
         * @param pscConfigs PSC settings for a Cloud SQL instance.
         * 
         * @return builder
         * 
         */
        public Builder pscConfigs(@Nullable Output<List<DatabaseInstanceSettingsIpConfigurationPscConfigArgs>> pscConfigs) {
            $.pscConfigs = pscConfigs;
            return this;
        }

        /**
         * @param pscConfigs PSC settings for a Cloud SQL instance.
         * 
         * @return builder
         * 
         */
        public Builder pscConfigs(List<DatabaseInstanceSettingsIpConfigurationPscConfigArgs> pscConfigs) {
            return pscConfigs(Output.of(pscConfigs));
        }

        /**
         * @param pscConfigs PSC settings for a Cloud SQL instance.
         * 
         * @return builder
         * 
         */
        public Builder pscConfigs(DatabaseInstanceSettingsIpConfigurationPscConfigArgs... pscConfigs) {
            return pscConfigs(List.of(pscConfigs));
        }

        /**
         * @param serverCaMode Specify how the server certificate&#39;s Certificate Authority is hosted. Supported values are `GOOGLE_MANAGED_INTERNAL_CA` and `GOOGLE_MANAGED_CAS_CA`.
         * 
         * @return builder
         * 
         */
        public Builder serverCaMode(@Nullable Output<String> serverCaMode) {
            $.serverCaMode = serverCaMode;
            return this;
        }

        /**
         * @param serverCaMode Specify how the server certificate&#39;s Certificate Authority is hosted. Supported values are `GOOGLE_MANAGED_INTERNAL_CA` and `GOOGLE_MANAGED_CAS_CA`.
         * 
         * @return builder
         * 
         */
        public Builder serverCaMode(String serverCaMode) {
            return serverCaMode(Output.of(serverCaMode));
        }

        /**
         * @param serverCaPool The resource name of the server CA pool for an instance with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`.
         * 
         * @return builder
         * 
         */
        public Builder serverCaPool(@Nullable Output<String> serverCaPool) {
            $.serverCaPool = serverCaPool;
            return this;
        }

        /**
         * @param serverCaPool The resource name of the server CA pool for an instance with `CUSTOMER_MANAGED_CAS_CA` as the `server_ca_mode`.
         * 
         * @return builder
         * 
         */
        public Builder serverCaPool(String serverCaPool) {
            return serverCaPool(Output.of(serverCaPool));
        }

        /**
         * @param sslMode Specify how SSL connection should be enforced in DB connections. Supported values are `ALLOW_UNENCRYPTED_AND_ENCRYPTED`, `ENCRYPTED_ONLY`, and `TRUSTED_CLIENT_CERTIFICATE_REQUIRED` (not supported for SQL Server). See [API reference doc](https://cloud.google.com/sql/docs/postgres/admin-api/rest/v1/instances#ipconfiguration) for details.
         * 
         * @return builder
         * 
         */
        public Builder sslMode(@Nullable Output<String> sslMode) {
            $.sslMode = sslMode;
            return this;
        }

        /**
         * @param sslMode Specify how SSL connection should be enforced in DB connections. Supported values are `ALLOW_UNENCRYPTED_AND_ENCRYPTED`, `ENCRYPTED_ONLY`, and `TRUSTED_CLIENT_CERTIFICATE_REQUIRED` (not supported for SQL Server). See [API reference doc](https://cloud.google.com/sql/docs/postgres/admin-api/rest/v1/instances#ipconfiguration) for details.
         * 
         * @return builder
         * 
         */
        public Builder sslMode(String sslMode) {
            return sslMode(Output.of(sslMode));
        }

        public DatabaseInstanceSettingsIpConfigurationArgs build() {
            return $;
        }
    }

}
