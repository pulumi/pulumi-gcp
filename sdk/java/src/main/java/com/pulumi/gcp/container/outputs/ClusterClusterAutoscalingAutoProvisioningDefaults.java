// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.ClusterClusterAutoscalingAutoProvisioningDefaultsManagement;
import com.pulumi.gcp.container.outputs.ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig;
import com.pulumi.gcp.container.outputs.ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterClusterAutoscalingAutoProvisioningDefaults {
    /**
     * @return The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
     * 
     */
    private @Nullable String bootDiskKmsKey;
    /**
     * @return Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. Defaults to `100`
     * 
     */
    private @Nullable Integer diskSize;
    /**
     * @return Type of the disk attached to each node (e.g. &#39;pd-standard&#39;, &#39;pd-ssd&#39; or &#39;pd-balanced&#39;). Defaults to `pd-standard`
     * 
     */
    private @Nullable String diskType;
    /**
     * @return The default image type used by NAP once a new node pool is being created. Please note that according to the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning#default-image-type) the value must be one of the [COS_CONTAINERD, COS, UBUNTU_CONTAINERD, UBUNTU]. __NOTE__ : COS AND UBUNTU are deprecated as of `GKE 1.24`
     * 
     */
    private @Nullable String imageType;
    /**
     * @return NodeManagement configuration for this NodePool. Structure is documented below.
     * 
     */
    private @Nullable ClusterClusterAutoscalingAutoProvisioningDefaultsManagement management;
    /**
     * @return Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the
     * specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such
     * as &#34;Intel Haswell&#34; or &#34;Intel Sandy Bridge&#34;.
     * 
     */
    private @Nullable String minCpuPlatform;
    /**
     * @return Scopes that are used by NAP and GKE Autopilot when creating node pools. Use the &#34;https://www.googleapis.com/auth/cloud-platform&#34; scope to grant access to all APIs. It is recommended that you set `service_account` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
     * 
     */
    private @Nullable List<String> oauthScopes;
    /**
     * @return The Google Cloud Platform Service Account to be used by the node VMs created by GKE Autopilot or NAP.
     * 
     */
    private @Nullable String serviceAccount;
    /**
     * @return Shielded Instance options. Structure is documented below.
     * 
     */
    private @Nullable ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig shieldedInstanceConfig;
    /**
     * @return Specifies the upgrade settings for NAP created node pools. Structure is documented below.
     * 
     */
    private @Nullable ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings upgradeSettings;

    private ClusterClusterAutoscalingAutoProvisioningDefaults() {}
    /**
     * @return The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
     * 
     */
    public Optional<String> bootDiskKmsKey() {
        return Optional.ofNullable(this.bootDiskKmsKey);
    }
    /**
     * @return Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. Defaults to `100`
     * 
     */
    public Optional<Integer> diskSize() {
        return Optional.ofNullable(this.diskSize);
    }
    /**
     * @return Type of the disk attached to each node (e.g. &#39;pd-standard&#39;, &#39;pd-ssd&#39; or &#39;pd-balanced&#39;). Defaults to `pd-standard`
     * 
     */
    public Optional<String> diskType() {
        return Optional.ofNullable(this.diskType);
    }
    /**
     * @return The default image type used by NAP once a new node pool is being created. Please note that according to the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning#default-image-type) the value must be one of the [COS_CONTAINERD, COS, UBUNTU_CONTAINERD, UBUNTU]. __NOTE__ : COS AND UBUNTU are deprecated as of `GKE 1.24`
     * 
     */
    public Optional<String> imageType() {
        return Optional.ofNullable(this.imageType);
    }
    /**
     * @return NodeManagement configuration for this NodePool. Structure is documented below.
     * 
     */
    public Optional<ClusterClusterAutoscalingAutoProvisioningDefaultsManagement> management() {
        return Optional.ofNullable(this.management);
    }
    /**
     * @return Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the
     * specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such
     * as &#34;Intel Haswell&#34; or &#34;Intel Sandy Bridge&#34;.
     * 
     */
    public Optional<String> minCpuPlatform() {
        return Optional.ofNullable(this.minCpuPlatform);
    }
    /**
     * @return Scopes that are used by NAP and GKE Autopilot when creating node pools. Use the &#34;https://www.googleapis.com/auth/cloud-platform&#34; scope to grant access to all APIs. It is recommended that you set `service_account` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
     * 
     */
    public List<String> oauthScopes() {
        return this.oauthScopes == null ? List.of() : this.oauthScopes;
    }
    /**
     * @return The Google Cloud Platform Service Account to be used by the node VMs created by GKE Autopilot or NAP.
     * 
     */
    public Optional<String> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }
    /**
     * @return Shielded Instance options. Structure is documented below.
     * 
     */
    public Optional<ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig> shieldedInstanceConfig() {
        return Optional.ofNullable(this.shieldedInstanceConfig);
    }
    /**
     * @return Specifies the upgrade settings for NAP created node pools. Structure is documented below.
     * 
     */
    public Optional<ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings> upgradeSettings() {
        return Optional.ofNullable(this.upgradeSettings);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterClusterAutoscalingAutoProvisioningDefaults defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bootDiskKmsKey;
        private @Nullable Integer diskSize;
        private @Nullable String diskType;
        private @Nullable String imageType;
        private @Nullable ClusterClusterAutoscalingAutoProvisioningDefaultsManagement management;
        private @Nullable String minCpuPlatform;
        private @Nullable List<String> oauthScopes;
        private @Nullable String serviceAccount;
        private @Nullable ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig shieldedInstanceConfig;
        private @Nullable ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings upgradeSettings;
        public Builder() {}
        public Builder(ClusterClusterAutoscalingAutoProvisioningDefaults defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootDiskKmsKey = defaults.bootDiskKmsKey;
    	      this.diskSize = defaults.diskSize;
    	      this.diskType = defaults.diskType;
    	      this.imageType = defaults.imageType;
    	      this.management = defaults.management;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.upgradeSettings = defaults.upgradeSettings;
        }

        @CustomType.Setter
        public Builder bootDiskKmsKey(@Nullable String bootDiskKmsKey) {
            this.bootDiskKmsKey = bootDiskKmsKey;
            return this;
        }
        @CustomType.Setter
        public Builder diskSize(@Nullable Integer diskSize) {
            this.diskSize = diskSize;
            return this;
        }
        @CustomType.Setter
        public Builder diskType(@Nullable String diskType) {
            this.diskType = diskType;
            return this;
        }
        @CustomType.Setter
        public Builder imageType(@Nullable String imageType) {
            this.imageType = imageType;
            return this;
        }
        @CustomType.Setter
        public Builder management(@Nullable ClusterClusterAutoscalingAutoProvisioningDefaultsManagement management) {
            this.management = management;
            return this;
        }
        @CustomType.Setter
        public Builder minCpuPlatform(@Nullable String minCpuPlatform) {
            this.minCpuPlatform = minCpuPlatform;
            return this;
        }
        @CustomType.Setter
        public Builder oauthScopes(@Nullable List<String> oauthScopes) {
            this.oauthScopes = oauthScopes;
            return this;
        }
        public Builder oauthScopes(String... oauthScopes) {
            return oauthScopes(List.of(oauthScopes));
        }
        @CustomType.Setter
        public Builder serviceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder shieldedInstanceConfig(@Nullable ClusterClusterAutoscalingAutoProvisioningDefaultsShieldedInstanceConfig shieldedInstanceConfig) {
            this.shieldedInstanceConfig = shieldedInstanceConfig;
            return this;
        }
        @CustomType.Setter
        public Builder upgradeSettings(@Nullable ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettings upgradeSettings) {
            this.upgradeSettings = upgradeSettings;
            return this;
        }
        public ClusterClusterAutoscalingAutoProvisioningDefaults build() {
            final var o = new ClusterClusterAutoscalingAutoProvisioningDefaults();
            o.bootDiskKmsKey = bootDiskKmsKey;
            o.diskSize = diskSize;
            o.diskType = diskType;
            o.imageType = imageType;
            o.management = management;
            o.minCpuPlatform = minCpuPlatform;
            o.oauthScopes = oauthScopes;
            o.serviceAccount = serviceAccount;
            o.shieldedInstanceConfig = shieldedInstanceConfig;
            o.upgradeSettings = upgradeSettings;
            return o;
        }
    }
}
