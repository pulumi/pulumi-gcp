// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GcpUserAccessBindingSessionSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GcpUserAccessBindingSessionSettingsArgs Empty = new GcpUserAccessBindingSessionSettingsArgs();

    /**
     * Optional. How long a user is allowed to take between actions before a new access token must be issued. Only set for Google Cloud apps.
     * 
     */
    @Import(name="maxInactivity")
    private @Nullable Output<String> maxInactivity;

    /**
     * @return Optional. How long a user is allowed to take between actions before a new access token must be issued. Only set for Google Cloud apps.
     * 
     */
    public Optional<Output<String>> maxInactivity() {
        return Optional.ofNullable(this.maxInactivity);
    }

    /**
     * Optional. The session length. Setting this field to zero is equal to disabling session. Also can set infinite session by flipping the enabled bit to false below. If useOidcMaxAge is true, for OIDC apps, the session length will be the minimum of this field and OIDC max_age param.
     * 
     */
    @Import(name="sessionLength")
    private @Nullable Output<String> sessionLength;

    /**
     * @return Optional. The session length. Setting this field to zero is equal to disabling session. Also can set infinite session by flipping the enabled bit to false below. If useOidcMaxAge is true, for OIDC apps, the session length will be the minimum of this field and OIDC max_age param.
     * 
     */
    public Optional<Output<String>> sessionLength() {
        return Optional.ofNullable(this.sessionLength);
    }

    /**
     * Optional. This field enables or disables Google Cloud session length. When false, all fields set above will be disregarded and the session length is basically infinite.
     * 
     */
    @Import(name="sessionLengthEnabled")
    private @Nullable Output<Boolean> sessionLengthEnabled;

    /**
     * @return Optional. This field enables or disables Google Cloud session length. When false, all fields set above will be disregarded and the session length is basically infinite.
     * 
     */
    public Optional<Output<Boolean>> sessionLengthEnabled() {
        return Optional.ofNullable(this.sessionLengthEnabled);
    }

    /**
     * Optional. The session challenges proposed to users when the Google Cloud session length is up.
     * Possible values are: `LOGIN`, `SECURITY_KEY`, `PASSWORD`.
     * 
     */
    @Import(name="sessionReauthMethod")
    private @Nullable Output<String> sessionReauthMethod;

    /**
     * @return Optional. The session challenges proposed to users when the Google Cloud session length is up.
     * Possible values are: `LOGIN`, `SECURITY_KEY`, `PASSWORD`.
     * 
     */
    public Optional<Output<String>> sessionReauthMethod() {
        return Optional.ofNullable(this.sessionReauthMethod);
    }

    /**
     * Optional. Only useful for OIDC apps. When false, the OIDC max_age param, if passed in the authentication request will be ignored. When true, the re-auth period will be the minimum of the sessionLength field and the max_age OIDC param.
     * 
     */
    @Import(name="useOidcMaxAge")
    private @Nullable Output<Boolean> useOidcMaxAge;

    /**
     * @return Optional. Only useful for OIDC apps. When false, the OIDC max_age param, if passed in the authentication request will be ignored. When true, the re-auth period will be the minimum of the sessionLength field and the max_age OIDC param.
     * 
     */
    public Optional<Output<Boolean>> useOidcMaxAge() {
        return Optional.ofNullable(this.useOidcMaxAge);
    }

    private GcpUserAccessBindingSessionSettingsArgs() {}

    private GcpUserAccessBindingSessionSettingsArgs(GcpUserAccessBindingSessionSettingsArgs $) {
        this.maxInactivity = $.maxInactivity;
        this.sessionLength = $.sessionLength;
        this.sessionLengthEnabled = $.sessionLengthEnabled;
        this.sessionReauthMethod = $.sessionReauthMethod;
        this.useOidcMaxAge = $.useOidcMaxAge;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GcpUserAccessBindingSessionSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GcpUserAccessBindingSessionSettingsArgs $;

        public Builder() {
            $ = new GcpUserAccessBindingSessionSettingsArgs();
        }

        public Builder(GcpUserAccessBindingSessionSettingsArgs defaults) {
            $ = new GcpUserAccessBindingSessionSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxInactivity Optional. How long a user is allowed to take between actions before a new access token must be issued. Only set for Google Cloud apps.
         * 
         * @return builder
         * 
         */
        public Builder maxInactivity(@Nullable Output<String> maxInactivity) {
            $.maxInactivity = maxInactivity;
            return this;
        }

        /**
         * @param maxInactivity Optional. How long a user is allowed to take between actions before a new access token must be issued. Only set for Google Cloud apps.
         * 
         * @return builder
         * 
         */
        public Builder maxInactivity(String maxInactivity) {
            return maxInactivity(Output.of(maxInactivity));
        }

        /**
         * @param sessionLength Optional. The session length. Setting this field to zero is equal to disabling session. Also can set infinite session by flipping the enabled bit to false below. If useOidcMaxAge is true, for OIDC apps, the session length will be the minimum of this field and OIDC max_age param.
         * 
         * @return builder
         * 
         */
        public Builder sessionLength(@Nullable Output<String> sessionLength) {
            $.sessionLength = sessionLength;
            return this;
        }

        /**
         * @param sessionLength Optional. The session length. Setting this field to zero is equal to disabling session. Also can set infinite session by flipping the enabled bit to false below. If useOidcMaxAge is true, for OIDC apps, the session length will be the minimum of this field and OIDC max_age param.
         * 
         * @return builder
         * 
         */
        public Builder sessionLength(String sessionLength) {
            return sessionLength(Output.of(sessionLength));
        }

        /**
         * @param sessionLengthEnabled Optional. This field enables or disables Google Cloud session length. When false, all fields set above will be disregarded and the session length is basically infinite.
         * 
         * @return builder
         * 
         */
        public Builder sessionLengthEnabled(@Nullable Output<Boolean> sessionLengthEnabled) {
            $.sessionLengthEnabled = sessionLengthEnabled;
            return this;
        }

        /**
         * @param sessionLengthEnabled Optional. This field enables or disables Google Cloud session length. When false, all fields set above will be disregarded and the session length is basically infinite.
         * 
         * @return builder
         * 
         */
        public Builder sessionLengthEnabled(Boolean sessionLengthEnabled) {
            return sessionLengthEnabled(Output.of(sessionLengthEnabled));
        }

        /**
         * @param sessionReauthMethod Optional. The session challenges proposed to users when the Google Cloud session length is up.
         * Possible values are: `LOGIN`, `SECURITY_KEY`, `PASSWORD`.
         * 
         * @return builder
         * 
         */
        public Builder sessionReauthMethod(@Nullable Output<String> sessionReauthMethod) {
            $.sessionReauthMethod = sessionReauthMethod;
            return this;
        }

        /**
         * @param sessionReauthMethod Optional. The session challenges proposed to users when the Google Cloud session length is up.
         * Possible values are: `LOGIN`, `SECURITY_KEY`, `PASSWORD`.
         * 
         * @return builder
         * 
         */
        public Builder sessionReauthMethod(String sessionReauthMethod) {
            return sessionReauthMethod(Output.of(sessionReauthMethod));
        }

        /**
         * @param useOidcMaxAge Optional. Only useful for OIDC apps. When false, the OIDC max_age param, if passed in the authentication request will be ignored. When true, the re-auth period will be the minimum of the sessionLength field and the max_age OIDC param.
         * 
         * @return builder
         * 
         */
        public Builder useOidcMaxAge(@Nullable Output<Boolean> useOidcMaxAge) {
            $.useOidcMaxAge = useOidcMaxAge;
            return this;
        }

        /**
         * @param useOidcMaxAge Optional. Only useful for OIDC apps. When false, the OIDC max_age param, if passed in the authentication request will be ignored. When true, the re-auth period will be the minimum of the sessionLength field and the max_age OIDC param.
         * 
         * @return builder
         * 
         */
        public Builder useOidcMaxAge(Boolean useOidcMaxAge) {
            return useOidcMaxAge(Output.of(useOidcMaxAge));
        }

        public GcpUserAccessBindingSessionSettingsArgs build() {
            return $;
        }
    }

}
