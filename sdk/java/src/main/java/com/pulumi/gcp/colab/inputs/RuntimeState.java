// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.colab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.colab.inputs.RuntimeNotebookRuntimeTemplateRefArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuntimeState extends com.pulumi.resources.ResourceArgs {

    public static final RuntimeState Empty = new RuntimeState();

    /**
     * The description of the Runtime.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Runtime.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Required. The display name of the Runtime.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Required. The display name of the Runtime.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The location for the resource: https://cloud.google.com/colab/docs/locations
     * 
     * ***
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location for the resource: https://cloud.google.com/colab/docs/locations
     * 
     * ***
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The resource name of the Runtime
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of the Runtime
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * &#39;Runtime specific information used for NotebookRuntime creation.&#39;
     * Structure is documented below.
     * 
     */
    @Import(name="notebookRuntimeTemplateRef")
    private @Nullable Output<RuntimeNotebookRuntimeTemplateRefArgs> notebookRuntimeTemplateRef;

    /**
     * @return &#39;Runtime specific information used for NotebookRuntime creation.&#39;
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuntimeNotebookRuntimeTemplateRefArgs>> notebookRuntimeTemplateRef() {
        return Optional.ofNullable(this.notebookRuntimeTemplateRef);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The user email of the NotebookRuntime.
     * 
     */
    @Import(name="runtimeUser")
    private @Nullable Output<String> runtimeUser;

    /**
     * @return The user email of the NotebookRuntime.
     * 
     */
    public Optional<Output<String>> runtimeUser() {
        return Optional.ofNullable(this.runtimeUser);
    }

    private RuntimeState() {}

    private RuntimeState(RuntimeState $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.location = $.location;
        this.name = $.name;
        this.notebookRuntimeTemplateRef = $.notebookRuntimeTemplateRef;
        this.project = $.project;
        this.runtimeUser = $.runtimeUser;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuntimeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuntimeState $;

        public Builder() {
            $ = new RuntimeState();
        }

        public Builder(RuntimeState defaults) {
            $ = new RuntimeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the Runtime.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Runtime.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Required. The display name of the Runtime.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Required. The display name of the Runtime.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param location The location for the resource: https://cloud.google.com/colab/docs/locations
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location for the resource: https://cloud.google.com/colab/docs/locations
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The resource name of the Runtime
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of the Runtime
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param notebookRuntimeTemplateRef &#39;Runtime specific information used for NotebookRuntime creation.&#39;
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder notebookRuntimeTemplateRef(@Nullable Output<RuntimeNotebookRuntimeTemplateRefArgs> notebookRuntimeTemplateRef) {
            $.notebookRuntimeTemplateRef = notebookRuntimeTemplateRef;
            return this;
        }

        /**
         * @param notebookRuntimeTemplateRef &#39;Runtime specific information used for NotebookRuntime creation.&#39;
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder notebookRuntimeTemplateRef(RuntimeNotebookRuntimeTemplateRefArgs notebookRuntimeTemplateRef) {
            return notebookRuntimeTemplateRef(Output.of(notebookRuntimeTemplateRef));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param runtimeUser The user email of the NotebookRuntime.
         * 
         * @return builder
         * 
         */
        public Builder runtimeUser(@Nullable Output<String> runtimeUser) {
            $.runtimeUser = runtimeUser;
            return this;
        }

        /**
         * @param runtimeUser The user email of the NotebookRuntime.
         * 
         * @return builder
         * 
         */
        public Builder runtimeUser(String runtimeUser) {
            return runtimeUser(Output.of(runtimeUser));
        }

        public RuntimeState build() {
            return $;
        }
    }

}
