// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigMfaProviderConfigTotpProviderConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigMfaProviderConfigTotpProviderConfigArgs Empty = new ConfigMfaProviderConfigTotpProviderConfigArgs();

    /**
     * The allowed number of adjacent intervals that will be used for verification to avoid clock skew.
     * 
     */
    @Import(name="adjacentIntervals")
    private @Nullable Output<Integer> adjacentIntervals;

    /**
     * @return The allowed number of adjacent intervals that will be used for verification to avoid clock skew.
     * 
     */
    public Optional<Output<Integer>> adjacentIntervals() {
        return Optional.ofNullable(this.adjacentIntervals);
    }

    private ConfigMfaProviderConfigTotpProviderConfigArgs() {}

    private ConfigMfaProviderConfigTotpProviderConfigArgs(ConfigMfaProviderConfigTotpProviderConfigArgs $) {
        this.adjacentIntervals = $.adjacentIntervals;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigMfaProviderConfigTotpProviderConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigMfaProviderConfigTotpProviderConfigArgs $;

        public Builder() {
            $ = new ConfigMfaProviderConfigTotpProviderConfigArgs();
        }

        public Builder(ConfigMfaProviderConfigTotpProviderConfigArgs defaults) {
            $ = new ConfigMfaProviderConfigTotpProviderConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adjacentIntervals The allowed number of adjacent intervals that will be used for verification to avoid clock skew.
         * 
         * @return builder
         * 
         */
        public Builder adjacentIntervals(@Nullable Output<Integer> adjacentIntervals) {
            $.adjacentIntervals = adjacentIntervals;
            return this;
        }

        /**
         * @param adjacentIntervals The allowed number of adjacent intervals that will be used for verification to avoid clock skew.
         * 
         * @return builder
         * 
         */
        public Builder adjacentIntervals(Integer adjacentIntervals) {
            return adjacentIntervals(Output.of(adjacentIntervals));
        }

        public ConfigMfaProviderConfigTotpProviderConfigArgs build() {
            return $;
        }
    }

}
