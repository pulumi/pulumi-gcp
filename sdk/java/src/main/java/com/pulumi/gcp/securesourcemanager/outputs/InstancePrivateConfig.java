// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securesourcemanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstancePrivateConfig {
    /**
     * @return CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
     * 
     */
    private @Nullable String caPool;
    /**
     * @return (Output)
     * Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
     * 
     */
    private @Nullable String httpServiceAttachment;
    /**
     * @return &#39;Indicate if it&#39;s private instance.&#39;
     * 
     */
    private Boolean isPrivate;
    /**
     * @return (Output)
     * Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
     * 
     */
    private @Nullable String sshServiceAttachment;

    private InstancePrivateConfig() {}
    /**
     * @return CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
     * 
     */
    public Optional<String> caPool() {
        return Optional.ofNullable(this.caPool);
    }
    /**
     * @return (Output)
     * Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
     * 
     */
    public Optional<String> httpServiceAttachment() {
        return Optional.ofNullable(this.httpServiceAttachment);
    }
    /**
     * @return &#39;Indicate if it&#39;s private instance.&#39;
     * 
     */
    public Boolean isPrivate() {
        return this.isPrivate;
    }
    /**
     * @return (Output)
     * Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
     * 
     */
    public Optional<String> sshServiceAttachment() {
        return Optional.ofNullable(this.sshServiceAttachment);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstancePrivateConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String caPool;
        private @Nullable String httpServiceAttachment;
        private Boolean isPrivate;
        private @Nullable String sshServiceAttachment;
        public Builder() {}
        public Builder(InstancePrivateConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caPool = defaults.caPool;
    	      this.httpServiceAttachment = defaults.httpServiceAttachment;
    	      this.isPrivate = defaults.isPrivate;
    	      this.sshServiceAttachment = defaults.sshServiceAttachment;
        }

        @CustomType.Setter
        public Builder caPool(@Nullable String caPool) {

            this.caPool = caPool;
            return this;
        }
        @CustomType.Setter
        public Builder httpServiceAttachment(@Nullable String httpServiceAttachment) {

            this.httpServiceAttachment = httpServiceAttachment;
            return this;
        }
        @CustomType.Setter
        public Builder isPrivate(Boolean isPrivate) {
            if (isPrivate == null) {
              throw new MissingRequiredPropertyException("InstancePrivateConfig", "isPrivate");
            }
            this.isPrivate = isPrivate;
            return this;
        }
        @CustomType.Setter
        public Builder sshServiceAttachment(@Nullable String sshServiceAttachment) {

            this.sshServiceAttachment = sshServiceAttachment;
            return this;
        }
        public InstancePrivateConfig build() {
            final var _resultValue = new InstancePrivateConfig();
            _resultValue.caPool = caPool;
            _resultValue.httpServiceAttachment = httpServiceAttachment;
            _resultValue.isPrivate = isPrivate;
            _resultValue.sshServiceAttachment = sshServiceAttachment;
            return _resultValue;
        }
    }
}
