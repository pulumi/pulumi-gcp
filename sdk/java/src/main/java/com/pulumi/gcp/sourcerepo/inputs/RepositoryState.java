// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sourcerepo.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.sourcerepo.inputs.RepositoryPubsubConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryState extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryState Empty = new RepositoryState();

    /**
     * Resource name of the repository, of the form `{{repo}}`.
     * The repo name may contain slashes. eg, `name/with/slash`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Resource name of the repository, of the form `{{repo}}`.
     * The repo name may contain slashes. eg, `name/with/slash`
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * How this repository publishes a change in the repository through Cloud Pub/Sub.
     * Keyed by the topic names.
     * Structure is documented below.
     * 
     */
    @Import(name="pubsubConfigs")
    private @Nullable Output<List<RepositoryPubsubConfigArgs>> pubsubConfigs;

    /**
     * @return How this repository publishes a change in the repository through Cloud Pub/Sub.
     * Keyed by the topic names.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RepositoryPubsubConfigArgs>>> pubsubConfigs() {
        return Optional.ofNullable(this.pubsubConfigs);
    }

    /**
     * The disk usage of the repo, in bytes.
     * 
     */
    @Import(name="size")
    private @Nullable Output<Integer> size;

    /**
     * @return The disk usage of the repo, in bytes.
     * 
     */
    public Optional<Output<Integer>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * URL to clone the repository from Google Cloud Source Repositories.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return URL to clone the repository from Google Cloud Source Repositories.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private RepositoryState() {}

    private RepositoryState(RepositoryState $) {
        this.name = $.name;
        this.project = $.project;
        this.pubsubConfigs = $.pubsubConfigs;
        this.size = $.size;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryState $;

        public Builder() {
            $ = new RepositoryState();
        }

        public Builder(RepositoryState defaults) {
            $ = new RepositoryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Resource name of the repository, of the form `{{repo}}`.
         * The repo name may contain slashes. eg, `name/with/slash`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Resource name of the repository, of the form `{{repo}}`.
         * The repo name may contain slashes. eg, `name/with/slash`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pubsubConfigs How this repository publishes a change in the repository through Cloud Pub/Sub.
         * Keyed by the topic names.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pubsubConfigs(@Nullable Output<List<RepositoryPubsubConfigArgs>> pubsubConfigs) {
            $.pubsubConfigs = pubsubConfigs;
            return this;
        }

        /**
         * @param pubsubConfigs How this repository publishes a change in the repository through Cloud Pub/Sub.
         * Keyed by the topic names.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pubsubConfigs(List<RepositoryPubsubConfigArgs> pubsubConfigs) {
            return pubsubConfigs(Output.of(pubsubConfigs));
        }

        /**
         * @param pubsubConfigs How this repository publishes a change in the repository through Cloud Pub/Sub.
         * Keyed by the topic names.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pubsubConfigs(RepositoryPubsubConfigArgs... pubsubConfigs) {
            return pubsubConfigs(List.of(pubsubConfigs));
        }

        /**
         * @param size The disk usage of the repo, in bytes.
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size The disk usage of the repo, in bytes.
         * 
         * @return builder
         * 
         */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        /**
         * @param url URL to clone the repository from Google Cloud Source Repositories.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url URL to clone the repository from Google Cloud Source Repositories.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public RepositoryState build() {
            return $;
        }
    }

}
