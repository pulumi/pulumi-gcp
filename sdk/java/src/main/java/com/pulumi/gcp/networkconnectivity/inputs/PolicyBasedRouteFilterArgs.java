// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyBasedRouteFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyBasedRouteFilterArgs Empty = new PolicyBasedRouteFilterArgs();

    /**
     * The destination IP range of outgoing packets that this policy-based route applies to. Default is &#34;0.0.0.0/0&#34;.
     * 
     */
    @Import(name="destRange")
    private @Nullable Output<String> destRange;

    /**
     * @return The destination IP range of outgoing packets that this policy-based route applies to. Default is &#34;0.0.0.0/0&#34;.
     * 
     */
    public Optional<Output<String>> destRange() {
        return Optional.ofNullable(this.destRange);
    }

    /**
     * The IP protocol that this policy-based route applies to. Valid values are &#39;TCP&#39;, &#39;UDP&#39;, and &#39;ALL&#39;. Default is &#39;ALL&#39;.
     * 
     */
    @Import(name="ipProtocol")
    private @Nullable Output<String> ipProtocol;

    /**
     * @return The IP protocol that this policy-based route applies to. Valid values are &#39;TCP&#39;, &#39;UDP&#39;, and &#39;ALL&#39;. Default is &#39;ALL&#39;.
     * 
     */
    public Optional<Output<String>> ipProtocol() {
        return Optional.ofNullable(this.ipProtocol);
    }

    /**
     * Internet protocol versions this policy-based route applies to.
     * Possible values are: `IPV4`, `IPV6`.
     * 
     */
    @Import(name="protocolVersion", required=true)
    private Output<String> protocolVersion;

    /**
     * @return Internet protocol versions this policy-based route applies to.
     * Possible values are: `IPV4`, `IPV6`.
     * 
     */
    public Output<String> protocolVersion() {
        return this.protocolVersion;
    }

    /**
     * The source IP range of outgoing packets that this policy-based route applies to. Default is &#34;0.0.0.0/0&#34;.
     * 
     */
    @Import(name="srcRange")
    private @Nullable Output<String> srcRange;

    /**
     * @return The source IP range of outgoing packets that this policy-based route applies to. Default is &#34;0.0.0.0/0&#34;.
     * 
     */
    public Optional<Output<String>> srcRange() {
        return Optional.ofNullable(this.srcRange);
    }

    private PolicyBasedRouteFilterArgs() {}

    private PolicyBasedRouteFilterArgs(PolicyBasedRouteFilterArgs $) {
        this.destRange = $.destRange;
        this.ipProtocol = $.ipProtocol;
        this.protocolVersion = $.protocolVersion;
        this.srcRange = $.srcRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyBasedRouteFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyBasedRouteFilterArgs $;

        public Builder() {
            $ = new PolicyBasedRouteFilterArgs();
        }

        public Builder(PolicyBasedRouteFilterArgs defaults) {
            $ = new PolicyBasedRouteFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destRange The destination IP range of outgoing packets that this policy-based route applies to. Default is &#34;0.0.0.0/0&#34;.
         * 
         * @return builder
         * 
         */
        public Builder destRange(@Nullable Output<String> destRange) {
            $.destRange = destRange;
            return this;
        }

        /**
         * @param destRange The destination IP range of outgoing packets that this policy-based route applies to. Default is &#34;0.0.0.0/0&#34;.
         * 
         * @return builder
         * 
         */
        public Builder destRange(String destRange) {
            return destRange(Output.of(destRange));
        }

        /**
         * @param ipProtocol The IP protocol that this policy-based route applies to. Valid values are &#39;TCP&#39;, &#39;UDP&#39;, and &#39;ALL&#39;. Default is &#39;ALL&#39;.
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(@Nullable Output<String> ipProtocol) {
            $.ipProtocol = ipProtocol;
            return this;
        }

        /**
         * @param ipProtocol The IP protocol that this policy-based route applies to. Valid values are &#39;TCP&#39;, &#39;UDP&#39;, and &#39;ALL&#39;. Default is &#39;ALL&#39;.
         * 
         * @return builder
         * 
         */
        public Builder ipProtocol(String ipProtocol) {
            return ipProtocol(Output.of(ipProtocol));
        }

        /**
         * @param protocolVersion Internet protocol versions this policy-based route applies to.
         * Possible values are: `IPV4`, `IPV6`.
         * 
         * @return builder
         * 
         */
        public Builder protocolVersion(Output<String> protocolVersion) {
            $.protocolVersion = protocolVersion;
            return this;
        }

        /**
         * @param protocolVersion Internet protocol versions this policy-based route applies to.
         * Possible values are: `IPV4`, `IPV6`.
         * 
         * @return builder
         * 
         */
        public Builder protocolVersion(String protocolVersion) {
            return protocolVersion(Output.of(protocolVersion));
        }

        /**
         * @param srcRange The source IP range of outgoing packets that this policy-based route applies to. Default is &#34;0.0.0.0/0&#34;.
         * 
         * @return builder
         * 
         */
        public Builder srcRange(@Nullable Output<String> srcRange) {
            $.srcRange = srcRange;
            return this;
        }

        /**
         * @param srcRange The source IP range of outgoing packets that this policy-based route applies to. Default is &#34;0.0.0.0/0&#34;.
         * 
         * @return builder
         * 
         */
        public Builder srcRange(String srcRange) {
            return srcRange(Output.of(srcRange));
        }

        public PolicyBasedRouteFilterArgs build() {
            if ($.protocolVersion == null) {
                throw new MissingRequiredPropertyException("PolicyBasedRouteFilterArgs", "protocolVersion");
            }
            return $;
        }
    }

}
