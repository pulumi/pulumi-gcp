// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.discoveryengine.RecommendationEngineArgs;
import com.pulumi.gcp.discoveryengine.inputs.RecommendationEngineState;
import com.pulumi.gcp.discoveryengine.outputs.RecommendationEngineCommonConfig;
import com.pulumi.gcp.discoveryengine.outputs.RecommendationEngineMediaRecommendationEngineConfig;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Vertex AI Search recommendation apps.
 * 
 * To get more information about RecommendationEngine, see:
 * 
 * * [API documentation](https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.collections.engines)
 * * How-to Guides
 *     * [Create a Recommendation Engine](https://cloud.google.com/generative-ai-app-builder/docs/create-generic-recommendations-app)
 * 
 * ## Example Usage
 * 
 * ### Discoveryengine Recommendationengine Generic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.discoveryengine.DataStore;
 * import com.pulumi.gcp.discoveryengine.DataStoreArgs;
 * import com.pulumi.gcp.discoveryengine.RecommendationEngine;
 * import com.pulumi.gcp.discoveryengine.RecommendationEngineArgs;
 * import com.pulumi.gcp.discoveryengine.inputs.RecommendationEngineCommonConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var generic = new DataStore("generic", DataStoreArgs.builder()
 *             .location("global")
 *             .dataStoreId("recommendation-datastore-id")
 *             .displayName("tf-test-structured-datastore")
 *             .industryVertical("GENERIC")
 *             .contentConfig("NO_CONTENT")
 *             .solutionTypes("SOLUTION_TYPE_RECOMMENDATION")
 *             .createAdvancedSiteSearch(false)
 *             .skipDefaultSchemaCreation(false)
 *             .build());
 * 
 *         var genericRecommendationEngine = new RecommendationEngine("genericRecommendationEngine", RecommendationEngineArgs.builder()
 *             .engineId("recommendation-engine-id")
 *             .location(generic.location())
 *             .displayName("Example Recommendation Engine")
 *             .dataStoreIds(generic.dataStoreId())
 *             .industryVertical("GENERIC")
 *             .commonConfig(RecommendationEngineCommonConfigArgs.builder()
 *                 .companyName("test-company")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Discoveryengine Recommendationengine Media
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.discoveryengine.DataStore;
 * import com.pulumi.gcp.discoveryengine.DataStoreArgs;
 * import com.pulumi.gcp.discoveryengine.RecommendationEngine;
 * import com.pulumi.gcp.discoveryengine.RecommendationEngineArgs;
 * import com.pulumi.gcp.discoveryengine.inputs.RecommendationEngineMediaRecommendationEngineConfigArgs;
 * import com.pulumi.gcp.discoveryengine.inputs.RecommendationEngineMediaRecommendationEngineConfigEngineFeaturesConfigArgs;
 * import com.pulumi.gcp.discoveryengine.inputs.RecommendationEngineMediaRecommendationEngineConfigEngineFeaturesConfigRecommendedForYouConfigArgs;
 * import com.pulumi.gcp.discoveryengine.inputs.RecommendationEngineCommonConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var media = new DataStore("media", DataStoreArgs.builder()
 *             .location("global")
 *             .dataStoreId("recommendation-datastore-id")
 *             .displayName("tf-test-structured-datastore")
 *             .industryVertical("MEDIA")
 *             .contentConfig("NO_CONTENT")
 *             .solutionTypes("SOLUTION_TYPE_RECOMMENDATION")
 *             .createAdvancedSiteSearch(false)
 *             .skipDefaultSchemaCreation(false)
 *             .build());
 * 
 *         var mediaRecommendationEngine = new RecommendationEngine("mediaRecommendationEngine", RecommendationEngineArgs.builder()
 *             .engineId("recommendation-engine-id")
 *             .location(media.location())
 *             .displayName("Example Media Recommendation Engine")
 *             .dataStoreIds(media.dataStoreId())
 *             .industryVertical("MEDIA")
 *             .mediaRecommendationEngineConfig(RecommendationEngineMediaRecommendationEngineConfigArgs.builder()
 *                 .type("recommended-for-you")
 *                 .optimizationObjective("ctr")
 *                 .trainingState("PAUSED")
 *                 .engineFeaturesConfig(RecommendationEngineMediaRecommendationEngineConfigEngineFeaturesConfigArgs.builder()
 *                     .recommendedForYouConfig(RecommendationEngineMediaRecommendationEngineConfigEngineFeaturesConfigRecommendedForYouConfigArgs.builder()
 *                         .contextEventType("generic")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .commonConfig(RecommendationEngineCommonConfigArgs.builder()
 *                 .companyName("test-company")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * RecommendationEngine can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/collections/default_collection/engines/{{engine_id}}`
 * 
 * * `{{project}}/{{location}}/{{engine_id}}`
 * 
 * * `{{location}}/{{engine_id}}`
 * 
 * When using the `pulumi import` command, RecommendationEngine can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/recommendationEngine:RecommendationEngine default projects/{{project}}/locations/{{location}}/collections/default_collection/engines/{{engine_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/recommendationEngine:RecommendationEngine default {{project}}/{{location}}/{{engine_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/recommendationEngine:RecommendationEngine default {{location}}/{{engine_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:discoveryengine/recommendationEngine:RecommendationEngine")
public class RecommendationEngine extends com.pulumi.resources.CustomResource {
    /**
     * Common config spec that specifies the metadata of the engine.
     * Structure is documented below.
     * 
     */
    @Export(name="commonConfig", refs={RecommendationEngineCommonConfig.class}, tree="[0]")
    private Output</* @Nullable */ RecommendationEngineCommonConfig> commonConfig;

    /**
     * @return Common config spec that specifies the metadata of the engine.
     * Structure is documented below.
     * 
     */
    public Output<Optional<RecommendationEngineCommonConfig>> commonConfig() {
        return Codegen.optional(this.commonConfig);
    }
    /**
     * Timestamp the Engine was created at.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Timestamp the Engine was created at.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The data stores associated with this engine. For SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store.
     * 
     */
    @Export(name="dataStoreIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> dataStoreIds;

    /**
     * @return The data stores associated with this engine. For SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store.
     * 
     */
    public Output<List<String>> dataStoreIds() {
        return this.dataStoreIds;
    }
    /**
     * Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Unique ID to use for Recommendation Engine.
     * 
     */
    @Export(name="engineId", refs={String.class}, tree="[0]")
    private Output<String> engineId;

    /**
     * @return Unique ID to use for Recommendation Engine.
     * 
     */
    public Output<String> engineId() {
        return this.engineId;
    }
    /**
     * The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to GENERIC. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
     * Default value is `GENERIC`.
     * Possible values are: `GENERIC`, `MEDIA`.
     * 
     */
    @Export(name="industryVertical", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> industryVertical;

    /**
     * @return The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to GENERIC. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
     * Default value is `GENERIC`.
     * Possible values are: `GENERIC`, `MEDIA`.
     * 
     */
    public Output<Optional<String>> industryVertical() {
        return Codegen.optional(this.industryVertical);
    }
    /**
     * The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Configurations for a Media Recommendation Engine. Only applicable on the data stores
     * with SOLUTION_TYPE_RECOMMENDATION solution type and MEDIA industry vertical.
     * Structure is documented below.
     * 
     */
    @Export(name="mediaRecommendationEngineConfig", refs={RecommendationEngineMediaRecommendationEngineConfig.class}, tree="[0]")
    private Output</* @Nullable */ RecommendationEngineMediaRecommendationEngineConfig> mediaRecommendationEngineConfig;

    /**
     * @return Configurations for a Media Recommendation Engine. Only applicable on the data stores
     * with SOLUTION_TYPE_RECOMMENDATION solution type and MEDIA industry vertical.
     * Structure is documented below.
     * 
     */
    public Output<Optional<RecommendationEngineMediaRecommendationEngineConfig>> mediaRecommendationEngineConfig() {
        return Codegen.optional(this.mediaRecommendationEngineConfig);
    }
    /**
     * The unique full resource name of the recommendation engine. Values are of the format
     * `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}`.
     * This field must be a UTF-8 encoded string with a length limit of 1024 characters.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The unique full resource name of the recommendation engine. Values are of the format
     * `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}`.
     * This field must be a UTF-8 encoded string with a length limit of 1024 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Timestamp the Engine was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Timestamp the Engine was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RecommendationEngine(java.lang.String name) {
        this(name, RecommendationEngineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RecommendationEngine(java.lang.String name, RecommendationEngineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RecommendationEngine(java.lang.String name, RecommendationEngineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/recommendationEngine:RecommendationEngine", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RecommendationEngine(java.lang.String name, Output<java.lang.String> id, @Nullable RecommendationEngineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/recommendationEngine:RecommendationEngine", name, state, makeResourceOptions(options, id), false);
    }

    private static RecommendationEngineArgs makeArgs(RecommendationEngineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RecommendationEngineArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RecommendationEngine get(java.lang.String name, Output<java.lang.String> id, @Nullable RecommendationEngineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RecommendationEngine(name, id, state, options);
    }
}
