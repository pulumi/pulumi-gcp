// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memorystore.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceEndpointConnectionPscAutoConnection {
    /**
     * @return Output Only. Type of a PSC Connection.
     *  Possible values:
     *  CONNECTION_TYPE_DISCOVERY
     *  CONNECTION_TYPE_PRIMARY
     *  CONNECTION_TYPE_READER
     * 
     */
    private String connectionType;
    /**
     * @return Output only. The URI of the consumer side forwarding rule.
     * Format:
     * projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
     * 
     */
    private String forwardingRule;
    /**
     * @return Output only. The IP allocated on the consumer network for the PSC forwarding rule.
     * 
     */
    private String ipAddress;
    /**
     * @return Output only. The consumer network where the IP address resides, in the form of
     * projects/{project_id}/global/networks/{network_id}.
     * 
     */
    private String network;
    /**
     * @return Output only. Ports of the exposed endpoint.
     * 
     */
    private Integer port;
    /**
     * @return Output only. The consumer project_id where the forwarding rule is created from.
     * 
     */
    private String projectId;
    /**
     * @return Output only. The PSC connection id of the forwarding rule connected to the
     * service attachment.
     * 
     */
    private String pscConnectionId;
    /**
     * @return Output only. The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
     * 
     */
    private String serviceAttachment;

    private GetInstanceEndpointConnectionPscAutoConnection() {}
    /**
     * @return Output Only. Type of a PSC Connection.
     *  Possible values:
     *  CONNECTION_TYPE_DISCOVERY
     *  CONNECTION_TYPE_PRIMARY
     *  CONNECTION_TYPE_READER
     * 
     */
    public String connectionType() {
        return this.connectionType;
    }
    /**
     * @return Output only. The URI of the consumer side forwarding rule.
     * Format:
     * projects/{project}/regions/{region}/forwardingRules/{forwarding_rule}
     * 
     */
    public String forwardingRule() {
        return this.forwardingRule;
    }
    /**
     * @return Output only. The IP allocated on the consumer network for the PSC forwarding rule.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return Output only. The consumer network where the IP address resides, in the form of
     * projects/{project_id}/global/networks/{network_id}.
     * 
     */
    public String network() {
        return this.network;
    }
    /**
     * @return Output only. Ports of the exposed endpoint.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return Output only. The consumer project_id where the forwarding rule is created from.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return Output only. The PSC connection id of the forwarding rule connected to the
     * service attachment.
     * 
     */
    public String pscConnectionId() {
        return this.pscConnectionId;
    }
    /**
     * @return Output only. The service attachment which is the target of the PSC connection, in the form of projects/{project-id}/regions/{region}/serviceAttachments/{service-attachment-id}.
     * 
     */
    public String serviceAttachment() {
        return this.serviceAttachment;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceEndpointConnectionPscAutoConnection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionType;
        private String forwardingRule;
        private String ipAddress;
        private String network;
        private Integer port;
        private String projectId;
        private String pscConnectionId;
        private String serviceAttachment;
        public Builder() {}
        public Builder(GetInstanceEndpointConnectionPscAutoConnection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionType = defaults.connectionType;
    	      this.forwardingRule = defaults.forwardingRule;
    	      this.ipAddress = defaults.ipAddress;
    	      this.network = defaults.network;
    	      this.port = defaults.port;
    	      this.projectId = defaults.projectId;
    	      this.pscConnectionId = defaults.pscConnectionId;
    	      this.serviceAttachment = defaults.serviceAttachment;
        }

        @CustomType.Setter
        public Builder connectionType(String connectionType) {
            if (connectionType == null) {
              throw new MissingRequiredPropertyException("GetInstanceEndpointConnectionPscAutoConnection", "connectionType");
            }
            this.connectionType = connectionType;
            return this;
        }
        @CustomType.Setter
        public Builder forwardingRule(String forwardingRule) {
            if (forwardingRule == null) {
              throw new MissingRequiredPropertyException("GetInstanceEndpointConnectionPscAutoConnection", "forwardingRule");
            }
            this.forwardingRule = forwardingRule;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetInstanceEndpointConnectionPscAutoConnection", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetInstanceEndpointConnectionPscAutoConnection", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetInstanceEndpointConnectionPscAutoConnection", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetInstanceEndpointConnectionPscAutoConnection", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder pscConnectionId(String pscConnectionId) {
            if (pscConnectionId == null) {
              throw new MissingRequiredPropertyException("GetInstanceEndpointConnectionPscAutoConnection", "pscConnectionId");
            }
            this.pscConnectionId = pscConnectionId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAttachment(String serviceAttachment) {
            if (serviceAttachment == null) {
              throw new MissingRequiredPropertyException("GetInstanceEndpointConnectionPscAutoConnection", "serviceAttachment");
            }
            this.serviceAttachment = serviceAttachment;
            return this;
        }
        public GetInstanceEndpointConnectionPscAutoConnection build() {
            final var _resultValue = new GetInstanceEndpointConnectionPscAutoConnection();
            _resultValue.connectionType = connectionType;
            _resultValue.forwardingRule = forwardingRule;
            _resultValue.ipAddress = ipAddress;
            _resultValue.network = network;
            _resultValue.port = port;
            _resultValue.projectId = projectId;
            _resultValue.pscConnectionId = pscConnectionId;
            _resultValue.serviceAttachment = serviceAttachment;
            return _resultValue;
        }
    }
}
