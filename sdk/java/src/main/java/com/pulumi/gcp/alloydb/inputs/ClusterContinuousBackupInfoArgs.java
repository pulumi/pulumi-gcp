// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.alloydb.inputs.ClusterContinuousBackupInfoEncryptionInfoArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterContinuousBackupInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterContinuousBackupInfoArgs Empty = new ClusterContinuousBackupInfoArgs();

    /**
     * (Output)
     * The earliest restorable time that can be restored to. Output only field.
     * 
     */
    @Import(name="earliestRestorableTime")
    private @Nullable Output<String> earliestRestorableTime;

    /**
     * @return (Output)
     * The earliest restorable time that can be restored to. Output only field.
     * 
     */
    public Optional<Output<String>> earliestRestorableTime() {
        return Optional.ofNullable(this.earliestRestorableTime);
    }

    /**
     * (Output)
     * When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.
     * 
     */
    @Import(name="enabledTime")
    private @Nullable Output<String> enabledTime;

    /**
     * @return (Output)
     * When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.
     * 
     */
    public Optional<Output<String>> enabledTime() {
        return Optional.ofNullable(this.enabledTime);
    }

    /**
     * (Output)
     * Output only. The encryption information for the WALs and backups required for ContinuousBackup.
     * Structure is documented below.
     * 
     */
    @Import(name="encryptionInfos")
    private @Nullable Output<List<ClusterContinuousBackupInfoEncryptionInfoArgs>> encryptionInfos;

    /**
     * @return (Output)
     * Output only. The encryption information for the WALs and backups required for ContinuousBackup.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ClusterContinuousBackupInfoEncryptionInfoArgs>>> encryptionInfos() {
        return Optional.ofNullable(this.encryptionInfos);
    }

    /**
     * (Output)
     * Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.
     * 
     */
    @Import(name="schedules")
    private @Nullable Output<List<String>> schedules;

    /**
     * @return (Output)
     * Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.
     * 
     */
    public Optional<Output<List<String>>> schedules() {
        return Optional.ofNullable(this.schedules);
    }

    private ClusterContinuousBackupInfoArgs() {}

    private ClusterContinuousBackupInfoArgs(ClusterContinuousBackupInfoArgs $) {
        this.earliestRestorableTime = $.earliestRestorableTime;
        this.enabledTime = $.enabledTime;
        this.encryptionInfos = $.encryptionInfos;
        this.schedules = $.schedules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterContinuousBackupInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterContinuousBackupInfoArgs $;

        public Builder() {
            $ = new ClusterContinuousBackupInfoArgs();
        }

        public Builder(ClusterContinuousBackupInfoArgs defaults) {
            $ = new ClusterContinuousBackupInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param earliestRestorableTime (Output)
         * The earliest restorable time that can be restored to. Output only field.
         * 
         * @return builder
         * 
         */
        public Builder earliestRestorableTime(@Nullable Output<String> earliestRestorableTime) {
            $.earliestRestorableTime = earliestRestorableTime;
            return this;
        }

        /**
         * @param earliestRestorableTime (Output)
         * The earliest restorable time that can be restored to. Output only field.
         * 
         * @return builder
         * 
         */
        public Builder earliestRestorableTime(String earliestRestorableTime) {
            return earliestRestorableTime(Output.of(earliestRestorableTime));
        }

        /**
         * @param enabledTime (Output)
         * When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabledTime(@Nullable Output<String> enabledTime) {
            $.enabledTime = enabledTime;
            return this;
        }

        /**
         * @param enabledTime (Output)
         * When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabledTime(String enabledTime) {
            return enabledTime(Output.of(enabledTime));
        }

        /**
         * @param encryptionInfos (Output)
         * Output only. The encryption information for the WALs and backups required for ContinuousBackup.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionInfos(@Nullable Output<List<ClusterContinuousBackupInfoEncryptionInfoArgs>> encryptionInfos) {
            $.encryptionInfos = encryptionInfos;
            return this;
        }

        /**
         * @param encryptionInfos (Output)
         * Output only. The encryption information for the WALs and backups required for ContinuousBackup.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionInfos(List<ClusterContinuousBackupInfoEncryptionInfoArgs> encryptionInfos) {
            return encryptionInfos(Output.of(encryptionInfos));
        }

        /**
         * @param encryptionInfos (Output)
         * Output only. The encryption information for the WALs and backups required for ContinuousBackup.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionInfos(ClusterContinuousBackupInfoEncryptionInfoArgs... encryptionInfos) {
            return encryptionInfos(List.of(encryptionInfos));
        }

        /**
         * @param schedules (Output)
         * Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.
         * 
         * @return builder
         * 
         */
        public Builder schedules(@Nullable Output<List<String>> schedules) {
            $.schedules = schedules;
            return this;
        }

        /**
         * @param schedules (Output)
         * Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.
         * 
         * @return builder
         * 
         */
        public Builder schedules(List<String> schedules) {
            return schedules(Output.of(schedules));
        }

        /**
         * @param schedules (Output)
         * Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.
         * 
         * @return builder
         * 
         */
        public Builder schedules(String... schedules) {
            return schedules(List.of(schedules));
        }

        public ClusterContinuousBackupInfoArgs build() {
            return $;
        }
    }

}
