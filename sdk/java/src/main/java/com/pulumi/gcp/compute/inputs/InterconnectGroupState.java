// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.InterconnectGroupConfiguredArgs;
import com.pulumi.gcp.compute.inputs.InterconnectGroupIntentArgs;
import com.pulumi.gcp.compute.inputs.InterconnectGroupInterconnectArgs;
import com.pulumi.gcp.compute.inputs.InterconnectGroupPhysicalStructureArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterconnectGroupState extends com.pulumi.resources.ResourceArgs {

    public static final InterconnectGroupState Empty = new InterconnectGroupState();

    /**
     * The status of the group as configured. This has the same
     * structure as the operational field reported by the OperationalStatus
     * method, but does not take into account the operational status of each
     * resource.
     * Structure is documented below.
     * 
     */
    @Import(name="configureds")
    private @Nullable Output<List<InterconnectGroupConfiguredArgs>> configureds;

    /**
     * @return The status of the group as configured. This has the same
     * structure as the operational field reported by the OperationalStatus
     * method, but does not take into account the operational status of each
     * resource.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InterconnectGroupConfiguredArgs>>> configureds() {
        return Optional.ofNullable(this.configureds);
    }

    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Import(name="creationTimestamp")
    private @Nullable Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Optional<Output<String>> creationTimestamp() {
        return Optional.ofNullable(this.creationTimestamp);
    }

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The user&#39;s intent for this group. This is the only required field besides
     * the name that must be specified on group creation.
     * Structure is documented below.
     * 
     */
    @Import(name="intent")
    private @Nullable Output<InterconnectGroupIntentArgs> intent;

    /**
     * @return The user&#39;s intent for this group. This is the only required field besides
     * the name that must be specified on group creation.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InterconnectGroupIntentArgs>> intent() {
        return Optional.ofNullable(this.intent);
    }

    /**
     * Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
     * strings. Users are encouraged, but not required, to use their preferred
     * format for resource links as keys.
     * Note that there are add-members and remove-members methods in gcloud.
     * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
     * Structure is documented below.
     * 
     */
    @Import(name="interconnects")
    private @Nullable Output<List<InterconnectGroupInterconnectArgs>> interconnects;

    /**
     * @return Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
     * strings. Users are encouraged, but not required, to use their preferred
     * format for resource links as keys.
     * Note that there are add-members and remove-members methods in gcloud.
     * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InterconnectGroupInterconnectArgs>>> interconnects() {
        return Optional.ofNullable(this.interconnects);
    }

    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * An analysis of the physical layout of Interconnects in this
     * group. Every Interconnect in the group is shown once in this structure.
     * Structure is documented below.
     * 
     */
    @Import(name="physicalStructures")
    private @Nullable Output<List<InterconnectGroupPhysicalStructureArgs>> physicalStructures;

    /**
     * @return An analysis of the physical layout of Interconnects in this
     * group. Every Interconnect in the group is shown once in this structure.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InterconnectGroupPhysicalStructureArgs>>> physicalStructures() {
        return Optional.ofNullable(this.physicalStructures);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private InterconnectGroupState() {}

    private InterconnectGroupState(InterconnectGroupState $) {
        this.configureds = $.configureds;
        this.creationTimestamp = $.creationTimestamp;
        this.description = $.description;
        this.intent = $.intent;
        this.interconnects = $.interconnects;
        this.name = $.name;
        this.physicalStructures = $.physicalStructures;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterconnectGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterconnectGroupState $;

        public Builder() {
            $ = new InterconnectGroupState();
        }

        public Builder(InterconnectGroupState defaults) {
            $ = new InterconnectGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configureds The status of the group as configured. This has the same
         * structure as the operational field reported by the OperationalStatus
         * method, but does not take into account the operational status of each
         * resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder configureds(@Nullable Output<List<InterconnectGroupConfiguredArgs>> configureds) {
            $.configureds = configureds;
            return this;
        }

        /**
         * @param configureds The status of the group as configured. This has the same
         * structure as the operational field reported by the OperationalStatus
         * method, but does not take into account the operational status of each
         * resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder configureds(List<InterconnectGroupConfiguredArgs> configureds) {
            return configureds(Output.of(configureds));
        }

        /**
         * @param configureds The status of the group as configured. This has the same
         * structure as the operational field reported by the OperationalStatus
         * method, but does not take into account the operational status of each
         * resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder configureds(InterconnectGroupConfiguredArgs... configureds) {
            return configureds(List.of(configureds));
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(@Nullable Output<String> creationTimestamp) {
            $.creationTimestamp = creationTimestamp;
            return this;
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(String creationTimestamp) {
            return creationTimestamp(Output.of(creationTimestamp));
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param intent The user&#39;s intent for this group. This is the only required field besides
         * the name that must be specified on group creation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder intent(@Nullable Output<InterconnectGroupIntentArgs> intent) {
            $.intent = intent;
            return this;
        }

        /**
         * @param intent The user&#39;s intent for this group. This is the only required field besides
         * the name that must be specified on group creation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder intent(InterconnectGroupIntentArgs intent) {
            return intent(Output.of(intent));
        }

        /**
         * @param interconnects Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
         * strings. Users are encouraged, but not required, to use their preferred
         * format for resource links as keys.
         * Note that there are add-members and remove-members methods in gcloud.
         * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder interconnects(@Nullable Output<List<InterconnectGroupInterconnectArgs>> interconnects) {
            $.interconnects = interconnects;
            return this;
        }

        /**
         * @param interconnects Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
         * strings. Users are encouraged, but not required, to use their preferred
         * format for resource links as keys.
         * Note that there are add-members and remove-members methods in gcloud.
         * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder interconnects(List<InterconnectGroupInterconnectArgs> interconnects) {
            return interconnects(Output.of(interconnects));
        }

        /**
         * @param interconnects Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
         * strings. Users are encouraged, but not required, to use their preferred
         * format for resource links as keys.
         * Note that there are add-members and remove-members methods in gcloud.
         * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder interconnects(InterconnectGroupInterconnectArgs... interconnects) {
            return interconnects(List.of(interconnects));
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created. The name must be
         * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?` which means the first
         * character must be a lowercase letter, and all following characters must be a dash,
         * lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created. The name must be
         * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?` which means the first
         * character must be a lowercase letter, and all following characters must be a dash,
         * lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param physicalStructures An analysis of the physical layout of Interconnects in this
         * group. Every Interconnect in the group is shown once in this structure.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder physicalStructures(@Nullable Output<List<InterconnectGroupPhysicalStructureArgs>> physicalStructures) {
            $.physicalStructures = physicalStructures;
            return this;
        }

        /**
         * @param physicalStructures An analysis of the physical layout of Interconnects in this
         * group. Every Interconnect in the group is shown once in this structure.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder physicalStructures(List<InterconnectGroupPhysicalStructureArgs> physicalStructures) {
            return physicalStructures(Output.of(physicalStructures));
        }

        /**
         * @param physicalStructures An analysis of the physical layout of Interconnects in this
         * group. Every Interconnect in the group is shown once in this structure.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder physicalStructures(InterconnectGroupPhysicalStructureArgs... physicalStructures) {
            return physicalStructures(List.of(physicalStructures));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public InterconnectGroupState build() {
            return $;
        }
    }

}
