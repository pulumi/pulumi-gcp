// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobHadoopJob;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobHiveJob;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobPigJob;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobPrestoJob;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobPysparkJob;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobScheduling;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobSparkJob;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobSparkRJob;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobSparkSqlJob;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkflowTemplateJob {
    /**
     * @return Optional. Job is a Hadoop job.
     * 
     */
    private @Nullable WorkflowTemplateJobHadoopJob hadoopJob;
    /**
     * @return Optional. Job is a Hive job.
     * 
     */
    private @Nullable WorkflowTemplateJobHiveJob hiveJob;
    /**
     * @return Optional. The labels to associate with this cluster. Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: {0,63} No more than 32 labels can be associated with a given cluster.
     * 
     */
    private @Nullable Map<String,String> labels;
    /**
     * @return Optional. Job is a Pig job.
     * 
     */
    private @Nullable WorkflowTemplateJobPigJob pigJob;
    /**
     * @return Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
     * 
     */
    private @Nullable List<String> prerequisiteStepIds;
    /**
     * @return Optional. Job is a Presto job.
     * 
     */
    private @Nullable WorkflowTemplateJobPrestoJob prestoJob;
    /**
     * @return Optional. Job is a PySpark job.
     * 
     */
    private @Nullable WorkflowTemplateJobPysparkJob pysparkJob;
    /**
     * @return Optional. Job scheduling configuration.
     * 
     */
    private @Nullable WorkflowTemplateJobScheduling scheduling;
    /**
     * @return Optional. Job is a Spark job.
     * 
     */
    private @Nullable WorkflowTemplateJobSparkJob sparkJob;
    /**
     * @return Optional. Job is a SparkR job.
     * 
     */
    private @Nullable WorkflowTemplateJobSparkRJob sparkRJob;
    /**
     * @return Optional. Job is a SparkSql job.
     * 
     */
    private @Nullable WorkflowTemplateJobSparkSqlJob sparkSqlJob;
    /**
     * @return Required. The step id. The id must be unique among all jobs within the template. The step id is used as prefix for job id, as job `goog-dataproc-workflow-step-id` label, and in field from other steps. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
     * 
     */
    private String stepId;

    private WorkflowTemplateJob() {}
    /**
     * @return Optional. Job is a Hadoop job.
     * 
     */
    public Optional<WorkflowTemplateJobHadoopJob> hadoopJob() {
        return Optional.ofNullable(this.hadoopJob);
    }
    /**
     * @return Optional. Job is a Hive job.
     * 
     */
    public Optional<WorkflowTemplateJobHiveJob> hiveJob() {
        return Optional.ofNullable(this.hiveJob);
    }
    /**
     * @return Optional. The labels to associate with this cluster. Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: {0,63} No more than 32 labels can be associated with a given cluster.
     * 
     */
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return Optional. Job is a Pig job.
     * 
     */
    public Optional<WorkflowTemplateJobPigJob> pigJob() {
        return Optional.ofNullable(this.pigJob);
    }
    /**
     * @return Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
     * 
     */
    public List<String> prerequisiteStepIds() {
        return this.prerequisiteStepIds == null ? List.of() : this.prerequisiteStepIds;
    }
    /**
     * @return Optional. Job is a Presto job.
     * 
     */
    public Optional<WorkflowTemplateJobPrestoJob> prestoJob() {
        return Optional.ofNullable(this.prestoJob);
    }
    /**
     * @return Optional. Job is a PySpark job.
     * 
     */
    public Optional<WorkflowTemplateJobPysparkJob> pysparkJob() {
        return Optional.ofNullable(this.pysparkJob);
    }
    /**
     * @return Optional. Job scheduling configuration.
     * 
     */
    public Optional<WorkflowTemplateJobScheduling> scheduling() {
        return Optional.ofNullable(this.scheduling);
    }
    /**
     * @return Optional. Job is a Spark job.
     * 
     */
    public Optional<WorkflowTemplateJobSparkJob> sparkJob() {
        return Optional.ofNullable(this.sparkJob);
    }
    /**
     * @return Optional. Job is a SparkR job.
     * 
     */
    public Optional<WorkflowTemplateJobSparkRJob> sparkRJob() {
        return Optional.ofNullable(this.sparkRJob);
    }
    /**
     * @return Optional. Job is a SparkSql job.
     * 
     */
    public Optional<WorkflowTemplateJobSparkSqlJob> sparkSqlJob() {
        return Optional.ofNullable(this.sparkSqlJob);
    }
    /**
     * @return Required. The step id. The id must be unique among all jobs within the template. The step id is used as prefix for job id, as job `goog-dataproc-workflow-step-id` label, and in field from other steps. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
     * 
     */
    public String stepId() {
        return this.stepId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowTemplateJob defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable WorkflowTemplateJobHadoopJob hadoopJob;
        private @Nullable WorkflowTemplateJobHiveJob hiveJob;
        private @Nullable Map<String,String> labels;
        private @Nullable WorkflowTemplateJobPigJob pigJob;
        private @Nullable List<String> prerequisiteStepIds;
        private @Nullable WorkflowTemplateJobPrestoJob prestoJob;
        private @Nullable WorkflowTemplateJobPysparkJob pysparkJob;
        private @Nullable WorkflowTemplateJobScheduling scheduling;
        private @Nullable WorkflowTemplateJobSparkJob sparkJob;
        private @Nullable WorkflowTemplateJobSparkRJob sparkRJob;
        private @Nullable WorkflowTemplateJobSparkSqlJob sparkSqlJob;
        private String stepId;
        public Builder() {}
        public Builder(WorkflowTemplateJob defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hadoopJob = defaults.hadoopJob;
    	      this.hiveJob = defaults.hiveJob;
    	      this.labels = defaults.labels;
    	      this.pigJob = defaults.pigJob;
    	      this.prerequisiteStepIds = defaults.prerequisiteStepIds;
    	      this.prestoJob = defaults.prestoJob;
    	      this.pysparkJob = defaults.pysparkJob;
    	      this.scheduling = defaults.scheduling;
    	      this.sparkJob = defaults.sparkJob;
    	      this.sparkRJob = defaults.sparkRJob;
    	      this.sparkSqlJob = defaults.sparkSqlJob;
    	      this.stepId = defaults.stepId;
        }

        @CustomType.Setter
        public Builder hadoopJob(@Nullable WorkflowTemplateJobHadoopJob hadoopJob) {
            this.hadoopJob = hadoopJob;
            return this;
        }
        @CustomType.Setter
        public Builder hiveJob(@Nullable WorkflowTemplateJobHiveJob hiveJob) {
            this.hiveJob = hiveJob;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder pigJob(@Nullable WorkflowTemplateJobPigJob pigJob) {
            this.pigJob = pigJob;
            return this;
        }
        @CustomType.Setter
        public Builder prerequisiteStepIds(@Nullable List<String> prerequisiteStepIds) {
            this.prerequisiteStepIds = prerequisiteStepIds;
            return this;
        }
        public Builder prerequisiteStepIds(String... prerequisiteStepIds) {
            return prerequisiteStepIds(List.of(prerequisiteStepIds));
        }
        @CustomType.Setter
        public Builder prestoJob(@Nullable WorkflowTemplateJobPrestoJob prestoJob) {
            this.prestoJob = prestoJob;
            return this;
        }
        @CustomType.Setter
        public Builder pysparkJob(@Nullable WorkflowTemplateJobPysparkJob pysparkJob) {
            this.pysparkJob = pysparkJob;
            return this;
        }
        @CustomType.Setter
        public Builder scheduling(@Nullable WorkflowTemplateJobScheduling scheduling) {
            this.scheduling = scheduling;
            return this;
        }
        @CustomType.Setter
        public Builder sparkJob(@Nullable WorkflowTemplateJobSparkJob sparkJob) {
            this.sparkJob = sparkJob;
            return this;
        }
        @CustomType.Setter
        public Builder sparkRJob(@Nullable WorkflowTemplateJobSparkRJob sparkRJob) {
            this.sparkRJob = sparkRJob;
            return this;
        }
        @CustomType.Setter
        public Builder sparkSqlJob(@Nullable WorkflowTemplateJobSparkSqlJob sparkSqlJob) {
            this.sparkSqlJob = sparkSqlJob;
            return this;
        }
        @CustomType.Setter
        public Builder stepId(String stepId) {
            this.stepId = Objects.requireNonNull(stepId);
            return this;
        }
        public WorkflowTemplateJob build() {
            final var o = new WorkflowTemplateJob();
            o.hadoopJob = hadoopJob;
            o.hiveJob = hiveJob;
            o.labels = labels;
            o.pigJob = pigJob;
            o.prerequisiteStepIds = prerequisiteStepIds;
            o.prestoJob = prestoJob;
            o.pysparkJob = pysparkJob;
            o.scheduling = scheduling;
            o.sparkJob = sparkJob;
            o.sparkRJob = sparkRJob;
            o.sparkSqlJob = sparkSqlJob;
            o.stepId = stepId;
            return o;
        }
    }
}
