// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vertex.inputs.AiReasoningEngineEncryptionSpecArgs;
import com.pulumi.gcp.vertex.inputs.AiReasoningEngineSpecArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiReasoningEngineState extends com.pulumi.resources.ResourceArgs {

    public static final AiReasoningEngineState Empty = new AiReasoningEngineState();

    /**
     * The timestamp of when the Index was created in RFC3339 UTC &#34;Zulu&#34; format,
     * with nanosecond resolution and up to nine fractional digits.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The timestamp of when the Index was created in RFC3339 UTC &#34;Zulu&#34; format,
     * with nanosecond resolution and up to nine fractional digits.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The description of the ReasoningEngine.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the ReasoningEngine.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of the ReasoningEngine.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name of the ReasoningEngine.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Optional. Customer-managed encryption key spec for a ReasoningEngine.
     * If set, this ReasoningEngine and all sub-resources of this ReasoningEngine will be secured by this key.
     * Structure is documented below.
     * 
     */
    @Import(name="encryptionSpec")
    private @Nullable Output<AiReasoningEngineEncryptionSpecArgs> encryptionSpec;

    /**
     * @return Optional. Customer-managed encryption key spec for a ReasoningEngine.
     * If set, this ReasoningEngine and all sub-resources of this ReasoningEngine will be secured by this key.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiReasoningEngineEncryptionSpecArgs>> encryptionSpec() {
        return Optional.ofNullable(this.encryptionSpec);
    }

    /**
     * The generated name of the ReasoningEngine, in the format
     * &#39;projects/{project}/locations/{location}/reasoningEngines/{reasoningEngine}&#39;
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The generated name of the ReasoningEngine, in the format
     * &#39;projects/{project}/locations/{location}/reasoningEngines/{reasoningEngine}&#39;
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region of the reasoning engine. eg us-central1
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the reasoning engine. eg us-central1
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Optional. Configurations of the ReasoningEngine.
     * Structure is documented below.
     * 
     */
    @Import(name="spec")
    private @Nullable Output<AiReasoningEngineSpecArgs> spec;

    /**
     * @return Optional. Configurations of the ReasoningEngine.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiReasoningEngineSpecArgs>> spec() {
        return Optional.ofNullable(this.spec);
    }

    /**
     * The timestamp of when the Index was last updated in RFC3339 UTC &#34;Zulu&#34; format,
     * with nanosecond resolution and up to nine fractional digits.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The timestamp of when the Index was last updated in RFC3339 UTC &#34;Zulu&#34; format,
     * with nanosecond resolution and up to nine fractional digits.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private AiReasoningEngineState() {}

    private AiReasoningEngineState(AiReasoningEngineState $) {
        this.createTime = $.createTime;
        this.description = $.description;
        this.displayName = $.displayName;
        this.encryptionSpec = $.encryptionSpec;
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
        this.spec = $.spec;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiReasoningEngineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiReasoningEngineState $;

        public Builder() {
            $ = new AiReasoningEngineState();
        }

        public Builder(AiReasoningEngineState defaults) {
            $ = new AiReasoningEngineState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The timestamp of when the Index was created in RFC3339 UTC &#34;Zulu&#34; format,
         * with nanosecond resolution and up to nine fractional digits.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The timestamp of when the Index was created in RFC3339 UTC &#34;Zulu&#34; format,
         * with nanosecond resolution and up to nine fractional digits.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description The description of the ReasoningEngine.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the ReasoningEngine.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of the ReasoningEngine.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the ReasoningEngine.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param encryptionSpec Optional. Customer-managed encryption key spec for a ReasoningEngine.
         * If set, this ReasoningEngine and all sub-resources of this ReasoningEngine will be secured by this key.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionSpec(@Nullable Output<AiReasoningEngineEncryptionSpecArgs> encryptionSpec) {
            $.encryptionSpec = encryptionSpec;
            return this;
        }

        /**
         * @param encryptionSpec Optional. Customer-managed encryption key spec for a ReasoningEngine.
         * If set, this ReasoningEngine and all sub-resources of this ReasoningEngine will be secured by this key.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionSpec(AiReasoningEngineEncryptionSpecArgs encryptionSpec) {
            return encryptionSpec(Output.of(encryptionSpec));
        }

        /**
         * @param name The generated name of the ReasoningEngine, in the format
         * &#39;projects/{project}/locations/{location}/reasoningEngines/{reasoningEngine}&#39;
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The generated name of the ReasoningEngine, in the format
         * &#39;projects/{project}/locations/{location}/reasoningEngines/{reasoningEngine}&#39;
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region of the reasoning engine. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the reasoning engine. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param spec Optional. Configurations of the ReasoningEngine.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder spec(@Nullable Output<AiReasoningEngineSpecArgs> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec Optional. Configurations of the ReasoningEngine.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder spec(AiReasoningEngineSpecArgs spec) {
            return spec(Output.of(spec));
        }

        /**
         * @param updateTime The timestamp of when the Index was last updated in RFC3339 UTC &#34;Zulu&#34; format,
         * with nanosecond resolution and up to nine fractional digits.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The timestamp of when the Index was last updated in RFC3339 UTC &#34;Zulu&#34; format,
         * with nanosecond resolution and up to nine fractional digits.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public AiReasoningEngineState build() {
            return $;
        }
    }

}
