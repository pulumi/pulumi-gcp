// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.gkeonprem.outputs.BareMetalClusterLoadBalancerMetalLbConfigAddressPool;
import com.pulumi.gcp.gkeonprem.outputs.BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BareMetalClusterLoadBalancerMetalLbConfig {
    /**
     * @return AddressPools is a list of non-overlapping IP pools used by load balancer
     * typed services. All addresses must be routable to load balancer nodes.
     * IngressVIP must be included in the pools.
     * Structure is documented below.
     * 
     */
    private List<BareMetalClusterLoadBalancerMetalLbConfigAddressPool> addressPools;
    /**
     * @return Specifies the load balancer&#39;s node pool configuration.
     * Structure is documented below.
     * 
     */
    private @Nullable BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig loadBalancerNodePoolConfig;

    private BareMetalClusterLoadBalancerMetalLbConfig() {}
    /**
     * @return AddressPools is a list of non-overlapping IP pools used by load balancer
     * typed services. All addresses must be routable to load balancer nodes.
     * IngressVIP must be included in the pools.
     * Structure is documented below.
     * 
     */
    public List<BareMetalClusterLoadBalancerMetalLbConfigAddressPool> addressPools() {
        return this.addressPools;
    }
    /**
     * @return Specifies the load balancer&#39;s node pool configuration.
     * Structure is documented below.
     * 
     */
    public Optional<BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig> loadBalancerNodePoolConfig() {
        return Optional.ofNullable(this.loadBalancerNodePoolConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BareMetalClusterLoadBalancerMetalLbConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<BareMetalClusterLoadBalancerMetalLbConfigAddressPool> addressPools;
        private @Nullable BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig loadBalancerNodePoolConfig;
        public Builder() {}
        public Builder(BareMetalClusterLoadBalancerMetalLbConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPools = defaults.addressPools;
    	      this.loadBalancerNodePoolConfig = defaults.loadBalancerNodePoolConfig;
        }

        @CustomType.Setter
        public Builder addressPools(List<BareMetalClusterLoadBalancerMetalLbConfigAddressPool> addressPools) {
            this.addressPools = Objects.requireNonNull(addressPools);
            return this;
        }
        public Builder addressPools(BareMetalClusterLoadBalancerMetalLbConfigAddressPool... addressPools) {
            return addressPools(List.of(addressPools));
        }
        @CustomType.Setter
        public Builder loadBalancerNodePoolConfig(@Nullable BareMetalClusterLoadBalancerMetalLbConfigLoadBalancerNodePoolConfig loadBalancerNodePoolConfig) {
            this.loadBalancerNodePoolConfig = loadBalancerNodePoolConfig;
            return this;
        }
        public BareMetalClusterLoadBalancerMetalLbConfig build() {
            final var o = new BareMetalClusterLoadBalancerMetalLbConfig();
            o.addressPools = addressPools;
            o.loadBalancerNodePoolConfig = loadBalancerNodePoolConfig;
            return o;
        }
    }
}
