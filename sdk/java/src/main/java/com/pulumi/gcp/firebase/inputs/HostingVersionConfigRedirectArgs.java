// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostingVersionConfigRedirectArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostingVersionConfigRedirectArgs Empty = new HostingVersionConfigRedirectArgs();

    /**
     * The user-supplied glob to match against the request URL path.
     * 
     */
    @Import(name="glob")
    private @Nullable Output<String> glob;

    /**
     * @return The user-supplied glob to match against the request URL path.
     * 
     */
    public Optional<Output<String>> glob() {
        return Optional.ofNullable(this.glob);
    }

    /**
     * The value to put in the HTTP location header of the response.
     * The location can contain capture group values from the pattern using a : prefix to identify
     * the segment and an optional * to capture the rest of the URL. For example:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The value to put in the HTTP location header of the response.
     * The location can contain capture group values from the pattern using a : prefix to identify
     * the segment and an optional * to capture the rest of the URL. For example:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The user-supplied RE2 regular expression to match against the request URL path.
     * 
     */
    @Import(name="regex")
    private @Nullable Output<String> regex;

    /**
     * @return The user-supplied RE2 regular expression to match against the request URL path.
     * 
     */
    public Optional<Output<String>> regex() {
        return Optional.ofNullable(this.regex);
    }

    /**
     * The status HTTP code to return in the response. It must be a valid 3xx status code.
     * 
     */
    @Import(name="statusCode", required=true)
    private Output<Integer> statusCode;

    /**
     * @return The status HTTP code to return in the response. It must be a valid 3xx status code.
     * 
     */
    public Output<Integer> statusCode() {
        return this.statusCode;
    }

    private HostingVersionConfigRedirectArgs() {}

    private HostingVersionConfigRedirectArgs(HostingVersionConfigRedirectArgs $) {
        this.glob = $.glob;
        this.location = $.location;
        this.regex = $.regex;
        this.statusCode = $.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostingVersionConfigRedirectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostingVersionConfigRedirectArgs $;

        public Builder() {
            $ = new HostingVersionConfigRedirectArgs();
        }

        public Builder(HostingVersionConfigRedirectArgs defaults) {
            $ = new HostingVersionConfigRedirectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param glob The user-supplied glob to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder glob(@Nullable Output<String> glob) {
            $.glob = glob;
            return this;
        }

        /**
         * @param glob The user-supplied glob to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder glob(String glob) {
            return glob(Output.of(glob));
        }

        /**
         * @param location The value to put in the HTTP location header of the response.
         * The location can contain capture group values from the pattern using a : prefix to identify
         * the segment and an optional * to capture the rest of the URL. For example:
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The value to put in the HTTP location header of the response.
         * The location can contain capture group values from the pattern using a : prefix to identify
         * the segment and an optional * to capture the rest of the URL. For example:
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param regex The user-supplied RE2 regular expression to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder regex(@Nullable Output<String> regex) {
            $.regex = regex;
            return this;
        }

        /**
         * @param regex The user-supplied RE2 regular expression to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder regex(String regex) {
            return regex(Output.of(regex));
        }

        /**
         * @param statusCode The status HTTP code to return in the response. It must be a valid 3xx status code.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Output<Integer> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        /**
         * @param statusCode The status HTTP code to return in the response. It must be a valid 3xx status code.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Integer statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public HostingVersionConfigRedirectArgs build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.statusCode = Objects.requireNonNull($.statusCode, "expected parameter 'statusCode' to be non-null");
            return $;
        }
    }

}
