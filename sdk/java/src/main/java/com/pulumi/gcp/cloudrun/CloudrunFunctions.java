// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.cloudrun.inputs.GetLocationsArgs;
import com.pulumi.gcp.cloudrun.inputs.GetLocationsPlainArgs;
import com.pulumi.gcp.cloudrun.inputs.GetServiceArgs;
import com.pulumi.gcp.cloudrun.inputs.GetServicePlainArgs;
import com.pulumi.gcp.cloudrun.outputs.GetLocationsResult;
import com.pulumi.gcp.cloudrun.outputs.GetServiceResult;
import java.util.concurrent.CompletableFuture;

public final class CloudrunFunctions {
    /**
     * Get Cloud Run locations available for a project.
     * 
     * To get more information about Cloud Run, see:
     * 
     * * [API documentation](https://cloud.google.com/run/docs/reference/rest/v1/projects.locations)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/run/docs/)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = CloudrunFunctions.getLocations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLocationsResult> getLocations() {
        return getLocations(GetLocationsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get Cloud Run locations available for a project.
     * 
     * To get more information about Cloud Run, see:
     * 
     * * [API documentation](https://cloud.google.com/run/docs/reference/rest/v1/projects.locations)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/run/docs/)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = CloudrunFunctions.getLocations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLocationsResult> getLocationsPlain() {
        return getLocationsPlain(GetLocationsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get Cloud Run locations available for a project.
     * 
     * To get more information about Cloud Run, see:
     * 
     * * [API documentation](https://cloud.google.com/run/docs/reference/rest/v1/projects.locations)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/run/docs/)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = CloudrunFunctions.getLocations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLocationsResult> getLocations(GetLocationsArgs args) {
        return getLocations(args, InvokeOptions.Empty);
    }
    /**
     * Get Cloud Run locations available for a project.
     * 
     * To get more information about Cloud Run, see:
     * 
     * * [API documentation](https://cloud.google.com/run/docs/reference/rest/v1/projects.locations)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/run/docs/)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = CloudrunFunctions.getLocations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLocationsResult> getLocationsPlain(GetLocationsPlainArgs args) {
        return getLocationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get Cloud Run locations available for a project.
     * 
     * To get more information about Cloud Run, see:
     * 
     * * [API documentation](https://cloud.google.com/run/docs/reference/rest/v1/projects.locations)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/run/docs/)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = CloudrunFunctions.getLocations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLocationsResult> getLocations(GetLocationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:cloudrun/getLocations:getLocations", TypeShape.of(GetLocationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get Cloud Run locations available for a project.
     * 
     * To get more information about Cloud Run, see:
     * 
     * * [API documentation](https://cloud.google.com/run/docs/reference/rest/v1/projects.locations)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/run/docs/)
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetLocationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = CloudrunFunctions.getLocations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLocationsResult> getLocationsPlain(GetLocationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:cloudrun/getLocations:getLocations", TypeShape.of(GetLocationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Run Service. For more information see
     * the [official documentation](https://cloud.google.com/run/docs/)
     * and [API](https://cloud.google.com/run/docs/apis).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var run-service = CloudrunFunctions.getService(GetServiceArgs.builder()
     *             .location(&#34;us-central1&#34;)
     *             .name(&#34;my-service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Run Service. For more information see
     * the [official documentation](https://cloud.google.com/run/docs/)
     * and [API](https://cloud.google.com/run/docs/apis).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var run-service = CloudrunFunctions.getService(GetServiceArgs.builder()
     *             .location(&#34;us-central1&#34;)
     *             .name(&#34;my-service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Run Service. For more information see
     * the [official documentation](https://cloud.google.com/run/docs/)
     * and [API](https://cloud.google.com/run/docs/apis).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var run-service = CloudrunFunctions.getService(GetServiceArgs.builder()
     *             .location(&#34;us-central1&#34;)
     *             .name(&#34;my-service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:cloudrun/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Run Service. For more information see
     * the [official documentation](https://cloud.google.com/run/docs/)
     * and [API](https://cloud.google.com/run/docs/apis).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.cloudrun.CloudrunFunctions;
     * import com.pulumi.gcp.cloudrun.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var run-service = CloudrunFunctions.getService(GetServiceArgs.builder()
     *             .location(&#34;us-central1&#34;)
     *             .name(&#34;my-service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:cloudrun/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
}
