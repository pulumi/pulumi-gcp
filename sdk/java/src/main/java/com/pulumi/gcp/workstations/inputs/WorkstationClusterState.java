// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workstations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.workstations.inputs.WorkstationClusterConditionArgs;
import com.pulumi.gcp.workstations.inputs.WorkstationClusterPrivateClusterConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkstationClusterState extends com.pulumi.resources.ResourceArgs {

    public static final WorkstationClusterState Empty = new WorkstationClusterState();

    /**
     * Client-specified annotations. This is distinct from labels.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return Client-specified annotations. This is distinct from labels.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Status conditions describing the current resource state.
     * Structure is documented below.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<WorkstationClusterConditionArgs>> conditions;

    /**
     * @return Status conditions describing the current resource state.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WorkstationClusterConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Time the Instance was created in UTC.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Time the Instance was created in UTC.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
     * Details can be found in the conditions field.
     * 
     */
    @Import(name="degraded")
    private @Nullable Output<Boolean> degraded;

    /**
     * @return Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
     * Details can be found in the conditions field.
     * 
     */
    public Optional<Output<Boolean>> degraded() {
        return Optional.ofNullable(this.degraded);
    }

    /**
     * Human-readable name for this resource.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Human-readable name for this resource.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Checksum computed by the server.
     * May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return Checksum computed by the server.
     * May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location where the workstation cluster should reside.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the workstation cluster should reside.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the cluster resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the cluster resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The relative resource name of the VPC network on which the instance can be accessed.
     * It is specified in the following form: &#34;projects/{projectNumber}/global/networks/{network_id}&#34;.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return The relative resource name of the VPC network on which the instance can be accessed.
     * It is specified in the following form: &#34;projects/{projectNumber}/global/networks/{network_id}&#34;.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Configuration for private cluster.
     * Structure is documented below.
     * 
     */
    @Import(name="privateClusterConfig")
    private @Nullable Output<WorkstationClusterPrivateClusterConfigArgs> privateClusterConfig;

    /**
     * @return Configuration for private cluster.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkstationClusterPrivateClusterConfigArgs>> privateClusterConfig() {
        return Optional.ofNullable(this.privateClusterConfig);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Name of the Compute Engine subnetwork in which instances associated with this cluster will be created.
     * Must be part of the subnetwork specified for this cluster.
     * 
     */
    @Import(name="subnetwork")
    private @Nullable Output<String> subnetwork;

    /**
     * @return Name of the Compute Engine subnetwork in which instances associated with this cluster will be created.
     * Must be part of the subnetwork specified for this cluster.
     * 
     */
    public Optional<Output<String>> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }

    /**
     * The system-generated UID of the resource.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return The system-generated UID of the resource.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * The ID of the workstation cluster.
     * 
     */
    @Import(name="workstationClusterId")
    private @Nullable Output<String> workstationClusterId;

    /**
     * @return The ID of the workstation cluster.
     * 
     */
    public Optional<Output<String>> workstationClusterId() {
        return Optional.ofNullable(this.workstationClusterId);
    }

    private WorkstationClusterState() {}

    private WorkstationClusterState(WorkstationClusterState $) {
        this.annotations = $.annotations;
        this.conditions = $.conditions;
        this.createTime = $.createTime;
        this.degraded = $.degraded;
        this.displayName = $.displayName;
        this.etag = $.etag;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.network = $.network;
        this.privateClusterConfig = $.privateClusterConfig;
        this.project = $.project;
        this.subnetwork = $.subnetwork;
        this.uid = $.uid;
        this.workstationClusterId = $.workstationClusterId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkstationClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkstationClusterState $;

        public Builder() {
            $ = new WorkstationClusterState();
        }

        public Builder(WorkstationClusterState defaults) {
            $ = new WorkstationClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Client-specified annotations. This is distinct from labels.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Client-specified annotations. This is distinct from labels.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param conditions Status conditions describing the current resource state.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<List<WorkstationClusterConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions Status conditions describing the current resource state.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<WorkstationClusterConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions Status conditions describing the current resource state.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(WorkstationClusterConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param createTime Time the Instance was created in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Time the Instance was created in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param degraded Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
         * Details can be found in the conditions field.
         * 
         * @return builder
         * 
         */
        public Builder degraded(@Nullable Output<Boolean> degraded) {
            $.degraded = degraded;
            return this;
        }

        /**
         * @param degraded Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
         * Details can be found in the conditions field.
         * 
         * @return builder
         * 
         */
        public Builder degraded(Boolean degraded) {
            return degraded(Output.of(degraded));
        }

        /**
         * @param displayName Human-readable name for this resource.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Human-readable name for this resource.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param etag Checksum computed by the server.
         * May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag Checksum computed by the server.
         * May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param labels Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location where the workstation cluster should reside.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the workstation cluster should reside.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the cluster resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the cluster resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network The relative resource name of the VPC network on which the instance can be accessed.
         * It is specified in the following form: &#34;projects/{projectNumber}/global/networks/{network_id}&#34;.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The relative resource name of the VPC network on which the instance can be accessed.
         * It is specified in the following form: &#34;projects/{projectNumber}/global/networks/{network_id}&#34;.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param privateClusterConfig Configuration for private cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder privateClusterConfig(@Nullable Output<WorkstationClusterPrivateClusterConfigArgs> privateClusterConfig) {
            $.privateClusterConfig = privateClusterConfig;
            return this;
        }

        /**
         * @param privateClusterConfig Configuration for private cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder privateClusterConfig(WorkstationClusterPrivateClusterConfigArgs privateClusterConfig) {
            return privateClusterConfig(Output.of(privateClusterConfig));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param subnetwork Name of the Compute Engine subnetwork in which instances associated with this cluster will be created.
         * Must be part of the subnetwork specified for this cluster.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        /**
         * @param subnetwork Name of the Compute Engine subnetwork in which instances associated with this cluster will be created.
         * Must be part of the subnetwork specified for this cluster.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(String subnetwork) {
            return subnetwork(Output.of(subnetwork));
        }

        /**
         * @param uid The system-generated UID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid The system-generated UID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        /**
         * @param workstationClusterId The ID of the workstation cluster.
         * 
         * @return builder
         * 
         */
        public Builder workstationClusterId(@Nullable Output<String> workstationClusterId) {
            $.workstationClusterId = workstationClusterId;
            return this;
        }

        /**
         * @param workstationClusterId The ID of the workstation cluster.
         * 
         * @return builder
         * 
         */
        public Builder workstationClusterId(String workstationClusterId) {
            return workstationClusterId(Output.of(workstationClusterId));
        }

        public WorkstationClusterState build() {
            return $;
        }
    }

}
