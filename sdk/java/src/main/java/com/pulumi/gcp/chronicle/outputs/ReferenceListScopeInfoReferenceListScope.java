// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.chronicle.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ReferenceListScopeInfoReferenceListScope {
    /**
     * @return Optional. The list of scope names of the reference list. The scope names should be
     * full resource names and should be of the format:
     * &#34;projects/{project}/locations/{location}/instances/{instance}/dataAccessScopes/{scope_name}&#34;.
     * 
     */
    private @Nullable List<String> scopeNames;

    private ReferenceListScopeInfoReferenceListScope() {}
    /**
     * @return Optional. The list of scope names of the reference list. The scope names should be
     * full resource names and should be of the format:
     * &#34;projects/{project}/locations/{location}/instances/{instance}/dataAccessScopes/{scope_name}&#34;.
     * 
     */
    public List<String> scopeNames() {
        return this.scopeNames == null ? List.of() : this.scopeNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReferenceListScopeInfoReferenceListScope defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> scopeNames;
        public Builder() {}
        public Builder(ReferenceListScopeInfoReferenceListScope defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scopeNames = defaults.scopeNames;
        }

        @CustomType.Setter
        public Builder scopeNames(@Nullable List<String> scopeNames) {

            this.scopeNames = scopeNames;
            return this;
        }
        public Builder scopeNames(String... scopeNames) {
            return scopeNames(List.of(scopeNames));
        }
        public ReferenceListScopeInfoReferenceListScope build() {
            final var _resultValue = new ReferenceListScopeInfoReferenceListScope();
            _resultValue.scopeNames = scopeNames;
            return _resultValue;
        }
    }
}
