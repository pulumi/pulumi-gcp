// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryCleanupPolicyMostRecentVersionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryCleanupPolicyMostRecentVersionsArgs Empty = new RepositoryCleanupPolicyMostRecentVersionsArgs();

    /**
     * Minimum number of versions to keep.
     * 
     */
    @Import(name="keepCount")
    private @Nullable Output<Integer> keepCount;

    /**
     * @return Minimum number of versions to keep.
     * 
     */
    public Optional<Output<Integer>> keepCount() {
        return Optional.ofNullable(this.keepCount);
    }

    /**
     * Match versions by package prefix. Applied on any prefix match.
     * 
     */
    @Import(name="packageNamePrefixes")
    private @Nullable Output<List<String>> packageNamePrefixes;

    /**
     * @return Match versions by package prefix. Applied on any prefix match.
     * 
     */
    public Optional<Output<List<String>>> packageNamePrefixes() {
        return Optional.ofNullable(this.packageNamePrefixes);
    }

    private RepositoryCleanupPolicyMostRecentVersionsArgs() {}

    private RepositoryCleanupPolicyMostRecentVersionsArgs(RepositoryCleanupPolicyMostRecentVersionsArgs $) {
        this.keepCount = $.keepCount;
        this.packageNamePrefixes = $.packageNamePrefixes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryCleanupPolicyMostRecentVersionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryCleanupPolicyMostRecentVersionsArgs $;

        public Builder() {
            $ = new RepositoryCleanupPolicyMostRecentVersionsArgs();
        }

        public Builder(RepositoryCleanupPolicyMostRecentVersionsArgs defaults) {
            $ = new RepositoryCleanupPolicyMostRecentVersionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keepCount Minimum number of versions to keep.
         * 
         * @return builder
         * 
         */
        public Builder keepCount(@Nullable Output<Integer> keepCount) {
            $.keepCount = keepCount;
            return this;
        }

        /**
         * @param keepCount Minimum number of versions to keep.
         * 
         * @return builder
         * 
         */
        public Builder keepCount(Integer keepCount) {
            return keepCount(Output.of(keepCount));
        }

        /**
         * @param packageNamePrefixes Match versions by package prefix. Applied on any prefix match.
         * 
         * @return builder
         * 
         */
        public Builder packageNamePrefixes(@Nullable Output<List<String>> packageNamePrefixes) {
            $.packageNamePrefixes = packageNamePrefixes;
            return this;
        }

        /**
         * @param packageNamePrefixes Match versions by package prefix. Applied on any prefix match.
         * 
         * @return builder
         * 
         */
        public Builder packageNamePrefixes(List<String> packageNamePrefixes) {
            return packageNamePrefixes(Output.of(packageNamePrefixes));
        }

        /**
         * @param packageNamePrefixes Match versions by package prefix. Applied on any prefix match.
         * 
         * @return builder
         * 
         */
        public Builder packageNamePrefixes(String... packageNamePrefixes) {
            return packageNamePrefixes(List.of(packageNamePrefixes));
        }

        public RepositoryCleanupPolicyMostRecentVersionsArgs build() {
            return $;
        }
    }

}
