// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dns.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetManagedZonesManagedZone extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedZonesManagedZone Empty = new GetManagedZonesManagedZone();

    /**
     * A textual description field.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return A textual description field.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * The fully qualified DNS name of this zone.
     * 
     */
    @Import(name="dnsName", required=true)
    private String dnsName;

    /**
     * @return The fully qualified DNS name of this zone.
     * 
     */
    public String dnsName() {
        return this.dnsName;
    }

    /**
     * DNS managed zone identifier
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return DNS managed zone identifier
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * Unique identifier for the resource; defined by the server.
     * 
     */
    @Import(name="managedZoneId", required=true)
    private Integer managedZoneId;

    /**
     * @return Unique identifier for the resource; defined by the server.
     * 
     */
    public Integer managedZoneId() {
        return this.managedZoneId;
    }

    /**
     * A unique name for the resource.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return A unique name for the resource.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The list of nameservers that will be authoritative for this domain. Use NS records to redirect from your DNS provider to these names, thus making Google Cloud DNS authoritative for this zone.
     * 
     */
    @Import(name="nameServers", required=true)
    private List<String> nameServers;

    /**
     * @return The list of nameservers that will be authoritative for this domain. Use NS records to redirect from your DNS provider to these names, thus making Google Cloud DNS authoritative for this zone.
     * 
     */
    public List<String> nameServers() {
        return this.nameServers;
    }

    /**
     * The ID of the project containing Google Cloud DNS zones. If this is not provided the default project will be used.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    /**
     * @return The ID of the project containing Google Cloud DNS zones. If this is not provided the default project will be used.
     * 
     */
    public String project() {
        return this.project;
    }

    /**
     * The zone&#39;s visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.
     * 
     */
    @Import(name="visibility", required=true)
    private String visibility;

    /**
     * @return The zone&#39;s visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.
     * 
     */
    public String visibility() {
        return this.visibility;
    }

    private GetManagedZonesManagedZone() {}

    private GetManagedZonesManagedZone(GetManagedZonesManagedZone $) {
        this.description = $.description;
        this.dnsName = $.dnsName;
        this.id = $.id;
        this.managedZoneId = $.managedZoneId;
        this.name = $.name;
        this.nameServers = $.nameServers;
        this.project = $.project;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedZonesManagedZone defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedZonesManagedZone $;

        public Builder() {
            $ = new GetManagedZonesManagedZone();
        }

        public Builder(GetManagedZonesManagedZone defaults) {
            $ = new GetManagedZonesManagedZone(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A textual description field.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param dnsName The fully qualified DNS name of this zone.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(String dnsName) {
            $.dnsName = dnsName;
            return this;
        }

        /**
         * @param id DNS managed zone identifier
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param managedZoneId Unique identifier for the resource; defined by the server.
         * 
         * @return builder
         * 
         */
        public Builder managedZoneId(Integer managedZoneId) {
            $.managedZoneId = managedZoneId;
            return this;
        }

        /**
         * @param name A unique name for the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param nameServers The list of nameservers that will be authoritative for this domain. Use NS records to redirect from your DNS provider to these names, thus making Google Cloud DNS authoritative for this zone.
         * 
         * @return builder
         * 
         */
        public Builder nameServers(List<String> nameServers) {
            $.nameServers = nameServers;
            return this;
        }

        /**
         * @param nameServers The list of nameservers that will be authoritative for this domain. Use NS records to redirect from your DNS provider to these names, thus making Google Cloud DNS authoritative for this zone.
         * 
         * @return builder
         * 
         */
        public Builder nameServers(String... nameServers) {
            return nameServers(List.of(nameServers));
        }

        /**
         * @param project The ID of the project containing Google Cloud DNS zones. If this is not provided the default project will be used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            $.project = project;
            return this;
        }

        /**
         * @param visibility The zone&#39;s visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.
         * 
         * @return builder
         * 
         */
        public Builder visibility(String visibility) {
            $.visibility = visibility;
            return this;
        }

        public GetManagedZonesManagedZone build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("GetManagedZonesManagedZone", "description");
            }
            if ($.dnsName == null) {
                throw new MissingRequiredPropertyException("GetManagedZonesManagedZone", "dnsName");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetManagedZonesManagedZone", "id");
            }
            if ($.managedZoneId == null) {
                throw new MissingRequiredPropertyException("GetManagedZonesManagedZone", "managedZoneId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetManagedZonesManagedZone", "name");
            }
            if ($.nameServers == null) {
                throw new MissingRequiredPropertyException("GetManagedZonesManagedZone", "nameServers");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("GetManagedZonesManagedZone", "project");
            }
            if ($.visibility == null) {
                throw new MissingRequiredPropertyException("GetManagedZonesManagedZone", "visibility");
            }
            return $;
        }
    }

}
