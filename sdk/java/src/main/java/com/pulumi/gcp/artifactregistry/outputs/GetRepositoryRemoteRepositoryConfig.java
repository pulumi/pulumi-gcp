// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.artifactregistry.outputs.GetRepositoryRemoteRepositoryConfigDockerRepository;
import com.pulumi.gcp.artifactregistry.outputs.GetRepositoryRemoteRepositoryConfigMavenRepository;
import com.pulumi.gcp.artifactregistry.outputs.GetRepositoryRemoteRepositoryConfigNpmRepository;
import com.pulumi.gcp.artifactregistry.outputs.GetRepositoryRemoteRepositoryConfigPythonRepository;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRepositoryRemoteRepositoryConfig {
    private String description;
    private List<GetRepositoryRemoteRepositoryConfigDockerRepository> dockerRepositories;
    private List<GetRepositoryRemoteRepositoryConfigMavenRepository> mavenRepositories;
    private List<GetRepositoryRemoteRepositoryConfigNpmRepository> npmRepositories;
    private List<GetRepositoryRemoteRepositoryConfigPythonRepository> pythonRepositories;

    private GetRepositoryRemoteRepositoryConfig() {}
    public String description() {
        return this.description;
    }
    public List<GetRepositoryRemoteRepositoryConfigDockerRepository> dockerRepositories() {
        return this.dockerRepositories;
    }
    public List<GetRepositoryRemoteRepositoryConfigMavenRepository> mavenRepositories() {
        return this.mavenRepositories;
    }
    public List<GetRepositoryRemoteRepositoryConfigNpmRepository> npmRepositories() {
        return this.npmRepositories;
    }
    public List<GetRepositoryRemoteRepositoryConfigPythonRepository> pythonRepositories() {
        return this.pythonRepositories;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryRemoteRepositoryConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private List<GetRepositoryRemoteRepositoryConfigDockerRepository> dockerRepositories;
        private List<GetRepositoryRemoteRepositoryConfigMavenRepository> mavenRepositories;
        private List<GetRepositoryRemoteRepositoryConfigNpmRepository> npmRepositories;
        private List<GetRepositoryRemoteRepositoryConfigPythonRepository> pythonRepositories;
        public Builder() {}
        public Builder(GetRepositoryRemoteRepositoryConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.dockerRepositories = defaults.dockerRepositories;
    	      this.mavenRepositories = defaults.mavenRepositories;
    	      this.npmRepositories = defaults.npmRepositories;
    	      this.pythonRepositories = defaults.pythonRepositories;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder dockerRepositories(List<GetRepositoryRemoteRepositoryConfigDockerRepository> dockerRepositories) {
            this.dockerRepositories = Objects.requireNonNull(dockerRepositories);
            return this;
        }
        public Builder dockerRepositories(GetRepositoryRemoteRepositoryConfigDockerRepository... dockerRepositories) {
            return dockerRepositories(List.of(dockerRepositories));
        }
        @CustomType.Setter
        public Builder mavenRepositories(List<GetRepositoryRemoteRepositoryConfigMavenRepository> mavenRepositories) {
            this.mavenRepositories = Objects.requireNonNull(mavenRepositories);
            return this;
        }
        public Builder mavenRepositories(GetRepositoryRemoteRepositoryConfigMavenRepository... mavenRepositories) {
            return mavenRepositories(List.of(mavenRepositories));
        }
        @CustomType.Setter
        public Builder npmRepositories(List<GetRepositoryRemoteRepositoryConfigNpmRepository> npmRepositories) {
            this.npmRepositories = Objects.requireNonNull(npmRepositories);
            return this;
        }
        public Builder npmRepositories(GetRepositoryRemoteRepositoryConfigNpmRepository... npmRepositories) {
            return npmRepositories(List.of(npmRepositories));
        }
        @CustomType.Setter
        public Builder pythonRepositories(List<GetRepositoryRemoteRepositoryConfigPythonRepository> pythonRepositories) {
            this.pythonRepositories = Objects.requireNonNull(pythonRepositories);
            return this;
        }
        public Builder pythonRepositories(GetRepositoryRemoteRepositoryConfigPythonRepository... pythonRepositories) {
            return pythonRepositories(List.of(pythonRepositories));
        }
        public GetRepositoryRemoteRepositoryConfig build() {
            final var o = new GetRepositoryRemoteRepositoryConfig();
            o.description = description;
            o.dockerRepositories = dockerRepositories;
            o.mavenRepositories = mavenRepositories;
            o.npmRepositories = npmRepositories;
            o.pythonRepositories = pythonRepositories;
            return o;
        }
    }
}
