// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureSpecRbacrolebindingactuationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureSpecRbacrolebindingactuationArgs Empty = new FeatureSpecRbacrolebindingactuationArgs();

    /**
     * The list of allowed custom roles (ClusterRoles). If a custom role is not part of this list, it cannot be used in a fleet scope RBACRoleBinding. If a custom role in this list is in use, it cannot be removed from the list until the scope RBACRolebindings using it are deleted.
     * 
     */
    @Import(name="allowedCustomRoles")
    private @Nullable Output<List<String>> allowedCustomRoles;

    /**
     * @return The list of allowed custom roles (ClusterRoles). If a custom role is not part of this list, it cannot be used in a fleet scope RBACRoleBinding. If a custom role in this list is in use, it cannot be removed from the list until the scope RBACRolebindings using it are deleted.
     * 
     */
    public Optional<Output<List<String>>> allowedCustomRoles() {
        return Optional.ofNullable(this.allowedCustomRoles);
    }

    private FeatureSpecRbacrolebindingactuationArgs() {}

    private FeatureSpecRbacrolebindingactuationArgs(FeatureSpecRbacrolebindingactuationArgs $) {
        this.allowedCustomRoles = $.allowedCustomRoles;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureSpecRbacrolebindingactuationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureSpecRbacrolebindingactuationArgs $;

        public Builder() {
            $ = new FeatureSpecRbacrolebindingactuationArgs();
        }

        public Builder(FeatureSpecRbacrolebindingactuationArgs defaults) {
            $ = new FeatureSpecRbacrolebindingactuationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedCustomRoles The list of allowed custom roles (ClusterRoles). If a custom role is not part of this list, it cannot be used in a fleet scope RBACRoleBinding. If a custom role in this list is in use, it cannot be removed from the list until the scope RBACRolebindings using it are deleted.
         * 
         * @return builder
         * 
         */
        public Builder allowedCustomRoles(@Nullable Output<List<String>> allowedCustomRoles) {
            $.allowedCustomRoles = allowedCustomRoles;
            return this;
        }

        /**
         * @param allowedCustomRoles The list of allowed custom roles (ClusterRoles). If a custom role is not part of this list, it cannot be used in a fleet scope RBACRoleBinding. If a custom role in this list is in use, it cannot be removed from the list until the scope RBACRolebindings using it are deleted.
         * 
         * @return builder
         * 
         */
        public Builder allowedCustomRoles(List<String> allowedCustomRoles) {
            return allowedCustomRoles(Output.of(allowedCustomRoles));
        }

        /**
         * @param allowedCustomRoles The list of allowed custom roles (ClusterRoles). If a custom role is not part of this list, it cannot be used in a fleet scope RBACRoleBinding. If a custom role in this list is in use, it cannot be removed from the list until the scope RBACRolebindings using it are deleted.
         * 
         * @return builder
         * 
         */
        public Builder allowedCustomRoles(String... allowedCustomRoles) {
            return allowedCustomRoles(List.of(allowedCustomRoles));
        }

        public FeatureSpecRbacrolebindingactuationArgs build() {
            return $;
        }
    }

}
