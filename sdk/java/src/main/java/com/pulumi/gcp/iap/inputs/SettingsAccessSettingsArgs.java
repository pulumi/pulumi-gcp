// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iap.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.iap.inputs.SettingsAccessSettingsAllowedDomainsSettingsArgs;
import com.pulumi.gcp.iap.inputs.SettingsAccessSettingsCorsSettingsArgs;
import com.pulumi.gcp.iap.inputs.SettingsAccessSettingsGcipSettingsArgs;
import com.pulumi.gcp.iap.inputs.SettingsAccessSettingsOauthSettingsArgs;
import com.pulumi.gcp.iap.inputs.SettingsAccessSettingsReauthSettingsArgs;
import com.pulumi.gcp.iap.inputs.SettingsAccessSettingsWorkforceIdentitySettingsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SettingsAccessSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SettingsAccessSettingsArgs Empty = new SettingsAccessSettingsArgs();

    /**
     * Settings to configure and enable allowed domains.
     * Structure is documented below.
     * 
     */
    @Import(name="allowedDomainsSettings")
    private @Nullable Output<SettingsAccessSettingsAllowedDomainsSettingsArgs> allowedDomainsSettings;

    /**
     * @return Settings to configure and enable allowed domains.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SettingsAccessSettingsAllowedDomainsSettingsArgs>> allowedDomainsSettings() {
        return Optional.ofNullable(this.allowedDomainsSettings);
    }

    /**
     * Configuration to allow cross-origin requests via IAP.
     * Structure is documented below.
     * 
     */
    @Import(name="corsSettings")
    private @Nullable Output<SettingsAccessSettingsCorsSettingsArgs> corsSettings;

    /**
     * @return Configuration to allow cross-origin requests via IAP.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SettingsAccessSettingsCorsSettingsArgs>> corsSettings() {
        return Optional.ofNullable(this.corsSettings);
    }

    /**
     * GCIP claims and endpoint configurations for 3p identity providers.
     * * Enabling gcipSetting significantly changes the way IAP authenticates users. Identity Platform does not support IAM, so IAP will not enforce any IAM policies for requests to your application.
     *   Structure is documented below.
     * 
     */
    @Import(name="gcipSettings")
    private @Nullable Output<SettingsAccessSettingsGcipSettingsArgs> gcipSettings;

    /**
     * @return GCIP claims and endpoint configurations for 3p identity providers.
     * * Enabling gcipSetting significantly changes the way IAP authenticates users. Identity Platform does not support IAM, so IAP will not enforce any IAM policies for requests to your application.
     *   Structure is documented below.
     * 
     */
    public Optional<Output<SettingsAccessSettingsGcipSettingsArgs>> gcipSettings() {
        return Optional.ofNullable(this.gcipSettings);
    }

    /**
     * Identity sources that IAP can use to authenticate the end user. Only one identity source
     * can be configured. The possible values are:
     * * `WORKFORCE_IDENTITY_FEDERATION`: Use external identities set up on Google Cloud Workforce
     *   Identity Federation.
     *   Each value may be one of: `WORKFORCE_IDENTITY_FEDERATION`.
     * 
     */
    @Import(name="identitySources")
    private @Nullable Output<List<String>> identitySources;

    /**
     * @return Identity sources that IAP can use to authenticate the end user. Only one identity source
     * can be configured. The possible values are:
     * * `WORKFORCE_IDENTITY_FEDERATION`: Use external identities set up on Google Cloud Workforce
     *   Identity Federation.
     *   Each value may be one of: `WORKFORCE_IDENTITY_FEDERATION`.
     * 
     */
    public Optional<Output<List<String>>> identitySources() {
        return Optional.ofNullable(this.identitySources);
    }

    /**
     * Settings to configure IAP&#39;s OAuth behavior.
     * Structure is documented below.
     * 
     */
    @Import(name="oauthSettings")
    private @Nullable Output<SettingsAccessSettingsOauthSettingsArgs> oauthSettings;

    /**
     * @return Settings to configure IAP&#39;s OAuth behavior.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SettingsAccessSettingsOauthSettingsArgs>> oauthSettings() {
        return Optional.ofNullable(this.oauthSettings);
    }

    /**
     * Settings to configure reauthentication policies in IAP.
     * Structure is documented below.
     * 
     */
    @Import(name="reauthSettings")
    private @Nullable Output<SettingsAccessSettingsReauthSettingsArgs> reauthSettings;

    /**
     * @return Settings to configure reauthentication policies in IAP.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SettingsAccessSettingsReauthSettingsArgs>> reauthSettings() {
        return Optional.ofNullable(this.reauthSettings);
    }

    /**
     * Settings to configure the workforce identity federation, including workforce pools
     * and OAuth 2.0 settings.
     * Structure is documented below.
     * 
     */
    @Import(name="workforceIdentitySettings")
    private @Nullable Output<SettingsAccessSettingsWorkforceIdentitySettingsArgs> workforceIdentitySettings;

    /**
     * @return Settings to configure the workforce identity federation, including workforce pools
     * and OAuth 2.0 settings.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SettingsAccessSettingsWorkforceIdentitySettingsArgs>> workforceIdentitySettings() {
        return Optional.ofNullable(this.workforceIdentitySettings);
    }

    private SettingsAccessSettingsArgs() {}

    private SettingsAccessSettingsArgs(SettingsAccessSettingsArgs $) {
        this.allowedDomainsSettings = $.allowedDomainsSettings;
        this.corsSettings = $.corsSettings;
        this.gcipSettings = $.gcipSettings;
        this.identitySources = $.identitySources;
        this.oauthSettings = $.oauthSettings;
        this.reauthSettings = $.reauthSettings;
        this.workforceIdentitySettings = $.workforceIdentitySettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SettingsAccessSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SettingsAccessSettingsArgs $;

        public Builder() {
            $ = new SettingsAccessSettingsArgs();
        }

        public Builder(SettingsAccessSettingsArgs defaults) {
            $ = new SettingsAccessSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedDomainsSettings Settings to configure and enable allowed domains.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder allowedDomainsSettings(@Nullable Output<SettingsAccessSettingsAllowedDomainsSettingsArgs> allowedDomainsSettings) {
            $.allowedDomainsSettings = allowedDomainsSettings;
            return this;
        }

        /**
         * @param allowedDomainsSettings Settings to configure and enable allowed domains.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder allowedDomainsSettings(SettingsAccessSettingsAllowedDomainsSettingsArgs allowedDomainsSettings) {
            return allowedDomainsSettings(Output.of(allowedDomainsSettings));
        }

        /**
         * @param corsSettings Configuration to allow cross-origin requests via IAP.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder corsSettings(@Nullable Output<SettingsAccessSettingsCorsSettingsArgs> corsSettings) {
            $.corsSettings = corsSettings;
            return this;
        }

        /**
         * @param corsSettings Configuration to allow cross-origin requests via IAP.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder corsSettings(SettingsAccessSettingsCorsSettingsArgs corsSettings) {
            return corsSettings(Output.of(corsSettings));
        }

        /**
         * @param gcipSettings GCIP claims and endpoint configurations for 3p identity providers.
         * * Enabling gcipSetting significantly changes the way IAP authenticates users. Identity Platform does not support IAM, so IAP will not enforce any IAM policies for requests to your application.
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcipSettings(@Nullable Output<SettingsAccessSettingsGcipSettingsArgs> gcipSettings) {
            $.gcipSettings = gcipSettings;
            return this;
        }

        /**
         * @param gcipSettings GCIP claims and endpoint configurations for 3p identity providers.
         * * Enabling gcipSetting significantly changes the way IAP authenticates users. Identity Platform does not support IAM, so IAP will not enforce any IAM policies for requests to your application.
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcipSettings(SettingsAccessSettingsGcipSettingsArgs gcipSettings) {
            return gcipSettings(Output.of(gcipSettings));
        }

        /**
         * @param identitySources Identity sources that IAP can use to authenticate the end user. Only one identity source
         * can be configured. The possible values are:
         * * `WORKFORCE_IDENTITY_FEDERATION`: Use external identities set up on Google Cloud Workforce
         *   Identity Federation.
         *   Each value may be one of: `WORKFORCE_IDENTITY_FEDERATION`.
         * 
         * @return builder
         * 
         */
        public Builder identitySources(@Nullable Output<List<String>> identitySources) {
            $.identitySources = identitySources;
            return this;
        }

        /**
         * @param identitySources Identity sources that IAP can use to authenticate the end user. Only one identity source
         * can be configured. The possible values are:
         * * `WORKFORCE_IDENTITY_FEDERATION`: Use external identities set up on Google Cloud Workforce
         *   Identity Federation.
         *   Each value may be one of: `WORKFORCE_IDENTITY_FEDERATION`.
         * 
         * @return builder
         * 
         */
        public Builder identitySources(List<String> identitySources) {
            return identitySources(Output.of(identitySources));
        }

        /**
         * @param identitySources Identity sources that IAP can use to authenticate the end user. Only one identity source
         * can be configured. The possible values are:
         * * `WORKFORCE_IDENTITY_FEDERATION`: Use external identities set up on Google Cloud Workforce
         *   Identity Federation.
         *   Each value may be one of: `WORKFORCE_IDENTITY_FEDERATION`.
         * 
         * @return builder
         * 
         */
        public Builder identitySources(String... identitySources) {
            return identitySources(List.of(identitySources));
        }

        /**
         * @param oauthSettings Settings to configure IAP&#39;s OAuth behavior.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oauthSettings(@Nullable Output<SettingsAccessSettingsOauthSettingsArgs> oauthSettings) {
            $.oauthSettings = oauthSettings;
            return this;
        }

        /**
         * @param oauthSettings Settings to configure IAP&#39;s OAuth behavior.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oauthSettings(SettingsAccessSettingsOauthSettingsArgs oauthSettings) {
            return oauthSettings(Output.of(oauthSettings));
        }

        /**
         * @param reauthSettings Settings to configure reauthentication policies in IAP.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder reauthSettings(@Nullable Output<SettingsAccessSettingsReauthSettingsArgs> reauthSettings) {
            $.reauthSettings = reauthSettings;
            return this;
        }

        /**
         * @param reauthSettings Settings to configure reauthentication policies in IAP.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder reauthSettings(SettingsAccessSettingsReauthSettingsArgs reauthSettings) {
            return reauthSettings(Output.of(reauthSettings));
        }

        /**
         * @param workforceIdentitySettings Settings to configure the workforce identity federation, including workforce pools
         * and OAuth 2.0 settings.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder workforceIdentitySettings(@Nullable Output<SettingsAccessSettingsWorkforceIdentitySettingsArgs> workforceIdentitySettings) {
            $.workforceIdentitySettings = workforceIdentitySettings;
            return this;
        }

        /**
         * @param workforceIdentitySettings Settings to configure the workforce identity federation, including workforce pools
         * and OAuth 2.0 settings.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder workforceIdentitySettings(SettingsAccessSettingsWorkforceIdentitySettingsArgs workforceIdentitySettings) {
            return workforceIdentitySettings(Output.of(workforceIdentitySettings));
        }

        public SettingsAccessSettingsArgs build() {
            return $;
        }
    }

}
