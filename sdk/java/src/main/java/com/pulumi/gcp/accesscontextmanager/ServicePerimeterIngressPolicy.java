// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.accesscontextmanager.ServicePerimeterIngressPolicyArgs;
import com.pulumi.gcp.accesscontextmanager.inputs.ServicePerimeterIngressPolicyState;
import com.pulumi.gcp.accesscontextmanager.outputs.ServicePerimeterIngressPolicyIngressFrom;
import com.pulumi.gcp.accesscontextmanager.outputs.ServicePerimeterIngressPolicyIngressTo;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manage a single IngressPolicy in the status (enforced) configuration for a service perimeter.
 * IngressPolicies match requests based on ingressFrom and ingressTo stanzas. For an ingress policy to match,
 * both the ingressFrom and ingressTo stanzas must be matched. If an IngressPolicy matches a request,
 * the request is allowed through the perimeter boundary from outside the perimeter.
 * For example, access from the internet can be allowed either based on an AccessLevel or,
 * for traffic hosted on Google Cloud, the project of the source network.
 * For access from private networks, using the project of the hosting network is required.
 * Individual ingress policies can be limited by restricting which services and/
 * or actions they match using the ingressTo field.
 * 
 * &gt; **Note:** By default, updates to this resource will remove the IngressPolicy from the
 * from the perimeter and add it back in a non-atomic manner. To ensure that the new IngressPolicy
 * is added before the old one is removed, add a `lifecycle` block with `createBeforeDestroy = true` to this resource.
 * **Note:** If this resource is used alongside a `gcp.accesscontextmanager.ServicePerimeter` resource,
 * the service perimeter resource must have a `lifecycle` block with `ignoreChanges = [status[0].ingress_policies]` so
 * they don&#39;t fight over which ingress rules should be in the policy.
 * 
 * To get more information about ServicePerimeterIngressPolicy, see:
 * 
 * * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters#ingresspolicy)
 * * How-to Guides
 *     * [Guide to Ingress and Egress Rules](https://cloud.google.com/vpc-service-controls/docs/ingress-egress-rules)
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="gcp:accesscontextmanager/servicePerimeterIngressPolicy:ServicePerimeterIngressPolicy")
public class ServicePerimeterIngressPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Access Policy this resource belongs to.
     * 
     */
    @Export(name="accessPolicyId", refs={String.class}, tree="[0]")
    private Output<String> accessPolicyId;

    /**
     * @return The name of the Access Policy this resource belongs to.
     * 
     */
    public Output<String> accessPolicyId() {
        return this.accessPolicyId;
    }
    /**
     * The perimeter etag is internally used to prevent overwriting the list of policies on PATCH calls. It is retrieved from the same GET perimeter API call that&#39;s used to get the current list of policies. The policy defined in this resource is added or removed from that list, and then this etag is sent with the PATCH call along with the updated policies.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return The perimeter etag is internally used to prevent overwriting the list of policies on PATCH calls. It is retrieved from the same GET perimeter API call that&#39;s used to get the current list of policies. The policy defined in this resource is added or removed from that list, and then this etag is sent with the PATCH call along with the updated policies.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Defines the conditions on the source of a request causing this `IngressPolicy`
     * to apply.
     * Structure is documented below.
     * 
     */
    @Export(name="ingressFrom", refs={ServicePerimeterIngressPolicyIngressFrom.class}, tree="[0]")
    private Output</* @Nullable */ ServicePerimeterIngressPolicyIngressFrom> ingressFrom;

    /**
     * @return Defines the conditions on the source of a request causing this `IngressPolicy`
     * to apply.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ServicePerimeterIngressPolicyIngressFrom>> ingressFrom() {
        return Codegen.optional(this.ingressFrom);
    }
    /**
     * Defines the conditions on the `ApiOperation` and request destination that cause
     * this `IngressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    @Export(name="ingressTo", refs={ServicePerimeterIngressPolicyIngressTo.class}, tree="[0]")
    private Output</* @Nullable */ ServicePerimeterIngressPolicyIngressTo> ingressTo;

    /**
     * @return Defines the conditions on the `ApiOperation` and request destination that cause
     * this `IngressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ServicePerimeterIngressPolicyIngressTo>> ingressTo() {
        return Codegen.optional(this.ingressTo);
    }
    /**
     * The name of the Service Perimeter to add this resource to.
     * 
     */
    @Export(name="perimeter", refs={String.class}, tree="[0]")
    private Output<String> perimeter;

    /**
     * @return The name of the Service Perimeter to add this resource to.
     * 
     */
    public Output<String> perimeter() {
        return this.perimeter;
    }
    /**
     * Human readable title. Must be unique within the perimeter. Does not affect behavior.
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> title;

    /**
     * @return Human readable title. Must be unique within the perimeter. Does not affect behavior.
     * 
     */
    public Output<Optional<String>> title() {
        return Codegen.optional(this.title);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServicePerimeterIngressPolicy(java.lang.String name) {
        this(name, ServicePerimeterIngressPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServicePerimeterIngressPolicy(java.lang.String name, ServicePerimeterIngressPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServicePerimeterIngressPolicy(java.lang.String name, ServicePerimeterIngressPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:accesscontextmanager/servicePerimeterIngressPolicy:ServicePerimeterIngressPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServicePerimeterIngressPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable ServicePerimeterIngressPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:accesscontextmanager/servicePerimeterIngressPolicy:ServicePerimeterIngressPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static ServicePerimeterIngressPolicyArgs makeArgs(ServicePerimeterIngressPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServicePerimeterIngressPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServicePerimeterIngressPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable ServicePerimeterIngressPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServicePerimeterIngressPolicy(name, id, state, options);
    }
}
