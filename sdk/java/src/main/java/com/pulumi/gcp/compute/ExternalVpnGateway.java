// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.ExternalVpnGatewayArgs;
import com.pulumi.gcp.compute.inputs.ExternalVpnGatewayState;
import com.pulumi.gcp.compute.outputs.ExternalVpnGatewayInterface;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a VPN gateway managed outside of GCP.
 * 
 * To get more information about ExternalVpnGateway, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/externalVpnGateways)
 * 
 * ## Example Usage
 * ### External Vpn Gateway
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var network = new Network(&#34;network&#34;, NetworkArgs.builder()        
 *             .routingMode(&#34;GLOBAL&#34;)
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var haGateway = new HaVpnGateway(&#34;haGateway&#34;, HaVpnGatewayArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .network(network.id())
 *             .build());
 * 
 *         var externalGateway = new ExternalVpnGateway(&#34;externalGateway&#34;, ExternalVpnGatewayArgs.builder()        
 *             .redundancyType(&#34;SINGLE_IP_INTERNALLY_REDUNDANT&#34;)
 *             .description(&#34;An externally managed VPN gateway&#34;)
 *             .interfaces(ExternalVpnGatewayInterfaceArgs.builder()
 *                 .id(0)
 *                 .ipAddress(&#34;8.8.8.8&#34;)
 *                 .build())
 *             .build());
 * 
 *         var networkSubnet1 = new Subnetwork(&#34;networkSubnet1&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.1.0/24&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .network(network.id())
 *             .build());
 * 
 *         var networkSubnet2 = new Subnetwork(&#34;networkSubnet2&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.2.0/24&#34;)
 *             .region(&#34;us-west1&#34;)
 *             .network(network.id())
 *             .build());
 * 
 *         var router1 = new Router(&#34;router1&#34;, RouterArgs.builder()        
 *             .network(network.name())
 *             .bgp(RouterBgpArgs.builder()
 *                 .asn(64514)
 *                 .build())
 *             .build());
 * 
 *         var tunnel1 = new VPNTunnel(&#34;tunnel1&#34;, VPNTunnelArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .vpnGateway(haGateway.id())
 *             .peerExternalGateway(externalGateway.id())
 *             .peerExternalGatewayInterface(0)
 *             .sharedSecret(&#34;a secret message&#34;)
 *             .router(router1.id())
 *             .vpnGatewayInterface(0)
 *             .build());
 * 
 *         var tunnel2 = new VPNTunnel(&#34;tunnel2&#34;, VPNTunnelArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .vpnGateway(haGateway.id())
 *             .peerExternalGateway(externalGateway.id())
 *             .peerExternalGatewayInterface(0)
 *             .sharedSecret(&#34;a secret message&#34;)
 *             .router(router1.id().apply(id -&gt; String.format(&#34; %s&#34;, id)))
 *             .vpnGatewayInterface(1)
 *             .build());
 * 
 *         var router1Interface1 = new RouterInterface(&#34;router1Interface1&#34;, RouterInterfaceArgs.builder()        
 *             .router(router1.name())
 *             .region(&#34;us-central1&#34;)
 *             .ipRange(&#34;169.254.0.1/30&#34;)
 *             .vpnTunnel(tunnel1.name())
 *             .build());
 * 
 *         var router1Peer1 = new RouterPeer(&#34;router1Peer1&#34;, RouterPeerArgs.builder()        
 *             .router(router1.name())
 *             .region(&#34;us-central1&#34;)
 *             .peerIpAddress(&#34;169.254.0.2&#34;)
 *             .peerAsn(64515)
 *             .advertisedRoutePriority(100)
 *             .interface_(router1Interface1.name())
 *             .build());
 * 
 *         var router1Interface2 = new RouterInterface(&#34;router1Interface2&#34;, RouterInterfaceArgs.builder()        
 *             .router(router1.name())
 *             .region(&#34;us-central1&#34;)
 *             .ipRange(&#34;169.254.1.1/30&#34;)
 *             .vpnTunnel(tunnel2.name())
 *             .build());
 * 
 *         var router1Peer2 = new RouterPeer(&#34;router1Peer2&#34;, RouterPeerArgs.builder()        
 *             .router(router1.name())
 *             .region(&#34;us-central1&#34;)
 *             .peerIpAddress(&#34;169.254.1.2&#34;)
 *             .peerAsn(64515)
 *             .advertisedRoutePriority(100)
 *             .interface_(router1Interface2.name())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ExternalVpnGateway can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:compute/externalVpnGateway:ExternalVpnGateway default projects/{{project}}/global/externalVpnGateways/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/externalVpnGateway:ExternalVpnGateway default {{project}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/externalVpnGateway:ExternalVpnGateway default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/externalVpnGateway:ExternalVpnGateway")
public class ExternalVpnGateway extends com.pulumi.resources.CustomResource {
    /**
     * An optional description of this resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A list of interfaces on this external VPN gateway.
     * Structure is documented below.
     * 
     */
    @Export(name="interfaces", type=List.class, parameters={ExternalVpnGatewayInterface.class})
    private Output</* @Nullable */ List<ExternalVpnGatewayInterface>> interfaces;

    /**
     * @return A list of interfaces on this external VPN gateway.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<ExternalVpnGatewayInterface>>> interfaces() {
        return Codegen.optional(this.interfaces);
    }
    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Indicates the redundancy type of this external VPN gateway
     * Possible values are `FOUR_IPS_REDUNDANCY`, `SINGLE_IP_INTERNALLY_REDUNDANT`, and `TWO_IPS_REDUNDANCY`.
     * 
     */
    @Export(name="redundancyType", type=String.class, parameters={})
    private Output</* @Nullable */ String> redundancyType;

    /**
     * @return Indicates the redundancy type of this external VPN gateway
     * Possible values are `FOUR_IPS_REDUNDANCY`, `SINGLE_IP_INTERNALLY_REDUNDANT`, and `TWO_IPS_REDUNDANCY`.
     * 
     */
    public Output<Optional<String>> redundancyType() {
        return Codegen.optional(this.redundancyType);
    }
    /**
     * The URI of the created resource.
     * 
     */
    @Export(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> selfLink() {
        return this.selfLink;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExternalVpnGateway(String name) {
        this(name, ExternalVpnGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExternalVpnGateway(String name, @Nullable ExternalVpnGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExternalVpnGateway(String name, @Nullable ExternalVpnGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/externalVpnGateway:ExternalVpnGateway", name, args == null ? ExternalVpnGatewayArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExternalVpnGateway(String name, Output<String> id, @Nullable ExternalVpnGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/externalVpnGateway:ExternalVpnGateway", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExternalVpnGateway get(String name, Output<String> id, @Nullable ExternalVpnGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExternalVpnGateway(name, id, state, options);
    }
}
