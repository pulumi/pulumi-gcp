// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkebackup;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.gkebackup.BackupPlanArgs;
import com.pulumi.gcp.gkebackup.inputs.BackupPlanState;
import com.pulumi.gcp.gkebackup.outputs.BackupPlanBackupConfig;
import com.pulumi.gcp.gkebackup.outputs.BackupPlanBackupSchedule;
import com.pulumi.gcp.gkebackup.outputs.BackupPlanRetentionPolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a Backup Plan instance.
 * 
 * To get more information about BackupPlan, see:
 * 
 * * [API documentation](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/projects.locations.backupPlans)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke)
 * 
 * ## Example Usage
 * ### Gkebackup Backupplan Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.container.Cluster;
 * import com.pulumi.gcp.container.ClusterArgs;
 * import com.pulumi.gcp.container.inputs.ClusterWorkloadIdentityConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterAddonsConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterAddonsConfigGkeBackupAgentConfigArgs;
 * import com.pulumi.gcp.gkebackup.BackupPlan;
 * import com.pulumi.gcp.gkebackup.BackupPlanArgs;
 * import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var primary = new Cluster(&#34;primary&#34;, ClusterArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .initialNodeCount(1)
 *             .workloadIdentityConfig(ClusterWorkloadIdentityConfigArgs.builder()
 *                 .workloadPool(&#34;my-project-name.svc.id.goog&#34;)
 *                 .build())
 *             .addonsConfig(ClusterAddonsConfigArgs.builder()
 *                 .gkeBackupAgentConfig(ClusterAddonsConfigGkeBackupAgentConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var basic = new BackupPlan(&#34;basic&#34;, BackupPlanArgs.builder()        
 *             .cluster(primary.id())
 *             .location(&#34;us-central1&#34;)
 *             .backupConfig(BackupPlanBackupConfigArgs.builder()
 *                 .includeVolumeData(true)
 *                 .includeSecrets(true)
 *                 .allNamespaces(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Gkebackup Backupplan Autopilot
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.container.Cluster;
 * import com.pulumi.gcp.container.ClusterArgs;
 * import com.pulumi.gcp.container.inputs.ClusterIpAllocationPolicyArgs;
 * import com.pulumi.gcp.container.inputs.ClusterReleaseChannelArgs;
 * import com.pulumi.gcp.container.inputs.ClusterAddonsConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterAddonsConfigGkeBackupAgentConfigArgs;
 * import com.pulumi.gcp.gkebackup.BackupPlan;
 * import com.pulumi.gcp.gkebackup.BackupPlanArgs;
 * import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var primary = new Cluster(&#34;primary&#34;, ClusterArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .enableAutopilot(true)
 *             .ipAllocationPolicy()
 *             .releaseChannel(ClusterReleaseChannelArgs.builder()
 *                 .channel(&#34;RAPID&#34;)
 *                 .build())
 *             .addonsConfig(ClusterAddonsConfigArgs.builder()
 *                 .gkeBackupAgentConfig(ClusterAddonsConfigGkeBackupAgentConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var autopilot = new BackupPlan(&#34;autopilot&#34;, BackupPlanArgs.builder()        
 *             .cluster(primary.id())
 *             .location(&#34;us-central1&#34;)
 *             .backupConfig(BackupPlanBackupConfigArgs.builder()
 *                 .includeVolumeData(true)
 *                 .includeSecrets(true)
 *                 .allNamespaces(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Gkebackup Backupplan Cmek
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.container.Cluster;
 * import com.pulumi.gcp.container.ClusterArgs;
 * import com.pulumi.gcp.container.inputs.ClusterWorkloadIdentityConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterAddonsConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterAddonsConfigGkeBackupAgentConfigArgs;
 * import com.pulumi.gcp.kms.KeyRing;
 * import com.pulumi.gcp.kms.KeyRingArgs;
 * import com.pulumi.gcp.kms.CryptoKey;
 * import com.pulumi.gcp.kms.CryptoKeyArgs;
 * import com.pulumi.gcp.gkebackup.BackupPlan;
 * import com.pulumi.gcp.gkebackup.BackupPlanArgs;
 * import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupConfigArgs;
 * import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupConfigSelectedNamespacesArgs;
 * import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupConfigEncryptionKeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var primary = new Cluster(&#34;primary&#34;, ClusterArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .initialNodeCount(1)
 *             .workloadIdentityConfig(ClusterWorkloadIdentityConfigArgs.builder()
 *                 .workloadPool(&#34;my-project-name.svc.id.goog&#34;)
 *                 .build())
 *             .addonsConfig(ClusterAddonsConfigArgs.builder()
 *                 .gkeBackupAgentConfig(ClusterAddonsConfigGkeBackupAgentConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var keyRing = new KeyRing(&#34;keyRing&#34;, KeyRingArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .build());
 * 
 *         var cryptoKey = new CryptoKey(&#34;cryptoKey&#34;, CryptoKeyArgs.builder()        
 *             .keyRing(keyRing.id())
 *             .build());
 * 
 *         var cmek = new BackupPlan(&#34;cmek&#34;, BackupPlanArgs.builder()        
 *             .cluster(primary.id())
 *             .location(&#34;us-central1&#34;)
 *             .backupConfig(BackupPlanBackupConfigArgs.builder()
 *                 .includeVolumeData(true)
 *                 .includeSecrets(true)
 *                 .selectedNamespaces(BackupPlanBackupConfigSelectedNamespacesArgs.builder()
 *                     .namespaces(                    
 *                         &#34;default&#34;,
 *                         &#34;test&#34;)
 *                     .build())
 *                 .encryptionKey(BackupPlanBackupConfigEncryptionKeyArgs.builder()
 *                     .gcpKmsEncryptionKey(cryptoKey.id())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Gkebackup Backupplan Full
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.container.Cluster;
 * import com.pulumi.gcp.container.ClusterArgs;
 * import com.pulumi.gcp.container.inputs.ClusterWorkloadIdentityConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterAddonsConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterAddonsConfigGkeBackupAgentConfigArgs;
 * import com.pulumi.gcp.gkebackup.BackupPlan;
 * import com.pulumi.gcp.gkebackup.BackupPlanArgs;
 * import com.pulumi.gcp.gkebackup.inputs.BackupPlanRetentionPolicyArgs;
 * import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupScheduleArgs;
 * import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupConfigArgs;
 * import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupConfigSelectedApplicationsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var primary = new Cluster(&#34;primary&#34;, ClusterArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .initialNodeCount(1)
 *             .workloadIdentityConfig(ClusterWorkloadIdentityConfigArgs.builder()
 *                 .workloadPool(&#34;my-project-name.svc.id.goog&#34;)
 *                 .build())
 *             .addonsConfig(ClusterAddonsConfigArgs.builder()
 *                 .gkeBackupAgentConfig(ClusterAddonsConfigGkeBackupAgentConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var full = new BackupPlan(&#34;full&#34;, BackupPlanArgs.builder()        
 *             .cluster(primary.id())
 *             .location(&#34;us-central1&#34;)
 *             .retentionPolicy(BackupPlanRetentionPolicyArgs.builder()
 *                 .backupDeleteLockDays(30)
 *                 .backupRetainDays(180)
 *                 .build())
 *             .backupSchedule(BackupPlanBackupScheduleArgs.builder()
 *                 .cronSchedule(&#34;0 9 * * 1&#34;)
 *                 .build())
 *             .backupConfig(BackupPlanBackupConfigArgs.builder()
 *                 .includeVolumeData(true)
 *                 .includeSecrets(true)
 *                 .selectedApplications(BackupPlanBackupConfigSelectedApplicationsArgs.builder()
 *                     .namespacedNames(                    
 *                         BackupPlanBackupConfigSelectedApplicationsNamespacedNameArgs.builder()
 *                             .name(&#34;app1&#34;)
 *                             .namespace(&#34;ns1&#34;)
 *                             .build(),
 *                         BackupPlanBackupConfigSelectedApplicationsNamespacedNameArgs.builder()
 *                             .name(&#34;app2&#34;)
 *                             .namespace(&#34;ns2&#34;)
 *                             .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * BackupPlan can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:gkebackup/backupPlan:BackupPlan default projects/{{project}}/locations/{{location}}/backupPlans/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:gkebackup/backupPlan:BackupPlan default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:gkebackup/backupPlan:BackupPlan default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:gkebackup/backupPlan:BackupPlan")
public class BackupPlan extends com.pulumi.resources.CustomResource {
    /**
     * Defines the configuration of Backups created via this BackupPlan.
     * Structure is documented below.
     * 
     */
    @Export(name="backupConfig", type=BackupPlanBackupConfig.class, parameters={})
    private Output</* @Nullable */ BackupPlanBackupConfig> backupConfig;

    /**
     * @return Defines the configuration of Backups created via this BackupPlan.
     * Structure is documented below.
     * 
     */
    public Output<Optional<BackupPlanBackupConfig>> backupConfig() {
        return Codegen.optional(this.backupConfig);
    }
    /**
     * Defines a schedule for automatic Backup creation via this BackupPlan.
     * Structure is documented below.
     * 
     */
    @Export(name="backupSchedule", type=BackupPlanBackupSchedule.class, parameters={})
    private Output</* @Nullable */ BackupPlanBackupSchedule> backupSchedule;

    /**
     * @return Defines a schedule for automatic Backup creation via this BackupPlan.
     * Structure is documented below.
     * 
     */
    public Output<Optional<BackupPlanBackupSchedule>> backupSchedule() {
        return Codegen.optional(this.backupSchedule);
    }
    /**
     * The source cluster from which Backups will be created via this BackupPlan.
     * 
     */
    @Export(name="cluster", type=String.class, parameters={})
    private Output<String> cluster;

    /**
     * @return The source cluster from which Backups will be created via this BackupPlan.
     * 
     */
    public Output<String> cluster() {
        return this.cluster;
    }
    /**
     * This flag indicates whether this BackupPlan has been deactivated.
     * Setting this field to True locks the BackupPlan such that no further updates will be allowed
     * (except deletes), including the deactivated field itself. It also prevents any new Backups
     * from being created via this BackupPlan (including scheduled Backups).
     * 
     */
    @Export(name="deactivated", type=Boolean.class, parameters={})
    private Output<Boolean> deactivated;

    /**
     * @return This flag indicates whether this BackupPlan has been deactivated.
     * Setting this field to True locks the BackupPlan such that no further updates will be allowed
     * (except deletes), including the deactivated field itself. It also prevents any new Backups
     * from being created via this BackupPlan (including scheduled Backups).
     * 
     */
    public Output<Boolean> deactivated() {
        return this.deactivated;
    }
    /**
     * User specified descriptive string for this BackupPlan.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return User specified descriptive string for this BackupPlan.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup plan from
     * overwriting each other. It is strongly suggested that systems make use of the &#39;etag&#39; in the read-modify-write cycle to
     * perform BackupPlan updates in order to avoid race conditions: An etag is returned in the response to backupPlans.get,
     * and systems are expected to put that etag in the request to backupPlans.patch or backupPlans.delete to ensure that their
     * change will be applied to the same version of the resource.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup plan from
     * overwriting each other. It is strongly suggested that systems make use of the &#39;etag&#39; in the read-modify-write cycle to
     * perform BackupPlan updates in order to avoid race conditions: An etag is returned in the response to backupPlans.get,
     * and systems are expected to put that etag in the request to backupPlans.patch or backupPlans.delete to ensure that their
     * change will be applied to the same version of the resource.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Description: A set of custom labels supplied by the user.
     * A list of key-&gt;value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Description: A set of custom labels supplied by the user.
     * A list of key-&gt;value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The region of the Backup Plan.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The region of the Backup Plan.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of a Kubernetes Resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of a Kubernetes Resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
     * 
     */
    @Export(name="protectedPodCount", type=Integer.class, parameters={})
    private Output<Integer> protectedPodCount;

    /**
     * @return The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
     * 
     */
    public Output<Integer> protectedPodCount() {
        return this.protectedPodCount;
    }
    /**
     * RetentionPolicy governs lifecycle of Backups created under this plan.
     * Structure is documented below.
     * 
     */
    @Export(name="retentionPolicy", type=BackupPlanRetentionPolicy.class, parameters={})
    private Output</* @Nullable */ BackupPlanRetentionPolicy> retentionPolicy;

    /**
     * @return RetentionPolicy governs lifecycle of Backups created under this plan.
     * Structure is documented below.
     * 
     */
    public Output<Optional<BackupPlanRetentionPolicy>> retentionPolicy() {
        return Codegen.optional(this.retentionPolicy);
    }
    /**
     * Server generated, unique identifier of UUID format.
     * 
     */
    @Export(name="uid", type=String.class, parameters={})
    private Output<String> uid;

    /**
     * @return Server generated, unique identifier of UUID format.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BackupPlan(String name) {
        this(name, BackupPlanArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BackupPlan(String name, BackupPlanArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BackupPlan(String name, BackupPlanArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gkebackup/backupPlan:BackupPlan", name, args == null ? BackupPlanArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BackupPlan(String name, Output<String> id, @Nullable BackupPlanState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gkebackup/backupPlan:BackupPlan", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BackupPlan get(String name, Output<String> id, @Nullable BackupPlanState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BackupPlan(name, id, state, options);
    }
}
