// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBucketsBucket {
    /**
     * @return User-provided bucket labels, in key/value pairs.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return The location of the bucket.
     * 
     */
    private String location;
    /**
     * @return The name of the bucket.
     * 
     */
    private String name;
    /**
     * @return A url reference to the bucket.
     * 
     */
    private String selfLink;
    /**
     * @return The [StorageClass](https://cloud.google.com/storage/docs/storage-classes) of the bucket.
     * 
     */
    private String storageClass;

    private GetBucketsBucket() {}
    /**
     * @return User-provided bucket labels, in key/value pairs.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return The location of the bucket.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the bucket.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A url reference to the bucket.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * @return The [StorageClass](https://cloud.google.com/storage/docs/storage-classes) of the bucket.
     * 
     */
    public String storageClass() {
        return this.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketsBucket defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> labels;
        private String location;
        private String name;
        private String selfLink;
        private String storageClass;
        public Builder() {}
        public Builder(GetBucketsBucket defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.selfLink = defaults.selfLink;
    	      this.storageClass = defaults.storageClass;
        }

        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetBucketsBucket", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetBucketsBucket", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetBucketsBucket", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            if (selfLink == null) {
              throw new MissingRequiredPropertyException("GetBucketsBucket", "selfLink");
            }
            this.selfLink = selfLink;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(String storageClass) {
            if (storageClass == null) {
              throw new MissingRequiredPropertyException("GetBucketsBucket", "storageClass");
            }
            this.storageClass = storageClass;
            return this;
        }
        public GetBucketsBucket build() {
            final var _resultValue = new GetBucketsBucket();
            _resultValue.labels = labels;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.selfLink = selfLink;
            _resultValue.storageClass = storageClass;
            return _resultValue;
        }
    }
}
