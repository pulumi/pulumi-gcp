// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.saasruntime.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReleaseReleaseRequirementsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReleaseReleaseRequirementsArgs Empty = new ReleaseReleaseRequirementsArgs();

    /**
     * A list of releases from which a unit can be upgraded to this one
     * (optional). If left empty no constraints will be applied. When provided,
     * unit upgrade requests to this release will check and enforce this
     * constraint.
     * 
     */
    @Import(name="upgradeableFromReleases")
    private @Nullable Output<List<String>> upgradeableFromReleases;

    /**
     * @return A list of releases from which a unit can be upgraded to this one
     * (optional). If left empty no constraints will be applied. When provided,
     * unit upgrade requests to this release will check and enforce this
     * constraint.
     * 
     */
    public Optional<Output<List<String>>> upgradeableFromReleases() {
        return Optional.ofNullable(this.upgradeableFromReleases);
    }

    private ReleaseReleaseRequirementsArgs() {}

    private ReleaseReleaseRequirementsArgs(ReleaseReleaseRequirementsArgs $) {
        this.upgradeableFromReleases = $.upgradeableFromReleases;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReleaseReleaseRequirementsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReleaseReleaseRequirementsArgs $;

        public Builder() {
            $ = new ReleaseReleaseRequirementsArgs();
        }

        public Builder(ReleaseReleaseRequirementsArgs defaults) {
            $ = new ReleaseReleaseRequirementsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param upgradeableFromReleases A list of releases from which a unit can be upgraded to this one
         * (optional). If left empty no constraints will be applied. When provided,
         * unit upgrade requests to this release will check and enforce this
         * constraint.
         * 
         * @return builder
         * 
         */
        public Builder upgradeableFromReleases(@Nullable Output<List<String>> upgradeableFromReleases) {
            $.upgradeableFromReleases = upgradeableFromReleases;
            return this;
        }

        /**
         * @param upgradeableFromReleases A list of releases from which a unit can be upgraded to this one
         * (optional). If left empty no constraints will be applied. When provided,
         * unit upgrade requests to this release will check and enforce this
         * constraint.
         * 
         * @return builder
         * 
         */
        public Builder upgradeableFromReleases(List<String> upgradeableFromReleases) {
            return upgradeableFromReleases(Output.of(upgradeableFromReleases));
        }

        /**
         * @param upgradeableFromReleases A list of releases from which a unit can be upgraded to this one
         * (optional). If left empty no constraints will be applied. When provided,
         * unit upgrade requests to this release will check and enforce this
         * constraint.
         * 
         * @return builder
         * 
         */
        public Builder upgradeableFromReleases(String... upgradeableFromReleases) {
            return upgradeableFromReleases(List.of(upgradeableFromReleases));
        }

        public ReleaseReleaseRequirementsArgs build() {
            return $;
        }
    }

}
