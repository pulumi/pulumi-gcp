// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAutokeyConfigResult {
    private String folder;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The identifier of the project hosting KMS KeyRings and Keys generated by Autokey. Its format is `projects/{projectId}`.
     * 
     */
    private String keyProject;

    private GetAutokeyConfigResult() {}
    public String folder() {
        return this.folder;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The identifier of the project hosting KMS KeyRings and Keys generated by Autokey. Its format is `projects/{projectId}`.
     * 
     */
    public String keyProject() {
        return this.keyProject;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutokeyConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String folder;
        private String id;
        private String keyProject;
        public Builder() {}
        public Builder(GetAutokeyConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.folder = defaults.folder;
    	      this.id = defaults.id;
    	      this.keyProject = defaults.keyProject;
        }

        @CustomType.Setter
        public Builder folder(String folder) {
            if (folder == null) {
              throw new MissingRequiredPropertyException("GetAutokeyConfigResult", "folder");
            }
            this.folder = folder;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutokeyConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keyProject(String keyProject) {
            if (keyProject == null) {
              throw new MissingRequiredPropertyException("GetAutokeyConfigResult", "keyProject");
            }
            this.keyProject = keyProject;
            return this;
        }
        public GetAutokeyConfigResult build() {
            final var _resultValue = new GetAutokeyConfigResult();
            _resultValue.folder = folder;
            _resultValue.id = id;
            _resultValue.keyProject = keyProject;
            return _resultValue;
        }
    }
}
