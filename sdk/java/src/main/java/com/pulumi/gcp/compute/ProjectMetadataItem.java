// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.ProjectMetadataItemArgs;
import com.pulumi.gcp.compute.inputs.ProjectMetadataItemState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a single key/value pair on metadata common to all instances for
 * a project in GCE. Using `gcp.compute.ProjectMetadataItem` lets you
 * manage a single key/value setting in the provider rather than the entire
 * project metadata map.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.ProjectMetadataItem;
 * import com.pulumi.gcp.compute.ProjectMetadataItemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new ProjectMetadataItem("default", ProjectMetadataItemArgs.builder()
 *             .key("my_metadata")
 *             .value("my_value")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Project metadata items can be imported using the `key`, e.g.
 * 
 * * `{{key}}`
 * 
 * * `projects/{{project}}/meta-data/{{key}}`
 * 
 * When using the `pulumi import` command, project metadata items can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/projectMetadataItem:ProjectMetadataItem default {{key}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/projectMetadataItem:ProjectMetadataItem default projects/{{project}}/meta-data/{{key}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/projectMetadataItem:ProjectMetadataItem")
public class ProjectMetadataItem extends com.pulumi.resources.CustomResource {
    /**
     * The metadata key to set.
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return The metadata key to set.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The value to set for the given metadata key.
     * 
     * ***
     * 
     */
    @Export(name="value", refs={String.class}, tree="[0]")
    private Output<String> value;

    /**
     * @return The value to set for the given metadata key.
     * 
     * ***
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProjectMetadataItem(java.lang.String name) {
        this(name, ProjectMetadataItemArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProjectMetadataItem(java.lang.String name, ProjectMetadataItemArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProjectMetadataItem(java.lang.String name, ProjectMetadataItemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/projectMetadataItem:ProjectMetadataItem", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ProjectMetadataItem(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectMetadataItemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/projectMetadataItem:ProjectMetadataItem", name, state, makeResourceOptions(options, id), false);
    }

    private static ProjectMetadataItemArgs makeArgs(ProjectMetadataItemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ProjectMetadataItemArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProjectMetadataItem get(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectMetadataItemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProjectMetadataItem(name, id, state, options);
    }
}
