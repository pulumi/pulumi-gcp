// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetHttpsProxyState extends com.pulumi.resources.ResourceArgs {

    public static final TargetHttpsProxyState Empty = new TargetHttpsProxyState();

    /**
     * A reference to the CertificateMap resource uri that identifies a certificate map
     * associated with the given target proxy. This field can only be set for global target proxies.
     * Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}`.
     * 
     */
    @Import(name="certificateMap")
    private @Nullable Output<String> certificateMap;

    /**
     * @return A reference to the CertificateMap resource uri that identifies a certificate map
     * associated with the given target proxy. This field can only be set for global target proxies.
     * Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}`.
     * 
     */
    public Optional<Output<String>> certificateMap() {
        return Optional.ofNullable(this.certificateMap);
    }

    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Import(name="creationTimestamp")
    private @Nullable Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Optional<Output<String>> creationTimestamp() {
        return Optional.ofNullable(this.creationTimestamp);
    }

    /**
     * An optional description of this resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * This field only applies when the forwarding rule that references
     * this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
     * 
     */
    @Import(name="proxyBind")
    private @Nullable Output<Boolean> proxyBind;

    /**
     * @return This field only applies when the forwarding rule that references
     * this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
     * 
     */
    public Optional<Output<Boolean>> proxyBind() {
        return Optional.ofNullable(this.proxyBind);
    }

    /**
     * The unique identifier for the resource.
     * 
     */
    @Import(name="proxyId")
    private @Nullable Output<Integer> proxyId;

    /**
     * @return The unique identifier for the resource.
     * 
     */
    public Optional<Output<Integer>> proxyId() {
        return Optional.ofNullable(this.proxyId);
    }

    /**
     * Specifies the QUIC override policy for this resource. This determines
     * whether the load balancer will attempt to negotiate QUIC with clients
     * or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
     * specified, uses the QUIC policy with no user overrides, which is
     * equivalent to DISABLE.
     * Default value is `NONE`.
     * Possible values are `NONE`, `ENABLE`, and `DISABLE`.
     * 
     */
    @Import(name="quicOverride")
    private @Nullable Output<String> quicOverride;

    /**
     * @return Specifies the QUIC override policy for this resource. This determines
     * whether the load balancer will attempt to negotiate QUIC with clients
     * or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
     * specified, uses the QUIC policy with no user overrides, which is
     * equivalent to DISABLE.
     * Default value is `NONE`.
     * Possible values are `NONE`, `ENABLE`, and `DISABLE`.
     * 
     */
    public Optional<Output<String>> quicOverride() {
        return Optional.ofNullable(this.quicOverride);
    }

    /**
     * The URI of the created resource.
     * 
     */
    @Import(name="selfLink")
    private @Nullable Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Optional<Output<String>> selfLink() {
        return Optional.ofNullable(this.selfLink);
    }

    /**
     * A list of SslCertificate resources that are used to authenticate
     * connections between users and the load balancer. At least one SSL
     * certificate must be specified.
     * 
     */
    @Import(name="sslCertificates")
    private @Nullable Output<List<String>> sslCertificates;

    /**
     * @return A list of SslCertificate resources that are used to authenticate
     * connections between users and the load balancer. At least one SSL
     * certificate must be specified.
     * 
     */
    public Optional<Output<List<String>>> sslCertificates() {
        return Optional.ofNullable(this.sslCertificates);
    }

    /**
     * A reference to the SslPolicy resource that will be associated with
     * the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
     * resource will not have any SSL policy configured.
     * 
     */
    @Import(name="sslPolicy")
    private @Nullable Output<String> sslPolicy;

    /**
     * @return A reference to the SslPolicy resource that will be associated with
     * the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
     * resource will not have any SSL policy configured.
     * 
     */
    public Optional<Output<String>> sslPolicy() {
        return Optional.ofNullable(this.sslPolicy);
    }

    /**
     * A reference to the UrlMap resource that defines the mapping from URL
     * to the BackendService.
     * 
     */
    @Import(name="urlMap")
    private @Nullable Output<String> urlMap;

    /**
     * @return A reference to the UrlMap resource that defines the mapping from URL
     * to the BackendService.
     * 
     */
    public Optional<Output<String>> urlMap() {
        return Optional.ofNullable(this.urlMap);
    }

    private TargetHttpsProxyState() {}

    private TargetHttpsProxyState(TargetHttpsProxyState $) {
        this.certificateMap = $.certificateMap;
        this.creationTimestamp = $.creationTimestamp;
        this.description = $.description;
        this.name = $.name;
        this.project = $.project;
        this.proxyBind = $.proxyBind;
        this.proxyId = $.proxyId;
        this.quicOverride = $.quicOverride;
        this.selfLink = $.selfLink;
        this.sslCertificates = $.sslCertificates;
        this.sslPolicy = $.sslPolicy;
        this.urlMap = $.urlMap;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetHttpsProxyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetHttpsProxyState $;

        public Builder() {
            $ = new TargetHttpsProxyState();
        }

        public Builder(TargetHttpsProxyState defaults) {
            $ = new TargetHttpsProxyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateMap A reference to the CertificateMap resource uri that identifies a certificate map
         * associated with the given target proxy. This field can only be set for global target proxies.
         * Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}`.
         * 
         * @return builder
         * 
         */
        public Builder certificateMap(@Nullable Output<String> certificateMap) {
            $.certificateMap = certificateMap;
            return this;
        }

        /**
         * @param certificateMap A reference to the CertificateMap resource uri that identifies a certificate map
         * associated with the given target proxy. This field can only be set for global target proxies.
         * Accepted format is `//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}`.
         * 
         * @return builder
         * 
         */
        public Builder certificateMap(String certificateMap) {
            return certificateMap(Output.of(certificateMap));
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(@Nullable Output<String> creationTimestamp) {
            $.creationTimestamp = creationTimestamp;
            return this;
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(String creationTimestamp) {
            return creationTimestamp(Output.of(creationTimestamp));
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035. Specifically, the name must be 1-63 characters long and match
         * the regular expression `a-z?` which means the
         * first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the last
         * character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035. Specifically, the name must be 1-63 characters long and match
         * the regular expression `a-z?` which means the
         * first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the last
         * character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param proxyBind This field only applies when the forwarding rule that references
         * this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
         * 
         * @return builder
         * 
         */
        public Builder proxyBind(@Nullable Output<Boolean> proxyBind) {
            $.proxyBind = proxyBind;
            return this;
        }

        /**
         * @param proxyBind This field only applies when the forwarding rule that references
         * this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
         * 
         * @return builder
         * 
         */
        public Builder proxyBind(Boolean proxyBind) {
            return proxyBind(Output.of(proxyBind));
        }

        /**
         * @param proxyId The unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder proxyId(@Nullable Output<Integer> proxyId) {
            $.proxyId = proxyId;
            return this;
        }

        /**
         * @param proxyId The unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder proxyId(Integer proxyId) {
            return proxyId(Output.of(proxyId));
        }

        /**
         * @param quicOverride Specifies the QUIC override policy for this resource. This determines
         * whether the load balancer will attempt to negotiate QUIC with clients
         * or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
         * specified, uses the QUIC policy with no user overrides, which is
         * equivalent to DISABLE.
         * Default value is `NONE`.
         * Possible values are `NONE`, `ENABLE`, and `DISABLE`.
         * 
         * @return builder
         * 
         */
        public Builder quicOverride(@Nullable Output<String> quicOverride) {
            $.quicOverride = quicOverride;
            return this;
        }

        /**
         * @param quicOverride Specifies the QUIC override policy for this resource. This determines
         * whether the load balancer will attempt to negotiate QUIC with clients
         * or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
         * specified, uses the QUIC policy with no user overrides, which is
         * equivalent to DISABLE.
         * Default value is `NONE`.
         * Possible values are `NONE`, `ENABLE`, and `DISABLE`.
         * 
         * @return builder
         * 
         */
        public Builder quicOverride(String quicOverride) {
            return quicOverride(Output.of(quicOverride));
        }

        /**
         * @param selfLink The URI of the created resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(@Nullable Output<String> selfLink) {
            $.selfLink = selfLink;
            return this;
        }

        /**
         * @param selfLink The URI of the created resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(String selfLink) {
            return selfLink(Output.of(selfLink));
        }

        /**
         * @param sslCertificates A list of SslCertificate resources that are used to authenticate
         * connections between users and the load balancer. At least one SSL
         * certificate must be specified.
         * 
         * @return builder
         * 
         */
        public Builder sslCertificates(@Nullable Output<List<String>> sslCertificates) {
            $.sslCertificates = sslCertificates;
            return this;
        }

        /**
         * @param sslCertificates A list of SslCertificate resources that are used to authenticate
         * connections between users and the load balancer. At least one SSL
         * certificate must be specified.
         * 
         * @return builder
         * 
         */
        public Builder sslCertificates(List<String> sslCertificates) {
            return sslCertificates(Output.of(sslCertificates));
        }

        /**
         * @param sslCertificates A list of SslCertificate resources that are used to authenticate
         * connections between users and the load balancer. At least one SSL
         * certificate must be specified.
         * 
         * @return builder
         * 
         */
        public Builder sslCertificates(String... sslCertificates) {
            return sslCertificates(List.of(sslCertificates));
        }

        /**
         * @param sslPolicy A reference to the SslPolicy resource that will be associated with
         * the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
         * resource will not have any SSL policy configured.
         * 
         * @return builder
         * 
         */
        public Builder sslPolicy(@Nullable Output<String> sslPolicy) {
            $.sslPolicy = sslPolicy;
            return this;
        }

        /**
         * @param sslPolicy A reference to the SslPolicy resource that will be associated with
         * the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
         * resource will not have any SSL policy configured.
         * 
         * @return builder
         * 
         */
        public Builder sslPolicy(String sslPolicy) {
            return sslPolicy(Output.of(sslPolicy));
        }

        /**
         * @param urlMap A reference to the UrlMap resource that defines the mapping from URL
         * to the BackendService.
         * 
         * @return builder
         * 
         */
        public Builder urlMap(@Nullable Output<String> urlMap) {
            $.urlMap = urlMap;
            return this;
        }

        /**
         * @param urlMap A reference to the UrlMap resource that defines the mapping from URL
         * to the BackendService.
         * 
         * @return builder
         * 
         */
        public Builder urlMap(String urlMap) {
            return urlMap(Output.of(urlMap));
        }

        public TargetHttpsProxyState build() {
            return $;
        }
    }

}
