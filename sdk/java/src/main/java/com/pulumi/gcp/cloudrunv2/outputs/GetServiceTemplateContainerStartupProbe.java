// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrunv2.outputs.GetServiceTemplateContainerStartupProbeGrpc;
import com.pulumi.gcp.cloudrunv2.outputs.GetServiceTemplateContainerStartupProbeHttpGet;
import com.pulumi.gcp.cloudrunv2.outputs.GetServiceTemplateContainerStartupProbeTcpSocket;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceTemplateContainerStartupProbe {
    /**
     * @return Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * 
     */
    private Integer failureThreshold;
    /**
     * @return GRPC specifies an action involving a GRPC port.
     * 
     */
    private List<GetServiceTemplateContainerStartupProbeGrpc> grpcs;
    /**
     * @return HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
     * 
     */
    private List<GetServiceTemplateContainerStartupProbeHttpGet> httpGets;
    /**
     * @return Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * 
     */
    private Integer initialDelaySeconds;
    /**
     * @return How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds
     * 
     */
    private Integer periodSeconds;
    /**
     * @return TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
     * 
     */
    private List<GetServiceTemplateContainerStartupProbeTcpSocket> tcpSockets;
    /**
     * @return Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * 
     */
    private Integer timeoutSeconds;

    private GetServiceTemplateContainerStartupProbe() {}
    /**
     * @return Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * 
     */
    public Integer failureThreshold() {
        return this.failureThreshold;
    }
    /**
     * @return GRPC specifies an action involving a GRPC port.
     * 
     */
    public List<GetServiceTemplateContainerStartupProbeGrpc> grpcs() {
        return this.grpcs;
    }
    /**
     * @return HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
     * 
     */
    public List<GetServiceTemplateContainerStartupProbeHttpGet> httpGets() {
        return this.httpGets;
    }
    /**
     * @return Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * 
     */
    public Integer initialDelaySeconds() {
        return this.initialDelaySeconds;
    }
    /**
     * @return How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds
     * 
     */
    public Integer periodSeconds() {
        return this.periodSeconds;
    }
    /**
     * @return TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
     * 
     */
    public List<GetServiceTemplateContainerStartupProbeTcpSocket> tcpSockets() {
        return this.tcpSockets;
    }
    /**
     * @return Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * 
     */
    public Integer timeoutSeconds() {
        return this.timeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceTemplateContainerStartupProbe defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer failureThreshold;
        private List<GetServiceTemplateContainerStartupProbeGrpc> grpcs;
        private List<GetServiceTemplateContainerStartupProbeHttpGet> httpGets;
        private Integer initialDelaySeconds;
        private Integer periodSeconds;
        private List<GetServiceTemplateContainerStartupProbeTcpSocket> tcpSockets;
        private Integer timeoutSeconds;
        public Builder() {}
        public Builder(GetServiceTemplateContainerStartupProbe defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.grpcs = defaults.grpcs;
    	      this.httpGets = defaults.httpGets;
    	      this.initialDelaySeconds = defaults.initialDelaySeconds;
    	      this.periodSeconds = defaults.periodSeconds;
    	      this.tcpSockets = defaults.tcpSockets;
    	      this.timeoutSeconds = defaults.timeoutSeconds;
        }

        @CustomType.Setter
        public Builder failureThreshold(Integer failureThreshold) {
            if (failureThreshold == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerStartupProbe", "failureThreshold");
            }
            this.failureThreshold = failureThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder grpcs(List<GetServiceTemplateContainerStartupProbeGrpc> grpcs) {
            if (grpcs == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerStartupProbe", "grpcs");
            }
            this.grpcs = grpcs;
            return this;
        }
        public Builder grpcs(GetServiceTemplateContainerStartupProbeGrpc... grpcs) {
            return grpcs(List.of(grpcs));
        }
        @CustomType.Setter
        public Builder httpGets(List<GetServiceTemplateContainerStartupProbeHttpGet> httpGets) {
            if (httpGets == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerStartupProbe", "httpGets");
            }
            this.httpGets = httpGets;
            return this;
        }
        public Builder httpGets(GetServiceTemplateContainerStartupProbeHttpGet... httpGets) {
            return httpGets(List.of(httpGets));
        }
        @CustomType.Setter
        public Builder initialDelaySeconds(Integer initialDelaySeconds) {
            if (initialDelaySeconds == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerStartupProbe", "initialDelaySeconds");
            }
            this.initialDelaySeconds = initialDelaySeconds;
            return this;
        }
        @CustomType.Setter
        public Builder periodSeconds(Integer periodSeconds) {
            if (periodSeconds == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerStartupProbe", "periodSeconds");
            }
            this.periodSeconds = periodSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder tcpSockets(List<GetServiceTemplateContainerStartupProbeTcpSocket> tcpSockets) {
            if (tcpSockets == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerStartupProbe", "tcpSockets");
            }
            this.tcpSockets = tcpSockets;
            return this;
        }
        public Builder tcpSockets(GetServiceTemplateContainerStartupProbeTcpSocket... tcpSockets) {
            return tcpSockets(List.of(tcpSockets));
        }
        @CustomType.Setter
        public Builder timeoutSeconds(Integer timeoutSeconds) {
            if (timeoutSeconds == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerStartupProbe", "timeoutSeconds");
            }
            this.timeoutSeconds = timeoutSeconds;
            return this;
        }
        public GetServiceTemplateContainerStartupProbe build() {
            final var _resultValue = new GetServiceTemplateContainerStartupProbe();
            _resultValue.failureThreshold = failureThreshold;
            _resultValue.grpcs = grpcs;
            _resultValue.httpGets = httpGets;
            _resultValue.initialDelaySeconds = initialDelaySeconds;
            _resultValue.periodSeconds = periodSeconds;
            _resultValue.tcpSockets = tcpSockets;
            _resultValue.timeoutSeconds = timeoutSeconds;
            return _resultValue;
        }
    }
}
