// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthorityAccessUrlArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthorityAccessUrlArgs Empty = new AuthorityAccessUrlArgs();

    /**
     * The URL where this CertificateAuthority&#39;s CA certificate is published. This will only be
     * set for CAs that have been activated.
     * 
     */
    @Import(name="caCertificateAccessUrl")
    private @Nullable Output<String> caCertificateAccessUrl;

    /**
     * @return The URL where this CertificateAuthority&#39;s CA certificate is published. This will only be
     * set for CAs that have been activated.
     * 
     */
    public Optional<Output<String>> caCertificateAccessUrl() {
        return Optional.ofNullable(this.caCertificateAccessUrl);
    }

    /**
     * The URL where this CertificateAuthority&#39;s CRLs are published. This will only be set for
     * CAs that have been activated.
     * 
     */
    @Import(name="crlAccessUrls")
    private @Nullable Output<List<String>> crlAccessUrls;

    /**
     * @return The URL where this CertificateAuthority&#39;s CRLs are published. This will only be set for
     * CAs that have been activated.
     * 
     */
    public Optional<Output<List<String>>> crlAccessUrls() {
        return Optional.ofNullable(this.crlAccessUrls);
    }

    private AuthorityAccessUrlArgs() {}

    private AuthorityAccessUrlArgs(AuthorityAccessUrlArgs $) {
        this.caCertificateAccessUrl = $.caCertificateAccessUrl;
        this.crlAccessUrls = $.crlAccessUrls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthorityAccessUrlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorityAccessUrlArgs $;

        public Builder() {
            $ = new AuthorityAccessUrlArgs();
        }

        public Builder(AuthorityAccessUrlArgs defaults) {
            $ = new AuthorityAccessUrlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caCertificateAccessUrl The URL where this CertificateAuthority&#39;s CA certificate is published. This will only be
         * set for CAs that have been activated.
         * 
         * @return builder
         * 
         */
        public Builder caCertificateAccessUrl(@Nullable Output<String> caCertificateAccessUrl) {
            $.caCertificateAccessUrl = caCertificateAccessUrl;
            return this;
        }

        /**
         * @param caCertificateAccessUrl The URL where this CertificateAuthority&#39;s CA certificate is published. This will only be
         * set for CAs that have been activated.
         * 
         * @return builder
         * 
         */
        public Builder caCertificateAccessUrl(String caCertificateAccessUrl) {
            return caCertificateAccessUrl(Output.of(caCertificateAccessUrl));
        }

        /**
         * @param crlAccessUrls The URL where this CertificateAuthority&#39;s CRLs are published. This will only be set for
         * CAs that have been activated.
         * 
         * @return builder
         * 
         */
        public Builder crlAccessUrls(@Nullable Output<List<String>> crlAccessUrls) {
            $.crlAccessUrls = crlAccessUrls;
            return this;
        }

        /**
         * @param crlAccessUrls The URL where this CertificateAuthority&#39;s CRLs are published. This will only be set for
         * CAs that have been activated.
         * 
         * @return builder
         * 
         */
        public Builder crlAccessUrls(List<String> crlAccessUrls) {
            return crlAccessUrls(Output.of(crlAccessUrls));
        }

        /**
         * @param crlAccessUrls The URL where this CertificateAuthority&#39;s CRLs are published. This will only be set for
         * CAs that have been activated.
         * 
         * @return builder
         * 
         */
        public Builder crlAccessUrls(String... crlAccessUrls) {
            return crlAccessUrls(List.of(crlAccessUrls));
        }

        public AuthorityAccessUrlArgs build() {
            return $;
        }
    }

}
