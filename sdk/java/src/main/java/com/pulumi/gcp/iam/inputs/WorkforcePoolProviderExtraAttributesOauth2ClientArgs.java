// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.iam.inputs.WorkforcePoolProviderExtraAttributesOauth2ClientClientSecretArgs;
import com.pulumi.gcp.iam.inputs.WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkforcePoolProviderExtraAttributesOauth2ClientArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkforcePoolProviderExtraAttributesOauth2ClientArgs Empty = new WorkforcePoolProviderExtraAttributesOauth2ClientArgs();

    /**
     * Represents the IdP and type of claims that should be fetched.
     * * AZURE_AD_GROUPS_MAIL: Used to get the user&#39;s group claims from the Azure AD identity provider using configuration provided
     *   in ExtraAttributesOAuth2Client and &#39;mail&#39; property of the &#39;microsoft.graph.group&#39; object is used for claim mapping.
     *   See https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties for more details on
     *   &#39;microsoft.graph.group&#39; properties. The attributes obtained from idntity provider are mapped to &#39;assertion.groups&#39;.
     * * AZURE_AD_GROUPS_ID:  Used to get the user&#39;s group claims from the Azure AD identity provider
     *   using configuration provided in ExtraAttributesOAuth2Client and &#39;id&#39;
     *   property of the &#39;microsoft.graph.group&#39; object is used for claim mapping. See
     *   https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties
     *   for more details on &#39;microsoft.graph.group&#39; properties. The
     *   group IDs obtained from Azure AD are present in &#39;assertion.groups&#39; for
     *   OIDC providers and &#39;assertion.attributes.groups&#39; for SAML providers for
     *   attribute mapping. Possible values: [&#34;AZURE_AD_GROUPS_MAIL&#34;, &#34;AZURE_AD_GROUPS_ID&#34;]
     * 
     */
    @Import(name="attributesType", required=true)
    private Output<String> attributesType;

    /**
     * @return Represents the IdP and type of claims that should be fetched.
     * * AZURE_AD_GROUPS_MAIL: Used to get the user&#39;s group claims from the Azure AD identity provider using configuration provided
     *   in ExtraAttributesOAuth2Client and &#39;mail&#39; property of the &#39;microsoft.graph.group&#39; object is used for claim mapping.
     *   See https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties for more details on
     *   &#39;microsoft.graph.group&#39; properties. The attributes obtained from idntity provider are mapped to &#39;assertion.groups&#39;.
     * * AZURE_AD_GROUPS_ID:  Used to get the user&#39;s group claims from the Azure AD identity provider
     *   using configuration provided in ExtraAttributesOAuth2Client and &#39;id&#39;
     *   property of the &#39;microsoft.graph.group&#39; object is used for claim mapping. See
     *   https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties
     *   for more details on &#39;microsoft.graph.group&#39; properties. The
     *   group IDs obtained from Azure AD are present in &#39;assertion.groups&#39; for
     *   OIDC providers and &#39;assertion.attributes.groups&#39; for SAML providers for
     *   attribute mapping. Possible values: [&#34;AZURE_AD_GROUPS_MAIL&#34;, &#34;AZURE_AD_GROUPS_ID&#34;]
     * 
     */
    public Output<String> attributesType() {
        return this.attributesType;
    }

    /**
     * The OAuth 2.0 client ID for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The OAuth 2.0 client ID for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The OAuth 2.0 client secret for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
     * 
     */
    @Import(name="clientSecret", required=true)
    private Output<WorkforcePoolProviderExtraAttributesOauth2ClientClientSecretArgs> clientSecret;

    /**
     * @return The OAuth 2.0 client secret for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
     * 
     */
    public Output<WorkforcePoolProviderExtraAttributesOauth2ClientClientSecretArgs> clientSecret() {
        return this.clientSecret;
    }

    /**
     * The OIDC identity provider&#39;s issuer URI. Must be a valid URI using the &#39;https&#39; scheme. Required to get the OIDC discovery document.
     * 
     */
    @Import(name="issuerUri", required=true)
    private Output<String> issuerUri;

    /**
     * @return The OIDC identity provider&#39;s issuer URI. Must be a valid URI using the &#39;https&#39; scheme. Required to get the OIDC discovery document.
     * 
     */
    public Output<String> issuerUri() {
        return this.issuerUri;
    }

    /**
     * Represents the parameters to control which claims are fetched from an IdP.
     * 
     */
    @Import(name="queryParameters")
    private @Nullable Output<WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs> queryParameters;

    /**
     * @return Represents the parameters to control which claims are fetched from an IdP.
     * 
     */
    public Optional<Output<WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs>> queryParameters() {
        return Optional.ofNullable(this.queryParameters);
    }

    private WorkforcePoolProviderExtraAttributesOauth2ClientArgs() {}

    private WorkforcePoolProviderExtraAttributesOauth2ClientArgs(WorkforcePoolProviderExtraAttributesOauth2ClientArgs $) {
        this.attributesType = $.attributesType;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.issuerUri = $.issuerUri;
        this.queryParameters = $.queryParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkforcePoolProviderExtraAttributesOauth2ClientArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkforcePoolProviderExtraAttributesOauth2ClientArgs $;

        public Builder() {
            $ = new WorkforcePoolProviderExtraAttributesOauth2ClientArgs();
        }

        public Builder(WorkforcePoolProviderExtraAttributesOauth2ClientArgs defaults) {
            $ = new WorkforcePoolProviderExtraAttributesOauth2ClientArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributesType Represents the IdP and type of claims that should be fetched.
         * * AZURE_AD_GROUPS_MAIL: Used to get the user&#39;s group claims from the Azure AD identity provider using configuration provided
         *   in ExtraAttributesOAuth2Client and &#39;mail&#39; property of the &#39;microsoft.graph.group&#39; object is used for claim mapping.
         *   See https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties for more details on
         *   &#39;microsoft.graph.group&#39; properties. The attributes obtained from idntity provider are mapped to &#39;assertion.groups&#39;.
         * * AZURE_AD_GROUPS_ID:  Used to get the user&#39;s group claims from the Azure AD identity provider
         *   using configuration provided in ExtraAttributesOAuth2Client and &#39;id&#39;
         *   property of the &#39;microsoft.graph.group&#39; object is used for claim mapping. See
         *   https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties
         *   for more details on &#39;microsoft.graph.group&#39; properties. The
         *   group IDs obtained from Azure AD are present in &#39;assertion.groups&#39; for
         *   OIDC providers and &#39;assertion.attributes.groups&#39; for SAML providers for
         *   attribute mapping. Possible values: [&#34;AZURE_AD_GROUPS_MAIL&#34;, &#34;AZURE_AD_GROUPS_ID&#34;]
         * 
         * @return builder
         * 
         */
        public Builder attributesType(Output<String> attributesType) {
            $.attributesType = attributesType;
            return this;
        }

        /**
         * @param attributesType Represents the IdP and type of claims that should be fetched.
         * * AZURE_AD_GROUPS_MAIL: Used to get the user&#39;s group claims from the Azure AD identity provider using configuration provided
         *   in ExtraAttributesOAuth2Client and &#39;mail&#39; property of the &#39;microsoft.graph.group&#39; object is used for claim mapping.
         *   See https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties for more details on
         *   &#39;microsoft.graph.group&#39; properties. The attributes obtained from idntity provider are mapped to &#39;assertion.groups&#39;.
         * * AZURE_AD_GROUPS_ID:  Used to get the user&#39;s group claims from the Azure AD identity provider
         *   using configuration provided in ExtraAttributesOAuth2Client and &#39;id&#39;
         *   property of the &#39;microsoft.graph.group&#39; object is used for claim mapping. See
         *   https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties
         *   for more details on &#39;microsoft.graph.group&#39; properties. The
         *   group IDs obtained from Azure AD are present in &#39;assertion.groups&#39; for
         *   OIDC providers and &#39;assertion.attributes.groups&#39; for SAML providers for
         *   attribute mapping. Possible values: [&#34;AZURE_AD_GROUPS_MAIL&#34;, &#34;AZURE_AD_GROUPS_ID&#34;]
         * 
         * @return builder
         * 
         */
        public Builder attributesType(String attributesType) {
            return attributesType(Output.of(attributesType));
        }

        /**
         * @param clientId The OAuth 2.0 client ID for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The OAuth 2.0 client ID for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret The OAuth 2.0 client secret for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(Output<WorkforcePoolProviderExtraAttributesOauth2ClientClientSecretArgs> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret The OAuth 2.0 client secret for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(WorkforcePoolProviderExtraAttributesOauth2ClientClientSecretArgs clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param issuerUri The OIDC identity provider&#39;s issuer URI. Must be a valid URI using the &#39;https&#39; scheme. Required to get the OIDC discovery document.
         * 
         * @return builder
         * 
         */
        public Builder issuerUri(Output<String> issuerUri) {
            $.issuerUri = issuerUri;
            return this;
        }

        /**
         * @param issuerUri The OIDC identity provider&#39;s issuer URI. Must be a valid URI using the &#39;https&#39; scheme. Required to get the OIDC discovery document.
         * 
         * @return builder
         * 
         */
        public Builder issuerUri(String issuerUri) {
            return issuerUri(Output.of(issuerUri));
        }

        /**
         * @param queryParameters Represents the parameters to control which claims are fetched from an IdP.
         * 
         * @return builder
         * 
         */
        public Builder queryParameters(@Nullable Output<WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs> queryParameters) {
            $.queryParameters = queryParameters;
            return this;
        }

        /**
         * @param queryParameters Represents the parameters to control which claims are fetched from an IdP.
         * 
         * @return builder
         * 
         */
        public Builder queryParameters(WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs queryParameters) {
            return queryParameters(Output.of(queryParameters));
        }

        public WorkforcePoolProviderExtraAttributesOauth2ClientArgs build() {
            if ($.attributesType == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderExtraAttributesOauth2ClientArgs", "attributesType");
            }
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderExtraAttributesOauth2ClientArgs", "clientId");
            }
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderExtraAttributesOauth2ClientArgs", "clientSecret");
            }
            if ($.issuerUri == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderExtraAttributesOauth2ClientArgs", "issuerUri");
            }
            return $;
        }
    }

}
