// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.container.outputs.GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting {
    /**
     * @return Settings for blue-green upgrade strategy.
     * 
     */
    private List<GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting> blueGreenSettings;
    /**
     * @return The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.
     * 
     */
    private Integer maxSurge;
    /**
     * @return The maximum number of nodes that can be simultaneously unavailable during the upgrade process.
     * 
     */
    private Integer maxUnavailable;
    /**
     * @return Update strategy of the node pool.
     * 
     */
    private String strategy;

    private GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting() {}
    /**
     * @return Settings for blue-green upgrade strategy.
     * 
     */
    public List<GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting> blueGreenSettings() {
        return this.blueGreenSettings;
    }
    /**
     * @return The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.
     * 
     */
    public Integer maxSurge() {
        return this.maxSurge;
    }
    /**
     * @return The maximum number of nodes that can be simultaneously unavailable during the upgrade process.
     * 
     */
    public Integer maxUnavailable() {
        return this.maxUnavailable;
    }
    /**
     * @return Update strategy of the node pool.
     * 
     */
    public String strategy() {
        return this.strategy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting> blueGreenSettings;
        private Integer maxSurge;
        private Integer maxUnavailable;
        private String strategy;
        public Builder() {}
        public Builder(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blueGreenSettings = defaults.blueGreenSettings;
    	      this.maxSurge = defaults.maxSurge;
    	      this.maxUnavailable = defaults.maxUnavailable;
    	      this.strategy = defaults.strategy;
        }

        @CustomType.Setter
        public Builder blueGreenSettings(List<GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting> blueGreenSettings) {
            if (blueGreenSettings == null) {
              throw new MissingRequiredPropertyException("GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting", "blueGreenSettings");
            }
            this.blueGreenSettings = blueGreenSettings;
            return this;
        }
        public Builder blueGreenSettings(GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSettingBlueGreenSetting... blueGreenSettings) {
            return blueGreenSettings(List.of(blueGreenSettings));
        }
        @CustomType.Setter
        public Builder maxSurge(Integer maxSurge) {
            if (maxSurge == null) {
              throw new MissingRequiredPropertyException("GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting", "maxSurge");
            }
            this.maxSurge = maxSurge;
            return this;
        }
        @CustomType.Setter
        public Builder maxUnavailable(Integer maxUnavailable) {
            if (maxUnavailable == null) {
              throw new MissingRequiredPropertyException("GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting", "maxUnavailable");
            }
            this.maxUnavailable = maxUnavailable;
            return this;
        }
        @CustomType.Setter
        public Builder strategy(String strategy) {
            if (strategy == null) {
              throw new MissingRequiredPropertyException("GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting", "strategy");
            }
            this.strategy = strategy;
            return this;
        }
        public GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting build() {
            final var _resultValue = new GetClusterClusterAutoscalingAutoProvisioningDefaultUpgradeSetting();
            _resultValue.blueGreenSettings = blueGreenSettings;
            _resultValue.maxSurge = maxSurge;
            _resultValue.maxUnavailable = maxUnavailable;
            _resultValue.strategy = strategy;
            return _resultValue;
        }
    }
}
