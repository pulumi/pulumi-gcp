// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.inputs.InstanceFromTemplateSchedulingGracefulShutdownMaxDurationArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceFromTemplateSchedulingGracefulShutdownArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceFromTemplateSchedulingGracefulShutdownArgs Empty = new InstanceFromTemplateSchedulingGracefulShutdownArgs();

    /**
     * Opts-in for graceful shutdown.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Opts-in for graceful shutdown.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The time allotted for the instance to gracefully shut down.
     * 										If the graceful shutdown isn&#39;t complete after this time, then the instance
     * 										transitions to the STOPPING state.
     * 
     */
    @Import(name="maxDuration")
    private @Nullable Output<InstanceFromTemplateSchedulingGracefulShutdownMaxDurationArgs> maxDuration;

    /**
     * @return The time allotted for the instance to gracefully shut down.
     * 										If the graceful shutdown isn&#39;t complete after this time, then the instance
     * 										transitions to the STOPPING state.
     * 
     */
    public Optional<Output<InstanceFromTemplateSchedulingGracefulShutdownMaxDurationArgs>> maxDuration() {
        return Optional.ofNullable(this.maxDuration);
    }

    private InstanceFromTemplateSchedulingGracefulShutdownArgs() {}

    private InstanceFromTemplateSchedulingGracefulShutdownArgs(InstanceFromTemplateSchedulingGracefulShutdownArgs $) {
        this.enabled = $.enabled;
        this.maxDuration = $.maxDuration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceFromTemplateSchedulingGracefulShutdownArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceFromTemplateSchedulingGracefulShutdownArgs $;

        public Builder() {
            $ = new InstanceFromTemplateSchedulingGracefulShutdownArgs();
        }

        public Builder(InstanceFromTemplateSchedulingGracefulShutdownArgs defaults) {
            $ = new InstanceFromTemplateSchedulingGracefulShutdownArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Opts-in for graceful shutdown.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Opts-in for graceful shutdown.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param maxDuration The time allotted for the instance to gracefully shut down.
         * 										If the graceful shutdown isn&#39;t complete after this time, then the instance
         * 										transitions to the STOPPING state.
         * 
         * @return builder
         * 
         */
        public Builder maxDuration(@Nullable Output<InstanceFromTemplateSchedulingGracefulShutdownMaxDurationArgs> maxDuration) {
            $.maxDuration = maxDuration;
            return this;
        }

        /**
         * @param maxDuration The time allotted for the instance to gracefully shut down.
         * 										If the graceful shutdown isn&#39;t complete after this time, then the instance
         * 										transitions to the STOPPING state.
         * 
         * @return builder
         * 
         */
        public Builder maxDuration(InstanceFromTemplateSchedulingGracefulShutdownMaxDurationArgs maxDuration) {
            return maxDuration(Output.of(maxDuration));
        }

        public InstanceFromTemplateSchedulingGracefulShutdownArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("InstanceFromTemplateSchedulingGracefulShutdownArgs", "enabled");
            }
            return $;
        }
    }

}
