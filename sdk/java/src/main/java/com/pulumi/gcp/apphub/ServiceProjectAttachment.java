// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apphub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apphub.ServiceProjectAttachmentArgs;
import com.pulumi.gcp.apphub.inputs.ServiceProjectAttachmentState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a Service project attachment to the Host Project.
 * 
 * ## Example Usage
 * 
 * ### Service Project Attachment Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.Project;
 * import com.pulumi.gcp.organizations.ProjectArgs;
 * import com.pulumi.time.sleep;
 * import com.pulumi.time.SleepArgs;
 * import com.pulumi.gcp.apphub.ServiceProjectAttachment;
 * import com.pulumi.gcp.apphub.ServiceProjectAttachmentArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var serviceProject = new Project("serviceProject", ProjectArgs.builder()
 *             .projectId("project-1")
 *             .name("Service Project")
 *             .orgId("123456789")
 *             .build());
 * 
 *         var wait120s = new Sleep("wait120s", SleepArgs.builder()
 *             .createDuration("120s")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(serviceProject)
 *                 .build());
 * 
 *         var example = new ServiceProjectAttachment("example", ServiceProjectAttachmentArgs.builder()
 *             .serviceProjectAttachmentId(serviceProject.projectId())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(wait120s)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Service Project Attachment Full
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.Project;
 * import com.pulumi.gcp.organizations.ProjectArgs;
 * import com.pulumi.time.sleep;
 * import com.pulumi.time.SleepArgs;
 * import com.pulumi.gcp.apphub.ServiceProjectAttachment;
 * import com.pulumi.gcp.apphub.ServiceProjectAttachmentArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var serviceProjectFull = new Project("serviceProjectFull", ProjectArgs.builder()
 *             .projectId("project-1")
 *             .name("Service Project Full")
 *             .orgId("123456789")
 *             .build());
 * 
 *         var wait120s = new Sleep("wait120s", SleepArgs.builder()
 *             .createDuration("120s")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(serviceProjectFull)
 *                 .build());
 * 
 *         var example2 = new ServiceProjectAttachment("example2", ServiceProjectAttachmentArgs.builder()
 *             .serviceProjectAttachmentId(serviceProjectFull.projectId())
 *             .serviceProject(serviceProjectFull.projectId())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(wait120s)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ServiceProjectAttachment can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/global/serviceProjectAttachments/{{service_project_attachment_id}}`
 * 
 * * `{{project}}/{{service_project_attachment_id}}`
 * 
 * * `{{service_project_attachment_id}}`
 * 
 * When using the `pulumi import` command, ServiceProjectAttachment can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment default projects/{{project}}/locations/global/serviceProjectAttachments/{{service_project_attachment_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment default {{project}}/{{service_project_attachment_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment default {{service_project_attachment_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment")
public class ServiceProjectAttachment extends com.pulumi.resources.CustomResource {
    /**
     * Output only. Create time.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Output only. Create time.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * &#34;Identifier. The resource name of a ServiceProjectAttachment. Format:\&#34;projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}.\&#34;&#34;
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return &#34;Identifier. The resource name of a ServiceProjectAttachment. Format:\&#34;projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}.\&#34;&#34;
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * &#34;Immutable. Service project name in the format: \&#34;projects/abc\&#34;
     * or \&#34;projects/123\&#34;. As input, project name with either project id or number
     * are accepted. As output, this field will contain project number.&#34;
     * 
     */
    @Export(name="serviceProject", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceProject;

    /**
     * @return &#34;Immutable. Service project name in the format: \&#34;projects/abc\&#34;
     * or \&#34;projects/123\&#34;. As input, project name with either project id or number
     * are accepted. As output, this field will contain project number.&#34;
     * 
     */
    public Output<Optional<String>> serviceProject() {
        return Codegen.optional(this.serviceProject);
    }
    /**
     * Required. The service project attachment identifier must contain the project_id of the service project specified in the service_project_attachment.service_project field. Hint: &#34;projects/{project_id}&#34;
     * 
     */
    @Export(name="serviceProjectAttachmentId", refs={String.class}, tree="[0]")
    private Output<String> serviceProjectAttachmentId;

    /**
     * @return Required. The service project attachment identifier must contain the project_id of the service project specified in the service_project_attachment.service_project field. Hint: &#34;projects/{project_id}&#34;
     * 
     */
    public Output<String> serviceProjectAttachmentId() {
        return this.serviceProjectAttachmentId;
    }
    /**
     * ServiceProjectAttachment state.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return ServiceProjectAttachment state.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceProjectAttachment(java.lang.String name) {
        this(name, ServiceProjectAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceProjectAttachment(java.lang.String name, ServiceProjectAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceProjectAttachment(java.lang.String name, ServiceProjectAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServiceProjectAttachment(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceProjectAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment", name, state, makeResourceOptions(options, id), false);
    }

    private static ServiceProjectAttachmentArgs makeArgs(ServiceProjectAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServiceProjectAttachmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceProjectAttachment get(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceProjectAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceProjectAttachment(name, id, state, options);
    }
}
