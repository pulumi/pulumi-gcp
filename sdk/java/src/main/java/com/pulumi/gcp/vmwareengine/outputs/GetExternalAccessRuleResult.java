// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vmwareengine.outputs.GetExternalAccessRuleDestinationIpRange;
import com.pulumi.gcp.vmwareengine.outputs.GetExternalAccessRuleSourceIpRange;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetExternalAccessRuleResult {
    private String action;
    private String createTime;
    private String description;
    private List<GetExternalAccessRuleDestinationIpRange> destinationIpRanges;
    private List<String> destinationPorts;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String ipProtocol;
    private String name;
    private String parent;
    private Integer priority;
    private List<GetExternalAccessRuleSourceIpRange> sourceIpRanges;
    private List<String> sourcePorts;
    private String state;
    private String uid;
    private String updateTime;

    private GetExternalAccessRuleResult() {}
    public String action() {
        return this.action;
    }
    public String createTime() {
        return this.createTime;
    }
    public String description() {
        return this.description;
    }
    public List<GetExternalAccessRuleDestinationIpRange> destinationIpRanges() {
        return this.destinationIpRanges;
    }
    public List<String> destinationPorts() {
        return this.destinationPorts;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String ipProtocol() {
        return this.ipProtocol;
    }
    public String name() {
        return this.name;
    }
    public String parent() {
        return this.parent;
    }
    public Integer priority() {
        return this.priority;
    }
    public List<GetExternalAccessRuleSourceIpRange> sourceIpRanges() {
        return this.sourceIpRanges;
    }
    public List<String> sourcePorts() {
        return this.sourcePorts;
    }
    public String state() {
        return this.state;
    }
    public String uid() {
        return this.uid;
    }
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalAccessRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String createTime;
        private String description;
        private List<GetExternalAccessRuleDestinationIpRange> destinationIpRanges;
        private List<String> destinationPorts;
        private String id;
        private String ipProtocol;
        private String name;
        private String parent;
        private Integer priority;
        private List<GetExternalAccessRuleSourceIpRange> sourceIpRanges;
        private List<String> sourcePorts;
        private String state;
        private String uid;
        private String updateTime;
        public Builder() {}
        public Builder(GetExternalAccessRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.destinationIpRanges = defaults.destinationIpRanges;
    	      this.destinationPorts = defaults.destinationPorts;
    	      this.id = defaults.id;
    	      this.ipProtocol = defaults.ipProtocol;
    	      this.name = defaults.name;
    	      this.parent = defaults.parent;
    	      this.priority = defaults.priority;
    	      this.sourceIpRanges = defaults.sourceIpRanges;
    	      this.sourcePorts = defaults.sourcePorts;
    	      this.state = defaults.state;
    	      this.uid = defaults.uid;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder destinationIpRanges(List<GetExternalAccessRuleDestinationIpRange> destinationIpRanges) {
            if (destinationIpRanges == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "destinationIpRanges");
            }
            this.destinationIpRanges = destinationIpRanges;
            return this;
        }
        public Builder destinationIpRanges(GetExternalAccessRuleDestinationIpRange... destinationIpRanges) {
            return destinationIpRanges(List.of(destinationIpRanges));
        }
        @CustomType.Setter
        public Builder destinationPorts(List<String> destinationPorts) {
            if (destinationPorts == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "destinationPorts");
            }
            this.destinationPorts = destinationPorts;
            return this;
        }
        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipProtocol(String ipProtocol) {
            if (ipProtocol == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "ipProtocol");
            }
            this.ipProtocol = ipProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parent(String parent) {
            if (parent == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "parent");
            }
            this.parent = parent;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIpRanges(List<GetExternalAccessRuleSourceIpRange> sourceIpRanges) {
            if (sourceIpRanges == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "sourceIpRanges");
            }
            this.sourceIpRanges = sourceIpRanges;
            return this;
        }
        public Builder sourceIpRanges(GetExternalAccessRuleSourceIpRange... sourceIpRanges) {
            return sourceIpRanges(List.of(sourceIpRanges));
        }
        @CustomType.Setter
        public Builder sourcePorts(List<String> sourcePorts) {
            if (sourcePorts == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "sourcePorts");
            }
            this.sourcePorts = sourcePorts;
            return this;
        }
        public Builder sourcePorts(String... sourcePorts) {
            return sourcePorts(List.of(sourcePorts));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder uid(String uid) {
            if (uid == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "uid");
            }
            this.uid = uid;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetExternalAccessRuleResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetExternalAccessRuleResult build() {
            final var _resultValue = new GetExternalAccessRuleResult();
            _resultValue.action = action;
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.destinationIpRanges = destinationIpRanges;
            _resultValue.destinationPorts = destinationPorts;
            _resultValue.id = id;
            _resultValue.ipProtocol = ipProtocol;
            _resultValue.name = name;
            _resultValue.parent = parent;
            _resultValue.priority = priority;
            _resultValue.sourceIpRanges = sourceIpRanges;
            _resultValue.sourcePorts = sourcePorts;
            _resultValue.state = state;
            _resultValue.uid = uid;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
