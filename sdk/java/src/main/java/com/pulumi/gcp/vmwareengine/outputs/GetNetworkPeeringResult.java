// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkPeeringResult {
    private String createTime;
    private String description;
    private Boolean exportCustomRoutes;
    private Boolean exportCustomRoutesWithPublicIp;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Boolean importCustomRoutes;
    private Boolean importCustomRoutesWithPublicIp;
    private String name;
    private String peerNetwork;
    private String peerNetworkType;
    private @Nullable String project;
    private String state;
    private String stateDetails;
    private String uid;
    private String updateTime;
    private String vmwareEngineNetwork;
    private String vmwareEngineNetworkCanonical;

    private GetNetworkPeeringResult() {}
    public String createTime() {
        return this.createTime;
    }
    public String description() {
        return this.description;
    }
    public Boolean exportCustomRoutes() {
        return this.exportCustomRoutes;
    }
    public Boolean exportCustomRoutesWithPublicIp() {
        return this.exportCustomRoutesWithPublicIp;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean importCustomRoutes() {
        return this.importCustomRoutes;
    }
    public Boolean importCustomRoutesWithPublicIp() {
        return this.importCustomRoutesWithPublicIp;
    }
    public String name() {
        return this.name;
    }
    public String peerNetwork() {
        return this.peerNetwork;
    }
    public String peerNetworkType() {
        return this.peerNetworkType;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public String state() {
        return this.state;
    }
    public String stateDetails() {
        return this.stateDetails;
    }
    public String uid() {
        return this.uid;
    }
    public String updateTime() {
        return this.updateTime;
    }
    public String vmwareEngineNetwork() {
        return this.vmwareEngineNetwork;
    }
    public String vmwareEngineNetworkCanonical() {
        return this.vmwareEngineNetworkCanonical;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkPeeringResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String description;
        private Boolean exportCustomRoutes;
        private Boolean exportCustomRoutesWithPublicIp;
        private String id;
        private Boolean importCustomRoutes;
        private Boolean importCustomRoutesWithPublicIp;
        private String name;
        private String peerNetwork;
        private String peerNetworkType;
        private @Nullable String project;
        private String state;
        private String stateDetails;
        private String uid;
        private String updateTime;
        private String vmwareEngineNetwork;
        private String vmwareEngineNetworkCanonical;
        public Builder() {}
        public Builder(GetNetworkPeeringResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.exportCustomRoutes = defaults.exportCustomRoutes;
    	      this.exportCustomRoutesWithPublicIp = defaults.exportCustomRoutesWithPublicIp;
    	      this.id = defaults.id;
    	      this.importCustomRoutes = defaults.importCustomRoutes;
    	      this.importCustomRoutesWithPublicIp = defaults.importCustomRoutesWithPublicIp;
    	      this.name = defaults.name;
    	      this.peerNetwork = defaults.peerNetwork;
    	      this.peerNetworkType = defaults.peerNetworkType;
    	      this.project = defaults.project;
    	      this.state = defaults.state;
    	      this.stateDetails = defaults.stateDetails;
    	      this.uid = defaults.uid;
    	      this.updateTime = defaults.updateTime;
    	      this.vmwareEngineNetwork = defaults.vmwareEngineNetwork;
    	      this.vmwareEngineNetworkCanonical = defaults.vmwareEngineNetworkCanonical;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder exportCustomRoutes(Boolean exportCustomRoutes) {
            this.exportCustomRoutes = Objects.requireNonNull(exportCustomRoutes);
            return this;
        }
        @CustomType.Setter
        public Builder exportCustomRoutesWithPublicIp(Boolean exportCustomRoutesWithPublicIp) {
            this.exportCustomRoutesWithPublicIp = Objects.requireNonNull(exportCustomRoutesWithPublicIp);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder importCustomRoutes(Boolean importCustomRoutes) {
            this.importCustomRoutes = Objects.requireNonNull(importCustomRoutes);
            return this;
        }
        @CustomType.Setter
        public Builder importCustomRoutesWithPublicIp(Boolean importCustomRoutesWithPublicIp) {
            this.importCustomRoutesWithPublicIp = Objects.requireNonNull(importCustomRoutesWithPublicIp);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder peerNetwork(String peerNetwork) {
            this.peerNetwork = Objects.requireNonNull(peerNetwork);
            return this;
        }
        @CustomType.Setter
        public Builder peerNetworkType(String peerNetworkType) {
            this.peerNetworkType = Objects.requireNonNull(peerNetworkType);
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder stateDetails(String stateDetails) {
            this.stateDetails = Objects.requireNonNull(stateDetails);
            return this;
        }
        @CustomType.Setter
        public Builder uid(String uid) {
            this.uid = Objects.requireNonNull(uid);
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        @CustomType.Setter
        public Builder vmwareEngineNetwork(String vmwareEngineNetwork) {
            this.vmwareEngineNetwork = Objects.requireNonNull(vmwareEngineNetwork);
            return this;
        }
        @CustomType.Setter
        public Builder vmwareEngineNetworkCanonical(String vmwareEngineNetworkCanonical) {
            this.vmwareEngineNetworkCanonical = Objects.requireNonNull(vmwareEngineNetworkCanonical);
            return this;
        }
        public GetNetworkPeeringResult build() {
            final var _resultValue = new GetNetworkPeeringResult();
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.exportCustomRoutes = exportCustomRoutes;
            _resultValue.exportCustomRoutesWithPublicIp = exportCustomRoutesWithPublicIp;
            _resultValue.id = id;
            _resultValue.importCustomRoutes = importCustomRoutes;
            _resultValue.importCustomRoutesWithPublicIp = importCustomRoutesWithPublicIp;
            _resultValue.name = name;
            _resultValue.peerNetwork = peerNetwork;
            _resultValue.peerNetworkType = peerNetworkType;
            _resultValue.project = project;
            _resultValue.state = state;
            _resultValue.stateDetails = stateDetails;
            _resultValue.uid = uid;
            _resultValue.updateTime = updateTime;
            _resultValue.vmwareEngineNetwork = vmwareEngineNetwork;
            _resultValue.vmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
            return _resultValue;
        }
    }
}
