// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.networkservices.inputs.LbTrafficExtensionExtensionChainExtensionArgs;
import com.pulumi.gcp.networkservices.inputs.LbTrafficExtensionExtensionChainMatchConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class LbTrafficExtensionExtensionChainArgs extends com.pulumi.resources.ResourceArgs {

    public static final LbTrafficExtensionExtensionChainArgs Empty = new LbTrafficExtensionExtensionChainArgs();

    /**
     * A set of extensions to execute for the matching request.
     * At least one extension is required. Up to 3 extensions can be defined for each extension chain for
     * LbTrafficExtension resource. LbRouteExtension chains are limited to 1 extension per extension chain.
     * Structure is documented below.
     * 
     */
    @Import(name="extensions", required=true)
    private Output<List<LbTrafficExtensionExtensionChainExtensionArgs>> extensions;

    /**
     * @return A set of extensions to execute for the matching request.
     * At least one extension is required. Up to 3 extensions can be defined for each extension chain for
     * LbTrafficExtension resource. LbRouteExtension chains are limited to 1 extension per extension chain.
     * Structure is documented below.
     * 
     */
    public Output<List<LbTrafficExtensionExtensionChainExtensionArgs>> extensions() {
        return this.extensions;
    }

    /**
     * Conditions under which this chain is invoked for a request.
     * Structure is documented below.
     * 
     */
    @Import(name="matchCondition", required=true)
    private Output<LbTrafficExtensionExtensionChainMatchConditionArgs> matchCondition;

    /**
     * @return Conditions under which this chain is invoked for a request.
     * Structure is documented below.
     * 
     */
    public Output<LbTrafficExtensionExtensionChainMatchConditionArgs> matchCondition() {
        return this.matchCondition;
    }

    /**
     * The name for this extension chain. The name is logged as part of the HTTP request logs.
     * The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens,
     * and can have a maximum length of 63 characters. Additionally, the first character must be a letter
     * and the last a letter or a number.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name for this extension chain. The name is logged as part of the HTTP request logs.
     * The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens,
     * and can have a maximum length of 63 characters. Additionally, the first character must be a letter
     * and the last a letter or a number.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private LbTrafficExtensionExtensionChainArgs() {}

    private LbTrafficExtensionExtensionChainArgs(LbTrafficExtensionExtensionChainArgs $) {
        this.extensions = $.extensions;
        this.matchCondition = $.matchCondition;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LbTrafficExtensionExtensionChainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LbTrafficExtensionExtensionChainArgs $;

        public Builder() {
            $ = new LbTrafficExtensionExtensionChainArgs();
        }

        public Builder(LbTrafficExtensionExtensionChainArgs defaults) {
            $ = new LbTrafficExtensionExtensionChainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param extensions A set of extensions to execute for the matching request.
         * At least one extension is required. Up to 3 extensions can be defined for each extension chain for
         * LbTrafficExtension resource. LbRouteExtension chains are limited to 1 extension per extension chain.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder extensions(Output<List<LbTrafficExtensionExtensionChainExtensionArgs>> extensions) {
            $.extensions = extensions;
            return this;
        }

        /**
         * @param extensions A set of extensions to execute for the matching request.
         * At least one extension is required. Up to 3 extensions can be defined for each extension chain for
         * LbTrafficExtension resource. LbRouteExtension chains are limited to 1 extension per extension chain.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder extensions(List<LbTrafficExtensionExtensionChainExtensionArgs> extensions) {
            return extensions(Output.of(extensions));
        }

        /**
         * @param extensions A set of extensions to execute for the matching request.
         * At least one extension is required. Up to 3 extensions can be defined for each extension chain for
         * LbTrafficExtension resource. LbRouteExtension chains are limited to 1 extension per extension chain.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder extensions(LbTrafficExtensionExtensionChainExtensionArgs... extensions) {
            return extensions(List.of(extensions));
        }

        /**
         * @param matchCondition Conditions under which this chain is invoked for a request.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder matchCondition(Output<LbTrafficExtensionExtensionChainMatchConditionArgs> matchCondition) {
            $.matchCondition = matchCondition;
            return this;
        }

        /**
         * @param matchCondition Conditions under which this chain is invoked for a request.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder matchCondition(LbTrafficExtensionExtensionChainMatchConditionArgs matchCondition) {
            return matchCondition(Output.of(matchCondition));
        }

        /**
         * @param name The name for this extension chain. The name is logged as part of the HTTP request logs.
         * The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens,
         * and can have a maximum length of 63 characters. Additionally, the first character must be a letter
         * and the last a letter or a number.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name for this extension chain. The name is logged as part of the HTTP request logs.
         * The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens,
         * and can have a maximum length of 63 characters. Additionally, the first character must be a letter
         * and the last a letter or a number.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public LbTrafficExtensionExtensionChainArgs build() {
            if ($.extensions == null) {
                throw new MissingRequiredPropertyException("LbTrafficExtensionExtensionChainArgs", "extensions");
            }
            if ($.matchCondition == null) {
                throw new MissingRequiredPropertyException("LbTrafficExtensionExtensionChainArgs", "matchCondition");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("LbTrafficExtensionExtensionChainArgs", "name");
            }
            return $;
        }
    }

}
