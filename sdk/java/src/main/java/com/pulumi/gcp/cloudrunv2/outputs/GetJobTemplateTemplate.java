// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateContainer;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateNodeSelector;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateVolume;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateVpcAccess;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobTemplateTemplate {
    /**
     * @return Holds the single container that defines the unit of execution for this task.
     * 
     */
    private List<GetJobTemplateTemplateContainer> containers;
    /**
     * @return A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
     * 
     */
    private String encryptionKey;
    /**
     * @return The execution environment being used to host this Task. Possible values: [&#34;EXECUTION_ENVIRONMENT_GEN1&#34;, &#34;EXECUTION_ENVIRONMENT_GEN2&#34;]
     * 
     */
    private String executionEnvironment;
    /**
     * @return True if GPU zonal redundancy is disabled on this execution.
     * 
     */
    private Boolean gpuZonalRedundancyDisabled;
    /**
     * @return Number of retries allowed per Task, before marking this Task failed. Defaults to 3. Minimum value is 0.
     * 
     */
    private Integer maxRetries;
    /**
     * @return Node Selector describes the hardware requirements of the resources.
     * 
     */
    private List<GetJobTemplateTemplateNodeSelector> nodeSelectors;
    /**
     * @return Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project&#39;s default service account.
     * 
     */
    private String serviceAccount;
    /**
     * @return Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.
     * 
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private String timeout;
    /**
     * @return A list of Volumes to make available to containers.
     * 
     */
    private List<GetJobTemplateTemplateVolume> volumes;
    /**
     * @return VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
     * 
     */
    private List<GetJobTemplateTemplateVpcAccess> vpcAccesses;

    private GetJobTemplateTemplate() {}
    /**
     * @return Holds the single container that defines the unit of execution for this task.
     * 
     */
    public List<GetJobTemplateTemplateContainer> containers() {
        return this.containers;
    }
    /**
     * @return A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
     * 
     */
    public String encryptionKey() {
        return this.encryptionKey;
    }
    /**
     * @return The execution environment being used to host this Task. Possible values: [&#34;EXECUTION_ENVIRONMENT_GEN1&#34;, &#34;EXECUTION_ENVIRONMENT_GEN2&#34;]
     * 
     */
    public String executionEnvironment() {
        return this.executionEnvironment;
    }
    /**
     * @return True if GPU zonal redundancy is disabled on this execution.
     * 
     */
    public Boolean gpuZonalRedundancyDisabled() {
        return this.gpuZonalRedundancyDisabled;
    }
    /**
     * @return Number of retries allowed per Task, before marking this Task failed. Defaults to 3. Minimum value is 0.
     * 
     */
    public Integer maxRetries() {
        return this.maxRetries;
    }
    /**
     * @return Node Selector describes the hardware requirements of the resources.
     * 
     */
    public List<GetJobTemplateTemplateNodeSelector> nodeSelectors() {
        return this.nodeSelectors;
    }
    /**
     * @return Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project&#39;s default service account.
     * 
     */
    public String serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * @return Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.
     * 
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public String timeout() {
        return this.timeout;
    }
    /**
     * @return A list of Volumes to make available to containers.
     * 
     */
    public List<GetJobTemplateTemplateVolume> volumes() {
        return this.volumes;
    }
    /**
     * @return VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
     * 
     */
    public List<GetJobTemplateTemplateVpcAccess> vpcAccesses() {
        return this.vpcAccesses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobTemplateTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetJobTemplateTemplateContainer> containers;
        private String encryptionKey;
        private String executionEnvironment;
        private Boolean gpuZonalRedundancyDisabled;
        private Integer maxRetries;
        private List<GetJobTemplateTemplateNodeSelector> nodeSelectors;
        private String serviceAccount;
        private String timeout;
        private List<GetJobTemplateTemplateVolume> volumes;
        private List<GetJobTemplateTemplateVpcAccess> vpcAccesses;
        public Builder() {}
        public Builder(GetJobTemplateTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containers = defaults.containers;
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.executionEnvironment = defaults.executionEnvironment;
    	      this.gpuZonalRedundancyDisabled = defaults.gpuZonalRedundancyDisabled;
    	      this.maxRetries = defaults.maxRetries;
    	      this.nodeSelectors = defaults.nodeSelectors;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.timeout = defaults.timeout;
    	      this.volumes = defaults.volumes;
    	      this.vpcAccesses = defaults.vpcAccesses;
        }

        @CustomType.Setter
        public Builder containers(List<GetJobTemplateTemplateContainer> containers) {
            if (containers == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "containers");
            }
            this.containers = containers;
            return this;
        }
        public Builder containers(GetJobTemplateTemplateContainer... containers) {
            return containers(List.of(containers));
        }
        @CustomType.Setter
        public Builder encryptionKey(String encryptionKey) {
            if (encryptionKey == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "encryptionKey");
            }
            this.encryptionKey = encryptionKey;
            return this;
        }
        @CustomType.Setter
        public Builder executionEnvironment(String executionEnvironment) {
            if (executionEnvironment == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "executionEnvironment");
            }
            this.executionEnvironment = executionEnvironment;
            return this;
        }
        @CustomType.Setter
        public Builder gpuZonalRedundancyDisabled(Boolean gpuZonalRedundancyDisabled) {
            if (gpuZonalRedundancyDisabled == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "gpuZonalRedundancyDisabled");
            }
            this.gpuZonalRedundancyDisabled = gpuZonalRedundancyDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxRetries(Integer maxRetries) {
            if (maxRetries == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "maxRetries");
            }
            this.maxRetries = maxRetries;
            return this;
        }
        @CustomType.Setter
        public Builder nodeSelectors(List<GetJobTemplateTemplateNodeSelector> nodeSelectors) {
            if (nodeSelectors == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "nodeSelectors");
            }
            this.nodeSelectors = nodeSelectors;
            return this;
        }
        public Builder nodeSelectors(GetJobTemplateTemplateNodeSelector... nodeSelectors) {
            return nodeSelectors(List.of(nodeSelectors));
        }
        @CustomType.Setter
        public Builder serviceAccount(String serviceAccount) {
            if (serviceAccount == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "serviceAccount");
            }
            this.serviceAccount = serviceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(String timeout) {
            if (timeout == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "timeout");
            }
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder volumes(List<GetJobTemplateTemplateVolume> volumes) {
            if (volumes == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "volumes");
            }
            this.volumes = volumes;
            return this;
        }
        public Builder volumes(GetJobTemplateTemplateVolume... volumes) {
            return volumes(List.of(volumes));
        }
        @CustomType.Setter
        public Builder vpcAccesses(List<GetJobTemplateTemplateVpcAccess> vpcAccesses) {
            if (vpcAccesses == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplate", "vpcAccesses");
            }
            this.vpcAccesses = vpcAccesses;
            return this;
        }
        public Builder vpcAccesses(GetJobTemplateTemplateVpcAccess... vpcAccesses) {
            return vpcAccesses(List.of(vpcAccesses));
        }
        public GetJobTemplateTemplate build() {
            final var _resultValue = new GetJobTemplateTemplate();
            _resultValue.containers = containers;
            _resultValue.encryptionKey = encryptionKey;
            _resultValue.executionEnvironment = executionEnvironment;
            _resultValue.gpuZonalRedundancyDisabled = gpuZonalRedundancyDisabled;
            _resultValue.maxRetries = maxRetries;
            _resultValue.nodeSelectors = nodeSelectors;
            _resultValue.serviceAccount = serviceAccount;
            _resultValue.timeout = timeout;
            _resultValue.volumes = volumes;
            _resultValue.vpcAccesses = vpcAccesses;
            return _resultValue;
        }
    }
}
