// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrunv2.outputs.WorkerPoolTemplateVolumeCloudSqlInstance;
import com.pulumi.gcp.cloudrunv2.outputs.WorkerPoolTemplateVolumeEmptyDir;
import com.pulumi.gcp.cloudrunv2.outputs.WorkerPoolTemplateVolumeGcs;
import com.pulumi.gcp.cloudrunv2.outputs.WorkerPoolTemplateVolumeNfs;
import com.pulumi.gcp.cloudrunv2.outputs.WorkerPoolTemplateVolumeSecret;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkerPoolTemplateVolume {
    /**
     * @return For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
     * Structure is documented below.
     * 
     */
    private @Nullable WorkerPoolTemplateVolumeCloudSqlInstance cloudSqlInstance;
    /**
     * @return Ephemeral storage used as a shared volume.
     * Structure is documented below.
     * 
     */
    private @Nullable WorkerPoolTemplateVolumeEmptyDir emptyDir;
    /**
     * @return Cloud Storage bucket mounted as a volume using GCSFuse. This feature is only supported in the gen2 execution environment.
     * Structure is documented below.
     * 
     */
    private @Nullable WorkerPoolTemplateVolumeGcs gcs;
    /**
     * @return Volume&#39;s name.
     * 
     */
    private String name;
    /**
     * @return Represents an NFS mount.
     * Structure is documented below.
     * 
     */
    private @Nullable WorkerPoolTemplateVolumeNfs nfs;
    /**
     * @return Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * Structure is documented below.
     * 
     */
    private @Nullable WorkerPoolTemplateVolumeSecret secret;

    private WorkerPoolTemplateVolume() {}
    /**
     * @return For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
     * Structure is documented below.
     * 
     */
    public Optional<WorkerPoolTemplateVolumeCloudSqlInstance> cloudSqlInstance() {
        return Optional.ofNullable(this.cloudSqlInstance);
    }
    /**
     * @return Ephemeral storage used as a shared volume.
     * Structure is documented below.
     * 
     */
    public Optional<WorkerPoolTemplateVolumeEmptyDir> emptyDir() {
        return Optional.ofNullable(this.emptyDir);
    }
    /**
     * @return Cloud Storage bucket mounted as a volume using GCSFuse. This feature is only supported in the gen2 execution environment.
     * Structure is documented below.
     * 
     */
    public Optional<WorkerPoolTemplateVolumeGcs> gcs() {
        return Optional.ofNullable(this.gcs);
    }
    /**
     * @return Volume&#39;s name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Represents an NFS mount.
     * Structure is documented below.
     * 
     */
    public Optional<WorkerPoolTemplateVolumeNfs> nfs() {
        return Optional.ofNullable(this.nfs);
    }
    /**
     * @return Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * Structure is documented below.
     * 
     */
    public Optional<WorkerPoolTemplateVolumeSecret> secret() {
        return Optional.ofNullable(this.secret);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkerPoolTemplateVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable WorkerPoolTemplateVolumeCloudSqlInstance cloudSqlInstance;
        private @Nullable WorkerPoolTemplateVolumeEmptyDir emptyDir;
        private @Nullable WorkerPoolTemplateVolumeGcs gcs;
        private String name;
        private @Nullable WorkerPoolTemplateVolumeNfs nfs;
        private @Nullable WorkerPoolTemplateVolumeSecret secret;
        public Builder() {}
        public Builder(WorkerPoolTemplateVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlInstance = defaults.cloudSqlInstance;
    	      this.emptyDir = defaults.emptyDir;
    	      this.gcs = defaults.gcs;
    	      this.name = defaults.name;
    	      this.nfs = defaults.nfs;
    	      this.secret = defaults.secret;
        }

        @CustomType.Setter
        public Builder cloudSqlInstance(@Nullable WorkerPoolTemplateVolumeCloudSqlInstance cloudSqlInstance) {

            this.cloudSqlInstance = cloudSqlInstance;
            return this;
        }
        @CustomType.Setter
        public Builder emptyDir(@Nullable WorkerPoolTemplateVolumeEmptyDir emptyDir) {

            this.emptyDir = emptyDir;
            return this;
        }
        @CustomType.Setter
        public Builder gcs(@Nullable WorkerPoolTemplateVolumeGcs gcs) {

            this.gcs = gcs;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("WorkerPoolTemplateVolume", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nfs(@Nullable WorkerPoolTemplateVolumeNfs nfs) {

            this.nfs = nfs;
            return this;
        }
        @CustomType.Setter
        public Builder secret(@Nullable WorkerPoolTemplateVolumeSecret secret) {

            this.secret = secret;
            return this;
        }
        public WorkerPoolTemplateVolume build() {
            final var _resultValue = new WorkerPoolTemplateVolume();
            _resultValue.cloudSqlInstance = cloudSqlInstance;
            _resultValue.emptyDir = emptyDir;
            _resultValue.gcs = gcs;
            _resultValue.name = name;
            _resultValue.nfs = nfs;
            _resultValue.secret = secret;
            return _resultValue;
        }
    }
}
