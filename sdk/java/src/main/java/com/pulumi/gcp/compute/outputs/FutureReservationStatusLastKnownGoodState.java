// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfo;
import com.pulumi.gcp.compute.outputs.FutureReservationStatusLastKnownGoodStateFutureReservationSpecs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FutureReservationStatusLastKnownGoodState {
    /**
     * @return An optional description of this resource.
     * 
     */
    private @Nullable String description;
    /**
     * @return Represents the matching usage for the future reservation before an amendment was requested.
     * Structure is documented below.
     * 
     */
    private @Nullable FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfo existingMatchingUsageInfo;
    /**
     * @return The previous instance-related properties of the Future Reservation.
     * Structure is documented below.
     * 
     */
    private @Nullable FutureReservationStatusLastKnownGoodStateFutureReservationSpecs futureReservationSpecs;
    /**
     * @return The lock time of the FutureReservation before an amendment was requested.
     * 
     */
    private @Nullable String lockTime;
    /**
     * @return Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
     * 
     */
    private @Nullable String namePrefix;
    /**
     * @return The status of the last known good state for the Future Reservation
     * Possible values are: .
     * 
     */
    private @Nullable String procurementStatus;

    private FutureReservationStatusLastKnownGoodState() {}
    /**
     * @return An optional description of this resource.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Represents the matching usage for the future reservation before an amendment was requested.
     * Structure is documented below.
     * 
     */
    public Optional<FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfo> existingMatchingUsageInfo() {
        return Optional.ofNullable(this.existingMatchingUsageInfo);
    }
    /**
     * @return The previous instance-related properties of the Future Reservation.
     * Structure is documented below.
     * 
     */
    public Optional<FutureReservationStatusLastKnownGoodStateFutureReservationSpecs> futureReservationSpecs() {
        return Optional.ofNullable(this.futureReservationSpecs);
    }
    /**
     * @return The lock time of the FutureReservation before an amendment was requested.
     * 
     */
    public Optional<String> lockTime() {
        return Optional.ofNullable(this.lockTime);
    }
    /**
     * @return Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
     * 
     */
    public Optional<String> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }
    /**
     * @return The status of the last known good state for the Future Reservation
     * Possible values are: .
     * 
     */
    public Optional<String> procurementStatus() {
        return Optional.ofNullable(this.procurementStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FutureReservationStatusLastKnownGoodState defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfo existingMatchingUsageInfo;
        private @Nullable FutureReservationStatusLastKnownGoodStateFutureReservationSpecs futureReservationSpecs;
        private @Nullable String lockTime;
        private @Nullable String namePrefix;
        private @Nullable String procurementStatus;
        public Builder() {}
        public Builder(FutureReservationStatusLastKnownGoodState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.existingMatchingUsageInfo = defaults.existingMatchingUsageInfo;
    	      this.futureReservationSpecs = defaults.futureReservationSpecs;
    	      this.lockTime = defaults.lockTime;
    	      this.namePrefix = defaults.namePrefix;
    	      this.procurementStatus = defaults.procurementStatus;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder existingMatchingUsageInfo(@Nullable FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfo existingMatchingUsageInfo) {

            this.existingMatchingUsageInfo = existingMatchingUsageInfo;
            return this;
        }
        @CustomType.Setter
        public Builder futureReservationSpecs(@Nullable FutureReservationStatusLastKnownGoodStateFutureReservationSpecs futureReservationSpecs) {

            this.futureReservationSpecs = futureReservationSpecs;
            return this;
        }
        @CustomType.Setter
        public Builder lockTime(@Nullable String lockTime) {

            this.lockTime = lockTime;
            return this;
        }
        @CustomType.Setter
        public Builder namePrefix(@Nullable String namePrefix) {

            this.namePrefix = namePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder procurementStatus(@Nullable String procurementStatus) {

            this.procurementStatus = procurementStatus;
            return this;
        }
        public FutureReservationStatusLastKnownGoodState build() {
            final var _resultValue = new FutureReservationStatusLastKnownGoodState();
            _resultValue.description = description;
            _resultValue.existingMatchingUsageInfo = existingMatchingUsageInfo;
            _resultValue.futureReservationSpecs = futureReservationSpecs;
            _resultValue.lockTime = lockTime;
            _resultValue.namePrefix = namePrefix;
            _resultValue.procurementStatus = procurementStatus;
            return _resultValue;
        }
    }
}
