// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.modelarmor.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.modelarmor.outputs.FloorsettingFilterConfigRaiSettingsRaiFilter;
import java.util.List;
import java.util.Objects;

@CustomType
public final class FloorsettingFilterConfigRaiSettings {
    /**
     * @return List of Responsible AI filters enabled for template.
     * Structure is documented below.
     * 
     */
    private List<FloorsettingFilterConfigRaiSettingsRaiFilter> raiFilters;

    private FloorsettingFilterConfigRaiSettings() {}
    /**
     * @return List of Responsible AI filters enabled for template.
     * Structure is documented below.
     * 
     */
    public List<FloorsettingFilterConfigRaiSettingsRaiFilter> raiFilters() {
        return this.raiFilters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FloorsettingFilterConfigRaiSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<FloorsettingFilterConfigRaiSettingsRaiFilter> raiFilters;
        public Builder() {}
        public Builder(FloorsettingFilterConfigRaiSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.raiFilters = defaults.raiFilters;
        }

        @CustomType.Setter
        public Builder raiFilters(List<FloorsettingFilterConfigRaiSettingsRaiFilter> raiFilters) {
            if (raiFilters == null) {
              throw new MissingRequiredPropertyException("FloorsettingFilterConfigRaiSettings", "raiFilters");
            }
            this.raiFilters = raiFilters;
            return this;
        }
        public Builder raiFilters(FloorsettingFilterConfigRaiSettingsRaiFilter... raiFilters) {
            return raiFilters(List.of(raiFilters));
        }
        public FloorsettingFilterConfigRaiSettings build() {
            final var _resultValue = new FloorsettingFilterConfigRaiSettings();
            _resultValue.raiFilters = raiFilters;
            return _resultValue;
        }
    }
}
