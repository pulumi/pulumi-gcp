// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutomationRuleRepairRolloutRuleRepairPhaseRollback {
    /**
     * @return Optional. The starting phase ID for the Rollout. If unspecified, the Rollout will start in the stable phase.
     * 
     */
    private @Nullable String destinationPhase;
    /**
     * @return Optional. If pending rollout exists on the target, the rollback operation will be aborted.
     * 
     */
    private @Nullable Boolean disableRollbackIfRolloutPending;

    private AutomationRuleRepairRolloutRuleRepairPhaseRollback() {}
    /**
     * @return Optional. The starting phase ID for the Rollout. If unspecified, the Rollout will start in the stable phase.
     * 
     */
    public Optional<String> destinationPhase() {
        return Optional.ofNullable(this.destinationPhase);
    }
    /**
     * @return Optional. If pending rollout exists on the target, the rollback operation will be aborted.
     * 
     */
    public Optional<Boolean> disableRollbackIfRolloutPending() {
        return Optional.ofNullable(this.disableRollbackIfRolloutPending);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomationRuleRepairRolloutRuleRepairPhaseRollback defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String destinationPhase;
        private @Nullable Boolean disableRollbackIfRolloutPending;
        public Builder() {}
        public Builder(AutomationRuleRepairRolloutRuleRepairPhaseRollback defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationPhase = defaults.destinationPhase;
    	      this.disableRollbackIfRolloutPending = defaults.disableRollbackIfRolloutPending;
        }

        @CustomType.Setter
        public Builder destinationPhase(@Nullable String destinationPhase) {

            this.destinationPhase = destinationPhase;
            return this;
        }
        @CustomType.Setter
        public Builder disableRollbackIfRolloutPending(@Nullable Boolean disableRollbackIfRolloutPending) {

            this.disableRollbackIfRolloutPending = disableRollbackIfRolloutPending;
            return this;
        }
        public AutomationRuleRepairRolloutRuleRepairPhaseRollback build() {
            final var _resultValue = new AutomationRuleRepairRolloutRuleRepairPhaseRollback();
            _resultValue.destinationPhase = destinationPhase;
            _resultValue.disableRollbackIfRolloutPending = disableRollbackIfRolloutPending;
            return _resultValue;
        }
    }
}
