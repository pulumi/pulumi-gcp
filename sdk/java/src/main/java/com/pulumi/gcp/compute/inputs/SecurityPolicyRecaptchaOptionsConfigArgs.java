// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SecurityPolicyRecaptchaOptionsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyRecaptchaOptionsConfigArgs Empty = new SecurityPolicyRecaptchaOptionsConfigArgs();

    /**
     * A field to supply a reCAPTCHA site key to be used for all the rules using the redirect action with the type of GOOGLE_RECAPTCHA under the security policy. The specified site key needs to be created from the reCAPTCHA API. The user is responsible for the validity of the specified site key. If not specified, a Google-managed site key is used.
     * 
     */
    @Import(name="redirectSiteKey", required=true)
    private Output<String> redirectSiteKey;

    /**
     * @return A field to supply a reCAPTCHA site key to be used for all the rules using the redirect action with the type of GOOGLE_RECAPTCHA under the security policy. The specified site key needs to be created from the reCAPTCHA API. The user is responsible for the validity of the specified site key. If not specified, a Google-managed site key is used.
     * 
     */
    public Output<String> redirectSiteKey() {
        return this.redirectSiteKey;
    }

    private SecurityPolicyRecaptchaOptionsConfigArgs() {}

    private SecurityPolicyRecaptchaOptionsConfigArgs(SecurityPolicyRecaptchaOptionsConfigArgs $) {
        this.redirectSiteKey = $.redirectSiteKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyRecaptchaOptionsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyRecaptchaOptionsConfigArgs $;

        public Builder() {
            $ = new SecurityPolicyRecaptchaOptionsConfigArgs();
        }

        public Builder(SecurityPolicyRecaptchaOptionsConfigArgs defaults) {
            $ = new SecurityPolicyRecaptchaOptionsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param redirectSiteKey A field to supply a reCAPTCHA site key to be used for all the rules using the redirect action with the type of GOOGLE_RECAPTCHA under the security policy. The specified site key needs to be created from the reCAPTCHA API. The user is responsible for the validity of the specified site key. If not specified, a Google-managed site key is used.
         * 
         * @return builder
         * 
         */
        public Builder redirectSiteKey(Output<String> redirectSiteKey) {
            $.redirectSiteKey = redirectSiteKey;
            return this;
        }

        /**
         * @param redirectSiteKey A field to supply a reCAPTCHA site key to be used for all the rules using the redirect action with the type of GOOGLE_RECAPTCHA under the security policy. The specified site key needs to be created from the reCAPTCHA API. The user is responsible for the validity of the specified site key. If not specified, a Google-managed site key is used.
         * 
         * @return builder
         * 
         */
        public Builder redirectSiteKey(String redirectSiteKey) {
            return redirectSiteKey(Output.of(redirectSiteKey));
        }

        public SecurityPolicyRecaptchaOptionsConfigArgs build() {
            $.redirectSiteKey = Objects.requireNonNull($.redirectSiteKey, "expected parameter 'redirectSiteKey' to be non-null");
            return $;
        }
    }

}
