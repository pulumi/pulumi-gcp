// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentPatchConfigAptArgs;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentPatchConfigGooArgs;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentPatchConfigPostStepArgs;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentPatchConfigPreStepArgs;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentPatchConfigWindowsUpdateArgs;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentPatchConfigYumArgs;
import com.pulumi.gcp.osconfig.inputs.PatchDeploymentPatchConfigZypperArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PatchDeploymentPatchConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PatchDeploymentPatchConfigArgs Empty = new PatchDeploymentPatchConfigArgs();

    /**
     * Apt update settings. Use this setting to override the default apt patch rules.
     * Structure is documented below.
     * 
     */
    @Import(name="apt")
    private @Nullable Output<PatchDeploymentPatchConfigAptArgs> apt;

    /**
     * @return Apt update settings. Use this setting to override the default apt patch rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PatchDeploymentPatchConfigAptArgs>> apt() {
        return Optional.ofNullable(this.apt);
    }

    /**
     * goo update settings. Use this setting to override the default goo patch rules.
     * Structure is documented below.
     * 
     */
    @Import(name="goo")
    private @Nullable Output<PatchDeploymentPatchConfigGooArgs> goo;

    /**
     * @return goo update settings. Use this setting to override the default goo patch rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PatchDeploymentPatchConfigGooArgs>> goo() {
        return Optional.ofNullable(this.goo);
    }

    /**
     * Allows the patch job to run on Managed instance groups (MIGs).
     * 
     */
    @Import(name="migInstancesAllowed")
    private @Nullable Output<Boolean> migInstancesAllowed;

    /**
     * @return Allows the patch job to run on Managed instance groups (MIGs).
     * 
     */
    public Optional<Output<Boolean>> migInstancesAllowed() {
        return Optional.ofNullable(this.migInstancesAllowed);
    }

    /**
     * The ExecStep to run after the patch update.
     * Structure is documented below.
     * 
     */
    @Import(name="postStep")
    private @Nullable Output<PatchDeploymentPatchConfigPostStepArgs> postStep;

    /**
     * @return The ExecStep to run after the patch update.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PatchDeploymentPatchConfigPostStepArgs>> postStep() {
        return Optional.ofNullable(this.postStep);
    }

    /**
     * The ExecStep to run before the patch update.
     * Structure is documented below.
     * 
     */
    @Import(name="preStep")
    private @Nullable Output<PatchDeploymentPatchConfigPreStepArgs> preStep;

    /**
     * @return The ExecStep to run before the patch update.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PatchDeploymentPatchConfigPreStepArgs>> preStep() {
        return Optional.ofNullable(this.preStep);
    }

    /**
     * Post-patch reboot settings.
     * Possible values are `DEFAULT`, `ALWAYS`, and `NEVER`.
     * 
     */
    @Import(name="rebootConfig")
    private @Nullable Output<String> rebootConfig;

    /**
     * @return Post-patch reboot settings.
     * Possible values are `DEFAULT`, `ALWAYS`, and `NEVER`.
     * 
     */
    public Optional<Output<String>> rebootConfig() {
        return Optional.ofNullable(this.rebootConfig);
    }

    /**
     * Windows update settings. Use this setting to override the default Windows patch rules.
     * Structure is documented below.
     * 
     */
    @Import(name="windowsUpdate")
    private @Nullable Output<PatchDeploymentPatchConfigWindowsUpdateArgs> windowsUpdate;

    /**
     * @return Windows update settings. Use this setting to override the default Windows patch rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PatchDeploymentPatchConfigWindowsUpdateArgs>> windowsUpdate() {
        return Optional.ofNullable(this.windowsUpdate);
    }

    /**
     * Yum update settings. Use this setting to override the default yum patch rules.
     * Structure is documented below.
     * 
     */
    @Import(name="yum")
    private @Nullable Output<PatchDeploymentPatchConfigYumArgs> yum;

    /**
     * @return Yum update settings. Use this setting to override the default yum patch rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PatchDeploymentPatchConfigYumArgs>> yum() {
        return Optional.ofNullable(this.yum);
    }

    /**
     * zypper update settings. Use this setting to override the default zypper patch rules.
     * Structure is documented below.
     * 
     */
    @Import(name="zypper")
    private @Nullable Output<PatchDeploymentPatchConfigZypperArgs> zypper;

    /**
     * @return zypper update settings. Use this setting to override the default zypper patch rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PatchDeploymentPatchConfigZypperArgs>> zypper() {
        return Optional.ofNullable(this.zypper);
    }

    private PatchDeploymentPatchConfigArgs() {}

    private PatchDeploymentPatchConfigArgs(PatchDeploymentPatchConfigArgs $) {
        this.apt = $.apt;
        this.goo = $.goo;
        this.migInstancesAllowed = $.migInstancesAllowed;
        this.postStep = $.postStep;
        this.preStep = $.preStep;
        this.rebootConfig = $.rebootConfig;
        this.windowsUpdate = $.windowsUpdate;
        this.yum = $.yum;
        this.zypper = $.zypper;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PatchDeploymentPatchConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PatchDeploymentPatchConfigArgs $;

        public Builder() {
            $ = new PatchDeploymentPatchConfigArgs();
        }

        public Builder(PatchDeploymentPatchConfigArgs defaults) {
            $ = new PatchDeploymentPatchConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apt Apt update settings. Use this setting to override the default apt patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder apt(@Nullable Output<PatchDeploymentPatchConfigAptArgs> apt) {
            $.apt = apt;
            return this;
        }

        /**
         * @param apt Apt update settings. Use this setting to override the default apt patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder apt(PatchDeploymentPatchConfigAptArgs apt) {
            return apt(Output.of(apt));
        }

        /**
         * @param goo goo update settings. Use this setting to override the default goo patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder goo(@Nullable Output<PatchDeploymentPatchConfigGooArgs> goo) {
            $.goo = goo;
            return this;
        }

        /**
         * @param goo goo update settings. Use this setting to override the default goo patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder goo(PatchDeploymentPatchConfigGooArgs goo) {
            return goo(Output.of(goo));
        }

        /**
         * @param migInstancesAllowed Allows the patch job to run on Managed instance groups (MIGs).
         * 
         * @return builder
         * 
         */
        public Builder migInstancesAllowed(@Nullable Output<Boolean> migInstancesAllowed) {
            $.migInstancesAllowed = migInstancesAllowed;
            return this;
        }

        /**
         * @param migInstancesAllowed Allows the patch job to run on Managed instance groups (MIGs).
         * 
         * @return builder
         * 
         */
        public Builder migInstancesAllowed(Boolean migInstancesAllowed) {
            return migInstancesAllowed(Output.of(migInstancesAllowed));
        }

        /**
         * @param postStep The ExecStep to run after the patch update.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder postStep(@Nullable Output<PatchDeploymentPatchConfigPostStepArgs> postStep) {
            $.postStep = postStep;
            return this;
        }

        /**
         * @param postStep The ExecStep to run after the patch update.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder postStep(PatchDeploymentPatchConfigPostStepArgs postStep) {
            return postStep(Output.of(postStep));
        }

        /**
         * @param preStep The ExecStep to run before the patch update.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder preStep(@Nullable Output<PatchDeploymentPatchConfigPreStepArgs> preStep) {
            $.preStep = preStep;
            return this;
        }

        /**
         * @param preStep The ExecStep to run before the patch update.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder preStep(PatchDeploymentPatchConfigPreStepArgs preStep) {
            return preStep(Output.of(preStep));
        }

        /**
         * @param rebootConfig Post-patch reboot settings.
         * Possible values are `DEFAULT`, `ALWAYS`, and `NEVER`.
         * 
         * @return builder
         * 
         */
        public Builder rebootConfig(@Nullable Output<String> rebootConfig) {
            $.rebootConfig = rebootConfig;
            return this;
        }

        /**
         * @param rebootConfig Post-patch reboot settings.
         * Possible values are `DEFAULT`, `ALWAYS`, and `NEVER`.
         * 
         * @return builder
         * 
         */
        public Builder rebootConfig(String rebootConfig) {
            return rebootConfig(Output.of(rebootConfig));
        }

        /**
         * @param windowsUpdate Windows update settings. Use this setting to override the default Windows patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder windowsUpdate(@Nullable Output<PatchDeploymentPatchConfigWindowsUpdateArgs> windowsUpdate) {
            $.windowsUpdate = windowsUpdate;
            return this;
        }

        /**
         * @param windowsUpdate Windows update settings. Use this setting to override the default Windows patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder windowsUpdate(PatchDeploymentPatchConfigWindowsUpdateArgs windowsUpdate) {
            return windowsUpdate(Output.of(windowsUpdate));
        }

        /**
         * @param yum Yum update settings. Use this setting to override the default yum patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder yum(@Nullable Output<PatchDeploymentPatchConfigYumArgs> yum) {
            $.yum = yum;
            return this;
        }

        /**
         * @param yum Yum update settings. Use this setting to override the default yum patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder yum(PatchDeploymentPatchConfigYumArgs yum) {
            return yum(Output.of(yum));
        }

        /**
         * @param zypper zypper update settings. Use this setting to override the default zypper patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder zypper(@Nullable Output<PatchDeploymentPatchConfigZypperArgs> zypper) {
            $.zypper = zypper;
            return this;
        }

        /**
         * @param zypper zypper update settings. Use this setting to override the default zypper patch rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder zypper(PatchDeploymentPatchConfigZypperArgs zypper) {
            return zypper(Output.of(zypper));
        }

        public PatchDeploymentPatchConfigArgs build() {
            return $;
        }
    }

}
