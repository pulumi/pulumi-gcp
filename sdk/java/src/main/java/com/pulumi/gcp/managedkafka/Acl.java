// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.managedkafka.AclArgs;
import com.pulumi.gcp.managedkafka.inputs.AclState;
import com.pulumi.gcp.managedkafka.outputs.AclAclEntry;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A Managed Service for Apache Kafka ACL. Apache Kafka is a trademark owned by the Apache Software Foundation.
 * 
 * ## Example Usage
 * 
 * ### Managedkafka Acl Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.managedkafka.Cluster;
 * import com.pulumi.gcp.managedkafka.ClusterArgs;
 * import com.pulumi.gcp.managedkafka.inputs.ClusterCapacityConfigArgs;
 * import com.pulumi.gcp.managedkafka.inputs.ClusterGcpConfigArgs;
 * import com.pulumi.gcp.managedkafka.inputs.ClusterGcpConfigAccessConfigArgs;
 * import com.pulumi.gcp.managedkafka.Acl;
 * import com.pulumi.gcp.managedkafka.AclArgs;
 * import com.pulumi.gcp.managedkafka.inputs.AclAclEntryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *         var cluster = new Cluster("cluster", ClusterArgs.builder()
 *             .clusterId("my-cluster")
 *             .location("us-central1")
 *             .capacityConfig(ClusterCapacityConfigArgs.builder()
 *                 .vcpuCount("3")
 *                 .memoryBytes("3221225472")
 *                 .build())
 *             .gcpConfig(ClusterGcpConfigArgs.builder()
 *                 .accessConfig(ClusterGcpConfigAccessConfigArgs.builder()
 *                     .networkConfigs(ClusterGcpConfigAccessConfigNetworkConfigArgs.builder()
 *                         .subnet(String.format("projects/%s/regions/us-central1/subnetworks/default", project.number()))
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var example = new Acl("example", AclArgs.builder()
 *             .aclId("topic/mytopic")
 *             .cluster(cluster.clusterId())
 *             .location("us-central1")
 *             .aclEntries(            
 *                 AclAclEntryArgs.builder()
 *                     .principal("User:admin}{@literal @}{@code my-project.iam.gserviceaccount.com")
 *                     .permissionType("ALLOW")
 *                     .operation("ALL")
 *                     .host("*")
 *                     .build(),
 *                 AclAclEntryArgs.builder()
 *                     .principal("User:producer-client}{@literal @}{@code my-project.iam.gserviceaccount.com")
 *                     .permissionType("ALLOW")
 *                     .operation("WRITE")
 *                     .host("*")
 *                     .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Acl can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/clusters/{{cluster}}/acls/{{acl_id}}`
 * 
 * When using the `pulumi import` command, Acl can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:managedkafka/acl:Acl default projects/{{project}}/locations/{{location}}/clusters/{{cluster}}/acls/{{acl_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:managedkafka/acl:Acl")
public class Acl extends com.pulumi.resources.CustomResource {
    /**
     * The acl entries that apply to the resource pattern. The maximum number of allowed entries is 100.
     * Structure is documented below.
     * 
     */
    @Export(name="aclEntries", refs={List.class,AclAclEntry.class}, tree="[0,1]")
    private Output<List<AclAclEntry>> aclEntries;

    /**
     * @return The acl entries that apply to the resource pattern. The maximum number of allowed entries is 100.
     * Structure is documented below.
     * 
     */
    public Output<List<AclAclEntry>> aclEntries() {
        return this.aclEntries;
    }
    /**
     * The ID to use for the acl, which will become the final component of the acl&#39;s name. The structure of `aclId` defines the Resource Pattern (resource_type, resource_name, pattern_type) of the acl. `aclId` is structured like one of the following:
     * For acls on the cluster: `cluster`
     * For acls on a single resource within the cluster: `topic/{resource_name}` `consumerGroup/{resource_name}` `transactionalId/{resource_name}`
     * For acls on all resources that match a prefix: `topicPrefixed/{resource_name}` `consumerGroupPrefixed/{resource_name}` `transactionalIdPrefixed/{resource_name}`
     * For acls on all resources of a given type (i.e. the wildcard literal &#39;*&#39;&#39;): `allTopics` (represents `topic/*`) `allConsumerGroups` (represents `consumerGroup/*`) `allTransactionalIds` (represents `transactionalId/*`).
     * 
     */
    @Export(name="aclId", refs={String.class}, tree="[0]")
    private Output<String> aclId;

    /**
     * @return The ID to use for the acl, which will become the final component of the acl&#39;s name. The structure of `aclId` defines the Resource Pattern (resource_type, resource_name, pattern_type) of the acl. `aclId` is structured like one of the following:
     * For acls on the cluster: `cluster`
     * For acls on a single resource within the cluster: `topic/{resource_name}` `consumerGroup/{resource_name}` `transactionalId/{resource_name}`
     * For acls on all resources that match a prefix: `topicPrefixed/{resource_name}` `consumerGroupPrefixed/{resource_name}` `transactionalIdPrefixed/{resource_name}`
     * For acls on all resources of a given type (i.e. the wildcard literal &#39;*&#39;&#39;): `allTopics` (represents `topic/*`) `allConsumerGroups` (represents `consumerGroup/*`) `allTransactionalIds` (represents `transactionalId/*`).
     * 
     */
    public Output<String> aclId() {
        return this.aclId;
    }
    /**
     * The cluster name.
     * 
     */
    @Export(name="cluster", refs={String.class}, tree="[0]")
    private Output<String> cluster;

    /**
     * @return The cluster name.
     * 
     */
    public Output<String> cluster() {
        return this.cluster;
    }
    /**
     * `etag` is used for concurrency control. An `etag` is returned in the
     * response to `GetAcl` and `CreateAcl`. Callers are required to put that etag
     * in the request to `UpdateAcl` to ensure that their change will be applied
     * to the same version of the acl that exists in the Kafka Cluster.
     * A terminal &#39;T&#39; character in the etag indicates that the AclEntries were
     * truncated due to repeated field limits.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return `etag` is used for concurrency control. An `etag` is returned in the
     * response to `GetAcl` and `CreateAcl`. Callers are required to put that etag
     * in the request to `UpdateAcl` to ensure that their change will be applied
     * to the same version of the acl that exists in the Kafka Cluster.
     * A terminal &#39;T&#39; character in the etag indicates that the AclEntries were
     * truncated due to repeated field limits.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of supported locations.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of supported locations.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the acl. The `ACL_ID` segment is used when connecting directly to the cluster. Must be in the format `projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID/acls/ACL_ID`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the acl. The `ACL_ID` segment is used when connecting directly to the cluster. Must be in the format `projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID/acls/ACL_ID`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The acl pattern type derived from the name. One of: LITERAL, PREFIXED.
     * 
     */
    @Export(name="patternType", refs={String.class}, tree="[0]")
    private Output<String> patternType;

    /**
     * @return The acl pattern type derived from the name. One of: LITERAL, PREFIXED.
     * 
     */
    public Output<String> patternType() {
        return this.patternType;
    }
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * The acl resource name derived from the name. For cluster resource_type, this is always &#34;kafka-cluster&#34;. Can be the wildcard literal &#34;*&#34;.
     * 
     */
    @Export(name="resourceName", refs={String.class}, tree="[0]")
    private Output<String> resourceName;

    /**
     * @return The acl resource name derived from the name. For cluster resource_type, this is always &#34;kafka-cluster&#34;. Can be the wildcard literal &#34;*&#34;.
     * 
     */
    public Output<String> resourceName() {
        return this.resourceName;
    }
    /**
     * The acl resource type derived from the name. One of: CLUSTER, TOPIC, GROUP, TRANSACTIONAL_ID.
     * 
     */
    @Export(name="resourceType", refs={String.class}, tree="[0]")
    private Output<String> resourceType;

    /**
     * @return The acl resource type derived from the name. One of: CLUSTER, TOPIC, GROUP, TRANSACTIONAL_ID.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Acl(java.lang.String name) {
        this(name, AclArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Acl(java.lang.String name, AclArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Acl(java.lang.String name, AclArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:managedkafka/acl:Acl", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Acl(java.lang.String name, Output<java.lang.String> id, @Nullable AclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:managedkafka/acl:Acl", name, state, makeResourceOptions(options, id), false);
    }

    private static AclArgs makeArgs(AclArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AclArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Acl get(java.lang.String name, Output<java.lang.String> id, @Nullable AclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Acl(name, id, state, options);
    }
}
