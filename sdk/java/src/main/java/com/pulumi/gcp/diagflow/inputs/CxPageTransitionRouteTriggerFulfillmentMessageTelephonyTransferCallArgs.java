// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs Empty = new CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs();

    /**
     * Transfer the call to a phone number in E.164 format.
     * 
     */
    @Import(name="phoneNumber", required=true)
    private Output<String> phoneNumber;

    /**
     * @return Transfer the call to a phone number in E.164 format.
     * 
     */
    public Output<String> phoneNumber() {
        return this.phoneNumber;
    }

    private CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs() {}

    private CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs(CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs $) {
        this.phoneNumber = $.phoneNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs $;

        public Builder() {
            $ = new CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs();
        }

        public Builder(CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs defaults) {
            $ = new CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param phoneNumber Transfer the call to a phone number in E.164 format.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(Output<String> phoneNumber) {
            $.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * @param phoneNumber Transfer the call to a phone number in E.164 format.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(String phoneNumber) {
            return phoneNumber(Output.of(phoneNumber));
        }

        public CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs build() {
            if ($.phoneNumber == null) {
                throw new MissingRequiredPropertyException("CxPageTransitionRouteTriggerFulfillmentMessageTelephonyTransferCallArgs", "phoneNumber");
            }
            return $;
        }
    }

}
