// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.bigquery.TableArgs;
import com.pulumi.gcp.bigquery.inputs.TableState;
import com.pulumi.gcp.bigquery.outputs.TableEncryptionConfiguration;
import com.pulumi.gcp.bigquery.outputs.TableExternalDataConfiguration;
import com.pulumi.gcp.bigquery.outputs.TableMaterializedView;
import com.pulumi.gcp.bigquery.outputs.TableRangePartitioning;
import com.pulumi.gcp.bigquery.outputs.TableTableConstraints;
import com.pulumi.gcp.bigquery.outputs.TableTableReplicationInfo;
import com.pulumi.gcp.bigquery.outputs.TableTimePartitioning;
import com.pulumi.gcp.bigquery.outputs.TableView;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a table resource in a dataset for Google BigQuery. For more information see
 * [the official documentation](https://cloud.google.com/bigquery/docs/) and
 * [API](https://cloud.google.com/bigquery/docs/reference/rest/v2/tables).
 * 
 * &gt; **Note**: On newer versions of the provider, you must explicitly set `deletion_protection=false`
 * (and run `pulumi update` to write the field to state) in order to destroy an instance.
 * It is recommended to not set this field (or set it to true) until you&#39;re ready to destroy.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigquery.Dataset;
 * import com.pulumi.gcp.bigquery.DatasetArgs;
 * import com.pulumi.gcp.bigquery.Table;
 * import com.pulumi.gcp.bigquery.TableArgs;
 * import com.pulumi.gcp.bigquery.inputs.TableTimePartitioningArgs;
 * import com.pulumi.gcp.bigquery.inputs.TableExternalDataConfigurationArgs;
 * import com.pulumi.gcp.bigquery.inputs.TableExternalDataConfigurationGoogleSheetsOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Dataset("default", DatasetArgs.builder()
 *             .datasetId("foo")
 *             .friendlyName("test")
 *             .description("This is a test description")
 *             .location("EU")
 *             .defaultTableExpirationMs(3600000)
 *             .labels(Map.of("env", "default"))
 *             .build());
 * 
 *         var defaultTable = new Table("defaultTable", TableArgs.builder()
 *             .datasetId(default_.datasetId())
 *             .tableId("bar")
 *             .timePartitioning(TableTimePartitioningArgs.builder()
 *                 .type("DAY")
 *                 .build())
 *             .labels(Map.of("env", "default"))
 *             .schema("""
 * [
 *   {
 *     "name": "permalink",
 *     "type": "STRING",
 *     "mode": "NULLABLE",
 *     "description": "The Permalink"
 *   },
 *   {
 *     "name": "state",
 *     "type": "STRING",
 *     "mode": "NULLABLE",
 *     "description": "State where the head office is located"
 *   }
 * ]
 *             """)
 *             .build());
 * 
 *         var sheet = new Table("sheet", TableArgs.builder()
 *             .datasetId(default_.datasetId())
 *             .tableId("sheet")
 *             .externalDataConfiguration(TableExternalDataConfigurationArgs.builder()
 *                 .autodetect(true)
 *                 .sourceFormat("GOOGLE_SHEETS")
 *                 .googleSheetsOptions(TableExternalDataConfigurationGoogleSheetsOptionsArgs.builder()
 *                     .skipLeadingRows(1)
 *                     .build())
 *                 .sourceUris("https://docs.google.com/spreadsheets/d/123456789012345")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * BigQuery tables can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}`
 * 
 * * `{{project}}/{{dataset_id}}/{{table_id}}`
 * 
 * * `{{dataset_id}}/{{table_id}}`
 * 
 * When using the `pulumi import` command, BigQuery tables can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:bigquery/table:Table default projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:bigquery/table:Table default {{project}}/{{dataset_id}}/{{table_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:bigquery/table:Table default {{dataset_id}}/{{table_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:bigquery/table:Table")
public class Table extends com.pulumi.resources.CustomResource {
    /**
     * Specifies column names to use for data clustering.
     * Up to four top-level columns are allowed, and should be specified in
     * descending priority order.
     * 
     */
    @Export(name="clusterings", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> clusterings;

    /**
     * @return Specifies column names to use for data clustering.
     * Up to four top-level columns are allowed, and should be specified in
     * descending priority order.
     * 
     */
    public Output<Optional<List<String>>> clusterings() {
        return Codegen.optional(this.clusterings);
    }
    /**
     * The time when this table was created, in milliseconds since the epoch.
     * 
     */
    @Export(name="creationTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> creationTime;

    /**
     * @return The time when this table was created, in milliseconds since the epoch.
     * 
     */
    public Output<Integer> creationTime() {
        return this.creationTime;
    }
    /**
     * The dataset ID to create the table in.
     * Changing this forces a new resource to be created.
     * 
     */
    @Export(name="datasetId", refs={String.class}, tree="[0]")
    private Output<String> datasetId;

    /**
     * @return The dataset ID to create the table in.
     * Changing this forces a new resource to be created.
     * 
     */
    public Output<String> datasetId() {
        return this.datasetId;
    }
    /**
     * Whether or not to allow the provider to destroy the instance. Unless this field is set to false
     * in state, a `=destroy` or `=update` that would delete the instance will fail.
     * 
     */
    @Export(name="deletionProtection", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deletionProtection;

    /**
     * @return Whether or not to allow the provider to destroy the instance. Unless this field is set to false
     * in state, a `=destroy` or `=update` that would delete the instance will fail.
     * 
     */
    public Output<Optional<Boolean>> deletionProtection() {
        return Codegen.optional(this.deletionProtection);
    }
    /**
     * The field description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The field description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     * * &lt;a name=&#34;schema&#34;&gt;&lt;/a&gt;`schema` - (Optional) A JSON schema for the table.
     * 
     * ~&gt;**NOTE:** Because this field expects a JSON string, any changes to the
     * string will create a diff, even if the JSON itself hasn&#39;t changed.
     * If the API returns a different value for the same schema, e.g. it
     * switched the order of values or replaced `STRUCT` field type with `RECORD`
     * field type, we currently cannot suppress the recurring diff this causes.
     * As a workaround, we recommend using the schema as returned by the API.
     * 
     * ~&gt;**NOTE:**  If you use `external_data_configuration`
     * documented below and do **not** set
     * `external_data_configuration.connection_id`, schemas must be specified
     * with `external_data_configuration.schema`. Otherwise, schemas must be
     * specified with this top-level field.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     * * &lt;a name=&#34;schema&#34;&gt;&lt;/a&gt;`schema` - (Optional) A JSON schema for the table.
     * 
     * ~&gt;**NOTE:** Because this field expects a JSON string, any changes to the
     * string will create a diff, even if the JSON itself hasn&#39;t changed.
     * If the API returns a different value for the same schema, e.g. it
     * switched the order of values or replaced `STRUCT` field type with `RECORD`
     * field type, we currently cannot suppress the recurring diff this causes.
     * As a workaround, we recommend using the schema as returned by the API.
     * 
     * ~&gt;**NOTE:**  If you use `external_data_configuration`
     * documented below and do **not** set
     * `external_data_configuration.connection_id`, schemas must be specified
     * with `external_data_configuration.schema`. Otherwise, schemas must be
     * specified with this top-level field.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Specifies how the table should be encrypted.
     * If left blank, the table will be encrypted with a Google-managed key; that process
     * is transparent to the user.  Structure is documented below.
     * 
     */
    @Export(name="encryptionConfiguration", refs={TableEncryptionConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ TableEncryptionConfiguration> encryptionConfiguration;

    /**
     * @return Specifies how the table should be encrypted.
     * If left blank, the table will be encrypted with a Google-managed key; that process
     * is transparent to the user.  Structure is documented below.
     * 
     */
    public Output<Optional<TableEncryptionConfiguration>> encryptionConfiguration() {
        return Codegen.optional(this.encryptionConfiguration);
    }
    /**
     * A hash of the resource.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return A hash of the resource.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * The time when this table expires, in
     * milliseconds since the epoch. If not present, the table will persist
     * indefinitely. Expired tables will be deleted and their storage
     * reclaimed.
     * 
     */
    @Export(name="expirationTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> expirationTime;

    /**
     * @return The time when this table expires, in
     * milliseconds since the epoch. If not present, the table will persist
     * indefinitely. Expired tables will be deleted and their storage
     * reclaimed.
     * 
     */
    public Output<Integer> expirationTime() {
        return this.expirationTime;
    }
    /**
     * Describes the data format,
     * location, and other properties of a table stored outside of BigQuery.
     * By defining these properties, the data source can then be queried as
     * if it were a standard BigQuery table. Structure is documented below.
     * 
     */
    @Export(name="externalDataConfiguration", refs={TableExternalDataConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ TableExternalDataConfiguration> externalDataConfiguration;

    /**
     * @return Describes the data format,
     * location, and other properties of a table stored outside of BigQuery.
     * By defining these properties, the data source can then be queried as
     * if it were a standard BigQuery table. Structure is documented below.
     * 
     */
    public Output<Optional<TableExternalDataConfiguration>> externalDataConfiguration() {
        return Codegen.optional(this.externalDataConfiguration);
    }
    /**
     * A descriptive name for the table.
     * 
     */
    @Export(name="friendlyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> friendlyName;

    /**
     * @return A descriptive name for the table.
     * 
     */
    public Output<Optional<String>> friendlyName() {
        return Codegen.optional(this.friendlyName);
    }
    /**
     * A mapping of labels to assign to the resource.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field &#39;effective_labels&#39; for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return A mapping of labels to assign to the resource.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field &#39;effective_labels&#39; for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The time when this table was last modified, in milliseconds since the epoch.
     * 
     */
    @Export(name="lastModifiedTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> lastModifiedTime;

    /**
     * @return The time when this table was last modified, in milliseconds since the epoch.
     * 
     */
    public Output<Integer> lastModifiedTime() {
        return this.lastModifiedTime;
    }
    /**
     * The geographic location where the table resides. This value is inherited from the dataset.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The geographic location where the table resides. This value is inherited from the dataset.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * If specified, configures this table as a materialized view.
     * Structure is documented below.
     * 
     */
    @Export(name="materializedView", refs={TableMaterializedView.class}, tree="[0]")
    private Output</* @Nullable */ TableMaterializedView> materializedView;

    /**
     * @return If specified, configures this table as a materialized view.
     * Structure is documented below.
     * 
     */
    public Output<Optional<TableMaterializedView>> materializedView() {
        return Codegen.optional(this.materializedView);
    }
    /**
     * The maximum staleness of data that could be
     * returned when the table (or stale MV) is queried. Staleness encoded as a
     * string encoding of [SQL IntervalValue
     * type](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#interval_type).
     * 
     */
    @Export(name="maxStaleness", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> maxStaleness;

    /**
     * @return The maximum staleness of data that could be
     * returned when the table (or stale MV) is queried. Staleness encoded as a
     * string encoding of [SQL IntervalValue
     * type](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#interval_type).
     * 
     */
    public Output<Optional<String>> maxStaleness() {
        return Codegen.optional(this.maxStaleness);
    }
    /**
     * The size of this table in bytes, excluding any data in the streaming buffer.
     * 
     */
    @Export(name="numBytes", refs={Integer.class}, tree="[0]")
    private Output<Integer> numBytes;

    /**
     * @return The size of this table in bytes, excluding any data in the streaming buffer.
     * 
     */
    public Output<Integer> numBytes() {
        return this.numBytes;
    }
    /**
     * The number of bytes in the table that are considered &#34;long-term storage&#34;.
     * 
     */
    @Export(name="numLongTermBytes", refs={Integer.class}, tree="[0]")
    private Output<Integer> numLongTermBytes;

    /**
     * @return The number of bytes in the table that are considered &#34;long-term storage&#34;.
     * 
     */
    public Output<Integer> numLongTermBytes() {
        return this.numLongTermBytes;
    }
    /**
     * The number of rows of data in this table, excluding any data in the streaming buffer.
     * 
     */
    @Export(name="numRows", refs={Integer.class}, tree="[0]")
    private Output<Integer> numRows;

    /**
     * @return The number of rows of data in this table, excluding any data in the streaming buffer.
     * 
     */
    public Output<Integer> numRows() {
        return this.numRows;
    }
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * If specified, configures range-based
     * partitioning for this table. Structure is documented below.
     * 
     */
    @Export(name="rangePartitioning", refs={TableRangePartitioning.class}, tree="[0]")
    private Output</* @Nullable */ TableRangePartitioning> rangePartitioning;

    /**
     * @return If specified, configures range-based
     * partitioning for this table. Structure is documented below.
     * 
     */
    public Output<Optional<TableRangePartitioning>> rangePartitioning() {
        return Codegen.optional(this.rangePartitioning);
    }
    /**
     * If set to true, queries over this table
     * require a partition filter that can be used for partition elimination to be
     * specified.
     * 
     */
    @Export(name="requirePartitionFilter", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> requirePartitionFilter;

    /**
     * @return If set to true, queries over this table
     * require a partition filter that can be used for partition elimination to be
     * specified.
     * 
     */
    public Output<Optional<Boolean>> requirePartitionFilter() {
        return Codegen.optional(this.requirePartitionFilter);
    }
    /**
     * The tags attached to this table. Tag keys are
     * globally unique. Tag key is expected to be in the namespaced format, for
     * example &#34;123456789012/environment&#34; where 123456789012 is the ID of the
     * parent organization or project resource for this tag key. Tag value is
     * expected to be the short name, for example &#34;Production&#34;.
     * 
     */
    @Export(name="resourceTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> resourceTags;

    /**
     * @return The tags attached to this table. Tag keys are
     * globally unique. Tag key is expected to be in the namespaced format, for
     * example &#34;123456789012/environment&#34; where 123456789012 is the ID of the
     * parent organization or project resource for this tag key. Tag value is
     * expected to be the short name, for example &#34;Production&#34;.
     * 
     */
    public Output<Optional<Map<String,String>>> resourceTags() {
        return Codegen.optional(this.resourceTags);
    }
    /**
     * A JSON schema for the table.
     * 
     */
    @Export(name="schema", refs={String.class}, tree="[0]")
    private Output<String> schema;

    /**
     * @return A JSON schema for the table.
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }
    /**
     * The URI of the created resource.
     * 
     */
    @Export(name="selfLink", refs={String.class}, tree="[0]")
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> selfLink() {
        return this.selfLink;
    }
    /**
     * Defines the primary key and foreign keys.
     * Structure is documented below.
     * 
     */
    @Export(name="tableConstraints", refs={TableTableConstraints.class}, tree="[0]")
    private Output</* @Nullable */ TableTableConstraints> tableConstraints;

    /**
     * @return Defines the primary key and foreign keys.
     * Structure is documented below.
     * 
     */
    public Output<Optional<TableTableConstraints>> tableConstraints() {
        return Codegen.optional(this.tableConstraints);
    }
    /**
     * A unique ID for the resource.
     * Changing this forces a new resource to be created.
     * 
     */
    @Export(name="tableId", refs={String.class}, tree="[0]")
    private Output<String> tableId;

    /**
     * @return A unique ID for the resource.
     * Changing this forces a new resource to be created.
     * 
     */
    public Output<String> tableId() {
        return this.tableId;
    }
    /**
     * Replication info of a table created
     * using &#34;AS REPLICA&#34; DDL like:
     * `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`.
     * Structure is documented below.
     * 
     */
    @Export(name="tableReplicationInfo", refs={TableTableReplicationInfo.class}, tree="[0]")
    private Output</* @Nullable */ TableTableReplicationInfo> tableReplicationInfo;

    /**
     * @return Replication info of a table created
     * using &#34;AS REPLICA&#34; DDL like:
     * `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`.
     * Structure is documented below.
     * 
     */
    public Output<Optional<TableTableReplicationInfo>> tableReplicationInfo() {
        return Codegen.optional(this.tableReplicationInfo);
    }
    /**
     * If specified, configures time-based
     * partitioning for this table. Structure is documented below.
     * 
     */
    @Export(name="timePartitioning", refs={TableTimePartitioning.class}, tree="[0]")
    private Output</* @Nullable */ TableTimePartitioning> timePartitioning;

    /**
     * @return If specified, configures time-based
     * partitioning for this table. Structure is documented below.
     * 
     */
    public Output<Optional<TableTimePartitioning>> timePartitioning() {
        return Codegen.optional(this.timePartitioning);
    }
    /**
     * Describes the table type.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Describes the table type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * If specified, configures this table as a view.
     * Structure is documented below.
     * 
     */
    @Export(name="view", refs={TableView.class}, tree="[0]")
    private Output</* @Nullable */ TableView> view;

    /**
     * @return If specified, configures this table as a view.
     * Structure is documented below.
     * 
     */
    public Output<Optional<TableView>> view() {
        return Codegen.optional(this.view);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Table(java.lang.String name) {
        this(name, TableArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Table(java.lang.String name, TableArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Table(java.lang.String name, TableArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquery/table:Table", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Table(java.lang.String name, Output<java.lang.String> id, @Nullable TableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquery/table:Table", name, state, makeResourceOptions(options, id), false);
    }

    private static TableArgs makeArgs(TableArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TableArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Table get(java.lang.String name, Output<java.lang.String> id, @Nullable TableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Table(name, id, state, options);
    }
}
