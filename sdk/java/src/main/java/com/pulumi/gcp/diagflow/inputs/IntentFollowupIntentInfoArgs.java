// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntentFollowupIntentInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntentFollowupIntentInfoArgs Empty = new IntentFollowupIntentInfoArgs();

    /**
     * The unique identifier of the followup intent.
     * Format: projects/&lt;Project ID&gt;/agent/intents/&lt;Intent ID&gt;.
     * 
     */
    @Import(name="followupIntentName")
    private @Nullable Output<String> followupIntentName;

    /**
     * @return The unique identifier of the followup intent.
     * Format: projects/&lt;Project ID&gt;/agent/intents/&lt;Intent ID&gt;.
     * 
     */
    public Optional<Output<String>> followupIntentName() {
        return Optional.ofNullable(this.followupIntentName);
    }

    /**
     * The unique identifier of the parent intent in the chain of followup intents.
     * Format: projects/&lt;Project ID&gt;/agent/intents/&lt;Intent ID&gt;.
     * 
     */
    @Import(name="parentFollowupIntentName")
    private @Nullable Output<String> parentFollowupIntentName;

    /**
     * @return The unique identifier of the parent intent in the chain of followup intents.
     * Format: projects/&lt;Project ID&gt;/agent/intents/&lt;Intent ID&gt;.
     * 
     */
    public Optional<Output<String>> parentFollowupIntentName() {
        return Optional.ofNullable(this.parentFollowupIntentName);
    }

    private IntentFollowupIntentInfoArgs() {}

    private IntentFollowupIntentInfoArgs(IntentFollowupIntentInfoArgs $) {
        this.followupIntentName = $.followupIntentName;
        this.parentFollowupIntentName = $.parentFollowupIntentName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntentFollowupIntentInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntentFollowupIntentInfoArgs $;

        public Builder() {
            $ = new IntentFollowupIntentInfoArgs();
        }

        public Builder(IntentFollowupIntentInfoArgs defaults) {
            $ = new IntentFollowupIntentInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param followupIntentName The unique identifier of the followup intent.
         * Format: projects/&lt;Project ID&gt;/agent/intents/&lt;Intent ID&gt;.
         * 
         * @return builder
         * 
         */
        public Builder followupIntentName(@Nullable Output<String> followupIntentName) {
            $.followupIntentName = followupIntentName;
            return this;
        }

        /**
         * @param followupIntentName The unique identifier of the followup intent.
         * Format: projects/&lt;Project ID&gt;/agent/intents/&lt;Intent ID&gt;.
         * 
         * @return builder
         * 
         */
        public Builder followupIntentName(String followupIntentName) {
            return followupIntentName(Output.of(followupIntentName));
        }

        /**
         * @param parentFollowupIntentName The unique identifier of the parent intent in the chain of followup intents.
         * Format: projects/&lt;Project ID&gt;/agent/intents/&lt;Intent ID&gt;.
         * 
         * @return builder
         * 
         */
        public Builder parentFollowupIntentName(@Nullable Output<String> parentFollowupIntentName) {
            $.parentFollowupIntentName = parentFollowupIntentName;
            return this;
        }

        /**
         * @param parentFollowupIntentName The unique identifier of the parent intent in the chain of followup intents.
         * Format: projects/&lt;Project ID&gt;/agent/intents/&lt;Intent ID&gt;.
         * 
         * @return builder
         * 
         */
        public Builder parentFollowupIntentName(String parentFollowupIntentName) {
            return parentFollowupIntentName(Output.of(parentFollowupIntentName));
        }

        public IntentFollowupIntentInfoArgs build() {
            return $;
        }
    }

}
