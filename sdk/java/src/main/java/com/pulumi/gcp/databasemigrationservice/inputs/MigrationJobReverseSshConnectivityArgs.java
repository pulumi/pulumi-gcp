// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.databasemigrationservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationJobReverseSshConnectivityArgs extends com.pulumi.resources.ResourceArgs {

    public static final MigrationJobReverseSshConnectivityArgs Empty = new MigrationJobReverseSshConnectivityArgs();

    /**
     * The name of the virtual machine (Compute Engine) used as the bastion server
     * for the SSH tunnel.
     * 
     */
    @Import(name="vm")
    private @Nullable Output<String> vm;

    /**
     * @return The name of the virtual machine (Compute Engine) used as the bastion server
     * for the SSH tunnel.
     * 
     */
    public Optional<Output<String>> vm() {
        return Optional.ofNullable(this.vm);
    }

    /**
     * The IP of the virtual machine (Compute Engine) used as the bastion server
     * for the SSH tunnel.
     * 
     */
    @Import(name="vmIp")
    private @Nullable Output<String> vmIp;

    /**
     * @return The IP of the virtual machine (Compute Engine) used as the bastion server
     * for the SSH tunnel.
     * 
     */
    public Optional<Output<String>> vmIp() {
        return Optional.ofNullable(this.vmIp);
    }

    /**
     * The forwarding port of the virtual machine (Compute Engine) used as the
     * bastion server for the SSH tunnel.
     * 
     */
    @Import(name="vmPort")
    private @Nullable Output<Integer> vmPort;

    /**
     * @return The forwarding port of the virtual machine (Compute Engine) used as the
     * bastion server for the SSH tunnel.
     * 
     */
    public Optional<Output<Integer>> vmPort() {
        return Optional.ofNullable(this.vmPort);
    }

    /**
     * The name of the VPC to peer with the Cloud SQL private network.
     * 
     */
    @Import(name="vpc")
    private @Nullable Output<String> vpc;

    /**
     * @return The name of the VPC to peer with the Cloud SQL private network.
     * 
     */
    public Optional<Output<String>> vpc() {
        return Optional.ofNullable(this.vpc);
    }

    private MigrationJobReverseSshConnectivityArgs() {}

    private MigrationJobReverseSshConnectivityArgs(MigrationJobReverseSshConnectivityArgs $) {
        this.vm = $.vm;
        this.vmIp = $.vmIp;
        this.vmPort = $.vmPort;
        this.vpc = $.vpc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationJobReverseSshConnectivityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationJobReverseSshConnectivityArgs $;

        public Builder() {
            $ = new MigrationJobReverseSshConnectivityArgs();
        }

        public Builder(MigrationJobReverseSshConnectivityArgs defaults) {
            $ = new MigrationJobReverseSshConnectivityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param vm The name of the virtual machine (Compute Engine) used as the bastion server
         * for the SSH tunnel.
         * 
         * @return builder
         * 
         */
        public Builder vm(@Nullable Output<String> vm) {
            $.vm = vm;
            return this;
        }

        /**
         * @param vm The name of the virtual machine (Compute Engine) used as the bastion server
         * for the SSH tunnel.
         * 
         * @return builder
         * 
         */
        public Builder vm(String vm) {
            return vm(Output.of(vm));
        }

        /**
         * @param vmIp The IP of the virtual machine (Compute Engine) used as the bastion server
         * for the SSH tunnel.
         * 
         * @return builder
         * 
         */
        public Builder vmIp(@Nullable Output<String> vmIp) {
            $.vmIp = vmIp;
            return this;
        }

        /**
         * @param vmIp The IP of the virtual machine (Compute Engine) used as the bastion server
         * for the SSH tunnel.
         * 
         * @return builder
         * 
         */
        public Builder vmIp(String vmIp) {
            return vmIp(Output.of(vmIp));
        }

        /**
         * @param vmPort The forwarding port of the virtual machine (Compute Engine) used as the
         * bastion server for the SSH tunnel.
         * 
         * @return builder
         * 
         */
        public Builder vmPort(@Nullable Output<Integer> vmPort) {
            $.vmPort = vmPort;
            return this;
        }

        /**
         * @param vmPort The forwarding port of the virtual machine (Compute Engine) used as the
         * bastion server for the SSH tunnel.
         * 
         * @return builder
         * 
         */
        public Builder vmPort(Integer vmPort) {
            return vmPort(Output.of(vmPort));
        }

        /**
         * @param vpc The name of the VPC to peer with the Cloud SQL private network.
         * 
         * @return builder
         * 
         */
        public Builder vpc(@Nullable Output<String> vpc) {
            $.vpc = vpc;
            return this;
        }

        /**
         * @param vpc The name of the VPC to peer with the Cloud SQL private network.
         * 
         * @return builder
         * 
         */
        public Builder vpc(String vpc) {
            return vpc(Output.of(vpc));
        }

        public MigrationJobReverseSshConnectivityArgs build() {
            return $;
        }
    }

}
