// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.certificateauthority.outputs.CertificateCertificateDescriptionSubjectDescriptionSubject;
import com.pulumi.gcp.certificateauthority.outputs.CertificateCertificateDescriptionSubjectDescriptionSubjectAltName;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CertificateCertificateDescriptionSubjectDescription {
    private @Nullable String hexSerialNumber;
    /**
     * @return The desired lifetime of the CA certificate. Used to create the &#34;notBeforeTime&#34; and
     * &#34;notAfterTime&#34; fields inside an X.509 certificate. A duration in seconds with up to nine
     * fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private @Nullable String lifetime;
    private @Nullable String notAfterTime;
    private @Nullable String notBeforeTime;
    /**
     * @return The subject alternative name fields.
     * Structure is documented below.
     * 
     */
    private @Nullable List<CertificateCertificateDescriptionSubjectDescriptionSubjectAltName> subjectAltNames;
    /**
     * @return Contains distinguished name fields such as the location and organization.
     * Structure is documented below.
     * 
     */
    private @Nullable List<CertificateCertificateDescriptionSubjectDescriptionSubject> subjects;

    private CertificateCertificateDescriptionSubjectDescription() {}
    public Optional<String> hexSerialNumber() {
        return Optional.ofNullable(this.hexSerialNumber);
    }
    /**
     * @return The desired lifetime of the CA certificate. Used to create the &#34;notBeforeTime&#34; and
     * &#34;notAfterTime&#34; fields inside an X.509 certificate. A duration in seconds with up to nine
     * fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<String> lifetime() {
        return Optional.ofNullable(this.lifetime);
    }
    public Optional<String> notAfterTime() {
        return Optional.ofNullable(this.notAfterTime);
    }
    public Optional<String> notBeforeTime() {
        return Optional.ofNullable(this.notBeforeTime);
    }
    /**
     * @return The subject alternative name fields.
     * Structure is documented below.
     * 
     */
    public List<CertificateCertificateDescriptionSubjectDescriptionSubjectAltName> subjectAltNames() {
        return this.subjectAltNames == null ? List.of() : this.subjectAltNames;
    }
    /**
     * @return Contains distinguished name fields such as the location and organization.
     * Structure is documented below.
     * 
     */
    public List<CertificateCertificateDescriptionSubjectDescriptionSubject> subjects() {
        return this.subjects == null ? List.of() : this.subjects;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateCertificateDescriptionSubjectDescription defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hexSerialNumber;
        private @Nullable String lifetime;
        private @Nullable String notAfterTime;
        private @Nullable String notBeforeTime;
        private @Nullable List<CertificateCertificateDescriptionSubjectDescriptionSubjectAltName> subjectAltNames;
        private @Nullable List<CertificateCertificateDescriptionSubjectDescriptionSubject> subjects;
        public Builder() {}
        public Builder(CertificateCertificateDescriptionSubjectDescription defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hexSerialNumber = defaults.hexSerialNumber;
    	      this.lifetime = defaults.lifetime;
    	      this.notAfterTime = defaults.notAfterTime;
    	      this.notBeforeTime = defaults.notBeforeTime;
    	      this.subjectAltNames = defaults.subjectAltNames;
    	      this.subjects = defaults.subjects;
        }

        @CustomType.Setter
        public Builder hexSerialNumber(@Nullable String hexSerialNumber) {
            this.hexSerialNumber = hexSerialNumber;
            return this;
        }
        @CustomType.Setter
        public Builder lifetime(@Nullable String lifetime) {
            this.lifetime = lifetime;
            return this;
        }
        @CustomType.Setter
        public Builder notAfterTime(@Nullable String notAfterTime) {
            this.notAfterTime = notAfterTime;
            return this;
        }
        @CustomType.Setter
        public Builder notBeforeTime(@Nullable String notBeforeTime) {
            this.notBeforeTime = notBeforeTime;
            return this;
        }
        @CustomType.Setter
        public Builder subjectAltNames(@Nullable List<CertificateCertificateDescriptionSubjectDescriptionSubjectAltName> subjectAltNames) {
            this.subjectAltNames = subjectAltNames;
            return this;
        }
        public Builder subjectAltNames(CertificateCertificateDescriptionSubjectDescriptionSubjectAltName... subjectAltNames) {
            return subjectAltNames(List.of(subjectAltNames));
        }
        @CustomType.Setter
        public Builder subjects(@Nullable List<CertificateCertificateDescriptionSubjectDescriptionSubject> subjects) {
            this.subjects = subjects;
            return this;
        }
        public Builder subjects(CertificateCertificateDescriptionSubjectDescriptionSubject... subjects) {
            return subjects(List.of(subjects));
        }
        public CertificateCertificateDescriptionSubjectDescription build() {
            final var o = new CertificateCertificateDescriptionSubjectDescription();
            o.hexSerialNumber = hexSerialNumber;
            o.lifetime = lifetime;
            o.notAfterTime = notAfterTime;
            o.notBeforeTime = notBeforeTime;
            o.subjectAltNames = subjectAltNames;
            o.subjects = subjects;
            return o;
        }
    }
}
