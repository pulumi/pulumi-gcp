// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.osconfig.inputs.V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceFileArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs Empty = new V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs();

    /**
     * Optional arguments to pass to the source during execution.
     * 
     */
    @Import(name="args")
    private @Nullable Output<List<String>> args;

    /**
     * @return Optional arguments to pass to the source during execution.
     * 
     */
    public Optional<Output<List<String>>> args() {
        return Optional.ofNullable(this.args);
    }

    /**
     * A remote or local file.
     * Structure is documented below.
     * 
     */
    @Import(name="file")
    private @Nullable Output<V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceFileArgs> file;

    /**
     * @return A remote or local file.
     * Structure is documented below.
     * 
     */
    public Optional<Output<V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceFileArgs>> file() {
        return Optional.ofNullable(this.file);
    }

    /**
     * The script interpreter to use.
     * Possible values are: `NONE`, `SHELL`, `POWERSHELL`.
     * 
     */
    @Import(name="interpreter", required=true)
    private Output<String> interpreter;

    /**
     * @return The script interpreter to use.
     * Possible values are: `NONE`, `SHELL`, `POWERSHELL`.
     * 
     */
    public Output<String> interpreter() {
        return this.interpreter;
    }

    /**
     * Only recorded for enforce Exec.
     * Path to an output file (that is created by this Exec) whose
     * content will be recorded in OSPolicyResourceCompliance after a
     * successful run. Absence or failure to read this file will result in
     * this ExecResource being non-compliant. Output file size is limited to
     * 500K bytes.
     * 
     */
    @Import(name="outputFilePath")
    private @Nullable Output<String> outputFilePath;

    /**
     * @return Only recorded for enforce Exec.
     * Path to an output file (that is created by this Exec) whose
     * content will be recorded in OSPolicyResourceCompliance after a
     * successful run. Absence or failure to read this file will result in
     * this ExecResource being non-compliant. Output file size is limited to
     * 500K bytes.
     * 
     */
    public Optional<Output<String>> outputFilePath() {
        return Optional.ofNullable(this.outputFilePath);
    }

    /**
     * An inline script.
     * The size of the script is limited to 32KiB.
     * 
     */
    @Import(name="script")
    private @Nullable Output<String> script;

    /**
     * @return An inline script.
     * The size of the script is limited to 32KiB.
     * 
     */
    public Optional<Output<String>> script() {
        return Optional.ofNullable(this.script);
    }

    private V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs() {}

    private V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs(V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs $) {
        this.args = $.args;
        this.file = $.file;
        this.interpreter = $.interpreter;
        this.outputFilePath = $.outputFilePath;
        this.script = $.script;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs $;

        public Builder() {
            $ = new V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs();
        }

        public Builder(V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs defaults) {
            $ = new V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param args Optional arguments to pass to the source during execution.
         * 
         * @return builder
         * 
         */
        public Builder args(@Nullable Output<List<String>> args) {
            $.args = args;
            return this;
        }

        /**
         * @param args Optional arguments to pass to the source during execution.
         * 
         * @return builder
         * 
         */
        public Builder args(List<String> args) {
            return args(Output.of(args));
        }

        /**
         * @param args Optional arguments to pass to the source during execution.
         * 
         * @return builder
         * 
         */
        public Builder args(String... args) {
            return args(List.of(args));
        }

        /**
         * @param file A remote or local file.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder file(@Nullable Output<V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceFileArgs> file) {
            $.file = file;
            return this;
        }

        /**
         * @param file A remote or local file.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder file(V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceFileArgs file) {
            return file(Output.of(file));
        }

        /**
         * @param interpreter The script interpreter to use.
         * Possible values are: `NONE`, `SHELL`, `POWERSHELL`.
         * 
         * @return builder
         * 
         */
        public Builder interpreter(Output<String> interpreter) {
            $.interpreter = interpreter;
            return this;
        }

        /**
         * @param interpreter The script interpreter to use.
         * Possible values are: `NONE`, `SHELL`, `POWERSHELL`.
         * 
         * @return builder
         * 
         */
        public Builder interpreter(String interpreter) {
            return interpreter(Output.of(interpreter));
        }

        /**
         * @param outputFilePath Only recorded for enforce Exec.
         * Path to an output file (that is created by this Exec) whose
         * content will be recorded in OSPolicyResourceCompliance after a
         * successful run. Absence or failure to read this file will result in
         * this ExecResource being non-compliant. Output file size is limited to
         * 500K bytes.
         * 
         * @return builder
         * 
         */
        public Builder outputFilePath(@Nullable Output<String> outputFilePath) {
            $.outputFilePath = outputFilePath;
            return this;
        }

        /**
         * @param outputFilePath Only recorded for enforce Exec.
         * Path to an output file (that is created by this Exec) whose
         * content will be recorded in OSPolicyResourceCompliance after a
         * successful run. Absence or failure to read this file will result in
         * this ExecResource being non-compliant. Output file size is limited to
         * 500K bytes.
         * 
         * @return builder
         * 
         */
        public Builder outputFilePath(String outputFilePath) {
            return outputFilePath(Output.of(outputFilePath));
        }

        /**
         * @param script An inline script.
         * The size of the script is limited to 32KiB.
         * 
         * @return builder
         * 
         */
        public Builder script(@Nullable Output<String> script) {
            $.script = script;
            return this;
        }

        /**
         * @param script An inline script.
         * The size of the script is limited to 32KiB.
         * 
         * @return builder
         * 
         */
        public Builder script(String script) {
            return script(Output.of(script));
        }

        public V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs build() {
            if ($.interpreter == null) {
                throw new MissingRequiredPropertyException("V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceExecEnforceArgs", "interpreter");
            }
            return $;
        }
    }

}
