// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datacatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetPolicyTagIamPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPolicyTagIamPolicyArgs Empty = new GetPolicyTagIamPolicyArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="policyTag", required=true)
    private Output<String> policyTag;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> policyTag() {
        return this.policyTag;
    }

    private GetPolicyTagIamPolicyArgs() {}

    private GetPolicyTagIamPolicyArgs(GetPolicyTagIamPolicyArgs $) {
        this.policyTag = $.policyTag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyTagIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyTagIamPolicyArgs $;

        public Builder() {
            $ = new GetPolicyTagIamPolicyArgs();
        }

        public Builder(GetPolicyTagIamPolicyArgs defaults) {
            $ = new GetPolicyTagIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policyTag Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder policyTag(Output<String> policyTag) {
            $.policyTag = policyTag;
            return this;
        }

        /**
         * @param policyTag Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder policyTag(String policyTag) {
            return policyTag(Output.of(policyTag));
        }

        public GetPolicyTagIamPolicyArgs build() {
            if ($.policyTag == null) {
                throw new MissingRequiredPropertyException("GetPolicyTagIamPolicyArgs", "policyTag");
            }
            return $;
        }
    }

}
