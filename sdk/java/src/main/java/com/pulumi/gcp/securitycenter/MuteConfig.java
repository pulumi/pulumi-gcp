// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securitycenter;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.securitycenter.MuteConfigArgs;
import com.pulumi.gcp.securitycenter.inputs.MuteConfigState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Mute Findings is a volume management feature in Security Command Center
 * that lets you manually or programmatically hide irrelevant findings,
 * and create filters to automatically silence existing and future
 * findings based on criteria you specify.
 * 
 * To get more information about MuteConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/security-command-center/docs/reference/rest/v1/organizations.muteConfigs)
 * 
 * ## Example Usage
 * ### Scc Mute Config
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.securitycenter.MuteConfig;
 * import com.pulumi.gcp.securitycenter.MuteConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new MuteConfig(&#34;default&#34;, MuteConfigArgs.builder()        
 *             .description(&#34;My Mute Config&#34;)
 *             .filter(&#34;category: \&#34;OS_VULNERABILITY\&#34;&#34;)
 *             .muteConfigId(&#34;my-config&#34;)
 *             .parent(&#34;organizations/123456789&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * MuteConfig can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:securitycenter/muteConfig:MuteConfig default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:securitycenter/muteConfig:MuteConfig")
public class MuteConfig extends com.pulumi.resources.CustomResource {
    /**
     * The time at which the mute config was created. This field is set by
     * the server and will be ignored if provided on config creation.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time at which the mute config was created. This field is set by
     * the server and will be ignored if provided on config creation.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * A description of the mute config.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the mute config.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * An expression that defines the filter to apply across create/update
     * events of findings. While creating a filter string, be mindful of
     * the scope in which the mute configuration is being created. E.g.,
     * If a filter contains project = X but is created under the
     * project = Y scope, it might not match any findings.
     * 
     */
    @Export(name="filter", type=String.class, parameters={})
    private Output<String> filter;

    /**
     * @return An expression that defines the filter to apply across create/update
     * events of findings. While creating a filter string, be mindful of
     * the scope in which the mute configuration is being created. E.g.,
     * If a filter contains project = X but is created under the
     * project = Y scope, it might not match any findings.
     * 
     */
    public Output<String> filter() {
        return this.filter;
    }
    /**
     * Email address of the user who last edited the mute config. This
     * field is set by the server and will be ignored if provided on
     * config creation or update.
     * 
     */
    @Export(name="mostRecentEditor", type=String.class, parameters={})
    private Output<String> mostRecentEditor;

    /**
     * @return Email address of the user who last edited the mute config. This
     * field is set by the server and will be ignored if provided on
     * config creation or update.
     * 
     */
    public Output<String> mostRecentEditor() {
        return this.mostRecentEditor;
    }
    /**
     * Unique identifier provided by the client within the parent scope.
     * 
     */
    @Export(name="muteConfigId", type=String.class, parameters={})
    private Output<String> muteConfigId;

    /**
     * @return Unique identifier provided by the client within the parent scope.
     * 
     */
    public Output<String> muteConfigId() {
        return this.muteConfigId;
    }
    /**
     * Name of the mute config. Its format is
     * organizations/{organization}/muteConfigs/{configId},
     * folders/{folder}/muteConfigs/{configId},
     * or projects/{project}/muteConfigs/{configId}
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the mute config. Its format is
     * organizations/{organization}/muteConfigs/{configId},
     * folders/{folder}/muteConfigs/{configId},
     * or projects/{project}/muteConfigs/{configId}
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Resource name of the new mute configs&#39;s parent. Its format is
     * &#34;organizations/[organization_id]&#34;, &#34;folders/[folder_id]&#34;, or
     * &#34;projects/[project_id]&#34;.
     * 
     */
    @Export(name="parent", type=String.class, parameters={})
    private Output<String> parent;

    /**
     * @return Resource name of the new mute configs&#39;s parent. Its format is
     * &#34;organizations/[organization_id]&#34;, &#34;folders/[folder_id]&#34;, or
     * &#34;projects/[project_id]&#34;.
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }
    /**
     * Output only. The most recent time at which the mute config was
     * updated. This field is set by the server and will be ignored if
     * provided on config creation or update.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return Output only. The most recent time at which the mute config was
     * updated. This field is set by the server and will be ignored if
     * provided on config creation or update.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MuteConfig(String name) {
        this(name, MuteConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MuteConfig(String name, MuteConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MuteConfig(String name, MuteConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:securitycenter/muteConfig:MuteConfig", name, args == null ? MuteConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MuteConfig(String name, Output<String> id, @Nullable MuteConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:securitycenter/muteConfig:MuteConfig", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MuteConfig get(String name, Output<String> id, @Nullable MuteConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MuteConfig(name, id, state, options);
    }
}
