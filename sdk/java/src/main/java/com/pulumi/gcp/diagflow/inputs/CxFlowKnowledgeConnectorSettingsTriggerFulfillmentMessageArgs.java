// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.diagflow.inputs.CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccessArgs;
import com.pulumi.gcp.diagflow.inputs.CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteractionArgs;
import com.pulumi.gcp.diagflow.inputs.CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCardArgs;
import com.pulumi.gcp.diagflow.inputs.CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoffArgs;
import com.pulumi.gcp.diagflow.inputs.CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudioArgs;
import com.pulumi.gcp.diagflow.inputs.CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioTextArgs;
import com.pulumi.gcp.diagflow.inputs.CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudioArgs;
import com.pulumi.gcp.diagflow.inputs.CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCallArgs;
import com.pulumi.gcp.diagflow.inputs.CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTextArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs Empty = new CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs();

    /**
     * The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
     * 
     */
    @Import(name="channel")
    private @Nullable Output<String> channel;

    /**
     * @return The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
     * 
     */
    public Optional<Output<String>> channel() {
        return Optional.ofNullable(this.channel);
    }

    /**
     * Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
     * Dialogflow only uses this to determine which conversations should be counted as successful and doesn&#39;t process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don&#39;t return ConversationSuccess.
     * You may set this, for example:
     * * In the entryFulfillment of a Page if entering the page indicates that the conversation succeeded.
     * * In a webhook response when you determine that you handled the customer issue.
     *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     *   Structure is documented below.
     * 
     */
    @Import(name="conversationSuccess")
    private @Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccessArgs> conversationSuccess;

    /**
     * @return Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
     * Dialogflow only uses this to determine which conversations should be counted as successful and doesn&#39;t process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don&#39;t return ConversationSuccess.
     * You may set this, for example:
     * * In the entryFulfillment of a Page if entering the page indicates that the conversation succeeded.
     * * In a webhook response when you determine that you handled the customer issue.
     *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     *   Structure is documented below.
     * 
     */
    public Optional<Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccessArgs>> conversationSuccess() {
        return Optional.ofNullable(this.conversationSuccess);
    }

    /**
     * (Output)
     * This type has no fields.
     * Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    @Import(name="endInteractions")
    private @Nullable Output<List<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteractionArgs>> endInteractions;

    /**
     * @return (Output)
     * This type has no fields.
     * Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    public Optional<Output<List<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteractionArgs>>> endInteractions() {
        return Optional.ofNullable(this.endInteractions);
    }

    /**
     * This type has no fields.
     * Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card.
     * Otherwise, the info card response is skipped.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    @Import(name="knowledgeInfoCard")
    private @Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCardArgs> knowledgeInfoCard;

    /**
     * @return This type has no fields.
     * Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card.
     * Otherwise, the info card response is skipped.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    public Optional<Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCardArgs>> knowledgeInfoCard() {
        return Optional.ofNullable(this.knowledgeInfoCard);
    }

    /**
     * Indicates that the conversation should be handed off to a live agent.
     * Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
     * You may set this, for example:
     * * In the entryFulfillment of a Page if entering the page indicates something went extremely wrong in the conversation.
     * * In a webhook response when you determine that the customer issue can only be handled by a human.
     *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     *   Structure is documented below.
     * 
     */
    @Import(name="liveAgentHandoff")
    private @Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoffArgs> liveAgentHandoff;

    /**
     * @return Indicates that the conversation should be handed off to a live agent.
     * Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
     * You may set this, for example:
     * * In the entryFulfillment of a Page if entering the page indicates something went extremely wrong in the conversation.
     * * In a webhook response when you determine that the customer issue can only be handled by a human.
     *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     *   Structure is documented below.
     * 
     */
    public Optional<Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoffArgs>> liveAgentHandoff() {
        return Optional.ofNullable(this.liveAgentHandoff);
    }

    /**
     * (Output)
     * Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via playAudio. This message is generated by Dialogflow only and not supposed to be defined by the user.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="mixedAudios")
    private @Nullable Output<List<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudioArgs>> mixedAudios;

    /**
     * @return (Output)
     * Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via playAudio. This message is generated by Dialogflow only and not supposed to be defined by the user.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudioArgs>>> mixedAudios() {
        return Optional.ofNullable(this.mixedAudios);
    }

    /**
     * A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="outputAudioText")
    private @Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioTextArgs> outputAudioText;

    /**
     * @return A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioTextArgs>> outputAudioText() {
        return Optional.ofNullable(this.outputAudioText);
    }

    /**
     * Returns a response containing a custom, platform-specific payload.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    @Import(name="payload")
    private @Nullable Output<String> payload;

    /**
     * @return Returns a response containing a custom, platform-specific payload.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    public Optional<Output<String>> payload() {
        return Optional.ofNullable(this.payload);
    }

    /**
     * Specifies an audio clip to be played by the client as part of the response.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="playAudio")
    private @Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudioArgs> playAudio;

    /**
     * @return Specifies an audio clip to be played by the client as part of the response.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudioArgs>> playAudio() {
        return Optional.ofNullable(this.playAudio);
    }

    /**
     * Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="telephonyTransferCall")
    private @Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCallArgs> telephonyTransferCall;

    /**
     * @return Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCallArgs>> telephonyTransferCall() {
        return Optional.ofNullable(this.telephonyTransferCall);
    }

    /**
     * The text response message.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="text")
    private @Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTextArgs> text;

    /**
     * @return The text response message.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTextArgs>> text() {
        return Optional.ofNullable(this.text);
    }

    private CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs() {}

    private CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs $) {
        this.channel = $.channel;
        this.conversationSuccess = $.conversationSuccess;
        this.endInteractions = $.endInteractions;
        this.knowledgeInfoCard = $.knowledgeInfoCard;
        this.liveAgentHandoff = $.liveAgentHandoff;
        this.mixedAudios = $.mixedAudios;
        this.outputAudioText = $.outputAudioText;
        this.payload = $.payload;
        this.playAudio = $.playAudio;
        this.telephonyTransferCall = $.telephonyTransferCall;
        this.text = $.text;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs $;

        public Builder() {
            $ = new CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs();
        }

        public Builder(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs defaults) {
            $ = new CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param channel The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
         * 
         * @return builder
         * 
         */
        public Builder channel(@Nullable Output<String> channel) {
            $.channel = channel;
            return this;
        }

        /**
         * @param channel The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
         * 
         * @return builder
         * 
         */
        public Builder channel(String channel) {
            return channel(Output.of(channel));
        }

        /**
         * @param conversationSuccess Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
         * Dialogflow only uses this to determine which conversations should be counted as successful and doesn&#39;t process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don&#39;t return ConversationSuccess.
         * You may set this, for example:
         * * In the entryFulfillment of a Page if entering the page indicates that the conversation succeeded.
         * * In a webhook response when you determine that you handled the customer issue.
         *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conversationSuccess(@Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccessArgs> conversationSuccess) {
            $.conversationSuccess = conversationSuccess;
            return this;
        }

        /**
         * @param conversationSuccess Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
         * Dialogflow only uses this to determine which conversations should be counted as successful and doesn&#39;t process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don&#39;t return ConversationSuccess.
         * You may set this, for example:
         * * In the entryFulfillment of a Page if entering the page indicates that the conversation succeeded.
         * * In a webhook response when you determine that you handled the customer issue.
         *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conversationSuccess(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccessArgs conversationSuccess) {
            return conversationSuccess(Output.of(conversationSuccess));
        }

        /**
         * @param endInteractions (Output)
         * This type has no fields.
         * Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * 
         * @return builder
         * 
         */
        public Builder endInteractions(@Nullable Output<List<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteractionArgs>> endInteractions) {
            $.endInteractions = endInteractions;
            return this;
        }

        /**
         * @param endInteractions (Output)
         * This type has no fields.
         * Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * 
         * @return builder
         * 
         */
        public Builder endInteractions(List<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteractionArgs> endInteractions) {
            return endInteractions(Output.of(endInteractions));
        }

        /**
         * @param endInteractions (Output)
         * This type has no fields.
         * Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * 
         * @return builder
         * 
         */
        public Builder endInteractions(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteractionArgs... endInteractions) {
            return endInteractions(List.of(endInteractions));
        }

        /**
         * @param knowledgeInfoCard This type has no fields.
         * Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card.
         * Otherwise, the info card response is skipped.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeInfoCard(@Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCardArgs> knowledgeInfoCard) {
            $.knowledgeInfoCard = knowledgeInfoCard;
            return this;
        }

        /**
         * @param knowledgeInfoCard This type has no fields.
         * Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card.
         * Otherwise, the info card response is skipped.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * 
         * @return builder
         * 
         */
        public Builder knowledgeInfoCard(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCardArgs knowledgeInfoCard) {
            return knowledgeInfoCard(Output.of(knowledgeInfoCard));
        }

        /**
         * @param liveAgentHandoff Indicates that the conversation should be handed off to a live agent.
         * Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
         * You may set this, for example:
         * * In the entryFulfillment of a Page if entering the page indicates something went extremely wrong in the conversation.
         * * In a webhook response when you determine that the customer issue can only be handled by a human.
         *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder liveAgentHandoff(@Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoffArgs> liveAgentHandoff) {
            $.liveAgentHandoff = liveAgentHandoff;
            return this;
        }

        /**
         * @param liveAgentHandoff Indicates that the conversation should be handed off to a live agent.
         * Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
         * You may set this, for example:
         * * In the entryFulfillment of a Page if entering the page indicates something went extremely wrong in the conversation.
         * * In a webhook response when you determine that the customer issue can only be handled by a human.
         *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder liveAgentHandoff(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoffArgs liveAgentHandoff) {
            return liveAgentHandoff(Output.of(liveAgentHandoff));
        }

        /**
         * @param mixedAudios (Output)
         * Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via playAudio. This message is generated by Dialogflow only and not supposed to be defined by the user.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder mixedAudios(@Nullable Output<List<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudioArgs>> mixedAudios) {
            $.mixedAudios = mixedAudios;
            return this;
        }

        /**
         * @param mixedAudios (Output)
         * Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via playAudio. This message is generated by Dialogflow only and not supposed to be defined by the user.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder mixedAudios(List<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudioArgs> mixedAudios) {
            return mixedAudios(Output.of(mixedAudios));
        }

        /**
         * @param mixedAudios (Output)
         * Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via playAudio. This message is generated by Dialogflow only and not supposed to be defined by the user.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder mixedAudios(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudioArgs... mixedAudios) {
            return mixedAudios(List.of(mixedAudios));
        }

        /**
         * @param outputAudioText A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outputAudioText(@Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioTextArgs> outputAudioText) {
            $.outputAudioText = outputAudioText;
            return this;
        }

        /**
         * @param outputAudioText A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outputAudioText(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioTextArgs outputAudioText) {
            return outputAudioText(Output.of(outputAudioText));
        }

        /**
         * @param payload Returns a response containing a custom, platform-specific payload.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * 
         * @return builder
         * 
         */
        public Builder payload(@Nullable Output<String> payload) {
            $.payload = payload;
            return this;
        }

        /**
         * @param payload Returns a response containing a custom, platform-specific payload.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * 
         * @return builder
         * 
         */
        public Builder payload(String payload) {
            return payload(Output.of(payload));
        }

        /**
         * @param playAudio Specifies an audio clip to be played by the client as part of the response.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder playAudio(@Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudioArgs> playAudio) {
            $.playAudio = playAudio;
            return this;
        }

        /**
         * @param playAudio Specifies an audio clip to be played by the client as part of the response.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder playAudio(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudioArgs playAudio) {
            return playAudio(Output.of(playAudio));
        }

        /**
         * @param telephonyTransferCall Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder telephonyTransferCall(@Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCallArgs> telephonyTransferCall) {
            $.telephonyTransferCall = telephonyTransferCall;
            return this;
        }

        /**
         * @param telephonyTransferCall Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder telephonyTransferCall(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCallArgs telephonyTransferCall) {
            return telephonyTransferCall(Output.of(telephonyTransferCall));
        }

        /**
         * @param text The text response message.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder text(@Nullable Output<CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTextArgs> text) {
            $.text = text;
            return this;
        }

        /**
         * @param text The text response message.
         * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder text(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageTextArgs text) {
            return text(Output.of(text));
        }

        public CxFlowKnowledgeConnectorSettingsTriggerFulfillmentMessageArgs build() {
            return $;
        }
    }

}
