// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.GetInstanceBootDiskInitializeParam;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceBootDisk {
    /**
     * @return Whether the disk will be auto-deleted when the instance is deleted.
     * 
     */
    private Boolean autoDelete;
    /**
     * @return Name with which the attached disk is accessible
     * under `/dev/disk/by-id/`
     * 
     */
    private String deviceName;
    private String diskEncryptionKeyRaw;
    private String diskEncryptionKeySha256;
    /**
     * @return Parameters with which a disk was created alongside the instance.
     * Structure is documented below.
     * 
     */
    private List<GetInstanceBootDiskInitializeParam> initializeParams;
    private String kmsKeySelfLink;
    /**
     * @return Read/write mode for the disk. One of `&#34;READ_ONLY&#34;` or `&#34;READ_WRITE&#34;`.
     * 
     */
    private String mode;
    /**
     * @return The name or self_link of the disk attached to this instance.
     * 
     */
    private String source;

    private GetInstanceBootDisk() {}
    /**
     * @return Whether the disk will be auto-deleted when the instance is deleted.
     * 
     */
    public Boolean autoDelete() {
        return this.autoDelete;
    }
    /**
     * @return Name with which the attached disk is accessible
     * under `/dev/disk/by-id/`
     * 
     */
    public String deviceName() {
        return this.deviceName;
    }
    public String diskEncryptionKeyRaw() {
        return this.diskEncryptionKeyRaw;
    }
    public String diskEncryptionKeySha256() {
        return this.diskEncryptionKeySha256;
    }
    /**
     * @return Parameters with which a disk was created alongside the instance.
     * Structure is documented below.
     * 
     */
    public List<GetInstanceBootDiskInitializeParam> initializeParams() {
        return this.initializeParams;
    }
    public String kmsKeySelfLink() {
        return this.kmsKeySelfLink;
    }
    /**
     * @return Read/write mode for the disk. One of `&#34;READ_ONLY&#34;` or `&#34;READ_WRITE&#34;`.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return The name or self_link of the disk attached to this instance.
     * 
     */
    public String source() {
        return this.source;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceBootDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoDelete;
        private String deviceName;
        private String diskEncryptionKeyRaw;
        private String diskEncryptionKeySha256;
        private List<GetInstanceBootDiskInitializeParam> initializeParams;
        private String kmsKeySelfLink;
        private String mode;
        private String source;
        public Builder() {}
        public Builder(GetInstanceBootDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoDelete = defaults.autoDelete;
    	      this.deviceName = defaults.deviceName;
    	      this.diskEncryptionKeyRaw = defaults.diskEncryptionKeyRaw;
    	      this.diskEncryptionKeySha256 = defaults.diskEncryptionKeySha256;
    	      this.initializeParams = defaults.initializeParams;
    	      this.kmsKeySelfLink = defaults.kmsKeySelfLink;
    	      this.mode = defaults.mode;
    	      this.source = defaults.source;
        }

        @CustomType.Setter
        public Builder autoDelete(Boolean autoDelete) {
            this.autoDelete = Objects.requireNonNull(autoDelete);
            return this;
        }
        @CustomType.Setter
        public Builder deviceName(String deviceName) {
            this.deviceName = Objects.requireNonNull(deviceName);
            return this;
        }
        @CustomType.Setter
        public Builder diskEncryptionKeyRaw(String diskEncryptionKeyRaw) {
            this.diskEncryptionKeyRaw = Objects.requireNonNull(diskEncryptionKeyRaw);
            return this;
        }
        @CustomType.Setter
        public Builder diskEncryptionKeySha256(String diskEncryptionKeySha256) {
            this.diskEncryptionKeySha256 = Objects.requireNonNull(diskEncryptionKeySha256);
            return this;
        }
        @CustomType.Setter
        public Builder initializeParams(List<GetInstanceBootDiskInitializeParam> initializeParams) {
            this.initializeParams = Objects.requireNonNull(initializeParams);
            return this;
        }
        public Builder initializeParams(GetInstanceBootDiskInitializeParam... initializeParams) {
            return initializeParams(List.of(initializeParams));
        }
        @CustomType.Setter
        public Builder kmsKeySelfLink(String kmsKeySelfLink) {
            this.kmsKeySelfLink = Objects.requireNonNull(kmsKeySelfLink);
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        public GetInstanceBootDisk build() {
            final var o = new GetInstanceBootDisk();
            o.autoDelete = autoDelete;
            o.deviceName = deviceName;
            o.diskEncryptionKeyRaw = diskEncryptionKeyRaw;
            o.diskEncryptionKeySha256 = diskEncryptionKeySha256;
            o.initializeParams = initializeParams;
            o.kmsKeySelfLink = kmsKeySelfLink;
            o.mode = mode;
            o.source = source;
            return o;
        }
    }
}
