// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerBuildArtifactsMavenArtifactArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerBuildArtifactsMavenArtifactArgs Empty = new TriggerBuildArtifactsMavenArtifactArgs();

    /**
     * Maven artifactId value used when uploading the artifact to Artifact Registry.
     * 
     */
    @Import(name="artifactId")
    private @Nullable Output<String> artifactId;

    /**
     * @return Maven artifactId value used when uploading the artifact to Artifact Registry.
     * 
     */
    public Optional<Output<String>> artifactId() {
        return Optional.ofNullable(this.artifactId);
    }

    /**
     * Maven groupId value used when uploading the artifact to Artifact Registry.
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    /**
     * @return Maven groupId value used when uploading the artifact to Artifact Registry.
     * 
     */
    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * Path to an artifact in the build&#39;s workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Path to an artifact in the build&#39;s workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * Artifact Registry repository, in the form &#34;https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY&#34;
     * Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.
     * 
     */
    @Import(name="repository")
    private @Nullable Output<String> repository;

    /**
     * @return Artifact Registry repository, in the form &#34;https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY&#34;
     * Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.
     * 
     */
    public Optional<Output<String>> repository() {
        return Optional.ofNullable(this.repository);
    }

    /**
     * Maven version value used when uploading the artifact to Artifact Registry.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Maven version value used when uploading the artifact to Artifact Registry.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private TriggerBuildArtifactsMavenArtifactArgs() {}

    private TriggerBuildArtifactsMavenArtifactArgs(TriggerBuildArtifactsMavenArtifactArgs $) {
        this.artifactId = $.artifactId;
        this.groupId = $.groupId;
        this.path = $.path;
        this.repository = $.repository;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerBuildArtifactsMavenArtifactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerBuildArtifactsMavenArtifactArgs $;

        public Builder() {
            $ = new TriggerBuildArtifactsMavenArtifactArgs();
        }

        public Builder(TriggerBuildArtifactsMavenArtifactArgs defaults) {
            $ = new TriggerBuildArtifactsMavenArtifactArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param artifactId Maven artifactId value used when uploading the artifact to Artifact Registry.
         * 
         * @return builder
         * 
         */
        public Builder artifactId(@Nullable Output<String> artifactId) {
            $.artifactId = artifactId;
            return this;
        }

        /**
         * @param artifactId Maven artifactId value used when uploading the artifact to Artifact Registry.
         * 
         * @return builder
         * 
         */
        public Builder artifactId(String artifactId) {
            return artifactId(Output.of(artifactId));
        }

        /**
         * @param groupId Maven groupId value used when uploading the artifact to Artifact Registry.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId Maven groupId value used when uploading the artifact to Artifact Registry.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param path Path to an artifact in the build&#39;s workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path to an artifact in the build&#39;s workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param repository Artifact Registry repository, in the form &#34;https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY&#34;
         * Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.
         * 
         * @return builder
         * 
         */
        public Builder repository(@Nullable Output<String> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository Artifact Registry repository, in the form &#34;https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY&#34;
         * Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.
         * 
         * @return builder
         * 
         */
        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        /**
         * @param version Maven version value used when uploading the artifact to Artifact Registry.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Maven version value used when uploading the artifact to Artifact Registry.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public TriggerBuildArtifactsMavenArtifactArgs build() {
            return $;
        }
    }

}
