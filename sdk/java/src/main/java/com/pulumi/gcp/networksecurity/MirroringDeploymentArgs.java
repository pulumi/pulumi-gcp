// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MirroringDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final MirroringDeploymentArgs Empty = new MirroringDeploymentArgs();

    /**
     * Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded
     * to. Format is:
     * projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
     * 
     */
    @Import(name="forwardingRule", required=true)
    private Output<String> forwardingRule;

    /**
     * @return Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded
     * to. Format is:
     * projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
     * 
     */
    public Output<String> forwardingRule() {
        return this.forwardingRule;
    }

    /**
     * Optional. Labels as key value pairs
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Optional. Labels as key value pairs
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringDeployment`.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringDeployment`.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
     * `projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}`
     * 
     */
    @Import(name="mirroringDeploymentGroup", required=true)
    private Output<String> mirroringDeploymentGroup;

    /**
     * @return Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
     * `projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}`
     * 
     */
    public Output<String> mirroringDeploymentGroup() {
        return this.mirroringDeploymentGroup;
    }

    /**
     * Required. Id of the requesting object
     * If auto-generating Id server-side, remove this field and
     * mirroring_deployment_id from the method_signature of Create RPC
     * 
     * ***
     * 
     */
    @Import(name="mirroringDeploymentId", required=true)
    private Output<String> mirroringDeploymentId;

    /**
     * @return Required. Id of the requesting object
     * If auto-generating Id server-side, remove this field and
     * mirroring_deployment_id from the method_signature of Create RPC
     * 
     * ***
     * 
     */
    public Output<String> mirroringDeploymentId() {
        return this.mirroringDeploymentId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private MirroringDeploymentArgs() {}

    private MirroringDeploymentArgs(MirroringDeploymentArgs $) {
        this.forwardingRule = $.forwardingRule;
        this.labels = $.labels;
        this.location = $.location;
        this.mirroringDeploymentGroup = $.mirroringDeploymentGroup;
        this.mirroringDeploymentId = $.mirroringDeploymentId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MirroringDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MirroringDeploymentArgs $;

        public Builder() {
            $ = new MirroringDeploymentArgs();
        }

        public Builder(MirroringDeploymentArgs defaults) {
            $ = new MirroringDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param forwardingRule Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded
         * to. Format is:
         * projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
         * 
         * @return builder
         * 
         */
        public Builder forwardingRule(Output<String> forwardingRule) {
            $.forwardingRule = forwardingRule;
            return this;
        }

        /**
         * @param forwardingRule Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded
         * to. Format is:
         * projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
         * 
         * @return builder
         * 
         */
        public Builder forwardingRule(String forwardingRule) {
            return forwardingRule(Output.of(forwardingRule));
        }

        /**
         * @param labels Optional. Labels as key value pairs
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Optional. Labels as key value pairs
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringDeployment`.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringDeployment`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param mirroringDeploymentGroup Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
         * `projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}`
         * 
         * @return builder
         * 
         */
        public Builder mirroringDeploymentGroup(Output<String> mirroringDeploymentGroup) {
            $.mirroringDeploymentGroup = mirroringDeploymentGroup;
            return this;
        }

        /**
         * @param mirroringDeploymentGroup Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
         * `projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}`
         * 
         * @return builder
         * 
         */
        public Builder mirroringDeploymentGroup(String mirroringDeploymentGroup) {
            return mirroringDeploymentGroup(Output.of(mirroringDeploymentGroup));
        }

        /**
         * @param mirroringDeploymentId Required. Id of the requesting object
         * If auto-generating Id server-side, remove this field and
         * mirroring_deployment_id from the method_signature of Create RPC
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder mirroringDeploymentId(Output<String> mirroringDeploymentId) {
            $.mirroringDeploymentId = mirroringDeploymentId;
            return this;
        }

        /**
         * @param mirroringDeploymentId Required. Id of the requesting object
         * If auto-generating Id server-side, remove this field and
         * mirroring_deployment_id from the method_signature of Create RPC
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder mirroringDeploymentId(String mirroringDeploymentId) {
            return mirroringDeploymentId(Output.of(mirroringDeploymentId));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public MirroringDeploymentArgs build() {
            if ($.forwardingRule == null) {
                throw new MissingRequiredPropertyException("MirroringDeploymentArgs", "forwardingRule");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("MirroringDeploymentArgs", "location");
            }
            if ($.mirroringDeploymentGroup == null) {
                throw new MissingRequiredPropertyException("MirroringDeploymentArgs", "mirroringDeploymentGroup");
            }
            if ($.mirroringDeploymentId == null) {
                throw new MissingRequiredPropertyException("MirroringDeploymentArgs", "mirroringDeploymentId");
            }
            return $;
        }
    }

}
