// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstanceGuestAttributesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceGuestAttributesPlainArgs Empty = new GetInstanceGuestAttributesPlainArgs();

    /**
     * The name or selfLink of the instance.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name or selfLink of the instance.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If `selfLink` is provided, this value is ignored.  If neither `selfLink`
     * nor `project` are provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If `selfLink` is provided, this value is ignored.  If neither `selfLink`
     * nor `project` are provided, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Path to query for the guest attributes. Consists of
     * `namespace` name for the attributes followed with a `/`.
     * 
     */
    @Import(name="queryPath")
    private @Nullable String queryPath;

    /**
     * @return Path to query for the guest attributes. Consists of
     * `namespace` name for the attributes followed with a `/`.
     * 
     */
    public Optional<String> queryPath() {
        return Optional.ofNullable(this.queryPath);
    }

    @Import(name="region")
    private @Nullable String region;

    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Key of a variable to get the value of. Consists of
     * `namespace` name and `key` name for the variable separated by a `/`.
     * 
     */
    @Import(name="variableKey")
    private @Nullable String variableKey;

    /**
     * @return Key of a variable to get the value of. Consists of
     * `namespace` name and `key` name for the variable separated by a `/`.
     * 
     */
    public Optional<String> variableKey() {
        return Optional.ofNullable(this.variableKey);
    }

    /**
     * The zone of the instance. If `selfLink` is provided, this
     * value is ignored.  If neither `selfLink` nor `zone` are provided, the
     * provider zone is used.
     * 
     */
    @Import(name="zone")
    private @Nullable String zone;

    /**
     * @return The zone of the instance. If `selfLink` is provided, this
     * value is ignored.  If neither `selfLink` nor `zone` are provided, the
     * provider zone is used.
     * 
     */
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    private GetInstanceGuestAttributesPlainArgs() {}

    private GetInstanceGuestAttributesPlainArgs(GetInstanceGuestAttributesPlainArgs $) {
        this.name = $.name;
        this.project = $.project;
        this.queryPath = $.queryPath;
        this.region = $.region;
        this.variableKey = $.variableKey;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceGuestAttributesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceGuestAttributesPlainArgs $;

        public Builder() {
            $ = new GetInstanceGuestAttributesPlainArgs();
        }

        public Builder(GetInstanceGuestAttributesPlainArgs defaults) {
            $ = new GetInstanceGuestAttributesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name or selfLink of the instance.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If `selfLink` is provided, this value is ignored.  If neither `selfLink`
         * nor `project` are provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param queryPath Path to query for the guest attributes. Consists of
         * `namespace` name for the attributes followed with a `/`.
         * 
         * @return builder
         * 
         */
        public Builder queryPath(@Nullable String queryPath) {
            $.queryPath = queryPath;
            return this;
        }

        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param variableKey Key of a variable to get the value of. Consists of
         * `namespace` name and `key` name for the variable separated by a `/`.
         * 
         * @return builder
         * 
         */
        public Builder variableKey(@Nullable String variableKey) {
            $.variableKey = variableKey;
            return this;
        }

        /**
         * @param zone The zone of the instance. If `selfLink` is provided, this
         * value is ignored.  If neither `selfLink` nor `zone` are provided, the
         * provider zone is used.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable String zone) {
            $.zone = zone;
            return this;
        }

        public GetInstanceGuestAttributesPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetInstanceGuestAttributesPlainArgs", "name");
            }
            return $;
        }
    }

}
