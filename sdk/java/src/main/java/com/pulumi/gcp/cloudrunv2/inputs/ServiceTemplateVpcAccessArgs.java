// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudrunv2.inputs.ServiceTemplateVpcAccessNetworkInterfaceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceTemplateVpcAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTemplateVpcAccessArgs Empty = new ServiceTemplateVpcAccessArgs();

    /**
     * VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
     * 
     */
    @Import(name="connector")
    private @Nullable Output<String> connector;

    /**
     * @return VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
     * 
     */
    public Optional<Output<String>> connector() {
        return Optional.ofNullable(this.connector);
    }

    /**
     * Traffic VPC egress settings.
     * Possible values are: `ALL_TRAFFIC`, `PRIVATE_RANGES_ONLY`.
     * 
     */
    @Import(name="egress")
    private @Nullable Output<String> egress;

    /**
     * @return Traffic VPC egress settings.
     * Possible values are: `ALL_TRAFFIC`, `PRIVATE_RANGES_ONLY`.
     * 
     */
    public Optional<Output<String>> egress() {
        return Optional.ofNullable(this.egress);
    }

    /**
     * Direct VPC egress settings. Currently only single network interface is supported.
     * Structure is documented below.
     * 
     */
    @Import(name="networkInterfaces")
    private @Nullable Output<List<ServiceTemplateVpcAccessNetworkInterfaceArgs>> networkInterfaces;

    /**
     * @return Direct VPC egress settings. Currently only single network interface is supported.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ServiceTemplateVpcAccessNetworkInterfaceArgs>>> networkInterfaces() {
        return Optional.ofNullable(this.networkInterfaces);
    }

    private ServiceTemplateVpcAccessArgs() {}

    private ServiceTemplateVpcAccessArgs(ServiceTemplateVpcAccessArgs $) {
        this.connector = $.connector;
        this.egress = $.egress;
        this.networkInterfaces = $.networkInterfaces;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTemplateVpcAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTemplateVpcAccessArgs $;

        public Builder() {
            $ = new ServiceTemplateVpcAccessArgs();
        }

        public Builder(ServiceTemplateVpcAccessArgs defaults) {
            $ = new ServiceTemplateVpcAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connector VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
         * 
         * @return builder
         * 
         */
        public Builder connector(@Nullable Output<String> connector) {
            $.connector = connector;
            return this;
        }

        /**
         * @param connector VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
         * 
         * @return builder
         * 
         */
        public Builder connector(String connector) {
            return connector(Output.of(connector));
        }

        /**
         * @param egress Traffic VPC egress settings.
         * Possible values are: `ALL_TRAFFIC`, `PRIVATE_RANGES_ONLY`.
         * 
         * @return builder
         * 
         */
        public Builder egress(@Nullable Output<String> egress) {
            $.egress = egress;
            return this;
        }

        /**
         * @param egress Traffic VPC egress settings.
         * Possible values are: `ALL_TRAFFIC`, `PRIVATE_RANGES_ONLY`.
         * 
         * @return builder
         * 
         */
        public Builder egress(String egress) {
            return egress(Output.of(egress));
        }

        /**
         * @param networkInterfaces Direct VPC egress settings. Currently only single network interface is supported.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(@Nullable Output<List<ServiceTemplateVpcAccessNetworkInterfaceArgs>> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        /**
         * @param networkInterfaces Direct VPC egress settings. Currently only single network interface is supported.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(List<ServiceTemplateVpcAccessNetworkInterfaceArgs> networkInterfaces) {
            return networkInterfaces(Output.of(networkInterfaces));
        }

        /**
         * @param networkInterfaces Direct VPC egress settings. Currently only single network interface is supported.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(ServiceTemplateVpcAccessNetworkInterfaceArgs... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }

        public ServiceTemplateVpcAccessArgs build() {
            return $;
        }
    }

}
