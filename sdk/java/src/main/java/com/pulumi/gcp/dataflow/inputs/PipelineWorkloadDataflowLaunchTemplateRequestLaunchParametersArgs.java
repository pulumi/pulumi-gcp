// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataflow.inputs.PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersEnvironmentArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs Empty = new PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs();

    /**
     * The runtime environment for the job.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#RuntimeEnvironment
     * Structure is documented below.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersEnvironmentArgs> environment;

    /**
     * @return The runtime environment for the job.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#RuntimeEnvironment
     * Structure is documented below.
     * 
     */
    public Optional<Output<PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersEnvironmentArgs>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * The job name to use for the created job.
     * 
     */
    @Import(name="jobName", required=true)
    private Output<String> jobName;

    /**
     * @return The job name to use for the created job.
     * 
     */
    public Output<String> jobName() {
        return this.jobName;
    }

    /**
     * The runtime parameters to pass to the job.
     * &#39;An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.&#39;
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return The runtime parameters to pass to the job.
     * &#39;An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.&#39;
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.
     * &#39;An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.&#39;
     * 
     */
    @Import(name="transformNameMapping")
    private @Nullable Output<Map<String,String>> transformNameMapping;

    /**
     * @return Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.
     * &#39;An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.&#39;
     * 
     */
    public Optional<Output<Map<String,String>>> transformNameMapping() {
        return Optional.ofNullable(this.transformNameMapping);
    }

    /**
     * If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.
     * 
     */
    @Import(name="update")
    private @Nullable Output<Boolean> update;

    /**
     * @return If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.
     * 
     */
    public Optional<Output<Boolean>> update() {
        return Optional.ofNullable(this.update);
    }

    private PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs() {}

    private PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs(PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs $) {
        this.environment = $.environment;
        this.jobName = $.jobName;
        this.parameters = $.parameters;
        this.transformNameMapping = $.transformNameMapping;
        this.update = $.update;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs $;

        public Builder() {
            $ = new PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs();
        }

        public Builder(PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs defaults) {
            $ = new PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environment The runtime environment for the job.
         * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#RuntimeEnvironment
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment The runtime environment for the job.
         * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#RuntimeEnvironment
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder environment(PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param jobName The job name to use for the created job.
         * 
         * @return builder
         * 
         */
        public Builder jobName(Output<String> jobName) {
            $.jobName = jobName;
            return this;
        }

        /**
         * @param jobName The job name to use for the created job.
         * 
         * @return builder
         * 
         */
        public Builder jobName(String jobName) {
            return jobName(Output.of(jobName));
        }

        /**
         * @param parameters The runtime parameters to pass to the job.
         * &#39;An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.&#39;
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The runtime parameters to pass to the job.
         * &#39;An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.&#39;
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param transformNameMapping Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.
         * &#39;An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.&#39;
         * 
         * @return builder
         * 
         */
        public Builder transformNameMapping(@Nullable Output<Map<String,String>> transformNameMapping) {
            $.transformNameMapping = transformNameMapping;
            return this;
        }

        /**
         * @param transformNameMapping Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.
         * &#39;An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.&#39;
         * 
         * @return builder
         * 
         */
        public Builder transformNameMapping(Map<String,String> transformNameMapping) {
            return transformNameMapping(Output.of(transformNameMapping));
        }

        /**
         * @param update If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.
         * 
         * @return builder
         * 
         */
        public Builder update(@Nullable Output<Boolean> update) {
            $.update = update;
            return this;
        }

        /**
         * @param update If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.
         * 
         * @return builder
         * 
         */
        public Builder update(Boolean update) {
            return update(Output.of(update));
        }

        public PipelineWorkloadDataflowLaunchTemplateRequestLaunchParametersArgs build() {
            $.jobName = Objects.requireNonNull($.jobName, "expected parameter 'jobName' to be non-null");
            return $;
        }
    }

}
