// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memorystore.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.memorystore.outputs.InstanceCrossInstanceReplicationConfigMembership;
import com.pulumi.gcp.memorystore.outputs.InstanceCrossInstanceReplicationConfigPrimaryInstance;
import com.pulumi.gcp.memorystore.outputs.InstanceCrossInstanceReplicationConfigSecondaryInstance;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceCrossInstanceReplicationConfig {
    /**
     * @return The instance role supports the following values:
     * 1. `INSTANCE_ROLE_UNSPECIFIED`: This is an independent instance that has never participated in cross instance replication. It allows both reads and writes.
     * 2. `NONE`: This is an independent instance that previously participated in cross instance replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
     * 3. `PRIMARY`: This instance serves as the replication source for secondary instance that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
     * 4. `SECONDARY`: This instance replicates data from the primary instance. It allows only reads.
     *    Possible values are: `INSTANCE_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
     * 
     */
    private @Nullable String instanceRole;
    /**
     * @return (Output)
     * An output only view of all the member instance participating in cross instance replication. This field is populated for all the member clusters irrespective of their cluster role.
     * Structure is documented below.
     * 
     */
    private @Nullable List<InstanceCrossInstanceReplicationConfigMembership> memberships;
    /**
     * @return This field is only set for a secondary instance. Details of the primary instance that is used as the replication source for this secondary instance. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
     * Structure is documented below.
     * 
     */
    private @Nullable InstanceCrossInstanceReplicationConfigPrimaryInstance primaryInstance;
    /**
     * @return List of secondary instances that are replicating from this primary cluster. This is allowed to be set only for instances whose cluster role is of type `PRIMARY`.
     * Structure is documented below.
     * 
     */
    private @Nullable List<InstanceCrossInstanceReplicationConfigSecondaryInstance> secondaryInstances;
    /**
     * @return (Output)
     * The last time cross instance replication config was updated.
     * 
     */
    private @Nullable String updateTime;

    private InstanceCrossInstanceReplicationConfig() {}
    /**
     * @return The instance role supports the following values:
     * 1. `INSTANCE_ROLE_UNSPECIFIED`: This is an independent instance that has never participated in cross instance replication. It allows both reads and writes.
     * 2. `NONE`: This is an independent instance that previously participated in cross instance replication(either as a `PRIMARY` or `SECONDARY` cluster). It allows both reads and writes.
     * 3. `PRIMARY`: This instance serves as the replication source for secondary instance that are replicating from it. Any data written to it is automatically replicated to its secondary clusters. It allows both reads and writes.
     * 4. `SECONDARY`: This instance replicates data from the primary instance. It allows only reads.
     *    Possible values are: `INSTANCE_ROLE_UNSPECIFIED`, `NONE`, `PRIMARY`, `SECONDARY`.
     * 
     */
    public Optional<String> instanceRole() {
        return Optional.ofNullable(this.instanceRole);
    }
    /**
     * @return (Output)
     * An output only view of all the member instance participating in cross instance replication. This field is populated for all the member clusters irrespective of their cluster role.
     * Structure is documented below.
     * 
     */
    public List<InstanceCrossInstanceReplicationConfigMembership> memberships() {
        return this.memberships == null ? List.of() : this.memberships;
    }
    /**
     * @return This field is only set for a secondary instance. Details of the primary instance that is used as the replication source for this secondary instance. This is allowed to be set only for clusters whose cluster role is of type `SECONDARY`.
     * Structure is documented below.
     * 
     */
    public Optional<InstanceCrossInstanceReplicationConfigPrimaryInstance> primaryInstance() {
        return Optional.ofNullable(this.primaryInstance);
    }
    /**
     * @return List of secondary instances that are replicating from this primary cluster. This is allowed to be set only for instances whose cluster role is of type `PRIMARY`.
     * Structure is documented below.
     * 
     */
    public List<InstanceCrossInstanceReplicationConfigSecondaryInstance> secondaryInstances() {
        return this.secondaryInstances == null ? List.of() : this.secondaryInstances;
    }
    /**
     * @return (Output)
     * The last time cross instance replication config was updated.
     * 
     */
    public Optional<String> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceCrossInstanceReplicationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String instanceRole;
        private @Nullable List<InstanceCrossInstanceReplicationConfigMembership> memberships;
        private @Nullable InstanceCrossInstanceReplicationConfigPrimaryInstance primaryInstance;
        private @Nullable List<InstanceCrossInstanceReplicationConfigSecondaryInstance> secondaryInstances;
        private @Nullable String updateTime;
        public Builder() {}
        public Builder(InstanceCrossInstanceReplicationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceRole = defaults.instanceRole;
    	      this.memberships = defaults.memberships;
    	      this.primaryInstance = defaults.primaryInstance;
    	      this.secondaryInstances = defaults.secondaryInstances;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder instanceRole(@Nullable String instanceRole) {

            this.instanceRole = instanceRole;
            return this;
        }
        @CustomType.Setter
        public Builder memberships(@Nullable List<InstanceCrossInstanceReplicationConfigMembership> memberships) {

            this.memberships = memberships;
            return this;
        }
        public Builder memberships(InstanceCrossInstanceReplicationConfigMembership... memberships) {
            return memberships(List.of(memberships));
        }
        @CustomType.Setter
        public Builder primaryInstance(@Nullable InstanceCrossInstanceReplicationConfigPrimaryInstance primaryInstance) {

            this.primaryInstance = primaryInstance;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryInstances(@Nullable List<InstanceCrossInstanceReplicationConfigSecondaryInstance> secondaryInstances) {

            this.secondaryInstances = secondaryInstances;
            return this;
        }
        public Builder secondaryInstances(InstanceCrossInstanceReplicationConfigSecondaryInstance... secondaryInstances) {
            return secondaryInstances(List.of(secondaryInstances));
        }
        @CustomType.Setter
        public Builder updateTime(@Nullable String updateTime) {

            this.updateTime = updateTime;
            return this;
        }
        public InstanceCrossInstanceReplicationConfig build() {
            final var _resultValue = new InstanceCrossInstanceReplicationConfig();
            _resultValue.instanceRole = instanceRole;
            _resultValue.memberships = memberships;
            _resultValue.primaryInstance = primaryInstance;
            _resultValue.secondaryInstances = secondaryInstances;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
