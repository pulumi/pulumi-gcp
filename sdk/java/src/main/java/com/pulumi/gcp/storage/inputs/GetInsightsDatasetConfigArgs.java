// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInsightsDatasetConfigArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInsightsDatasetConfigArgs Empty = new GetInsightsDatasetConfigArgs();

    /**
     * The user-defined ID of the DatasetConfig
     * 
     */
    @Import(name="datasetConfigId", required=true)
    private Output<String> datasetConfigId;

    /**
     * @return The user-defined ID of the DatasetConfig
     * 
     */
    public Output<String> datasetConfigId() {
        return this.datasetConfigId;
    }

    /**
     * The location of the Dataset Config.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location of the Dataset Config.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The name of the GCP project in which dataset config exists. Can be configured through config as well.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The name of the GCP project in which dataset config exists. Can be configured through config as well.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetInsightsDatasetConfigArgs() {}

    private GetInsightsDatasetConfigArgs(GetInsightsDatasetConfigArgs $) {
        this.datasetConfigId = $.datasetConfigId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInsightsDatasetConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInsightsDatasetConfigArgs $;

        public Builder() {
            $ = new GetInsightsDatasetConfigArgs();
        }

        public Builder(GetInsightsDatasetConfigArgs defaults) {
            $ = new GetInsightsDatasetConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetConfigId The user-defined ID of the DatasetConfig
         * 
         * @return builder
         * 
         */
        public Builder datasetConfigId(Output<String> datasetConfigId) {
            $.datasetConfigId = datasetConfigId;
            return this;
        }

        /**
         * @param datasetConfigId The user-defined ID of the DatasetConfig
         * 
         * @return builder
         * 
         */
        public Builder datasetConfigId(String datasetConfigId) {
            return datasetConfigId(Output.of(datasetConfigId));
        }

        /**
         * @param location The location of the Dataset Config.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the Dataset Config.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The name of the GCP project in which dataset config exists. Can be configured through config as well.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the GCP project in which dataset config exists. Can be configured through config as well.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetInsightsDatasetConfigArgs build() {
            if ($.datasetConfigId == null) {
                throw new MissingRequiredPropertyException("GetInsightsDatasetConfigArgs", "datasetConfigId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetInsightsDatasetConfigArgs", "location");
            }
            return $;
        }
    }

}
