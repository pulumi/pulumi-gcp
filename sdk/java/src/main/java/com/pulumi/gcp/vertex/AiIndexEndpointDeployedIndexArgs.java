// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vertex.inputs.AiIndexEndpointDeployedIndexAutomaticResourcesArgs;
import com.pulumi.gcp.vertex.inputs.AiIndexEndpointDeployedIndexDedicatedResourcesArgs;
import com.pulumi.gcp.vertex.inputs.AiIndexEndpointDeployedIndexDeployedIndexAuthConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiIndexEndpointDeployedIndexArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiIndexEndpointDeployedIndexArgs Empty = new AiIndexEndpointDeployedIndexArgs();

    /**
     * A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally allows only a modest additional configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="automaticResources")
    private @Nullable Output<AiIndexEndpointDeployedIndexAutomaticResourcesArgs> automaticResources;

    /**
     * @return A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally allows only a modest additional configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiIndexEndpointDeployedIndexAutomaticResourcesArgs>> automaticResources() {
        return Optional.ofNullable(this.automaticResources);
    }

    /**
     * A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual configuration. The field minReplicaCount must be set to a value strictly greater than 0, or else validation will fail. We don&#39;t provide SLA when minReplicaCount=1. If maxReplicaCount is not set, the default value is minReplicaCount. The max allowed replica count is 1000.
     * Available machine types for SMALL shard: e2-standard-2 and all machine types available for MEDIUM and LARGE shard.
     * Available machine types for MEDIUM shard: e2-standard-16 and all machine types available for LARGE shard.
     * Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32.
     * n1-standard-16 and n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency.
     * Structure is documented below.
     * 
     */
    @Import(name="dedicatedResources")
    private @Nullable Output<AiIndexEndpointDeployedIndexDedicatedResourcesArgs> dedicatedResources;

    /**
     * @return A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual configuration. The field minReplicaCount must be set to a value strictly greater than 0, or else validation will fail. We don&#39;t provide SLA when minReplicaCount=1. If maxReplicaCount is not set, the default value is minReplicaCount. The max allowed replica count is 1000.
     * Available machine types for SMALL shard: e2-standard-2 and all machine types available for MEDIUM and LARGE shard.
     * Available machine types for MEDIUM shard: e2-standard-16 and all machine types available for LARGE shard.
     * Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32.
     * n1-standard-16 and n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiIndexEndpointDeployedIndexDedicatedResourcesArgs>> dedicatedResources() {
        return Optional.ofNullable(this.dedicatedResources);
    }

    /**
     * If set, the authentication is enabled for the private endpoint.
     * Structure is documented below.
     * 
     */
    @Import(name="deployedIndexAuthConfig")
    private @Nullable Output<AiIndexEndpointDeployedIndexDeployedIndexAuthConfigArgs> deployedIndexAuthConfig;

    /**
     * @return If set, the authentication is enabled for the private endpoint.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiIndexEndpointDeployedIndexDeployedIndexAuthConfigArgs>> deployedIndexAuthConfig() {
        return Optional.ofNullable(this.deployedIndexAuthConfig);
    }

    /**
     * The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.
     * 
     */
    @Import(name="deployedIndexId", required=true)
    private Output<String> deployedIndexId;

    /**
     * @return The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.
     * 
     */
    public Output<String> deployedIndexId() {
        return this.deployedIndexId;
    }

    /**
     * The deployment group can be no longer than 64 characters (eg: &#39;test&#39;, &#39;prod&#39;). If not set, we will use the &#39;default&#39; deployment group.
     * Creating deployment_groups with reserved_ip_ranges is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except &#39;default&#39;) can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. [See the official documentation here](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints#DeployedIndex.FIELDS.deployment_group).
     * Note: we only support up to 5 deployment groups (not including &#39;default&#39;).
     * 
     */
    @Import(name="deploymentGroup")
    private @Nullable Output<String> deploymentGroup;

    /**
     * @return The deployment group can be no longer than 64 characters (eg: &#39;test&#39;, &#39;prod&#39;). If not set, we will use the &#39;default&#39; deployment group.
     * Creating deployment_groups with reserved_ip_ranges is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except &#39;default&#39;) can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. [See the official documentation here](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints#DeployedIndex.FIELDS.deployment_group).
     * Note: we only support up to 5 deployment groups (not including &#39;default&#39;).
     * 
     */
    public Optional<Output<String>> deploymentGroup() {
        return Optional.ofNullable(this.deploymentGroup);
    }

    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * If true, private endpoint&#39;s access logs are sent to Cloud Logging.
     * 
     */
    @Import(name="enableAccessLogging")
    private @Nullable Output<Boolean> enableAccessLogging;

    /**
     * @return If true, private endpoint&#39;s access logs are sent to Cloud Logging.
     * 
     */
    public Optional<Output<Boolean>> enableAccessLogging() {
        return Optional.ofNullable(this.enableAccessLogging);
    }

    /**
     * The name of the Index this is the deployment of.
     * 
     */
    @Import(name="index", required=true)
    private Output<String> index;

    /**
     * @return The name of the Index this is the deployment of.
     * 
     */
    public Output<String> index() {
        return this.index;
    }

    /**
     * Identifies the index endpoint. Must be in the format
     * &#39;projects/{{project}}/locations/{{region}}/indexEndpoints/{{indexEndpoint}}&#39;
     * 
     * ***
     * 
     */
    @Import(name="indexEndpoint", required=true)
    private Output<String> indexEndpoint;

    /**
     * @return Identifies the index endpoint. Must be in the format
     * &#39;projects/{{project}}/locations/{{region}}/indexEndpoints/{{indexEndpoint}}&#39;
     * 
     * ***
     * 
     */
    public Output<String> indexEndpoint() {
        return this.indexEndpoint;
    }

    /**
     * A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex.
     * If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network.
     * The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: [&#39;vertex-ai-ip-range&#39;].
     * For more information about subnets and network IP ranges, please see https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
     * 
     */
    @Import(name="reservedIpRanges")
    private @Nullable Output<List<String>> reservedIpRanges;

    /**
     * @return A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex.
     * If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network.
     * The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: [&#39;vertex-ai-ip-range&#39;].
     * For more information about subnets and network IP ranges, please see https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
     * 
     */
    public Optional<Output<List<String>>> reservedIpRanges() {
        return Optional.ofNullable(this.reservedIpRanges);
    }

    private AiIndexEndpointDeployedIndexArgs() {}

    private AiIndexEndpointDeployedIndexArgs(AiIndexEndpointDeployedIndexArgs $) {
        this.automaticResources = $.automaticResources;
        this.dedicatedResources = $.dedicatedResources;
        this.deployedIndexAuthConfig = $.deployedIndexAuthConfig;
        this.deployedIndexId = $.deployedIndexId;
        this.deploymentGroup = $.deploymentGroup;
        this.displayName = $.displayName;
        this.enableAccessLogging = $.enableAccessLogging;
        this.index = $.index;
        this.indexEndpoint = $.indexEndpoint;
        this.reservedIpRanges = $.reservedIpRanges;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiIndexEndpointDeployedIndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiIndexEndpointDeployedIndexArgs $;

        public Builder() {
            $ = new AiIndexEndpointDeployedIndexArgs();
        }

        public Builder(AiIndexEndpointDeployedIndexArgs defaults) {
            $ = new AiIndexEndpointDeployedIndexArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automaticResources A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally allows only a modest additional configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder automaticResources(@Nullable Output<AiIndexEndpointDeployedIndexAutomaticResourcesArgs> automaticResources) {
            $.automaticResources = automaticResources;
            return this;
        }

        /**
         * @param automaticResources A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally allows only a modest additional configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder automaticResources(AiIndexEndpointDeployedIndexAutomaticResourcesArgs automaticResources) {
            return automaticResources(Output.of(automaticResources));
        }

        /**
         * @param dedicatedResources A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual configuration. The field minReplicaCount must be set to a value strictly greater than 0, or else validation will fail. We don&#39;t provide SLA when minReplicaCount=1. If maxReplicaCount is not set, the default value is minReplicaCount. The max allowed replica count is 1000.
         * Available machine types for SMALL shard: e2-standard-2 and all machine types available for MEDIUM and LARGE shard.
         * Available machine types for MEDIUM shard: e2-standard-16 and all machine types available for LARGE shard.
         * Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32.
         * n1-standard-16 and n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedResources(@Nullable Output<AiIndexEndpointDeployedIndexDedicatedResourcesArgs> dedicatedResources) {
            $.dedicatedResources = dedicatedResources;
            return this;
        }

        /**
         * @param dedicatedResources A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual configuration. The field minReplicaCount must be set to a value strictly greater than 0, or else validation will fail. We don&#39;t provide SLA when minReplicaCount=1. If maxReplicaCount is not set, the default value is minReplicaCount. The max allowed replica count is 1000.
         * Available machine types for SMALL shard: e2-standard-2 and all machine types available for MEDIUM and LARGE shard.
         * Available machine types for MEDIUM shard: e2-standard-16 and all machine types available for LARGE shard.
         * Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32.
         * n1-standard-16 and n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedResources(AiIndexEndpointDeployedIndexDedicatedResourcesArgs dedicatedResources) {
            return dedicatedResources(Output.of(dedicatedResources));
        }

        /**
         * @param deployedIndexAuthConfig If set, the authentication is enabled for the private endpoint.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder deployedIndexAuthConfig(@Nullable Output<AiIndexEndpointDeployedIndexDeployedIndexAuthConfigArgs> deployedIndexAuthConfig) {
            $.deployedIndexAuthConfig = deployedIndexAuthConfig;
            return this;
        }

        /**
         * @param deployedIndexAuthConfig If set, the authentication is enabled for the private endpoint.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder deployedIndexAuthConfig(AiIndexEndpointDeployedIndexDeployedIndexAuthConfigArgs deployedIndexAuthConfig) {
            return deployedIndexAuthConfig(Output.of(deployedIndexAuthConfig));
        }

        /**
         * @param deployedIndexId The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.
         * 
         * @return builder
         * 
         */
        public Builder deployedIndexId(Output<String> deployedIndexId) {
            $.deployedIndexId = deployedIndexId;
            return this;
        }

        /**
         * @param deployedIndexId The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.
         * 
         * @return builder
         * 
         */
        public Builder deployedIndexId(String deployedIndexId) {
            return deployedIndexId(Output.of(deployedIndexId));
        }

        /**
         * @param deploymentGroup The deployment group can be no longer than 64 characters (eg: &#39;test&#39;, &#39;prod&#39;). If not set, we will use the &#39;default&#39; deployment group.
         * Creating deployment_groups with reserved_ip_ranges is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except &#39;default&#39;) can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. [See the official documentation here](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints#DeployedIndex.FIELDS.deployment_group).
         * Note: we only support up to 5 deployment groups (not including &#39;default&#39;).
         * 
         * @return builder
         * 
         */
        public Builder deploymentGroup(@Nullable Output<String> deploymentGroup) {
            $.deploymentGroup = deploymentGroup;
            return this;
        }

        /**
         * @param deploymentGroup The deployment group can be no longer than 64 characters (eg: &#39;test&#39;, &#39;prod&#39;). If not set, we will use the &#39;default&#39; deployment group.
         * Creating deployment_groups with reserved_ip_ranges is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except &#39;default&#39;) can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. [See the official documentation here](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints#DeployedIndex.FIELDS.deployment_group).
         * Note: we only support up to 5 deployment groups (not including &#39;default&#39;).
         * 
         * @return builder
         * 
         */
        public Builder deploymentGroup(String deploymentGroup) {
            return deploymentGroup(Output.of(deploymentGroup));
        }

        /**
         * @param displayName The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param enableAccessLogging If true, private endpoint&#39;s access logs are sent to Cloud Logging.
         * 
         * @return builder
         * 
         */
        public Builder enableAccessLogging(@Nullable Output<Boolean> enableAccessLogging) {
            $.enableAccessLogging = enableAccessLogging;
            return this;
        }

        /**
         * @param enableAccessLogging If true, private endpoint&#39;s access logs are sent to Cloud Logging.
         * 
         * @return builder
         * 
         */
        public Builder enableAccessLogging(Boolean enableAccessLogging) {
            return enableAccessLogging(Output.of(enableAccessLogging));
        }

        /**
         * @param index The name of the Index this is the deployment of.
         * 
         * @return builder
         * 
         */
        public Builder index(Output<String> index) {
            $.index = index;
            return this;
        }

        /**
         * @param index The name of the Index this is the deployment of.
         * 
         * @return builder
         * 
         */
        public Builder index(String index) {
            return index(Output.of(index));
        }

        /**
         * @param indexEndpoint Identifies the index endpoint. Must be in the format
         * &#39;projects/{{project}}/locations/{{region}}/indexEndpoints/{{indexEndpoint}}&#39;
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder indexEndpoint(Output<String> indexEndpoint) {
            $.indexEndpoint = indexEndpoint;
            return this;
        }

        /**
         * @param indexEndpoint Identifies the index endpoint. Must be in the format
         * &#39;projects/{{project}}/locations/{{region}}/indexEndpoints/{{indexEndpoint}}&#39;
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder indexEndpoint(String indexEndpoint) {
            return indexEndpoint(Output.of(indexEndpoint));
        }

        /**
         * @param reservedIpRanges A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex.
         * If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network.
         * The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: [&#39;vertex-ai-ip-range&#39;].
         * For more information about subnets and network IP ranges, please see https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
         * 
         * @return builder
         * 
         */
        public Builder reservedIpRanges(@Nullable Output<List<String>> reservedIpRanges) {
            $.reservedIpRanges = reservedIpRanges;
            return this;
        }

        /**
         * @param reservedIpRanges A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex.
         * If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network.
         * The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: [&#39;vertex-ai-ip-range&#39;].
         * For more information about subnets and network IP ranges, please see https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
         * 
         * @return builder
         * 
         */
        public Builder reservedIpRanges(List<String> reservedIpRanges) {
            return reservedIpRanges(Output.of(reservedIpRanges));
        }

        /**
         * @param reservedIpRanges A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex.
         * If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network.
         * The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: [&#39;vertex-ai-ip-range&#39;].
         * For more information about subnets and network IP ranges, please see https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
         * 
         * @return builder
         * 
         */
        public Builder reservedIpRanges(String... reservedIpRanges) {
            return reservedIpRanges(List.of(reservedIpRanges));
        }

        public AiIndexEndpointDeployedIndexArgs build() {
            if ($.deployedIndexId == null) {
                throw new MissingRequiredPropertyException("AiIndexEndpointDeployedIndexArgs", "deployedIndexId");
            }
            if ($.index == null) {
                throw new MissingRequiredPropertyException("AiIndexEndpointDeployedIndexArgs", "index");
            }
            if ($.indexEndpoint == null) {
                throw new MissingRequiredPropertyException("AiIndexEndpointDeployedIndexArgs", "indexEndpoint");
            }
            return $;
        }
    }

}
