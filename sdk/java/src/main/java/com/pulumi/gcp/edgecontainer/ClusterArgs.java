// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.edgecontainer;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationArgs;
import com.pulumi.gcp.edgecontainer.inputs.ClusterControlPlaneArgs;
import com.pulumi.gcp.edgecontainer.inputs.ClusterControlPlaneEncryptionArgs;
import com.pulumi.gcp.edgecontainer.inputs.ClusterFleetArgs;
import com.pulumi.gcp.edgecontainer.inputs.ClusterMaintenancePolicyArgs;
import com.pulumi.gcp.edgecontainer.inputs.ClusterNetworkingArgs;
import com.pulumi.gcp.edgecontainer.inputs.ClusterSystemAddonsConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * RBAC policy that will be applied and managed by GEC.
     * Structure is documented below.
     * 
     */
    @Import(name="authorization", required=true)
    private Output<ClusterAuthorizationArgs> authorization;

    /**
     * @return RBAC policy that will be applied and managed by GEC.
     * Structure is documented below.
     * 
     */
    public Output<ClusterAuthorizationArgs> authorization() {
        return this.authorization;
    }

    /**
     * The configuration of the cluster control plane.
     * Structure is documented below.
     * 
     */
    @Import(name="controlPlane")
    private @Nullable Output<ClusterControlPlaneArgs> controlPlane;

    /**
     * @return The configuration of the cluster control plane.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterControlPlaneArgs>> controlPlane() {
        return Optional.ofNullable(this.controlPlane);
    }

    /**
     * Remote control plane disk encryption options. This field is only used when
     * enabling CMEK support.
     * Structure is documented below.
     * 
     */
    @Import(name="controlPlaneEncryption")
    private @Nullable Output<ClusterControlPlaneEncryptionArgs> controlPlaneEncryption;

    /**
     * @return Remote control plane disk encryption options. This field is only used when
     * enabling CMEK support.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterControlPlaneEncryptionArgs>> controlPlaneEncryption() {
        return Optional.ofNullable(this.controlPlaneEncryption);
    }

    /**
     * The default maximum number of pods per node used if a maximum value is not
     * specified explicitly for a node pool in this cluster. If unspecified, the
     * Kubernetes default value will be used.
     * 
     */
    @Import(name="defaultMaxPodsPerNode")
    private @Nullable Output<Integer> defaultMaxPodsPerNode;

    /**
     * @return The default maximum number of pods per node used if a maximum value is not
     * specified explicitly for a node pool in this cluster. If unspecified, the
     * Kubernetes default value will be used.
     * 
     */
    public Optional<Output<Integer>> defaultMaxPodsPerNode() {
        return Optional.ofNullable(this.defaultMaxPodsPerNode);
    }

    /**
     * Address pools for cluster data plane external load balancing.
     * 
     */
    @Import(name="externalLoadBalancerIpv4AddressPools")
    private @Nullable Output<List<String>> externalLoadBalancerIpv4AddressPools;

    /**
     * @return Address pools for cluster data plane external load balancing.
     * 
     */
    public Optional<Output<List<String>>> externalLoadBalancerIpv4AddressPools() {
        return Optional.ofNullable(this.externalLoadBalancerIpv4AddressPools);
    }

    /**
     * Fleet related configuration.
     * Fleets are a Google Cloud concept for logically organizing clusters,
     * letting you use and manage multi-cluster capabilities and apply
     * consistent policies across your systems.
     * Structure is documented below.
     * 
     */
    @Import(name="fleet", required=true)
    private Output<ClusterFleetArgs> fleet;

    /**
     * @return Fleet related configuration.
     * Fleets are a Google Cloud concept for logically organizing clusters,
     * letting you use and manage multi-cluster capabilities and apply
     * consistent policies across your systems.
     * Structure is documented below.
     * 
     */
    public Output<ClusterFleetArgs> fleet() {
        return this.fleet;
    }

    /**
     * User-defined labels for the edgecloud cluster.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return User-defined labels for the edgecloud cluster.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location of the resource.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * Cluster-wide maintenance policy configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="maintenancePolicy")
    private @Nullable Output<ClusterMaintenancePolicyArgs> maintenancePolicy;

    /**
     * @return Cluster-wide maintenance policy configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterMaintenancePolicyArgs>> maintenancePolicy() {
        return Optional.ofNullable(this.maintenancePolicy);
    }

    /**
     * The GDCE cluster name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The GDCE cluster name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Fleet related configuration.
     * Fleets are a Google Cloud concept for logically organizing clusters,
     * letting you use and manage multi-cluster capabilities and apply
     * consistent policies across your systems.
     * Structure is documented below.
     * 
     */
    @Import(name="networking", required=true)
    private Output<ClusterNetworkingArgs> networking;

    /**
     * @return Fleet related configuration.
     * Fleets are a Google Cloud concept for logically organizing clusters,
     * letting you use and manage multi-cluster capabilities and apply
     * consistent policies across your systems.
     * Structure is documented below.
     * 
     */
    public Output<ClusterNetworkingArgs> networking() {
        return this.networking;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The release channel a cluster is subscribed to.
     * Possible values are: `RELEASE_CHANNEL_UNSPECIFIED`, `NONE`, `REGULAR`.
     * 
     */
    @Import(name="releaseChannel")
    private @Nullable Output<String> releaseChannel;

    /**
     * @return The release channel a cluster is subscribed to.
     * Possible values are: `RELEASE_CHANNEL_UNSPECIFIED`, `NONE`, `REGULAR`.
     * 
     */
    public Optional<Output<String>> releaseChannel() {
        return Optional.ofNullable(this.releaseChannel);
    }

    /**
     * Config that customers are allowed to define for GDCE system add-ons.
     * Structure is documented below.
     * 
     */
    @Import(name="systemAddonsConfig")
    private @Nullable Output<ClusterSystemAddonsConfigArgs> systemAddonsConfig;

    /**
     * @return Config that customers are allowed to define for GDCE system add-ons.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterSystemAddonsConfigArgs>> systemAddonsConfig() {
        return Optional.ofNullable(this.systemAddonsConfig);
    }

    /**
     * The target cluster version. For example: &#34;1.5.0&#34;.
     * 
     */
    @Import(name="targetVersion")
    private @Nullable Output<String> targetVersion;

    /**
     * @return The target cluster version. For example: &#34;1.5.0&#34;.
     * 
     */
    public Optional<Output<String>> targetVersion() {
        return Optional.ofNullable(this.targetVersion);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.authorization = $.authorization;
        this.controlPlane = $.controlPlane;
        this.controlPlaneEncryption = $.controlPlaneEncryption;
        this.defaultMaxPodsPerNode = $.defaultMaxPodsPerNode;
        this.externalLoadBalancerIpv4AddressPools = $.externalLoadBalancerIpv4AddressPools;
        this.fleet = $.fleet;
        this.labels = $.labels;
        this.location = $.location;
        this.maintenancePolicy = $.maintenancePolicy;
        this.name = $.name;
        this.networking = $.networking;
        this.project = $.project;
        this.releaseChannel = $.releaseChannel;
        this.systemAddonsConfig = $.systemAddonsConfig;
        this.targetVersion = $.targetVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorization RBAC policy that will be applied and managed by GEC.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authorization(Output<ClusterAuthorizationArgs> authorization) {
            $.authorization = authorization;
            return this;
        }

        /**
         * @param authorization RBAC policy that will be applied and managed by GEC.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authorization(ClusterAuthorizationArgs authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param controlPlane The configuration of the cluster control plane.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder controlPlane(@Nullable Output<ClusterControlPlaneArgs> controlPlane) {
            $.controlPlane = controlPlane;
            return this;
        }

        /**
         * @param controlPlane The configuration of the cluster control plane.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder controlPlane(ClusterControlPlaneArgs controlPlane) {
            return controlPlane(Output.of(controlPlane));
        }

        /**
         * @param controlPlaneEncryption Remote control plane disk encryption options. This field is only used when
         * enabling CMEK support.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder controlPlaneEncryption(@Nullable Output<ClusterControlPlaneEncryptionArgs> controlPlaneEncryption) {
            $.controlPlaneEncryption = controlPlaneEncryption;
            return this;
        }

        /**
         * @param controlPlaneEncryption Remote control plane disk encryption options. This field is only used when
         * enabling CMEK support.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder controlPlaneEncryption(ClusterControlPlaneEncryptionArgs controlPlaneEncryption) {
            return controlPlaneEncryption(Output.of(controlPlaneEncryption));
        }

        /**
         * @param defaultMaxPodsPerNode The default maximum number of pods per node used if a maximum value is not
         * specified explicitly for a node pool in this cluster. If unspecified, the
         * Kubernetes default value will be used.
         * 
         * @return builder
         * 
         */
        public Builder defaultMaxPodsPerNode(@Nullable Output<Integer> defaultMaxPodsPerNode) {
            $.defaultMaxPodsPerNode = defaultMaxPodsPerNode;
            return this;
        }

        /**
         * @param defaultMaxPodsPerNode The default maximum number of pods per node used if a maximum value is not
         * specified explicitly for a node pool in this cluster. If unspecified, the
         * Kubernetes default value will be used.
         * 
         * @return builder
         * 
         */
        public Builder defaultMaxPodsPerNode(Integer defaultMaxPodsPerNode) {
            return defaultMaxPodsPerNode(Output.of(defaultMaxPodsPerNode));
        }

        /**
         * @param externalLoadBalancerIpv4AddressPools Address pools for cluster data plane external load balancing.
         * 
         * @return builder
         * 
         */
        public Builder externalLoadBalancerIpv4AddressPools(@Nullable Output<List<String>> externalLoadBalancerIpv4AddressPools) {
            $.externalLoadBalancerIpv4AddressPools = externalLoadBalancerIpv4AddressPools;
            return this;
        }

        /**
         * @param externalLoadBalancerIpv4AddressPools Address pools for cluster data plane external load balancing.
         * 
         * @return builder
         * 
         */
        public Builder externalLoadBalancerIpv4AddressPools(List<String> externalLoadBalancerIpv4AddressPools) {
            return externalLoadBalancerIpv4AddressPools(Output.of(externalLoadBalancerIpv4AddressPools));
        }

        /**
         * @param externalLoadBalancerIpv4AddressPools Address pools for cluster data plane external load balancing.
         * 
         * @return builder
         * 
         */
        public Builder externalLoadBalancerIpv4AddressPools(String... externalLoadBalancerIpv4AddressPools) {
            return externalLoadBalancerIpv4AddressPools(List.of(externalLoadBalancerIpv4AddressPools));
        }

        /**
         * @param fleet Fleet related configuration.
         * Fleets are a Google Cloud concept for logically organizing clusters,
         * letting you use and manage multi-cluster capabilities and apply
         * consistent policies across your systems.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder fleet(Output<ClusterFleetArgs> fleet) {
            $.fleet = fleet;
            return this;
        }

        /**
         * @param fleet Fleet related configuration.
         * Fleets are a Google Cloud concept for logically organizing clusters,
         * letting you use and manage multi-cluster capabilities and apply
         * consistent policies across your systems.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder fleet(ClusterFleetArgs fleet) {
            return fleet(Output.of(fleet));
        }

        /**
         * @param labels User-defined labels for the edgecloud cluster.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels User-defined labels for the edgecloud cluster.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maintenancePolicy Cluster-wide maintenance policy configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder maintenancePolicy(@Nullable Output<ClusterMaintenancePolicyArgs> maintenancePolicy) {
            $.maintenancePolicy = maintenancePolicy;
            return this;
        }

        /**
         * @param maintenancePolicy Cluster-wide maintenance policy configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder maintenancePolicy(ClusterMaintenancePolicyArgs maintenancePolicy) {
            return maintenancePolicy(Output.of(maintenancePolicy));
        }

        /**
         * @param name The GDCE cluster name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The GDCE cluster name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networking Fleet related configuration.
         * Fleets are a Google Cloud concept for logically organizing clusters,
         * letting you use and manage multi-cluster capabilities and apply
         * consistent policies across your systems.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networking(Output<ClusterNetworkingArgs> networking) {
            $.networking = networking;
            return this;
        }

        /**
         * @param networking Fleet related configuration.
         * Fleets are a Google Cloud concept for logically organizing clusters,
         * letting you use and manage multi-cluster capabilities and apply
         * consistent policies across your systems.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networking(ClusterNetworkingArgs networking) {
            return networking(Output.of(networking));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param releaseChannel The release channel a cluster is subscribed to.
         * Possible values are: `RELEASE_CHANNEL_UNSPECIFIED`, `NONE`, `REGULAR`.
         * 
         * @return builder
         * 
         */
        public Builder releaseChannel(@Nullable Output<String> releaseChannel) {
            $.releaseChannel = releaseChannel;
            return this;
        }

        /**
         * @param releaseChannel The release channel a cluster is subscribed to.
         * Possible values are: `RELEASE_CHANNEL_UNSPECIFIED`, `NONE`, `REGULAR`.
         * 
         * @return builder
         * 
         */
        public Builder releaseChannel(String releaseChannel) {
            return releaseChannel(Output.of(releaseChannel));
        }

        /**
         * @param systemAddonsConfig Config that customers are allowed to define for GDCE system add-ons.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder systemAddonsConfig(@Nullable Output<ClusterSystemAddonsConfigArgs> systemAddonsConfig) {
            $.systemAddonsConfig = systemAddonsConfig;
            return this;
        }

        /**
         * @param systemAddonsConfig Config that customers are allowed to define for GDCE system add-ons.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder systemAddonsConfig(ClusterSystemAddonsConfigArgs systemAddonsConfig) {
            return systemAddonsConfig(Output.of(systemAddonsConfig));
        }

        /**
         * @param targetVersion The target cluster version. For example: &#34;1.5.0&#34;.
         * 
         * @return builder
         * 
         */
        public Builder targetVersion(@Nullable Output<String> targetVersion) {
            $.targetVersion = targetVersion;
            return this;
        }

        /**
         * @param targetVersion The target cluster version. For example: &#34;1.5.0&#34;.
         * 
         * @return builder
         * 
         */
        public Builder targetVersion(String targetVersion) {
            return targetVersion(Output.of(targetVersion));
        }

        public ClusterArgs build() {
            if ($.authorization == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "authorization");
            }
            if ($.fleet == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "fleet");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "location");
            }
            if ($.networking == null) {
                throw new MissingRequiredPropertyException("ClusterArgs", "networking");
            }
            return $;
        }
    }

}
