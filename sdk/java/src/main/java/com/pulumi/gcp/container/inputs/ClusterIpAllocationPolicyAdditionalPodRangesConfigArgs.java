// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs Empty = new ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs();

    /**
     * The names of the Pod ranges to add to the cluster.
     * 
     */
    @Import(name="podRangeNames", required=true)
    private Output<List<String>> podRangeNames;

    /**
     * @return The names of the Pod ranges to add to the cluster.
     * 
     */
    public Output<List<String>> podRangeNames() {
        return this.podRangeNames;
    }

    private ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs() {}

    private ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs(ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs $) {
        this.podRangeNames = $.podRangeNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs $;

        public Builder() {
            $ = new ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs();
        }

        public Builder(ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs defaults) {
            $ = new ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param podRangeNames The names of the Pod ranges to add to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder podRangeNames(Output<List<String>> podRangeNames) {
            $.podRangeNames = podRangeNames;
            return this;
        }

        /**
         * @param podRangeNames The names of the Pod ranges to add to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder podRangeNames(List<String> podRangeNames) {
            return podRangeNames(Output.of(podRangeNames));
        }

        /**
         * @param podRangeNames The names of the Pod ranges to add to the cluster.
         * 
         * @return builder
         * 
         */
        public Builder podRangeNames(String... podRangeNames) {
            return podRangeNames(List.of(podRangeNames));
        }

        public ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs build() {
            if ($.podRangeNames == null) {
                throw new MissingRequiredPropertyException("ClusterIpAllocationPolicyAdditionalPodRangesConfigArgs", "podRangeNames");
            }
            return $;
        }
    }

}
