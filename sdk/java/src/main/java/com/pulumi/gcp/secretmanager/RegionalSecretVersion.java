// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.secretmanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.secretmanager.RegionalSecretVersionArgs;
import com.pulumi.gcp.secretmanager.inputs.RegionalSecretVersionState;
import com.pulumi.gcp.secretmanager.outputs.RegionalSecretVersionCustomerManagedEncryption;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Regional Secret Version Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.secretmanager.RegionalSecret;
 * import com.pulumi.gcp.secretmanager.RegionalSecretArgs;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersion;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var secret_basic = new RegionalSecret("secret-basic", RegionalSecretArgs.builder()
 *             .secretId("secret-version")
 *             .location("us-central1")
 *             .build());
 * 
 *         var regionalSecretVersionBasic = new RegionalSecretVersion("regionalSecretVersionBasic", RegionalSecretVersionArgs.builder()
 *             .secret(secret_basic.id())
 *             .secretData("secret-data")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Regional Secret Version With Base64 Data
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.secretmanager.RegionalSecret;
 * import com.pulumi.gcp.secretmanager.RegionalSecretArgs;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersion;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersionArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.Filebase64Args;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var secret_basic = new RegionalSecret("secret-basic", RegionalSecretArgs.builder()
 *             .secretId("secret-version")
 *             .location("us-central1")
 *             .build());
 * 
 *         var regionalSecretVersionBase64 = new RegionalSecretVersion("regionalSecretVersionBase64", RegionalSecretVersionArgs.builder()
 *             .secret(secret_basic.id())
 *             .secretData(StdFunctions.filebase64(Filebase64Args.builder()
 *                 .input("secret-data.pfx")
 *                 .build()).result())
 *             .isSecretDataBase64(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Regional Secret Version Disabled
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.secretmanager.RegionalSecret;
 * import com.pulumi.gcp.secretmanager.RegionalSecretArgs;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersion;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var secret_basic = new RegionalSecret("secret-basic", RegionalSecretArgs.builder()
 *             .secretId("secret-version")
 *             .location("us-central1")
 *             .build());
 * 
 *         var regionalSecretVersionDisabled = new RegionalSecretVersion("regionalSecretVersionDisabled", RegionalSecretVersionArgs.builder()
 *             .secret(secret_basic.id())
 *             .secretData("secret-data")
 *             .enabled(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Regional Secret Version Deletion Policy Abandon
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.secretmanager.RegionalSecret;
 * import com.pulumi.gcp.secretmanager.RegionalSecretArgs;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersion;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var secret_basic = new RegionalSecret("secret-basic", RegionalSecretArgs.builder()
 *             .secretId("secret-version")
 *             .location("us-central1")
 *             .build());
 * 
 *         var regionalSecretVersionDeletionPolicy = new RegionalSecretVersion("regionalSecretVersionDeletionPolicy", RegionalSecretVersionArgs.builder()
 *             .secret(secret_basic.id())
 *             .secretData("secret-data")
 *             .deletionPolicy("ABANDON")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Regional Secret Version Deletion Policy Disable
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.secretmanager.RegionalSecret;
 * import com.pulumi.gcp.secretmanager.RegionalSecretArgs;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersion;
 * import com.pulumi.gcp.secretmanager.RegionalSecretVersionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var secret_basic = new RegionalSecret("secret-basic", RegionalSecretArgs.builder()
 *             .secretId("secret-version")
 *             .location("us-central1")
 *             .build());
 * 
 *         var regionalSecretVersionDeletionPolicy = new RegionalSecretVersion("regionalSecretVersionDeletionPolicy", RegionalSecretVersionArgs.builder()
 *             .secret(secret_basic.id())
 *             .secretData("secret-data")
 *             .deletionPolicy("DISABLE")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * RegionalSecretVersion can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}`
 * 
 * When using the `pulumi import` command, RegionalSecretVersion can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:secretmanager/regionalSecretVersion:RegionalSecretVersion default projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}
 * ```
 * 
 */
@ResourceType(type="gcp:secretmanager/regionalSecretVersion:RegionalSecretVersion")
public class RegionalSecretVersion extends com.pulumi.resources.CustomResource {
    /**
     * The time at which the regional secret version was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time at which the regional secret version was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The customer-managed encryption configuration of the regional secret.
     * Structure is documented below.
     * 
     */
    @Export(name="customerManagedEncryptions", refs={List.class,RegionalSecretVersionCustomerManagedEncryption.class}, tree="[0,1]")
    private Output<List<RegionalSecretVersionCustomerManagedEncryption>> customerManagedEncryptions;

    /**
     * @return The customer-managed encryption configuration of the regional secret.
     * Structure is documented below.
     * 
     */
    public Output<List<RegionalSecretVersionCustomerManagedEncryption>> customerManagedEncryptions() {
        return this.customerManagedEncryptions;
    }
    /**
     * The deletion policy for the regional secret version. Setting `ABANDON` allows the resource
     * to be abandoned rather than deleted. Setting `DISABLE` allows the resource to be
     * disabled rather than deleted. Default is `DELETE`. Possible values are:
     * * DELETE
     * * DISABLE
     * * ABANDON
     * 
     */
    @Export(name="deletionPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deletionPolicy;

    /**
     * @return The deletion policy for the regional secret version. Setting `ABANDON` allows the resource
     * to be abandoned rather than deleted. Setting `DISABLE` allows the resource to be
     * disabled rather than deleted. Default is `DELETE`. Possible values are:
     * * DELETE
     * * DISABLE
     * * ABANDON
     * 
     */
    public Output<Optional<String>> deletionPolicy() {
        return Codegen.optional(this.deletionPolicy);
    }
    /**
     * The time at which the regional secret version was destroyed. Only present if state is DESTROYED.
     * 
     */
    @Export(name="destroyTime", refs={String.class}, tree="[0]")
    private Output<String> destroyTime;

    /**
     * @return The time at which the regional secret version was destroyed. Only present if state is DESTROYED.
     * 
     */
    public Output<String> destroyTime() {
        return this.destroyTime;
    }
    /**
     * The current state of the regional secret version.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return The current state of the regional secret version.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * If set to &#39;true&#39;, the secret data is expected to be base64-encoded string and would be sent as is.
     * 
     */
    @Export(name="isSecretDataBase64", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isSecretDataBase64;

    /**
     * @return If set to &#39;true&#39;, the secret data is expected to be base64-encoded string and would be sent as is.
     * 
     */
    public Output<Optional<Boolean>> isSecretDataBase64() {
        return Codegen.optional(this.isSecretDataBase64);
    }
    /**
     * Location of Secret Manager regional secret resource.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Location of Secret Manager regional secret resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource name of the regional secret version. Format:
     * `projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the regional secret version. Format:
     * `projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Secret Manager regional secret resource.
     * 
     */
    @Export(name="secret", refs={String.class}, tree="[0]")
    private Output<String> secret;

    /**
     * @return Secret Manager regional secret resource.
     * 
     */
    public Output<String> secret() {
        return this.secret;
    }
    /**
     * The secret data. Must be no larger than 64KiB.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Export(name="secretData", refs={String.class}, tree="[0]")
    private Output<String> secretData;

    /**
     * @return The secret data. Must be no larger than 64KiB.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Output<String> secretData() {
        return this.secretData;
    }
    /**
     * The version of the Regional Secret.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return The version of the Regional Secret.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegionalSecretVersion(java.lang.String name) {
        this(name, RegionalSecretVersionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegionalSecretVersion(java.lang.String name, RegionalSecretVersionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegionalSecretVersion(java.lang.String name, RegionalSecretVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:secretmanager/regionalSecretVersion:RegionalSecretVersion", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RegionalSecretVersion(java.lang.String name, Output<java.lang.String> id, @Nullable RegionalSecretVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:secretmanager/regionalSecretVersion:RegionalSecretVersion", name, state, makeResourceOptions(options, id), false);
    }

    private static RegionalSecretVersionArgs makeArgs(RegionalSecretVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RegionalSecretVersionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "secretData"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegionalSecretVersion get(java.lang.String name, Output<java.lang.String> id, @Nullable RegionalSecretVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RegionalSecretVersion(name, id, state, options);
    }
}
