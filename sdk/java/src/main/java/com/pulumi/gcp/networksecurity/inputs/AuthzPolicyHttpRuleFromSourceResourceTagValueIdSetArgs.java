// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs Empty = new AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs();

    /**
     * A list of resource tag value permanent IDs to match against the resource manager tags value associated with the source VM of a request. The match follows AND semantics which means all the ids must match.
     * Limited to 5 matches.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of resource tag value permanent IDs to match against the resource manager tags value associated with the source VM of a request. The match follows AND semantics which means all the ids must match.
     * Limited to 5 matches.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    private AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs() {}

    private AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs(AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs $) {
        this.ids = $.ids;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs $;

        public Builder() {
            $ = new AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs();
        }

        public Builder(AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs defaults) {
            $ = new AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids A list of resource tag value permanent IDs to match against the resource manager tags value associated with the source VM of a request. The match follows AND semantics which means all the ids must match.
         * Limited to 5 matches.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of resource tag value permanent IDs to match against the resource manager tags value associated with the source VM of a request. The match follows AND semantics which means all the ids must match.
         * Limited to 5 matches.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of resource tag value permanent IDs to match against the resource manager tags value associated with the source VM of a request. The match follows AND semantics which means all the ids must match.
         * Limited to 5 matches.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        public AuthzPolicyHttpRuleFromSourceResourceTagValueIdSetArgs build() {
            return $;
        }
    }

}
