// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfig;
import com.pulumi.gcp.container.outputs.ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfig;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterAddonsConfigRayOperatorConfig {
    private Boolean enabled;
    /**
     * @return The status of Ray Logging, which scrapes Ray cluster logs to Cloud Logging. Defaults to disabled; set enabled = true to enable.
     * 
     */
    private @Nullable ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfig rayClusterLoggingConfig;
    /**
     * @return The status of Ray Cluster monitoring, which shows Ray cluster metrics in Cloud Console. Defaults to disabled; set enabled = true to enable.
     * 
     */
    private @Nullable ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfig rayClusterMonitoringConfig;

    private ClusterAddonsConfigRayOperatorConfig() {}
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The status of Ray Logging, which scrapes Ray cluster logs to Cloud Logging. Defaults to disabled; set enabled = true to enable.
     * 
     */
    public Optional<ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfig> rayClusterLoggingConfig() {
        return Optional.ofNullable(this.rayClusterLoggingConfig);
    }
    /**
     * @return The status of Ray Cluster monitoring, which shows Ray cluster metrics in Cloud Console. Defaults to disabled; set enabled = true to enable.
     * 
     */
    public Optional<ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfig> rayClusterMonitoringConfig() {
        return Optional.ofNullable(this.rayClusterMonitoringConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterAddonsConfigRayOperatorConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfig rayClusterLoggingConfig;
        private @Nullable ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfig rayClusterMonitoringConfig;
        public Builder() {}
        public Builder(ClusterAddonsConfigRayOperatorConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.rayClusterLoggingConfig = defaults.rayClusterLoggingConfig;
    	      this.rayClusterMonitoringConfig = defaults.rayClusterMonitoringConfig;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("ClusterAddonsConfigRayOperatorConfig", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder rayClusterLoggingConfig(@Nullable ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfig rayClusterLoggingConfig) {

            this.rayClusterLoggingConfig = rayClusterLoggingConfig;
            return this;
        }
        @CustomType.Setter
        public Builder rayClusterMonitoringConfig(@Nullable ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfig rayClusterMonitoringConfig) {

            this.rayClusterMonitoringConfig = rayClusterMonitoringConfig;
            return this;
        }
        public ClusterAddonsConfigRayOperatorConfig build() {
            final var _resultValue = new ClusterAddonsConfigRayOperatorConfig();
            _resultValue.enabled = enabled;
            _resultValue.rayClusterLoggingConfig = rayClusterLoggingConfig;
            _resultValue.rayClusterMonitoringConfig = rayClusterMonitoringConfig;
            return _resultValue;
        }
    }
}
