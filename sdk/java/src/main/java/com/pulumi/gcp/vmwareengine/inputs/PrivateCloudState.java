// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vmwareengine.inputs.PrivateCloudHcxArgs;
import com.pulumi.gcp.vmwareengine.inputs.PrivateCloudManagementClusterArgs;
import com.pulumi.gcp.vmwareengine.inputs.PrivateCloudNetworkConfigArgs;
import com.pulumi.gcp.vmwareengine.inputs.PrivateCloudNsxArgs;
import com.pulumi.gcp.vmwareengine.inputs.PrivateCloudVcenterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateCloudState extends com.pulumi.resources.ResourceArgs {

    public static final PrivateCloudState Empty = new PrivateCloudState();

    /**
     * User-provided description for this private cloud.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return User-provided description for this private cloud.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Details about a HCX Cloud Manager appliance.
     * Structure is documented below.
     * 
     */
    @Import(name="hcxes")
    private @Nullable Output<List<PrivateCloudHcxArgs>> hcxes;

    /**
     * @return Details about a HCX Cloud Manager appliance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PrivateCloudHcxArgs>>> hcxes() {
        return Optional.ofNullable(this.hcxes);
    }

    /**
     * The location where the PrivateCloud should reside.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the PrivateCloud should reside.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The management cluster for this private cloud. This used for creating and managing the default cluster.
     * Structure is documented below.
     * 
     */
    @Import(name="managementCluster")
    private @Nullable Output<PrivateCloudManagementClusterArgs> managementCluster;

    /**
     * @return The management cluster for this private cloud. This used for creating and managing the default cluster.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PrivateCloudManagementClusterArgs>> managementCluster() {
        return Optional.ofNullable(this.managementCluster);
    }

    /**
     * The ID of the PrivateCloud.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The ID of the PrivateCloud.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Network configuration in the consumer project with which the peering has to be done.
     * Structure is documented below.
     * 
     */
    @Import(name="networkConfig")
    private @Nullable Output<PrivateCloudNetworkConfigArgs> networkConfig;

    /**
     * @return Network configuration in the consumer project with which the peering has to be done.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PrivateCloudNetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    /**
     * Details about a NSX Manager appliance.
     * Structure is documented below.
     * 
     */
    @Import(name="nsxes")
    private @Nullable Output<List<PrivateCloudNsxArgs>> nsxes;

    /**
     * @return Details about a NSX Manager appliance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PrivateCloudNsxArgs>>> nsxes() {
        return Optional.ofNullable(this.nsxes);
    }

    /**
     * The preferred single failure domain within a region.
     * 
     */
    @Import(name="preferredZone")
    private @Nullable Output<String> preferredZone;

    /**
     * @return The preferred single failure domain within a region.
     * 
     */
    public Optional<Output<String>> preferredZone() {
        return Optional.ofNullable(this.preferredZone);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The secondary single failure domain within a region.
     * 
     */
    @Import(name="secondaryZone")
    private @Nullable Output<String> secondaryZone;

    /**
     * @return The secondary single failure domain within a region.
     * 
     */
    public Optional<Output<String>> secondaryZone() {
        return Optional.ofNullable(this.secondaryZone);
    }

    /**
     * State of the appliance.
     * Possible values are: `ACTIVE`, `CREATING`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return State of the appliance.
     * Possible values are: `ACTIVE`, `CREATING`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Initial type of the private cloud. Possible values: [&#34;STANDARD&#34;, &#34;TIME_LIMITED&#34;, &#34;STRETCHED&#34;]
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Initial type of the private cloud. Possible values: [&#34;STANDARD&#34;, &#34;TIME_LIMITED&#34;, &#34;STRETCHED&#34;]
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * System-generated unique identifier for the resource.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return System-generated unique identifier for the resource.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * Details about a vCenter Server management appliance.
     * Structure is documented below.
     * 
     */
    @Import(name="vcenters")
    private @Nullable Output<List<PrivateCloudVcenterArgs>> vcenters;

    /**
     * @return Details about a vCenter Server management appliance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PrivateCloudVcenterArgs>>> vcenters() {
        return Optional.ofNullable(this.vcenters);
    }

    private PrivateCloudState() {}

    private PrivateCloudState(PrivateCloudState $) {
        this.description = $.description;
        this.hcxes = $.hcxes;
        this.location = $.location;
        this.managementCluster = $.managementCluster;
        this.name = $.name;
        this.networkConfig = $.networkConfig;
        this.nsxes = $.nsxes;
        this.preferredZone = $.preferredZone;
        this.project = $.project;
        this.secondaryZone = $.secondaryZone;
        this.state = $.state;
        this.type = $.type;
        this.uid = $.uid;
        this.vcenters = $.vcenters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateCloudState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateCloudState $;

        public Builder() {
            $ = new PrivateCloudState();
        }

        public Builder(PrivateCloudState defaults) {
            $ = new PrivateCloudState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description User-provided description for this private cloud.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description User-provided description for this private cloud.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param hcxes Details about a HCX Cloud Manager appliance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hcxes(@Nullable Output<List<PrivateCloudHcxArgs>> hcxes) {
            $.hcxes = hcxes;
            return this;
        }

        /**
         * @param hcxes Details about a HCX Cloud Manager appliance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hcxes(List<PrivateCloudHcxArgs> hcxes) {
            return hcxes(Output.of(hcxes));
        }

        /**
         * @param hcxes Details about a HCX Cloud Manager appliance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hcxes(PrivateCloudHcxArgs... hcxes) {
            return hcxes(List.of(hcxes));
        }

        /**
         * @param location The location where the PrivateCloud should reside.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the PrivateCloud should reside.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managementCluster The management cluster for this private cloud. This used for creating and managing the default cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder managementCluster(@Nullable Output<PrivateCloudManagementClusterArgs> managementCluster) {
            $.managementCluster = managementCluster;
            return this;
        }

        /**
         * @param managementCluster The management cluster for this private cloud. This used for creating and managing the default cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder managementCluster(PrivateCloudManagementClusterArgs managementCluster) {
            return managementCluster(Output.of(managementCluster));
        }

        /**
         * @param name The ID of the PrivateCloud.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The ID of the PrivateCloud.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkConfig Network configuration in the consumer project with which the peering has to be done.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(@Nullable Output<PrivateCloudNetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        /**
         * @param networkConfig Network configuration in the consumer project with which the peering has to be done.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(PrivateCloudNetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        /**
         * @param nsxes Details about a NSX Manager appliance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nsxes(@Nullable Output<List<PrivateCloudNsxArgs>> nsxes) {
            $.nsxes = nsxes;
            return this;
        }

        /**
         * @param nsxes Details about a NSX Manager appliance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nsxes(List<PrivateCloudNsxArgs> nsxes) {
            return nsxes(Output.of(nsxes));
        }

        /**
         * @param nsxes Details about a NSX Manager appliance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nsxes(PrivateCloudNsxArgs... nsxes) {
            return nsxes(List.of(nsxes));
        }

        /**
         * @param preferredZone The preferred single failure domain within a region.
         * 
         * @return builder
         * 
         */
        public Builder preferredZone(@Nullable Output<String> preferredZone) {
            $.preferredZone = preferredZone;
            return this;
        }

        /**
         * @param preferredZone The preferred single failure domain within a region.
         * 
         * @return builder
         * 
         */
        public Builder preferredZone(String preferredZone) {
            return preferredZone(Output.of(preferredZone));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param secondaryZone The secondary single failure domain within a region.
         * 
         * @return builder
         * 
         */
        public Builder secondaryZone(@Nullable Output<String> secondaryZone) {
            $.secondaryZone = secondaryZone;
            return this;
        }

        /**
         * @param secondaryZone The secondary single failure domain within a region.
         * 
         * @return builder
         * 
         */
        public Builder secondaryZone(String secondaryZone) {
            return secondaryZone(Output.of(secondaryZone));
        }

        /**
         * @param state State of the appliance.
         * Possible values are: `ACTIVE`, `CREATING`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state State of the appliance.
         * Possible values are: `ACTIVE`, `CREATING`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param type Initial type of the private cloud. Possible values: [&#34;STANDARD&#34;, &#34;TIME_LIMITED&#34;, &#34;STRETCHED&#34;]
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Initial type of the private cloud. Possible values: [&#34;STANDARD&#34;, &#34;TIME_LIMITED&#34;, &#34;STRETCHED&#34;]
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param uid System-generated unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid System-generated unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        /**
         * @param vcenters Details about a vCenter Server management appliance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vcenters(@Nullable Output<List<PrivateCloudVcenterArgs>> vcenters) {
            $.vcenters = vcenters;
            return this;
        }

        /**
         * @param vcenters Details about a vCenter Server management appliance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vcenters(List<PrivateCloudVcenterArgs> vcenters) {
            return vcenters(Output.of(vcenters));
        }

        /**
         * @param vcenters Details about a vCenter Server management appliance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vcenters(PrivateCloudVcenterArgs... vcenters) {
            return vcenters(List.of(vcenters));
        }

        public PrivateCloudState build() {
            return $;
        }
    }

}
