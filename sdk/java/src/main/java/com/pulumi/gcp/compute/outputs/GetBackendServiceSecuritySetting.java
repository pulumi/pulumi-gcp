// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetBackendServiceSecuritySettingAwsV4Authentication;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBackendServiceSecuritySetting {
    /**
     * @return The configuration needed to generate a signature for access to private storage buckets that support AWS&#39;s Signature Version 4 for authentication.
     * Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
     * 
     */
    private List<GetBackendServiceSecuritySettingAwsV4Authentication> awsV4Authentications;
    /**
     * @return ClientTlsPolicy is a resource that specifies how a client should authenticate
     * connections to backends of a service. This resource itself does not affect
     * configuration unless it is attached to a backend service resource.
     * 
     */
    private String clientTlsPolicy;
    /**
     * @return A list of alternate names to verify the subject identity in the certificate.
     * If specified, the client will verify that the server certificate&#39;s subject
     * alt name matches one of the specified values.
     * 
     */
    private List<String> subjectAltNames;

    private GetBackendServiceSecuritySetting() {}
    /**
     * @return The configuration needed to generate a signature for access to private storage buckets that support AWS&#39;s Signature Version 4 for authentication.
     * Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
     * 
     */
    public List<GetBackendServiceSecuritySettingAwsV4Authentication> awsV4Authentications() {
        return this.awsV4Authentications;
    }
    /**
     * @return ClientTlsPolicy is a resource that specifies how a client should authenticate
     * connections to backends of a service. This resource itself does not affect
     * configuration unless it is attached to a backend service resource.
     * 
     */
    public String clientTlsPolicy() {
        return this.clientTlsPolicy;
    }
    /**
     * @return A list of alternate names to verify the subject identity in the certificate.
     * If specified, the client will verify that the server certificate&#39;s subject
     * alt name matches one of the specified values.
     * 
     */
    public List<String> subjectAltNames() {
        return this.subjectAltNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendServiceSecuritySetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetBackendServiceSecuritySettingAwsV4Authentication> awsV4Authentications;
        private String clientTlsPolicy;
        private List<String> subjectAltNames;
        public Builder() {}
        public Builder(GetBackendServiceSecuritySetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsV4Authentications = defaults.awsV4Authentications;
    	      this.clientTlsPolicy = defaults.clientTlsPolicy;
    	      this.subjectAltNames = defaults.subjectAltNames;
        }

        @CustomType.Setter
        public Builder awsV4Authentications(List<GetBackendServiceSecuritySettingAwsV4Authentication> awsV4Authentications) {
            if (awsV4Authentications == null) {
              throw new MissingRequiredPropertyException("GetBackendServiceSecuritySetting", "awsV4Authentications");
            }
            this.awsV4Authentications = awsV4Authentications;
            return this;
        }
        public Builder awsV4Authentications(GetBackendServiceSecuritySettingAwsV4Authentication... awsV4Authentications) {
            return awsV4Authentications(List.of(awsV4Authentications));
        }
        @CustomType.Setter
        public Builder clientTlsPolicy(String clientTlsPolicy) {
            if (clientTlsPolicy == null) {
              throw new MissingRequiredPropertyException("GetBackendServiceSecuritySetting", "clientTlsPolicy");
            }
            this.clientTlsPolicy = clientTlsPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder subjectAltNames(List<String> subjectAltNames) {
            if (subjectAltNames == null) {
              throw new MissingRequiredPropertyException("GetBackendServiceSecuritySetting", "subjectAltNames");
            }
            this.subjectAltNames = subjectAltNames;
            return this;
        }
        public Builder subjectAltNames(String... subjectAltNames) {
            return subjectAltNames(List.of(subjectAltNames));
        }
        public GetBackendServiceSecuritySetting build() {
            final var _resultValue = new GetBackendServiceSecuritySetting();
            _resultValue.awsV4Authentications = awsV4Authentications;
            _resultValue.clientTlsPolicy = clientTlsPolicy;
            _resultValue.subjectAltNames = subjectAltNames;
            return _resultValue;
        }
    }
}
