// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterClusterAutoscalingAutoProvisioningDefaultsManagement {
    /**
     * @return Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
     * 
     */
    private @Nullable Boolean autoRepair;
    /**
     * @return Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
     * 
     */
    private @Nullable Boolean autoUpgrade;
    private @Nullable List<ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption> upgradeOptions;

    private ClusterClusterAutoscalingAutoProvisioningDefaultsManagement() {}
    /**
     * @return Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
     * 
     */
    public Optional<Boolean> autoRepair() {
        return Optional.ofNullable(this.autoRepair);
    }
    /**
     * @return Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
     * 
     */
    public Optional<Boolean> autoUpgrade() {
        return Optional.ofNullable(this.autoUpgrade);
    }
    public List<ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption> upgradeOptions() {
        return this.upgradeOptions == null ? List.of() : this.upgradeOptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterClusterAutoscalingAutoProvisioningDefaultsManagement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoRepair;
        private @Nullable Boolean autoUpgrade;
        private @Nullable List<ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption> upgradeOptions;
        public Builder() {}
        public Builder(ClusterClusterAutoscalingAutoProvisioningDefaultsManagement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRepair = defaults.autoRepair;
    	      this.autoUpgrade = defaults.autoUpgrade;
    	      this.upgradeOptions = defaults.upgradeOptions;
        }

        @CustomType.Setter
        public Builder autoRepair(@Nullable Boolean autoRepair) {
            this.autoRepair = autoRepair;
            return this;
        }
        @CustomType.Setter
        public Builder autoUpgrade(@Nullable Boolean autoUpgrade) {
            this.autoUpgrade = autoUpgrade;
            return this;
        }
        @CustomType.Setter
        public Builder upgradeOptions(@Nullable List<ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption> upgradeOptions) {
            this.upgradeOptions = upgradeOptions;
            return this;
        }
        public Builder upgradeOptions(ClusterClusterAutoscalingAutoProvisioningDefaultsManagementUpgradeOption... upgradeOptions) {
            return upgradeOptions(List.of(upgradeOptions));
        }
        public ClusterClusterAutoscalingAutoProvisioningDefaultsManagement build() {
            final var o = new ClusterClusterAutoscalingAutoProvisioningDefaultsManagement();
            o.autoRepair = autoRepair;
            o.autoUpgrade = autoUpgrade;
            o.upgradeOptions = upgradeOptions;
            return o;
        }
    }
}
