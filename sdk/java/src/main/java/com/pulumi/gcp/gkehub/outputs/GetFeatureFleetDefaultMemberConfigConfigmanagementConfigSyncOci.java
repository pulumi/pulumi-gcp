// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci {
    /**
     * @return The Google Cloud Service Account Email used for auth when secretType is gcpServiceAccount
     * 
     */
    private String gcpServiceAccountEmail;
    /**
     * @return The absolute path of the directory that contains the local resources. Default: the root directory of the image
     * 
     */
    private String policyDir;
    /**
     * @return Type of secret configured for access to the Git repo
     * 
     */
    private String secretType;
    /**
     * @return The OCI image repository URL for the package to sync from
     * 
     */
    private String syncRepo;
    /**
     * @return Period in seconds between consecutive syncs. Default: 15
     * 
     */
    private String syncWaitSecs;
    /**
     * @return Version of Config Sync installed
     * 
     */
    private String version;

    private GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci() {}
    /**
     * @return The Google Cloud Service Account Email used for auth when secretType is gcpServiceAccount
     * 
     */
    public String gcpServiceAccountEmail() {
        return this.gcpServiceAccountEmail;
    }
    /**
     * @return The absolute path of the directory that contains the local resources. Default: the root directory of the image
     * 
     */
    public String policyDir() {
        return this.policyDir;
    }
    /**
     * @return Type of secret configured for access to the Git repo
     * 
     */
    public String secretType() {
        return this.secretType;
    }
    /**
     * @return The OCI image repository URL for the package to sync from
     * 
     */
    public String syncRepo() {
        return this.syncRepo;
    }
    /**
     * @return Period in seconds between consecutive syncs. Default: 15
     * 
     */
    public String syncWaitSecs() {
        return this.syncWaitSecs;
    }
    /**
     * @return Version of Config Sync installed
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String gcpServiceAccountEmail;
        private String policyDir;
        private String secretType;
        private String syncRepo;
        private String syncWaitSecs;
        private String version;
        public Builder() {}
        public Builder(GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gcpServiceAccountEmail = defaults.gcpServiceAccountEmail;
    	      this.policyDir = defaults.policyDir;
    	      this.secretType = defaults.secretType;
    	      this.syncRepo = defaults.syncRepo;
    	      this.syncWaitSecs = defaults.syncWaitSecs;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder gcpServiceAccountEmail(String gcpServiceAccountEmail) {
            if (gcpServiceAccountEmail == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci", "gcpServiceAccountEmail");
            }
            this.gcpServiceAccountEmail = gcpServiceAccountEmail;
            return this;
        }
        @CustomType.Setter
        public Builder policyDir(String policyDir) {
            if (policyDir == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci", "policyDir");
            }
            this.policyDir = policyDir;
            return this;
        }
        @CustomType.Setter
        public Builder secretType(String secretType) {
            if (secretType == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci", "secretType");
            }
            this.secretType = secretType;
            return this;
        }
        @CustomType.Setter
        public Builder syncRepo(String syncRepo) {
            if (syncRepo == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci", "syncRepo");
            }
            this.syncRepo = syncRepo;
            return this;
        }
        @CustomType.Setter
        public Builder syncWaitSecs(String syncWaitSecs) {
            if (syncWaitSecs == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci", "syncWaitSecs");
            }
            this.syncWaitSecs = syncWaitSecs;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci", "version");
            }
            this.version = version;
            return this;
        }
        public GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci build() {
            final var _resultValue = new GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSyncOci();
            _resultValue.gcpServiceAccountEmail = gcpServiceAccountEmail;
            _resultValue.policyDir = policyDir;
            _resultValue.secretType = secretType;
            _resultValue.syncRepo = syncRepo;
            _resultValue.syncWaitSecs = syncWaitSecs;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
