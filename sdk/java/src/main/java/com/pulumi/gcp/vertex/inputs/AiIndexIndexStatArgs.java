// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiIndexIndexStatArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiIndexIndexStatArgs Empty = new AiIndexIndexStatArgs();

    /**
     * The number of shards in the Index.
     * 
     */
    @Import(name="shardsCount")
    private @Nullable Output<Integer> shardsCount;

    /**
     * @return The number of shards in the Index.
     * 
     */
    public Optional<Output<Integer>> shardsCount() {
        return Optional.ofNullable(this.shardsCount);
    }

    /**
     * The number of vectors in the Index.
     * 
     */
    @Import(name="vectorsCount")
    private @Nullable Output<String> vectorsCount;

    /**
     * @return The number of vectors in the Index.
     * 
     */
    public Optional<Output<String>> vectorsCount() {
        return Optional.ofNullable(this.vectorsCount);
    }

    private AiIndexIndexStatArgs() {}

    private AiIndexIndexStatArgs(AiIndexIndexStatArgs $) {
        this.shardsCount = $.shardsCount;
        this.vectorsCount = $.vectorsCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiIndexIndexStatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiIndexIndexStatArgs $;

        public Builder() {
            $ = new AiIndexIndexStatArgs();
        }

        public Builder(AiIndexIndexStatArgs defaults) {
            $ = new AiIndexIndexStatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param shardsCount The number of shards in the Index.
         * 
         * @return builder
         * 
         */
        public Builder shardsCount(@Nullable Output<Integer> shardsCount) {
            $.shardsCount = shardsCount;
            return this;
        }

        /**
         * @param shardsCount The number of shards in the Index.
         * 
         * @return builder
         * 
         */
        public Builder shardsCount(Integer shardsCount) {
            return shardsCount(Output.of(shardsCount));
        }

        /**
         * @param vectorsCount The number of vectors in the Index.
         * 
         * @return builder
         * 
         */
        public Builder vectorsCount(@Nullable Output<String> vectorsCount) {
            $.vectorsCount = vectorsCount;
            return this;
        }

        /**
         * @param vectorsCount The number of vectors in the Index.
         * 
         * @return builder
         * 
         */
        public Builder vectorsCount(String vectorsCount) {
            return vectorsCount(Output.of(vectorsCount));
        }

        public AiIndexIndexStatArgs build() {
            return $;
        }
    }

}
