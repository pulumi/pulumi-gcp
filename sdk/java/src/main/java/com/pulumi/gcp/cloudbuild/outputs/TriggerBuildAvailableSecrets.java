// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudbuild.outputs.TriggerBuildAvailableSecretsSecretManager;
import java.util.List;
import java.util.Objects;

@CustomType
public final class TriggerBuildAvailableSecrets {
    /**
     * @return Pairs a secret environment variable with a SecretVersion in Secret Manager.
     * Structure is documented below.
     * 
     */
    private List<TriggerBuildAvailableSecretsSecretManager> secretManagers;

    private TriggerBuildAvailableSecrets() {}
    /**
     * @return Pairs a secret environment variable with a SecretVersion in Secret Manager.
     * Structure is documented below.
     * 
     */
    public List<TriggerBuildAvailableSecretsSecretManager> secretManagers() {
        return this.secretManagers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerBuildAvailableSecrets defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<TriggerBuildAvailableSecretsSecretManager> secretManagers;
        public Builder() {}
        public Builder(TriggerBuildAvailableSecrets defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.secretManagers = defaults.secretManagers;
        }

        @CustomType.Setter
        public Builder secretManagers(List<TriggerBuildAvailableSecretsSecretManager> secretManagers) {
            if (secretManagers == null) {
              throw new MissingRequiredPropertyException("TriggerBuildAvailableSecrets", "secretManagers");
            }
            this.secretManagers = secretManagers;
            return this;
        }
        public Builder secretManagers(TriggerBuildAvailableSecretsSecretManager... secretManagers) {
            return secretManagers(List.of(secretManagers));
        }
        public TriggerBuildAvailableSecrets build() {
            final var _resultValue = new TriggerBuildAvailableSecrets();
            _resultValue.secretManagers = secretManagers;
            return _resultValue;
        }
    }
}
