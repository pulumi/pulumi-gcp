// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gameservices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.gameservices.outputs.GetGameServerDeploymentRolloutGameServerConfigOverride;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGameServerDeploymentRolloutResult {
    /**
     * @return This field points to the game server config that is
     * applied by default to all realms and clusters. For example,
     * `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.
     * 
     */
    private String defaultGameServerConfig;
    private String deploymentId;
    /**
     * @return The game_server_config_overrides contains the per game server config
     * overrides. The overrides are processed in the order they are listed. As
     * soon as a match is found for a cluster, the rest of the list is not
     * processed.  Structure is documented below.
     * 
     */
    private List<GetGameServerDeploymentRolloutGameServerConfigOverride> gameServerConfigOverrides;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The resource id of the game server deployment
     * eg: `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.
     * 
     */
    private String name;
    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    private String project;

    private GetGameServerDeploymentRolloutResult() {}
    /**
     * @return This field points to the game server config that is
     * applied by default to all realms and clusters. For example,
     * `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.
     * 
     */
    public String defaultGameServerConfig() {
        return this.defaultGameServerConfig;
    }
    public String deploymentId() {
        return this.deploymentId;
    }
    /**
     * @return The game_server_config_overrides contains the per game server config
     * overrides. The overrides are processed in the order they are listed. As
     * soon as a match is found for a cluster, the rest of the list is not
     * processed.  Structure is documented below.
     * 
     */
    public List<GetGameServerDeploymentRolloutGameServerConfigOverride> gameServerConfigOverrides() {
        return this.gameServerConfigOverrides;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The resource id of the game server deployment
     * eg: `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public String project() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGameServerDeploymentRolloutResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String defaultGameServerConfig;
        private String deploymentId;
        private List<GetGameServerDeploymentRolloutGameServerConfigOverride> gameServerConfigOverrides;
        private String id;
        private String name;
        private String project;
        public Builder() {}
        public Builder(GetGameServerDeploymentRolloutResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultGameServerConfig = defaults.defaultGameServerConfig;
    	      this.deploymentId = defaults.deploymentId;
    	      this.gameServerConfigOverrides = defaults.gameServerConfigOverrides;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder defaultGameServerConfig(String defaultGameServerConfig) {
            this.defaultGameServerConfig = Objects.requireNonNull(defaultGameServerConfig);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            this.deploymentId = Objects.requireNonNull(deploymentId);
            return this;
        }
        @CustomType.Setter
        public Builder gameServerConfigOverrides(List<GetGameServerDeploymentRolloutGameServerConfigOverride> gameServerConfigOverrides) {
            this.gameServerConfigOverrides = Objects.requireNonNull(gameServerConfigOverrides);
            return this;
        }
        public Builder gameServerConfigOverrides(GetGameServerDeploymentRolloutGameServerConfigOverride... gameServerConfigOverrides) {
            return gameServerConfigOverrides(List.of(gameServerConfigOverrides));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public GetGameServerDeploymentRolloutResult build() {
            final var o = new GetGameServerDeploymentRolloutResult();
            o.defaultGameServerConfig = defaultGameServerConfig;
            o.deploymentId = deploymentId;
            o.gameServerConfigOverrides = gameServerConfigOverrides;
            o.id = id;
            o.name = name;
            o.project = project;
            return o;
        }
    }
}
