// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.certificateauthority.outputs.CaPoolIssuancePolicyIdentityConstraintsCelExpression;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CaPoolIssuancePolicyIdentityConstraints {
    /**
     * @return If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
     * Otherwise, the requested SubjectAltNames will be discarded.
     * 
     */
    private Boolean allowSubjectAltNamesPassthrough;
    /**
     * @return If this is set, the Subject field may be copied from a certificate request into the signed certificate.
     * Otherwise, the requested Subject will be discarded.
     * 
     */
    private Boolean allowSubjectPassthrough;
    /**
     * @return A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
     * certificate is signed. To see the full allowed syntax and some examples,
     * see https://cloud.google.com/certificate-authority-service/docs/cel-guide
     * Structure is documented below.
     * 
     */
    private @Nullable CaPoolIssuancePolicyIdentityConstraintsCelExpression celExpression;

    private CaPoolIssuancePolicyIdentityConstraints() {}
    /**
     * @return If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
     * Otherwise, the requested SubjectAltNames will be discarded.
     * 
     */
    public Boolean allowSubjectAltNamesPassthrough() {
        return this.allowSubjectAltNamesPassthrough;
    }
    /**
     * @return If this is set, the Subject field may be copied from a certificate request into the signed certificate.
     * Otherwise, the requested Subject will be discarded.
     * 
     */
    public Boolean allowSubjectPassthrough() {
        return this.allowSubjectPassthrough;
    }
    /**
     * @return A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
     * certificate is signed. To see the full allowed syntax and some examples,
     * see https://cloud.google.com/certificate-authority-service/docs/cel-guide
     * Structure is documented below.
     * 
     */
    public Optional<CaPoolIssuancePolicyIdentityConstraintsCelExpression> celExpression() {
        return Optional.ofNullable(this.celExpression);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CaPoolIssuancePolicyIdentityConstraints defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowSubjectAltNamesPassthrough;
        private Boolean allowSubjectPassthrough;
        private @Nullable CaPoolIssuancePolicyIdentityConstraintsCelExpression celExpression;
        public Builder() {}
        public Builder(CaPoolIssuancePolicyIdentityConstraints defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowSubjectAltNamesPassthrough = defaults.allowSubjectAltNamesPassthrough;
    	      this.allowSubjectPassthrough = defaults.allowSubjectPassthrough;
    	      this.celExpression = defaults.celExpression;
        }

        @CustomType.Setter
        public Builder allowSubjectAltNamesPassthrough(Boolean allowSubjectAltNamesPassthrough) {
            this.allowSubjectAltNamesPassthrough = Objects.requireNonNull(allowSubjectAltNamesPassthrough);
            return this;
        }
        @CustomType.Setter
        public Builder allowSubjectPassthrough(Boolean allowSubjectPassthrough) {
            this.allowSubjectPassthrough = Objects.requireNonNull(allowSubjectPassthrough);
            return this;
        }
        @CustomType.Setter
        public Builder celExpression(@Nullable CaPoolIssuancePolicyIdentityConstraintsCelExpression celExpression) {
            this.celExpression = celExpression;
            return this;
        }
        public CaPoolIssuancePolicyIdentityConstraints build() {
            final var o = new CaPoolIssuancePolicyIdentityConstraints();
            o.allowSubjectAltNamesPassthrough = allowSubjectAltNamesPassthrough;
            o.allowSubjectPassthrough = allowSubjectPassthrough;
            o.celExpression = celExpression;
            return o;
        }
    }
}
