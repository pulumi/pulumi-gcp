// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs Empty = new ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs();

    /**
     * Controls whether user traffic is allowed over this endpoint. Note that GCP-managed services may still use the endpoint even if this is false.
     * 
     */
    @Import(name="allowExternalTraffic")
    private @Nullable Output<Boolean> allowExternalTraffic;

    /**
     * @return Controls whether user traffic is allowed over this endpoint. Note that GCP-managed services may still use the endpoint even if this is false.
     * 
     */
    public Optional<Output<Boolean>> allowExternalTraffic() {
        return Optional.ofNullable(this.allowExternalTraffic);
    }

    /**
     * The cluster&#39;s DNS endpoint.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return The cluster&#39;s DNS endpoint.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    private ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs() {}

    private ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs(ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs $) {
        this.allowExternalTraffic = $.allowExternalTraffic;
        this.endpoint = $.endpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs $;

        public Builder() {
            $ = new ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs();
        }

        public Builder(ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs defaults) {
            $ = new ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowExternalTraffic Controls whether user traffic is allowed over this endpoint. Note that GCP-managed services may still use the endpoint even if this is false.
         * 
         * @return builder
         * 
         */
        public Builder allowExternalTraffic(@Nullable Output<Boolean> allowExternalTraffic) {
            $.allowExternalTraffic = allowExternalTraffic;
            return this;
        }

        /**
         * @param allowExternalTraffic Controls whether user traffic is allowed over this endpoint. Note that GCP-managed services may still use the endpoint even if this is false.
         * 
         * @return builder
         * 
         */
        public Builder allowExternalTraffic(Boolean allowExternalTraffic) {
            return allowExternalTraffic(Output.of(allowExternalTraffic));
        }

        /**
         * @param endpoint The cluster&#39;s DNS endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The cluster&#39;s DNS endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public ClusterControlPlaneEndpointsConfigDnsEndpointConfigArgs build() {
            return $;
        }
    }

}
