// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.InterconnectArgs;
import com.pulumi.gcp.compute.inputs.InterconnectState;
import com.pulumi.gcp.compute.outputs.InterconnectCircuitInfo;
import com.pulumi.gcp.compute.outputs.InterconnectExpectedOutage;
import com.pulumi.gcp.compute.outputs.InterconnectMacsec;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents an Interconnect resource. The Interconnect resource is a dedicated connection between
 * Google&#39;s network and your on-premises network.
 * 
 * To get more information about Interconnect, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/interconnects)
 * * How-to Guides
 *     * [Create a Dedicated Interconnect](https://cloud.google.com/network-connectivity/docs/interconnect/concepts/dedicated-overview)
 * 
 * ## Example Usage
 * 
 * ### Compute Interconnect Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.compute.Interconnect;
 * import com.pulumi.gcp.compute.InterconnectArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var example_interconnect = new Interconnect("example-interconnect", InterconnectArgs.builder()
 *             .name("example-interconnect")
 *             .customerName("example_customer")
 *             .interconnectType("DEDICATED")
 *             .linkType("LINK_TYPE_ETHERNET_10G_LR")
 *             .location(String.format("https://www.googleapis.com/compute/v1/projects/%s/global/interconnectLocations/iad-zone1-1", project.applyValue(getProjectResult -> getProjectResult.name())))
 *             .requestedLinkCount(1)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Interconnect can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/global/interconnects/{{name}}`
 * 
 * * `{{project}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, Interconnect can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/interconnect:Interconnect default projects/{{project}}/global/interconnects/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/interconnect:Interconnect default {{project}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/interconnect:Interconnect default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/interconnect:Interconnect")
public class Interconnect extends com.pulumi.resources.CustomResource {
    /**
     * Administrative status of the interconnect. When this is set to true, the Interconnect is
     * functional and can carry traffic. When set to false, no packets can be carried over the
     * interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
     * 
     */
    @Export(name="adminEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> adminEnabled;

    /**
     * @return Administrative status of the interconnect. When this is set to true, the Interconnect is
     * functional and can carry traffic. When set to false, no packets can be carried over the
     * interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
     * 
     */
    public Output<Optional<Boolean>> adminEnabled() {
        return Codegen.optional(this.adminEnabled);
    }
    /**
     * interconnects.list of features available for this Interconnect connection. Can take the value:
     * MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
     * ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
     * ports and MACsec isn&#39;t supported and enabling MACsec fails).
     * 
     */
    @Export(name="availableFeatures", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> availableFeatures;

    /**
     * @return interconnects.list of features available for this Interconnect connection. Can take the value:
     * MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
     * ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
     * ports and MACsec isn&#39;t supported and enabling MACsec fails).
     * 
     */
    public Output<List<String>> availableFeatures() {
        return this.availableFeatures;
    }
    /**
     * A list of CircuitInfo objects, that describe the individual circuits in this LAG.
     * Structure is documented below.
     * 
     */
    @Export(name="circuitInfos", refs={List.class,InterconnectCircuitInfo.class}, tree="[0,1]")
    private Output<List<InterconnectCircuitInfo>> circuitInfos;

    /**
     * @return A list of CircuitInfo objects, that describe the individual circuits in this LAG.
     * Structure is documented below.
     * 
     */
    public Output<List<InterconnectCircuitInfo>> circuitInfos() {
        return this.circuitInfos;
    }
    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Export(name="creationTimestamp", refs={String.class}, tree="[0]")
    private Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Output<String> creationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * Customer name, to put in the Letter of Authorization as the party authorized to request a
     * crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
     * for cross-cloud interconnect.
     * 
     */
    @Export(name="customerName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customerName;

    /**
     * @return Customer name, to put in the Letter of Authorization as the party authorized to request a
     * crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
     * for cross-cloud interconnect.
     * 
     */
    public Output<Optional<String>> customerName() {
        return Codegen.optional(this.customerName);
    }
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * A list of outages expected for this Interconnect.
     * Structure is documented below.
     * 
     */
    @Export(name="expectedOutages", refs={List.class,InterconnectExpectedOutage.class}, tree="[0,1]")
    private Output<List<InterconnectExpectedOutage>> expectedOutages;

    /**
     * @return A list of outages expected for this Interconnect.
     * Structure is documented below.
     * 
     */
    public Output<List<InterconnectExpectedOutage>> expectedOutages() {
        return this.expectedOutages;
    }
    /**
     * IP address configured on the Google side of the Interconnect link.
     * This can be used only for ping tests.
     * 
     */
    @Export(name="googleIpAddress", refs={String.class}, tree="[0]")
    private Output<String> googleIpAddress;

    /**
     * @return IP address configured on the Google side of the Interconnect link.
     * This can be used only for ping tests.
     * 
     */
    public Output<String> googleIpAddress() {
        return this.googleIpAddress;
    }
    /**
     * Google reference ID to be used when raising support tickets with Google or otherwise to debug
     * backend connectivity issues.
     * 
     */
    @Export(name="googleReferenceId", refs={String.class}, tree="[0]")
    private Output<String> googleReferenceId;

    /**
     * @return Google reference ID to be used when raising support tickets with Google or otherwise to debug
     * backend connectivity issues.
     * 
     */
    public Output<String> googleReferenceId() {
        return this.googleReferenceId;
    }
    /**
     * A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
     * 
     */
    @Export(name="interconnectAttachments", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> interconnectAttachments;

    /**
     * @return A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
     * 
     */
    public Output<List<String>> interconnectAttachments() {
        return this.interconnectAttachments;
    }
    /**
     * Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
     * Can take one of the following values:
     * - PARTNER: A partner-managed interconnection shared between customers though a partner.
     * - DEDICATED: A dedicated physical interconnection with the customer.
     *   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
     * 
     * ***
     * 
     */
    @Export(name="interconnectType", refs={String.class}, tree="[0]")
    private Output<String> interconnectType;

    /**
     * @return Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
     * Can take one of the following values:
     * - PARTNER: A partner-managed interconnection shared between customers though a partner.
     * - DEDICATED: A dedicated physical interconnection with the customer.
     *   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
     * 
     * ***
     * 
     */
    public Output<String> interconnectType() {
        return this.interconnectType;
    }
    /**
     * A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
     * of the labels set used for optimistic locking. The fingerprint is initially generated by
     * Compute Engine and changes after every request to modify or update labels.
     * You must always provide an up-to-date fingerprint hash in order to update or change labels,
     * otherwise the request will fail with error 412 conditionNotMet.
     * 
     */
    @Export(name="labelFingerprint", refs={String.class}, tree="[0]")
    private Output<String> labelFingerprint;

    /**
     * @return A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
     * of the labels set used for optimistic locking. The fingerprint is initially generated by
     * Compute Engine and changes after every request to modify or update labels.
     * You must always provide an up-to-date fingerprint hash in order to update or change labels,
     * otherwise the request will fail with error 412 conditionNotMet.
     * 
     */
    public Output<String> labelFingerprint() {
        return this.labelFingerprint;
    }
    /**
     * Labels for this resource. These can only be added or modified by the setLabels
     * method. Each label key/value pair must comply with RFC1035. Label values may be empty.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Labels for this resource. These can only be added or modified by the setLabels
     * method. Each label key/value pair must comply with RFC1035. Label values may be empty.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Type of link requested. Note that this field indicates the speed of each of the links in the
     * bundle, not the speed of the entire bundle. Can take one of the following values:
     * - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
     * - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
     * - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
     *   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
     * 
     */
    @Export(name="linkType", refs={String.class}, tree="[0]")
    private Output<String> linkType;

    /**
     * @return Type of link requested. Note that this field indicates the speed of each of the links in the
     * bundle, not the speed of the entire bundle. Can take one of the following values:
     * - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
     * - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
     * - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
     *   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
     * 
     */
    public Output<String> linkType() {
        return this.linkType;
    }
    /**
     * URL of the InterconnectLocation object that represents where this connection is to be provisioned.
     * Specifies the location inside Google&#39;s Networks, should not be passed in case of cross-cloud interconnect.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> location;

    /**
     * @return URL of the InterconnectLocation object that represents where this connection is to be provisioned.
     * Specifies the location inside Google&#39;s Networks, should not be passed in case of cross-cloud interconnect.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Configuration that enables Media Access Control security (MACsec) on the Cloud
     * Interconnect connection between Google and your on-premises router.
     * Structure is documented below.
     * 
     */
    @Export(name="macsec", refs={InterconnectMacsec.class}, tree="[0]")
    private Output</* @Nullable */ InterconnectMacsec> macsec;

    /**
     * @return Configuration that enables Media Access Control security (MACsec) on the Cloud
     * Interconnect connection between Google and your on-premises router.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InterconnectMacsec>> macsec() {
        return Codegen.optional(this.macsec);
    }
    /**
     * Enable or disable MACsec on this Interconnect connection.
     * MACsec enablement fails if the MACsec object is not specified.
     * 
     */
    @Export(name="macsecEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> macsecEnabled;

    /**
     * @return Enable or disable MACsec on this Interconnect connection.
     * MACsec enablement fails if the MACsec object is not specified.
     * 
     */
    public Output<Optional<Boolean>> macsecEnabled() {
        return Codegen.optional(this.macsecEnabled);
    }
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Email address to contact the customer NOC for operations and maintenance notifications
     * regarding this Interconnect. If specified, this will be used for notifications in addition to
     * all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
     * This field is required for users who sign up for Cloud Interconnect using workforce identity
     * federation.
     * 
     */
    @Export(name="nocContactEmail", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> nocContactEmail;

    /**
     * @return Email address to contact the customer NOC for operations and maintenance notifications
     * regarding this Interconnect. If specified, this will be used for notifications in addition to
     * all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
     * This field is required for users who sign up for Cloud Interconnect using workforce identity
     * federation.
     * 
     */
    public Output<Optional<String>> nocContactEmail() {
        return Codegen.optional(this.nocContactEmail);
    }
    /**
     * The current status of this Interconnect&#39;s functionality, which can take one of the following:
     * - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
     *   be provisioned on this Interconnect.
     * - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
     *   provisioned on this Interconnect.
     * - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
     *   attachments may be provisioned or updated on this Interconnect.
     * 
     */
    @Export(name="operationalStatus", refs={String.class}, tree="[0]")
    private Output<String> operationalStatus;

    /**
     * @return The current status of this Interconnect&#39;s functionality, which can take one of the following:
     * - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
     *   be provisioned on this Interconnect.
     * - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
     *   provisioned on this Interconnect.
     * - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
     *   attachments may be provisioned or updated on this Interconnect.
     * 
     */
    public Output<String> operationalStatus() {
        return this.operationalStatus;
    }
    /**
     * IP address configured on the customer side of the Interconnect link.
     * The customer should configure this IP address during turnup when prompted by Google NOC.
     * This can be used only for ping tests.
     * 
     */
    @Export(name="peerIpAddress", refs={String.class}, tree="[0]")
    private Output<String> peerIpAddress;

    /**
     * @return IP address configured on the customer side of the Interconnect link.
     * The customer should configure this IP address during turnup when prompted by Google NOC.
     * This can be used only for ping tests.
     * 
     */
    public Output<String> peerIpAddress() {
        return this.peerIpAddress;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Number of links actually provisioned in this interconnect.
     * 
     */
    @Export(name="provisionedLinkCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> provisionedLinkCount;

    /**
     * @return Number of links actually provisioned in this interconnect.
     * 
     */
    public Output<Integer> provisionedLinkCount() {
        return this.provisionedLinkCount;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
     * of Google&#39;s network that the interconnect is connected to.
     * 
     */
    @Export(name="remoteLocation", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> remoteLocation;

    /**
     * @return Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
     * of Google&#39;s network that the interconnect is connected to.
     * 
     */
    public Output<Optional<String>> remoteLocation() {
        return Codegen.optional(this.remoteLocation);
    }
    /**
     * interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
     * If specified then the connection is created on MACsec capable hardware ports. If not
     * specified, the default value is false, which allocates non-MACsec capable ports first if
     * available). Note that MACSEC is still technically allowed for compatibility reasons, but it
     * does not work with the API, and will be removed in an upcoming major version.
     * Each value may be one of: `MACSEC`, `IF_MACSEC`.
     * 
     */
    @Export(name="requestedFeatures", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> requestedFeatures;

    /**
     * @return interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
     * If specified then the connection is created on MACsec capable hardware ports. If not
     * specified, the default value is false, which allocates non-MACsec capable ports first if
     * available). Note that MACSEC is still technically allowed for compatibility reasons, but it
     * does not work with the API, and will be removed in an upcoming major version.
     * Each value may be one of: `MACSEC`, `IF_MACSEC`.
     * 
     */
    public Output<Optional<List<String>>> requestedFeatures() {
        return Codegen.optional(this.requestedFeatures);
    }
    /**
     * Target number of physical links in the link bundle, as requested by the customer.
     * 
     */
    @Export(name="requestedLinkCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> requestedLinkCount;

    /**
     * @return Target number of physical links in the link bundle, as requested by the customer.
     * 
     */
    public Output<Integer> requestedLinkCount() {
        return this.requestedLinkCount;
    }
    /**
     * Reserved for future use.
     * 
     */
    @Export(name="satisfiesPzs", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> satisfiesPzs;

    /**
     * @return Reserved for future use.
     * 
     */
    public Output<Boolean> satisfiesPzs() {
        return this.satisfiesPzs;
    }
    /**
     * (Output)
     * State of this notification. Note that the versions of this enum prefixed with &#34;NS_&#34; have
     * been deprecated in favor of the unprefixed values. Can take one of the following values:
     * - ACTIVE: This outage notification is active. The event could be in the past, present,
     *   or future. See startTime and endTime for scheduling.
     * - CANCELLED: The outage associated with this notification was cancelled before the
     *   outage was due to start.
     * - COMPLETED: The outage associated with this notification is complete.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return (Output)
     * State of this notification. Note that the versions of this enum prefixed with &#34;NS_&#34; have
     * been deprecated in favor of the unprefixed values. Can take one of the following values:
     * - ACTIVE: This outage notification is active. The event could be in the past, present,
     *   or future. See startTime and endTime for scheduling.
     * - CANCELLED: The outage associated with this notification was cancelled before the
     *   outage was due to start.
     * - COMPLETED: The outage associated with this notification is complete.
     * 
     */
    public Output<String> state() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Interconnect(java.lang.String name) {
        this(name, InterconnectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Interconnect(java.lang.String name, InterconnectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Interconnect(java.lang.String name, InterconnectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/interconnect:Interconnect", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Interconnect(java.lang.String name, Output<java.lang.String> id, @Nullable InterconnectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/interconnect:Interconnect", name, state, makeResourceOptions(options, id), false);
    }

    private static InterconnectArgs makeArgs(InterconnectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InterconnectArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Interconnect get(java.lang.String name, Output<java.lang.String> id, @Nullable InterconnectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Interconnect(name, id, state, options);
    }
}
