// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetLocationsLocation {
    /**
     * @return The friendly name for this location, typically a nearby city name. For example, &#34;Tokyo&#34;.
     * 
     */
    private String displayName;
    /**
     * @return Cross-service attributes for the location. For example `{&#34;cloud.googleapis.com/region&#34;: &#34;us-east1&#34;}`.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return The canonical id for this location. For example: &#34;us-east1&#34;..
     * 
     */
    private String locationId;
    /**
     * @return Service-specific metadata. For example the available capacity at the given location.
     * 
     */
    private Map<String,String> metadata;
    /**
     * @return Resource name for the location, which may vary between implementations. For example: &#34;projects/example-project/locations/us-east1&#34;.
     * 
     */
    private String name;

    private GetLocationsLocation() {}
    /**
     * @return The friendly name for this location, typically a nearby city name. For example, &#34;Tokyo&#34;.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Cross-service attributes for the location. For example `{&#34;cloud.googleapis.com/region&#34;: &#34;us-east1&#34;}`.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return The canonical id for this location. For example: &#34;us-east1&#34;..
     * 
     */
    public String locationId() {
        return this.locationId;
    }
    /**
     * @return Service-specific metadata. For example the available capacity at the given location.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }
    /**
     * @return Resource name for the location, which may vary between implementations. For example: &#34;projects/example-project/locations/us-east1&#34;.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocationsLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private Map<String,String> labels;
        private String locationId;
        private Map<String,String> metadata;
        private String name;
        public Builder() {}
        public Builder(GetLocationsLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.labels = defaults.labels;
    	      this.locationId = defaults.locationId;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder locationId(String locationId) {
            this.locationId = Objects.requireNonNull(locationId);
            return this;
        }
        @CustomType.Setter
        public Builder metadata(Map<String,String> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetLocationsLocation build() {
            final var o = new GetLocationsLocation();
            o.displayName = displayName;
            o.labels = labels;
            o.locationId = locationId;
            o.metadata = metadata;
            o.name = name;
            return o;
        }
    }
}
