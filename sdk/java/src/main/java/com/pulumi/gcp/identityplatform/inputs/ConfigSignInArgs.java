// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.identityplatform.inputs.ConfigSignInAnonymousArgs;
import com.pulumi.gcp.identityplatform.inputs.ConfigSignInEmailArgs;
import com.pulumi.gcp.identityplatform.inputs.ConfigSignInHashConfigArgs;
import com.pulumi.gcp.identityplatform.inputs.ConfigSignInPhoneNumberArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigSignInArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigSignInArgs Empty = new ConfigSignInArgs();

    /**
     * Whether to allow more than one account to have the same email.
     * 
     */
    @Import(name="allowDuplicateEmails")
    private @Nullable Output<Boolean> allowDuplicateEmails;

    /**
     * @return Whether to allow more than one account to have the same email.
     * 
     */
    public Optional<Output<Boolean>> allowDuplicateEmails() {
        return Optional.ofNullable(this.allowDuplicateEmails);
    }

    /**
     * Configuration options related to authenticating an anonymous user.
     * Structure is documented below.
     * 
     */
    @Import(name="anonymous")
    private @Nullable Output<ConfigSignInAnonymousArgs> anonymous;

    /**
     * @return Configuration options related to authenticating an anonymous user.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConfigSignInAnonymousArgs>> anonymous() {
        return Optional.ofNullable(this.anonymous);
    }

    /**
     * Configuration options related to authenticating a user by their email address.
     * Structure is documented below.
     * 
     */
    @Import(name="email")
    private @Nullable Output<ConfigSignInEmailArgs> email;

    /**
     * @return Configuration options related to authenticating a user by their email address.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConfigSignInEmailArgs>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * (Output)
     * Output only. Hash config information.
     * Structure is documented below.
     * 
     */
    @Import(name="hashConfigs")
    private @Nullable Output<List<ConfigSignInHashConfigArgs>> hashConfigs;

    /**
     * @return (Output)
     * Output only. Hash config information.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ConfigSignInHashConfigArgs>>> hashConfigs() {
        return Optional.ofNullable(this.hashConfigs);
    }

    /**
     * Configuration options related to authenticated a user by their phone number.
     * Structure is documented below.
     * 
     */
    @Import(name="phoneNumber")
    private @Nullable Output<ConfigSignInPhoneNumberArgs> phoneNumber;

    /**
     * @return Configuration options related to authenticated a user by their phone number.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConfigSignInPhoneNumberArgs>> phoneNumber() {
        return Optional.ofNullable(this.phoneNumber);
    }

    private ConfigSignInArgs() {}

    private ConfigSignInArgs(ConfigSignInArgs $) {
        this.allowDuplicateEmails = $.allowDuplicateEmails;
        this.anonymous = $.anonymous;
        this.email = $.email;
        this.hashConfigs = $.hashConfigs;
        this.phoneNumber = $.phoneNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigSignInArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigSignInArgs $;

        public Builder() {
            $ = new ConfigSignInArgs();
        }

        public Builder(ConfigSignInArgs defaults) {
            $ = new ConfigSignInArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowDuplicateEmails Whether to allow more than one account to have the same email.
         * 
         * @return builder
         * 
         */
        public Builder allowDuplicateEmails(@Nullable Output<Boolean> allowDuplicateEmails) {
            $.allowDuplicateEmails = allowDuplicateEmails;
            return this;
        }

        /**
         * @param allowDuplicateEmails Whether to allow more than one account to have the same email.
         * 
         * @return builder
         * 
         */
        public Builder allowDuplicateEmails(Boolean allowDuplicateEmails) {
            return allowDuplicateEmails(Output.of(allowDuplicateEmails));
        }

        /**
         * @param anonymous Configuration options related to authenticating an anonymous user.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder anonymous(@Nullable Output<ConfigSignInAnonymousArgs> anonymous) {
            $.anonymous = anonymous;
            return this;
        }

        /**
         * @param anonymous Configuration options related to authenticating an anonymous user.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder anonymous(ConfigSignInAnonymousArgs anonymous) {
            return anonymous(Output.of(anonymous));
        }

        /**
         * @param email Configuration options related to authenticating a user by their email address.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<ConfigSignInEmailArgs> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email Configuration options related to authenticating a user by their email address.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder email(ConfigSignInEmailArgs email) {
            return email(Output.of(email));
        }

        /**
         * @param hashConfigs (Output)
         * Output only. Hash config information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hashConfigs(@Nullable Output<List<ConfigSignInHashConfigArgs>> hashConfigs) {
            $.hashConfigs = hashConfigs;
            return this;
        }

        /**
         * @param hashConfigs (Output)
         * Output only. Hash config information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hashConfigs(List<ConfigSignInHashConfigArgs> hashConfigs) {
            return hashConfigs(Output.of(hashConfigs));
        }

        /**
         * @param hashConfigs (Output)
         * Output only. Hash config information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder hashConfigs(ConfigSignInHashConfigArgs... hashConfigs) {
            return hashConfigs(List.of(hashConfigs));
        }

        /**
         * @param phoneNumber Configuration options related to authenticated a user by their phone number.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(@Nullable Output<ConfigSignInPhoneNumberArgs> phoneNumber) {
            $.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * @param phoneNumber Configuration options related to authenticated a user by their phone number.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(ConfigSignInPhoneNumberArgs phoneNumber) {
            return phoneNumber(Output.of(phoneNumber));
        }

        public ConfigSignInArgs build() {
            return $;
        }
    }

}
