// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.InstanceFromTemplateNetworkInterfaceAccessConfigArgs;
import com.pulumi.gcp.compute.inputs.InstanceFromTemplateNetworkInterfaceAliasIpRangeArgs;
import com.pulumi.gcp.compute.inputs.InstanceFromTemplateNetworkInterfaceIpv6AccessConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceFromTemplateNetworkInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceFromTemplateNetworkInterfaceArgs Empty = new InstanceFromTemplateNetworkInterfaceArgs();

    @Import(name="accessConfigs")
    private @Nullable Output<List<InstanceFromTemplateNetworkInterfaceAccessConfigArgs>> accessConfigs;

    public Optional<Output<List<InstanceFromTemplateNetworkInterfaceAccessConfigArgs>>> accessConfigs() {
        return Optional.ofNullable(this.accessConfigs);
    }

    @Import(name="aliasIpRanges")
    private @Nullable Output<List<InstanceFromTemplateNetworkInterfaceAliasIpRangeArgs>> aliasIpRanges;

    public Optional<Output<List<InstanceFromTemplateNetworkInterfaceAliasIpRangeArgs>>> aliasIpRanges() {
        return Optional.ofNullable(this.aliasIpRanges);
    }

    @Import(name="ipv6AccessConfigs")
    private @Nullable Output<List<InstanceFromTemplateNetworkInterfaceIpv6AccessConfigArgs>> ipv6AccessConfigs;

    public Optional<Output<List<InstanceFromTemplateNetworkInterfaceIpv6AccessConfigArgs>>> ipv6AccessConfigs() {
        return Optional.ofNullable(this.ipv6AccessConfigs);
    }

    @Import(name="ipv6AccessType")
    private @Nullable Output<String> ipv6AccessType;

    public Optional<Output<String>> ipv6AccessType() {
        return Optional.ofNullable(this.ipv6AccessType);
    }

    /**
     * A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="network")
    private @Nullable Output<String> network;

    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    @Import(name="networkIp")
    private @Nullable Output<String> networkIp;

    public Optional<Output<String>> networkIp() {
        return Optional.ofNullable(this.networkIp);
    }

    @Import(name="nicType")
    private @Nullable Output<String> nicType;

    public Optional<Output<String>> nicType() {
        return Optional.ofNullable(this.nicType);
    }

    @Import(name="queueCount")
    private @Nullable Output<Integer> queueCount;

    public Optional<Output<Integer>> queueCount() {
        return Optional.ofNullable(this.queueCount);
    }

    @Import(name="stackType")
    private @Nullable Output<String> stackType;

    public Optional<Output<String>> stackType() {
        return Optional.ofNullable(this.stackType);
    }

    @Import(name="subnetwork")
    private @Nullable Output<String> subnetwork;

    public Optional<Output<String>> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }

    @Import(name="subnetworkProject")
    private @Nullable Output<String> subnetworkProject;

    public Optional<Output<String>> subnetworkProject() {
        return Optional.ofNullable(this.subnetworkProject);
    }

    private InstanceFromTemplateNetworkInterfaceArgs() {}

    private InstanceFromTemplateNetworkInterfaceArgs(InstanceFromTemplateNetworkInterfaceArgs $) {
        this.accessConfigs = $.accessConfigs;
        this.aliasIpRanges = $.aliasIpRanges;
        this.ipv6AccessConfigs = $.ipv6AccessConfigs;
        this.ipv6AccessType = $.ipv6AccessType;
        this.name = $.name;
        this.network = $.network;
        this.networkIp = $.networkIp;
        this.nicType = $.nicType;
        this.queueCount = $.queueCount;
        this.stackType = $.stackType;
        this.subnetwork = $.subnetwork;
        this.subnetworkProject = $.subnetworkProject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceFromTemplateNetworkInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceFromTemplateNetworkInterfaceArgs $;

        public Builder() {
            $ = new InstanceFromTemplateNetworkInterfaceArgs();
        }

        public Builder(InstanceFromTemplateNetworkInterfaceArgs defaults) {
            $ = new InstanceFromTemplateNetworkInterfaceArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessConfigs(@Nullable Output<List<InstanceFromTemplateNetworkInterfaceAccessConfigArgs>> accessConfigs) {
            $.accessConfigs = accessConfigs;
            return this;
        }

        public Builder accessConfigs(List<InstanceFromTemplateNetworkInterfaceAccessConfigArgs> accessConfigs) {
            return accessConfigs(Output.of(accessConfigs));
        }

        public Builder accessConfigs(InstanceFromTemplateNetworkInterfaceAccessConfigArgs... accessConfigs) {
            return accessConfigs(List.of(accessConfigs));
        }

        public Builder aliasIpRanges(@Nullable Output<List<InstanceFromTemplateNetworkInterfaceAliasIpRangeArgs>> aliasIpRanges) {
            $.aliasIpRanges = aliasIpRanges;
            return this;
        }

        public Builder aliasIpRanges(List<InstanceFromTemplateNetworkInterfaceAliasIpRangeArgs> aliasIpRanges) {
            return aliasIpRanges(Output.of(aliasIpRanges));
        }

        public Builder aliasIpRanges(InstanceFromTemplateNetworkInterfaceAliasIpRangeArgs... aliasIpRanges) {
            return aliasIpRanges(List.of(aliasIpRanges));
        }

        public Builder ipv6AccessConfigs(@Nullable Output<List<InstanceFromTemplateNetworkInterfaceIpv6AccessConfigArgs>> ipv6AccessConfigs) {
            $.ipv6AccessConfigs = ipv6AccessConfigs;
            return this;
        }

        public Builder ipv6AccessConfigs(List<InstanceFromTemplateNetworkInterfaceIpv6AccessConfigArgs> ipv6AccessConfigs) {
            return ipv6AccessConfigs(Output.of(ipv6AccessConfigs));
        }

        public Builder ipv6AccessConfigs(InstanceFromTemplateNetworkInterfaceIpv6AccessConfigArgs... ipv6AccessConfigs) {
            return ipv6AccessConfigs(List.of(ipv6AccessConfigs));
        }

        public Builder ipv6AccessType(@Nullable Output<String> ipv6AccessType) {
            $.ipv6AccessType = ipv6AccessType;
            return this;
        }

        public Builder ipv6AccessType(String ipv6AccessType) {
            return ipv6AccessType(Output.of(ipv6AccessType));
        }

        /**
         * @param name A unique name for the resource, required by GCE.
         * Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A unique name for the resource, required by GCE.
         * Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        public Builder networkIp(@Nullable Output<String> networkIp) {
            $.networkIp = networkIp;
            return this;
        }

        public Builder networkIp(String networkIp) {
            return networkIp(Output.of(networkIp));
        }

        public Builder nicType(@Nullable Output<String> nicType) {
            $.nicType = nicType;
            return this;
        }

        public Builder nicType(String nicType) {
            return nicType(Output.of(nicType));
        }

        public Builder queueCount(@Nullable Output<Integer> queueCount) {
            $.queueCount = queueCount;
            return this;
        }

        public Builder queueCount(Integer queueCount) {
            return queueCount(Output.of(queueCount));
        }

        public Builder stackType(@Nullable Output<String> stackType) {
            $.stackType = stackType;
            return this;
        }

        public Builder stackType(String stackType) {
            return stackType(Output.of(stackType));
        }

        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        public Builder subnetwork(String subnetwork) {
            return subnetwork(Output.of(subnetwork));
        }

        public Builder subnetworkProject(@Nullable Output<String> subnetworkProject) {
            $.subnetworkProject = subnetworkProject;
            return this;
        }

        public Builder subnetworkProject(String subnetworkProject) {
            return subnetworkProject(Output.of(subnetworkProject));
        }

        public InstanceFromTemplateNetworkInterfaceArgs build() {
            return $;
        }
    }

}
