// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAssetIamPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAssetIamPolicyArgs Empty = new GetAssetIamPolicyArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="asset", required=true)
    private Output<String> asset;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> asset() {
        return this.asset;
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="dataplexZone", required=true)
    private Output<String> dataplexZone;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> dataplexZone() {
        return this.dataplexZone;
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="lake", required=true)
    private Output<String> lake;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> lake() {
        return this.lake;
    }

    /**
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
     * location is specified, it is taken from the provider configuration.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
     * location is specified, it is taken from the provider configuration.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetAssetIamPolicyArgs() {}

    private GetAssetIamPolicyArgs(GetAssetIamPolicyArgs $) {
        this.asset = $.asset;
        this.dataplexZone = $.dataplexZone;
        this.lake = $.lake;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAssetIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAssetIamPolicyArgs $;

        public Builder() {
            $ = new GetAssetIamPolicyArgs();
        }

        public Builder(GetAssetIamPolicyArgs defaults) {
            $ = new GetAssetIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param asset Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder asset(Output<String> asset) {
            $.asset = asset;
            return this;
        }

        /**
         * @param asset Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder asset(String asset) {
            return asset(Output.of(asset));
        }

        /**
         * @param dataplexZone Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder dataplexZone(Output<String> dataplexZone) {
            $.dataplexZone = dataplexZone;
            return this;
        }

        /**
         * @param dataplexZone Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder dataplexZone(String dataplexZone) {
            return dataplexZone(Output.of(dataplexZone));
        }

        /**
         * @param lake Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder lake(Output<String> lake) {
            $.lake = lake;
            return this;
        }

        /**
         * @param lake Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder lake(String lake) {
            return lake(Output.of(lake));
        }

        /**
         * @param location Used to find the parent resource to bind the IAM policy to. If not specified,
         * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
         * location is specified, it is taken from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Used to find the parent resource to bind the IAM policy to. If not specified,
         * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
         * location is specified, it is taken from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetAssetIamPolicyArgs build() {
            if ($.asset == null) {
                throw new MissingRequiredPropertyException("GetAssetIamPolicyArgs", "asset");
            }
            if ($.dataplexZone == null) {
                throw new MissingRequiredPropertyException("GetAssetIamPolicyArgs", "dataplexZone");
            }
            if ($.lake == null) {
                throw new MissingRequiredPropertyException("GetAssetIamPolicyArgs", "lake");
            }
            return $;
        }
    }

}
