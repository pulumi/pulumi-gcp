// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccessPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccessPolicyPlainArgs Empty = new GetAccessPolicyPlainArgs();

    /**
     * The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: `organizations/{{organization_id}}`
     * 
     */
    @Import(name="parent", required=true)
    private String parent;

    /**
     * @return The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: `organizations/{{organization_id}}`
     * 
     */
    public String parent() {
        return this.parent;
    }

    /**
     * Folder or project on which this policy is applicable. Format: `folders/{{folder_id}}` or `projects/{{project_number}}`
     * 
     */
    @Import(name="scopes")
    private @Nullable List<String> scopes;

    /**
     * @return Folder or project on which this policy is applicable. Format: `folders/{{folder_id}}` or `projects/{{project_number}}`
     * 
     */
    public Optional<List<String>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    private GetAccessPolicyPlainArgs() {}

    private GetAccessPolicyPlainArgs(GetAccessPolicyPlainArgs $) {
        this.parent = $.parent;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccessPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccessPolicyPlainArgs $;

        public Builder() {
            $ = new GetAccessPolicyPlainArgs();
        }

        public Builder(GetAccessPolicyPlainArgs defaults) {
            $ = new GetAccessPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param parent The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: `organizations/{{organization_id}}`
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param scopes Folder or project on which this policy is applicable. Format: `folders/{{folder_id}}` or `projects/{{project_number}}`
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable List<String> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Folder or project on which this policy is applicable. Format: `folders/{{folder_id}}` or `projects/{{project_number}}`
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public GetAccessPolicyPlainArgs build() {
            if ($.parent == null) {
                throw new MissingRequiredPropertyException("GetAccessPolicyPlainArgs", "parent");
            }
            return $;
        }
    }

}
