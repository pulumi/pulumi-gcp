// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.cloudbuild.outputs.TriggerGithubPullRequest;
import com.pulumi.gcp.cloudbuild.outputs.TriggerGithubPush;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TriggerGithub {
    /**
     * @return Name of the repository. For example: The name for
     * https://github.com/googlecloudplatform/cloud-builders is &#34;cloud-builders&#34;.
     * 
     */
    private @Nullable String name;
    /**
     * @return Owner of the repository. For example: The owner for
     * https://github.com/googlecloudplatform/cloud-builders is &#34;googlecloudplatform&#34;.
     * 
     */
    private @Nullable String owner;
    /**
     * @return filter to match changes in pull requests. Specify only one of `pull_request` or `push`.
     * Structure is documented below.
     * 
     */
    private @Nullable TriggerGithubPullRequest pullRequest;
    /**
     * @return filter to match changes in refs, like branches or tags. Specify only one of `pull_request` or `push`.
     * Structure is documented below.
     * 
     */
    private @Nullable TriggerGithubPush push;

    private TriggerGithub() {}
    /**
     * @return Name of the repository. For example: The name for
     * https://github.com/googlecloudplatform/cloud-builders is &#34;cloud-builders&#34;.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Owner of the repository. For example: The owner for
     * https://github.com/googlecloudplatform/cloud-builders is &#34;googlecloudplatform&#34;.
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return filter to match changes in pull requests. Specify only one of `pull_request` or `push`.
     * Structure is documented below.
     * 
     */
    public Optional<TriggerGithubPullRequest> pullRequest() {
        return Optional.ofNullable(this.pullRequest);
    }
    /**
     * @return filter to match changes in refs, like branches or tags. Specify only one of `pull_request` or `push`.
     * Structure is documented below.
     * 
     */
    public Optional<TriggerGithubPush> push() {
        return Optional.ofNullable(this.push);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerGithub defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String name;
        private @Nullable String owner;
        private @Nullable TriggerGithubPullRequest pullRequest;
        private @Nullable TriggerGithubPush push;
        public Builder() {}
        public Builder(TriggerGithub defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.pullRequest = defaults.pullRequest;
    	      this.push = defaults.push;
        }

        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder pullRequest(@Nullable TriggerGithubPullRequest pullRequest) {
            this.pullRequest = pullRequest;
            return this;
        }
        @CustomType.Setter
        public Builder push(@Nullable TriggerGithubPush push) {
            this.push = push;
            return this;
        }
        public TriggerGithub build() {
            final var o = new TriggerGithub();
            o.name = name;
            o.owner = owner;
            o.pullRequest = pullRequest;
            o.push = push;
            return o;
        }
    }
}
