// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppHostingTrafficRolloutPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppHostingTrafficRolloutPolicyArgs Empty = new AppHostingTrafficRolloutPolicyArgs();

    /**
     * Specifies a branch that triggers a new build to be started with this
     * policy. If not set, no automatic rollouts will happen.
     * 
     */
    @Import(name="codebaseBranch")
    private @Nullable Output<String> codebaseBranch;

    /**
     * @return Specifies a branch that triggers a new build to be started with this
     * policy. If not set, no automatic rollouts will happen.
     * 
     */
    public Optional<Output<String>> codebaseBranch() {
        return Optional.ofNullable(this.codebaseBranch);
    }

    /**
     * A flag that, if true, prevents rollouts from being created via this RolloutPolicy.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return A flag that, if true, prevents rollouts from being created via this RolloutPolicy.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * (Output)
     * If disabled is set, the time at which the rollouts were disabled.
     * 
     */
    @Import(name="disabledTime")
    private @Nullable Output<String> disabledTime;

    /**
     * @return (Output)
     * If disabled is set, the time at which the rollouts were disabled.
     * 
     */
    public Optional<Output<String>> disabledTime() {
        return Optional.ofNullable(this.disabledTime);
    }

    private AppHostingTrafficRolloutPolicyArgs() {}

    private AppHostingTrafficRolloutPolicyArgs(AppHostingTrafficRolloutPolicyArgs $) {
        this.codebaseBranch = $.codebaseBranch;
        this.disabled = $.disabled;
        this.disabledTime = $.disabledTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppHostingTrafficRolloutPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppHostingTrafficRolloutPolicyArgs $;

        public Builder() {
            $ = new AppHostingTrafficRolloutPolicyArgs();
        }

        public Builder(AppHostingTrafficRolloutPolicyArgs defaults) {
            $ = new AppHostingTrafficRolloutPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param codebaseBranch Specifies a branch that triggers a new build to be started with this
         * policy. If not set, no automatic rollouts will happen.
         * 
         * @return builder
         * 
         */
        public Builder codebaseBranch(@Nullable Output<String> codebaseBranch) {
            $.codebaseBranch = codebaseBranch;
            return this;
        }

        /**
         * @param codebaseBranch Specifies a branch that triggers a new build to be started with this
         * policy. If not set, no automatic rollouts will happen.
         * 
         * @return builder
         * 
         */
        public Builder codebaseBranch(String codebaseBranch) {
            return codebaseBranch(Output.of(codebaseBranch));
        }

        /**
         * @param disabled A flag that, if true, prevents rollouts from being created via this RolloutPolicy.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled A flag that, if true, prevents rollouts from being created via this RolloutPolicy.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param disabledTime (Output)
         * If disabled is set, the time at which the rollouts were disabled.
         * 
         * @return builder
         * 
         */
        public Builder disabledTime(@Nullable Output<String> disabledTime) {
            $.disabledTime = disabledTime;
            return this;
        }

        /**
         * @param disabledTime (Output)
         * If disabled is set, the time at which the rollouts were disabled.
         * 
         * @return builder
         * 
         */
        public Builder disabledTime(String disabledTime) {
            return disabledTime(Output.of(disabledTime));
        }

        public AppHostingTrafficRolloutPolicyArgs build() {
            return $;
        }
    }

}
