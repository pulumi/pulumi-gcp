// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableViewArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableViewArgs Empty = new TableViewArgs();

    /**
     * A query whose result is persisted.
     * 
     */
    @Import(name="query", required=true)
    private Output<String> query;

    /**
     * @return A query whose result is persisted.
     * 
     */
    public Output<String> query() {
        return this.query;
    }

    /**
     * Specifies whether to use BigQuery&#39;s legacy SQL for this view.
     * The default value is true. If set to false, the view will use BigQuery&#39;s standard SQL.
     * 
     */
    @Import(name="useLegacySql")
    private @Nullable Output<Boolean> useLegacySql;

    /**
     * @return Specifies whether to use BigQuery&#39;s legacy SQL for this view.
     * The default value is true. If set to false, the view will use BigQuery&#39;s standard SQL.
     * 
     */
    public Optional<Output<Boolean>> useLegacySql() {
        return Optional.ofNullable(this.useLegacySql);
    }

    private TableViewArgs() {}

    private TableViewArgs(TableViewArgs $) {
        this.query = $.query;
        this.useLegacySql = $.useLegacySql;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableViewArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableViewArgs $;

        public Builder() {
            $ = new TableViewArgs();
        }

        public Builder(TableViewArgs defaults) {
            $ = new TableViewArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param query A query whose result is persisted.
         * 
         * @return builder
         * 
         */
        public Builder query(Output<String> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query A query whose result is persisted.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            return query(Output.of(query));
        }

        /**
         * @param useLegacySql Specifies whether to use BigQuery&#39;s legacy SQL for this view.
         * The default value is true. If set to false, the view will use BigQuery&#39;s standard SQL.
         * 
         * @return builder
         * 
         */
        public Builder useLegacySql(@Nullable Output<Boolean> useLegacySql) {
            $.useLegacySql = useLegacySql;
            return this;
        }

        /**
         * @param useLegacySql Specifies whether to use BigQuery&#39;s legacy SQL for this view.
         * The default value is true. If set to false, the view will use BigQuery&#39;s standard SQL.
         * 
         * @return builder
         * 
         */
        public Builder useLegacySql(Boolean useLegacySql) {
            return useLegacySql(Output.of(useLegacySql));
        }

        public TableViewArgs build() {
            $.query = Objects.requireNonNull($.query, "expected parameter 'query' to be non-null");
            return $;
        }
    }

}
