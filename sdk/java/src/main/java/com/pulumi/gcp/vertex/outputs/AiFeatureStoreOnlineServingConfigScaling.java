// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class AiFeatureStoreOnlineServingConfigScaling {
    /**
     * @return The maximum number of nodes to scale up to. Must be greater than minNodeCount, and less than or equal to 10 times of &#39;minNodeCount&#39;.
     * 
     */
    private Integer maxNodeCount;
    /**
     * @return The minimum number of nodes to scale down to. Must be greater than or equal to 1.
     * 
     */
    private Integer minNodeCount;

    private AiFeatureStoreOnlineServingConfigScaling() {}
    /**
     * @return The maximum number of nodes to scale up to. Must be greater than minNodeCount, and less than or equal to 10 times of &#39;minNodeCount&#39;.
     * 
     */
    public Integer maxNodeCount() {
        return this.maxNodeCount;
    }
    /**
     * @return The minimum number of nodes to scale down to. Must be greater than or equal to 1.
     * 
     */
    public Integer minNodeCount() {
        return this.minNodeCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiFeatureStoreOnlineServingConfigScaling defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxNodeCount;
        private Integer minNodeCount;
        public Builder() {}
        public Builder(AiFeatureStoreOnlineServingConfigScaling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxNodeCount = defaults.maxNodeCount;
    	      this.minNodeCount = defaults.minNodeCount;
        }

        @CustomType.Setter
        public Builder maxNodeCount(Integer maxNodeCount) {
            this.maxNodeCount = Objects.requireNonNull(maxNodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder minNodeCount(Integer minNodeCount) {
            this.minNodeCount = Objects.requireNonNull(minNodeCount);
            return this;
        }
        public AiFeatureStoreOnlineServingConfigScaling build() {
            final var o = new AiFeatureStoreOnlineServingConfigScaling();
            o.maxNodeCount = maxNodeCount;
            o.minNodeCount = minNodeCount;
            return o;
        }
    }
}
