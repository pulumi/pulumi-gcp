// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.PreviewFeatureArgs;
import com.pulumi.gcp.compute.inputs.PreviewFeatureState;
import com.pulumi.gcp.compute.outputs.PreviewFeatureRolloutOperation;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a single Google Compute Engine preview feature such as Alpha API access, which can be enabled or disabled for a project.
 * 
 * To get more information about PreviewFeature, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/PreviewFeatures)
 * * How-to Guides
 *     * [Use the Compute Engine alpha API](https://cloud.google.com/compute/docs/reference/rest/alpha)
 * 
 * ## Example Usage
 * 
 * ### Preview Feature Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.PreviewFeature;
 * import com.pulumi.gcp.compute.PreviewFeatureArgs;
 * import com.pulumi.gcp.compute.inputs.PreviewFeatureRolloutOperationArgs;
 * import com.pulumi.gcp.compute.inputs.PreviewFeatureRolloutOperationRolloutInputArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var gcePreviewFeature = new PreviewFeature("gcePreviewFeature", PreviewFeatureArgs.builder()
 *             .name("alpha-api-access")
 *             .activationStatus("DISABLED")
 *             .rolloutOperation(PreviewFeatureRolloutOperationArgs.builder()
 *                 .rolloutInput(PreviewFeatureRolloutOperationRolloutInputArgs.builder()
 *                     .predefinedRolloutPlan("ROLLOUT_PLAN_FAST_ROLLOUT")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * PreviewFeature can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/global/previewFeatures/{{name}}`
 * 
 * * `{{project}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, PreviewFeature can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/previewFeature:PreviewFeature default projects/{{project}}/global/previewFeatures/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/previewFeature:PreviewFeature default {{project}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/previewFeature:PreviewFeature default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/previewFeature:PreviewFeature")
public class PreviewFeature extends com.pulumi.resources.CustomResource {
    /**
     * The activation status of the preview feature.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    @Export(name="activationStatus", refs={String.class}, tree="[0]")
    private Output<String> activationStatus;

    /**
     * @return The activation status of the preview feature.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    public Output<String> activationStatus() {
        return this.activationStatus;
    }
    /**
     * The name of the preview feature.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the preview feature.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The rollout operation of the feature.
     * Structure is documented below.
     * 
     */
    @Export(name="rolloutOperation", refs={PreviewFeatureRolloutOperation.class}, tree="[0]")
    private Output</* @Nullable */ PreviewFeatureRolloutOperation> rolloutOperation;

    /**
     * @return The rollout operation of the feature.
     * Structure is documented below.
     * 
     */
    public Output<Optional<PreviewFeatureRolloutOperation>> rolloutOperation() {
        return Codegen.optional(this.rolloutOperation);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PreviewFeature(java.lang.String name) {
        this(name, PreviewFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PreviewFeature(java.lang.String name, PreviewFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PreviewFeature(java.lang.String name, PreviewFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/previewFeature:PreviewFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PreviewFeature(java.lang.String name, Output<java.lang.String> id, @Nullable PreviewFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/previewFeature:PreviewFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static PreviewFeatureArgs makeArgs(PreviewFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PreviewFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PreviewFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable PreviewFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PreviewFeature(name, id, state, options);
    }
}
