// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvKeystoreState extends com.pulumi.resources.ResourceArgs {

    public static final EnvKeystoreState Empty = new EnvKeystoreState();

    /**
     * Aliases in this keystore.
     * 
     */
    @Import(name="aliases")
    private @Nullable Output<List<String>> aliases;

    /**
     * @return Aliases in this keystore.
     * 
     */
    public Optional<Output<List<String>>> aliases() {
        return Optional.ofNullable(this.aliases);
    }

    /**
     * The Apigee environment group associated with the Apigee environment,
     * in the format `organizations/{{org_name}}/environments/{{env_name}}`.
     * 
     * ***
     * 
     */
    @Import(name="envId")
    private @Nullable Output<String> envId;

    /**
     * @return The Apigee environment group associated with the Apigee environment,
     * in the format `organizations/{{org_name}}/environments/{{env_name}}`.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> envId() {
        return Optional.ofNullable(this.envId);
    }

    /**
     * The name of the newly created keystore.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the newly created keystore.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private EnvKeystoreState() {}

    private EnvKeystoreState(EnvKeystoreState $) {
        this.aliases = $.aliases;
        this.envId = $.envId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvKeystoreState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvKeystoreState $;

        public Builder() {
            $ = new EnvKeystoreState();
        }

        public Builder(EnvKeystoreState defaults) {
            $ = new EnvKeystoreState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aliases Aliases in this keystore.
         * 
         * @return builder
         * 
         */
        public Builder aliases(@Nullable Output<List<String>> aliases) {
            $.aliases = aliases;
            return this;
        }

        /**
         * @param aliases Aliases in this keystore.
         * 
         * @return builder
         * 
         */
        public Builder aliases(List<String> aliases) {
            return aliases(Output.of(aliases));
        }

        /**
         * @param aliases Aliases in this keystore.
         * 
         * @return builder
         * 
         */
        public Builder aliases(String... aliases) {
            return aliases(List.of(aliases));
        }

        /**
         * @param envId The Apigee environment group associated with the Apigee environment,
         * in the format `organizations/{{org_name}}/environments/{{env_name}}`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder envId(@Nullable Output<String> envId) {
            $.envId = envId;
            return this;
        }

        /**
         * @param envId The Apigee environment group associated with the Apigee environment,
         * in the format `organizations/{{org_name}}/environments/{{env_name}}`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder envId(String envId) {
            return envId(Output.of(envId));
        }

        /**
         * @param name The name of the newly created keystore.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the newly created keystore.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public EnvKeystoreState build() {
            return $;
        }
    }

}
