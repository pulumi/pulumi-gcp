// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.eventarc.inputs.PipelineMediationTransformationArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineMediationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineMediationArgs Empty = new PipelineMediationArgs();

    /**
     * Transformation defines the way to transform an incoming message.
     * Structure is documented below.
     * 
     */
    @Import(name="transformation")
    private @Nullable Output<PipelineMediationTransformationArgs> transformation;

    /**
     * @return Transformation defines the way to transform an incoming message.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PipelineMediationTransformationArgs>> transformation() {
        return Optional.ofNullable(this.transformation);
    }

    private PipelineMediationArgs() {}

    private PipelineMediationArgs(PipelineMediationArgs $) {
        this.transformation = $.transformation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineMediationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineMediationArgs $;

        public Builder() {
            $ = new PipelineMediationArgs();
        }

        public Builder(PipelineMediationArgs defaults) {
            $ = new PipelineMediationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param transformation Transformation defines the way to transform an incoming message.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder transformation(@Nullable Output<PipelineMediationTransformationArgs> transformation) {
            $.transformation = transformation;
            return this;
        }

        /**
         * @param transformation Transformation defines the way to transform an incoming message.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder transformation(PipelineMediationTransformationArgs transformation) {
            return transformation(Output.of(transformation));
        }

        public PipelineMediationArgs build() {
            return $;
        }
    }

}
