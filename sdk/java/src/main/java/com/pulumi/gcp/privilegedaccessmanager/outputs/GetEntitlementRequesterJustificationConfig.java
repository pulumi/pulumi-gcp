// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.privilegedaccessmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.privilegedaccessmanager.outputs.GetEntitlementRequesterJustificationConfigNotMandatory;
import com.pulumi.gcp.privilegedaccessmanager.outputs.GetEntitlementRequesterJustificationConfigUnstructured;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEntitlementRequesterJustificationConfig {
    /**
     * @return The justification is not mandatory but can be provided in any of the supported formats.
     * 
     */
    private List<GetEntitlementRequesterJustificationConfigNotMandatory> notMandatories;
    /**
     * @return The requester has to provide a justification in the form of free flowing text.
     * 
     */
    private List<GetEntitlementRequesterJustificationConfigUnstructured> unstructureds;

    private GetEntitlementRequesterJustificationConfig() {}
    /**
     * @return The justification is not mandatory but can be provided in any of the supported formats.
     * 
     */
    public List<GetEntitlementRequesterJustificationConfigNotMandatory> notMandatories() {
        return this.notMandatories;
    }
    /**
     * @return The requester has to provide a justification in the form of free flowing text.
     * 
     */
    public List<GetEntitlementRequesterJustificationConfigUnstructured> unstructureds() {
        return this.unstructureds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntitlementRequesterJustificationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEntitlementRequesterJustificationConfigNotMandatory> notMandatories;
        private List<GetEntitlementRequesterJustificationConfigUnstructured> unstructureds;
        public Builder() {}
        public Builder(GetEntitlementRequesterJustificationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.notMandatories = defaults.notMandatories;
    	      this.unstructureds = defaults.unstructureds;
        }

        @CustomType.Setter
        public Builder notMandatories(List<GetEntitlementRequesterJustificationConfigNotMandatory> notMandatories) {
            if (notMandatories == null) {
              throw new MissingRequiredPropertyException("GetEntitlementRequesterJustificationConfig", "notMandatories");
            }
            this.notMandatories = notMandatories;
            return this;
        }
        public Builder notMandatories(GetEntitlementRequesterJustificationConfigNotMandatory... notMandatories) {
            return notMandatories(List.of(notMandatories));
        }
        @CustomType.Setter
        public Builder unstructureds(List<GetEntitlementRequesterJustificationConfigUnstructured> unstructureds) {
            if (unstructureds == null) {
              throw new MissingRequiredPropertyException("GetEntitlementRequesterJustificationConfig", "unstructureds");
            }
            this.unstructureds = unstructureds;
            return this;
        }
        public Builder unstructureds(GetEntitlementRequesterJustificationConfigUnstructured... unstructureds) {
            return unstructureds(List.of(unstructureds));
        }
        public GetEntitlementRequesterJustificationConfig build() {
            final var _resultValue = new GetEntitlementRequesterJustificationConfig();
            _resultValue.notMandatories = notMandatories;
            _resultValue.unstructureds = unstructureds;
            return _resultValue;
        }
    }
}
