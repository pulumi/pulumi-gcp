// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.integrationconnectors.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.integrationconnectors.outputs.ConnectionAuthConfigOauth2ClientCredentialsClientSecret;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionAuthConfigOauth2ClientCredentials {
    /**
     * @return Secret version of Password for Authentication.
     * 
     */
    private String clientId;
    /**
     * @return Secret version reference containing the client secret.
     * Structure is documented below.
     * 
     */
    private @Nullable ConnectionAuthConfigOauth2ClientCredentialsClientSecret clientSecret;

    private ConnectionAuthConfigOauth2ClientCredentials() {}
    /**
     * @return Secret version of Password for Authentication.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return Secret version reference containing the client secret.
     * Structure is documented below.
     * 
     */
    public Optional<ConnectionAuthConfigOauth2ClientCredentialsClientSecret> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionAuthConfigOauth2ClientCredentials defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private @Nullable ConnectionAuthConfigOauth2ClientCredentialsClientSecret clientSecret;
        public Builder() {}
        public Builder(ConnectionAuthConfigOauth2ClientCredentials defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("ConnectionAuthConfigOauth2ClientCredentials", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(@Nullable ConnectionAuthConfigOauth2ClientCredentialsClientSecret clientSecret) {

            this.clientSecret = clientSecret;
            return this;
        }
        public ConnectionAuthConfigOauth2ClientCredentials build() {
            final var _resultValue = new ConnectionAuthConfigOauth2ClientCredentials();
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            return _resultValue;
        }
    }
}
