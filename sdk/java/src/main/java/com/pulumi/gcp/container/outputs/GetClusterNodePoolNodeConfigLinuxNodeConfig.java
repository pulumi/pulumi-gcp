// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.container.outputs.GetClusterNodePoolNodeConfigLinuxNodeConfigHugepagesConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClusterNodePoolNodeConfigLinuxNodeConfig {
    /**
     * @return cgroupMode specifies the cgroup mode to be used on the node.
     * 
     */
    private String cgroupMode;
    /**
     * @return Amounts for 2M and 1G hugepages.
     * 
     */
    private List<GetClusterNodePoolNodeConfigLinuxNodeConfigHugepagesConfig> hugepagesConfigs;
    /**
     * @return The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
     * 
     */
    private Map<String,String> sysctls;
    /**
     * @return The Linux kernel transparent hugepage defrag setting.
     * 
     */
    private String transparentHugepageDefrag;
    /**
     * @return The Linux kernel transparent hugepage setting.
     * 
     */
    private String transparentHugepageEnabled;

    private GetClusterNodePoolNodeConfigLinuxNodeConfig() {}
    /**
     * @return cgroupMode specifies the cgroup mode to be used on the node.
     * 
     */
    public String cgroupMode() {
        return this.cgroupMode;
    }
    /**
     * @return Amounts for 2M and 1G hugepages.
     * 
     */
    public List<GetClusterNodePoolNodeConfigLinuxNodeConfigHugepagesConfig> hugepagesConfigs() {
        return this.hugepagesConfigs;
    }
    /**
     * @return The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
     * 
     */
    public Map<String,String> sysctls() {
        return this.sysctls;
    }
    /**
     * @return The Linux kernel transparent hugepage defrag setting.
     * 
     */
    public String transparentHugepageDefrag() {
        return this.transparentHugepageDefrag;
    }
    /**
     * @return The Linux kernel transparent hugepage setting.
     * 
     */
    public String transparentHugepageEnabled() {
        return this.transparentHugepageEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterNodePoolNodeConfigLinuxNodeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cgroupMode;
        private List<GetClusterNodePoolNodeConfigLinuxNodeConfigHugepagesConfig> hugepagesConfigs;
        private Map<String,String> sysctls;
        private String transparentHugepageDefrag;
        private String transparentHugepageEnabled;
        public Builder() {}
        public Builder(GetClusterNodePoolNodeConfigLinuxNodeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cgroupMode = defaults.cgroupMode;
    	      this.hugepagesConfigs = defaults.hugepagesConfigs;
    	      this.sysctls = defaults.sysctls;
    	      this.transparentHugepageDefrag = defaults.transparentHugepageDefrag;
    	      this.transparentHugepageEnabled = defaults.transparentHugepageEnabled;
        }

        @CustomType.Setter
        public Builder cgroupMode(String cgroupMode) {
            if (cgroupMode == null) {
              throw new MissingRequiredPropertyException("GetClusterNodePoolNodeConfigLinuxNodeConfig", "cgroupMode");
            }
            this.cgroupMode = cgroupMode;
            return this;
        }
        @CustomType.Setter
        public Builder hugepagesConfigs(List<GetClusterNodePoolNodeConfigLinuxNodeConfigHugepagesConfig> hugepagesConfigs) {
            if (hugepagesConfigs == null) {
              throw new MissingRequiredPropertyException("GetClusterNodePoolNodeConfigLinuxNodeConfig", "hugepagesConfigs");
            }
            this.hugepagesConfigs = hugepagesConfigs;
            return this;
        }
        public Builder hugepagesConfigs(GetClusterNodePoolNodeConfigLinuxNodeConfigHugepagesConfig... hugepagesConfigs) {
            return hugepagesConfigs(List.of(hugepagesConfigs));
        }
        @CustomType.Setter
        public Builder sysctls(Map<String,String> sysctls) {
            if (sysctls == null) {
              throw new MissingRequiredPropertyException("GetClusterNodePoolNodeConfigLinuxNodeConfig", "sysctls");
            }
            this.sysctls = sysctls;
            return this;
        }
        @CustomType.Setter
        public Builder transparentHugepageDefrag(String transparentHugepageDefrag) {
            if (transparentHugepageDefrag == null) {
              throw new MissingRequiredPropertyException("GetClusterNodePoolNodeConfigLinuxNodeConfig", "transparentHugepageDefrag");
            }
            this.transparentHugepageDefrag = transparentHugepageDefrag;
            return this;
        }
        @CustomType.Setter
        public Builder transparentHugepageEnabled(String transparentHugepageEnabled) {
            if (transparentHugepageEnabled == null) {
              throw new MissingRequiredPropertyException("GetClusterNodePoolNodeConfigLinuxNodeConfig", "transparentHugepageEnabled");
            }
            this.transparentHugepageEnabled = transparentHugepageEnabled;
            return this;
        }
        public GetClusterNodePoolNodeConfigLinuxNodeConfig build() {
            final var _resultValue = new GetClusterNodePoolNodeConfigLinuxNodeConfig();
            _resultValue.cgroupMode = cgroupMode;
            _resultValue.hugepagesConfigs = hugepagesConfigs;
            _resultValue.sysctls = sysctls;
            _resultValue.transparentHugepageDefrag = transparentHugepageDefrag;
            _resultValue.transparentHugepageEnabled = transparentHugepageEnabled;
            return _resultValue;
        }
    }
}
