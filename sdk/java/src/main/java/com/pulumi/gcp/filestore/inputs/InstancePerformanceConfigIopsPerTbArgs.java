// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.filestore.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstancePerformanceConfigIopsPerTbArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstancePerformanceConfigIopsPerTbArgs Empty = new InstancePerformanceConfigIopsPerTbArgs();

    /**
     * The instance max IOPS will be calculated by multiplying
     * the capacity of the instance (TB) by max_iops_per_tb,
     * and rounding to the nearest 1000. The instance max IOPS
     * will be changed dynamically based on the instance
     * capacity.
     * 
     */
    @Import(name="maxIopsPerTb")
    private @Nullable Output<Integer> maxIopsPerTb;

    /**
     * @return The instance max IOPS will be calculated by multiplying
     * the capacity of the instance (TB) by max_iops_per_tb,
     * and rounding to the nearest 1000. The instance max IOPS
     * will be changed dynamically based on the instance
     * capacity.
     * 
     */
    public Optional<Output<Integer>> maxIopsPerTb() {
        return Optional.ofNullable(this.maxIopsPerTb);
    }

    private InstancePerformanceConfigIopsPerTbArgs() {}

    private InstancePerformanceConfigIopsPerTbArgs(InstancePerformanceConfigIopsPerTbArgs $) {
        this.maxIopsPerTb = $.maxIopsPerTb;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstancePerformanceConfigIopsPerTbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstancePerformanceConfigIopsPerTbArgs $;

        public Builder() {
            $ = new InstancePerformanceConfigIopsPerTbArgs();
        }

        public Builder(InstancePerformanceConfigIopsPerTbArgs defaults) {
            $ = new InstancePerformanceConfigIopsPerTbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxIopsPerTb The instance max IOPS will be calculated by multiplying
         * the capacity of the instance (TB) by max_iops_per_tb,
         * and rounding to the nearest 1000. The instance max IOPS
         * will be changed dynamically based on the instance
         * capacity.
         * 
         * @return builder
         * 
         */
        public Builder maxIopsPerTb(@Nullable Output<Integer> maxIopsPerTb) {
            $.maxIopsPerTb = maxIopsPerTb;
            return this;
        }

        /**
         * @param maxIopsPerTb The instance max IOPS will be calculated by multiplying
         * the capacity of the instance (TB) by max_iops_per_tb,
         * and rounding to the nearest 1000. The instance max IOPS
         * will be changed dynamically based on the instance
         * capacity.
         * 
         * @return builder
         * 
         */
        public Builder maxIopsPerTb(Integer maxIopsPerTb) {
            return maxIopsPerTb(Output.of(maxIopsPerTb));
        }

        public InstancePerformanceConfigIopsPerTbArgs build() {
            return $;
        }
    }

}
