// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class TableExternalDataConfigurationAvroOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableExternalDataConfigurationAvroOptionsArgs Empty = new TableExternalDataConfigurationAvroOptionsArgs();

    /**
     * If is set to true, indicates whether\
     * to interpret logical types as the corresponding BigQuery data type
     * (for example, TIMESTAMP), instead of using the raw type (for example, INTEGER).
     * 
     */
    @Import(name="useAvroLogicalTypes", required=true)
    private Output<Boolean> useAvroLogicalTypes;

    /**
     * @return If is set to true, indicates whether\
     * to interpret logical types as the corresponding BigQuery data type
     * (for example, TIMESTAMP), instead of using the raw type (for example, INTEGER).
     * 
     */
    public Output<Boolean> useAvroLogicalTypes() {
        return this.useAvroLogicalTypes;
    }

    private TableExternalDataConfigurationAvroOptionsArgs() {}

    private TableExternalDataConfigurationAvroOptionsArgs(TableExternalDataConfigurationAvroOptionsArgs $) {
        this.useAvroLogicalTypes = $.useAvroLogicalTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableExternalDataConfigurationAvroOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableExternalDataConfigurationAvroOptionsArgs $;

        public Builder() {
            $ = new TableExternalDataConfigurationAvroOptionsArgs();
        }

        public Builder(TableExternalDataConfigurationAvroOptionsArgs defaults) {
            $ = new TableExternalDataConfigurationAvroOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param useAvroLogicalTypes If is set to true, indicates whether\
         * to interpret logical types as the corresponding BigQuery data type
         * (for example, TIMESTAMP), instead of using the raw type (for example, INTEGER).
         * 
         * @return builder
         * 
         */
        public Builder useAvroLogicalTypes(Output<Boolean> useAvroLogicalTypes) {
            $.useAvroLogicalTypes = useAvroLogicalTypes;
            return this;
        }

        /**
         * @param useAvroLogicalTypes If is set to true, indicates whether\
         * to interpret logical types as the corresponding BigQuery data type
         * (for example, TIMESTAMP), instead of using the raw type (for example, INTEGER).
         * 
         * @return builder
         * 
         */
        public Builder useAvroLogicalTypes(Boolean useAvroLogicalTypes) {
            return useAvroLogicalTypes(Output.of(useAvroLogicalTypes));
        }

        public TableExternalDataConfigurationAvroOptionsArgs build() {
            $.useAvroLogicalTypes = Objects.requireNonNull($.useAvroLogicalTypes, "expected parameter 'useAvroLogicalTypes' to be non-null");
            return $;
        }
    }

}
